quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Usability,", sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; Size enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; size()sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Text enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValueType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html:2075,Simpl,SimpleCopy,2075,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2122,clear,clear,2122,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,1,['clear'],['clear']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteStateinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_DOFsVsofa::component::playback::WriteState; d_DOFsXsofa::component::playback::WriteState; d_filenamesofa::component::playback::WriteState; d_keperiodsofa::component::playback::WriteState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::playback::WriteState; d_stopAtsofa::component::playback::WriteState; d_timesofa::component::playback::WriteState; d_writeFsofa::component::playback::WriteState; d_writeVsofa::component::playback::WriteState; d_writeXsofa::component::playback::WriteState; d_writeX0sofa::component::playb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:2083,clear,clearLoggedMessages,2083,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedras",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:4838,clear,clearBuffers,4838,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['clear'],['clearBuffers']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:4738,clear,clearBuffers,4738,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['clear'],['clearBuffers']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:4841,clear,clearBuffers,4841,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['clear'],['clearBuffers']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:4875,clear,clearBuffers,4875,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['clear'],['clearBuffers']
Usability,-creator-issues; . /feed; ; qt creator issues – SOFA. SOFA - Topic Tag: qt creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; r,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:467956,learn,learning,467956,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,"-th row. More...;  ; const VecIndex & getColsIndex () const;  ; const VecBlock & getColsValue () const;  ; void resizeBloc (Index nbBRow, Index nbBCol);  ; void compress ();  ; void swap (Matrix &m);  ; void fullRows ();  Make sure all rows have an entry even if they are empty. More...;  ; void shiftIndices (Index base);  ; const Block & block (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:11339,clear,clearRowBlock,11339,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,3,"['Clear', 'clear']","['Clear', 'clearRowBlock']"
Usability,". . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19370,clear,clearCol,19370,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['clear'],['clearCol']
Usability,". Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 3, real >::total_size = 7. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidCoord() [1/3]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; const Vec3 & ; posCenter, . const Quat & ; orient . ). inlineconstexpr . ◆ RigidCoord() [2/3]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; ). inlineconstexpr . ◆ RigidCoord() [3/3]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; const RigidCoord< 3, real2 > & ; c). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidCoord< 3, real >::clear ; (; ). inlineconstexpr . ◆ fromHomogeneous(). template<typename real > . template<typename V > . static constexpr Vec3 sofa::defaulttype::RigidCoord< 3, real >::fromHomogeneous ; (; V ; v). inlinestaticconstexpr . create a 3d vector from a homogeneous vector . ◆ fromMatrix(). template<typename real > . template<class Mat > . void sofa::defaulttype::RigidCoord< 3, real >::fromMatrix ; (; const Mat & ; m). inline . Set from the given matrix. . ◆ getCenter() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidCoord< 3, real >::getCenter ; (; ). inlineconstexpr . ◆ getCenter() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidCoord< 3, real >::getCenter ; (; ); const. inlineconstexpr . ◆ getOrientation() [1/2]. template<typename real > . constexpr Quat& sofa::defaulttype::RigidCoord< 3, real >::getOrientation ; (; ). inlineconstexpr . ◆ getOrientation() [2/2]. template<typename real > . constexpr const Quat& s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html:7089,clear,clear,7089,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,". MultiVecId ; res1, . MultiVecId ; res2 = MultiVecId::null() . ). overridevirtual . Create the system corresponding to the constraints ; Implements sofa::core::behavior::ConstraintSolver. ◆ buildSystem_matrixAssembly(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixAssembly ; (; const core::ConstraintParams * ; cParams). protected . ◆ buildSystem_matrixFree(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixFree ; (; unsigned int ; numConstraints). protected . ◆ cleanup(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ clearConstraintProblemLocks(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::clearConstraintProblemLocks ; (; ). protected . ◆ computeResidual(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::computeResidual ; (; const core::ExecParams * ; ). overridevirtual . Compute the residual in the newton iterations due to the constraints forces i.e. compute Vecid::force() += J^t lambda the result is accumulated in Vecid::force() ; Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getConstraintProblem(). ConstraintProblem * sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getConstraintProblem ; (; ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ getDx(). sofa::core::MultiVecDerivId sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getDx ; (; ); const. overridevirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:29830,clear,clearConstraintProblemLocks,29830,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['clear'],['clearConstraintProblemLocks']
Usability,. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorControlPanel::focusOn ; (; QString ; ). signal . sofaguiqtQVisitorControlPanel; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:1787,clear,clearGraph,1787,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,4,['clear'],['clearGraph']
Usability,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:1684,clear,clear,1684,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,2,['clear'],['clear']
Usability,". add this EigenBaseSparseMatrix to a BaseMatrix at the offset and multiplied by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19630,clear,clearCol,19630,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearCol']
Usability,". addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseMultiMappingElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::BaseMultiMappingElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html:1091,clear,clearErrors,1091,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html,2,['clear'],['clearErrors']
Usability,". inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient !",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20005,clear,clearCols,20005,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearCols']
Usability,". inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20370,clear,clearRow,20370,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clearRow']
Usability,". true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,float> > > sofa::gui::qt::DWClass_RigidCoord2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,double> > > sofa::gui::qt::DWClass_RigidCoord3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,float> > > sofa::gui::qt::DWClass_RigidCoord3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,double> > > sofa::gui::qt::DWClass_RigidMass2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,float> > > sofa::gui::qt::DWClass_RigidMass2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<3,double> > > sofa::gui::qt::DWClass_RigidMass3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<3,float> > > sofa::gui::qt::DWClass_RigidMass3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_SeqEdges. Creator<DataWidgetFactory, TableDataWidget< sofa::core::topology::BaseMeshTopology::SeqEdges > > sofa::gui::qt::DWClass_SeqEdges(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_SeqHexahedra. Creator<DataWidgetFactory, TableDataWidget< sofa::core::topology::BaseMeshTopology::SeqHexahedra > > sofa::gui::qt::DWClass_SeqHexahedra(""default"", true) ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:72272,Simpl,SimpleDataWidget,72272,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,". void sofa::gl::component::rendering3d::glVertex3v ; (; const double * ; d). ◆ glVertex3v() [2/2]. void sofa::gl::component::rendering3d::glVertex3v ; (; const float * ; d). ◆ init(). SOFA_GL_COMPONENT_RENDERING3D_API void sofa::gl::component::rendering3d::init ; (; ). ◆ initExternalModule(). void sofa::gl::component::rendering3d::initExternalModule ; (; ). Variable Documentation. ◆ ClipPlaneClass. int sofa::gl::component::rendering3d::ClipPlaneClass. Initial value:= core::RegisterObject(""OpenGL Clipping Plane""); .add< ClipPlane >(). ◆ DataDisplayClass. int sofa::gl::component::rendering3d::DataDisplayClass. Initial value:= core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >(). ◆ MergeVisualModelsClass. int sofa::gl::component::rendering3d::MergeVisualModelsClass. Initial value:= core::RegisterObject(""Merge several visual models""); .add< MergeVisualModels >(true). ◆ OglCylinderModelClass. int sofa::gl::component::rendering3d::OglCylinderModelClass. Initial value:= core::RegisterObject(""A simple visualization for set of cylinder.""); .add< OglCylinderModel >(). ◆ OglModelClass. int sofa::gl::component::rendering3d::OglModelClass. Initial value:= core::RegisterObject(""Generic visual model for OpenGL display""); .add< OglModel >(). ◆ OglSceneFrameClass. int sofa::gl::component::rendering3d::OglSceneFrameClass. Initial value:= core::RegisterObject(""Display a frame at the corner of the scene view""); .add< OglSceneFrame >(). ◆ PointSplatModelClass. int sofa::gl::component::rendering3d::PointSplatModelClass. Initial value:= core::RegisterObject(""A simple visualization for a cloud of points.""); .add< PointSplatModel >(); .addAlias(""PointSplat""). ◆ SlicedVolumetricModelClass. int sofa::gl::component::rendering3d::SlicedVolumetricModelClass. Initial value:= core::RegisterObject(""A simple visualization for a cloud of points.""); .add< SlicedVolumetricModel >(). sofaglcomponentrendering3d; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html:2953,simpl,simple,2953,api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html,6,['simpl'],['simple']
Usability,". ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3235,clear,clearAll,3235,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,2,['clear'],['clearAll']
Usability,. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for eac,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49595,clear,clearHexahedraAroundQuad,49595,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundQuad']
Usability,". ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BlockFullMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B & ; m . ). ◆ getSubMatrix(). template<std::size_t N, typename T > . template<class B >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17896,clear,clearRowCol,17896,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clearRowCol']
Usability,". ◆ segmentation. helper::io::Image* sofa::component::io::mesh::VoxelGridLoader::segmentation. protected . ◆ segmentationHeaderSize. sofa::core::objectmodel::RenamedData< int > sofa::component::io::mesh::VoxelGridLoader::segmentationHeaderSize. ◆ voxelSize. sofa::core::objectmodel::RenamedData< type::Vec3 > sofa::component::io::mesh::VoxelGridLoader::voxelSize. Constructor details. ◆ VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::VoxelGridLoader ; (; ). protected . ◆ ~VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::~VoxelGridLoader ; (; ). overrideprotected . Function details. ◆ addActiveDataValue(). void sofa::component::io::mesh::VoxelGridLoader::addActiveDataValue ; (; const int ; value). ◆ addBackgroundValue(). void sofa::component::io::mesh::VoxelGridLoader::addBackgroundValue ; (; const int ; value). ◆ canLoad(). bool sofa::component::io::mesh::VoxelGridLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clear(). void sofa::component::io::mesh::VoxelGridLoader::clear ; (; ). virtual . ◆ createSegmentation3DTexture(). void sofa::component::io::mesh::VoxelGridLoader::createSegmentation3DTexture ; (; unsigned char ** ; textureData, . int & ; width, . int & ; height, . int & ; depth . ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getActiveDataValue(). int sofa::component::io::mesh::VoxelGridLoader::getActiveDataValue ; (; const unsigned int ; idx = 0); const. ◆ getBackgroundValue(). int sofa::component::io::mesh::VoxelGridLoader::getBackgroundValue ; (; const unsigned int ; idx = 0); const. ◆ getData(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getData ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getDataSize(). int sofa::component::io::mesh::VoxelGridLoader::getDataSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getHexaIndicesInGrid(). type::vector< unsigned int > sofa::component::io::mesh::V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:19864,clear,clear,19864,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['clear'],['clear']
Usability,"...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3769,Simpl,SimpleDataWidget,3769,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,1,['Simpl'],['SimpleDataWidget']
Usability,"...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:3689,Simpl,SimpleDataWidget,3689,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,1,['Simpl'],['SimpleDataWidget']
Usability,"...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html:3374,clear,clearVisual,3374,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,4,['clear'],"['clear', 'clearVisual']"
Usability,"..;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5492,simpl,simply,5492,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"..;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:8861,simpl,simply,8861,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['simpl'],['simply']
Usability,".;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz)=0;  ; virtual void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &)=0;  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:2462,feedback,feedback,2462,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,1,['feedback'],['feedback']
Usability,".h>. Inheritance diagram for sofa::core::ListMappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >; void push_back (MappingMatrixAccumulator *m);  ; void remove (MappingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreListMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html:597,clear,clear,597,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html,1,['clear'],['clear']
Usability,"0)sofa::simulation::common::MechanicalOperations; addSeparateGravity(SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity())sofa::simulation::common::MechanicalOperations; baseVector2MultiVector(const linearalgebra::BaseVector *src, core::MultiVecId dest, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; bFactsofa::simulation::common::MechanicalOperations; computeAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactDf(core::MultiVecDerivId df)sofa::simulation::common::MechanicalOperations; computeContactForce(core::MultiVecDerivId result)sofa::simulation::common::MechanicalOperations; computeDf(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeDfV(core::MultiVecDerivId df, bool clear=true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:1868,clear,clear,1868,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,2,['clear'],['clear']
Usability,"2, unsigned int > >, sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >, sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >, sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >, sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >, sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >, sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >, sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >, sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >, sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering3d::ClipPlane. ◆ clearVisual(). virtual void sofa::core::visual::VisualModel::clearVisual ; (; ). inlinevirtual . clear some graphical resources (generally called before the deleteVisitor). ; Note: for more general usage you can use the cleanup visitor . ◆ drawShadow(). virtual void sofa::core::visual::VisualModel::drawShadow ; (; const VisualParams * ; vparams). inlinevirtual . Display shadow-casting surfaces. ; This method default to calling draw(). Object that do not cast any shadows, or that use a different LOD for them should reimplement it. ; Reimplemented in sofa::component::visual::VisualModelImpl. ◆ drawTransparent(). virtual void sofa::core::visual::VisualModel::drawTransparent ; (; const VisualParams * ; ). inlinevirtual . Display transparent surfaces. ; Transparent objects should use this method to get a correct display order. ; Reimplemented in sofa::component::visual::VisualTransform, sofa::gl::component::rendering3d::SlicedVolumetricModel, sofa::gl::component::rendering3d::PointSplatModel, sofa::component::visual::VisualModelImpl, and sofa::component::visual::Visual3DText. ◆ drawVisual(). void sofa::core::visual::Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:19022,clear,clear,19022,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['clear'],['clear']
Usability,"2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<Vec2d> > > > sofa::gui::qt::DWClass_mapvector2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectord. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<double> > > > sofa::gui::qt::DWClass_mapvectord(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectorf. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<float> > > > sofa::gui::qt::DWClass_mapvectorf(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_Mat22d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,double> > > sofa::gui::qt::DWClass_Mat22d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat22f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,float> > > sofa::gui::qt::DWClass_Mat22f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWCla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:67011,Simpl,SimpleDataWidget,67011,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325117,learn,learn,325117,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learn']
Usability,"3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  . Function details. ◆ add() [1/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3d & ; value . ). inlineoverride . ◆ add() [2/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3f & ; value . ). inlineoverride . ◆ add() [3/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; value . ). inlineoverride . ◆ add() [4/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . float ; value . ). inlineoverride . ◆ clear(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::clear ; (; ). inlineoverride . ◆ empty(). template<class TMatrixAccumulator > . bool sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::empty ; (; ); const. inline . ◆ getAccumulators(). template<class TMatrixAccumulator > . const InternalListMatrixAccumulator& sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::getAccumulators ; (; ); const. inline . ◆ push_back(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::push_back ; (; TMatrixAccumulator * ; m). inline . ◆ remove(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::remove ; (; TMatrixAccumulator * ; m). inline . ◆ size(). template<class TMatrixAccumulator > . InternalListMatrixAccumulator::size_type sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::size ; (; ); const. inline . sofacoreListMatrixAccumulato",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html:2139,clear,clear,2139,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,1,['clear'],['clear']
Usability,"4);  ; virtual void internalDrawQuad (const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &p4, const type::Vec3 &normal1, const type::Vec3 &normal2, const type::Vec3 &normal3, const type::Vec3 &normal4, const type::RGBAColor &c1, const type::RGBAColor &c2, const type::RGBAColor &c3, const type::RGBAColor &c4);  . Attribute details. ◆ m_fakeSphereUtil. gl::BasicShapesGL_FakeSphere<type::Vec3> sofa::gl::DrawToolGL::m_fakeSphereUtil. protected . ◆ m_sphereUtil. gl::BasicShapesGL_Sphere<type::Vec3> sofa::gl::DrawToolGL::m_sphereUtil. protected . ◆ mLightEnabled. bool sofa::gl::DrawToolGL::mLightEnabled. protected . ◆ mPolygonMode. int sofa::gl::DrawToolGL::mPolygonMode. protected . ◆ mWireFrameEnabled. bool sofa::gl::DrawToolGL::mWireFrameEnabled. protected . Constructor details. ◆ DrawToolGL(). sofa::gl::DrawToolGL::DrawToolGL ; (; ). ◆ ~DrawToolGL(). sofa::gl::DrawToolGL::~DrawToolGL ; (; ). overridevirtual . Function details. ◆ clear(). void sofa::gl::DrawToolGL::clear ; (; ). overridevirtual . Reimplemented from sofa::helper::visual::DrawTool. ◆ disableBlending(). void sofa::gl::DrawToolGL::disableBlending ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disableDepthTest(). void sofa::gl::DrawToolGL::disableDepthTest ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disableLighting(). void sofa::gl::DrawToolGL::disableLighting ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disablePolygonOffset(). void sofa::gl::DrawToolGL::disablePolygonOffset ; (; ). overridevirtual . Remove variable depth offset for polygon drawing. ; Implements sofa::helper::visual::DrawTool. ◆ draw3DText(). void sofa::gl::DrawToolGL::draw3DText ; (; const type::Vec3 & ; p, . float ; scale, . const type::RGBAColor & ; color, . const char * ; text . ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ draw3DText_Indices(). void sofa::gl::DrawToolGL::draw3DText_Indices ; (; const std::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:14054,clear,clear,14054,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,2,['clear'],['clear']
Usability,"79a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference . #include <RigidDeriv.h>. Static Public Member Functions; static const Real & v (const Block &b, int, int col);  ; static Real & v (Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static BlockTranspose transposed (const Block &b);  ; static void transpose (BlockTranspose &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const char * Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const char* sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> . s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:1137,clear,clear,1137,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,2,['clear'],['clear']
Usability,"9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< T, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType row, IndexType col);  ; static const Real & v (const Block &b, IndexType row, IndexType col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  . Function details. ◆ clear(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ split_col_index(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::split_col_index ; (; IndexType & ; index, . IndexType & ; modulo . ). inlinestatic . ◆ split_row_index(). template<class T , typename IndexTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html:1110,clear,clear,1110,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,2,['clear'],['clear']
Usability,":. [legend]; Detailed Description; template<class In, class Out>; class sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; Class allowing barycentric mapping computation on a RegularGridTopology. . Protected Attributes; type::vector< CubeData > m_map;  ; RegularGridTopology * m_fromTopology {nullptr};  ; MatrixType * m_matrixJ {nullptr};  ; bool m_updateJ {false};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperRegularGridTopology, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ;  ~BarycentricMapperRegularGridTopology () override;  ; void clear (std::size_t reserve=0) override;  ; void resize (core::State< Out > *toModel) override;  ; virtual bool isEmpty ();  ; virtual void setTopology (topology::container::grid::RegularGridTopology *_topology);  ; RegularGridTopology * getTopology ();  ; Index addPointInCube (const Index cubeIndex, const SReal *baryCoords) override;  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const BaseMatrix * getJ (int outSize, int inSize) override;  . Protected Member Functions;  BarycentricMapperRegularGridTopology (RegularGridTopology *fromTopology, core::topology::BaseMeshTopology *toTopology);  . Friends; template<class I , class O > ; std::istream & operator>> (std::istream &in, BarycentricMapperRegularGridTopology< I, O > &b);  ; template<class I , class O > ; std::ostream & operator<< (std::ostream &out, const BarycentricMapperRegularGri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html:1276,clear,clear,1276,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,1,['clear'],['clear']
Usability,"::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth)=0sofa::core::loader::VoxelLoaderpure virtual; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:2333,clear,clearLoggedMessages,2333,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:1976,clear,clearLoggedMessages,1976,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,2,['clear'],['clearLoggedMessages']
Usability,"::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48366,clear,clear,48366,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,"::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19452,clear,clearCol,19452,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['clear'],['clearCol']
Usability,"::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, I",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4840,clear,clearCol,4840,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,2,['clear'],['clearCol']
Usability,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_dampingRatiosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularBiquadrat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html:5637,clear,clearLoggedMessages,5637,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::analyze::Distances< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDistanceMap(VecCoord beginElts=VecCoord(), const double &distMax=0)sofa::component::engine::analyze::Distances< DataTypes >; Coord typedefsofa::component::engine::analyze::Distances< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::analyze::Distances< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distanceTypesofa::component::engine::analyze::Distances< DataTypes >; d_harmonicMaxValuesofa::component::engine::analyze::Distances< DataTypes >; d_initTargetsofa::component::engine::analyze::Distances< DataTypes >; d_initTargetStepsofa::component::engine::analyze::Distances< DataTypes >; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:3028,clear,clearLoggedMessages,3028,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::PairBoxROI< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::PairBoxROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::PairBoxROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html:2957,clear,clearLoggedMessages,2957,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_force. protected . ◆ _timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintProblem::_timer. protected . ◆ _tol. SReal sofa::component::animationloop::ConstraintProblem::_tol. protected . ◆ _W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::animationloop::ConstraintProblem::_W. protected . Constructor details. ◆ ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::ConstraintProblem ; (; bool ; printLog = false). ◆ ~ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::animationloop::ConstraintProblem::clear ; (; int ; dim, . const SReal & ; tol . ). virtual . ◆ gaussSeidelConstraintTimed(). void sofa::component::animationloop::ConstraintProblem::gaussSeidelConstraintTimed ; (; SReal & ; timeout, . int ; numItMax . ). ◆ getConstraintResolutions(). std::vector<core::behavior::ConstraintResolution*>& sofa::component::animationloop::ConstraintProblem::getConstraintResolutions ; (; void ; ). inline . ◆ getD(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getD ; (; void ; ). inline . ◆ getdF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getdF ; (; void ; ). inline . ◆ getDfree(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getDfree ; (; void ; ). inline . ◆ getF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getF ; (; void ; ). inline . ◆ getSize(). int sofa::component::animationloop::Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:2830,clear,clear,2830,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,1,['clear'],['clear']
Usability,"::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:69819,Simpl,SimpleDataWidget,69819,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:4682,clear,clearConstraints,4682,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:4682,clear,clearConstraints,4682,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:4704,clear,clearConstraints,4704,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"::GearSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getAngleAroundAxis(). template<class DataTypes > . GearSpringForceField<DataTypes>::Real sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getAngleAroundAxis ; (; Coord ; p1, . Coord ; p2, . unsigned int ; axis . ). inline . ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getObject2 ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:29610,clear,clear,29610,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['clear'],['clear']
Usability,"::Key, QAction* > sofa::gui::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI(). sofa::gui::qt::RealGUI::~RealGUI ; (; ). override . Function details. ◆ activateNode. void sofa::gui::qt::RealGUI::activateNode ; (; sofa::simulation::Node * ; node, . bool ; activate . ). virtualslot . ◆ appendToDataLogFile. void sofa::gui::qt::RealGUI::appendToDataLogFile ; (; QString ; dataModifiedString). protectedslot . ◆ centerWindow(). void sofa::gui::qt::RealGUI::centerWindow ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ changeViewer. void sofa::gui::qt::RealGUI::changeViewer ; (; ). protectedvirtualslot . Allow to dynamically change viewer. Called when click on another viewer in GUI Qt viewer list (see viewerMap). TODO: find a better way to propagate the argument when we construct the viewer . ◆ clear. void sofa::gui::qt::RealGUI::clear ; (; ). virtualslot . ◆ closeGUI(). int sofa::gui::qt::RealGUI::closeGUI ; (; ). overridevirtual . Close the GUI. ; Implements sofa::gui::common::BaseGUI. ◆ CreateApplication(). void sofa::gui::qt::RealGUI::CreateApplication ; (; int ; _argc = 0, . char ** ; _argv = nullptr . ). staticprotected . ◆ createDisplayFlags(). void sofa::gui::qt::RealGUI::createDisplayFlags ; (; Node::SPtr ; root). protected . ◆ CreateGUI(). BaseGUI * sofa::gui::qt::RealGUI::CreateGUI ; (; const char * ; name, . sofa::simulation::Node::SPtr ; groot = nullptr, . const char * ; filename = nullptr . ). static . ◆ createViewer(). void sofa::gui::qt::RealGUI::createViewer ; (; const char * ; _viewerName, . bool ; _updateViewerList = false . ). virtual . create a viewer according to the argument key Notethe viewerMap have to be initialize at least once before ; _updateViewerList is used only if you want to reactualise the viewerMap in the GUI TODO: find a better way to propag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:13044,clear,clear,13044,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,2,['clear'],['clear']
Usability,"::MapIndices< T >inline; applyIndex(V &v, const MapIndex &m)sofa::component::engine::transform::MapIndices< T >inline; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html:3053,clear,clearLoggedMessages,3053,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:2456,clear,clearLoggedMessages,2456,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,2,['clear'],['clearLoggedMessages']
Usability,"::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const double *mat, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const type::Vec3 &ext, const double &radius);  ; static void draw (const type::Vec3 &center, const type::Vec3 &ext, const double &r1, const double &r2);  ; static void clear ();  . Constructor details. ◆ Axis() [1/8]. sofa::gl::Axis::Axis ; (; SReal ; len = 1.0_sreal). ◆ Axis() [2/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; len). ◆ Axis() [3/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . const type::Vec3 & ; length . ). ◆ Axis() [4/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . const type::Vec3 & ; length . ). ◆ Axis() [5/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . const type::Vec3 & ; length . ). ◆ Axis() [6/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Axis() [7/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html:4811,clear,clear,4811,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,2,['clear'],['clear']
Usability,"::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeDerivateHermiteCoefs(const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; computeHermiteCoefs(const Real u, Real &H00, Real &H10, Real &H01, Real &H11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:2968,clear,clearConstraints,2968,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37401,clear,clearEdgesAroundVertex,37401,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"::core::objectmodel::Base; buildGroupsOfComponentAssociatedToMechanicalStates(std::map< PairMechanicalStates, GroupOfComponentsAssociatedToAPairOfMechanicalStates > &groups)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::loggin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html:3644,clear,clearSystem,3644,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,1,['clear'],['clearSystem']
Usability,"::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; pause()sofa::component::sceneutility::PauseAnimationvirtual; PauseAnimation()sofa::component::sceneutility::PauseAnimationprotected; PauseAnimationOnEvent()sofa::component::sceneutility::PauseAnimationOnEventprotected; pausedsofa::component::sceneutility::PauseAnimationOnEvent; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstancia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html:8251,pause,pause,8251,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,1,['pause'],['pause']
Usability,"::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; pause()sofa::component::sceneutility::PauseAnimationvirtual; PauseAnimation()sofa::component::sceneutility::PauseAnimationprotected; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html:8165,pause,pause,8165,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,1,['pause'],['pause']
Usability,"::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DiagonalMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; bool load (const char *filename);  ; void clear ();  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; void doUpdateInternal () override;  Implementation of the internal update. More...;  ; sofa::geometry::ElementType getMassTopologyType () const;  ; Real getMassDensity () const;  ; template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > ; SReal getTotalMass () const;  ; std::size_t getMassCount ();  ; void printMass ();  Print key mass information (totalMass, vertexMass and massDensity) More...;  ; void addMass (const MassType &mass);  ; void resize (int vsize);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:5915,clear,clear,5915,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['clear'],['clear']
Usability,"::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; virtual sofa::gl::FrameBufferObject & getFBO ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:5000,clear,clearVisual,5000,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,4,['clear'],"['clear', 'clearVisual']"
Usability,"::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorMapsofa::gl::component::rendering3d::DataDisplay; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; computeNormals()sofa::gl::component::rendering3d::DataDisplayprotected; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_currentMaxsofa::gl::component::rendering3d::DataDisplay; d_currentMinsofa::gl::component::rendering3d::DataDisplay; d_enable",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:2822,clear,clearVisual,2822,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,1,['clear'],['clearVisual']
Usability,"::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::OglCylind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:2832,clear,clearVisual,2832,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['clear'],['clearVisual']
Usability,"::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:2567,clear,clearVisual,2567,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['clear'],['clearVisual']
Usability,"::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerPassvirtual; dr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:2573,clear,clearLoggedMessages,2573,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,2,['clear'],['clearLoggedMessages']
Usability,"::d_shadowsEnabled. Enable Shadow in the scene. (default=0) . ◆ d_softShadowsEnabled. Data<bool> sofa::gl::component::shader::LightManager::d_softShadowsEnabled. If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) . Constructor details. ◆ LightManager(). sofa::gl::component::shader::LightManager::LightManager ; (; ). protected . ◆ ~LightManager(). sofa::gl::component::shader::LightManager::~LightManager ; (; ). overrideprotected . Function details. ◆ bwdDraw(). void sofa::gl::component::shader::LightManager::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ bwdInit(). void sofa::gl::component::shader::LightManager::bwdInit ; (; ). overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). void sofa::gl::component::shader::LightManager::clear ; (; ). Remove all lights of the LightManager. . ◆ doInitVisual(). void sofa::gl::component::shader::LightManager::doInitVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ draw(). void sofa::gl::component::shader::LightManager::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ drawScene(). bool sofa::gl::component::shader::LightManager::drawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called instead of rendering the scene. ; Return true if this object actually did the rendering, or false if it wasn't done. ; Reimplemented from sofa::core::visual::VisualManager. ◆ fwdDraw(). void sofa::gl::component::shader::LightManager::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:18149,clear,clear,18149,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['clear'],['clear']
Usability,"::gl::component::shader::LightManager::d_shadowsEnabled. Enable Shadow in the scene. (default=0) . ◆ d_softShadowsEnabled. Data<bool> sofa::gl::component::shader::LightManager::d_softShadowsEnabled. If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) . Constructor details. ◆ LightManager(). sofa::gl::component::shader::LightManager::LightManager ; (; ). protected . ◆ ~LightManager(). sofa::gl::component::shader::LightManager::~LightManager ; (; ). overrideprotected . Function details. ◆ bwdDraw(). void sofa::gl::component::shader::LightManager::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ bwdInit(). void sofa::gl::component::shader::LightManager::bwdInit ; (; ). overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). void sofa::gl::component::shader::LightManager::clear ; (; ). Remove all lights of the LightManager. . ◆ doInitVisual(). void sofa::gl::component::shader::LightManager::doInitVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ draw(). void sofa::gl::component::shader::LightManager::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ drawScene(). bool sofa::gl::component::shader::LightManager::drawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called instead of rendering the scene. ; Return true if this object actually did the rendering, or false if it wasn't done. ; Reimplemented from sofa::core::visual::VisualManager. ◆ fwdDraw(). void sofa::gl::component::shader::LightManager::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called be",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:18092,clear,clear,18092,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['clear'],['clear']
Usability,"::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1399,Simpl,SimpleDataWidget,1399,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,1,['Simpl'],['SimpleDataWidget']
Usability,"::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quatd(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,float> > > sofa::gui::qt::DWClass_RigidCoord2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,double> > > sofa::gui::qt::DWClass_RigidCoord3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,float> > > sofa::gui::qt::DWClass_RigidCoord3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2d. C",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:71203,Simpl,SimpleDataWidget,71203,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::StringMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:4830,clear,clearLoggedMessages,4830,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::lagrangian::solver::GenericConstraintSolvervirtual; buildSystem_matrixAssembly(const core::ConstraintParams *cParams)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystem_matrixFree(unsigned int numConstraints)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearConstraintProblemLocks()sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeGraphssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; computeResidual(const core::ExecParams *) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CP_BUFFER_SIZEsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotectedstatic; create(T *, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:3615,clear,clearConstraintCorrections,3615,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['clear'],['clearConstraintCorrections']
Usability,"::linearalgebra::BaseMatrix. ◆ addToBaseMatrix(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::addToBaseMatrix ; (; BaseMatrix * ; matrix, . SReal ; factor, . Index ; offset . ); const. inline . add this EigenBaseSparseMatrix to a BaseMatrix at the offset and multiplied by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19401,clear,clear,19401,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clear']
Usability,"::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ ele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19259,clear,clear,19259,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['clear'],['clear']
Usability,"::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearRowCol(). virtual void sofa::linearalgebra::BaseMatrix::clearRowCol ; (; Index ; i). inlinevirtual . Reset the value of both row and column i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFull",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:38260,clear,clearRowCol,38260,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearRowCol']
Usability,"::logFactoryRegister ; (; const std::string & ; baseclass, . const std::string & ; classname, . TKey ; key, . bool ; multi . ). Log classes registered in the factory. . ◆ logFactoryRegister< std::string >(). template SOFA_HELPER_API void sofa::helper::logFactoryRegister< std::string > ; (; const std::string & ; baseclass, . const std::string & ; classname, . std::string ; key, . bool ; multi . ). ◆ narrow_cast(). template<class T , class U > . constexpr T sofa::helper::narrow_cast ; (; U && ; u). constexpr . Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) ; Template Parameters. TTarget type ; USource type . Parameters. uValue to cast . ReturnsThe value converted to the target type . ◆ narrow_cast_check(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_check ; (; U ; u). constexpr . Explicit narrow conversion checking that the value is unchanged by the cast. If the value changed, an exception is thrown Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) . ◆ narrow_cast_nocheck(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_nocheck ; (; U && ; u). constexprnoexcept . Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) ; Template Parameters. TTarget type ; USource type . Parameters. uValue to cast . ReturnsThe value converted to the target type . ◆ narrowString(). SOFA_HELPER_API std::string sofa::helper::narrowString ; (; const std::wstring & ; ws). Convert a wstring to a string. ; ReturnsThe converted string on success, or an empty string on failure. . ◆ nlcp_gaussseidel(). SOFA_HELPER_API int sofa::helper::nlcp_gaussseidel ; (; int ; dim, . SReal * ; dfree, . SReal ** ; W, . SReal * ; f, . SReal ; mu, . SReal ; tol, . int ; numItMax, . bool ; useInitialF, . bool ; verbose, . SReal ; minW, . SReal ; maxF, . std::vector< SReal > * ; residuals, . std::vector< SReal > * ; violations . ). ◆ n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:30790,Guid,Guidelines,30790,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['Guid'],['Guidelines']
Usability,"::mechanicalload::SphereForceField< DataTypes >; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::SphereForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::SphereForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::SphereForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; contactssofa::component::mechanicalload::SphereForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bilateralsofa::component::mechanicalload::SphereForceField< DataTypes >; d_colorsofa::component::mechanicalload::SphereForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_contactssofa::component::mechanicalload::SphereForceField< DataTypes >protected; d_dampingsofa::component::mechanicalload::SphereForceField< DataTypes >; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:4747,clear,clearLoggedMessages,4747,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSpher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:2298,clear,clearLoggedMessages,2298,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForce(const VecDeriv &v, const EdgeInformation &einfo, const typename EdgeInformation::Spring &spring, Coord direction, Real distance)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeLocalJacobian(EdgeInformation &einfo, const Coord &direction, const ForceOutput &force)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeSpringForce(VecDeriv &f, const VecCoord &x, const VecDeriv &v, EdgeInformation &einfo, typename EdgeInformation::Spring &spring)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:5754,clear,clearLoggedMessages,5754,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(unsigned int stiffnessIndex, unsigned int springIndex)sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_computeZeroLen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:4190,clear,clearLoggedMessages,4190,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::Qua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4373,clear,clearEdgesInQuad,4373,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearEdgesInQuad']
Usability,"::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_firstOrdersofa::component::odesolver::backward::EulerImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::EulerImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::EulerImplicitSolver; d_solveConstraintsofa::component::odesolver::backward::EulerImplicitSolver; d_threadSafeVisitorsofa::component::odesolver::back",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html:1960,clear,clearLoggedMessages,1960,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4021,clear,clearEdges,4021,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes for display in abscissa. . ◆ m_scaleY. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleY. protected . Scale parameter to apply between nodes for display in ordinate. . Constructor details. ◆ SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::SofaWindowDataGraph ; (; QWidget * ; parent, . sofa::simulation::Node * ; scene . ). Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. . ◆ ~SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::~SofaWindowDataGraph ; (; ). Function details. ◆ addSimulationObject(). size_t sofa::gui::qt::SofaWindowDataGraph::addSimulationObject ; (; sofa::core::objectmodel::BaseObject * ; bObject). protected . Internal method to create a Node for this sofa BaseObject. . ◆ clearNodeData(). void sofa::gui::qt::SofaWindowDataGraph::clearNodeData ; (; ). protected . Internal method to clear the graph structures. . ◆ connectNodeData(). void sofa::gui::qt::SofaWindowDataGraph::connectNodeData ; (; ). protected . Internal method to create all connection between component on the graph. . ◆ parseSimulationNode(). void sofa::gui::qt::SofaWindowDataGraph::parseSimulationNode ; (; sofa::simulation::Node * ; node, . int ; posX = 0 . ). protected . Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. ; See alsoaddSimulationObject for each compoenent then will iterate on children nodes. . ◆ resetNodeGraph(). void sofa::gui::qt::SofaWindowDataGraph::resetNodeGraph ; (; sofa::simulation::Node * ; scene). Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. . sofaguiqtSofaWindowDataGraph; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:4364,clear,clearNodeData,4364,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,6,['clear'],"['clear', 'clearNodeData']"
Usability,"::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ paused. bool sofa::component::sceneutility::PauseAnimationOnEvent::paused. Constructor details. ◆ PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::PauseAnimationOnEvent ; (; ). protected . ◆ ~PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::~PauseAnimationOnEvent ; (; ). overrideprotected . Function details. ◆ handleEvent(). void sofa::component::sceneutility::PauseAnimationOnEvent::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::sceneutility::PauseAnimationOnEvent::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::sceneutility::PauseAnimation. ◆ isPaused(). bool sofa::component::sceneutility::PauseAnimationOnEvent::isPaused ; (; ). overridevirtual . Implements sofa::component::scene",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:13407,pause,paused,13407,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['paused']
Usability,"::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths, . const fileKeysMap & ; iniFilesAndKeys . ). Initialize the set of paths using the environment variable specified by the parameter envVar, the relative paths specified by the parameter paths and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ ~FileRepository(). sofa::helper::system::FileRepository::~FileRepository ; (; ). Function details. ◆ addFirstPath(). void sofa::helper::system::FileRepository::addFirstPath ; (; const std::string & ; path). Adds a path to the front of the set of paths. . ◆ addLastPath(). void sofa::helper::system::FileRepository::addLastPath ; (; const std::string & ; path). Adds a path to the back of the set of paths. . ◆ cleanPath(). std::string sofa::helper::system::FileRepository::cleanPath ; (; const std::string & ; path). static . Replaces every occurrences of ""//"" by ""/"" . ◆ clear(). void sofa::helper::system::FileRepository::clear ; (; ). Remove all known paths. . ◆ displayPaths(). void sofa::helper::system::FileRepository::displayPaths ; (; ); const. inline . ◆ entrySeparator(). static char sofa::helper::system::FileRepository::entrySeparator ; (; ). inlinestatic . OS-dependant character separating entries in list of paths. . ◆ findFile(). bool sofa::helper::system::FileRepository::findFile ; (; std::string & ; filename, . const std::string & ; basedir = """", . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basediroverride current directory (optional) ; filenamerequested file as input, resolved file path as output . Returnstrue if the file was found in one of the directories, false otherwise . ◆ findFileFromFile(). bool sofa::helper::system::FileRepository::findFileFromFile ; (; std::string & ; filename, . const std::string & ; basefile, . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basefileove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:6673,clear,clear,6673,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,2,['clear'],['clear']
Usability,"::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . Constructor details. ◆ FixedTranslationProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::FixedTranslationProjectiveConstraint. protected . ◆ ~FixedTranslationProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::~FixedTranslationProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::addIndex ; (; Index ; index). ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::clearIndices. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:22818,clear,clearIndices,22818,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d::ClipPlanevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::gl::component::rendering3d::ClipPlanevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; ClipPlane()sofa::gl::component::rendering3d::ClipPlaneprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::Vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:2628,clear,clearVisual,2628,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['clear'],['clearVisual']
Usability,":AbstractTypeInfo. ◆ Scalar(). bool sofa::defaulttype::NameOnlyTypeInfo::Scalar ; (; ); const. inlineoverridevirtual . True iff this type uses scalar values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). void sofa::defaulttype::NameOnlyTypeInfo::setIntegerValue ; (; void * ; , . Index ; , . long long ;  . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). void sofa::defaulttype::NameOnlyTypeInfo::setScalarValue ; (; void * ; , . Index ; , . double ;  . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). bool sofa::defaulttype::NameOnlyTypeInfo::setSize ; (; void * ; , . sofa::Size ;  . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NameOnlyTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to itera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html:7939,clear,cleared,7939,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,1,['clear'],['cleared']
Usability,":Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_spring",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html:4633,clear,clear,4633,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,1,['clear'],['clear']
Usability,":Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::CollisionGroupManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearGroups(objectmodel::BaseContext *scene)=0sofa::core::collision::CollisionGroupManagerpure virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createGroups(objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0sofa::core::collision::CollisionGroupManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html:2009,clear,clearGroups,2009,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,1,['clear'],['clearGroups']
Usability,":BaseForceField. ◆ checkMassDensity(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkMassDensity. virtual . ◆ checkTopology(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTopology. protected . ◆ checkTotalMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMass. virtual . ◆ checkTotalMassInit(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMassInit. virtual . ◆ checkVertexMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkVertexMass. virtual . ◆ clear(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::clear. ◆ computeVertexMass(). template<class DataTypes , class GeometricalTypes > . DiagonalMass< DataTypes, GeometricalTypes >::Real sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::computeVertexMass ; (; Real ; density). protected . Compute the vertexMass using input density and return the corresponding full mass. . ◆ doUpdateInternal(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::doUpdateInternal. overridevirtual . Implementation of the internal update. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [1/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::draw ; (; const core::visual::VisualParams * ; ). virtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [2/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid2Typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:37815,clear,clear,37815,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['clear'],['clear']
Usability,":Decompose< Real >::polarDecomposition ; (; const type::Mat< 3, 2, Real > & ; M, . type::Mat< 3, 2, Real > & ; Q, . type::Mat< 2, 2, Real > & ; S . ). static . Stable Polar Decomposition of 3x2 matrix based on a SVD using Q=UVt where M=UsV . ◆ polarDecomposition() [3/4]. template<class Real > . Real sofa::helper::Decompose< Real >::polarDecomposition ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q . ). static . The same as previous except we do not care about S . ◆ polarDecomposition() [4/4]. template<class Real > . Real sofa::helper::Decompose< Real >::polarDecomposition ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q, . type::Mat< 3, 3, Real > & ; S . ). static . Polar Decomposition of 3x3 matrix, M = QS. See Nicholas Higham and Robert S. Schreiber, Fast Polar Decomposition of An Arbitrary Matrix, Technical Report 88-942, October 1988, Department of Computer Science, Cornell University.; original code by Ken Shoemake, 1993 version simplified by Jernej Barbič imported from Vega . ◆ polarDecomposition_stable() [1/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 2, 2, Real > & ; M, . type::Mat< 2, 2, Real > & ; Q . ). static . ◆ polarDecomposition_stable() [2/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 2, 2, Real > & ; M, . type::Mat< 2, 2, Real > & ; Q, . type::Mat< 2, 2, Real > & ; S . ). static . ◆ polarDecomposition_stable() [3/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q . ). static . ◆ polarDecomposition_stable() [4/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q, . type::Mat< 3, 3, Real > & ; S . ). static . Stable Polar Decomposition of 3x3 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html:12425,simpl,simplified,12425,api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,2,['simpl'],['simplified']
Usability,":FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DistanceFromTargetMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void createTarget (unsigned index, const InCoord &position, Real distance);  Add a target with a desired distance. More...;  ; void updateTarget (unsigned index, const InCoord &position);  Update the position of a target. More...;  ; void updateTarget (unsigned index, SReal x, SReal y, SReal z) override;  ; void clear ();  Remove all targets. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:5708,clear,clear,5708,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['clear'],['clear']
Usability,:HexahedronSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:48786,clear,clear,48786,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,":LinearVelocityProjectiveConstraint. protected . ◆ ~LinearVelocityProjectiveConstraint(). template<class TDataTypes > . sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::~LinearVelocityProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addIndex ; (; Index ; index). ◆ addKeyVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addKeyVelocity ; (; Real ; time, . Deriv ; movement . ). add a new key movement Parameters. time: the simulation time you want to set a movement (in sec) ; movement: the corresponding motion for instance, addKeyMovement(1.0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:23253,clear,clearIndices,23253,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearIndices']
Usability,":PointProjectiveConstraint< DataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html:3009,clear,clearConstraints,3009,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,":SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::Tet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4551,clear,clearBorderElementLists,4551,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearBorderElementLists']
Usability,":SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(StiffnessMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; remove(StiffnessMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator-members.html:2067,clear,clear,2067,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,":Tag >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; Size enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; size()sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Text enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValidInfo enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValueType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ValueTypeInfo typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ZeroConstructor enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html:2123,Simpl,SimpleCopy,2123,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,:TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50683,clear,clearTetrahedra,50683,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedra']
Usability,":Transform ; (; const SpatialVector< TReal > & ; v). Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) ; Define as a given SpatialVector integrated during one second. The spatial vector is given in parent coordinates.; Define child as a given SpatialVector<TReal> integrated during one second, starting from the parent (used for time integration). The spatial vector is given in parent coordinates. . Function details. ◆ backProjectPoint(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectPoint ; (; const Vec & ; pointInParent); const. Project point from parent coordinates to this coordinates. . ◆ backProjectVector(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectVector ; (; const Vec & ; vectorInParent); const. Projected a vector (i.e. a direction or a displacement) from parent coordinates to child coordinates. . ◆ clear(). template<class TReal > . void sofa::type::Transform< TReal >::clear. Reset this to identity. . ◆ CreateSpatialVector(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::CreateSpatialVector. Project a spatial vector from child to parent TODO One should handle differently the transformation of a twist and a wrench ! This applying the adjoint to velocities or its transpose to wrench : V_parent = Ad . V_child or W_child = Ad^T . W_parent To project a wrench in the child frame to the parent frame you need to do parent_wrench = this->inversed * child_wrench (this doc needs to be douv-ble checked !) . ◆ DTrans(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::DTrans. ◆ getAdjointMatrix(). template<class TReal > . auto sofa::type::Transform< TReal >::getAdjointMatrix. Adjoint matrix to the transform This matrix transports velocities in twist coordinates from the child frame to the parent frame. Its inverse transpose does the same for the wrenches. . ◆ getOrientation(). templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:7444,clear,clear,7444,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,2,['clear'],['clear']
Usability,":VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backupFlagssofa::component::visual::VisualStyleprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *) overridesofa::component::visual::VisualStylevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displayFlagssofa::component::visual::VisualStyle; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DisplayFlags typedefsofa::component::visual::VisualStyle; displayFlagssofa::component::visual::VisualStyle; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:2473,clear,clearLoggedMessages,2473,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['clear'],['clearLoggedMessages']
Usability,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:3296,clear,clearLoggedMessages,3296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,2,['clear'],['clearLoggedMessages']
Usability,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:3296,clear,clearLoggedMessages,3296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,2,['clear'],['clearLoggedMessages']
Usability,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:3296,clear,clearLoggedMessages,3296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,2,['clear'],['clearLoggedMessages']
Usability,":VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:4076,clear,clearVisual,4076,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,6,['clear'],"['clear', 'clearVisual']"
Usability,":add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20142,clear,clearCol,20142,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clearCol']
Usability,":algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doesSelfCollide(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualPar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:2783,clear,clearLoggedMessages,2783,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,1,['clear'],['clearLoggedMessages']
Usability,":behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< TDataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::ForceField< TDataTypes >; Deriv typedefsofa::core::behavior::ForceField< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:4411,clear,clearLoggedMessages,4411,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,":behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; calcRestRotations()sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >protected; calcRestRotations()sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >protected; calcRestRotations()sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constraintReleasedsofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintFactorsofa::component::constraint::projective::AttachProjectiveConstraint< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html:3528,clear,clearLoggedMessages,3528,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,":behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:3272,clear,clearConstraints,3272,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,":behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constrainedPointssofa::component::constraint::projective::PatchTestMovementProjecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:2983,clear,clearConstraints,2983,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,":buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::PairInteractionConstraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; ConstDeriv typedefsofa::core::behavior::BaseConstraint; ConstraintBlockInfo typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; constraintIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; contactssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; contactsStatussofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; Coord typed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html:3718,clear,clearLoggedMessages,3718,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,:component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40367,clear,clearQuads,40367,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuads']
Usability,":component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::container::dynamic::Trian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4790,clear,clearTrianglesAroundEdge,4790,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundEdge']
Usability,":constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [2/2]. template<class DataTypes > . void s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27534,clear,clearIndices,27534,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,":core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord typedefsofa::component::visual::VisualModelImpl; coun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:3577,clear,clearVisual,3577,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,2,['clear'],['clearVisual']
Usability,":core::behavior::ProjectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; QuatR typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; Real typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; reinit() overridesofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html:15117,clear,clear,15117,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,1,['clear'],['clear']
Usability,":core::behavior::StiffnessMatrixAccumulator Member List . This is the complete list of members for sofa::core::behavior::StiffnessMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:15:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator-members.html:1622,clear,clear,1622,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,":core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSequence< T, strong >; const_reverse_iterator typedefsofa::simulation::NodeSequence< T, strong >; Container typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html:1290,clear,clear,1290,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,2,['clear'],['clear']
Usability,":lagrangian::solver::ConstraintSolverImplprotected; buildSystem(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::LCPConstraintSolvervirtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; constraintGroupssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_build_lcpsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_constraintForcessofa::component::const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html:3416,clear,clearLoggedMessages,3416,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,":linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5135,clear,clearCol,5135,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearCol']
Usability,":linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21483,clear,clearColBlock,21483,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['clear'],['clearColBlock']
Usability,":linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ end() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ mul() [1/2]. template<class Real > . void sofa::linearalgebra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19809,clear,clearRowCol,19809,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['clear'],['clearRowCol']
Usability,":linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::core::behavior::ApplyConstraintCompat, and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:34696,clear,clear,34696,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clear']
Usability,":objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkInput()sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >protected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_curveEdgessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_curveVerticessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_directionsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedEdgessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedQuadssofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html:2829,clear,clearLoggedMessages,2829,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,1,['clear'],['clearLoggedMessages']
Usability,":objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; Camera()sofa::component::visual::Cameraprotected; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html:2262,clear,clearLoggedMessages,2262,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,":string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4522,simpl,simpleapi,4522,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['simpl'],['simpleapi']
Usability,:topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This function is only called if the EdgesInTriangle array is required. m_edgesInTriangle[i] contains the 3 indices of the 3 edges composing the ith triangle. . ◆ createElementsOnBorder(). void sofa::component::topology::contai,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41784,clear,clearTrianglesAroundEdge,41784,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTrianglesAroundEdge']
Usability,":vector< InRootDataVecDeriv * > &dataVecOutRootForce, const type::vector< const OutDataVecDeriv * > &dataVecInForce) override;  ; void applyDJT (const core::MechanicalParams *mparams, core::MultiVecDerivId inForce, core::ConstMultiVecDerivId outForce) override;  ; void applyJT (InMatrixDeriv &out, const OutMatrixDeriv &in, InRootMatrixDeriv *outroot);  ; void applyJT (const core::ConstraintParams *, const type::vector< InDataMatrixDeriv * > &dataMatOutConst, const type::vector< InRootDataMatrixDeriv * > &dataMatOutRootConst, const type::vector< const OutDataMatrixDeriv * > &dataMatInConst) override;  ; void recomputeRigidMass ();  MAP the mass: this function recompute the rigid mass (gravity center position and inertia) of the object based on its deformed shape. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  ; void clear (int reserve=0);  ; void setRepartition (unsigned int value);  ; void setRepartition (sofa::type::vector< unsigned int > values);  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  DeformableOnRigidFrameMapping ();  ; virtual ~DeformableOnRigidFrameMapping ();  . Attribute details. ◆ d_globalToLocalCoords. template<class TIn , class TInRoot , class TOut > . Data< bool > sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::d_globalToLocalCoords. are the output DOFs initially expressed in global coordinates . ◆ d_index. template<class TIn , class TInRoot , class TOut > . Data<unsigned int> sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::d_index. input DOF index . ◆ d_indexFromEnd. template<class TIn , class TInRoot , class TOut > . Data< bool > sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::d_indexFromEnd. in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html:4044,clear,clear,4044,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,1,['clear'],['clear']
Usability,":visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:3260,clear,clearLoggedMessages,3260,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,2,['clear'],['clearLoggedMessages']
Usability,"; ""default"" ; , . true ;  . ). ◆ DWClass_TagSet. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > sofa::gui::qt::DWClass_TagSet(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Tetrahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > sofa::gui::qt::DWClass_Vec1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,unsigned int> > > sofa::gui::qt::DWClass_Vec1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,double> > > sofa::gui::qt::DWClass_Vec2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,float> > > sofa::gui::qt::DWClass_Vec2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,int> > > sofa::gui::qt::DWClass_Vec2i(""default"", tru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:77419,Simpl,SimpleDataWidget,77419,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"; ""default"" ; , . true ;  . ). ◆ DWClass_string. Creator<DataWidgetFactory, SimpleDataWidget<std::string> > sofa::gui::qt::DWClass_string(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_TagSet. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > sofa::gui::qt::DWClass_TagSet(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Tetrahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > sofa::gui::qt::DWClass_Vec1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,unsigned int> > > sofa::gui::qt::DWClass_Vec1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,double> > > sofa::gui::qt::DWClass_Vec2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,float> > > sofa::gui::qt::DWClass_Vec2f(""default"", tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:77263,Simpl,SimpleDataWidget,77263,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each hexahedron. ; This function is only called if the EdgesInHexahedron array is required. m_edgesInHexahedron[i] contains the 12 indices of the 12 edges of each ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49754,clear,clearHexahedraAroundVertex,49754,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundVertex']
Usability,"; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27610,clear,clearKeyMovements,27610,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A dark blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the pointed class or struct is accessible. . A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labelled with the template parameters of the instance. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html:1390,undo,undocumented,1390,api/master/sofa/html/graph_legend.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html,2,['undo'],['undocumented']
Usability,"; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; createDefaultSprings()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; createEdgeInformation(Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::sp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html:4124,clear,clear,4124,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,1,['clear'],['clear']
Usability,"; Block typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_originsofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html:3410,clear,clearLoggedMessages,3410,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,4 > > > DWClass_PolynomialLD4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,3 > > > DWClass_PolynomialLD3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,2 > > > DWClass_PolynomialLD2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,1 > > > DWClass_PolynomialLD1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, float > > > DWClass_Mat22f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, double > > > DWClass_Mat22d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, float > > > DWClass_Mat23f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, double > > > DWClass_Mat23d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, float > > > DWClass_Mat33f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, double > > > DWClass_Mat33d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, float > > > DWClass_Mat34f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, double > > > DWClass_Mat34d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 4, 4, float > > > DWClass_Mat44f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 4, 4, double > > > DWClass_Mat44d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 6, 6, float > > > DWClass_Mat66f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 6, 6, double > > > DWClass_Mat66d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > DWClass_TagSet (""default"", true);  ; Creator< DataWidgetFactory, RadioDataWidget > DWClass_OptionsGroup",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:29138,Simpl,SimpleDataWidget,29138,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each qu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40328,clear,clearEdgesInQuad,40328,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearEdgesInQuad']
Usability,; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the arr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50987,clear,clearTetrahedraAroundTriangle,50987,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundTriangle']
Usability,"; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48331,clear,clear,48331,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-to-make-the-size-or-type-of-feedback-in-the-two-object-is-not-the-same; ; SOFA - Topic: [SOLVED] HOW to make the size or type of feedback in the two object is not the same?. /how-to-map-pointdata-in-a-datadisplay-using-c; ; SOFA - Topic: How to map pointData in a DataDisplay using C++. /how-to-mark-a-node-of-a-mesh; ; SOFA - Topic: [SOLVED] How to mark a node of a mesh?. /how-to-model-a-curved-slack-soft-rope-at-the-start; ; SOFA - Topic: How to model a curved slack soft rope at the start?. /how-to-model-a-deformable-object-with-a-deep-crevice; . /embed; ; SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. /how-to-modify-and-object-in-the-scene-and-restart-simulation; ; SOFA - Topic: How to modify and object in the scene and restart simulation. /how-to-move-objects-with-keyboard-and-mouse; . /feed; ; [SOLVED] How to move objects with keyboard and mouse? – SOFA. SOFA - Topic: [SOLVED] How to move objects with keyboard and mouse?. /how-to-not-check-some-collisions; ;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:326281,feedback,feedback-in-the-two-object-is-not-the-same,326281,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-in-the-two-object-is-not-the-same']"
Usability,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205979,simpl,simpleapi,205979,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simpleapi']
Usability,"; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:5856,clear,clear,5856,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,2,['clear'],['clear']
Usability,"; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; Compre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5574,clear,clear,5574,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,2,['clear'],['clear']
Usability,"; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:6011,clear,clearRowCol,6011,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,2,['clear'],['clearRowCol']
Usability,"; byteSize()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; DataType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; size()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Text enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html:1725,Simpl,SimpleCopy,1725,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundEdgeArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundVertexArray()sofa::component::topology::container::dynamic::QuadSetTopolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4729,clear,clearQuadsAroundVertex,4729,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearQuadsAroundVertex']
Usability,"; const Block & bloc (Index i) const;  ; const Block & bloc (Index i, Index j) const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:2104,clear,clearRowCol,2104,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],['clearRowCol']
Usability,"; const real2 * ; p). inlineexplicitconstexprnoexcept . Constructor from an array of values. . Function details. ◆ assign(). template<sofa::Size N, typename ValueType > . constexpr void sofa::type::Vec< N, ValueType >::assign ; (; const ValueType & ; value). inlineconstexprnoexcept . ◆ back() [1/2]. template<sofa::Size N, typename ValueType > . constexpr reference sofa::type::Vec< N, ValueType >::back ; (; ). inlineconstexpr . ◆ back() [2/2]. template<sofa::Size N, typename ValueType > . constexpr const_reference sofa::type::Vec< N, ValueType >::back ; (; ); const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size N, typename ValueType > . constexpr const_iterator sofa::type::Vec< N, ValueType >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size N, typename ValueType > . constexpr iterator sofa::type::Vec< N, ValueType >::begin ; (; ). inlineconstexprnoexcept . ◆ clear(). template<sofa::Size N, typename ValueType > . constexpr void sofa::type::Vec< N, ValueType >::clear ; (; ). inlineconstexprnoexcept . Sets every element to 0. . ◆ cross(). template<sofa::Size N, typename ValueType > . template<typename R , Size NN = N, typename std::enable_if<(NN==3), int >::type = 0> . constexpr Vec sofa::type::Vec< N, ValueType >::cross ; (; const Vec< 3, R > & ; b); const. inlineconstexprnoexcept . ◆ data(). template<sofa::Size N, typename ValueType > . constexpr const ValueType* sofa::type::Vec< N, ValueType >::data ; (; ); const. inlineconstexprnoexcept . ◆ divscalar() [1/2]. template<sofa::Size N, typename ValueType > . template<class real2 , std::enable_if_t< std::is_convertible_v< real2, ValueType >, bool > = true> . constexpr Vec<N,ValueType> sofa::type::Vec< N, ValueType >::divscalar ; (; const real2 ; f); const. inlineconstexprnoexcept . ◆ divscalar() [2/2]. template<sofa::Size N, typename ValueType > . constexpr Vec<N,ValueType> sofa::type::Vec< N, ValueType >::divscalar ; (; const ValueType ; f); const. inlineconstexprnoexcept . D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html:15181,clear,clear,15181,api/master/sofa/html/classsofa_1_1type_1_1_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html,2,['clear'],['clear']
Usability,"; const sofa::core::topology::EdgesRemoved * ; edgesRemoved, . sofa::Index ; mstateId . ). protected . ◆ applyRemovedPoints(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::applyRemovedPoints ; (; const sofa::core::topology::PointsRemoved * ; pointsRemoved, . sofa::Index ; mstateId . ). protected . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ computeBBox(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeSpringDForce(). template<class DataTypes > . DataTypes::DPos sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeSpringDForce ; (; VecDeriv & ; df1, . const VecDeriv & ; dx1, . VecDeriv & ; df2, . const VecDeriv & ; dx2, . sofa::Index ; i, . const Spring & ; spring, . SReal ; kFactor, . SReal ; bFactor . ). ◆ computeSpringForce(). template<class DataTypes > . auto sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeSpringForce ; (; const VecCoord & ; p1, . const VecDeriv & ; v1, . const VecCoord & ; p2, . const VecDeriv & ; v2, . const Spring & ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:35829,clear,clear,35829,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['clear'],['clear']
Usability,"; const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::begin ; (; ). inlineconstexprnoexcept . ◆ canSelfTranspose() [1/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size I, Size J> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< I, J, real > & ; , . const Mat< J, I, real > & ;  . ). inlinestaticnoexcept . ◆ canSelfTranspose() [2/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size S> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< S, S, real > & ; lhs, . const Mat< S, S, real > & ; rhs . ). inlinestaticnoexcept . ◆ clear(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::clear ; (; ). inlineconstexprnoexcept . Sets each element to 0. . ◆ col(). template<sofa::Size L, sofa::Size C, class real > . constexpr Col sofa::type::Mat< L, C, real >::col ; (; Size ; j); const. inlineconstexprnoexcept . Copy of column j. . ◆ data(). template<sofa::Size L, sofa::Size C, class real > . constexpr const real* sofa::type::Mat< L, C, real >::data ; (; ); const. inlineconstexprnoexcept . ◆ end() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::end ; (; ); const. inlineconstexprnoexcept . ◆ end() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::end ; (; ). inlineconstexprnoexcept . ◆ fill(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::fill ; (; real ; r). inlineconstexprnoexcept . Sets each element to r. . ◆ front() [1/2]. template<sofa::Size L, sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:16940,clear,clear,16940,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,2,['clear'],['clear']
Usability,"; sofa::core::behavior::BaseInteractionProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; DataVecCoord typedefsofa::core::behavior::Pair",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:2728,clear,clearLoggedMessages,2728,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,";  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:69213,Simpl,SimpleDataWidget,69213,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,";  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,float> > > sofa::gui::qt::DWClass_RigidCoord2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,double> > > sofa::gui::qt::DWClass_RigidCoord3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,float> > > sofa::gui::qt::DWClass_RigidCoord3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,double> > > sofa::gui::qt::DWClass_RigidMass2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,float> > > sofa::gui::qt::DWClass_RigidMass2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<3,double> > > sofa::gui::qt::DWClass_RigidMass3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<3,float> > > sofa::gui::qt::DWClass_RigidMass3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_SeqEdges. Creator<DataWidgetFactory, TableDataWidget< sofa::core::topology::BaseMeshTopology::SeqEdges > > sofa::gui::qt::DWClass_SeqEdges(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_SeqHexahedra. Creator<DataWidgetFactory, TableDataWidget< sofa::core::topology::BaseMeshTopology::SeqHexahedra > > sofa::gui::qt::DWClass_SeqHexahedra(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_SeqQuads. Creator<DataWidgetFactory, TableDataWidget< sofa::core::topology::BaseMeshTopology::SeqQuads > > sofa::gui::qt::DWClass_SeqQuads(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:72450,Simpl,SimpleDataWidget,72450,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2362,clear,clear,2362,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,2,['clear'],['clear']
Usability,";  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; virtual Base * getOwnerBase () const =0;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:1969,clear,clear,1969,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['clear'],['clear']
Usability,";  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; sofa::type::vector< Spring > * getSprings ();  ; void clear (sofa::Size reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (sofa::Index m1, sofa::Index m2, Real softKst, Real hardKst, Real softKsr, Real hardKsr, Real blocKsr, Real axmin, Real axmax, Real aymin, Real aymax, Real azmin, Real azmax, Real kd);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:6077,clear,clear,6077,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['clear'],['clear']
Usability,";  FullMatrix (Real *p, Index nbRow, Index nbCol);  ;  FullMatrix (Real *p, Index nbRow, Index nbCol, Index pitch);  ;  ~FullMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:2258,clear,clear,2258,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,4,['clear'],"['clear', 'clearRow']"
Usability,";  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; TMatrix * getSystemMatrix () const override;  Return the global matrix of the linear system. More...;  ; TVector * getRHSVector () const override;  Return the RHS of the linear system. More...;  ; TVector * getSolutionVector () const override;  Return the solution of the linear system. More...;  ; sofa::linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; void resizeSystem (sofa::Size n) override;  Set the size of the matrix to n x n, and the size of RHS and solution to n. More...;  ; void clearSystem () override;  ; void setRHS (core::MultiVecDerivId v) override;  ; void setSystemSolution (core::MultiVecDerivId v) override;  ; void dispatchSystemSolution (core::MultiVecDerivId v) override;  ; void dispatchSystemRHS (core::MultiVecDerivId v) override;  ;  Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >;  SOFA_CLASS (SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem);  ; linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; core::objectmodel::BaseContext * getSolveContext ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setRHS (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemRHS (core::MultiVecDerivId v);  ; void setRHS (core::MultiVecDerivId v);  ; void setSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemRHS (core::MultiVecDerivId v);  ;  Public Member Functions inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:4024,clear,clearSystem,4024,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['clear'],['clearSystem']
Usability,";  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::AutoCompress = true. staticconstexpr . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::AutoSize = true. staticconstexpr . ◆ ClearByZeros. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::ClearByZeros = false. staticconstexpr . ◆ CompressZeros. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::CompressZeros = false. staticconstexpr . ◆ matrixType. constexpr int sofa::linearalgebra::CRSConstraintPolicy::matrixType = 2. staticconstexpr . ◆ OrderedInsertion. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::OrderedInsertion = false. staticconstexpr . sofalinearalgebraCRSConstraintPolicy; Generated on Mon Nov 11 2024 03:31:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html:2594,Clear,ClearByZeros,2594,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html,2,['Clear'],['ClearByZeros']
Usability,";  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:6001,clear,clearCol,6001,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,3,"['Clear', 'clear']","['Clear', 'clearCol']"
Usability,"< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:2277,clear,clearLoggedMessages,2277,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,2,['clear'],['clearLoggedMessages']
Usability,"< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:2259,clear,clearLoggedMessages,2259,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['clear'],['clearLoggedMessages']
Usability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; doUpdateInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:3674,clear,clearLoggedMessages,3674,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_array6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 6 > > > DWClass_fixed_array6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 8 > > > DWClass_fixed_array8f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 8 > > > DWClass_fixed_array8d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< float > > > DWClass_Quatf (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< double > > > DWClass_Quatd (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 5 > > > DWClass_PolynomialLD5d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 4 > > > DWClass_PolynomialLD4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 3 > > > DWClass_PolynomialLD3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 2 > > > DWClass_PolynomialLD2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 1 > > > DWClass_PolynomialLD1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,5 > > > DWClass_PolynomialLD5f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,4 > > > DWClass_PolynomialLD4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,3 > > > DWClass_PolynomialLD3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,2 > > > DWClass_PolynomialLD2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,1 > > > DWCl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:27634,Simpl,SimpleDataWidget,27634,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17201,clear,clear,17201,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clear']
Usability,"< T, MemoryManager, DataTypeInfoManager >::begin ; (; ); const. inline . ◆ bufferRead(). template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferRead ; (; bool ; create = false). inline . Get the Buffer Object ID for reading. . ◆ bufferWrite(). template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferWrite ; (; bool ; create = false). inline . Get the Buffer Object ID for writing. . ◆ capacity(). template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::capacity ; (; ); const. inline . ◆ checkIndex(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::checkIndex ; (; Size ; i); const. inlineprotected . ◆ clear(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::clear ; (; ). inline . ◆ copyToDevice(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToDevice ; (; int ; d = 0); const. inlineprotected . ◆ copyToHost(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHost ; (; ); const. inlineprotected . ◆ copyToHostSingle(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHostSingle ; (; Size ; i); const. inlineprotected . ◆ createBuffer(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::createBuffer ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:10148,clear,clear,10148,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,2,['clear'],['clear']
Usability,"< T, MemoryManager, DataTypeInfoManager >inlineprotected; allocSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHostSingle(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; cptidsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotectedstatic; createBuffer()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; data() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; data()sofa::type::vector_device< T, MemoryManag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html:1470,clear,clear,1470,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,2,['clear'],['clear']
Usability,"< TReal >; Sparse matrix based on the Eigen library.; An Eigen::SparseMatrix<Real, RowMajor> matrix is used to store the data in Compressed Row Storage mode. This matrix can not be accessed randomly. Two access modes are implemented.; The first access mode consists in inserting entries in increasing row, increasing column order. Method beginRow(Index index) must be called before any entry can be appended to row i. WarningbeginRow must be called even for empty rows Then insertBack(i,j,value) must be used in for increasing j. There is no need to explicitly end a row. Finally, method compress() must be called after the last entry has been inserted. This is the most efficient access mode.; The second access mode is randow access, but you access an auxiliary matrix. Method add is used to add a value at a given location. Method compress() is then used to transfer this data to the compressed matrix. There is no way to replace an entry, you can only add.; Rows, columns, or the full matrix can be set to zero using the clear* methods. . Public Attributes; CompressedMatrix compressedMatrix;  the compressed matrix More...;  . Protected Attributes; SimplicialCholesky cholesky;  used to factorize the matrix and solve systems using Cholesky method, for symmetric positive definite matrices only. More...;  . Public Member Functions;  EigenBaseSparseMatrix (Index nbRow=0, Index nbCol=0);  ;  EigenBaseSparseMatrix (const ThisMatrix &m);  copy constructor More...;  ; void operator= (const ThisMatrix &m);  copy operator More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setIdentity ();  ; void add (Index row, Index col, double value) override;  Schedule the addition of the value at the given place. Scheduled additions must be finalized using function compress(). More...;  ; void beginRow (Index index);  ; void insertBack (Index row, Index col, Real value);  ; Real & coeffRef (Index i, In",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:1614,clear,clear,1614,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clear']
Usability,"< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  WriteAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVector< VectorLikeType >;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const VectorLikeType &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; const_container_type * operator-> () const;  ; container_type & operator* ();  ; const_container_type & operator* () const;  ; container_type & wref ();  ;  operator const_container_type () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVector< VectorLikeType >; container_type * vref;  . Constructor details. ◆ WriteAccessor(). template<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html:1210,clear,clear,1210,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,2,['clear'],['clear']
Usability,"<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22041,clear,clearRow,22041,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['clear'],['clearRow']
Usability,"> . sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::LinearVelocityProjectiveConstraint. protected . ◆ ~LinearVelocityProjectiveConstraint(). template<class TDataTypes > . sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::~LinearVelocityProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addIndex ; (; Index ; index). ◆ addKeyVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addKeyVelocity ; (; Real ; time, . Deriv ; movement . ). add a new key movement Parameters. time: the simulation time you want to set a movement (in sec) ; movement: the corresponding motion for instance, addKeyMovement(1.0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:23111,clear,clearIndices,23111,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"> . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::buildGeometricStiffnessMatrix ; (; sofa::core::GeometricStiffnessMatrix * ; matrices). overridevirtual . Assembles the geometric stiffness matrix of the mapping in the provided matrix object. ; The geometric stiffness is defined as dJ^T/dx * outForce, where outForce is the forces applying on the output of the mapping, J is the jacobian matrix of the mapping and x is the position of the input of the mapping.; Inside the method, outForce is retrieved, while dJ^T/dx and its product with outForce must be computed.; Note that dJ^T/dx is null for linear mappings, meaning that the method can remain empty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getGlobalToLocalCoords() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xFrom, . const OutCoord & ; xTo . ). ◆ getGlobalToLocalCoords() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xfrom, . const OutCoord & ; xto . ). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::getJ. overridevirtual . R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:30726,clear,clear,30726,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['clear'],['clear']
Usability,"> > > DWLClass_mapdequed (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< Vec2d > > > > DWLClass_mapdeque2d (""graph_linear"", true);  ; helper::Creator< DataWidgetFactory, QPoissonRatioWidget > DWClass_Poissonratio (""poissonRatio"", false);  ; RealGUI * gui = nullptr;  ; QApplication * application = nullptr;  ; const char * progname ="""";  ; Creator< DataWidgetFactory, SimpleDataWidget< bool > > DWClass_bool (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< char > > DWClass_char (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned char > > DWClass_uchar (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< int > > DWClass_int (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:21153,Simpl,SimpleDataWidget,21153,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"> sofa::gui::qt::GraphVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeTotal. protected . ◆ window. WindowVisitor* sofa::gui::qt::GraphVisitor::window. protected . Constructor details. ◆ GraphVisitor(). sofa::gui::qt::GraphVisitor::GraphVisitor ; (; WindowVisitor * ; w). inline . Function details. ◆ addComment(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addComment ; (; QTreeWidgetItem * ; element, . QTreeWidgetItem * ; elementAbove, . std::string ; comment . ). ◆ addInformation(). void sofa::gui::qt::GraphVisitor::addInformation ; (; QTreeWidgetItem * ; element, . std::string ; name, . std::string ; info . ). ◆ addNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addNode ; (; QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove, . std::string ; info . ). ◆ addTime(). void sofa::gui::qt::GraphVisitor::addTime ; (; QTreeWidgetItem * ; element, . std::string ; info . ). ◆ clear(). void sofa::gui::qt::GraphVisitor::clear ; (; ). inline . ◆ getTime(). double sofa::gui::qt::GraphVisitor::getTime ; (; const tinyxml2::XMLAttribute * ; attribute); const. inline . ◆ getTotalTime(). double sofa::gui::qt::GraphVisitor::getTotalTime ; (; tinyxml2::XMLNode * ; node); const. ◆ load(). bool sofa::gui::qt::GraphVisitor::load ; (; std::string & ; file). ◆ openAttribute(). void sofa::gui::qt::GraphVisitor::openAttribute ; (; tinyxml2::XMLElement * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ openNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::openNode ; (; tinyxml2::XMLNode * ; node, . QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove . ). protected . ◆ openTime(). void sofa::gui::qt::GraphVisitor::openTime ; (; tinyxml2::XMLNode * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ setGraph(). void sofa::gui::qt::GraphVisitor::setGraph ; (; QTreeWidget * ; g). inline . sofaguiqtGraphVisitor; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html:3781,clear,clear,3781,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,2,['clear'],['clear']
Usability,">, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UnilateralLagrangianConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionConstraint, DataTypes));  ; void setCustomTolerance (SReal tol);  ; void clear (int reserve=0);  ; virtual void addContact (SReal mu, Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, Coord Pfree, Coord Qfree, long id=0, PersistentID localid=0);  ; void addContact (SReal mu, Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void addContact (SReal mu, Deriv norm, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void buildConstraintMatrix (const core::ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2) override;  ; void getConstraintViolation (const core::ConstraintParams *cParams, linearalgebra::BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void getConstraintInfo (const core::ConstraintParams *cParams, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &directions, VecConstArea &areas) override;  ; void getConstraintResolution (const core::ConstraintParams *, std::vector< core::behavior::ConstraintResolution * > &resTab, unsigned int &offset) override;  ; bool isActive () const override;  if false, the constraint does nothing More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >;  SOF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:4209,clear,clear,4209,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability,">, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; transpose(BlockTranspose &res, const Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; transposed(const Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; v(const Block &b, int, int col)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; v(Block &b, int, int col)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; vadd(Block &b, int, int col, Real v)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; vset(Block &b, int, int col, Real v)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:31",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_11f9f74aaa4765f4ea367a642067a7f0.html:570,clear,clear,570,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_11f9f74aaa4765f4ea367a642067a7f0.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_11f9f74aaa4765f4ea367a642067a7f0.html,2,['clear'],['clear']
Usability,">, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:37149,clear,clearRow,37149,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearRow']
Usability,">, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:37091,clear,clearRow,37091,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearRow']
Usability,">. Inheritance diagram for sofa::core::behavior::ListMassMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >; void push_back (MassMatrixAccumulator *m);  ; void remove (MassMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListMassMatrixAccumulator; Generated on Mon Nov 11 2024 03:15:04 for ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator.html:606,clear,clear,606,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator.html,1,['clear'],['clear']
Usability,">. ◆ computeWrench(). virtual void sofa::component::haptics::ForceFeedback::computeWrench ; (; const sofa::type::Transform< SReal > & ; , . const sofa::type::SpatialVector< SReal > & ; , . sofa::type::SpatialVector< SReal > & ;  . ). pure virtual . Implemented in sofa::component::haptics::NullForceFeedback, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::haptics::NullForceFeedbackT< TDataTypes >, and sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ init(). void sofa::component::haptics::ForceFeedback::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::haptics::NullForceFeedbackT< TDataTypes >, sofa::component::haptics::NullForceFeedback, sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >, and sofa::component::haptics::LCPForceFeedback< TDataTypes >. ◆ isEnabled(). bool sofa::component::haptics::ForceFeedback::isEnabled ; (; ). virtual . ◆ setLock(). virtual void sofa::component::haptics::ForceFeedback::setLock ; (; bool ; value). inlinevirtual . Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. ; Reimplemented in sofa::component::haptics::LCPForceFeedback< TDataTypes >. ◆ setReferencePosition(). void sofa::component::haptics::ForceFeedback::setReferencePosition ; (; sofa::type::Transform< SReal > & ; referencePosition). virtual . Reimplemented in sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ SOFA_ABSTRACT_CLASS(). sofa::component::haptics::ForceFeedback::SOFA_ABSTRACT_CLASS ; (; ForceFeedback ; , . core::behavior::BaseController ;  . ). sofacomponenthapticsForceFeedback; Generated on Mon Nov 11 2024 02:46:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:16265,feedback,feedback,16265,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,1,['feedback'],['feedback']
Usability,">::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17843,clear,clearRow,17843,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clearRow']
Usability,">::RigidDeriv ; (; ). inlineconstexpr . ◆ RigidDeriv() [2/6]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; type::NoInit ; ). inlineexplicitconstexpr . ◆ RigidDeriv() [3/6]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const Vec3 & ; velCenter, . const Vec3 & ; velOrient . ). inlineconstexpr . ◆ RigidDeriv() [4/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const RigidDeriv< 3, real2 > & ; c). inlineconstexpr . ◆ RigidDeriv() [5/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const type::Vec< 6, real2 > & ; v). inlineconstexpr . ◆ RigidDeriv() [6/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const real2 * ; ptr). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidDeriv< 3, real >::clear ; (; ). inlineconstexpr . ◆ getAngular() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getAngular ; (; ). inlineconstexpr . ◆ getAngular() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getAngular ; (; ); const. inlineconstexpr . ◆ getLinear() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getLinear ; (; ). inlineconstexpr . ◆ getLinear() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getLinear ; (; ); const. inlineconstexpr . ◆ getVAll(). template<typename real > . constexpr VecAll sofa::defaulttype::RigidDeriv< 3, real >::getVAll ; (; ); const. inlineconstexpr . ◆ getVCenter() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getVCenter ; (; ). inlineconstexp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html:5365,clear,clear,5365,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,">::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20718,clear,clearRows,20718,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRows']
Usability,">::m_x0. ◆ m_x1. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Vec3R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::m_x1. Constructor details. ◆ HermiteSplineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::HermiteSplineProjectiveConstraint ; (; core::behavior::MechanicalState< DataTypes > * ; mstate = nullptr). explicitprotected . ◆ ~HermiteSplineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::~HermiteSplineProjectiveConstraint. protected . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::addConstraint ; (; unsigned ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::clearConstraints. ◆ computeDerivateHermiteCoefs(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::computeDerivateHermiteCoefs ; (; const Real ; u, . Real & ; dH00, . Real & ; dH10, . Real & ; dH01, . Real & ; dH11 . ). ◆ computeHermiteCoefs(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::computeHermiteCoefs ; (; const Real ; u, . Real & ; H00, . Real & ; H10, . Real & ; H01, . Real & ; H11 . ). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBeginTime(). template<class DataTypes > . Real sofa::component::constraint::projecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:25194,clear,clearConstraints,25194,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,">; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; name()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; size()sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html:1978,Simpl,SimpleCopy,1978,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,">inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2349,Simpl,SimpleDataWidget,2349,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,1,['Simpl'],['SimpleDataWidget']
Usability,">inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< double >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< double >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< double >; DataType typedefsofa::defaulttype::ScalarTypeInfo< double >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< double >; GetTypeName()sofa::defaulttype::DataTypeInfo< double >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< double >; name()sofa::defaulttype::DataTypeInfo< double >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< double >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< double >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< double >; Size enum valuesofa::defaulttype::ScalarTypeInfo< double >; size()sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Text enum valuesofa::defaulttype::ScalarTypeInfo< double >; ValidInfo enum valuesofa::defaulttype::ScalarTypeInfo< double >; ValueType typedefsofa::defaulttype::ScalarTypeInfo< double >; ValueTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< double >; ZeroConstructor enum valuesofa::defaulttype::ScalarTypeInfo< double >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html:1793,Simpl,SimpleCopy,1793,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,">virtual; ProjectiveConstraintSet< TDataTypes >::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeIndex(Index index)sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:15782,clear,clear,15782,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['clear'],['clear']
Usability,">virtual; ProjectiveConstraintSet< TDataTypes >::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; projectVelocity(const core::MechanicalParams *, DataVecDeriv &vData) overridesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::constraint::projective:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:14551,clear,clear,14551,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['clear'],['clear']
Usability,A – Registration. SOFA – SOFA Week 2024. /technical-committee-7; ; SOFA – Technical Committee #7. /technical-committees; . /registration; ; SOFA – Registration. SOFA – Technical Committees. stc11; ; SOFA – STC#11. stc9; . /live; ; SOFA – Live. SOFA – STC#9 meeting. wp-content; . /plugins; . /bbpress; . /templates; . /default; . /css; ; bbpress.min.css. /js; ; editor.min.js; engagements.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:587332,responsiv,responsive-slider-slider,587332,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['responsiv'],['responsive-slider-slider']
Usability,A. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /feed; ; external data COM port – SOFA. SOFA - Topic Tag: external data COM port. /extraction-of-the-equation; . /feed; ; Extraction of the equation – SOFA. SOFA - Topic Tag: Extraction of the equation. /features; . /feed; ; Features – SOFA. SOFA - Topic Tag: Features. /fedora-64-bits; . /feed; ; Fedora 64 bits – SOFA. SOFA - Topic Tag: Fedora 64 bits. /feedback; . /feed; ; Feedback – SOFA. SOFA - Topic Tag: Feedback. /fem; . /feed; ; FEM – SOFA. SOFA - Topic Tag: FEM. /fem-model-for-flat-element; . /feed; ; FEM model for flat element – SOFA. SOFA - Topic Tag: FEM model for flat element. /ffmpeg; . /feed; ; FFMPEG – SOFA. SOFA - Topic Tag: FFMPEG. /fibers; . /feed; ; fibers – SOFA. SOFA - Topic Tag: fibers. /final; . /feed; ; final – SOFA. SOFA - Topic Tag: final. /finite-element-method; . /feed; ; finite element method – SOFA. SOFA - Topic Tag: finite element method. /fisheye-camera; . /feed; ; fisheye camera – SOFA. SOFA - Topic Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fix,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:442803,feedback,feedback,442803,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,A_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Types >. template class SOFA_COMPONENT_STATECONTAINER_A,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2465,clear,clear,2465,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,2,['clear'],['clear']
Usability,AroundQuadForModification (const QuadID quadIndex);  Returns a non-const list of hexahedron indices around a given quad for subsequent modification. More...;  ; void setHexahedronTopologyToDirty ();  ; void cleanHexahedronTopologyFromDirty ();  ; const bool & isHexahedronTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer;  QuadSetTopologyContainer ();  ;  ~QuadSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; virtual void createEdgesInQuadArray ();  Creates the array of edge indices for each quad. More...;  ; virtual void createQuadsAroundVertexArray ();  Creates the QuadsAroundVertex Array. More...;  ; virtual void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void clearQuads ();  ; void clearEdgesInQuad ();  ; void clearQuadsAroundVertex ();  ; void clearQuadsAroundEdge ();  ; virtual QuadsAroundVertex & getQuadsAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of quad indices around a given DOF for subsequent modification. More...;  ; virtual QuadsAroundEdge & getQuadsAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of quad indices around a given edge for subsequent modification. More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:38609,clear,clearQuads,38609,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,12,['clear'],"['clearEdgesInQuad', 'clearQuads', 'clearQuadsAroundEdge', 'clearQuadsAroundVertex']"
Usability,"B v + K x $; This method must be implemented by the component, and is usually called by the generic ForceField::addForce() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addSpring(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::addSpring ; (; int ; m1, . int ; m2, . SReal ; ks, . SReal ; kd, . Coord ; restVector . ). ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ createDefaultSprings(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createDefaultSprings. ◆ createEdgeInformation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createEdgeInformation ; (; Index ; , . Spring & ; t, . const core::topology::BaseMeshTopology::Edge & ; e, . const sofa::type::vector< Index > & ; ancestors, . const sofa::type::vector< SReal > & ; coefs . ). protected . Method to initialize See alsoSpring when a new edge is created. Will be set as creation callback in the EdgeData . d_springArray . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:29414,clear,clear,29414,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['clear'],['clear']
Usability,"BSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  LinearMovementProjectiveConstraint ();  ;  ~LinearMovementProjectiveConstraint () override;  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if<!std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:17871,clear,clear,17871,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,"BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BTDMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B & ; m . ). ◆ getSubMatrix(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17979,clear,clearRowCol,17979,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clearRowCol']
Usability,"Base::addDeprecatedAttribute ; (; lifecycle::DeprecatedData * ; attribute). ◆ addLink(). void sofa::core::objectmodel::Base::addLink ; (; BaseLink * ; l). Add a link. ; Add a link. Note that this method should only be called if the link was not initialized with the initLink method . ◆ addMessage(). void sofa::core::objectmodel::Base::addMessage ; (; const sofa::helper::logging::Message & ; m); const. ◆ addOutputsToCallback(). void sofa::core::objectmodel::Base::addOutputsToCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; outputs . ). ◆ addTag(). void sofa::core::objectmodel::Base::addTag ; (; Tag ; t). Add a subset qualification to the object. . ◆ addUpdateCallback(). void sofa::core::objectmodel::Base::addUpdateCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; inputs, . std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ; function, . std::initializer_list< BaseData * > ; outputs . ). ◆ clearLoggedMessages(). void sofa::core::objectmodel::Base::clearLoggedMessages ; (; ); const. ◆ countLoggedMessages(). size_t sofa::core::objectmodel::Base::countLoggedMessages ; (; sofa::helper::logging::Message::TypeSet ; t = sofa::helper::logging::Message::AnyTypes); const. ◆ findData(). BaseData * sofa::core::objectmodel::Base::findData ; (; const std::string & ; name); const. Find a data field given its name. Return nullptr if not found. If more than one field is found (due to aliases), only the first is returned. . ◆ findDataLinkDest(). bool sofa::core::objectmodel::Base::findDataLinkDest ; (; BaseData *& ; ptr, . const std::string & ; path, . const BaseLink * ; link . ). virtual . ◆ findGlobalField(). std::vector< BaseData * > sofa::core::objectmodel::Base::findGlobalField ; (; const std::string & ; name); const. Find data fields given a name: several can be found as we look into the alias map. ; Find fields given a name: several can be found as we look into the alias map. . ◆ findLink().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:13900,clear,clearLoggedMessages,13900,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['clear'],['clearLoggedMessages']
Usability,"Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; center(sofa::Index i) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:2724,clear,clearLoggedMessages,2724,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< _DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bendingStiffnesssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeSpringssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minDistValiditysofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; DataTypes typedefsofa::component::solidmechanics::spring::FastTr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:5968,clear,clearLoggedMessages,5968,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['clear'],['clearLoggedMessages']
Usability,"BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshOBJLoader ();  ;  ~MeshOBJLoader () override;  ; bool readOBJ (std::ifstream &file, const char *filename);  ; bool readMTL (const char *filename, type::vector< sofa::type::Material > &d_materials);  ; void addGroup (const sofa::core::loader::PrimitiveGroup &g);  ; void doClearBuffers () override;  MeshOBJLoader::clearBuffers Clear all the buffer containing the data loaded from the file. More...;  ;  Protected Member Functions inherited from sofa::core::loader::MeshLoader;  MeshLoader ();  ; virtual void clearBuffers () final;  ; void addPosition (type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p);  ; void addPosition (type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z);  ; void addPolyline (type::vector< Polyline > &pPolylines, Polyline p);  ; void addEdge (type::vector< Edge > &pEdges, const Edge &p);  ; void addEdge (type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1);  ; void addTriangle (type::vector< Triangle > &pTriangles, const Triangle &p);  ; void addTriangle (type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2);  ; void addQuad (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:17313,clear,clearBuffers,17313,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['clear'],['clearBuffers']
Usability,"BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeAccFromMapping(const MechanicalParams *, const type::vector< OutDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &)sofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html:4202,clear,clearLoggedMessages,4202,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:6195,clear,clearRowsCols,6195,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,4,['clear'],['clearRowsCols']
Usability,"BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(AffineMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  – Constraint interface More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void draw (const core::visual::VisualParams *vparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:5754,clear,clearConstraints,5754,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::ConicalForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::ConicalForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::ConicalForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; coneAnglesofa::component::mechanicalload::ConicalForceField< DataTypes >; coneCentersofa::component::mechanicalload::ConicalForceField< DataTypes >; coneHeightsofa::component::mechanicalload::ConicalForceField< DataTypes >; ConicalForceField()sofa::component::mechanicalload::ConicalForceField< DataTypes >protected; contactssofa::component::mechanicalload::ConicalForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::ConicalForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html:4655,clear,clearLoggedMessages,4655,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::TorsionForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::TorsionForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::TorsionForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::mechanicalload::TorsionForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::component::mechanicalload::TorsionForceField< DataTypes >; d_torquesofa::component::mechanicalload::TorsionForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mech",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html:5337,clear,clearLoggedMessages,5337,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17414,clear,clearCol,17414,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clearCol']
Usability,"Block , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21685,Clear,Clear,21685,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['Clear'],['Clear']
Usability,"C, real >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, Index row, Index col);  ; static const Real & v (const Block &b, Index row, Index col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size L, Size C, class real , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size L, Size C, class real , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<Size L, Size C, class real , typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html:1336,clear,clear,1336,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,2,['clear'],['clear']
Usability,COMPONENT_STATECONTAINER_API MappedObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::regist,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2296,clear,clear,2296,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,2,['clear'],['clear']
Usability,"Callback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(DAGNode *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::graph::DAGNodeinlinestatic; sofa::simulation::Node::create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; sofa::simulation::Node::create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &no",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html:2459,clear,clearObjectContext,2459,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,2,['clear'],['clearObjectContext']
Usability,"Callback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &nodeName)=0sofa::simulation::Nodepure virtual; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_componentStatesofa::core::objectmodel::Base; d_isSleepingso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html:2315,clear,clearObjectContext,2315,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,2,['clear'],['clearObjectContext']
Usability,"Class_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creato",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22485,Simpl,SimpleDataWidget,22485,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Class_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22899,Simpl,SimpleDataWidget,22899,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Class_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Cr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23313,Simpl,SimpleDataWidget,23313,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Class_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_float. Creator<DataWidgetFactory, SimpleDataWidget<float> > sofa::gui::qt::DWClass_float(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Hexahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > sofa::gui::qt::DWClass_Hexahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_int. Creator<DataWidgetFactory, SimpleDataWidget<int> > sofa::gui::qt::DWClass_int(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_mapdeque2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<Vec2d> > > > sofa::gui::qt::DWClass_mapdeque2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequed. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<double> > > > sofa::gui::qt::DWClass_mapdequed(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequef. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<float> > > > sofa::gui::qt::DWClass_mapdequef(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DW",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:65002,Simpl,SimpleDataWidget,65002,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Col values. More...;  ; void resize (Index nbRow, Index nbCol) override;  ; void extend (Index nbRow, Index nbCol);  ; SReal element (Index i, Index j) const override;  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:5901,clear,clearRow,5901,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,3,"['Clear', 'clear']","['Clear', 'clearRow']"
Usability,"CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:2732,clear,clearLoggedMessages,2732,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::compress ; (; ). inlineoverridevirtual . Make the final data setup after adding entries. For most concrete types, this method does nothing. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ copyLower(). template<typename ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49553,clear,clearRowCol,49553,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clearRowCol']
Usability,"ConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27394,clear,clearIndices,27394,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"Constructor details. ◆ PickHandler(). sofa::gui::common::PickHandler::PickHandler ; (; double ; defaultLength = 1000000). ◆ ~PickHandler(). sofa::gui::common::PickHandler::~PickHandler ; (; ). virtual . Function details. ◆ activateRay(). void sofa::gui::common::PickHandler::activateRay ; (; int ; width, . int ; height, . core::objectmodel::BaseNode * ; root . ). ◆ addCallBack(). void sofa::gui::common::PickHandler::addCallBack ; (; CallBackPicker * ; c). inline . ◆ allocateSelectionBuffer(). void sofa::gui::common::PickHandler::allocateSelectionBuffer ; (; int ; width, . int ; height . ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ changeOperation() [1/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; MOUSE_BUTTON ; button, . const std::string & ; op . ). ◆ changeOperation() [2/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). ◆ clearCallBacks(). void sofa::gui::common::PickHandler::clearCallBacks ; (; ). inline . ◆ deactivateRay(). void sofa::gui::common::PickHandler::deactivateRay ; (; ). ◆ destroySelectionBuffer(). void sofa::gui::common::PickHandler::destroySelectionBuffer ; (; ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ findCollision(). BodyPicked sofa::gui::common::PickHandler::findCollision ; (; ). protectedvirtual . ◆ findCollisionUsingBruteForce() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; ). protected . ◆ findCollisionUsingBruteForce() [2/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; const type::Vec3 & ; origin, . const type::Vec3 & ; direction, . double ; maxLength, . core::objectmodel::BaseNode * ; root . ). static . ◆ findCollisionUsingColourCoding() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingColourCoding ; (; ). protected . ◆ findCollisionUsingColourCoding() [2/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsing",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html:5463,clear,clearCallBacks,5463,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,2,['clear'],['clearCallBacks']
Usability,Container () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; void createQuadSetArray () override;  Creates the QuadSet array. More...;  ; virtual void createHexahedronSetArray ();  Creates the HexahedronSet array. More...;  ; virtual void createEdgesInHexahedronArray ();  Creates the array of edge indices for each hexahedron. More...;  ; virtual void createQuadsInHexahedronArray ();  Creates the array of quad indices for each hexahedron. More...;  ; virtual void createHexahedraAroundVertexArray ();  Creates the HexahedraAroundVertex Array. More...;  ; virtual void createHexahedraAroundEdgeArray ();  Creates the HexahedraAroundEdge Array. More...;  ; virtual void createHexahedraAroundQuadArray ();  Creates the HexahedraAroundQuad Array. More...;  ; void clearHexahedra ();  ; void clearEdgesInHexahedron ();  ; void clearQuadsInHexahedron ();  ; void clearHexahedraAroundVertex ();  ; void clearHexahedraAroundEdge ();  ; void clearHexahedraAroundQuad ();  ; virtual HexahedraAroundVertex & getHexahedraAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of hexahedron indices around a given DOF for subsequent modification. More...;  ; virtual HexahedraAroundEdge & getHexahedraAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of hexahedron indices around a given edge for subsequent modification. More...;  ; virtual HexahedraAroundQuad & getHexahedraAroundQuadForModification (const QuadID quadIndex);  Returns a non-const list of hexahedron indices around a given quad for subsequent modification. More...;  ; void setHexahedronTopologyToDirty ();  ; void cleanHexahedronTopologyFromDirty ();  ; const bool & isHexahedronTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer;  QuadSetTopologyContainer ();  ;  ~QuadSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the Ed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:37093,clear,clearHexahedra,37093,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,18,['clear'],"['clearEdgesInHexahedron', 'clearHexahedra', 'clearHexahedraAroundEdge', 'clearHexahedraAroundQuad', 'clearHexahedraAroundVertex', 'clearQuadsInHexahedron']"
Usability,Container. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50637,clear,clearEdgesInTetrahedron,50637,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearEdgesInTetrahedron']
Usability,"Containervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4630,clear,clearLoggedMessages,4630,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Correction< TDataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compliancesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDx(const Data< VecDeriv > &f, VecDeriv &x)sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >protected; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(Mec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html:4867,clear,clearLoggedMessages,4867,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Correction< TDataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeJ(sofa::linearalgebra::BaseMatrix *W, const MatrixDeriv &j)sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >inlineprotectedvirtual; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:4852,clear,clearLoggedMessages,4852,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Create(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:5943,clear,clear,5943,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,2,['clear'],['clear']
Usability,"Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24589,Simpl,SimpleDataWidget,24589,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, Simple",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24830,Simpl,SimpleDataWidget,24830,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:25071,Simpl,SimpleDataWidget,25071,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24705,Simpl,SimpleDataWidget,24705,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, Sim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24946,Simpl,SimpleDataWidget,24946,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,1> > > sofa::gui::qt::DWClass_fixed_array1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,2> > > sofa::gui::qt::DWClass_fixed_array2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,2> > > sofa::gui::qt::DWClass_fixed_array2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,2> > > sofa::gui::qt::DWClass_fixed_array2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:62058,Simpl,SimpleDataWidget,62058,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:62796,Simpl,SimpleDataWidget,62796,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:63534,Simpl,SimpleDataWidget,63534,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_float. Creator<DataWidgetFactory, SimpleDataWidget<float> > sofa::gui::qt::DWClass_float(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Hexahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > sofa::gui::qt::DWClass_Hexahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:64272,Simpl,SimpleDataWidget,64272,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > sofa::gui::qt::DWClass_Edge(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,1> > > sofa::gui::qt::DWClass_fixed_array1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,1> > > sofa::gui::qt::DWClass_fixed_array1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,1> > > sofa::gui::qt::DWClass_fixed_array1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,1> > > sofa::gui::qt::DWClass_fixed_array1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,2> > > sofa::gui::qt::DWClass_fixed_array2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,2> > > sofa::gui::qt::DWClass_fixed_array2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,2> > > sofa::gui::qt::DWClass_fixed_array2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:61320,Simpl,SimpleDataWidget,61320,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"D5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quatd(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,float> > > sofa::gui::qt::DWClass_RigidCoord2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,double> > > sofa::gui::qt::DWClass_RigidCoord3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,float> > > sofa::gui::qt::DWClass_RigidCoord3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,double> > > sofa::gui::qt::DWClass_RigidMass2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,float> > > sofa::gui::qt::DWClass_RigidMass2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:71551,Simpl,SimpleDataWidget,71551,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""defa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22688,Simpl,SimpleDataWidget,22688,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, Simp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23102,Simpl,SimpleDataWidget,23102,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23516,Simpl,SimpleDataWidget,23516,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22174,Simpl,SimpleDataWidget,22174,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"D] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to ext",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:321090,feedback,feedback,321090,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"DampingMatrix *) finalsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_anisotropySetsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html:4979,clear,clearLoggedMessages,4979,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:15283,clear,clear,15283,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,2,['clear'],['clear']
Usability,"DataFileNameVector ; (; const sofa::type::SVector< std::string > & ; value, . const char * ; helpMsg = nullptr, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). ◆ DataFileNameVector() [3/5]. sofa::core::objectmodel::DataFileNameVector::DataFileNameVector ; (; const BaseData::BaseInitData & ; init). explicit . Constructor this constructor should be used through the initData() methods . ◆ DataFileNameVector() [4/5]. sofa::core::objectmodel::DataFileNameVector::DataFileNameVector ; (; const Inherit::InitData & ; init). explicit . Constructor this constructor should be used through the initData() methods . ◆ ~DataFileNameVector(). sofa::core::objectmodel::DataFileNameVector::~DataFileNameVector ; (; ). overridedefault . ◆ DataFileNameVector() [5/5]. sofa::core::objectmodel::DataFileNameVector::DataFileNameVector ; (; const Inherit & ; d). delete . Function details. ◆ addPath(). void sofa::core::objectmodel::DataFileNameVector::addPath ; (; const std::string & ; v, . bool ; clear = false . ). ◆ doOnUpdate(). void sofa::core::objectmodel::DataFileNameVector::doOnUpdate ; (; ). overridevirtual . Reimplemented from sofa::core::objectmodel::BaseData. ◆ endEdit(). void sofa::core::objectmodel::DataFileNameVector::endEdit ; (; ). overridevirtual . Reimplemented from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >. ◆ getAbsolutePath(). const std::string & sofa::core::objectmodel::DataFileNameVector::getAbsolutePath ; (; unsigned int ; i); const. virtual . ◆ getFullPath(). const std::string & sofa::core::objectmodel::DataFileNameVector::getFullPath ; (; unsigned int ; i); const. virtual . ◆ getPathType(). PathType sofa::core::objectmodel::DataFileNameVector::getPathType ; (; ); const. ◆ getRelativePath(). const std::string & sofa::core::objectmodel::DataFileNameVector::getRelativePath ; (; unsigned int ; i). virtual . ◆ operator=(). DataFileNameVector& sofa::core::objectmodel::DataFileNameVector::operator= ; (; const DataFileNameVector & ; ). dele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:13641,clear,clear,13641,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,1,['clear'],['clear']
Usability,"DataType >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(const TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; name()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; size()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html:1837,Simpl,SimpleCopy,1837,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"DataTypes >protected; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7228,clear,clear,7228,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,2,['clear'],['clear']
Usability,"DataWidgetFactory, TableDataWidget< std::vector<fixed_array<int,8> > > > sofa::gui::qt::DWClass_stdvectorA8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_stdvectorA8u. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<unsigned int,8> > > > sofa::gui::qt::DWClass_stdvectorA8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_string. Creator<DataWidgetFactory, SimpleDataWidget<std::string> > sofa::gui::qt::DWClass_string(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_TagSet. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > sofa::gui::qt::DWClass_TagSet(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Tetrahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > sofa::gui::qt::DWClass_Vec1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,unsigned int> > > sofa::gui::qt::DWClass_Vec1u(""d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:76916,Simpl,SimpleDataWidget,76916,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; TableDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::TableDataWidget< T, FLAGS >inline; Tdatasofa::gui::qt::TDataWidg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:2025,Simpl,SimpleDataWidget,2025,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,1,['Simpl'],['SimpleDataWidget']
Usability,"DefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col inde",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21709,Clear,Clear,21709,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['Clear'],['Clear']
Usability,"Deriv * > & ; dataMatInConst . ). override . ◆ applyJT() [2/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; const core::MechanicalParams * ; , . const type::vector< InDataVecDeriv * > & ; dataVecOutForce, . const type::vector< InRootDataVecDeriv * > & ; dataVecOutRootForce, . const type::vector< const OutDataVecDeriv * > & ; dataVecInForce . ). override . ◆ applyJT() [3/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InMatrixDeriv & ; out, . const OutMatrixDeriv & ; in, . InRootMatrixDeriv * ; outroot . ). ◆ applyJT() [4/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InVecDeriv & ; out, . const OutVecDeriv & ; in, . InRootVecDeriv * ; outroot . ). ◆ clear(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::clear ; (; int ; reserve = 0). ◆ draw(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::draw ; (; const core::visual::VisualParams * ; vparams). override . ◆ handleTopologyChange(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::handleTopologyChange ; (; core::topology::Topology * ; t). override . ◆ init(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::init ; (; void ; ). override . ◆ recomputeRigidMass(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::reco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html:12587,clear,clear,12587,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,1,['clear'],['clear']
Usability,"DerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ computeContactAcc(). void sofa::simulation::common::MechanicalOperations::computeContactAcc ; (; SReal ; t, . core::MultiVecDerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). ◆ computeContactDf(). void sofa::simulation::common::MechanicalOperations::computeContactDf ; (; core::MultiVecDerivId ; df). ◆ computeContactForce(). void sofa::simulation::common::MechanicalOperations::computeContactForce ; (; core::MultiVecDerivId ; result). ◆ computeDf(). void sofa::simulation::common::MechanicalOperations::computeDf ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated displacement) . ◆ computeDfV(). void sofa::simulation::common::MechanicalOperations::computeDfV ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated velocity) . ◆ computeEnergy(). void sofa::simulation::common::MechanicalOperations::computeEnergy ; (; SReal & ; kineticEnergy, . SReal & ; potentialEnergy . ). Compute Energy. ; Apply projective constraints to the given velocity vector. . ◆ computeForce() [1/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ getMatrixDimension() [1/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:11266,clear,clear,11266,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,2,['clear'],['clear']
Usability,Dirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of the 6 edges of each tetrahedron The number of each edge is the following : edg,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51273,clear,clearTetrahedraAroundVertex,51273,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundVertex']
Usability,ED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /how,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:318252,feedback,feedback,318252,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"ED] How to define an animation path?. /how-to-determine-the-source-of-an-error; ; SOFA - Topic: [SOLVED] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:320973,feedback,feedback-scene,320973,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback-scene']
Usability,"EMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  PartialLinearMovementProjectiveConstraint ();  ;  ~PartialLinearMovementProjectiveConstraint () override;  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if<!std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:19938,clear,clear,19938,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,"EdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();  Returns the HexahedraAroundQuad array (i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool hasHexahedra () const;  ; bool hasEdgesInHexahedron () const;  ; bool hasQuadsInHexahedron () const;  ; bool hasHexahedraAroundVertex () const;  ; bool hasHexahedraAroundEdge () const;  ; bool hasHexahedraAroundQuad () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  . const SeqHexahedra & getHexahedra () override;  Get the array of hexahedra. More...;  ; const Hexahedron getHexahedron (HexaID i) override;  Get a hexahedron from its index. More...;  ; virtual unsigned int getLocalIndexFromBinaryIndex (const HexahedronBinaryIndex bi) const;  Get the local hexahedron index (0<i<8) from its 3 binary indices. More...;  ; virtual HexahedronBinaryIndex getBinaryIndexFromLocalIndex (const unsigned int li) const;  Get the binary index (array of 3 binary values) from its local index (0<li<8) More...;  ; HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8) override;  Get the index of a hexahedron from the indices of its vertices. More...;  ; const EdgesInHexahedron & getEdgesInHexahedron (HexaID id) override;  Get the 12 edges that form a hexahedron. More...;  ; const QuadsInHexahedron & getQuadsInHexahedron (HexaID id) ov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:8420,clear,clear,8420,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"Elements (VecEdgeID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:17585,simpl,simply,17585,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['simpl'],['simply']
Usability,"End(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7404,clear,clearCols,7404,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,2,['clear'],['clearCols']
Usability,"FA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopology, In, Out), SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, In, Out));  ;  BarycentricMapperTetrahedronSetTopology (core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  ;  Public Member Functions inherited from sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal >), SOFA_TEMPLATE2(TopologyBarycentricMapper, sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal >));  ; void clear (std::size_t reserve=0) override;  ; Index addPointInTetra (const Index index, const SReal *baryCoords) override;  ; Index addPointOrientationInTetra (const Index tetraIndex, const sofa::type::Matrix3 baryCoorsOrient);  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const sofa::linearalgebra::BaseMatrix * getJ (int outSize, int inSize) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void resize (core::State< sofa::defaulttype::StdRigidTypes< 3, TOutReal > > *toModel) override;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html:2002,clear,clear,2002,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html,1,['clear'],['clear']
Usability,"FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DirectionProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:4668,clear,clearConstraints,4668,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"Factory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quatd(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,float> > > sofa::gui::qt::DWClass_RigidCoord2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,double> > > sofa::gui::qt::DWClass_RigidCoord3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<3,float> > > sofa::gui::qt::DWClass_RigidCoord3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidMass2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidMass<2,double> > > sofa::gui::qt::DWClass_RigidMass2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:71374,Simpl,SimpleDataWidget,71374,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Generic< TBlock, TPolicy >inline; Block typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; block(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGener",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:3963,Clear,ClearByZerossofa,3963,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,1,['Clear'],['ClearByZerossofa']
Usability,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute3PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(PointID p0, PointID p1, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(Edge e, Real coord_p) constsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:2969,clear,clearLoggedMessages,2969,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['clear'],['clearLoggedMessages']
Usability,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html:2623,clear,clearLoggedMessages,2623,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,2,['clear'],['clearLoggedMessages']
Usability,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; Coord typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html:2519,clear,clearLoggedMessages,2519,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,1,['clear'],['clearLoggedMessages']
Usability,"GraphDataWidget< std::map< std::string, std::deque<float> > > > sofa::gui::qt::DWClass_mapdequef(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvector2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<Vec2d> > > > sofa::gui::qt::DWClass_mapvector2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectord. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<double> > > > sofa::gui::qt::DWClass_mapvectord(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectorf. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<float> > > > sofa::gui::qt::DWClass_mapvectorf(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_Mat22d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,double> > > sofa::gui::qt::DWClass_Mat22d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat22f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,float> > > sofa::gui::qt::DWClass_Mat22f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWCla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:66848,Simpl,SimpleDataWidget,66848,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"GridRamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridMultipleTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::grid::SparseGridTopologyprotected; convolutionSizesofa::component::topology::container::grid:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html:9143,clear,clearLoggedMessages,9143,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,HexahedronSetTopologyContainer::MultilevelHexahedronSetTopologyContainer ; (; ). protected . ◆ MultilevelHexahedronSetTopologyContainer() [2/2]. sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::MultilevelHexahedronSetTopologyContainer ; (; const type::vector< Hexahedron > & ; hexahedra). protected . ◆ ~MultilevelHexahedronSetTopologyContainer(). sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::~MultilevelHexahedronSetTopologyContainer ; (; ). overrideprotected . Function details. ◆ addTopologyChangeFine(). void sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::addTopologyChangeFine ; (; const core::topology::TopologyChange * ; topologyChange). inline . ◆ beginChangeFine(). std::list<const core::topology::TopologyChange *>::const_iterator sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::beginChangeFine ; (; ); const. inline . ◆ clear(). void sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ endChangeFine(). std::list<const core::topology::TopologyChange *>::const_iterator sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::endChangeFine ; (; ); const. inline . ◆ getChangeListFine(). const std::list<const core::topology::TopologyChange *>& sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getChangeListFine ; (; ); const. inline . ◆ getCoarseResolution(). const Vec3i& sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getCoarseResolution ; (; ); const. inline . ◆ getHexaChildren(). MultilevelHexahedronSetTopologyContainer::Index sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopolog,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:49235,clear,clear,49235,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"I;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::behavior::CRSMultiMatrixAccessor Class Reference . #include <CRSMultiMatrixAccessor.h>. Inheritance diagram for sofa::core::behavior::CRSMultiMatrixAccessor:. [legend]. Public Member Functions;  CRSMultiMatrixAccessor ();  ;  ~CRSMultiMatrixAccessor () override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void computeGlobalMatrix () override;  ;  Public Member Functions inherited from sofa::core::behavior::DefaultMultiMatrixAccessor;  DefaultMultiMatrixAccessor ();  ;  ~DefaultMultiMatrixAccessor () override;  ; virtual void clear ();  ; virtual void setGlobalMatrix (linearalgebra::BaseMatrix *matrix);  ; void addMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void addMappedMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; MatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; InteractionMatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const override;  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Static Public Member Functions; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2);  ; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor.html:808,clear,clear,808,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"IGNED_INT, sofa::type::Vec< 3, unsigned int > >, sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >, sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >, sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >, sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >, sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >, sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >, sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >, sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >, sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >, sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering3d::ClipPlane. ◆ clearVisual(). virtual void sofa::core::visual::VisualModel::clearVisual ; (; ). inlinevirtual . clear some graphical resources (generally called before the deleteVisitor). ; Note: for more general usage you can use the cleanup visitor . ◆ drawShadow(). virtual void sofa::core::visual::VisualModel::drawShadow ; (; const VisualParams * ; vparams). inlinevirtual . Display shadow-casting surfaces. ; This method default to calling draw(). Object that do not cast any shadows, or that use a different LOD for them should reimplement it. ; Reimplemented in sofa::component::visual::VisualModelImpl. ◆ drawTransparent(). virtual void sofa::core::visual::VisualModel::drawTransparent ; (; const VisualParams * ; ). inlinevirtual . Display transparent surfaces. ; Transparent objects should use this method to get a correct display order. ; Reimplemented in sofa::component::visual::VisualTransform, sofa::gl::component::rendering3d::SlicedVolumetricModel, sofa::gl::component::rendering3d::PointSplatModel, sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:18925,clear,clearVisual,18925,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['clear'],['clearVisual']
Usability,"Id v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglShaderVisualModelvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeRestNormals()sofa::gl::component::shader::OglShaderVisualModel; computeRestPositions()sofa::gl::component::shader::OglShaderVisualModel; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html:3613,clear,clearLoggedMessages,3613,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,2,['clear'],['clearLoggedMessages']
Usability,"In, TInRoot, TOut >; applyJT(InVecDeriv &out, const OutVecDeriv &in, InRootVecDeriv *outroot)sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; applyJT(const core::MechanicalParams *, const type::vector< InDataVecDeriv * > &dataVecOutForce, const type::vector< InRootDataVecDeriv * > &dataVecOutRootForce, const type::vector< const OutDataVecDeriv * > &dataVecInForce) overridesofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; applyJT(InMatrixDeriv &out, const OutMatrixDeriv &in, InRootMatrixDeriv *outroot)sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; applyJT(const core::ConstraintParams *, const type::vector< InDataMatrixDeriv * > &dataMatOutConst, const type::vector< InRootDataMatrixDeriv * > &dataMatOutRootConst, const type::vector< const OutDataMatrixDeriv * > &dataMatInConst) overridesofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; clear(int reserve=0)sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; Coord typedefsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_globalToLocalCoordssofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_indexsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_indexFromEndsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_repartitionsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_rootAngularForceScaleFactorsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_rootLinearForceScaleFactorsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; datasofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; DeformableOnRigidFrameMapping()sofa::component::mapping::linear::Deform",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping-members.html:2751,clear,clear,2751,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping-members.html,1,['clear'],['clear']
Usability,"In2, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK >, sofa::core::objectmodel::MultiLink< Multi2Mapping< In1, In2, Out >, State< In2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK >, sofa::core::objectmodel::MultiLink< DAGNode, DAGNode, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_DOUBLELINK >, sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>, and sofa::core::objectmodel::MultiLink< MyType, sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >, BaseLink::FLAG_DUPLICATE >. ◆ addPath(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::addPath ; (; const std::string & ; path). inline . ◆ begin(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::begin ; (; ); const. inline . ◆ clear(). template<class TOwnerType , class TDestType , unsigned TFlags> . void sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::clear ; (; ). inline . ◆ empty(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::empty ; (; ); const. inline . ◆ end(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::end ; (; ); const. inline . ◆ getDestClass(). template<class TOwnerType , class TDestType , unsigned TFlags> . const BaseClass* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getDestClass ; (; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseLink. ◆ getIndex(). template<class TOwnerType , class TDestType , unsigned TFlags> . DestType* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getIndex ; (; std::size_t ; index); const. inlineprotected . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:31346,clear,clear,31346,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['clear'],['clear']
Usability,"Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSpars",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5737,clear,clearCols,5737,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,2,['clear'],['clearCols']
Usability,"Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5427,clear,clearRows,5427,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRows']
Usability,"Index, . const SReal * ; baryCoords . ). override . ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::draw ; (; const core::visual::VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ getTopology(). template<class In , class Out > . RegularGridTopology* sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::getTopology ; (; ). inline . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html:5188,clear,clear,5188,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,1,['clear'],['clear']
Usability,"IndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ add() [4/4]. template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::add ; (; const core::matrixaccumulator::no_check_policy & ; , . sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . float ; value . ). overrideprotectedvirtual . Reimplemented from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ clear(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::clear. override . ◆ getMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::getMatrix. ◆ shareMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::shareMatrix ; (; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & ; m). ◆ SOFA_CLASS(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::SOFA_CLASS ; (; AssemblingMappedMatrixAccumulator< c, TBlockType > ; , . AssemblingMatrixAccumulator< c > ;  . ). sofacomponentlinearsystemAssemblingMappedMatrixAccumulator; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:9629,clear,clear,9629,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,1,['clear'],['clear']
Usability,"Index ; , . const std::string & ;  . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:4104,simpl,simply,4104,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,2,['simpl'],['simply']
Usability,"Inheritance diagram for sofa::core::collision::DetectionOutputVector:. [legend]; Detailed Description; Abstract description of a set of contact point. . Public Member Functions; virtual void clear ()=0;  Clear the content of this vector. More...;  ; virtual unsigned int size () const =0;  Current size (number of detected contacts. More...;  ; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx)=0;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx)=0;  Const iterator end to iterate the detection pairs. More...;  . Protected Member Functions; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~DetectionOutputVector(). virtual sofa::core::collision::DetectionOutputVector::~DetectionOutputVector ; (; ). inlineprotectedvirtual . Function details. ◆ clear(). virtual void sofa::core::collision::DetectionOutputVector::clear ; (; ). pure virtual . Clear the content of this vector. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ empty(). bool sofa::core::collision::DetectionOutputVector::empty ; (; ); const. inline . Test if the vector is empty. . ◆ getFirstPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getFirstPosition ; (; unsigned ; idx). pure virtual . Const iterator to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ getSecondPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getSecondPosition ; (; unsigned ; idx). pure virtual . Const iterator end to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ release(). virtual void sofa::core::collision::DetectionOutputVector::release ; (; ). inlinevirtual . Delete this vector from memory once",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html:1385,clear,clear,1385,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,1,['clear'],['clear']
Usability,"Init()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::SubsetTopology< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centerssofa::component::engine::select::SubsetTopology< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::engine::select::SubsetTopology< DataTypes >virtual; Coord typedefsofa::component::engine::select::SubsetTopology< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::SubsetTopology< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_tetrahedraInputsofa::component::engine::select::SubsetTopology< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html:3185,clear,clearLoggedMessages,3185,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Iterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::head. protected . ◆ tail. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::tail. protected . Constructor details. ◆ ManyThreadsPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::ManyThreadsPerEnd::ManyThreadsPerEnd ; (; ). inlineprotected . Function details. ◆ init(). SOFA_HELPER_API void sofa::helper::system::thread::ManyThreadsPerEnd::init ; (; AtomicInt ; array[], . int ; maxCapacity . ). inlineprotected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isEmpty ; (; unsigned ; maxSize); const. inlineprotected . ◆ isFull(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isFull ; (; unsigned ; maxSize); const. inlineprotected . ◆ pop() [1/2]. SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::pop ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . AtomicInt & ; item, . bool ; clear = true . ). inlineprotected . ◆ pop() [2/2]. template<class OutputIterator > . unsigned sofa::helper::system::thread::ManyThreadsPerEnd::pop ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . OutputIterator ; out, . unsigned ; outmaxsize, . bool ; clear = true . ). protected . ◆ push(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::push ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . const AtomicInt & ; item . ). inlineprotected . ◆ size(). SOFA_HELPER_API unsigned sofa::helper::system::thread::ManyThreadsPerEnd::size ; (; unsigned ; maxSize); const. inlineprotected . ◆ skip(). SOFA_HELPER_API unsigned sofa::helper::system::thread::ManyThreadsPerEnd::skip ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . unsigned ; outmaxsize, . bool ; clear = true . ). inlineprotected . sofahelpersystemthreadManyThreadsPerEnd; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html:2361,clear,clear,2361,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,6,['clear'],['clear']
Usability,I MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Types >. template class SOFA_COMPONENT_STATECONTAINER_API sofa::component::statecontainer::MappedObject< Rigid2Types >. ◆ MappedObject< Rigid3Types >. template cla,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2575,clear,clear,2575,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,2,['clear'],['clear']
Usability,"LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19224,clear,clear,19224,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],['clear']
Usability,"List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:1776,clear,clear,1776,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,2,['clear'],['clear']
Usability,"M in parent given the coordinates M_c of the same point in child are given by: M_p = orientation * ( M_c - origin ). This is due to Featherstone's conventions. Use method setTranslationRotation( const Vec& t, const Rot& q ) to model the Transform the standard way (i.e. translation given in the parent frame). . Protected Attributes; Rot orientation_;  child wrt parent More...;  ; Vec origin_;  parent wrt child More...;  . Public Member Functions;  Transform ();  The default constructor does not initialize the transform. More...;  ;  Transform (const Vec &origin, const Rot &orientation);  Origin of the child in parent coordinates, orientation of the child wrt to parent. More...;  ;  Transform (const Rot &q, const Vec &o);  WARNING: using Featherstone's conventions (see class documentation) More...;  ; void set (const Vec &t, const Rot &q);  Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) More...;  ; void clear ();  Reset this to identity. More...;  ;  Transform (const SpatialVector< TReal > &v);  Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) More...;  ; Transform inversed () const;  The inverse transform i.e. parent wrt child. More...;  ; const Vec & getOriginOfParentInChild () const;  Parent origin in child coordinates (the way it is actually stored internally) More...;  ; Vec getOrigin () const;  Origin of child in parent coordinates. More...;  ; void setOrigin (const Vec &);  Origin of child in parent coordinates. More...;  ; const Rot & getOrientation () const;  Orientation of the child coordinate axes wrt the parent coordinate axes. More...;  ; void setOrientation (const Rot &);  Orientation of the child coordinate axes wrt the parent coordinate axes. More...;  ; Mat3x3 getRotationMatrix () const;  Matrix which projects vectors from child coordinates to parent coordinates. The columns of the matrix are the axes of the c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:1721,clear,clear,1721,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,2,['clear'],['clear']
Usability,"Manager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferRead ; (; bool ; create = false). inline . Get the Buffer Object ID for reading. . ◆ bufferWrite(). template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferWrite ; (; bool ; create = false). inline . Get the Buffer Object ID for writing. . ◆ capacity(). template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::capacity ; (; ); const. inline . ◆ checkIndex(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::checkIndex ; (; Size ; i); const. inlineprotected . ◆ clear(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::clear ; (; ). inline . ◆ copyToDevice(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToDevice ; (; int ; d = 0); const. inlineprotected . ◆ copyToHost(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHost ; (; ); const. inlineprotected . ◆ copyToHostSingle(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHostSingle ; (; Size ; i); const. inlineprotected . ◆ createBuffer(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::createBuffer ; (; ). inlineprotected . ◆ data() [1/2]. template<class T , class MemoryManager , class DataTypeInfoManager > . T* sofa::typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:10301,clear,clear,10301,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,2,['clear'],['clear']
Usability,"Matrix(Index nbRow, Index nbCol)sofa::linearalgebra::BlockFullMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstItera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5860,clear,clearRow,5860,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,2,['clear'],['clearRow']
Usability,"Member List . This is the complete list of members for sofa::gui::qt::GraphVisitor, including all inherited members. addComment(QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment)sofa::gui::qt::GraphVisitor; addInformation(QTreeWidgetItem *element, std::string name, std::string info)sofa::gui::qt::GraphVisitor; addNode(QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info)sofa::gui::qt::GraphVisitor; addTime(QTreeWidgetItem *element, std::string info)sofa::gui::qt::GraphVisitor; clear()sofa::gui::qt::GraphVisitorinline; componentsTimesofa::gui::qt::GraphVisitorprotected; componentsTimeMaxsofa::gui::qt::GraphVisitorprotected; componentsTimeTotalsofa::gui::qt::GraphVisitorprotected; getTime(const tinyxml2::XMLAttribute *attribute) constsofa::gui::qt::GraphVisitorinline; getTotalTime(tinyxml2::XMLNode *node) constsofa::gui::qt::GraphVisitor; graphsofa::gui::qt::GraphVisitorprotected; GraphVisitor(WindowVisitor *w)sofa::gui::qt::GraphVisitorinline; initSizesofa::gui::qt::GraphVisitorprotected; levelsofa::gui::qt::GraphVisitorprotected; load(std::string &file)sofa::gui::qt::GraphVisitor; openAttribute(tinyxml2::XMLElement *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; openNode(tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove)sofa::gui::qt::GraphVisitorprotected; openTime(tinyxml2::XMLNode *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; setGraph(QTreeWidget *g)sofa::gui::qt::GraphVisitorinline; timeComponentsBelowsofa::gui::qt::GraphVisitorprotected; totalTimesofa::gui::qt::GraphVisitorprotected; totalTimeMaxsofa::gui::qt::GraphVisitorprotected; visitedNodesofa::gui::qt::GraphVisitorprotected; visitorsTimesofa::gui::qt::GraphVisitorprotected; visitorsTimeMaxsofa::gui::qt::GraphVisitorprotected; visitorsTimeTotalsofa::gui::qt::GraphVisitorprotected; windowsofa::gui::qt::GraphVisitorprotected. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html:657,clear,clear,657,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,2,['clear'],['clear']
Usability,"MeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::topology::container::constant::SphereQuadTopologyprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologypro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html:3656,clear,clear,3656,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,1,['clear'],['clear']
Usability,Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] model not visible in runsofa. /model-order-reduction-phase-3-animation-issue; ; SOFA - Topic: Model Order Reduction Phas,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:349137,simpl,simple,349137,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,"More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualStyle, sofa::core::visual::VisualModel);  ; void fwdDraw (VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html:4369,clear,clearVisual,4369,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"NbPoints () const override;  ; Size getNbHexahedra () override;  TODO 2018-07-23 epernod: check why this method is override to return the same result as parent class. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::MeshTopology;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:13516,clear,clear,13516,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,3,['clear'],['clear']
Usability,"OFA - Topic: [SOLVED] Fixed constraints not so fixed with GenericConstraintSolver. /fixedrotationconstraint-and-linearmovementconstraint-not-working; ; SOFA - Topic: [SOLVED] FixedRotationConstraint and LinearMovementConstraint not working. /fixing-collision-for-a-static-floor; ; SOFA - Topic: [SOLVED] Fixing Collision for a static floor. /flexible-plugin-fails-to-compile-in-v17-12; ; SOFA - Topic: [SOLVED] Flexible plugin fails to compile in v17.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:305846,feedback,feedback-not-working-correctly-when-using-two-haptic-devices,305846,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-not-working-correctly-when-using-two-haptic-devices']"
Usability,"OFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection for deformable objects. /collision-detection-of-interactive-training-system-for-interventional; ; SOFA - Topic: [SOLVED] Collision detection of ""Interactive Training System for Interventional…."". /collision-detection-problem; ; SOFA - Topic: [SOLVED] Collision detection problem. /collision-groups; ; SOFA - Topic: [SOLVED] Collision groups. /collision-in-cuda; ; SOFA - Topic: Collision in CUDA. /collision-not-work-through-python; ; SOFA - Topic: [SOLVED] Collision not work through python. /collision-problems-in-grasping-using-phantom-omni; ; SOFA - Topic: [SOLVED] Collision problems in grasping using Phantom omni. /collision-response-between-two-objects; ; SOFA - Topic: Collision response between two objects. /collision-response-with-ben",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:276180,feedback,feedback-force,276180,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-force']"
Usability,OFA dedicated to? How to use it as physics engine?. /questions-regarding-the-installation-of-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Questions regarding the installation of SofaPython3 plugin. /random-linear-force-field; ; SOFA - Topic: [SOLVED] Random Linear Force Field. /rayleigh-numerical-damping; . /feed; ; Rayleigh/Numerical damping – SOFA. SOFA - Topic: Rayleigh/Numerical damping. /read-data-from-external-file; ; SOFA - Topic: [SOLVED] Read data from external file. /reading-indices-of-fixedconstraint-from-an-ascii-file; ; SOFA - Topic: [SOLVED] Reading indices of FixedConstraint from an ascii file. /reading-stl-file-vertices-from-my-own-component; ; SOFA - Topic: [SOLVED] reading STL file vertices from my own component. /realistic-behavior-of-a-liver-and-its-skin; ; SOFA - Topic: [SOLVED] Realistic behavior of a liver and its skin. /realtime-fea-visualization-with-ros; ; SOFA - Topic: Realtime FEA visualization with ROS. /receive-realtime-force-feedback-in-batch-mode; ; SOFA - Topic: Receive realtime force feedback in batch mode. /recommendation-of-the-versions-for-sofa-dependencies; ; SOFA - Topic: Recommendation of the Versions for SOFA Dependencies. /recordedcamera-in-sofapython; ; SOFA - Topic: [SOLVED] RecordedCamera in SofaPython ?. /recording-images-of-scenes; . /page; . /2; ; SOFA - Topic: Recording images of scenes. SOFA - Topic: Recording images of scenes. /regarding-modeler; ; SOFA - Topic: Regarding Modeler. /register-for-the-sofa-week-2019-now; . /feed; ; Register for the SOFA Week 2019 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2019 now!. /register-for-the-sofa-week-2020-now; . /feed; ; Register for the SOFA Week 2020 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2020 now!. /removing-and-adding-compliance-nodes-in-simulation-compliant-module; ; SOFA - Topic: [SOLVED] Error while Adding Compliance nodes in the simulation (Compliant module). /rendering-a-scene-in-stereoscopic-3d; ; SOFA - Topic: [SOLVED] Rendering a scene in ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:375609,feedback,feedback-in-batch-mode,375609,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-in-batch-mode']"
Usability,"OFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:2825,clear,clearVisual,2825,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,2,['clear'],"['clear', 'clearVisual']"
Usability,Object. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] model not visible in runsofa. /model-order-reduction-phase-3-animat,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:349087,simpl,simple,349087,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,"PCALC_AFFICHELCP_DISABLED () void afficheLCP(SReal *q;  ; SOFA_HELPER_API void resultToString (std::ostream &s, SReal *f, int dim);  ; template<Size NumRows, Size NumCols, class Real > ; Eigen::Matrix< Real, NumRows, NumCols > eigenMat (const type::Mat< NumRows, NumCols, Real > &mat);  ; template<Size NumRows, Size NumCols, class Real > ; type::Mat< NumRows, NumCols, Real > sofaMat (const Eigen::Matrix< Real, NumRows, NumCols > &emat);  ; template<Size NumRows, class Real > ; type::Vec< NumRows, Real > sofaVec (const Eigen::Matrix< Real, NumRows, 1 > &evec);  ; template<Size NumRows, class Real > ; Eigen::Matrix< Real, NumRows, 1 > eigenVec (const type::Vec< NumRows, Real > &vec);  ; template<class T , class U > ; constexpr T narrow_cast_nocheck (U &&u) noexcept;  Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) More...;  ; template<class T , class U > ; constexpr T narrow_cast_check (U u);  ; template<class T , class U > ; constexpr T narrow_cast (U &&u);  Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) More...;  ; std::ostream & operator<< (std::ostream &on, const OptionsGroup &m_trick);  ; std::istream & operator>> (std::istream &in, OptionsGroup &m_trick);  ; template<typename FReal , unsigned int FN> ; std::ostream & operator<< (std::ostream &out, const Monomial_LD< FReal, FN > &m_monomial);  ; template<typename FReal , unsigned int FN> ; std::istream & operator>> (std::istream &in, Monomial_LD< FReal, FN > &m_monomial);  ; template<typename FReal , unsigned int FN> ; std::ostream & operator<< (std::ostream &stream, const Polynomial_LD< FReal, FN > &m_polynomial);  ; template<typename FReal , unsigned int FN> ; std::istream & operator>> (std::istream &stream, Polynomial_LD< FReal, FN > &m_polynomial);  ; template<typename FReal , unsigned int FN> ; Monomial_LD< FReal, FN > & operator* (const FReal &alpha, Monomial_LD< FReal, FN > &r);  ; template<type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:13767,Guid,Guidelines,13767,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['Guid'],['Guidelines']
Usability,"PRESSED ; RELEASED ; ACTIVATED ; DEACTIVATED . Function Documentation. ◆ decodeCollisionElement() [1/2]. void SOFA_GUI_COMMON_API sofa::gui::common::decodeCollisionElement ; (; const RGBAColor & ; colour, . BodyPicked & ; body . ). ◆ decodeCollisionElement() [2/2]. void sofa::gui::common::decodeCollisionElement ; (; const sofa::type::Vec4f & ; colour, . sofa::gui::component::performer::BodyPicked & ; body . ). delete . ◆ decodePosition() [1/4]. void SOFA_GUI_COMMON_API sofa::gui::common::decodePosition ; (; BodyPicked & ; body, . const RGBAColor & ; colour, . const SphereCollisionModel< sofa::defaulttype::Vec3Types > * ; model, . const unsigned int ; index . ). ◆ decodePosition() [2/4]. void SOFA_GUI_COMMON_API sofa::gui::common::decodePosition ; (; BodyPicked & ; body, . const RGBAColor & ; colour, . const TriangleCollisionModel< sofa::defaulttype::Vec3Types > * ; model, . const unsigned int ; index . ). ◆ decodePosition() [3/4]. void sofa::gui::common::decodePosition ; (; sofa::gui::component::performer::BodyPicked & ; body, . const sofa::type::Vec4f & ; colour, . const sofa::component::collision::geometry::SphereCollisionModel< sofa::defaulttype::Vec3Types > * ; model, . const unsigned int ; index . ). delete . ◆ decodePosition() [4/4]. void sofa::gui::common::decodePosition ; (; sofa::gui::component::performer::BodyPicked & ; body, . const sofa::type::Vec4f & ; colour, . const sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types > * ; model, . const unsigned int ; index . ). delete . ◆ init(). void SOFA_GUI_COMMON_API sofa::gui::common::init ; (; ). Variable Documentation. ◆ GuiDataRepository. SOFA_GUI_COMMON_API sofa::helper::system::FileRepository sofa::gui::common::GuiDataRepository ; (; ""GUI_DATA_PATH"" ; , . { Utils::getSofaPathTo(""share/sofa/gui/qt"") } ; , . { { Utils::getSofaPathTo(""etc/Sofa.Gui.Qt.ini"").c_str(), {""RESOURCES_DIR""} } } ;  . ). sofaguicommon; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1common.html:4350,GuiD,GuiDataRepository,4350,api/master/sofa/html/namespacesofa_1_1gui_1_1common.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1common.html,2,['GuiD'],['GuiDataRepository']
Usability,"PairInteractionConstraint< TDataTypes >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2)=0sofa::core::behavior::PairInteractionConstraint< TDataTypes >pure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html:2806,clear,clearLoggedMessages,2806,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"PairOfMechanicalStates > &groups)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildHashTable(linearalgebra::CompressedRowSparseMatrix< SReal > &M, ConstantCRSMapping &mapping)sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protectedstatic; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstantCRSMapping typedefsofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >; ConstantSparsityPatternSystem()sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protected; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html:3813,clear,clearLoggedMessages,3813,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"PickHandler::useCollisions. protected . Constructor details. ◆ PickHandler(). sofa::gui::common::PickHandler::PickHandler ; (; double ; defaultLength = 1000000). ◆ ~PickHandler(). sofa::gui::common::PickHandler::~PickHandler ; (; ). virtual . Function details. ◆ activateRay(). void sofa::gui::common::PickHandler::activateRay ; (; int ; width, . int ; height, . core::objectmodel::BaseNode * ; root . ). ◆ addCallBack(). void sofa::gui::common::PickHandler::addCallBack ; (; CallBackPicker * ; c). inline . ◆ allocateSelectionBuffer(). void sofa::gui::common::PickHandler::allocateSelectionBuffer ; (; int ; width, . int ; height . ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ changeOperation() [1/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; MOUSE_BUTTON ; button, . const std::string & ; op . ). ◆ changeOperation() [2/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). ◆ clearCallBacks(). void sofa::gui::common::PickHandler::clearCallBacks ; (; ). inline . ◆ deactivateRay(). void sofa::gui::common::PickHandler::deactivateRay ; (; ). ◆ destroySelectionBuffer(). void sofa::gui::common::PickHandler::destroySelectionBuffer ; (; ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ findCollision(). BodyPicked sofa::gui::common::PickHandler::findCollision ; (; ). protectedvirtual . ◆ findCollisionUsingBruteForce() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; ). protected . ◆ findCollisionUsingBruteForce() [2/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; const type::Vec3 & ; origin, . const type::Vec3 & ; direction, . double ; maxLength, . core::objectmodel::BaseNode * ; root . ). static . ◆ findCollisionUsingColourCoding() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingColourCoding ; (; ). protected . ◆ findCollisionUsingColourCoding() [2/2]. BodyPicked sofa::gui:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html:5408,clear,clearCallBacks,5408,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,2,['clear'],['clearCallBacks']
Usability,PointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4976,clear,clearEdgesInTriangle,4976,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearEdgesInTriangle']
Usability,"Pool.h>; Detailed Description; This class is responsible for providing a buffer for communicating aspects between threads, such that only the most up to date aspect is kept, and the previous one is reused to send the next update. This is similar to triple buffering. . Protected Attributes; AspectPool & pool;  ; AtomicInt latestID;  -1 or aspect ID of the last version sent More...;  ; AtomicInt availableID;  -1 or aspect ID available to send the next version More...;  . Public Member Functions;  AspectBuffer (AspectPool &pool);  ;  ~AspectBuffer ();  ; AspectRef allocate ();  Allocate an aspect ID to prepare the next version, reusing a recent one if possible. More...;  ; void push (AspectRef id);  Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) More...;  ; bool pop (AspectRef &id);  Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) More...;  ; void clear ();  . Attribute details. ◆ availableID. AtomicInt sofa::core::objectmodel::AspectBuffer::availableID. protected . -1 or aspect ID available to send the next version . ◆ latestID. AtomicInt sofa::core::objectmodel::AspectBuffer::latestID. protected . -1 or aspect ID of the last version sent . ◆ pool. AspectPool& sofa::core::objectmodel::AspectBuffer::pool. protected . Constructor details. ◆ AspectBuffer(). sofa::core::objectmodel::AspectBuffer::AspectBuffer ; (; AspectPool & ; pool). ◆ ~AspectBuffer(). sofa::core::objectmodel::AspectBuffer::~AspectBuffer ; (; ). Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectBuffer::allocate ; (; ). Allocate an aspect ID to prepare the next version, reusing a recent one if possible. . ◆ clear(). void sofa::core::objectmodel::AspectBuffer::clear ; (; ). Clear the buffers This must be called before either the AspectPool or this buffer is deleted . ◆ pop(). bool sofa::core::objectmodel::AspectBuffer::pop ; (; AspectRef & ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html:1286,clear,clear,1286,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,1,['clear'],['clear']
Usability,"Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:7089,clear,clearKeyMovements,7089,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"Ptr(). template<class T , class TDestPtr , class TPtr = T*> . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::SinglePtr ; (; ). inline . Function details. ◆ add(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::add ; (; TDestPtr ; v). inline . ◆ addBegin(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::addBegin ; (; TDestPtr ; v). inline . ◆ begin(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::begin ; (; ); const. inline . ◆ cbegin(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::cbegin ; (; ); const. inline . ◆ cend(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::cend ; (; ); const. inline . ◆ clear(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::clear ; (; ). inline . ◆ crbegin(). template<class T , class TDestPtr , class TPtr = T*> . const_reverse_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::crbegin ; (; ); const. inline . ◆ crend(). template<class T , class TDestPtr , class TPtr = T*> . const_reverse_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::crend ; (; ); const. inline . ◆ empty(). template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::empty ; (; ); const. inline . ◆ end(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::end ; (; ); const. inline . ◆ get() [1/2]. template<class T , class TDestPtr , class TPtr = T*> . TPtr& sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::get ; (; ). inline . ◆ get() [2/2]. templat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html:2965,clear,clear,2965,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,1,['clear'],['clear']
Usability,"QuadArray array (i.e. provide the 4 edge indices for each quad) More...;  ; const sofa::type::vector< QuadsAroundVertex > & getQuadsAroundVertexArray ();  Returns the QuadsAroundVertex array (i.e. provide the quad indices adjacent to each vertex). More...;  ; const sofa::type::vector< QuadsAroundEdge > & getQuadsAroundEdgeArray ();  Returns the QuadsAroundEdge array (i.e. provide the quad indices adjacent to each edge). More...;  ; bool hasQuads () const;  ; bool hasEdgesInQuad () const;  ; bool hasQuadsAroundVertex () const;  ; bool hasQuadsAroundEdge () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  . const SeqQuads & getQuads () override;  Returns the quad array. More...;  ; const Quad getQuad (QuadID id) override;  Returns the quad corresponding to the QuadID i. More...;  ; QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  ; const EdgesInQuad & getEdgesInQuad (QuadID id) override;  Returns the set of edges adjacent to a given quad. More...;  ; const QuadsAroundVertex & getQuadsAroundVertex (PointID id) override;  Returns the set of quads adjacent to a given vertex. More...;  ; const QuadsAroundEdge & getQuadsAroundEdge (EdgeID id) override;  Returns the set of quads adjacent to a given edge. More...;  ; int getVertexIndexInQuad (const Quad &t, PointID vertexIndex) const override;  Returns the index (either 0, 1, 2, 3) of the vertex whose global index is vertexIndex. More...;  ; int getEdgeIndexInQuad (const EdgesInQuad &t, EdgeID edheIndex) const override;  Returns the index (either 0, 1, 2, 3) of the edge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:6623,clear,clear,6623,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clear']
Usability,"QuatCoord3< real > identity ();  . Friends; std::ostream & operator<< (std::ostream &out, const DualQuatCoord3< real > &v);  ; std::istream & operator>> (std::istream &in, DualQuatCoord3< real > &v);  . Constructor details. ◆ DualQuatCoord3() [1/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const Quat & ; Dual, . const Quat & ; orient . ). inline . ◆ DualQuatCoord3() [2/4]. template<class real > . template<typename real2 > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const DualQuatCoord3< real2 > & ; c). inline . ◆ DualQuatCoord3() [3/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const Pos & ; p, . const sofa::type::Quat< real > & ; q . ). inline . ◆ DualQuatCoord3() [4/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; ). inline . ◆ ~DualQuatCoord3(). template<class real > . sofa::type::DualQuatCoord3< real >::~DualQuatCoord3 ; (; ). inline . Function details. ◆ clear(). template<class real > . void sofa::type::DualQuatCoord3< real >::clear ; (; ). inline . ◆ getDual() [1/2]. template<class real > . Quat& sofa::type::DualQuatCoord3< real >::getDual ; (; ). inline . ◆ getDual() [2/2]. template<class real > . const Quat& sofa::type::DualQuatCoord3< real >::getDual ; (; ); const. inline . ◆ getOrientation() [1/2]. template<class real > . Quat& sofa::type::DualQuatCoord3< real >::getOrientation ; (; ). inline . ◆ getOrientation() [2/2]. template<class real > . const Quat& sofa::type::DualQuatCoord3< real >::getOrientation ; (; ); const. inline . ◆ getTranslation(). template<class real > . Vec3 sofa::type::DualQuatCoord3< real >::getTranslation ; (; ). inline . ◆ identity(). template<class real > . static DualQuatCoord3<real> sofa::type::DualQuatCoord3< real >::identity ; (; ). inlinestatic . ◆ inverse(). template<typename real > . DualQuatCoord3< real > sofa::type::DualQuatCoord3< real >::inverse. ◆ inverseRotate(). template<typename real > . type::V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html:4718,clear,clear,4718,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,2,['clear'],['clear']
Usability,"Quaternion &orient, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length)sofa::gl::Axis; Axis(const double *mat, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Axis; Axis(const double *mat, SReal length=1.0_sreal)sofa::gl::Axis; clear()sofa::gl::Axisinlinestatic; draw(const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axis; draw(const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const double *mat, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html:821,clear,clear,821,api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,2,['clear'],['clear']
Usability,"RamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridRamificationTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::grid::SparseGridTopologyprotected; convolutionSizesofa::component::topology::container::grid:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html:8029,clear,clearLoggedMessages,8029,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Range ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48919,Clear,Clear,48919,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['Clear'],['Clear']
Usability,"Real, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:2722,clear,clearLoggedMessages,2722,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,6,['clear'],['clearLoggedMessages']
Usability,"Real> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; NoInit ; ). inlineexplicitconstexprnoexcept . ◆ MatSym() [3/5]. template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const real & ; v1, . const real & ; v2, . const real & ; v3, . const real & ; v4, . const real & ; v5, . const real & ; v6 . ). inlineconstexpr . Constructor from 6 elements. . ◆ MatSym() [4/5]. template<sofa::Size D, class real = SReal> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const sofa::Size ; sizeM, . const real & ; v . ). inlineconstexpr . Constructor from an element. . ◆ MatSym() [5/5]. template<sofa::Size D, class real = SReal> . template<typename real2 > . sofa::type::MatSym< D, real >::MatSym ; (; const MatSym< D, real2 > & ; m). inlineexplicit . Constructor from another matrix. . Function details. ◆ clear(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::clear ; (; ). inline . Sets each element to 0. . ◆ fill(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::fill ; (; real ; r). inline . Sets each element to r. . ◆ getVoigt(). template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> . Vec<NumberStoredValues, real> sofa::type::MatSym< D, real >::getVoigt ; (; ); const. inline . convert to Voigt notation (supported only for D == 2 and D == 3) . ◆ identity(). template<sofa::Size D, class real = SReal> . constexpr void sofa::type::MatSym< D, real >::identity ; (; ). inlineconstexpr . Set matrix to identity. . ◆ invert(). template<sofa::Size D, class real = SReal> . bool sofa::type::MatSym< D, real >::invert ; (; const MatSym< D, real > & ; m). inline . Invert matrix m. . ◆ Mat2Sym(). template<sofa::Size D, class real = SReal> . static void sofa::type::MatSym< D, real >::Mat2Sym ; (; const Mat< D, D, real > & ; M, . MatSym< D, real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:16206,clear,clear,16206,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,2,['clear'],['clear']
Usability,"Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; const VecEdgeID getElementAroundElement (EdgeID elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; const VecEdgeID getElementAroundElements (VecEdgeID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:7586,clear,clear,7586,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clear']
Usability,"RowBlockConstIterator sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsEnd ; (; ); const. inlineoverridevirtual . Get the iterator corresponding to the end of the rows of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48116,clear,clear,48116,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:8007,clear,clear,8007,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,3,['clear'],['clear']
Usability,"SOFA_CLASS (LineAxis, VisualModel);  ;  LineAxis ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateLine ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html:3604,clear,clearVisual,3604,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"SOLVER_DIRECT_API EigenSimplicialLLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseLU< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseQR< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API PrecomputedLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SparseLDLSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< FullMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  . Typedef Documentation. ◆ SimplicialLDLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLDLTTraits = typedef DeprecatedAndRemoved. ◆ SimplicialLLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLLTTraits = typedef DeprecatedAndRemoved. ◆ SparseLUTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseLUTraits = typedef DeprecatedAndRemoved. ◆ SparseQRTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseQRTraits = typedef DeprecatedAndRemoved. Function Documentation. ◆ compareMatrixShape(). bool sofa::component::linearsolver::direct::compareMatrixShape ; (; int ; s_M, . int * ; M_colptr, . int * ; M_rowind, . int ; s_P, . int * ; P_colptr, . int * ; P_rowind . ). inline . ◆ CSPARSE_numeric(). template<class Real > . void sofa::component::linearsolver::direct::CSPARSE_numeric ; (; int ; n, . int * ; M_colptr, . int * ; M_rowind, . Real * ; M_values, . int * ; colptr, . int * ; rowind, . Real * ; values, . Real * ; D, . int * ; perm, . int * ; invperm, . int * ; Parent, . int * ; Flag, . int * ; Lnz, . int * ; Pattern, . Real * ; Y . ). inline . ◆ CSPARSE_symbolic(). void sofa::component::linearsolver::direct::CSPAR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html:4880,Simpl,SimplicialLLTTraits,4880,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,1,['Simpl'],['SimplicialLLTTraits']
Usability,"SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::VisualTransform; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recursivesofa::component::visual::VisualTransform; d_transformsofa::component::visual::VisualTransform; doDrawVisual(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const sofa::core::visual::VisualParams *vpara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:2454,clear,clearLoggedMessages,2454,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['clear'],['clearLoggedMessages']
Usability,"SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; CompositingVisualLoop()sofa::gl::component::shader::CompositingVisualLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html:2571,clear,clearLoggedMessages,2571,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:2555,clear,clearLoggedMessages,2555,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,2,['clear'],['clearLoggedMessages']
Usability,"Scale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d::ClipPlanevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::gl::component::rendering3d::ClipPlanevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; ClipPlane()sofa::gl::component::rendering3d::ClipPlaneprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:2570,clear,clearLoggedMessages,2570,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Scheduler * > > m_lastInserted {};  . Public Member Functions; bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName) const;  ; bool hasScheduler (const std::string &taskSchedulerName) const;  ; const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted () const;  ; void clear ();  ;  ~TaskSchedulerRegistry ();  . Attribute details. ◆ m_lastInserted. std::optional<std::pair<std::string, TaskScheduler*> > sofa::simulation::TaskSchedulerRegistry::m_lastInserted {}. protected . ◆ m_schedulers. std::map<std::string, TaskScheduler*> sofa::simulation::TaskSchedulerRegistry::m_schedulers. protected . Constructor details. ◆ ~TaskSchedulerRegistry(). sofa::simulation::TaskSchedulerRegistry::~TaskSchedulerRegistry ; (; ). Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::TaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). Add a task scheduler to the registry and transfer the ownership . ◆ clear(). void sofa::simulation::TaskSchedulerRegistry::clear ; (; ). Clear the registry and destroy the task schedulers sstored in the registry . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::TaskSchedulerRegistry::getLastInserted ; (; ); const. ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::TaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName); const. Returnsa @TaskScheduler if the scheduler name is found in the registry, nullptr otherwise . ◆ hasScheduler(). bool sofa::simulation::TaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName); const. Returnstrue if the scheduler name is found in the registry, false otherwise . sofasimulationTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html:1737,clear,clear,1737,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,5,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"Sets this quaternion to the rotation required to rotate direction vector vFrom to direction vector vTo. ; vFrom and vTo are assumed to be normalized. . Function details. ◆ angularDisplacement(). template<class Real > . auto sofa::type::Quat< Real >::angularDisplacement ; (; const Quat< Real > & ; a, . const Quat< Real > & ; b . ); -> Vec3. static . Return the eulerian vector resulting of the movement between 2 quaternions. . ◆ axisToQuat(). template<class Real > . auto sofa::type::Quat< Real >::axisToQuat ; (; Vec3 ; a, . Real ; phi . ); -> Quat. Given an axis and angle, compute quaternion. ; This function computes a quaternion based on an axis (defined by the given vector) and an angle about which to rotate. The angle is expressed in radians. . ◆ buildRotationMatrix(). template<class Real > . constexpr void sofa::type::Quat< Real >::buildRotationMatrix ; (; Real ; m[4][4]); const. inlineconstexpr . A useful function, builds a rotation matrix in Matrix based on given quaternion. . ◆ clear(). template<class Real > . void sofa::type::Quat< Real >::clear ; (; ). inline . ◆ createFromRotationVector() [1/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; const Vec3 & ; a); -> Quat. static . Create using rotation vector (axis*angle) given in parent coordinates. . ◆ createFromRotationVector() [2/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; Real ; a0, . Real ; a1, . Real ; a2 . ); -> Quat. static . Create using the entries of a rotation vector (axis*angle) given in parent coordinates. . ◆ createQuaterFromEuler(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromEuler ; (; const Vec3 & ; v, . EulerOrder ; order = EulerOrder::ZYX . ); -> Quat. static . ◆ createQuaterFromFrame(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromFrame ; (; const Vec3 & ; lox, . const Vec3 & ; loy, . const Vec3 & ; loz . ); -> Quat. static . ◆ fromEuler(). template<class R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:8012,clear,clear,8012,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,2,['clear'],['clear']
Usability,"SimpleDataWidget< Vec<4,int> > > sofa::gui::qt::DWClass_Vec4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec4u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<4,unsigned int> > > sofa::gui::qt::DWClass_Vec4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,double> > > sofa::gui::qt::DWClass_Vec6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,float> > > sofa::gui::qt::DWClass_Vec6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,int> > > sofa::gui::qt::DWClass_Vec6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,unsigned int> > > sofa::gui::qt::DWClass_Vec6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec8i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<8,int> > > sofa::gui::qt::DWClass_Vec8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec8u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<8,unsigned int> > > sofa::gui::qt::DWClass_Vec8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA1i. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<int,1> > > > sofa::gui::qt::DWClass_vectorA1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA1u. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<unsigned int,1> > > > sofa::gui::qt::DWClass_vectorA1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA2i. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<int,2> > > > sofa::gui::qt::DWClass_vectorA2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA2u. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<unsigned int,2> > > > sofa::gui::qt::DWClass_vectorA2u(""default"", true) ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:80629,Simpl,SimpleDataWidget,80629,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:25581,Simpl,SimpleDataWidget,25581,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325058,learn,learn-mesh-editing-programming,325058,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learn-mesh-editing-programming']
Usability,"Solve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20201,clear,clearRow,20201,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRow']
Usability,"SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22122,clear,clearRow,22122,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['clear'],['clearRow']
Usability,"SparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; cbegin() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; cend() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ClearByZerossofa::linearalgebra::CRSConstraintPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ColIterator typedefsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html:4596,clear,clear,4596,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,2,['clear'],['clear']
Usability,"StoragePolicy, ThreadAccessPolicy >::CircularQueue. ◆ ~CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::~CircularQueue. Function details. ◆ isEmpty(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isEmpty. ◆ isFull(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isFull. ◆ pop() [1/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . template<class OutputIterator > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; OutputIterator ; out, . unsigned ; maxsize, . bool ; clear = true . ). ◆ pop() [2/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; T & ; item, . bool ; clear = true . ). ◆ push(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::push ; (; const T & ; item). ◆ size(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::size. ◆ skip(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::skip ; (; unsigned ; maxsize, . bool ; clear = true . ). sofahelpersystemthreadCircularQueue; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html:2654,clear,clear,2654,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,4,['clear'],['clear']
Usability,"T * elementsDefaultImpl (Index i0, Index n, T *buffer) const;  ; template<class T > ; void setDefaultImpl (Index i0, Index n, const T *src);  ; template<class T > ; void addDefaultImpl (Index i0, Index n, const T *src);  . Attribute details. ◆ eigenVector. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen sofa::linearalgebra::EigenVector< TReal, TBlockSize >::eigenVector. protected . the data . Constructor details. ◆ EigenVector(). template<class TReal , std::size_t TBlockSize = 1> . sofa::linearalgebra::EigenVector< TReal, TBlockSize >::EigenVector ; (; Index ; nbRow = 0). inline . Function details. ◆ add(). template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; Index ; i). inlineoverridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ element(). template<class TReal , std::size_t TBlockSize = 1> . SReal sofa::linearalgebra::EigenVector< TReal, TBlockSize >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ getVectorEigen() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ). inline . ◆ getVectorEigen() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . const VectorEigen& sofa::linearalgebra::EigenVector< TReal,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:4910,clear,clear,4910,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,2,['clear'],['clear']
Usability,"TDataTypes >::x0. initial constrained DOFs position . ◆ xf. template<class TDataTypes > . VecCoord sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >::xf. final constrained DOFs position . Constructor details. ◆ PatchTestMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::PatchTestMovementProjectiveConstraint. protected . ◆ ~PatchTestMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::~PatchTestMovementProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::proj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:24830,clear,clearConstraints,24830,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49300,clear,clearRow,49300,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clearRow']
Usability,"Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html:1997,clear,clearLoggedMessages,1997,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,3,['clear'],['clearLoggedMessages']
Usability,Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:444391,feedback,feedback,444391,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of the 6 edges of each tetrahedron The number of each edge is the following : edge 0 links vertex 0 and 1, edge 1 links vertex 0 and 2, edge 2 links vertex 0 and 3, edge ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51323,clear,clearTrianglesInTetrahedron,51323,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTrianglesInTetrahedron']
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3547,clear,clearRowsCols,3547,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,3,"['Clear', 'clear']","['Clears', 'clearRowsCols']"
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the result in vector result. More...;  ; virtual void opMulTV (float *result, const float *v) const;  Multiply the transposed matrix by float vector v and p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5898,clear,clearRowsCols,5898,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,3,"['Clear', 'clear']","['Clears', 'clearRowsCols']"
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:4009,clear,clearRowsCols,4009,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearRowsCols']
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:16054,clear,clearRowsCols,16054,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,3,"['Clear', 'clear']","['Clears', 'clearRowsCols']"
Usability,"TopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5125,clear,clearHexahedraAroundVertex,5125,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedraAroundVertex']
Usability,"Torque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, SpatialVector &t);  read from an input stream More...;  . Attribute details. ◆ freeVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::freeVec { type::NOINIT }. ◆ lineVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::lineVec { type::NOINIT }. Constructor details. ◆ SpatialVector() [1/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; ). default . ◆ SpatialVector() [2/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; const Vec & ; l, . const Vec & ; f . ). Parameters. lThe line vector: angular velocity, or force ; fThe free vector: linear velocity, or torque . Function details. ◆ clear(). template<class TReal > . void sofa::type::SpatialVector< TReal >::clear. ◆ cross(). template<class TReal > . SpatialVector< TReal > sofa::type::SpatialVector< TReal >::cross ; (; const SpatialVector< TReal > & ; v); const. Spatial cross product. . ◆ getAngularVelocity() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ). inline . If the SpatialVector models a spatial velocity, then the angular velocity is the lineVec. Otherwise, the SpatialVector models a spatial force, and this method returns a force. . ◆ getAngularVelocity() [2/2]. template<class TReal > . const Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ); const. inline . ◆ getForce() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getForce ; (; ). inline . If the SpatialVector models a spatial force, then the torque is the lineVec. Otherwise, the SpatialVector models a spatial velocity, and this method returns an angular velocity. .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html:2719,clear,clear,2719,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,2,['clear'],['clear']
Usability,"Translation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorMapsofa::gl::component::rendering3d::DataDisplay; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; computeNormals()sofa::gl::component::rendering3d::DataDisplayprotected; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_currentMaxsofa::gl::component::rendering3d::DataDisplay; d_currentMins",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:2764,clear,clearLoggedMessages,2764,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Translation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doDrawVisual(const core::visual::VisualParams *vparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:2774,clear,clearLoggedMessages,2774,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"TreeWidgetItem* > sofa::gui::qt::QSofaListView::map_modifyDialogOpened. protected . ◆ map_modifyObjectWindow. std::map< void*, QDialog* > sofa::gui::qt::QSofaListView::map_modifyObjectWindow. protected . ◆ object_. ObjectModel sofa::gui::qt::QSofaListView::object_. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::QSofaListView::propertyWidget. protected . Constructor details. ◆ QSofaListView(). sofa::gui::qt::QSofaListView::QSofaListView ; (; const SofaListViewAttribute & ; attribute, . QWidget * ; parent = nullptr, . const char * ; name = nullptr, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). ◆ ~QSofaListView(). sofa::gui::qt::QSofaListView::~QSofaListView ; (; ). override . Function details. ◆ ActivateNode. void sofa::gui::qt::QSofaListView::ActivateNode ; (; ). protectedslot . ◆ addInPropertyWidget(). void sofa::gui::qt::QSofaListView::addInPropertyWidget ; (; QTreeWidgetItem * ; item, . bool ; clear . ). ◆ Clear(). void sofa::gui::qt::QSofaListView::Clear ; (; sofa::simulation::Node * ; rootNode). ◆ Close. void sofa::gui::qt::QSofaListView::Close ; (; ). signal . ◆ CloseAllDialogs. void sofa::gui::qt::QSofaListView::CloseAllDialogs ; (; ). slot . ◆ collapseNode [1/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; ). protectedslot . ◆ collapseNode() [2/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; QTreeWidgetItem * ; item). protected . ◆ collectNodesToChange(). std::list<core::objectmodel::BaseNode*> sofa::gui::qt::QSofaListView::collectNodesToChange ; (; core::objectmodel::BaseNode * ; node). protected . ◆ contextMenuEvent(). void sofa::gui::qt::QSofaListView::contextMenuEvent ; (; QContextMenuEvent * ; event). override . ◆ copyFilePathToClipBoard. void sofa::gui::qt::QSofaListView::copyFilePathToClipBoard ; (; ). protectedslot . ◆ dataModified. void sofa::gui::qt::QSofaListView::dataModified ; (; QString ; ). signal . ◆ DeactivateNode. void sofa::gui::qt::QSofaListView::DeactivateNode ; (; ). protectedslot . ◆ expandN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:5923,Clear,Clear,5923,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,1,['Clear'],['Clear']
Usability,"Type typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::EllipsoidForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::EllipsoidForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_centersofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_colorsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_contactssofa::component::mechanicalload::EllipsoidForceField< DataTypes >protected; d_dampingsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_stiffnesssofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_vra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html:4667,clear,clearLoggedMessages,4667,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Type typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::QuadPressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::mechanicalload::QuadPressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_pressuresofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_quadListsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html:4713,clear,clearLoggedMessages,4713,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"TypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html:2117,Simpl,SimpleCopy,2117,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"TypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html:2205,Simpl,SimpleCopy,2205,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"TypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; ZeroConstructor enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html:2325,Simpl,SimpleCopy,2325,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Types >. template class SOFA_COMPONENT_STATECONTAINER_API sofa::component::statecontainer::MappedObject<,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2501,clear,clear,2501,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,2,['clear'],['clear']
Usability,"Types >virtual; bwdInit() overridesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >inlinevirtual; bwdInit()sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cidsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:4974,clear,clear,4974,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['clear'],['clear']
Usability,"Types, OutDataTypes >:. [legend]; Detailed Description; template<class InDataTypes, class OutDataTypes>; class sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; Variant of EigenBaseSparseMatrix, capable of block-view access. The blocks correspond to matrix blocks of the size of the DataTypes Deriv.; There are two ways of filling the matrix:; Random block access is provided by method wBlock. Use compress() after the last insertion.; Block rows can be efficiently appended using methods beginBlockRow, createBlock, endBlockRow. Use compress() after the last insertion. The rows must be created in increasing index order. The two ways of filling the matrix can not be used at the same time. . Classes; struct  map_traits;  . Protected Attributes; BlockMatMap incomingBlocks;  To store block-view data before it is compressed in optimized format. More...;  ;  Protected Attributes inherited from sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; SimplicialCholesky cholesky;  used to factorize the matrix and solve systems using Cholesky method, for symmetric positive definite matrices only. More...;  . Public Member Functions;  EigenSparseMatrix (int nbRow=0, int nbCol=0);  ; void resizeBlocks (int nbBlockRows, int nbBlockCols);  Resize the matrix without preserving the data (the matrix is set to zero), with the size given in number of blocks. More...;  ; void addBlock (unsigned row, unsigned col, const Block &b);  Schedule the addition of the block at the given place. Scheduled additions must be finalized using function compress(). More...;  ; void insertBackBlock (unsigned row, unsigned col, const Block &b);  ; void beginBlockRow (unsigned row);  ; void createBlock (unsigned column, const Block &b);  ; void endBlockRow ();  ; void endSortedBlockRow ();  ; template<class AnyReal > ; void copyFrom (const CompressedRowSparseMatrix< type::Mat< Nout, Nin, AnyReal > > &crs);  ; void mult (OutVecDeriv &result, const InVecDeriv &data) const;  compute r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:1544,Simpl,SimplicialCholesky,1544,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['Simpl'],['SimplicialCholesky']
Usability,"V &v) const;  compute the projection of a point from the local frame to the reference frame More...;  ; Frame inversed () const;  Transformation from the reference frame to the local frame. More...;  . Static Public Member Functions; static Frame identity ();  The identity transform. More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Frame &c);  . Constructor details. ◆ Frame() [1/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin, . const Mat33 & ; matrix . ). Define the local frame using origin and basis vectors . ◆ Frame() [2/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin, . const Quat & ; orientation, . const Vec3 & ; scale = Vec3(1_sreal,1_sreal,1_sreal) . ). Define the local frame using three transforms . ◆ Frame() [3/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin). Define the local frame without rotation . ◆ Frame() [4/4]. sofa::type::Frame::Frame ; (; ). Default constructor set the transformation to identity. . Function details. ◆ clear(). void sofa::type::Frame::clear ; (; ). Reset the transformation to identity. . ◆ getBasis() [1/2]. Frame::Mat33 & sofa::type::Frame::getBasis ; (; ). The columns represent the base vectors of the local frame wrt the reference frame. . ◆ getBasis() [2/2]. const Frame::Mat33 & sofa::type::Frame::getBasis ; (; ); const. The columns represent the base vectors of the local frame wrt the reference frame. . ◆ getOrigin() [1/2]. Vec3 & sofa::type::Frame::getOrigin ; (; ). Origin of the local frame in the reference frame,. . ◆ getOrigin() [2/2]. const Vec3 & sofa::type::Frame::getOrigin ; (; ); const. Origin of the local frame in the reference frame,. . ◆ identity(). Frame sofa::type::Frame::identity ; (; ). static . The identity transform. . ◆ inversed(). Frame sofa::type::Frame::inversed ; (; ); const. Transformation from the reference frame to the local frame. ; Compute the transformation from the parent to the child. . ◆ mult(). Frame sofa::type::Frame::mult ; (; const Frame & ; c); co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html:3926,clear,clear,3926,api/master/sofa/html/classsofa_1_1type_1_1_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html,2,['clear'],['clear']
Usability,"VER_DIRECT_API EigenSimplicialLDLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSimplicialLLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseLU< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseQR< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API PrecomputedLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SparseLDLSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< FullMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  . Typedef Documentation. ◆ SimplicialLDLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLDLTTraits = typedef DeprecatedAndRemoved. ◆ SimplicialLLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLLTTraits = typedef DeprecatedAndRemoved. ◆ SparseLUTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseLUTraits = typedef DeprecatedAndRemoved. ◆ SparseQRTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseQRTraits = typedef DeprecatedAndRemoved. Function Documentation. ◆ compareMatrixShape(). bool sofa::component::linearsolver::direct::compareMatrixShape ; (; int ; s_M, . int * ; M_colptr, . int * ; M_rowind, . int ; s_P, . int * ; P_colptr, . int * ; P_rowind . ). inline . ◆ CSPARSE_numeric(). template<class Real > . void sofa::component::linearsolver::direct::CSPARSE_numeric ; (; int ; n, . int * ; M_colptr, . int * ; M_rowind, . Real * ; M_values, . int * ; colptr, . int * ; rowind, . Real * ; values, . Real * ; D, . int * ; perm, . int * ; invperm, . int * ; Parent, . int * ; Flag, . int * ; Lnz, . int * ; Pattern, . Real * ; Y .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html:4790,Simpl,SimplicialLLTTraits,4790,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,1,['Simpl'],['SimplicialLLTTraits']
Usability,"VecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; Real getStiffness () const;  ; const Real getViscosity () const;  ; const core::topology::EdgeData< sofa::type::vector< Spring > > & getSpringArray () const;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (int m1, int m2, SReal ks, SReal kd, Coord restVector);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:6204,clear,clear,6204,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['clear'],['clear']
Usability,"VecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId result);  ; void computeContactDf (core::MultiVecDerivId df);  ; void computeAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeForce (SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeContactAcc (SReal t, core::MultiVecDerivId",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3720,clear,clear,3720,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,2,['clear'],['clear']
Usability,"WClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22274,Simpl,SimpleDataWidget,22274,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"Widget(). sofa::gui::qt::QDisplayPropertyWidget::~QDisplayPropertyWidget ; (; ). override . Function details. ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3110,clear,clear,3110,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,2,['clear'],['clear']
Usability,"Widget< T, Container >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1754,Simpl,SimpleDataWidget,1754,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,1,['Simpl'],['SimpleDataWidget']
Usability,"WidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:69415,Simpl,SimpleDataWidget,69415,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17401,clear,clear,17401,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clear']
Usability,_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Ty,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2399,clear,clear,2399,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,2,['clear'],['clear']
Usability,"_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHostSingle(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; cptidsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotectedstatic; createBuffer()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; data() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; data()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; datatypeinfo_manager typedefsofa::type::vector_devic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html:1551,clear,clearSizesofa,1551,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,2,['clear'],['clearSizesofa']
Usability,"a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:5151,clear,clearRows,5151,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,21,"['Clear', 'clear']","['Clears', 'clearRows']"
Usability,"a::BaseMatrix. ◆ asub() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17096,clear,clear,17096,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clear']
Usability,"a::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19942,clear,clear,19942,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clear']
Usability,"a::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >; BarycentricMapperTetrahedronSetTopology(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopology< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >inline; BarycentricMapperTetrahedronSetTopologyRigid(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >; d_mapsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >protected; d_mapOrientsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >protected; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_01a042bb74f5ff17dd54e7164f87ac38e9.html:4107,clear,clear,4107,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_01a042bb74f5ff17dd54e7164f87ac38e9.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_01a042bb74f5ff17dd54e7164f87ac38e9.html,1,['clear'],['clear']
Usability,"a::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addSpringDForce ; (; VecDeriv & ; df1, . const VecDeriv & ; dx1, . VecDeriv & ; df2, . const VecDeriv & ; dx2, . int ; i, . const Spring & ; spring . ). protected . Apply the stiffness, i.e. accumulate df given dx. . ◆ addSpringForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . const Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getObject2 ; (; ). inline . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getPotentialEnergy ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:27730,clear,clear,27730,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['clear'],['clear']
Usability,"a::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::BaseNodepure virtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:1573,clear,clearLoggedMessages,1573,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['clear'],['clearLoggedMessages']
Usability,"a::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionElement2 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionModel1 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionModel2 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; ContactIdentifier()sofa::component::collision::response::contact::ContactIdentifier; contactssofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >protected; countLoggedMessages(sofa::helper::logging::Message::Ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:2245,clear,clearLoggedMessages,2245,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"a::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeDerivateHermiteCoefs(const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; computeHermiteCoefs(const Real u, Real &H00, Real &H10, Real &H01, Real &H11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dx0sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:3075,clear,clearLoggedMessages,3075,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"a::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; pause()sofa::component::sceneutility::PauseAnimationvirtual; PauseAnimation()sofa::component::sceneutility::PauseAnimationprotected; PauseAnimationOnEvent()sofa::component::sceneutility::PauseAnimationOnEventprotected; pausedsofa::component::sceneutility::PauseAnimationOnEvent; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html:8470,pause,pausedsofa,8470,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,1,['pause'],['pausedsofa']
Usability,"a::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::StringMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:4762,clear,clearBuffers,4762,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['clear'],['clearBuffers']
Usability,"a::core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doDrawVisual (const sofa::core::visual::VisualParams *vparams) override;  ; void drawTransparent (const sofa::core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void push (const sofa::core::visual::VisualParams *vparams);  ; void pop (const sofa::core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:4320,clear,clearVisual,4320,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"a::defaulttype::IntegerTypeInfo< unsigned int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; name()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; size()sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html:1936,Simpl,SimpleCopy,1936,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"a::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:70021,Simpl,SimpleDataWidget,70021,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:70223,Simpl,SimpleDataWidget,70223,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quatd(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:70425,Simpl,SimpleDataWidget,70425,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quatd(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:70627,Simpl,SimpleDataWidget,70627,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,5> > > sofa::gui::qt::DWClass_PolynomialLD5d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,5> > > sofa::gui::qt::DWClass_PolynomialLD5f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quad. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > sofa::gui::qt::DWClass_Quad(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatd. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<double> > > sofa::gui::qt::DWClass_Quatd(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Quatf. Creator<DataWidgetFactory, SimpleDataWidget< sofa::type::Quat<float> > > sofa::gui::qt::DWClass_Quatf(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2d. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,double> > > sofa::gui::qt::DWClass_RigidCoord2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord2f. Creator<DataWidgetFactory, SimpleDataWidget< RigidCoord<2,float> > > sofa::gui::qt::DWClass_RigidCoord2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_RigidCoord3d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:70829,Simpl,SimpleDataWidget,70829,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BlockFullMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17791,clear,clearRowCol,17791,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clearRowCol']
Usability,"a::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20287,clear,clearRow,20287,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clearRow']
Usability,"a::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ equal(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::equal ; (; const M & ; m, . bool ; add = false . ). inlineprotected . ◆ expr(). template<typename T > . std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20598,clear,clearRowCol,20598,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clearRowCol']
Usability,"a::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:36761,clear,clearCols,36761,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearCols']
Usability,"aTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeElementMass(ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html:9399,clear,clearLoggedMessages,9399,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aWidgetFactory, TableDataWidget< std::vector<fixed_array<int,6> > > > sofa::gui::qt::DWClass_stdvectorA6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_stdvectorA6u. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<unsigned int,6> > > > sofa::gui::qt::DWClass_stdvectorA6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_stdvectorA8i. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<int,8> > > > sofa::gui::qt::DWClass_stdvectorA8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_stdvectorA8u. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<unsigned int,8> > > > sofa::gui::qt::DWClass_stdvectorA8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_string. Creator<DataWidgetFactory, SimpleDataWidget<std::string> > sofa::gui::qt::DWClass_string(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_TagSet. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > sofa::gui::qt::DWClass_TagSet(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Tetrahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:76532,Simpl,SimpleDataWidget,76532,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ GraphDataWidget(). template<class T > . sofa::gui::qt::GraphDataWidget< T >::GraphDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T > . virtual unsigned int sofa::gui::qt::GraphDataWidget< T >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >. ◆ sizeWidget(). template<class T > . virtual unsigned int sofa::gui::qt::GraphDataWidget< T >::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented from sofa::gui::qt::DataWidget. sofaguiqtGraphDataWidget; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html:3855,Simpl,SimpleDataWidget,3855,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,1,['Simpl'],['SimpleDataWidget']
Usability,"a_widget_container< T, TABLE_NORMAL > >, sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget, sofa::gui::qt::QPoissonRatioWidget, sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget, sofa::gui::qt::materialdatawidget_h::MaterialDataWidget, sofa::gui::qt::GenericDataWidget< DATA, WIDGET >, sofa::gui::qt::DisplayFlagsDataWidget, and sofa::gui::qt::DataFileNameWidget. ◆ setData(). void sofa::gui::qt::DataWidget::setData ; (; MyData * ; d). virtual . ◆ setDataReadOnly(). virtual void sofa::gui::qt::DataWidget::setDataReadOnly ; (; bool ; readOnly). pure virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implemented in sofa::gui::qt::QDataSimpleEdit, sofa::gui::qt::RadioDataWidget, sofa::gui::qt::SimpleDataWidget< T, Container >, sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >, sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >, sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget, sofa::gui::qt::QPoissonRatioWidget, sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget, sofa::gui::qt::materialdatawidget_h::MaterialDataWidget, sofa::gui::qt::GenericDataWidget< DATA, WIDGET >, sofa::gui::qt::DisplayFlagsDataWidget, and sofa::gui::qt::DataFileNameWidget. ◆ setFilled(). void sofa::gui::qt::DataWidget::setFilled ; (; bool ; value). inline . method to warn if Data has not been filled at constructor. . ◆ setWidgetDirty. void sofa::gui::qt::DataWidget::setWidgetDirty ; (; bool ; b = true). slot . You call this slot anytime you want to specify that the widget value is out of sync with the underlying data value. . ◆ sizeWidget(). virtual unsigned int sofa::gui::qt::DataWidget::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented in sofa::gui::qt::QDataSimpleEdit, sofa::gui::qt::TableDataWidget< T, FLAGS >, sofa::gui::qt::GraphDataWidget< T >, and sofa::gui::qt::DisplayFlagsDataWidget. ◆ updateDataValue. v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html:7206,Simpl,SimpleDataWidget,7206,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,3,['Simpl'],['SimpleDataWidget']
Usability,"ack > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ paused. bool sofa::component::sceneutility::PauseAnimationOnEvent::paused. Constructor details. ◆ PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::PauseAnimationOnEvent ; (; ). protected . ◆ ~PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::~PauseAnimationOnEvent ; (; ). overrideprotected . Function details. ◆ handleEvent(). void sofa::component::sceneutility::PauseAnimationOnEvent::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::sceneutility::PauseAnimationOnEvent::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::sceneutility::PauseAnimation. ◆ isPaused(). bool sofa::component::sceneutility::PauseAnimationOnEvent::isPaused ; (; ). overridevirtual . Implements sofa::component::sceneutility::PauseAnimation. ◆ SOFA_CLASS()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:13474,pause,paused,13474,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['paused']
Usability,"ack(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html:1998,clear,clearLoggedMessages,1998,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,2,['clear'],['clearLoggedMessages']
Usability,"ack(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection()=0sofa::core::collision::Pipelinepure virtual; computeCollisionReset()=0sofa::core::collision::Pipelinepure virtual; computeCollisionResponse()=0sofa::core::collision::Pipelinepure virtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collision:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html:2000,clear,clearLoggedMessages,2000,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,1,['clear'],['clearLoggedMessages']
Usability,action; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /emb,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:246135,learn,learning-framework,246135,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning-framework']
Usability,"actory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > > DWClass_fixed_array4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_array6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 6 > > > DWClass_fixed_array6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 8 > > > DWClass_fixed_array8f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 8 > > > DWClass_fixed_array8d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< float > > > DWClass_Quatf (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< double > > > DWClass_Quatd (""de",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:26307,Simpl,SimpleDataWidget,26307,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"actory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > sofa::gui::qt::DWClass_Vec1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,unsigned int> > > sofa::gui::qt::DWClass_Vec1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,double> > > sofa::gui::qt::DWClass_Vec2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,float> > > sofa::gui::qt::DWClass_Vec2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,int> > > sofa::gui::qt::DWClass_Vec2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,unsigned int> > > sofa::gui::qt::DWClass_Vec2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec3d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<3,double> > > sofa::gui::qt::DWClass_Vec3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec3f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<3,float> > > sofa::gui::qt::DWClass_Vec3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec3i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<3,int> > > sofa::gui::qt::DWClass_Vec3i(""default"", tru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:78061,Simpl,SimpleDataWidget,78061,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"addSpringForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getAngleAroundAxis(). template<class DataTypes > . GearSpringForceField<DataTypes>::Real sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getAngleAroundAxis ; (; Coord ; p1, . Coord ; p2, . unsigned int ; axis . ). inline . ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:29491,clear,clear,29491,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['clear'],['clear']
Usability,"addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply() overridesofa::component::mechanicalload::Gravityvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContextObject()sofa::core::objectmodel::ContextObjectinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_gravitysofa::component::mechanicalload::Gravity; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html:1960,clear,clearLoggedMessages,1960,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,1,['clear'],['clearLoggedMessages']
Usability,"addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2062,clear,clearLoggedMessages,2062,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void clear ();  ; bool load () override;  ; bool canLoad () override;  ; void setVoxelSize (const type::Vec3 vSize);  ; type::Vec3 getVoxelSize () const override;  ; void addBackgroundValue (const int value);  ; int getBackgroundValue (const unsigned int idx=0) const;  ; void addActiveDataValue (const int value);  ; int getActiveDataValue (const unsigned int idx=0) const;  ; void getResolution (Vec3i &res) const;  ; int getDataSize () const override;  ; unsigned char * getData () override;  ; unsigned char * getSegmentID () override;  ; type::vector< unsigned int > getHexaIndicesInGrid () const override;  ; Vec6i getROI () const override;  ; void createSegmentation3DTexture (unsigned char **textureData, int &width, int &height, int &depth) override;  ;  Public Member Functions inherited from sofa::core::loader::VoxelLoader;  SOFA_ABSTRACT_CLASS (VoxelLoader, BaseLoader);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7);  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:4249,clear,clear,4249,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['clear'],['clear']
Usability,"ag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BackgroundSetting()sofa::component::setting::BackgroundSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::setting::BackgroundSetting; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::setting::BackgroundSetting; d_componentStatesofa::core::objectmodel::Base; d_imagesofa::component::setting::BackgroundSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html:1974,clear,clearLoggedMessages,1974,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html:1962,clear,clearLoggedMessages,1962,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"agonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19456,clear,clearCol,19456,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],['clearCol']
Usability,ahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49436,clear,clearHexahedraAroundEdge,49436,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundEdge']
Usability,ahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50939,clear,clearTetrahedraAroundEdge,50939,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundEdge']
Usability,"ails. ◆ DefaultMultiMatrixAccessor(). sofa::core::behavior::DefaultMultiMatrixAccessor::DefaultMultiMatrixAccessor ; (; ). ◆ ~DefaultMultiMatrixAccessor(). sofa::core::behavior::DefaultMultiMatrixAccessor::~DefaultMultiMatrixAccessor ; (; ). override . Function details. ◆ addMappedMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMappedMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalMapping(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalMapping ; (; sofa::core::BaseMapping * ; mapping). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ clear(). void sofa::core::behavior::DefaultMultiMatrixAccessor::clear ; (; ). virtual . ◆ computeGlobalMatrix(). void sofa::core::behavior::DefaultMultiMatrixAccessor::computeGlobalMatrix ; (; ). virtual . Reimplemented in sofa::core::behavior::CRSMultiMatrixAccessor. ◆ createMatrix(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrix ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2 . ). static . ◆ createMatrixImpl(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrixImpl ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2, . bool ; doPrintInfo . ). static . ◆ getGlobalDimension(). DefaultMultiMatrixAccessor::Index sofa::core::behavior::DefaultMultiMatrixAccessor::getGlobalDimension ; (; ); const. overridevirtual . Implements sofa::core::behavior::MultiMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html:4940,clear,clear,4940,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"ainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37505,clear,clearEdgesAroundVertex,37505,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"ainer. ◆ isPointTopologyDirty(). const bool& sofa::component::topology::container::dynamic::PointSetTopologyContainer::isPointTopologyDirty ; (; ); const. inlineprotected . ◆ linkTopologyHandlerToData(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::linkTopologyHandlerToData ; (; core::topology::TopologyHandler * ; topologyHandler, . sofa::geometry::ElementType ; elementType . ). overridevirtual . \ brief Generic function to link potential data (related to a type of element) with a topologyHandler ; Reimplemented from sofa::core::topology::TopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ removePoint(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::removePoint ; (; ). remove one DOF in this topology (simply decrement the number of DOF) . ◆ removePoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::removePoints ; (; const Size ; nPoints). remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) ; Parameters. Thenumber of point to remove. . ◆ setNbPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::setNbPoints ; (; Size ; n). overridevirtual . Set the number of vertices in this topology. ; Reimplemented from sofa::core::topology::Topology. ◆ setPointTopologyToDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty ; (; ). protected . Use a specific boolean See alsom_pointTopologyDirty in order to know if topology Data is dirty or not. Set/Get function access to this boolean . ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::SOFA_CLASS ; (; PointSetTopologyContainer ; , . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:36498,simpl,simply,36498,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"ainer::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestHexahedronVertexCoordinates ; (; const HexaID ; h, . Coord ; pnt[8] . ); const. ◆ getRestPointPositionInHexahedron() [1/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const LocalCoord & ; baryC . ); const. ◆ getRestPointPositionInHexahedron() [2/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const Real ; baryC[3] . ); const. ◆ isHexahedronAffine(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::isHexahedronAffine ; (; const HexaID ; h, . const VecCoord & ; p, . const Real ; tolerance = (Real)1e-5 . ); const. test if the heaxahedron is a simple affine warp of a cube . ◆ mustComputeBBox(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::mustComputeBBox. overrideprotectedvirtual . Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes) ;  . ). ◆ writeMSHfile(). template<class DataTypes > . void sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::writeMSHfile ; (; const char * ; filename); const. inline . sofacomponenttopologycontainerdynamicHexahedronSetGeometryAlgorithms;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:40919,simpl,simple,40919,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['simpl'],['simple']
Usability,ainer::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51157,clear,clearTetrahedraAroundVertex,51157,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundVertex']
Usability,"ainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5364,clear,clearTetrahedraAroundTriangle,5364,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedraAroundTriangle']
Usability,"aint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >virtual; PairInteractionConstraint< DataTypes >::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::PairInteractionConstraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html:2933,clear,clearLoggedMessages,2933,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aintMatrix(const core::ConstraintParams *cparams, unsigned int &constraintId)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; buildSystem(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::LCPConstraintSolvervirtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; constraintGroupssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_build_lcpsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html:3308,clear,clearConstraintCorrections,3308,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,1,['clear'],['clearConstraintCorrections']
Usability,"al . Add to the values of n double elements, starting at element i0. . ◆ add() [3/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const float * ; src . ). inlinevirtual . Add to the values of n float elements, starting at element i0. . ◆ add() [4/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const int * ; src . ). inlinevirtual . Add to the values of n int elements, starting at element i0. . ◆ addDefaultImpl(). template<class T > . void sofa::linearalgebra::BaseVector::addDefaultImpl ; (; Index ; i0, . Index ; n, . const T * ; src . ). inlineprotected . ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; Index ; i). inlinevirtual . Reset the value of element i to 0. ; Reimplemented in sofa::linearalgebra::EigenVector< TReal, TBlockSize >, sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, and sofa::linearalgebra::FullVector< SReal >. ◆ element(). virtual SReal sofa::linearalgebra::BaseVector::element ; (; Index ; i); const. pure virtual . Read the value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ elements() [1/3]. virtual const double* sofa::linearalgebra::BaseVector::elements ; (; Index ; i0, . Index ; n, . double * ; src . ); const. inlinevirtual . Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. . ◆ elements() [2/3]. virtual const float* sofa::linearalgebra::BaseVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:5223,clear,clear,5223,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,2,['clear'],['clear']
Usability,"al >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Contribution c, class Real > . void sofa::component::linearsystem::LocalMatrixMaps< c, Real >::clear ; (; ). inline . sofacomponentlinearsystemLocalMatrixMaps; Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:2241,clear,clear,2241,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,4,['clear'],['clear']
Usability,"al void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3527,clear,clearRowsCols,3527,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowsCols']
Usability,"al, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:2543,clear,clearVisual,2543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,4,['clear'],['clearVisual']
Usability,"al; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContextObject()sofa::core::objectmodel::ContextObjectinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html:1952,clear,clearLoggedMessages,1952,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,1,['clear'],['clearLoggedMessages']
Usability,"al; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6542,clear,clearCol,6542,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,2,['clear'],['clearCol']
Usability,"al; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5643,clear,clearCol,5643,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,2,['clear'],['clearCol']
Usability,"al; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14510,clear,clearCol,14510,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,2,['clear'],['clearCol']
Usability,al; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4581,clear,clearEdgesInHexahedron,4581,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdgesInHexahedron']
Usability,"al; data_type typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >protected; Inherit typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::TableDataWidget< T, FLAGS >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; numColumnWidget()sofa::gui::qt::TableDataWidget< T, FLAGS >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >inline; sizeWidget()sofa::gui::qt::TableDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html:1851,Simpl,SimpleDataWidget,1851,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget-members.html,1,['Simpl'],['SimpleDataWidget']
Usability,"alMappedMatrix< c, TBlockType >, sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >. ◆ add() [6/6]. template<sofa::core::matrixaccumulator::Contribution c, class TStrategy > . void sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::add ; (; const core::matrixaccumulator::no_check_policy & ; , . sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . float ; value . ). overrideprotectedvirtual . Reimplemented from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >. ◆ clear(). template<sofa::core::matrixaccumulator::Contribution c, class TStrategy > . void sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::clear. override . ◆ GetCustomTemplateName(). template<core::matrixaccumulator::Contribution c, class TStrategy = sofa::core::matrixaccumulator::NoIndexVerification> . static std::string sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::GetCustomTemplateName ; (; ). inlinestatic . ◆ SOFA_CLASS(). template<core::matrixaccumulator::Contribution c, class TStrategy = sofa::core::matrixaccumulator::NoIndexVerification> . sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::SOFA_CLASS ; (; AssemblingMatrixAccumulator< c, TStrategy > ; , . SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy) ;  . ). sofacomponentlinearsystemAssemblingMatrixAccumulator; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html:9711,clear,clear,9711,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html,2,['clear'],['clear']
Usability,"algebra::BTDMatrix< N, T >::add ; (; Index ; row, . Index ; col, . const type::Mat< BSIZE, BSIZE, Real > & ; v . ). Accumulation specialized on contributions of the same size than the blocks. . ◆ asub() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimpleme",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17199,clear,clear,17199,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clear']
Usability,"algebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5165,clear,clearCol,5165,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearCol']
Usability,"algebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:33977,clear,clearKeyMovements,33977,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"alidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:2093,clear,clear,2093,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,2,['clear'],['clear']
Usability,"alizer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html:2180,clear,clearLoggedMessages,2180,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"alue(). virtual void sofa::defaulttype::AbstractTypeInfo::setIntegerValue ; (; void * ; data, . Index ; index, . long long ; value . ); const. pure virtual . Set the value at index of data from an integer value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setScalarValue(). virtual void sofa::defaulttype::AbstractTypeInfo::setScalarValue ; (; void * ; data, . Index ; index, . double ; value . ); const. pure virtual . Set the value at index of data from a scalar value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setSize(). virtual bool sofa::defaulttype::AbstractTypeInfo::setSize ; (; void * ; data, . sofa::Size ; size . ); const. pure virtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setTextValue(). virtual void sofa::defaulttype::AbstractTypeInfo::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. pure virtual . Set the value at index of data from a string value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ SimpleCopy(). virtual bool sofa::defaulttype::AbstractTypeInfo::SimpleCopy ; (; ); const. pure virtual . True iff copying the data can be done with a memcpy(). ; Implemented in sofa::defaulttype::NoTypeInfo, sofa::defaulttype::NameOnlyTypeInfo, and sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html:11701,clear,cleared,11701,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,1,['clear'],['cleared']
Usability,"alues in column j to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:36702,clear,clearCols,36702,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearCols']
Usability,"aluesofa::defaulttype::VectorTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; DataType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; name()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; Size enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; size()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::VectorTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::VectorTypeInfo< TDataType >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html:1809,Simpl,SimpleCopy,1809,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"ame real > . constexpr sofa::Size sofa::defaulttype::RigidDeriv< 2, real >::total_size = 3. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidDeriv() [1/4]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; type::NoInit ; ). inlineexplicitconstexpr . ◆ RigidDeriv() [2/4]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; ). inlineconstexpr . ◆ RigidDeriv() [3/4]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; const type::Vec< 2, real2 > & ; velCenter, . const real2 & ; velOrient . ). inlineconstexpr . ◆ RigidDeriv() [4/4]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; const type::Vec< 3, real2 > & ; v). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidDeriv< 2, real >::clear ; (; ). inlineconstexpr . ◆ getAngular() [1/2]. template<typename real > . constexpr Real& sofa::defaulttype::RigidDeriv< 2, real >::getAngular ; (; ). inlineconstexpr . ◆ getAngular() [2/2]. template<typename real > . constexpr const Real& sofa::defaulttype::RigidDeriv< 2, real >::getAngular ; (; ); const. inlineconstexpr . ◆ getLinear() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getLinear ; (; ). inlineconstexpr . ◆ getLinear() [2/2]. template<typename real > . constexpr const Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getLinear ; (; ); const. inlineconstexpr . ◆ getVAll(). template<typename real > . constexpr VecAll sofa::defaulttype::RigidDeriv< 2, real >::getVAll ; (; ); const. inlineconstexpr . ◆ getVCenter() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getVCenter ; (; ). inlineconstexp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html:4628,clear,clear,4628,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"ame;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyVelocity More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyVelocities ();  ; void addKeyVelocity (Real time, Deriv movement);  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:3419,clear,clearKeyVelocities,3419,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearKeyVelocities']
Usability,"amework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qt::QtViewer Class Reference . #include <QtViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qt::QtViewer:. [legend]. Public Attributes; bool _mouseInteractorTranslationMode;  ; bool _mouseInteractorRotationMode;  ; int _translationMode;  ; Quat< SReal > _mouseInteractorCurrentQuat;  ; Vec3 _mouseInteractorAbsolutePosition;  ; Trackball _mouseInteractorTrackball;  . Static Public Attributes; static const std::string VIEW_FILE_EXTENSION = ""view"";  TODO: standardize .view file parameters. More...;  ; static Quat< SReal > _mouseInteractorNewQuat;  ; static bool _mouseTrans = false;  ; static bool _mouseRotate = false;  . Public Member Functions;  QtViewer (QWidget *parent, const char *name="""");  ;  ~QtViewer () override;  ; QWidget * getQWidget () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; sofa::simulation::Node * getScene () override;  ; int getWidth () override;  ; int getHeight () override;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void ApplyMouseInteractorTransformation (int x, int y);  ; QString helpString () const override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html:1197,resume,resume,1197,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,2,['resume'],['resume']
Usability,"amic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4473,clear,clearLoggedMessages,4473,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:3969,clear,clearVisual,3969,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,4,['clear'],"['clear', 'clearVisual']"
Usability,"anEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundEdgeArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4625,clear,clearQuadsAroundEdge,4625,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearQuadsAroundEdge']
Usability,anEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::con,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4862,clear,clearEdgesInTetrahedron,4862,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearEdgesInTetrahedron']
Usability,"and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the all values in column j to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:35649,clear,clearCol,35649,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearCol']
Usability,ap; ; SOFA - Topic: [SOLVED] Mass below a multimap. /mass-spring-model; ; SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getOb,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:347077,simpl,simple,347077,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,"ap_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Protected Member Functions; void expandPath (const std::string &path);  ; void getExpandedNodes (QTreeWidgetItem *item, std::vector< std::string > &);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void transformObject (sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=dele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:1333,clear,clear,1333,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,3,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::VisualTransform; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recursivesofa::component::visual::VisualTransform; d_transformsofa::component::visual::VisualTransform; doDrawVisual(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:2512,clear,clearVisual,2512,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['clear'],['clearVisual']
Usability,"aptics::LCPForceFeedback< DataTypes >::doComputeForce ; (; const VecCoord & ; state, . VecDeriv & ; forces . ). protectedvirtual . ◆ draw(). template<class TDataTypes > . void sofa::component::haptics::LCPForceFeedback< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). inlineoverridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ handleEvent(). template<typename DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::haptics::ForceFeedback. ◆ setLock(). template<class DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::setLock ; (; bool ; value). overridevirtual . Override method to lock or unlock the force feedback computation. According to parameter, value == true (resp. false) will lock (resp. unlock) mutex. ; See alsolockForce ; Reimplemented from sofa::component::haptics::ForceFeedback. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::haptics::LCPForceFeedback< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(LCPForceFeedback< TDataTypes >, TDataTypes) ; , . MechanicalStateForceFeedback< TDataTypes > ;  . ). ◆ updateConstraintProblem(). template<class DataTypes > . bool sofa::component::haptics::LCPForceFeedback< DataTypes >::updateConstraintProblem. protectedvirtual . ◆ updateStats(). template<class DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::updateStats. protectedvirtual . sofacomponenthapticsLCPForceFeedback; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:25672,feedback,feedback,25672,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['feedback'],['feedback']
Usability,"ar::SubsetMapping< TIn, TOut >::apply ; (; const core::MechanicalParams * ; mparams, . OutDataVecCoord & ; dOut, . const InDataVecCoord & ; dIn . ). override . ◆ applyJ(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJ ; (; const core::MechanicalParams * ; mparams, . OutDataVecDeriv & ; dOut, . const InDataVecDeriv & ; dIn . ). override . ◆ applyJT() [1/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJT ; (; const core::ConstraintParams * ; , . InDataMatrixDeriv & ; dOut, . const OutDataMatrixDeriv & ; dIn . ). override . ◆ applyJT() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJT ; (; const core::MechanicalParams * ; mparams, . InDataVecDeriv & ; dOut, . const OutDataVecDeriv & ; dIn . ). override . ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::clear ; (; Size ; reserve). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::getJ. override . ◆ getJs(). template<class TIn , class TOut > . const SubsetMapping< TIn, TOut >::js_type * sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::getJs. override . ◆ init(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::init ; (; void ; ). override . ◆ postInit(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::postInit. ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(SubsetMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(LinearMapping, TIn, TOut) ;  . ). Enum details. ◆ anonymous enum. template<class TIn , class TOut > . anonymous enum. EnumeratorNIn . ◆ anon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html:8643,clear,clear,8643,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,1,['clear'],['clear']
Usability,"aralgebra::BaseMatrix::bRowSize ; (; ); const. inlinevirtual . Returnsthe number of rows of blocks ; Reimplemented in sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ bRowsRange(). virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::BaseMatrix::bRowsRange ; (; ); const. inlinevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented in sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:33393,clear,clear,33393,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clear']
Usability,are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createQuadsAroundEdgeArray ; (; ). protectedvirtual . Creates the quadsAroundEdge A,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40637,clear,clearQuadsAroundVertex,40637,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundVertex']
Usability,"array1f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,1> > > sofa::gui::qt::DWClass_fixed_array1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,1> > > sofa::gui::qt::DWClass_fixed_array1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,1> > > sofa::gui::qt::DWClass_fixed_array1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,2> > > sofa::gui::qt::DWClass_fixed_array2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,2> > > sofa::gui::qt::DWClass_fixed_array2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,2> > > sofa::gui::qt::DWClass_fixed_array2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:61687,Simpl,SimpleDataWidget,61687,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"array2f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,2> > > sofa::gui::qt::DWClass_fixed_array2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,2> > > sofa::gui::qt::DWClass_fixed_array2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:62425,Simpl,SimpleDataWidget,62425,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:63163,Simpl,SimpleDataWidget,63163,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:63901,Simpl,SimpleDataWidget,63901,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_float. Creator<DataWidgetFactory, SimpleDataWidget<float> > sofa::gui::qt::DWClass_float(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Hexahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > sofa::gui::qt::DWClass_Hexahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_int. Creator<DataWidgetFactory, SimpleDataWidget<int> > sofa::gui::qt::DWClass_int(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_mapdeque2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<Vec2d> > > > sofa::gui::qt::DWClass_mapdeque2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequed. Creator<DataWidge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:64639,Simpl,SimpleDataWidget,64639,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"arsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildHashTable(linearalgebra::CompressedRowSparseMatrix< SReal > &M, ConstantCRSMapping &mapping)sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protectedstatic; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstantCRSMapping typedefsofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >; ConstantSparsityPatternSystem()sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protected; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html:3871,clear,clearSystem,3871,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,1,['clear'],['clearSystem']
Usability,"aryCoorsOrient . ). ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::draw ; (; const core::visual::VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html:6976,clear,clear,6976,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,1,['clear'],['clear']
Usability,"asLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LCPForceFeedback, TDataTypes), MechanicalStateForceFeedback< TDataTypes >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ; void computeForce (const VecCoord &state, VecDeriv &forces) override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setLock (bool value) override;  Override method to lock or unlock the force feedback computation. According to parameter, value == true (resp. false) will lock (resp. unlock) mutex. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ; void SOFA_COMPONENT_HAPTICS_API computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void SOFA_COMPONENT_HAPTICS_API computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void init () override;  Initializat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:5010,feedback,feedback,5010,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['feedback'],['feedback']
Usability,"ase * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual bool removeAttribute (const std::string &attr);  Remove an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:2980,clear,clearErrors,2980,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['clear'],['clearErrors']
Usability,"ase; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeJacobiansFrom(BaseMechanicalState *mstate, const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *crs)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; computeMatrixJacobians(const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; computeMatrixProduct(const MappingGraph &mappingGraph, TMatrix *matrixToProject, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protectedvirtual; computeProjection(const Eigen::Map< Eigen::SparseMatrix< Block, Eigen::RowMajor > > KMap, const sofa::type::fixed_array< std::shared_ptr< TMatrix >, 2 > J, Eigen::SparseMatrix< Block, Eigen::RowMajor > &JT_K_J) overridesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html:2672,clear,clearLoggedMessages,2672,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ase; Block typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:3401,clear,clearLoggedMessages,3401,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ase; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeBendingMaterialStiffness(int i, Index &a, Index &b, Index &c, Index &d)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protectedvirtual; computeBendingStrainDisplacement(StrainDisplacement &Jb, Real gauss1, Real gauss2, Real l, Real h)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeDisplacementSmall(Displacement &D, Index elementIndex, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeElementStiffness(Stiffness &K, Index elementIndex)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeForce(Displacement &F, Index elementIndex, Displacement &D)sofa::component::solidmechanics::fem::elastic::QuadBendingFE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html:5284,clear,clearLoggedMessages,5284,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >;  SOFA_CLASS (AssemblingMappedMatrixAccumulator, AssemblingMatrixAccumulator< c >);  ; void clear () override;  ; void shareMatrix (const std::shared_ptr< LocalMappedMatrixType< TBlockType > > &m);  ; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & getMatrix () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy));  ; void clear () override;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html:3013,clear,clear,3013,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,4,['clear'],['clear']
Usability,"aseLink *link);  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; virtual Data< VecCoord > * write (VecCoordId v)=0;  ; virtual const Data< VecCoord > * read (ConstVecCoordId v) const =0;  ; virtual Data< VecDeriv > * write (VecDerivId v)=0;  ; virtual const Data< VecDeriv > * read (ConstVecDerivId v) const =0;  ; virtual Data< MatrixDeriv > * write (MatrixDerivId v)=0;  ; virtual const Data< MatrixDeriv > * read (ConstMatrixDerivId v) const =0;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  . Static Public Member Functions; template<class T >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:21220,simpl,simplified,21220,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['simpl'],['simplified']
Usability,"aseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15492,clear,clearRowsCols,15492,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,2,['clear'],['clearRowsCols']
Usability,"aseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:4786,clear,clearEdges,4786,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"aseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PatchTestMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  – Constraint interface More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void draw (const core::visual::VisualParams *vpara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:5287,clear,clearConstraints,5287,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"aseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkEdgeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; checkMassDensity()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; Coord typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; copyVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_edgeMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_lumpingsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:8127,clear,clearLoggedMessages,8127,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html:5786,clear,clear,5786,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,1,['clear'],['clear']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:5548,clear,clear,5548,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['clear'],['clear']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:5510,clear,clear,5510,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,1,['clear'],['clear']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:5706,clear,clear,5706,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,3,['clear'],['clear']
Usability,"aseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5646,clear,clearLoggedMessages,5646,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (; void ; ); const. inlineoverridevirtual . number of columns ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::compress ; (; ). inlineoverridevirtual . Add the values from the scheduled list, and clears the schedule list. ; See alsoset(Index i, Index j, double v). ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ copy(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::copy ; (; const EigenBaseSparseMatrix< TReal > & ; m, . unsigned ; nbCol, . unsigned ; shift . ). inline . Clear and resize this to (m.rows,nbCol) and initialize it with the given matrix, columns shifted of the given value: this(i,j+shift) = m(i,j). @precond nbCol >= m.cols + shift . ◆ element(). template<class TReal > . SReal sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getColsIndex(). template<class TReal > . Index* sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::getColsIndex ; (; ). inline . ◆ getColsValue(). template<class TReal > . Real* sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::getColsValue ; (; ). inline . ◆ getRowBegin(). template<class TReal > . Index* sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::getRowBegin ; (; ). inline . ◆ insertBack(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::insertBack ; (; Index ; row, . Index ; col, . Real ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:22411,Clear,Clear,22411,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['Clear'],['Clear']
Usability,"ases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseNode(). sofa::core::objectmodel::BaseNode::BaseNode ; (; ). protected . ◆ ~BaseNode(). sofa::core::objectmodel::BaseNode::~BaseNode ; (; ). overrideprotected . Function details. ◆ addChild(). virtual void sofa::core::objectmodel::BaseNode::addChild ; (; BaseNode::SPtr ; node). pure virtual . Add a child node. ; Implemented in sofa::simulation::Node. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseNode::addObject ; (; BaseObject::SPtr ; obj, . TypeOfInsertion ; = TypeOfInsertion::AtEnd . ). pure virtual . Add a generic object. ; Implemented in sofa::simulation::Node. ◆ clearObjectContext(). void sofa::core::objectmodel::BaseNode::clearObjectContext ; (; BaseObject::SPtr ; obj). protected . Reset the context of an object. . ◆ detachFromGraph(). virtual void sofa::core::objectmodel::BaseNode::detachFromGraph ; (; ). pure virtual . Remove the current node from the graph: depending on the type of Node, it can have one or several parents. WarningYou must have a SPtr on the node you detach if you want to keep it or the smart pointer mechanism will remove it ! ; Implemented in sofa::simulation::graph::DAGNode. ◆ findLinkDestClass(). Base* sofa::core::objectmodel::BaseNode::findLinkDestClass ; (; const BaseClass * ; destType, . const std::string & ; path, . const BaseLink * ; link . ). overridepure virtual . Reimplemented from sofa::core::objectmodel::Base.; Implemented in sofa::simulation::Node. ◆ getAnimationLoop(). core::behavior::BaseAnimationLoop * sofa::core::objectmodel::BaseNode::getAnimationLoop ; (; ); const. virtual . Reimplemented in sofa::simulation::Nod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:12467,clear,clearObjectContext,12467,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['clear'],['clearObjectContext']
Usability,"ass SOFA_COMPONENT_LINEARSOLVER_DIRECT_API CholeskySolver< FullMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSimplicialLDLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSimplicialLLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseLU< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseQR< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API PrecomputedLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SparseLDLSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< FullMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  . Typedef Documentation. ◆ SimplicialLDLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLDLTTraits = typedef DeprecatedAndRemoved. ◆ SimplicialLLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLLTTraits = typedef DeprecatedAndRemoved. ◆ SparseLUTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseLUTraits = typedef DeprecatedAndRemoved. ◆ SparseQRTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseQRTraits = typedef DeprecatedAndRemoved. Function Documentation. ◆ compareMatrixShape(). bool sofa::component::linearsolver::direct::compareMatrixShape ; (; int ; s_M, . int * ; M_colptr, . int * ; M_rowind, . int ; s_P, . int * ; P_colptr, . int * ; P_rowind . ). inline . ◆ CSPARSE_numeric(). template<class Real > . void sofa::component::linearsolver::direct::CSPARSE_numeric ; (; int ; n, . int * ; M_colptr, . int * ; M_rowind, . Real * ; M_values, . int * ; colptr, . int * ; rowind, . Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html:4644,Simpl,SimplicialLDLTTraits,4644,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,1,['Simpl'],['SimplicialLDLTTraits']
Usability,"ass< DataTypes, GeometricalTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes > Class Template Reference . #include <DiagonalMass.h>; This component computes the integral of this mass density over the volume of the object geometry but it supposes that the Mass matrix is diagonal. ; More... Inheritance diagram for sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >:. [legend]; Detailed Description; template<class DataTypes, class GeometricalTypes = DataTypes>; class sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; This component computes the integral of this mass density over the volume of the object geometry but it supposes that the Mass matrix is diagonal. ; RemarksSimilar to MeshMatrixMass but it does not simplify the Mass Matrix as diagonal. . https://www.sofa-framework.org/community/doc/components/masses/diagonalmass/ ; Template Parameters. DataTypestype of the state associated with this mass ; GeometricalTypestype of the geometry, i.e type of the state associated with the topology (if the topology and the mass relates to the same state, this will be the same as DataTypes) . Classes; class  Loader;  . Public Attributes; VecMass d_vertexMass;  values of the particles masses More...;  ; Data< Real > d_massDensity;  the mass density used to compute the mass from a mesh topology and geometry More...;  ; Data< Real > d_totalMass;  total mass of the object More...;  ; Data< bool > d_computeMassOnRest;  if true, the mass of every element is computed based on the rest position rather than the position More...;  ; Data< bool > d_showCenterOfGravity;  to display the center of gravity of the system More...;  ; Data< float > d_showAxisSize;  Factor length of the axis displayed (only used f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:1053,simpl,simplify,1053,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['simpl'],['simplify']
Usability,"ass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24348,Simpl,SimpleDataWidget,24348,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::siz",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17312,clear,clearCol,17312,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clearCol']
Usability,"at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator-= (const MatrixExpr< Expr2 > &m);  ; MatrixExpr< MatrixTranspose< Matrix > > t () const;  ; MatrixExpr< MatrixNegative< Matrix > > operator- () const;  ; MatrixExpr< MatrixScale< Matrix, double > > opera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:6210,clear,clear,6210,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,4,['clear'],['clear']
Usability,"at< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:2459,clear,clear,2459,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['clear'],['clear']
Usability,"at<2,2,double> > > sofa::gui::qt::DWClass_Mat22d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat22f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,float> > > sofa::gui::qt::DWClass_Mat22f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:67665,Simpl,SimpleDataWidget,67665,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"at<2,2,float> > > sofa::gui::qt::DWClass_Mat22f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:67829,Simpl,SimpleDataWidget,67829,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"at<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:67992,Simpl,SimpleDataWidget,67992,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"at<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:68156,Simpl,SimpleDataWidget,68156,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"at<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:68319,Simpl,SimpleDataWidget,68319,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"at<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:68483,Simpl,SimpleDataWidget,68483,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ata * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; associateObject(ComponentType *object)sofa::core::BaseMatrixAccumulatorComponent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComponentType typedefsofa::core::BaseMatrixAccumulatorComponent< c >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:2089,clear,clearLoggedMessages,2089,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareTopologyinlinestatic; sofa::component::playback::ReadTopology::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadTopologyinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CompareTopology()sofa::component::playback::CompareTopologyprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadTopology; d_intervalsofa::component::playback::ReadTopology; d_loopsofa::component::playback::ReadTopology; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shiftsofa::component::playback::ReadTopology; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; edgessofa::component::playback::ReadTopology; EdgesErrorsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html:2157,clear,clearLoggedMessages,2157,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:2137,clear,clearLoggedMessages,2137,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataVecCoord &x) overridesofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Constraint< DataTypes >inlinestatic; sofa::core::behavior::BaseConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:2750,clear,clearLoggedMessages,2750,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataVecCoord &x) overridesofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Constraint< DataTypes >inlinestatic; sofa::core::behavior::BaseConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:2754,clear,clearLoggedMessages,2754,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataWidget< T, Container >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, Container >protected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, Container >; numColumnWidget()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, Container >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, Container >inline; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html:1830,Simpl,SimpleDataWidget,1830,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget-members.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > > DWClass_fixed_array4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_array6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 6 > > > DWClass_fixed_array6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 8 > > > DWClass_fixed_array8f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 8 > > > DWClass_fixed_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:26070,Simpl,SimpleDataWidget,26070,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ate direction vector vFrom to direction vector vTo. ; vFrom and vTo are assumed to be normalized. . Function details. ◆ angularDisplacement(). template<class Real > . auto sofa::type::Quat< Real >::angularDisplacement ; (; const Quat< Real > & ; a, . const Quat< Real > & ; b . ); -> Vec3. static . Return the eulerian vector resulting of the movement between 2 quaternions. . ◆ axisToQuat(). template<class Real > . auto sofa::type::Quat< Real >::axisToQuat ; (; Vec3 ; a, . Real ; phi . ); -> Quat. Given an axis and angle, compute quaternion. ; This function computes a quaternion based on an axis (defined by the given vector) and an angle about which to rotate. The angle is expressed in radians. . ◆ buildRotationMatrix(). template<class Real > . constexpr void sofa::type::Quat< Real >::buildRotationMatrix ; (; Real ; m[4][4]); const. inlineconstexpr . A useful function, builds a rotation matrix in Matrix based on given quaternion. . ◆ clear(). template<class Real > . void sofa::type::Quat< Real >::clear ; (; ). inline . ◆ createFromRotationVector() [1/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; const Vec3 & ; a); -> Quat. static . Create using rotation vector (axis*angle) given in parent coordinates. . ◆ createFromRotationVector() [2/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; Real ; a0, . Real ; a1, . Real ; a2 . ); -> Quat. static . Create using the entries of a rotation vector (axis*angle) given in parent coordinates. . ◆ createQuaterFromEuler(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromEuler ; (; const Vec3 & ; v, . EulerOrder ; order = EulerOrder::ZYX . ); -> Quat. static . ◆ createQuaterFromFrame(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromFrame ; (; const Vec3 & ; lox, . const Vec3 & ; loy, . const Vec3 & ; loz . ); -> Quat. static . ◆ fromEuler(). template<class Real > . auto sofa::type::Quat< Real >::fromEuler ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:8076,clear,clear,8076,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,2,['clear'],['clear']
Usability,"ate(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::OffSequenceLoader; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:4795,clear,clearBuffers,4795,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['clear'],['clearBuffers']
Usability,"atenation of directories separated by : on linux / mac and ; on windows . Protected Attributes; std::string directAccessProtocolPrefix;  ; std::vector< std::string > vpath;  Vector of paths. More...;  . Public Member Functions;  FileRepository ();  ;  FileRepository (const char *envVar);  ;  FileRepository (const char *envVar, const char *relativePath);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths);  ;  FileRepository (const char *envVar, const char *relativePath, const fileKeysMap &iniFilesAndKeys);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths, const fileKeysMap &iniFilesAndKeys);  ;  ~FileRepository ();  ; void addFirstPath (const std::string &path);  Adds a path to the front of the set of paths. More...;  ; void addLastPath (const std::string &path);  Adds a path to the back of the set of paths. More...;  ; void removePath (const std::string &path);  Remove a path of the set of paths. More...;  ; void clear ();  Remove all known paths. More...;  ; std::string getFirstPath ();  Get the first path into the set of paths. More...;  ; const std::vector< std::string > & getPaths () const;  ; const std::string getPathsJoined ();  ; const std::string & getDirectAccessProtocolPrefix () const;  ; void setDirectAccessProtocolPrefix (const std::string &protocolPrefix);  ; bool findFile (std::string &filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; std::string getFile (std::string filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; bool findFileFromFile (std::string &filename, const std::string &basefile, std::ostream *errlog=&std::cerr);  ; void print ();  Print the list of path to std::cout. More...;  ; void displayPaths () const;  ; const std::string getTempPath () const;  . Static Public Member Functions; static std::string cleanPath (const std::string &path);  ; static std::string relativeToPath (std::string path, std::string refPath);  ; static ch",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:2031,clear,clear,2031,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,2,['clear'],['clear']
Usability,ator issues – SOFA. SOFA - Topic Tag: qt creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: ri,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:467991,learn,learning,467991,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,"ator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23866,Simpl,SimpleDataWidget,23866,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"atrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; Index rowBSize (void) const;  ; Index colBSize (void) const;  ; const Block & bloc (Index i) const;  ; const Block & bloc (Index i, Index j) const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:1892,clear,clear,1892,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,4,['clear'],"['clear', 'clearRow']"
Usability,"atrix< T >; begin() constsofa::linearalgebra::FullMatrix< T >; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5683,clear,clear,5683,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,4,['clear'],['clear']
Usability,"ault"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWClass_Mat66f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_OptionsGroup. Creator<DataWidgetFactory,RadioDataWidget> sofa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:69011,Simpl,SimpleDataWidget,69011,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ault"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_float. Creator<DataWidgetFactory, SimpleDataWidget<float> > sofa::gui::qt::DWClass_float(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Hexahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > sofa::gui::qt::DWClass_Hexahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_int. Creator<DataWidgetFactory, SimpleDataWidget<int> > sofa::gui::qt::DWClass_int(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_mapdeque2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<Vec2d> > > > sofa::gui::qt::DWClass_mapdeque2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequed. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<double> > > > sofa::gui::qt::DWClass_mapdequed(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequef. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<float> > > > sofa::gui::qt::DWClass_mapdequef(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvector2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<Vec2d> > > > sofa::gui::qt::DWClass_mapvector2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectord. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<double> > > > sofa::gui::qt::DWClass_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:65349,Simpl,SimpleDataWidget,65349,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"aultPolicystatic; bloc(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; Block typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; block(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:3876,clear,clear,3876,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,2,['clear'],['clear']
Usability,"aulttype::SolidTypes< R >::Wrench, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Vec typedefsofa::type::SpatialVector< TReal >; Wrench(const Vec3 &force, const Vec3 &torque)sofa::defaulttype::SolidTypes< R >::Wrenchinline. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html:275,clear,clear,275,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html,1,['clear'],['clear']
Usability,"avesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4381,clear,clearEdges,4381,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdges']
Usability,"avior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Contact typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; contactssofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Coord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:4385,clear,clear,4385,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['clear'],['clear']
Usability,"ay1i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,1> > > sofa::gui::qt::DWClass_fixed_array1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,1> > > sofa::gui::qt::DWClass_fixed_array1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,2> > > sofa::gui::qt::DWClass_fixed_array2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,2> > > sofa::gui::qt::DWClass_fixed_array2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,2> > > sofa::gui::qt::DWClass_fixed_array2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:61868,Simpl,SimpleDataWidget,61868,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ay2i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,2> > > sofa::gui::qt::DWClass_fixed_array2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array2u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,2> > > sofa::gui::qt::DWClass_fixed_array2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,3> > > sofa::gui::qt::DWClass_fixed_array3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,3> > > sofa::gui::qt::DWClass_fixed_array3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:62606,Simpl,SimpleDataWidget,62606,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ay3i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,3> > > sofa::gui::qt::DWClass_fixed_array3i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array3u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,3> > > sofa::gui::qt::DWClass_fixed_array3u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,4> > > sofa::gui::qt::DWClass_fixed_array4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,4> > > sofa::gui::qt::DWClass_fixed_array4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:63344,Simpl,SimpleDataWidget,63344,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ay4i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,4> > > sofa::gui::qt::DWClass_fixed_array4i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array4u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,4> > > sofa::gui::qt::DWClass_fixed_array4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,6> > > sofa::gui::qt::DWClass_fixed_array6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,6> > > sofa::gui::qt::DWClass_fixed_array6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_float. Creator<DataWidgetFactory, SimpleDataWidget<float> > sofa::gui::qt::DWClass_float(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Hexahedron. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:64082,Simpl,SimpleDataWidget,64082,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ay6i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,6> > > sofa::gui::qt::DWClass_fixed_array6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array6u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,6> > > sofa::gui::qt::DWClass_fixed_array6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,8> > > sofa::gui::qt::DWClass_fixed_array8d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,8> > > sofa::gui::qt::DWClass_fixed_array8f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,8> > > sofa::gui::qt::DWClass_fixed_array8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array8u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,8> > > sofa::gui::qt::DWClass_fixed_array8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_float. Creator<DataWidgetFactory, SimpleDataWidget<float> > sofa::gui::qt::DWClass_float(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Hexahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > sofa::gui::qt::DWClass_Hexahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_int. Creator<DataWidgetFactory, SimpleDataWidget<int> > sofa::gui::qt::DWClass_int(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_mapdeque2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<Vec2d> > > > sofa::gui::qt::DWClass_mapdeque2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequed. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<double> > > > sofa::gui::qt::DWClass_mapdequed(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequef. Creator<D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:64820,Simpl,SimpleDataWidget,64820,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"b) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5506,clear,clearRowsCols,5506,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRowsCols']
Usability,"bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6861,clear,clearRows,6861,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,2,['clear'],['clearRows']
Usability,"bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5937,clear,clearRowCol,5937,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,2,['clear'],['clearRowCol']
Usability,"bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglShaderVisualModelvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeRestNormals()sofa::gl::component::shader::OglShaderVisualModel; computeRestPositions()sofa::gl::component::shader::OglShaderVisualModel; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html:3671,clear,clearVisual,3671,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,2,['clear'],['clearVisual']
Usability,"beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess() overridesofa::component::topology::container::grid::RegularGridTopologyprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::log",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html:3778,clear,clear,3778,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,1,['clear'],['clear']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_fixedXRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_fixedYRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_fixedZRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:2850,clear,clearLoggedMessages,2850,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_P1sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_P2sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_P3sofa::component::constraint::projective::ParabolicProjectiveConstraint< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html:2956,clear,clearLoggedMessages,2956,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_old_positionsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_positionsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_stiffnesssofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_velocitysofa::component::constraint:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html:2866,clear,clearLoggedMessages,2866,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecCoord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Deriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html:2792,clear,clearLoggedMessages,2792,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(MassMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; remove(MassMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator-members.html:2007,clear,clear,2007,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"behavior::ProjectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeIndex(Index index)sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:14352,clear,clear,14352,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['clear'],['clear']
Usability,"ber Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::split_col",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html:1189,clear,clear,1189,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,2,['clear'],['clear']
Usability,"bers. Block typedefsofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; v(Block &b, Index row, Index col)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; v(const Block &b, Index row, Index col)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; vadd(Block &b, int row, int col, Real val)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; vset(Block &b, int row, int col, Real val)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic. Gene",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4-members.html:538,clear,clear,538,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4-members.html,2,['clear'],['clear']
Usability,"bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17512,clear,clearCol,17512,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clearCol']
Usability,"bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BTDMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B & ; m . ). ◆ getSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:18078,clear,clearRowCol,18078,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clearRowCol']
Usability,"bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2779,clear,clear,2779,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clear']
Usability,"bjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4657,simpl,simpleapi,4657,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['simpl'],['simpleapi']
Usability,"bjectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:2858,clear,clear,2858,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['clear'],['clear']
Usability,"bjectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html:2117,clear,clearLoggedMessages,2117,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,"bjectmodel::RenamedData< sofa::type::vector< MappingOrientData > > mapOrient;  ; core::topology::PointData< sofa::type::vector< MappingData > > d_map;  mapper data More...;  ; core::topology::PointData< sofa::type::vector< MappingOrientData > > d_mapOrient;  mapper data for mapped frames More...;  ; VecCoord actualTetraPosition;  ; MatrixType * matrixJ;  ; bool updateJ;  ; VecDeriv actualOut;  TEMP. More...;  ; Out::VecCoord actualPos;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ; void clear (std::size_t reserve=0) override;  ; Index addPointInTetra (const Index index, const SReal *baryCoords) override;  ; Index addPointOrientationInTetra (const Index tetraIndex, const sofa::type::Matrix3 baryCoorsOrient);  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const sofa::linearalgebra::BaseMatrix * getJ (int outSize, int inSize) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void resize (core::State< Out > *toModel) override;  . Protected Member Functions;  BarycentricMapperTetrahedronSetTopologyRigid (core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  TEMP. More...;  ; virtual ~BarycentricMapperTetrahedronSetTopologyRigid ();  . Attribute details. ◆ actualOut. template<class In , class Out > . VecDeriv sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::actualOut. protected . T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html:1675,clear,clear,1675,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,1,['clear'],['clear']
Usability,"bjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5248,clear,clearTetrahedraAroundEdge,5248,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedraAroundEdge']
Usability,"bjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_cameraModesofa::component::setting::ViewerSetting; d_componentStatesofa::core::objectmodel::Base; d_fullscreensofa::component::setting::ViewerSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; d_objectPickingMethodsofa::component::setting::ViewerSetting; d_resolutionsofa::component::setting::ViewerSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_li",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:1944,clear,clearLoggedMessages,1944,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"blic Member Functions;  SparseMatrix ();  ;  SparseMatrix (Index nbRow, Index nbCol);  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Line & operator[] (Index i);  ; const Line & operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void mul (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; void mul (linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:1731,clear,clear,1731,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,4,['clear'],"['clear', 'clearRow']"
Usability,"blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6473,clear,clear,6473,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,2,['clear'],['clear']
Usability,"blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6779,clear,clearRowCol,6779,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,2,['clear'],['clearRowCol']
Usability,"bloc_traits< float, IndexType > Member List . This is the complete list of members for sofa::linearalgebra::matrix_bloc_traits< float, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< float, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< float, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; getElementSize()sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< float, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< float, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< float, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; v(Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; v(const Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; vadd(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; vset(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4-members.html:466,clear,clear,466,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4-members.html,2,['clear'],['clear']
Usability,"bool sofa::gui::qt::viewer::qt::QtViewer::ready ; (; ). inlineoverridevirtual . true when the viewer keep the hand on the render false when it's not in activity ; Reimplemented from sofa::gui::common::BaseViewer. ◆ redrawn. void sofa::gui::qt::viewer::qt::QtViewer::redrawn ; (; ). overridesignal . ◆ resetView. void sofa::gui::qt::viewer::qt::QtViewer::resetView ; (; ). overrideslot . ◆ resizeGL(). void sofa::gui::qt::viewer::qt::QtViewer::resizeGL ; (; int ; w, . int ; h . ). overrideprotected . ◆ resizeH. void sofa::gui::qt::viewer::qt::QtViewer::resizeH ; (; int ; ). overridesignal . ◆ resizeW. void sofa::gui::qt::viewer::qt::QtViewer::resizeW ; (; int ; ). overridesignal . ◆ saveView. void sofa::gui::qt::viewer::qt::QtViewer::saveView ; (; ). overridevirtualslot . ◆ screenshot(). void sofa::gui::qt::viewer::qt::QtViewer::screenshot ; (; const std::string & ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::gui::qt::viewer::SofaViewer. ◆ setSizeH. void sofa::gui::qt::viewer::qt::QtViewer::setSizeH ; (; int ; size). overridevirtualslot . ◆ setSizeW. void sofa::gui::qt::viewer::qt::QtViewer::setSizeW ; (; int ; size). overridevirtualslot . ◆ setView. void sofa::gui::qt::viewer::qt::QtViewer::setView ; (; const type::Vec3 & ; pos, . const type::Quat< SReal > & ; ori . ). overridevirtualslot . ◆ UpdateOBJ(). void sofa::gui::qt::viewer::qt::QtViewer::UpdateOBJ ; (; void ; ). ◆ viewAll(). virtual void sofa::gui::qt::viewer::qt::QtViewer::viewAll ; (; void ; ). inlineoverrideprotectedvirtual . Overloaded from SofaViewer. ; Implements sofa::gui::common::BaseViewer. ◆ viewerName(). static const char* sofa::gui::qt::viewer::qt::QtViewer::viewerName ; (; ). inlinestatic . ◆ wait(). void sofa::gui::qt::viewer::qt::QtViewer::wait ; (; ). inlineoverridevirtual . ask the viewer to resume its activity ; Reimplemented from sofa::gui::common::BaseViewer. sofaguiqtviewerqtQtViewer; Generated on Mon Nov 11 2024 03:26:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html:13265,resume,resume,13265,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,2,['resume'],['resume']
Usability,"bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html:2403,resume,resume,2403,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,4,['resume'],['resume']
Usability,"bra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6723,clear,clearRowCol,6723,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,2,['clear'],['clearRowCol']
Usability,"bra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlinepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4903,clear,clearCols,4903,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,2,['clear'],['clearCols']
Usability,"bra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:36826,Clear,Clears,36826,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['Clear'],['Clears']
Usability,"bra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the eleme",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21896,clear,clearCol,21896,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['clear'],['clearCol']
Usability,"bs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyObject::ModifyObject ; (; void * ; Id, . QTreeWidgetItem * ; item_clicked, . QWidget * ; parent, . const ModifyObjectFlags & ; dialogFlags, . const char * ; name = nullptr, . bool ; modal = false, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). explicit . ◆ ~ModifyObject(). sofa::gui::qt::ModifyObject::~ModifyObject ; (; ). inlineoverride . Function details. ◆ accept. void sofa::gui::qt::ModifyObject::accept ; (; ). overrideslot . ◆ beginDataModification. void sofa::gui::qt::ModifyObject::beginDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ beginObjectModification. void sofa::gui::qt::ModifyObject::beginObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ clearMessages. void sofa::gui::qt::ModifyObject::clearMessages ; (; ). protectedslot . ◆ closeEvent. void sofa::gui::qt::ModifyObject::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeNow. void sofa::gui::qt::ModifyObject::closeNow ; (; ). inlineslot . ◆ componentDirty. void sofa::gui::qt::ModifyObject::componentDirty ; (; bool ; ). signal . ◆ createDialog() [1/2]. void sofa::gui::qt::ModifyObject::createDialog ; (; core::objectmodel::Base * ; node). ◆ createDialog() [2/2]. void sofa::gui::qt::ModifyObject::createDialog ; (; core::objectmodel::BaseData * ; data). ◆ dataModified. void sofa::gui::qt::ModifyObject::dataModified ; (; QString ; ). signal . ◆ dialogClosed. void sofa::gui::qt::ModifyObject::dialogClosed ; (; void * ; ). signal . ◆ endDataModification. void sofa::gui::qt::ModifyObject::endDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ endObjectModification. void sofa::gui::qt::ModifyObject::endObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:4030,clear,clearMessages,4030,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,2,['clear'],['clearMessages']
Usability,"bugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2392,clear,clearNodeData,2392,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,4,['clear'],"['clear', 'clearNodeData']"
Usability,"c constexpr sofa::Size total_size = 7;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Protected Attributes; Vec3 center;  ; Quat orientation;  . Public Member Functions; constexpr RigidCoord (const Vec3 &posCenter, const Quat &orient);  ; constexpr RigidCoord ();  ; template<typename real2 > ; constexpr RigidCoord (const RigidCoord< 3, real2 > &c);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidCoord< 3, real2 > &c);  ; constexpr void operator= (const Vec3 &p);  ; void operator+= (const Deriv &dg);  ; constexpr RigidCoord< 3, real > operator+ (const Deriv &dg) const;  ; constexpr RigidCoord< 3, real > operator- (const RigidCoord< 3, real > &a) const;  ; constexpr RigidCoord< 3, real > operator+ (const RigidCoord< 3, real > &a) const;  ; constexpr RigidCoord< 3, real > operator- () const;  ; constexpr void operator+= (const RigidCoord< 3, real > &a);  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; template<typename real2 > ; constexpr RigidCoord< 3, real > operator* (real2 a) const;  ; template<typename real2 > ; constexpr RigidCoord< 3, real > operator/ (real2 a) const;  ; constexpr Real operator* (const RigidCoord< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; constexpr real norm2 () const;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getCenter ();  ; constexpr Quat & getOrientation ();  ; constexpr const Vec3 & getCenter () const;  ; constexpr const Quat & getOrientation () const;  ; constexpr Vec3 rotate (const Vec3 &v) const;  ; constexpr RigidCoord< 3, real > rotate (const RigidCoord< 3, real > &c) const;  ; co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html:1041,clear,clear,1041,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,"c< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24223,Simpl,SimpleDataWidget,24223,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"cGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5340,clear,clearRowCol,5340,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRowCol']
Usability,"cSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5939,clear,clearRowCol,5939,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,2,['clear'],['clearRowCol']
Usability,"cSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5436,clear,clearRows,5436,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearRows']
Usability,"calload::OscillatingTorsionPressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_frequencysofa::component::mechanicalload::OscillatingTorsionPressure",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:4931,clear,clearLoggedMessages,4931,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockAccessor *b);  ; static InternalColBlockIterator * getInternal (ColBlockConstIterator *b);  ; static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ component. BaseProjectiveConstraintSet* sofa::core::behavior::ApplyConstraintCompat::component { nullptr }. ◆ zeroDirichletCondition. sofa::core::behavior::ZeroDirichletCondition* sofa::core::behavior::ApplyConstraintCompat::zeroDirichletCondition { nullptr }. Function details. ◆ add(). void sofa::core::behavior::ApplyConstraintCompat::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). void sofa::core::behavior::ApplyConstraintCompat::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). void sofa::core::behavior::ApplyConstraintCompat::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). Index sofa::core::behavior::ApplyConstraintCompat::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). SReal sofa::core::behavior::ApplyConstraintCompat::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). void sofa::core::behavior::ApplyConstraintCompat::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Impl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:13945,clear,clear,13945,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clear']
Usability,"ce framework for multi-physics simuation. sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Member List . This is the complete list of members for sofa::linearalgebra::matrix_bloc_traits< double, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< double, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< double, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< double, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< double, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< double, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; v(Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; v(const Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; vadd(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; vset(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4-members.html:470,clear,clear,470,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4-members.html,2,['clear'],['clear']
Usability,"ch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:5974,clear,clearVisual,5974,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,4,['clear'],"['clear', 'clearVisual']"
Usability,"changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4211,clear,clearBorderElementLists,4211,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearBorderElementLists']
Usability,"chanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *matrix) override;  ;  Public Member Functions inherited from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool fixAllDOFs () const;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if fa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:4701,clear,clearConstraints,4701,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"char *idStr, const char *objStr);  ; static void stepEnd (const char *idStr, const std::string &objStr);  ; template<class T > ; static void stepEnd (const char *idStr, T *obj);  ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:3992,clear,clear,3992,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,2,['clear'],['clear']
Usability,"ck typedefsofa::linearalgebra::BlockDiagonalMatrix< LC, T >; BlockDiagonalMatrix()sofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6464,clear,clearCol,6464,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,2,['clear'],['clearCol']
Usability,"ck(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::sceneutility::BaseAddResourceRepositoryvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_repositoryPathsofa::component::sceneutility::BaseAddResourceRepository; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:2035,clear,clearLoggedMessages,2035,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,3,['clear'],['clearLoggedMessages']
Usability,"ckType typedefsofa::linearalgebra::BTDMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5849,clear,clearCols,5849,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,2,['clear'],['clearCols']
Usability,"cker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html:2215,clear,clearLoggedMessages,2215,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ createPointInLine(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInLine ; (; const typename Out::Coord & ; p, . Index ; lineIndex, . const typename In::VecCoord * ; points . ). override . ◆ createPointInQuad(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInQuad ; (; const typename Out::Coord & ; p, . Index ; quadIndex, . const typename In::VecCoord * ; points . ). override . ◆ createPointInTriangle(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInTriangle ; (; const typename Out::Coord & ; p, . Index ; triangleIndex, . const typename In::VecCoor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html:7097,clear,clear,7097,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,1,['clear'],['clear']
Usability,"class  RowConstIterator;  ; class  RowType;  ; class  RowWriteAccessor;  . Static Public Attributes; static constexpr Index s_invalidIndex = std::is_signed_v<Index> ? std::numeric_limits<Index>::lowest() : std::numeric_limits<Index>::max();  ; static constexpr sofa::Index NL = CRSMatrix::NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC = CRSMatrix::NC;  Number of columns of a block. More...;  ;  Static Public Attributes inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; static constexpr sofa::Index NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC;  Number of columns of a block. More...;  ; static constexpr Index s_invalidIndex;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSConstraintPolicy; static constexpr bool AutoSize = true;  ; static constexpr bool AutoCompress = true;  ; static constexpr bool CompressZeros = false;  ; static constexpr bool ClearByZeros = false;  ; static constexpr bool OrderedInsertion = false;  ; static constexpr int matrixType = 2;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:1708,Clear,ClearByZeros,1708,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,1,['Clear'],['ClearByZeros']
Usability,"cle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::BaseNodepure virtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:1631,clear,clearObjectContext,1631,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['clear'],['clearObjectContext']
Usability,coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::Ed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49399,clear,clearHexahedra,49399,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedra']
Usability,"col, . const sofa::type::Mat< 6, 6, double > & ; value . ). virtual . ◆ add() [8/10]. void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . const sofa::type::Mat< 6, 6, float > & ; value . ). virtual . ◆ add() [9/10]. virtual void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; , . sofa::SignedIndex ; , . double ;  . ). inlinevirtual . Reimplemented in sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >, sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >, sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >, and sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >. ◆ add() [10/10]. virtual void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; , . sofa::SignedIndex ; , . float ;  . ). inlinevirtual . Reimplemented in sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >, sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >, sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >, and sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >. ◆ clear(). virtual void sofa::core::MatrixAccumulatorInterface::clear ; (; ). inlinevirtual . Reimplemented in sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >, sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >, sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >, and sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >. ◆ matAdd(). template<sofa::Size L, sofa::Size C, class real > . void sofa::core::MatrixAccumulatorInterface::matAdd ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . const sofa::type::Mat< L, C, real > & ; value . ). ◆ setIndexCheckerStrategy(). virtual void sofa::core::MatrixAccumulatorInterface::setIndexCheckerStrategy ; (; std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > ; ). inlinevirtual . sofacoreMatrixAccumulatorInterface; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html:4836,clear,clear,4836,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,2,['clear'],['clear']
Usability,"color) override;  ; virtual void drawHexahedra (const std::vector< type::Vec3 > &points, const type::RGBAColor &color) override;  ; virtual void drawScaledHexahedra (const std::vector< type::Vec3 > &points, const type::RGBAColor &color, const float scale) override;  ; void drawSphere (const type::Vec3 &p, float radius) override;  ; void drawSphere (const type::Vec3 &p, float radius, const type::RGBAColor &color) override;  ; void drawEllipsoid (const type::Vec3 &p, const type::Vec3 &radii) override;  ; void drawBoundingBox (const type::Vec3 &min, const type::Vec3 &max, float size=1.0) override;  ; void draw3DText (const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) override;  ; virtual void draw3DText_Indices (const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) override;  ; void clear () override;  ; void setMaterial (const type::RGBAColor &color) override;  ; void resetMaterial (const type::RGBAColor &color) override;  ; void resetMaterial () override;  ; void pushMatrix () override;  ; void popMatrix () override;  ; void multMatrix (float *glTransform) override;  ; void scale (float s) override;  ; void translate (float x, float y, float z) override;  ; void writeOverlayText (int x, int y, unsigned fontSize, const type::RGBAColor &color, const char *text) override;  draw 2D text at position (x,y) from top-left corner More...;  ; void enablePolygonOffset (float factor, float units) override;  ; void disablePolygonOffset () override;  Remove variable depth offset for polygon drawing. More...;  ; void enableBlending () override;  ; void disableBlending () override;  ; void enableLighting () override;  ; void disableLighting () override;  ; void enableDepthTest () override;  ; void disableDepthTest () override;  ; void saveLastState () override;  ; void restoreLastState () override;  ; void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr) override;  ; void internalDrawSpheres (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:9485,clear,clear,9485,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,2,['clear'],['clear']
Usability,"component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the arrays are coherent. See alsom_edgesAroundVertex . m_edge ; Returnsbool true if topology is coherent. ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:36646,clear,clear,36646,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clear']
Usability,"component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37368,clear,clearEdges,37368,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdges']
Usability,componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected . ◆ visitorsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTime. protected . ◆ visitorsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeTotal. protected . Constructor details. ◆ WindowVisitor(). sofa::gui::qt::WindowVisitor::WindowVisitor ; (; QWidget * ; parent). Function details. ◆ clearGraph. void sofa::gui::qt::WindowVisitor::clearGraph ; (; ). inlineslot . ◆ closeEvent. void sofa::gui::qt::WindowVisitor::closeEvent ; (; QCloseEvent * ; ). inlineslot . ◆ collapseNode [1/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; ). slot . ◆ collapseNode() [2/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; QTreeWidgetItem * ; item). ◆ expandNode [1/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; ). slot . ◆ expandNode() [2/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; QTreeWidgetItem * ; item). ◆ focusOn. void sofa::gui::qt::WindowVisitor::focusOn ; (; QString ; focus). slot . ◆ getComponentType. static componentType sofa::gui::qt::WindowVisitor::getComponentType ; (; std::string ; name). inlinestaticslot . ◆ getPixmap. static QPixmap* sofa::gui::qt::WindowVisitor::getPixmap ; (; componentType ; t). inlinestaticslot . ◆ rightClick. void sofa::gui::qt::WindowVisitor::rightClick ; (; const QPoint & ; point). slot . ◆ setCharts(). void sofa::gui::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:3099,clear,clearGraph,3099,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,2,['clear'],['clearGraph']
Usability,"const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3096,clear,clearLoggedMessages,3096,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,2,['clear'],['clearLoggedMessages']
Usability,"const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Addi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:2201,clear,clear,2201,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],['clear']
Usability,"constraint::lagrangian::solver::GenericConstraintProblem::m_lam. protected . ◆ m_p. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::m_p. protected . ◆ scaleTolerance. bool sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::scaleTolerance. ◆ sceneTime. SReal sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::sceneTime. ◆ sor. SReal sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::sor. ◆ Wdiag. linearalgebra::SparseMatrix<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::Wdiag. Constructor details. ◆ GenericConstraintProblem(). sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::GenericConstraintProblem ; (; ). inline . ◆ ~GenericConstraintProblem(). sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::~GenericConstraintProblem ; (; ). inlineoverride . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::clear ; (; int ; nbConstraints). overridevirtual . Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintProblem. ◆ freeConstraintResolutions(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::freeConstraintResolutions ; (; ). ◆ gaussSeidel(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel ; (; SReal ; timeout = 0, . GenericConstraintSolver * ; solver = nullptr . ). Projective Gauss Seidel method building the compliance matrix. . ◆ gaussSeidel_increment(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel_increment ; (; bool ; measureError, . SReal * ; dfree, . SReal * ; force, . SReal ** ; w, . SReal ; tol, . SReal * ; d, . int ; dim, . bool & ; constraintsAreVerified, . SReal & ; error, . sofa::type::vector< SReal > & ; tabErrors . ); const. ◆ getNumConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:5369,clear,clear,5369,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['clear'],['clear']
Usability,"constraint::projective::LineProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:24323,clear,clearConstraints,24323,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem()sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >protected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html:2620,clear,clearSystem,2620,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,1,['clear'],['clearSystem']
Usability,"core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem classsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >friend; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:2580,clear,clearSystem,2580,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,1,['clear'],['clearSystem']
Usability,"core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html:2612,clear,clearSystem,2612,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,2,['clear'],['clearSystem']
Usability,"core::objectmodel::Base; applyConstraintForce(const sofa::core::ConstraintParams *, sofa::core::MultiVecDerivId, const linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildComplianceMatrix(const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html:2561,clear,clearLoggedMessages,2561,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,2,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(DAGNode *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::graph::DAGNodeinlinestatic; sofa::simulation::Node::create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; sofa::simulation::Node::create(const std::string &name)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html:2401,clear,clearLoggedMessages,2401,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,2,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &nodeName)=0sofa::simulation::Nodepure virtual; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html:2257,clear,clearLoggedMessages,2257,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,2,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawConstrainedPointssofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:3381,clear,clearLoggedMessages,3381,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; CAMERA_LOOKAT_PIVOT enum valuesofa::component::visual::InteractiveCamera; CAMERA_POSITION_PIVOT enum valuesofa::component::visual::InteractiveCamera; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html:2384,clear,clearLoggedMessages,2384,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,"core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:5460,clear,clearVisual,5460,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,2,['clear'],"['clear', 'clearVisual']"
Usability,creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: rigif. /robots; . /feed; ; Robots – SOFA. S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:468040,learn,learning,468040,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,"cs simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, Index row, Index col);  ; static const Real & v (const Block &b, Index row, Index col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size L, Size C, class real , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size L, Size C, class real , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<Size L, Size C, class real , typename IndexType > . static const std::string sofa::lineara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html:1175,clear,clear,1175,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,2,['clear'],['clear']
Usability,"ct * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_flags. template<class DataTypes > . core::visual::DisplayFlags sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_flags. protected . ◆ m_interactionObject. template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_interactionObject. protected . ◆ m_mapper. template<class DataTypes > . MouseContactMapper* sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_mapper. protected . Constructor details. ◆ BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::BaseAttachBodyPerformer ; (; BaseMouseInteractor * ; i). explicit . ◆ ~BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::~BaseAttachBodyPerformer. virtual . Function details. ◆ clear(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::clear. virtual . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getInteractionObject(). template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::getInteractionObject. ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::start. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ startPartial(). templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:3748,clear,clear,3748,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,2,['clear'],['clear']
Usability,"ct ID available to send the next version More...;  . Public Member Functions;  AspectBuffer (AspectPool &pool);  ;  ~AspectBuffer ();  ; AspectRef allocate ();  Allocate an aspect ID to prepare the next version, reusing a recent one if possible. More...;  ; void push (AspectRef id);  Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) More...;  ; bool pop (AspectRef &id);  Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) More...;  ; void clear ();  . Attribute details. ◆ availableID. AtomicInt sofa::core::objectmodel::AspectBuffer::availableID. protected . -1 or aspect ID available to send the next version . ◆ latestID. AtomicInt sofa::core::objectmodel::AspectBuffer::latestID. protected . -1 or aspect ID of the last version sent . ◆ pool. AspectPool& sofa::core::objectmodel::AspectBuffer::pool. protected . Constructor details. ◆ AspectBuffer(). sofa::core::objectmodel::AspectBuffer::AspectBuffer ; (; AspectPool & ; pool). ◆ ~AspectBuffer(). sofa::core::objectmodel::AspectBuffer::~AspectBuffer ; (; ). Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectBuffer::allocate ; (; ). Allocate an aspect ID to prepare the next version, reusing a recent one if possible. . ◆ clear(). void sofa::core::objectmodel::AspectBuffer::clear ; (; ). Clear the buffers This must be called before either the AspectPool or this buffer is deleted . ◆ pop(). bool sofa::core::objectmodel::AspectBuffer::pop ; (; AspectRef & ; id). Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) . ◆ push(). void sofa::core::objectmodel::AspectBuffer::push ; (; AspectRef ; id). Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) . sofacoreobjectmodelAspectBuffer; Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html:2048,clear,clear,2048,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,2,['clear'],['clear']
Usability,"cted Attributes; BaseVectorOperations * vop;  Solver who is using this vector. More...;  ; MyMultiVecId v;  Identifier of this vector. More...;  ; bool dynamic;  Flag indicating if this vector was dynamically allocated. More...;  . Public Member Functions;  TMultiVec (BaseVectorOperations *vop, MyMultiVecId v);  Refers to a state vector with the given ID (VecId::position(), VecId::velocity(), etc). More...;  ;  TMultiVec ();  Refers to a not yet allocated state vector. More...;  ;  TMultiVec (BaseVectorOperations *vop, bool dynamic=true, const VecIdProperties &properties={});  Allocate a new temporary vector with the given type (sofa::core::V_COORD or sofa::core::V_DERIV). More...;  ;  ~TMultiVec ();  ;  operator MyMultiVecId ();  Automatic conversion to the underlying VecId. More...;  ;  operator ConstMyMultiVecId ();  ;  operator AllMultiVecId ();  ;  operator ConstAllMultiVecId ();  ; const MyMultiVecId & id () const;  ; MyMultiVecId & id ();  ; BaseVectorOperations * ops ();  ; void setOps (BaseVectorOperations *op);  ; void realloc (BaseVectorOperations *_vop, bool interactionForceField=false, bool propagate=false, const VecIdProperties &properties={});  ; void clear ();  v = 0 More...;  ; void eq (MyMultiVecId a);  v = a More...;  ; void eq (MyMultiVecId a, SReal f);  v = a*f More...;  ; void peq (AllMultiVecId a, SReal f=1.0);  v += a*f More...;  ; void teq (SReal f);  v *= f More...;  ; void eq (AllMultiVecId a, AllMultiVecId b, SReal f=1.0);  v = a+b*f More...;  ; SReal dot (MyMultiVecId a);  ; void threshold (SReal threshold);  nullify values below given threshold More...;  ; SReal norm ();  ; SReal norm (unsigned l);  ; void operator= (MyMultiVecId a);  v = a More...;  ; void operator= (const TMultiVec< vtype > &a);  v = a More...;  ; void operator+= (MyMultiVecId a);  v += a More...;  ; void operator-= (MyMultiVecId a);  v -= a More...;  ; void operator*= (SReal f);  v *= f More...;  ; void operator/= (SReal f);  v /= f More...;  ; SReal operator* (MyMult",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html:1839,clear,clear,1839,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,1,['clear'],['clear']
Usability,"cted; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::sp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:4734,clear,clear,4734,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['clear'],['clear']
Usability,"cted; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv1 &c1, DataMatrixDeriv2 &c2, unsigned int &cIndex, const DataVecCoord1 &x1, const DataVecCoord2 &x2)=0sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >pure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >inlinestatic; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:2652,clear,clearLoggedMessages,2652,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ction< TDataTypes >pure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f)=0sofa::core::behavior::ConstraintCorrection< TDataTypes >pure virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; Coord typedefsofa::core::behavior::ConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html:4312,clear,clearLoggedMessages,4312,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ctmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeJacobiansFrom(BaseMechanicalState *mstate, const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *crs)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; computeMatrixJacobians(const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; computeMatrixProduct(const MappingGraph &mappingGraph, TMatrix *matrixToProject, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protectedvirtual; computeProjection(const Eigen::Map< Eigen::SparseMatrix< Block, Eigen::RowMajor > > KMap, const sofa::type::fixed_array< std::shared_ptr< TMatrix >, 2 > J, Eigen::SparseMatrix< Block, Eigen::RowMajor > &JT_K_J)sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html:2642,clear,clearLoggedMessages,2642,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ctmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5241,clear,clearLoggedMessages,5241,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearLoggedMessages']
Usability,"ctor< double > > > > DWLClass_mapvectord (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, sofa::type::vector< Vec2d > > > > DWLClass_mapvector2d (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< float > > > > DWLClass_mapdequef (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< double > > > > DWLClass_mapdequed (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< Vec2d > > > > DWLClass_mapdeque2d (""graph_linear"", true);  ; helper::Creator< DataWidgetFactory, QPoissonRatioWidget > DWClass_Poissonratio (""poissonRatio"", false);  ; RealGUI * gui = nullptr;  ; QApplication * application = nullptr;  ; const char * progname ="""";  ; Creator< DataWidgetFactory, SimpleDataWidget< bool > > DWClass_bool (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< char > > DWClass_char (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned char > > DWClass_uchar (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< int > > DWClass_int (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:20685,Simpl,SimpleDataWidget,20685,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ctor<float> > > > sofa::gui::qt::DWClass_mapvectorf(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_Mat22d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,double> > > sofa::gui::qt::DWClass_Mat22d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat22f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,float> > > sofa::gui::qt::DWClass_Mat22f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWClass_Mat34d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,float> > > sofa::gui::qt::DWClass_Mat34f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,double> > > sofa::gui::qt::DWClass_Mat44d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat44f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<4,4,float> > > sofa::gui::qt::DWClass_Mat44f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,double> > > sofa::gui::qt::DWClass_Mat66d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat66f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<6,6,float> > > sofa::gui::qt::DWCla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:67502,Simpl,SimpleDataWidget,67502,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ctory, SimpleDataWidget< int > > DWClass_int (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:21860,Simpl,SimpleDataWidget,21860,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ctory, SimpleDataWidget< unsigned char > > DWClass_uchar (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< int > > DWClass_int (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:21760,Simpl,SimpleDataWidget,21760,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"cubeIndex, . const SReal * ; baryCoords . ). override . ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::draw ; (; const VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html:5106,clear,clear,5106,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,1,['clear'],['clear']
Usability,"cy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::Compresse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15085,clear,clearRowCol,15085,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,2,['clear'],['clearRowCol']
Usability,"d ();  ; void clear ();  ; void resize (Size s, bool=true);  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Friends; std::ostream & operator<< (std::ostream &os, const WriteAccessorVectorId< T > &vec);  ; std::istream & operator>> (std::istream &in, WriteAccessorVectorId< T > &vec);  . Attribute details. ◆ vref. template<class T > . container_type& sofa::helper::WriteAccessorVectorId< T >::vref. protected . Constructor details. ◆ WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::WriteAccessorVectorId ; (; container_type & ; container). inline . ◆ ~WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::~WriteAccessorVectorId ; (; ). inline . Function details. ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVectorId< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::helper::WriteAccessorVectorId< T >::clear ; (; ). inline . ◆ empty(). template<class T > . bool sofa::helper::WriteAccessorVectorId< T >::empty ; (; ); const. inline . ◆ end() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVectorId< T >::end ; (; ); const. inline . ◆ operator()() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVectorId< T >::operator() ; (; Index ; i). inline . ◆ operator()() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVectorId< T >::operator() ; (; Index ; i); const. inline . ◆ operator[]() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVectorId< T >::operator[] ; (; Index ; i). inline . ◆ operator[]() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVectorId< T >::operator[] ; (; Index ; i); const. inline . ◆ push_back",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html:2157,clear,clear,2157,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,2,['clear'],['clear']
Usability,"d . ◆ map_modifyDialogOpened. std::map< void*, QTreeWidgetItem* > sofa::gui::qt::QSofaListView::map_modifyDialogOpened. protected . ◆ map_modifyObjectWindow. std::map< void*, QDialog* > sofa::gui::qt::QSofaListView::map_modifyObjectWindow. protected . ◆ object_. ObjectModel sofa::gui::qt::QSofaListView::object_. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::QSofaListView::propertyWidget. protected . Constructor details. ◆ QSofaListView(). sofa::gui::qt::QSofaListView::QSofaListView ; (; const SofaListViewAttribute & ; attribute, . QWidget * ; parent = nullptr, . const char * ; name = nullptr, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). ◆ ~QSofaListView(). sofa::gui::qt::QSofaListView::~QSofaListView ; (; ). override . Function details. ◆ ActivateNode. void sofa::gui::qt::QSofaListView::ActivateNode ; (; ). protectedslot . ◆ addInPropertyWidget(). void sofa::gui::qt::QSofaListView::addInPropertyWidget ; (; QTreeWidgetItem * ; item, . bool ; clear . ). ◆ Clear(). void sofa::gui::qt::QSofaListView::Clear ; (; sofa::simulation::Node * ; rootNode). ◆ Close. void sofa::gui::qt::QSofaListView::Close ; (; ). signal . ◆ CloseAllDialogs. void sofa::gui::qt::QSofaListView::CloseAllDialogs ; (; ). slot . ◆ collapseNode [1/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; ). protectedslot . ◆ collapseNode() [2/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; QTreeWidgetItem * ; item). protected . ◆ collectNodesToChange(). std::list<core::objectmodel::BaseNode*> sofa::gui::qt::QSofaListView::collectNodesToChange ; (; core::objectmodel::BaseNode * ; node). protected . ◆ contextMenuEvent(). void sofa::gui::qt::QSofaListView::contextMenuEvent ; (; QContextMenuEvent * ; event). override . ◆ copyFilePathToClipBoard. void sofa::gui::qt::QSofaListView::copyFilePathToClipBoard ; (; ). protectedslot . ◆ dataModified. void sofa::gui::qt::QSofaListView::dataModified ; (; QString ; ). signal . ◆ DeactivateNode. void sofa::gui::qt::QSofaListView::D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:5879,Clear,Clear,5879,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,1,['Clear'],['Clear']
Usability,"d Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PenalityContactForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void clear (sofa::Size reserve=0);  ; void addContact (sofa::Index m1, sofa::Index m2, sofa::Index index1, sofa::Index index2, const Deriv &norm, Real dist, Real ks, Real mu_s=0.0f, Real mu_v=0.0f, sofa::Index oldIndex=0);  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void addKToMatrix (const sofa::core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:3733,clear,clear,3733,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['clear'],['clear']
Usability,d SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:318166,feedback,feedback,318166,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"d array. More...;  ; const sofa::type::vector< EdgesInQuad > & getEdgesInQuadArray ();  Returns the EdgesInQuadArray array (i.e. provide the 4 edge indices for each quad) More...;  ; const sofa::type::vector< QuadsAroundVertex > & getQuadsAroundVertexArray ();  Returns the QuadsAroundVertex array (i.e. provide the quad indices adjacent to each vertex). More...;  ; const sofa::type::vector< QuadsAroundEdge > & getQuadsAroundEdgeArray ();  Returns the QuadsAroundEdge array (i.e. provide the quad indices adjacent to each edge). More...;  ; bool hasQuads () const;  ; bool hasEdgesInQuad () const;  ; bool hasQuadsAroundVertex () const;  ; bool hasQuadsAroundEdge () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; const SeqQuads & getQuads () override;  Returns the quad array. More...;  ; const Quad getQuad (QuadID id) override;  Returns the quad corresponding to the QuadID i. More...;  ; QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  ; const EdgesInQuad & getEdgesInQuad (QuadID id) override;  Returns the set of edges adjacent to a given quad. More...;  ; const QuadsAroundVertex & getQuadsAroundVertex (PointID id) override;  Returns the set of quads adjacent to a given vertex. More...;  ; const QuadsAroundEdge & getQuadsAroundEdge (EdgeID id) override;  Returns the set of quads adjacent to a given edge. More...;  ; int getVertexIndexInQuad (const Quad &t, PointID vertexIndex) const override;  Returns the index (either 0, 1, 2, 3) of the vertex whose global index is vertexIndex. More...;  ; int getEdgeIndexInQuad ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:12839,clear,clear,12839,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,3,['clear'],['clear']
Usability,"d ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ; constexpr Size getNbCols () const;  number of columns More...;  ; constexpr void operator= (const real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; template<typename real2 > ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; template<Size L2, Size C2> ; constexpr void operator= (const Mat< L2, C2, real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; template<Size L2, Size C2> ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, real > &m) const noexcept;  ; template<Size C2> ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, real &m) const noexcept;  ; template<Size L2, Size C2> ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, real > &m) noexcept;  ; template<Size L2> ; constexpr void setsub (Size L0, Size C0, const Vec< L2, real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr real & operator() (Size i, Size j) noexcept;  Write acce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:2958,clear,clear,2958,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,4,['clear'],['clear']
Usability,"d implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::compress ; (; ). inline",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49343,Clear,Clear,49343,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['Clear'],['Clear']
Usability,"d matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; template<class V > ; V operator* (const V &input);  Matrix-Vector p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3736,clear,clearCol,3736,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,3,"['Clear', 'clear']","['Clears', 'clearCol']"
Usability,"d matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:5007,clear,clearCol,5007,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,3,"['Clear', 'clear']","['Clears', 'clearCol']"
Usability,"d sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ fixAllDOFs(). template<class DataTypes > . bool sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::fixAllDOFs ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::projectJacobia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:24443,clear,clearConstraints,24443,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"d sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; const core::MechanicalParams * ; , . const type::vector< InDataVecDeriv * > & ; dataVecOutForce, . const type::vector< InRootDataVecDeriv * > & ; dataVecOutRootForce, . const type::vector< const OutDataVecDeriv * > & ; dataVecInForce . ). override . ◆ applyJT() [3/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InMatrixDeriv & ; out, . const OutMatrixDeriv & ; in, . InRootMatrixDeriv * ; outroot . ). ◆ applyJT() [4/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InVecDeriv & ; out, . const OutVecDeriv & ; in, . InRootVecDeriv * ; outroot . ). ◆ clear(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::clear ; (; int ; reserve = 0). ◆ draw(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::draw ; (; const core::visual::VisualParams * ; vparams). override . ◆ handleTopologyChange(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::handleTopologyChange ; (; core::topology::Topology * ; t). override . ◆ init(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::init ; (; void ; ). override . ◆ recomputeRigidMass(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::recomputeRigidMass. MAP the mass: this function recompute the rigid mass (gravity center position and inertia) of the objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html:12740,clear,clear,12740,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,1,['clear'],['clear']
Usability,"d v, core::MultiVecDerivId dv, core::ConstMultiVecDerivId correction) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; computeResidual(const core::ExecParams *params, linearalgebra::BaseVector *lambda) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; constraintsolverssofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_complianceFactorsofa::component::constraint::lagrangian::correction::Generic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:4089,clear,clearLoggedMessages,4089,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"d, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, const Block &b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiagDBlock (unsigned int bi, const DBlock &b);  ; template<typename = typename std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5655,clear,clear,5655,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,4,['clear'],['clear']
Usability,"d, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findLinks(const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html:1262,clear,clearLoggedMessages,1262,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,5,['clear'],['clearLoggedMessages']
Usability,"d::ManyThreadsPerEnd Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Protected Member Functions |; List of all members . sofa::helper::system::thread::ManyThreadsPerEnd Class Reference . #include <CircularQueue.h>. Inheritance diagram for sofa::helper::system::thread::ManyThreadsPerEnd:. [legend]; Detailed Description; This is a lock-free (but not wait-free) multi-producer multi-consumer implementation of a circular queue matching the ThreadAccessPolicy of CircularQueue. NotemaxCapacity parameters MUST always be a power of 2. . Protected Attributes; AtomicInt head;  ; AtomicInt tail;  . Protected Member Functions;  ManyThreadsPerEnd ();  ; bool isEmpty (unsigned maxSize) const;  ; bool isFull (unsigned maxSize) const;  ; unsigned size (unsigned maxSize) const;  ; void init (AtomicInt array[], int maxCapacity);  ; bool push (AtomicInt array[], int maxSize, int maxCapacity, const AtomicInt &item);  ; bool pop (AtomicInt array[], int maxSize, int maxCapacity, AtomicInt &item, bool clear=true);  ; unsigned skip (AtomicInt array[], int maxSize, int maxCapacity, unsigned outmaxsize, bool clear=true);  ; template<class OutputIterator > ; unsigned pop (AtomicInt array[], int maxSize, int maxCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::head. protected . ◆ tail. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::tail. protected . Constructor details. ◆ ManyThreadsPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::ManyThreadsPerEnd::ManyThreadsPerEnd ; (; ). inlineprotected . Function details. ◆ init(). SOFA_HELPER_API void sofa::helper::system::thread::ManyThreadsPerEnd::init ; (; AtomicInt ; array[], . int ; maxCapacity . ). inlineprotected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isEmpty ; (; unsigned ; maxSize); const. inlineprotected . ◆ i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html:1100,clear,clear,1100,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,6,['clear'],['clear']
Usability,"d::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:2020,clear,clearLoggedMessages,2020,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"d::string, std::deque<double> > > > sofa::gui::qt::DWClass_mapdequed(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapdequef. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, std::deque<float> > > > sofa::gui::qt::DWClass_mapdequef(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvector2d. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<Vec2d> > > > sofa::gui::qt::DWClass_mapvector2d(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectord. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<double> > > > sofa::gui::qt::DWClass_mapvectord(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_mapvectorf. Creator<DataWidgetFactory, GraphDataWidget< std::map< std::string, sofa::type::vector<float> > > > sofa::gui::qt::DWClass_mapvectorf(""graph"", true) ; (; ""graph"" ; , . true ;  . ). ◆ DWClass_Mat22d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,double> > > sofa::gui::qt::DWClass_Mat22d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat22f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,2,float> > > sofa::gui::qt::DWClass_Mat22f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,double> > > sofa::gui::qt::DWClass_Mat23d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat23f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<2,3,float> > > sofa::gui::qt::DWClass_Mat23f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,double> > > sofa::gui::qt::DWClass_Mat33d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat33f. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,3,float> > > sofa::gui::qt::DWClass_Mat33f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Mat34d. Creator<DataWidgetFactory, SimpleDataWidget< Mat<3,4,double> > > sofa::gui::qt::DWCla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:66684,Simpl,SimpleDataWidget,66684,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"d::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeTotal. protected . ◆ window. WindowVisitor* sofa::gui::qt::GraphVisitor::window. protected . Constructor details. ◆ GraphVisitor(). sofa::gui::qt::GraphVisitor::GraphVisitor ; (; WindowVisitor * ; w). inline . Function details. ◆ addComment(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addComment ; (; QTreeWidgetItem * ; element, . QTreeWidgetItem * ; elementAbove, . std::string ; comment . ). ◆ addInformation(). void sofa::gui::qt::GraphVisitor::addInformation ; (; QTreeWidgetItem * ; element, . std::string ; name, . std::string ; info . ). ◆ addNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addNode ; (; QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove, . std::string ; info . ). ◆ addTime(). void sofa::gui::qt::GraphVisitor::addTime ; (; QTreeWidgetItem * ; element, . std::string ; info . ). ◆ clear(). void sofa::gui::qt::GraphVisitor::clear ; (; ). inline . ◆ getTime(). double sofa::gui::qt::GraphVisitor::getTime ; (; const tinyxml2::XMLAttribute * ; attribute); const. inline . ◆ getTotalTime(). double sofa::gui::qt::GraphVisitor::getTotalTime ; (; tinyxml2::XMLNode * ; node); const. ◆ load(). bool sofa::gui::qt::GraphVisitor::load ; (; std::string & ; file). ◆ openAttribute(). void sofa::gui::qt::GraphVisitor::openAttribute ; (; tinyxml2::XMLElement * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ openNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::openNode ; (; tinyxml2::XMLNode * ; node, . QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove . ). protected . ◆ openTime(). void sofa::gui::qt::GraphVisitor::openTime ; (; tinyxml2::XMLNode * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ setGraph(). void sofa::gui::qt::GraphVisitor::setGraph ; (; QTreeWidget * ; g). inline . sofaguiqtGraphVisitor; Generated on Mon Nov 11 2024 03:23:42 for S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html:3738,clear,clear,3738,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,2,['clear'],['clear']
Usability,"d; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:2912,clear,clearLoggedMessages,2912,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"d; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:4892,clear,clearLoggedMessages,4892,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() constsofa::core::objectmodel::BaseContextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html:1531,clear,clearLoggedMessages,1531,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:5061,clear,clear,5061,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['clear'],['clear']
Usability,"dId x, core::MultiVecDerivId v, double time=0.0);  Apply projective constraints to the given position and velocity vectors. More...;  ; void addMdx (core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId result);  ; void computeContactDf (core::MultiVecDerivId df);  ; void computeAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeForce (SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3528,clear,clear,3528,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,2,['clear'],['clear']
Usability,"dUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::SceneLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html:1988,clear,clearLoggedMessages,1988,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"datorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:2395,clear,clear,2395,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,1,['clear'],['clear']
Usability,"de BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::compress ; (; ). inlineoverridevirtual . Make the",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49368,Clear,Clear,49368,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['Clear'],['Clear']
Usability,"de;  Number of columns. More...;  ; void resizeBlock (Index nbBRow, Index nbBCol) override;  This override classic resizeBlock to fill nRow and nCol values. More...;  ; void resize (Index nbRow, Index nbCol) override;  ; void extend (Index nbRow, Index nbCol);  ; SReal element (Index i, Index j) const override;  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:5677,clear,clear,5677,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,4,['clear'],['clear']
Usability,"deSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3423,simpl,simpleapi,3423,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['simpl'],['simpleapi']
Usability,"default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23741,Simpl,SimpleDataWidget,23741,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 3 > > > DWClass_PolynomialLD3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 2 > > > DWClass_PolynomialLD2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 1 > > > DWClass_PolynomialLD1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,5 > > > DWClass_PolynomialLD5f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,4 > > > DWClass_PolynomialLD4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,3 > > > DWClass_PolynomialLD3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,2 > > > DWClass_PolynomialLD2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,1 > > > DWClass_PolynomialLD1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, float > > > DWClass_Mat22f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, double > > > DWClass_Mat22d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, float > > > DWClass_Mat23f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, double > > > DWClass_Mat23d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, float > > > DWClass_Mat33f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, double > > > DWClass_Mat33d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, float > > > DWClass_Mat34f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, double > > > DWClass_Mat34d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:28578,Simpl,SimpleDataWidget,28578,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; GetTypeName()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; name()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; Size enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoolTypeInfo; ValidInfo enum valuesofa::defaulttype::BoolTypeInfo; ValueType typedefsofa::defaulttype::BoolTypeInfo; ValueTypeInfo typedefsofa::defaulttype::BoolTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoolTypeInfo.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html:1849,Simpl,SimpleCopy,1849,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; setSize(sofa::type::vector< std::string, Alloc > &data, sofa::Size size)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; setValueString(sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; Size enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; size()sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; size(const sofa::type::vector< std::string, Alloc > &data)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::size(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValidInfo enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; ValueType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; Va",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html:3158,Simpl,SimpleCopy,3158,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,1,['Simpl'],['SimpleCopy']
Usability,"defsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemut",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:3446,clear,clearLoggedMessages,3446,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"del::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html:2707,clear,clearLoggedMessages,2707,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,2,['clear'],['clearLoggedMessages']
Usability,"del::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseInteractionConstraint()sofa::core::behavior::BaseInteractionConstraintinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:2293,clear,clearLoggedMessages,2293,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"devirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20535,clear,clearRowCol,20535,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRowCol']
Usability,"dex bj, Index, Index) const;  ; const Block & sub (Index i, Index j, Index, Index) const;  ; Block & asub (Index bi, Index bj, Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2470,clear,clear,2470,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,4,['clear'],"['clear', 'clearRow']"
Usability,"dex i) const;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void resize (Index nbRow);  ; Index size () const;  ; void swap (DiagonalMatrix< T > &v);  ; SReal element (Index i) const;  ; void set (Index i, double v);  ; void add (Index i, double v);  ; void clear (Index i);  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; void invert ();  ; template<class Real2 > ; void mult (FullVector< Real2 > &z, const FullVector< Real2 > &v) const;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator+= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator-= (const DiagonalMatrix< Real2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:1944,clear,clear,1944,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clear']
Usability,"dex i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5948,clear,clearRow,5948,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,2,['clear'],['clearRow']
Usability,"dex ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6940,clear,clearRowsCols,6940,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,2,['clear'],['clearRowsCols']
Usability,"dex, const SReal *baryCoords) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; BarycentricMapperSparseGridTopology(topology::container::grid::SparseGridTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; CubeData typedefsofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; draw(const VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; InDeriv typedefsofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; Index typedefsofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; init(const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; m_fromTopologysofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >protected; m_mapsofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology-members.html:1381,clear,clear,1381,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology-members.html,1,['clear'],['clear']
Usability,"dex ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col i and line i values of will be set to zero using default constructor . ◆ colBSize(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::colBSize ; (; )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:22090,clear,clearRowBlock,22090,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['clear'],['clearRowBlock']
Usability,"dge array (i.e. provide the tetrahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< TetrahedraAroundTriangle > & getTetrahedraAroundTriangleArray ();  Returns the TetrahedraAroundTriangle array (i.e. provide the tetrahedron indices adjacent to each triangle). More...;  ; bool hasTetrahedra () const;  ; bool hasEdgesInTetrahedron () const;  ; bool hasTrianglesInTetrahedron () const;  ; bool hasTetrahedraAroundVertex () const;  ; bool hasTetrahedraAroundEdge () const;  ; bool hasTetrahedraAroundTriangle () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addTriangle (Index, Index, Index) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  . const SeqTetrahedra & getTetrahedra () override;  Returns the tetrahedra array. More...;  ; const Tetrahedron getTetrahedron (TetraID i) override;  Returns the tetrahedron corresponding to the TetraID i. More...;  ; TetrahedronID getTetrahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  Returns the indices of a tetrahedron given four vertex indices. More...;  ; const EdgesInTetrahedron & getEdgesInTetrahedron (TetraID id) override;  Returns the 6 edges adjacent to a given tetrahedron. More...;  ; const TrianglesInTetrahedron & getTrianglesInTetrahedron (TetraID id) override;  Returns the 4 triangles adjacent to a given tetrahedron. More...;  ; const TetrahedraAroundVertex & getTetrahedraAroundVertex (PointID id) override;  Returns the set of tetrahedra adjacent to a given vertex. More...;  ; const TetrahedraAroundEdge & getTetrahedraAroundEdge (EdgeID id) override;  Returns the set of tetrahed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:9171,clear,clear,9171,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"dget< sofa::helper::Polynomial_LD< float,4 > > > DWClass_PolynomialLD4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,3 > > > DWClass_PolynomialLD3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,2 > > > DWClass_PolynomialLD2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,1 > > > DWClass_PolynomialLD1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, float > > > DWClass_Mat22f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, double > > > DWClass_Mat22d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, float > > > DWClass_Mat23f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, double > > > DWClass_Mat23d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, float > > > DWClass_Mat33f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, double > > > DWClass_Mat33d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, float > > > DWClass_Mat34f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, double > > > DWClass_Mat34d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 4, 4, float > > > DWClass_Mat44f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 4, 4, double > > > DWClass_Mat44d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 6, 6, float > > > DWClass_Mat66f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 6, 6, double > > > DWClass_Mat66d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > DWClass_TagSet (""default"", true);  ; Creator< DataWidgetFactory, RadioDataWidget > DWClass_OptionsGroup (""default"", true);  OptionsGroup support.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:29244,Simpl,SimpleDataWidget,29244,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,8,['Simpl'],['SimpleDataWidget']
Usability,"dgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ; group . ); const. protected . ◆ setConsoleOutput(). void sofa::gui::qt::QDisplayPropertyWidget::setConsoleOutput ; (; const QString & ; component, . const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3367,clear,clearComponentWarning,3367,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,2,['clear'],['clearComponentWarning']
Usability,"dices of all the non-empty blocks, sorted by increasing row index and column index More...;  ; VecBlock colsValue;  values of the non-empty blocks, in the same order as in colsIndex More...;  ; VecFlag touchedBlock;  boolean vector, i-th value is true if block has been touched since last compression. More...;  ; VecIndexedBlock btemp;  Additional storage to make block insertion more efficient. More...;  ; bool skipCompressZero;  ; VecIndex oldRowIndex;  Temporary vectors used during compression. More...;  ; VecIndex oldRowBegin;  ; VecIndex oldColsIndex;  ; VecBlock oldColsValue;  ;  Protected Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; bool registerNewCol (Index &colId, TBlock &bvalue);  Add a new col into matrix. More...;  ; std::pair< Index, Index > registerBtempLine (typename VecIndexedBlock::const_iterator &itbtemp);  Add a complete new line from btemp into matrix. More...;  ; void fullyCompressBtemp ();  Clear matrix and just add btemp array. More...;  ; Block * insertBtemp (const Index i, const Index j);  Method to easy insert new block into btemp. More...;  ; Index getMaxColIndex ();  Method to easy have the max colIndex. Could only be used if AutoSize policy is activated. More...;  ; void deleteRow (Index rowId);  Method to easy delete row given position in rowIndex. More...;  ; void compressBtemp ();  Clear matrix and compute new triplet's arrays by combining old ones and btemp(VecIndexedBlock) array. More...;  ; void compressCSR ();  ; void writeVector (const TVec &vec, std::ostream &os);  ; void readVector (TVec &vec, std::istream &in);  . Attribute details. ◆ NC. template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . constexpr sofa::Index sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::NC = CRSMatrix::NC. staticconstexpr . Number of columns of a block. . ◆ NL. template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . constexpr ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:10743,Clear,Clear,10743,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,1,['Clear'],['Clear']
Usability,"dirty. . Constructor details. ◆ PointSetTopologyContainer(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::PointSetTopologyContainer ; (; Size ; nPoints = 0). explicitprotected . ◆ ~PointSetTopologyContainer(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::~PointSetTopologyContainer ; (; ). overrideprotecteddefault . Function details. ◆ addPoint() [1/2]. void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoint ; (; ). add one DOF in this topology (simply increment the number of DOF) . ◆ addPoint() [2/2]. void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoint ; (; SReal ; px, . SReal ; py, . SReal ; pz . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoints ; (; const Size ; nPoints). add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) ; Parameters. Thenumber of point to add. . ◆ checkTopology(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the Topology is coherent. ; Dynamic Topology API ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ cleanPointTopologyFromDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::cleanPointTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:31318,simpl,simply,31318,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"dmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; computeForce(Displacement &F, const Displacement &Depl, VoigtTensor &plasticStrain, const MaterialStiffness &K, const StrainDisplacement &J)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inlineprotected; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacement &J, SReal fact)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:10138,clear,clearLoggedMessages,10138,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_springssofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; datasofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html:4730,clear,clearLoggedMessages,4730,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::An",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4897,clear,clearHexahedraAroundEdge,4897,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedraAroundEdge']
Usability,dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::comp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40492,clear,clearQuadsAroundEdge,40492,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundEdge']
Usability,"e &r2);  ; static void clear ();  . Constructor details. ◆ Axis() [1/8]. sofa::gl::Axis::Axis ; (; SReal ; len = 1.0_sreal). ◆ Axis() [2/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; len). ◆ Axis() [3/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . const type::Vec3 & ; length . ). ◆ Axis() [4/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . const type::Vec3 & ; length . ). ◆ Axis() [5/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . const type::Vec3 & ; length . ). ◆ Axis() [6/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Axis() [7/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Axis() [8/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Axis(). sofa::gl::Axis::~Axis ; (; ). Function details. ◆ clear(). static void sofa::gl::Axis::clear ; (; ). inlinestatic . ◆ draw() [1/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . const type::Vec3 & ; length, . const type::RGBAColor & ; colorX = type::RGBAColor::red(), . const type::RGBAColor & ; colorY = type::RGBAColor::green(), . const type::RGBAColor & ; colorZ = type::RGBAColor::red() . ). static . ◆ draw() [2/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . const type::Vec3 & ; length, . const type::Vec4f & ; colorX = type::Vec4f(1, 0, 0, 1), . const type::Vec4f & ; colorY = type::Vec4f(0, 1, 0, 1), . const type::Vec4f & ; colorZ = type::Vec4f(0, 0, 1, 1) . ). delete . ◆ draw() [3/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . SReal ; length = 1.0_sreal, . const type::RGBAColor & ; colorX = type::RGBAColor::red(), . const type::RGBAColor & ; colorY = type::RGBAColor::green(), . const type::RGBAColor & ; colorZ = type::RGBAColor::red() . ). static . ◆ draw() [4/16]. static void sofa::gl::Axis::draw ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html:5786,clear,clear,5786,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,2,['clear'],['clear']
Usability,"e . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CRSDefaultPolicy:. [legend]. Static Public Attributes; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ Clear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:1221,clear,clear,1221,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,5,"['Clear', 'clear']","['ClearByZeros', 'clear', 'clearing']"
Usability,"e . #include <RigidDeriv.h>. Static Public Attributes; static constexpr sofa::Size total_size = 3;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 2;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Public Member Functions; constexpr RigidDeriv (type::NoInit);  ; constexpr RigidDeriv ();  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 2, real2 > &velCenter, const real2 &velOrient);  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 3, real2 > &v);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidDeriv< 2, real2 > &c);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 2, real2 > &v);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 3, real2 > &v);  ; constexpr void operator+= (const RigidDeriv< 2, real > &a);  ; constexpr void operator-= (const RigidDeriv< 2, real > &a);  ; constexpr RigidDeriv< 2, real > operator+ (const RigidDeriv< 2, real > &a) const;  ; constexpr RigidDeriv< 2, real > operator- (const RigidDeriv< 2, real > &a) const;  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; constexpr RigidDeriv< 2, real > operator- () const;  ; constexpr Real operator* (const RigidDeriv< 2, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; Real norm () const;  Euclidean norm. More...;  ; constexpr Vec2 & getVCenter ();  ; constexpr Real & getVOrientation ();  ; constexpr const Vec2 & getVCenter () const;  ; constexpr const Real & getVOrientation () const;  ; constexpr Vec2 & getLinear ();  ; constexpr Real & getAngular ();  ; constexpr const Vec2 & getLinear () const;  ; constexpr const Real & getAngular () const;  ; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html:1046,clear,clear,1046,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"e . Function details. ◆ add(). template<typename T > . void sofa::linearalgebra::FullVector< T >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ begin() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::begin ; (; ); const. inline . ◆ capacity(). template<typename T > . Index sofa::linearalgebra::FullVector< T >::capacity ; (; ); const. inline . ◆ checkIndex(). template<typename Real > . void sofa::linearalgebra::FullVector< Real >::checkIndex ; (; Index ; n); const. protected . ◆ clear() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; Index ; i). overridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ dot(). template<typename Real > . Real sofa::linearalgebra::FullVector< Real >::dot ; (; const FullVector< Real > & ; a); const. Returnsv.a . ◆ element(). template<typename T > . SReal sofa::linearalgebra::FullVector< T >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ end() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::end ; (; ); const. inline . ◆ eq() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::eq ; (; const FullVector< Real > & ; a, . const FullVector< Real > & ; b, . Real ; f = 1.0 . ). v = a+b*f . ◆ eq() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:6813,clear,clear,6813,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,2,['clear'],['clear']
Usability,"e <BlockVector.h>. Inheritance diagram for sofa::linearalgebra::BlockVector< N, T >:. [legend]. Classes; class  Block;  . Public Member Functions;  BlockVector ();  ;  BlockVector (Index n);  ; virtual ~BlockVector ();  ; const Block & sub (Index i, Index) const;  ; Block & sub (Index i, Index);  ; const Block & asub (Index bi, Index) const;  ; Block & asub (Index bi, Index);  ;  Public Member Functions inherited from sofa::linearalgebra::FullVector< T >;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVector< Real > &a);  v -= a More...;  ; void eq (const FullVector< Real > &a, Real f);  v =",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html:1273,clear,clear,1273,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,2,['clear'],['clear']
Usability,"e C, class real > . constexpr const_reference sofa::type::Mat< L, C, real >::back ; (; ); const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::begin ; (; ). inlineconstexprnoexcept . ◆ canSelfTranspose() [1/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size I, Size J> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< I, J, real > & ; , . const Mat< J, I, real > & ;  . ). inlinestaticnoexcept . ◆ canSelfTranspose() [2/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size S> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< S, S, real > & ; lhs, . const Mat< S, S, real > & ; rhs . ). inlinestaticnoexcept . ◆ clear(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::clear ; (; ). inlineconstexprnoexcept . Sets each element to 0. . ◆ col(). template<sofa::Size L, sofa::Size C, class real > . constexpr Col sofa::type::Mat< L, C, real >::col ; (; Size ; j); const. inlineconstexprnoexcept . Copy of column j. . ◆ data(). template<sofa::Size L, sofa::Size C, class real > . constexpr const real* sofa::type::Mat< L, C, real >::data ; (; ); const. inlineconstexprnoexcept . ◆ end() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::end ; (; ); const. inlineconstexprnoexcept . ◆ end() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::end ; (; ). inlineconstexprnoexcept . ◆ fill(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::fill ; (; real ; r). inlineco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:16833,clear,clear,16833,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,2,['clear'],['clear']
Usability,"e TBlock , typename TPolicy = CRSDefaultPolicy> . static auto sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21377,Clear,ClearByZeros,21377,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['Clear'],['ClearByZeros']
Usability,"e an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ findObject(). Base * sofa::core::objectmodel::BaseObjectDescription::findObject ; (; const char * ; nodeName). virtual . Find an object given its name (relative to this object) ; Find an object given its name. . ◆ getAttribute(). const char * sofa::core::objectmodel::BaseObjectDescription::getAttribute ; (; const std::string & ; attr, . const char * ; defaultVal = nullptr . ). virtual . Get an attribute given its name (return defaultVal if not present) . ◆ getAttributeAsFloat(). float sofa::core::objectmodel::BaseObjectDescription::getAttributeAsFloat ; (; const std::string & ; attr, . const float ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:3626,clear,clearErrors,3626,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['clear'],['clearErrors']
Usability,e coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronAr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50825,clear,clearTetrahedraAroundEdge,50825,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundEdge']
Usability,"e complete list of members for sofa::simulation::xml::Element< Object >, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< Object >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< Object >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element-members.html:929,clear,clearErrors,929,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element-members.html,2,['clear'],['clearErrors']
Usability,"e diagram for sofa::core::behavior::ListStiffnessMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >; void push_back (StiffnessMatrixAccumulator *m);  ; void remove (StiffnessMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListStiffnessMatrixAccumulator; Generated on Mon Nov 11 2024 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator.html:642,clear,clear,642,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator.html,1,['clear'],['clear']
Usability,"e framework for multi-physics simuation. sofa::simulation::xml::BaseElement Member List . This is the complete list of members for sofa::simulation::xml::BaseElement, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html:917,clear,clearErrors,917,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html,2,['clear'],['clearErrors']
Usability,"e linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2988,clear,clearSystem,2988,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,2,['clear'],['clearSystem']
Usability,"e result vector appears inside the expression, it must be the first operand. By default this method decompose the computation into multiple vOp calls.; Perform a sequence of linear vector accumulation operation $r_i = sum_j (v_j*f_{ij})$; This is used to compute in on steps operations such as $v = v + a*dt, x = x + v*dt$. Note that if the result vector appears inside the expression, it must be the first operand. By default this method decompose the computation into multiple vOp calls. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vOp(). virtual void sofa::core::behavior::BaseMechanicalState::vOp ; (; const ExecParams * ; params, . VecId ; v, . ConstVecId ; a = ConstVecId::null(), . ConstVecId ; b = ConstVecId::null(), . SReal ; f = 1.0 . ). pure virtual . Initialize an unset vector. ; Compute a linear operation on vectors : v = a + b * f.; This generic operation can be used for many simpler cases : ; v = 0 ; v = a ; v = a + b ; v = b * f . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vRealloc() [1/2]. virtual void sofa::core::behavior::BaseMechanicalState::vRealloc ; (; const ExecParams * ; params, . VecCoordId ; v, . const core::VecIdProperties & ; properties = {} . ). pure virtual . Allocate a new temporary vector. ; Reallocate a new temporary vector ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vRealloc() [2/2]. virtual void sofa::core::behavior::BaseMechanicalState::vRealloc ; (; const ExecParams * ; params, . VecDerivId ; v, . const core::VecIdProperties & ; properties = {} . ). pure virtual . Reallocate a new temporary vector. ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vSize()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:45154,simpl,simpler,45154,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['simpl'],['simpler']
Usability,"e selected. More...;  ; class  OwnershipSPtr;  ; class  Monomial_LD;  A generic monomial with N variables of type Real. A monomial is one term of a polynomial. More...;  ; class  Polynomial_LD;  A generic polynomial with N variables of type Real. A polynomial is a list composed of several monomials. More...;  ; class  RandomGenerator;  ; struct  IsEqual;  ; struct  IsEqual< true >;  ; struct  IsNull;  ; struct  IsNull< true >;  ; struct  ScopedAdvancedTimer;  ; class  TSimpleTimer;  ; struct  CompareIndirect;  ; class  TagList;  ; class  TagFactory;  ; class  TriangleOctreeRoot;  ; class  TriangleOctree;  ; class  TypeInfo;  ; class  Utils;  Contains possibly useful functions, that don't fit anywhere else. More...;  ; class  BaseCreator< sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >;  ; class  SofaViewerFactory;  ; class  SofaViewerCreator;  . Typedefs; typedef sofa::helper::system::thread::ctime_t ctime_t;  ; typedef sofa::helper::system::thread::CTime CTime;  ; typedef const char *(* integer_id_name) ();  ; typedef SReal FemClipsReal;  ; typedef TSimpleTimer SimpleTimer;  . Enumerations; enum  { NDefaultColorMapSchemes = 20; };  . Functions; template<class T > ; WriteAccessor< core::objectmodel::Data< T > > getWriteAccessor (core::objectmodel::Data< T > &data);  ; template<class T > ; ReadAccessor< core::objectmodel::Data< T > > getReadAccessor (const core::objectmodel::Data< T > &data);  ; template<class T > ; WriteOnlyAccessor< core::objectmodel::Data< T > > getWriteOnlyAccessor (core::objectmodel::Data< T > &data);  ;  SOFA_THREAD_SPECIFIC_PTR (std::stack< AdvancedTimer::IdTimer >, curTimerThread);  ;  SOFA_THREAD_SPECIFIC_PTR (type::vector< Record >, curRecordsThread);  ; std::stack< AdvancedTimer::IdTimer > & getCurTimer ();  ; type::vector< Record > * getCurRecords ();  ; void setCurRecords (type::vector< Record > *ptr);  ; void printVal (std::ostream &out, double v);  ; void printNoVal (std::ostream &out);  ; void printVal (std::os",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:4230,Simpl,SimpleTimer,4230,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['Simpl'],['SimpleTimer']
Usability,"e subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:1982,pause,pause,1982,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['pause']
Usability,"e typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) finalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_binormalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_dminsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgeIndicessofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:4859,clear,clearLoggedMessages,4859,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dumpStatesofa::component::setting::StatsSetting; d_exportStatesofa::component::setting::StatsSetting; d_logTimesofa::component::setting::StatsSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpStatesofa::component::setting::StatsSetting; exportStatesofa::component::setting::StatsSetting; f_bboxsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html:1891,clear,clearLoggedMessages,1891,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_gnuplotPathsofa::component::setting::SofaDefaultPathSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html:1911,clear,clearLoggedMessages,1911,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html:1905,clear,clearLoggedMessages,1905,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(objectmodel::BaseContext *group)=0sofa::core::collision::Contactpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:1875,clear,clearLoggedMessages,1875,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Controller()sofa::component::controller::Controllerprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_handleEventTriggersUpdatesofa::component::controller::Controllerprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html:1893,clear,clearLoggedMessages,1893,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_borderssofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawBoxsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionssofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::topology::utility::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html:1959,clear,clearLoggedMessages,1959,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::core::behavior::RotationFinder< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Deriv typedefsofa::core::behavior::RotationFinder< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html:1913,clear,clearLoggedMessages,1913,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) overridesofa::component::haptics::NullForceFeedbackvirtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::NullForceFeedbackvirtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_indicesofa::component::haptics::ForceFeedback; d_messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html:1901,clear,clearLoggedMessages,1901,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz)=0sofa::component::haptics::ForceFeedbackpure virtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &)=0sofa::component::haptics::ForceFeedbackpure virtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_indicesofa::component::haptics::ForceFeedback; d_messageLogCountsofa::core::objectmodel::Basemutable; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:1893,clear,clearLoggedMessages,1893,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz) overridesofa::component::haptics::NullForceFeedbackT< TDataTypes >inlinevirtual; computeForce(const VecCoord &, VecDeriv &) overridesofa::component::haptics::NullForceFeedbackT< TDataTypes >inlinevirtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::NullForceFeedbackT< TDataTypes >inlinevirtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html:1931,clear,clearLoggedMessages,1931,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(const VecCoord &state, VecDeriv &forces)=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:1951,clear,clearLoggedMessages,1951,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:1931,clear,clearLoggedMessages,1931,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:1937,clear,clearLoggedMessages,1937,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< EigenOrderingMethodType >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html:1997,clear,clearLoggedMessages,1997,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::NaturalOrderingMethodvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html:1939,clear,clearLoggedMessages,1939,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation)=0sofa::core::behavior::BaseOrderingMethodpure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:1895,clear,clearLoggedMessages,1895,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::NewmarkImplicitSolverprotected; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_betasofa::component::odesolver::backward::NewmarkImplicitSolver; d_componentStatesofa::core::objectmodel::Base; d_gammasofa::component::odesolver::backward::NewmarkImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::NewmarkImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::NewmarkIm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:1933,clear,clearLoggedMessages,1933,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::VariationalSymplecticSolver; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeHamiltoniansofa::component::odesolver::backward::VariationalSymplecticSolver; d_explicitsofa::component::odesolver::backward::VariationalSymplecticSolver; d_fileNamesofa::component::odesolver::backward::VariationalSymplecticSolver; d_hamiltonianEnergysofa::component::odesolver::backward::VariationalSymplecticSolver; d_messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html:1945,clear,clearLoggedMessages,1945,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_absolute_correction_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_absolute_residual_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_newton_iterationssofa::component::odesolver::backward::StaticSolverprotected; d_relative_correction_tolerance_thresholdsofa::component::odesolver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:1915,clear,clearLoggedMessages,1915,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_ratesofa::component::odesolver::forward::DampVelocitySolver; d_thresholdsofa::component::odesolver::forward::DampVelocitySolver; DampVelocitySolver()sofa::component::odesolver::forward::DampVelocitySolverprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:1925,clear,clearLoggedMessages,1925,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html:1923,clear,clearLoggedMessages,1923,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,3,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_aliassofa::component::sceneutility::makealiascomponent::MakeAliasComponent; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_targetcomponentsofa::component::sceneutility::makealiascomponent::MakeAliasComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:1953,clear,clearLoggedMessages,1953,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_aliassofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_componentnamesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_componentStatesofa::core::objectmodel::Base; d_datanamesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:1969,clear,clearLoggedMessages,1969,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::sceneutility::FileMessageHandlerComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; FileMessageHandlerComponent()sofa::component::sceneutility::FileMessageHandlerComponent; findData(const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html:1931,clear,clearLoggedMessages,1931,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_loadedPluginssofa::simulation::RequiredPlugin; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pluginNamesofa::simulation::RequiredPlugin; d_requireAllsofa::simulation::RequiredPlugin; d_requireOnesofa::simulation::RequiredPlugin; d_stopAfterFirstNameFoundsofa::simulation::RequiredPlugin; d_stopAfterFirstSuffixFoundsofa::simulation::RequiredPlugin; d_suffixMapsofa::simulation::RequiredPlugin; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html:1879,clear,clearLoggedMessages,1879,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,2,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_typesofa::component::sceneutility::MessageHandlerComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html:1923,clear,clearLoggedMessages,1923,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; ElemID typedefsofa::core::topology::Topology; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html:1875,clear,clearLoggedMessages,1875,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html:1901,clear,clearLoggedMessages,1901,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,16,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:1933,clear,clearLoggedMessages,1933,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::RayTraceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html:1949,clear,clearLoggedMessages,1949,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html:1945,clear,clearLoggedMessages,1945,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,3,['clear'],['clearLoggedMessages']
Usability,"e(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsEnd() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsRange() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:13988,clear,clear,13988,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,2,['clear'],['clear']
Usability,"e(const Index cubeIndex, const SReal *baryCoords) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; BarycentricMapperRegularGridTopology(RegularGridTopology *fromTopology, core::topology::BaseMeshTopology *toTopology)sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; CubeData typedefsofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; getTopology()sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >inline; InDeriv typedefsofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; Index typedefsofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; init(const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; isE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology-members.html:1363,clear,clear,1363,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology-members.html,1,['clear'],['clear']
Usability,"e(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGrid()sofa::component::visual::VisualGrid; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::VisualGrid; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::VisualGrid; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSubdivsofa::component::visual::VisualGrid; d_planesofa::component::visual::VisualGrid; d_sizesofa::component::visual::VisualGrid; d_thicknesssofa::component::visual::VisualGrid; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:2511,clear,clearVisual,2511,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['clear'],['clearVisual']
Usability,"e);  ; helper::Creator< DataWidgetFactory, QPoissonRatioWidget > DWClass_Poissonratio (""poissonRatio"", false);  ; RealGUI * gui = nullptr;  ; QApplication * application = nullptr;  ; const char * progname ="""";  ; Creator< DataWidgetFactory, SimpleDataWidget< bool > > DWClass_bool (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< char > > DWClass_char (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned char > > DWClass_uchar (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< int > > DWClass_int (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:21346,Simpl,SimpleDataWidget,21346,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"e-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Protected Attributes; Vec3 vCenter;  ; Vec3 vOrientation;  . Public Member Functions; constexpr RigidDeriv ();  ; constexpr RigidDeriv (type::NoInit);  ; constexpr RigidDeriv (const Vec3 &velCenter, const Vec3 &velOrient);  ; template<typename real2 > ; constexpr RigidDeriv (const RigidDeriv< 3, real2 > &c);  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 6, real2 > &v);  ; template<typename real2 > ; constexpr RigidDeriv (const real2 *ptr);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidDeriv< 3, real2 > &c);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 3, real2 > &v);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 6, real2 > &v);  ; constexpr void operator+= (const RigidDeriv &a);  ; constexpr void operator-= (const RigidDeriv &a);  ; constexpr RigidDeriv< 3, real > operator+ (const RigidDeriv< 3, real > &a) const;  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; constexpr RigidDeriv< 3, real > operator- () const;  ; constexpr RigidDeriv< 3, real > operator- (const RigidDeriv< 3, real > &a) const;  ; constexpr Real operator* (const RigidDeriv< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getVCenter ();  ; constexpr Vec3 & getVOrientation ();  ; constexpr const Vec3 & getVCenter () const;  ; constexpr const Vec3 & getVOrientation () const;  ; constexpr Vec3 & getLinear ();  ; constexpr const Vec3 & getLinear () const;  ; constexpr Vec3 & getAngular ();  ; con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html:1244,clear,clear,1244,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,"e...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseNode(). sofa::core::objectmodel::BaseNode::BaseNode ; (; ). protected . ◆ ~BaseNode(). sofa::core::objectmodel::BaseNode::~BaseNode ; (; ). overrideprotected . Function details. ◆ addChild(). virtual void sofa::core::objectmodel::BaseNode::addChild ; (; BaseNode::SPtr ; node). pure virtual . Add a child node. ; Implemented in sofa::simulation::Node. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseNode::addObject ; (; BaseObject::SPtr ; obj, . TypeOfInsertion ; = TypeOfInsertion::AtEnd . ). pure virtual . Add a generic object. ; Implemented in sofa::simulation::Node. ◆ clearObjectContext(). void sofa::core::objectmodel::BaseNode::clearObjectContext ; (; BaseObject::SPtr ; obj). protected . Reset the context of an object. . ◆ detachFromGraph(). virtual void sofa::core::objectmodel::BaseNode::detachFromGraph ; (; ). pure virtual . Remove the current node from the graph: depending on the type of Node, it can have one or several parents. WarningYou must have a SPtr on the node you detach if you want to keep it or the smart pointer mechanism will remove it ! ; Implemented in sofa::simulation::graph::DAGNode. ◆ findLinkDestClass(). Base* sofa::core::objectmodel::BaseNode::findLinkDestClass ; (; const BaseClass * ; destType, . const std::string & ; path, . const BaseLink * ; link . ). overridepure virtual . Reimplemented from sofa::core::objectmodel::Base.; Implemented in sofa::simulation::Node. ◆ getAnimationLoop(). core::behavior::BaseAnimationLoop * sofa::core::objectmodel::BaseNode::getAnimationLoop ; (; ); const. virtual . Reimplemented in sofa::simulation::Node. ◆ getChildren(). virtual Children sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:12529,clear,clearObjectContext,12529,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['clear'],['clearObjectContext']
Usability,"e...;  ; virtual void drawStep (sofa::core::visual::VisualParams *);  Render the scene. More...;  ; virtual void computeBBoxStep (sofa::core::visual::VisualParams *, SReal *, SReal *, bool);  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html:1779,clear,clearVisual,1779,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"e...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ OffSequenceLoader(). sofa::component::io::mesh::OffSequenceLoader::OffSequenceLoader ; (; ). protected . Function details. ◆ clear(). void sofa::component::io::mesh::OffSequenceLoader::clear ; (; ). ◆ handleEvent(). void sofa::component::io::mesh::OffSequenceLoader::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::io::mesh::OffSequenceLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::OffSequenceLoader::load ; (; const char * ; filename). virtual . ◆ reset(). void sofa::component::io::mesh::OffSequenceLoader::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::io::mesh::OffSequenceLoader::SOFA_CLASS ; (; OffSequenceLoader ; , . MeshOffLoader ;  . ). sofacomponentiomeshOffSequenceLoader; Generated on Mon Nov 11 2024 02:46:09 for SOFA API by 1.9",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:21055,clear,clear,21055,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['clear'],['clear']
Usability,"e::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearKeyVelocities()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:3101,clear,clearIndices,3101,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['clear'],['clearIndices']
Usability,"e::behavior::ProjectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; QuatR typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Real typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; reinit() overridesofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:15650,clear,clear,15650,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['clear'],['clear']
Usability,"e::behavior::StiffnessMatrix * ; ). inlineoverridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ checkMassDensity(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkMassDensity. virtual . ◆ checkTopology(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTopology. protected . ◆ checkTotalMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMass. virtual . ◆ checkTotalMassInit(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMassInit. virtual . ◆ checkVertexMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkVertexMass. virtual . ◆ clear(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::clear. ◆ computeVertexMass(). template<class DataTypes , class GeometricalTypes > . DiagonalMass< DataTypes, GeometricalTypes >::Real sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::computeVertexMass ; (; Real ; density). protected . Compute the vertexMass using input density and return the corresponding full mass. . ◆ doUpdateInternal(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::doUpdateInternal. overridevirtual . Implementation of the internal update. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [1/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::draw ; (; const core::visual::VisualParams * ; ). virtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:37679,clear,clear,37679,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['clear'],['clear']
Usability,"e::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:3519,clear,clearLoggedMessages,3519,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,2,['clear'],['clearLoggedMessages']
Usability,"e::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constrainedPointssofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; d_cornerMovementssofa::component::constraint::projective::PatchTestMovementProjective",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:3095,clear,clearLoggedMessages,3095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_edgesofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_initPointssofa::component::topology::container::dynamic::PointSetTopo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4221,clear,clearLoggedMessages,4221,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:3837,clear,clearLoggedMessages,3837,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,e; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325228,learn,learn-using-sofa,325228,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['learn'],"['learn', 'learn-using-sofa']"
Usability,"e; BarycentricPenalityContact(CollisionModel1 *model1, CollisionModel2 *model2, Intersection *intersectionMethod)sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; contactIndexsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ContactIndexMap type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html:2430,clear,clearLoggedMessages,2430,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeSecondDerivativeArea(const sofa::type::fixed_array< sofa::type::Vec3, 3 > &triangleVertices)sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html:5090,clear,clearLoggedMessages,5090,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e;  . Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; virtual Size getNumberOfElements () const;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5106,simpl,simply,5106,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"eContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::Tetrahedr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4448,clear,clear,4448,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clear']
Usability,"eDataWidget< Vec<4,unsigned int> > > sofa::gui::qt::DWClass_Vec4u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,double> > > sofa::gui::qt::DWClass_Vec6d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,float> > > sofa::gui::qt::DWClass_Vec6f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,int> > > sofa::gui::qt::DWClass_Vec6i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec6u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<6,unsigned int> > > sofa::gui::qt::DWClass_Vec6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec8i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<8,int> > > sofa::gui::qt::DWClass_Vec8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec8u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<8,unsigned int> > > sofa::gui::qt::DWClass_Vec8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA1i. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<int,1> > > > sofa::gui::qt::DWClass_vectorA1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA1u. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<unsigned int,1> > > > sofa::gui::qt::DWClass_vectorA1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA2i. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<int,2> > > > sofa::gui::qt::DWClass_vectorA2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA2u. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<unsigned int,2> > > > sofa::gui::qt::DWClass_vectorA2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_vectorA3d. Creator<DataWidgetFactory, TableDataWidget< sofa::type::vector<fixed_array<double,3> > > > sofa::gui::qt::D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:80786,Simpl,SimpleDataWidget,80786,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"eInfo< sofa::defaulttype::RigidCoord< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html:3507,Simpl,SimpleLayout,3507,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,1,['Simpl'],['SimpleLayout']
Usability,"eInfo< sofa::defaulttype::RigidDeriv< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html:3507,Simpl,SimpleLayout,3507,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,1,['Simpl'],['SimpleLayout']
Usability,"eMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5971,clear,clearRow,5971,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,4,['clear'],['clearRow']
Usability,"eObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_showFactorSizesofa::component::solidmechanics::spring::GearSpringF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:4836,clear,clearLoggedMessages,4836,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"eWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::GraphDataWidget_Linear< T >. ◆ numColumnWidget(). template<class T , class Container = data_widget_container<T>> . virtual unsigned int sofa::gui::qt::SimpleDataWidget< T, Container >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget.; Reimplemented in sofa::gui::qt::TableDataWidget< T, FLAGS >, and sofa::gui::qt::GraphDataWidget< T >. ◆ readFromData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ setReadOnly(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::setReadOnly ; (; bool ; readOnly). inlinevirtual . ◆ writeToData(). template<class T , class Container = data_widget_container<T>> . virtual void sofa::gui::qt::SimpleDataWidget< T, Container >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtSimpleDataWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:5190,Simpl,SimpleDataWidget,5190,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,3,['Simpl'],['SimpleDataWidget']
Usability,"ead::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::CircularQueue. ◆ ~CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::~CircularQueue. Function details. ◆ isEmpty(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isEmpty. ◆ isFull(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isFull. ◆ pop() [1/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . template<class OutputIterator > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; OutputIterator ; out, . unsigned ; maxsize, . bool ; clear = true . ). ◆ pop() [2/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; T & ; item, . bool ; clear = true . ). ◆ push(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::push ; (; const T & ; item). ◆ size(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::size. ◆ skip(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::skip ; (; unsigned ; maxsize, . bool ; clear = true . ). sofahelpersystemthreadCircularQueue; Generated on Mon Nov 11 2024 03:31:03 f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html:2412,clear,clear,2412,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,2,['clear'],['clear']
Usability,"eal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::addToBaseMatrix ; (; BaseMatrix * ; matrix, . SReal ; factor, . Index ; offset . ); const. inline . add this EigenBaseSparseMatrix to a BaseMatrix at the offset and multiplied by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TRe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19493,clear,clear,19493,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clear']
Usability,"eal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >;  ; class  BeamLinearMapping;  ; struct  RigidMappingMatrixHelper;  ; struct  RigidMappingMatrixHelper< 2, Real >;  ; struct  RigidMappingMatrixHelper< 3, Real >;  ; class  CenterOfMassMapping;  ; struct  CenterOfMassMappingOperation;  ; class  CenterOfMassMulti2Mapping;  ; class  CenterOfMassMultiMapping;  ; class  DeformableOnRigidFrameMappingInternalData;  Maps a deformable mechanical state to another deformable mechanical state mapped onto a rigid frame. Inputs: One Vec3 and One Rigid mechanical objects Output: One Vec3 mechanical object. More...;  ; class  DeformableOnRigidFrameMapping;  ; class  IdentityMapping;  ; class  IdentityMultiMapping;  concatanate several entire mechanical states together More...;  ; class  LineSetSkinningMapping;  ; class  Mesh2PointMechanicalMapping;  ; class  Mesh2PointTopologicalMapping;  ; class  SimpleTesselatedHexaTopologicalMapping;  ; class  SimpleTesselatedTetraMechanicalMapping;  ; class  SimpleTesselatedTetraTopologicalMapping;  ; class  SkinningMapping;  ; class  SubsetMappingInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SubsetMapping;  Compute a subset of input points. More...;  ; class  SubsetMultiMapping;  ; class  TubularMapping;  ; class  VoidMapping;  . Typedefs; typedef sofa::core::topology::BaseMeshTopology::Edge Edge;  ; typedef sofa::core::topology::BaseMeshTopology::Hexahedron Hexahedron;  ; typedef sofa::core::topology::BaseMeshTopology::Triangle Triangle;  ; typedef sofa::core::topology::BaseMeshTopology::Quad Quad;  ; typedef sofa::core::topology::BaseMeshTopology::Tetrahedron Tetrahedron;  ; typedef sofa::core::topology::BaseMeshTopology::Tetra Tetra;  ; typedef sofa::core::topology::BaseMeshTopology::Hexa Hexa;  ; typedef sofa::core::topology::BaseMeshTopology::SeqLines SeqLines;  ; typedef sofa::core::topology::BaseMeshTopology::SeqEdges SeqEdges;  ; typedef",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1mapping_1_1linear.html:2481,Simpl,SimpleTesselatedHexaTopologicalMapping,2481,api/master/sofa/html/namespacesofa_1_1component_1_1mapping_1_1linear.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1mapping_1_1linear.html,3,['Simpl'],"['SimpleTesselatedHexaTopologicalMapping', 'SimpleTesselatedTetraMechanicalMapping', 'SimpleTesselatedTetraTopologicalMapping']"
Usability,"eal dt, core::MultiVecDerivId result=core::VecDerivId::velocity())sofa::simulation::common::MechanicalOperations; baseVector2MultiVector(const linearalgebra::BaseVector *src, core::MultiVecId dest, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; bFactsofa::simulation::common::MechanicalOperations; computeAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactDf(core::MultiVecDerivId df)sofa::simulation::common::MechanicalOperations; computeContactForce(core::MultiVecDerivId result)sofa::simulation::common::MechanicalOperations; computeDf(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeDfV(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeEnergy(SReal &kineticEnergy, SReal &potentialEnergy)sofa::simulation::common::MechanicalOperations; computeForce(core::MultiVecDerivId result, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeForce(SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; cparamssofa::simulation::common::MechanicalOperations; ctxsofa::simulation::common::MechanicalOperations; executeVisitorsofa::simulation::common::MechanicalOperationsprotected; getMatrixDimension(sofa::Size *const, sofa::Size *const, sofa::core::behavior::MultiMatrixAccessor *matrix=nullptr)sofa::simulation::common::MechanicalOperations; getMatrixDimension(sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperationsinline; hasShownMissingLinearSolverMapsofa::simulation::common::MechanicalOperationspro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:1991,clear,clear,1991,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,2,['clear'],['clear']
Usability,"eal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html:3136,clear,clearLoggedMessages,3136,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,2,['clear'],['clearLoggedMessages']
Usability,"earalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49070,clear,clear,49070,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,4,['clear'],"['clear', 'clearColBlock']"
Usability,"earalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19736,clear,clear,19736,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clear']
Usability,"earalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index inte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5096,clear,clear,5096,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clear']
Usability,"earalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalPtr) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:6156,clear,clearRowsCols,6156,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,2,['clear'],['clearRowsCols']
Usability,"earalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6554,clear,clearCols,6554,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,2,['clear'],['clearCols']
Usability,"earalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; block(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; CompressedRowSparseMatrixG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:4020,clear,clearColBlock,4020,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,2,['clear'],['clearColBlock']
Usability,"earsystem::LocalMatrixMaps< c, Real > Struct Template Reference . #include <MatrixLinearSystem.h>; Detailed Description; template<Contribution c, class Real>; struct sofa::component::linearsystem::LocalMatrixMaps< c, Real >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:1272,clear,clear,1272,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,2,['clear'],['clear']
Usability,"ebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t LC, typename T = SReal> . SReal sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ invert(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::invert ; (; ). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19976,clear,clearRowCol,19976,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],['clearRowCol']
Usability,"ec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, SpatialVector &t);  read from an input stream More...;  . Attribute details. ◆ freeVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::freeVec { type::NOINIT }. ◆ lineVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::lineVec { type::NOINIT }. Constructor details. ◆ SpatialVector() [1/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; ). default . ◆ SpatialVector() [2/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; const Vec & ; l, . const Vec & ; f . ). Parameters. lThe line vector: angular velocity, or force ; fThe free vector: linear velocity, or torque . Function details. ◆ clear(). template<class TReal > . void sofa::type::SpatialVector< TReal >::clear. ◆ cross(). template<class TReal > . SpatialVector< TReal > sofa::type::SpatialVector< TReal >::cross ; (; const SpatialVector< TReal > & ; v); const. Spatial cross product. . ◆ getAngularVelocity() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ). inline . If the SpatialVector models a spatial velocity, then the angular velocity is the lineVec. Otherwise, the SpatialVector models a spatial force, and this method returns a force. . ◆ getAngularVelocity() [2/2]. template<class TReal > . const Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ); const. inline . ◆ getForce() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getForce ; (; ). inline . If the SpatialVector models a spatial force, then the torque is the lineVec. Otherwise, the SpatialVector models a spatial velocity, and this method returns an angular velocity. . ◆ getForce() [2/2]. template<class TReal > . const Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html:2794,clear,clear,2794,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,2,['clear'],['clear']
Usability,"ec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Crea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22383,Simpl,SimpleDataWidget,22383,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22797,Simpl,SimpleDataWidget,22797,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23211,Simpl,SimpleDataWidget,23211,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23625,Simpl,SimpleDataWidget,23625,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,eckTopology(). bool sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::Hexahed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49142,clear,clearEdgesInHexahedron,49142,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearEdgesInHexahedron']
Usability,"econstexprnoexcept . ◆ MatSym() [2/5]. template<sofa::Size D, class real = SReal> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; NoInit ; ). inlineexplicitconstexprnoexcept . ◆ MatSym() [3/5]. template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const real & ; v1, . const real & ; v2, . const real & ; v3, . const real & ; v4, . const real & ; v5, . const real & ; v6 . ). inlineconstexpr . Constructor from 6 elements. . ◆ MatSym() [4/5]. template<sofa::Size D, class real = SReal> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const sofa::Size ; sizeM, . const real & ; v . ). inlineconstexpr . Constructor from an element. . ◆ MatSym() [5/5]. template<sofa::Size D, class real = SReal> . template<typename real2 > . sofa::type::MatSym< D, real >::MatSym ; (; const MatSym< D, real2 > & ; m). inlineexplicit . Constructor from another matrix. . Function details. ◆ clear(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::clear ; (; ). inline . Sets each element to 0. . ◆ fill(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::fill ; (; real ; r). inline . Sets each element to r. . ◆ getVoigt(). template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> . Vec<NumberStoredValues, real> sofa::type::MatSym< D, real >::getVoigt ; (; ); const. inline . convert to Voigt notation (supported only for D == 2 and D == 3) . ◆ identity(). template<sofa::Size D, class real = SReal> . constexpr void sofa::type::MatSym< D, real >::identity ; (; ). inlineconstexpr . Set matrix to identity. . ◆ invert(). template<sofa::Size D, class real = SReal> . bool sofa::type::MatSym< D, real >::invert ; (; const MatSym< D, real > & ; m). inline . Invert matrix m. . ◆ Mat2Sym(). template<sofa::Size D, class real = SReal> . static void sofa::type::MatSy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:16116,clear,clear,16116,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,2,['clear'],['clear']
Usability,"ect()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; datasofa::component::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html:3108,clear,clearLoggedMessages,3108,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ect()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; beginIntegration(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; buildIdentityBlocksInJacobian(const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0sofa::core::behavior::BaseMechanicalStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compareVec(ConstVecId v, std::istream &in)=0sofa::core::behavior::BaseMechanicalStatepure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; constraintBlocks(const std::list< unsigned int > &) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; copyFromBaseVector(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseMatrix(linearalgebra::BaseMatrix *dest, ConstMatrixDerivId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBuffer(SReal *dst, ConstVecId src, unsigned int n) const =0sofa::core::behav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:3675,clear,clearLoggedMessages,3675,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ect. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  . Protected Member Functions;  MechanicalObject ();  ; virtual ~MechanicalObject ();  ; template<core::VecType vtype> ; void vAvailImpl (core::TVecId< vtype, core::V_WRITE > &v, sofa::type::vector< Data< core::StateVecType_t< DataTypes, vtype > >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:28788,simpl,simplified,28788,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['simpl'],['simplified']
Usability,"ectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:3740,clear,clear,3740,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['clear'],['clear']
Usability,"ectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSofaData() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >; dataSizesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:2050,clear,clearLoggedMessages,2050,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSofaData()=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; dataSizesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:2048,clear,clearLoggedMessages,2048,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; ContactIdentifier()sofa::component::collision::response::contact::ContactIdentifier; contactssofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >prote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:2300,clear,clearLoggedMessages,2300,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Contact typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; contactssofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Coord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< DataTypes >; DataTypes1 typedefsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:4499,clear,clearLoggedMessages,4499,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >inlinevirtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeEdgeDiffusionCoefficient()sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >protected; Coord typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_1DDiffusionsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constantDiffusionCoefficientsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_drawConducsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_messageLogCountsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:4772,clear,clearLoggedMessages,4772,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< true >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeAccFromMapping(const MechanicalParams *, const type::vector< OutDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &)sofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMap",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:7284,clear,clearLoggedMessages,7284,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:3349,clear,clearLoggedMessages,3349,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ector >inlinevirtual; associateLocalMatrixToComponents(const core::MechanicalParams *) overridesofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >inlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinesta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html:2530,clear,clearLoggedMessages,2530,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ector2d (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< float > > > > DWLClass_mapdequef (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< double > > > > DWLClass_mapdequed (""graph_linear"", true);  ; Creator< DataWidgetFactory, GraphDataWidget_Linear< std::map< std::string, std::deque< Vec2d > > > > DWLClass_mapdeque2d (""graph_linear"", true);  ; helper::Creator< DataWidgetFactory, QPoissonRatioWidget > DWClass_Poissonratio (""poissonRatio"", false);  ; RealGUI * gui = nullptr;  ; QApplication * application = nullptr;  ; const char * progname ="""";  ; Creator< DataWidgetFactory, SimpleDataWidget< bool > > DWClass_bool (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< char > > DWClass_char (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned char > > DWClass_uchar (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< int > > DWClass_int (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:20875,Simpl,SimpleDataWidget,20875,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSimplicialLDLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSimplicialLLT< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseLU< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API EigenSparseQR< SReal >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API PrecomputedLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SparseLDLSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< FullMatrix< SReal >, FullVector< SReal > >;  ; template class SOFA_COMPONENT_LINEARSOLVER_DIRECT_API SVDLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal > >;  . Typedef Documentation. ◆ SimplicialLDLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLDLTTraits = typedef DeprecatedAndRemoved. ◆ SimplicialLLTTraits. template<class Real > . using sofa::component::linearsolver::direct::SimplicialLLTTraits = typedef DeprecatedAndRemoved. ◆ SparseLUTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseLUTraits = typedef DeprecatedAndRemoved. ◆ SparseQRTraits. template<class Real > . using sofa::component::linearsolver::direct::SparseQRTraits = typedef DeprecatedAndRemoved. Function Documentation. ◆ compareMatrixShape(). bool sofa::component::linearsolver::direct::compareMatrixShape ; (; int ; s_M, . int * ; M_colptr, . int * ; M_rowind, . int ; s_P, . int * ; P_colptr, . int * ; P_rowind . ). inline . ◆ CSPARSE_numeric(). template<class Real > . void sofa::component::linearsolver::direct::CSPARSE_numeric ; (; int ; n, . int * ; M_colptr, . int * ; M_rowind, . Real * ; M_values, . int * ; colptr, . int * ; rowind, . Real * ; values, . Real * ; D, . int * ; perm, . int * ; invperm, . int * ; Parent, . i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html:4735,Simpl,SimplicialLDLTTraits,4735,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1direct.html,1,['Simpl'],['SimplicialLDLTTraits']
Usability,"ectorA8u. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<unsigned int,8> > > > sofa::gui::qt::DWClass_stdvectorA8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_string. Creator<DataWidgetFactory, SimpleDataWidget<std::string> > sofa::gui::qt::DWClass_string(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_TagSet. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > sofa::gui::qt::DWClass_TagSet(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Tetrahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > sofa::gui::qt::DWClass_Vec1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,unsigned int> > > sofa::gui::qt::DWClass_Vec1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,double> > > sofa::gui::qt::DWClass_Vec2d(""default"", true)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:77106,Simpl,SimpleDataWidget,77106,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"ectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_infilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outfilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_periodsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html:4934,clear,clearLoggedMessages,4934,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::ValuesFromPositions< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html:2917,clear,clearLoggedMessages,2917,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ed by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ groups. sofa::type::vector<core::objectmodel::BaseContext::SPtr> sofa::core::collision::CollisionGroupManager::groups. protected . integration groups . ◆ storedGroups. std::map<Instance,sofa::type::vector<core::objectmodel::BaseContext::SPtr> > sofa::core::collision::CollisionGroupManager::storedGroups. protected . Constructor details. ◆ ~CollisionGroupManager(). sofa::core::collision::CollisionGroupManager::~CollisionGroupManager ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ changeInstance(). void sofa::core::collision::CollisionGroupManager::changeInstance ; (; Instance ; inst). inlineoverrideprotectedvirtual . Implements sofa::core::collision::CollisionAlgorithm. ◆ clearGroups(). virtual void sofa::core::collision::CollisionGroupManager::clearGroups ; (; objectmodel::BaseContext * ; scene). pure virtual . Clear the integration groups. . ◆ createGroups(). virtual void sofa::core::collision::CollisionGroupManager::createGroups ; (; objectmodel::BaseContext * ; scene, . const sofa::type::vector< Contact::SPtr > & ; contacts . ). pure virtual . Create the integration groups. . ◆ getGroups(). virtual const sofa::type::vector<objectmodel::BaseContext::SPtr>& sofa::core::collision::CollisionGroupManager::getGroups ; (; ). inlinevirtual . Get the integration groups. . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::collision::CollisionGroupManager::SOFA_ABSTRACT_CLASS ; (; CollisionGroupManager ; , . CollisionAlgorithm ;  . ). sofacorecollisionCollisionGroupManager; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:15253,clear,clearGroups,15253,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,2,['clear'],['clearGroups']
Usability,"ed by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19725,clear,clearCol,19725,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearCol']
Usability,"ed from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:2106,clear,clear,2106,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,1,['clear'],['clear']
Usability,"ed from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:6929,clear,clearIndices,6929,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"ed members. BaseType typedefsofa::defaulttype::SetTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; byteSize()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< TDataType >; DataType typedefsofa::defaulttype::SetTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::SetTypeInfo< TDataType >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< TDataType >; size()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Text enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::SetTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< TDataType >. Generated ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html:1591,Simpl,SimpleCopy,1591,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"ed object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3907,simpl,simpleapi,3907,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['simpl'],['simpleapi']
Usability,"ed; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_infilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outfilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_periodsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html:4830,clear,clear,4830,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,1,['clear'],['clear']
Usability,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth) overridesofa::component::collision::geometry::RayCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactssofa::component::collision::geometry::RayCollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:2858,clear,clearLoggedMessages,2858,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:2701,clear,clearLoggedMessages,2701,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0)=0sofa::core::CollisionModelpure virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html:2420,clear,clearLoggedMessages,2420,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"edRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col i and line i values of will be set to zero using default constructor . ◆ colBSize(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::colBSize ; (; ); const. inline . Returnsthe number of col blocks . ◆ compress(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::compress ; (; ). inline . ◆ compressBtemp(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::compressBtemp ; (; ). inlineprotected . Clear matrix and compute new triplet's arrays by combining old ones and btemp(VecIndexedBlock) array. . ◆ compressCSR(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::compressCSR ; (; ). inlineprotected . ◆ countEmptyBlocks(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . std::size_t sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::countEmptyBlocks ; (; ); const. inline . ◆ deleteRow(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::deleteRow ; (; Index ; rowId). inlineprotected . Method to easy delete row given position in rowIndex. ; Parameters. RowIdposition on line in rowIndex . ◆ fullRows(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::fullRows ; (; ). inline . Make sure all rows have an entry ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:23506,Clear,Clear,23506,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['Clear'],['Clear']
Usability,"edron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > sofa::gui::qt::DWClass_Vec1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,unsigned int> > > sofa::gui::qt::DWClass_Vec1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,double> > > sofa::gui::qt::DWClass_Vec2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,float> > > sofa::gui::qt::DWClass_Vec2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,int> > > sofa::gui::qt::DWClass_Vec2i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec2u. Creator<DataWidgetFactory, SimpleDataWidget< Vec<2,unsigned int> > > sofa::gui::qt::DWClass_Vec2u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec3d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<3,double> > > sofa::gui::qt::DWClass_Vec3d(""defau",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:77738,Simpl,SimpleDataWidget,77738,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"eedback Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::haptics::NullForceFeedback Class Reference . #include <NullForceFeedback.h>; Null force feedback for haptic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedback:. [legend]; Detailed Description; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (NullForceFeedback, ForceFeedback);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:1378,feedback,feedback,1378,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,1,['feedback'],['feedback']
Usability,"eeds to be multiplied to each matrix entry. ; offsetStarting index of the submatrix to fill in the global matrix. . Reimplemented from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:25030,clear,clearKeyForces,25030,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearKeyForces']
Usability,eer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA – Hugo. /7; ; SOFA – Hugo. /8; ; SOFA – Hugo. /9; ; SOFA – Hugo. SOFA – Hugo. /binaries-for-macos-now-available; ; SOFA – Binaries for MacOS now available!. /binaries-of-sofa; ; SOFA – Beta version of SOFA binaries. /booth-at-i-novia-2016; ; SOFA – Booth at I-Novia 2016. /caeml-a-community-first-cae-model-sh,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:1297,feedback,feedback,1297,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],['feedback']
Usability,"efaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; size()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Text enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValidInfo enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ValueTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; ZeroConstructor enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html:1798,Simpl,SimpleCopy,1798,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,4,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"efaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; size()sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; ZeroConstructor enum valuesofa::defaulttype::Inc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html:2561,Simpl,SimpleCopy,2561,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,1,['Simpl'],['SimpleCopy']
Usability,"efaulttype::RigidMass< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(const RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; Size enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; size()sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; size(const DataType &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Text enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValidInfo enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValueType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ValueTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; ZeroConstructor enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html:2131,Simpl,SimpleCopy,2131,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"efsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildMassMatrix(sofa::core::behavior::MassMatrixAccumulator *matrices)sofa::core::behavior::BaseMassvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::Mass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::core::behavior::Mass< DataTypes >; DataVecDeriv typedefsofa::core::behavior::Mass< DataTypes >; Deriv typedefsofa::core::behavior::Mass< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html:5650,clear,clearLoggedMessages,5650,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"efsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Text enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValidInfo enum valuesofa::defaulttype::BoundingBoxTypeInfo; ValueType typedefsofa::defaulttype::BoundingBoxTypeInfo; ZeroConstructor enum valuesofa::defaulttype::BoundingBoxTypeInfo.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html:1734,Simpl,SimpleCopy,1734,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"egend]. Classes; class  Block;  . Public Member Functions;  BlockVector ();  ;  BlockVector (Index n);  ; virtual ~BlockVector ();  ; const Block & sub (Index i, Index) const;  ; Block & sub (Index i, Index);  ; const Block & asub (Index bi, Index) const;  ; Block & asub (Index bi, Index);  ;  Public Member Functions inherited from sofa::linearalgebra::FullVector< T >;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVector< Real > &a);  v -= a More...;  ; void eq (const FullVector< Real > &a, Real f);  v = a*f More...;  ; void eq (const FullVector< Real > &a, const FullVector< Real > &b, Real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html:1368,clear,clear,1368,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,2,['clear'],['clear']
Usability,"ehavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_animationSpeedsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_skeletonBonessofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_skeletonJointssofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:3323,clear,clearLoggedMessages,3323,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ehavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constraintssofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; Coord typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintssofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; DataTypes typedefsofa::component::constraint::pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:3036,clear,clearLoggedMessages,3036,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,eimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ crea,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41342,clear,clearBorderElementLists,41342,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearBorderElementLists']
Usability,"el::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::ContactManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContactManager()sofa::core::collision::ContactManagerinlineprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createContacts(const DetectionOutputMap &outputs)=0sofa::core::collision::ContactManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DetectionOutputMap typedefsofa::core::collision::ContactManager; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:1988,clear,clearLoggedMessages,1988,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability,"el::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess()sofa::component::topology::container::grid::GridTopologyinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::log",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:3770,clear,clear,3770,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,3,['clear'],['clear']
Usability,"el::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html:5619,clear,clearLoggedMessages,5619,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"el::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::PlaneROI< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlane(unsigned int planeIndex)sofa::component::engine::select::PlaneROI< DataTypes >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::PlaneROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html:2949,clear,clearLoggedMessages,2949,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"el::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; createTrianglesAroundEdgeArray()sofa::component::topology::container::dynamic::TriangleS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4902,clear,clearTrianglesAroundVertex,4902,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundVertex']
Usability,"el::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::haptics::LCPForceFeedback< TDataTypes >inlinestatic; sofa::component::haptics::MechanicalStateForceFeedback::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeForce(const VecCoord &state, VecDeriv &forces) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeForce(SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz)sofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeForce(SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz)sofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::LCPForce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:2232,clear,clearLoggedMessages,2232,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"elinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3154,clear,clearVisual,3154,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,2,['clear'],['clearVisual']
Usability,"em::elastic::FastTetrahedralCorotationalForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeQRRotation(Mat3x3 &r, const Coord *dp)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protectedstatic; Coord typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const core::topology::BaseMeshTopology::Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html:5611,clear,clearLoggedMessages,5611,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"emove all lights of the LightManager. More...;  ; void restoreDefaultLight (core::visual::VisualParams *vparams);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:4659,clear,clearVisual,4659,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"emoved once the deprecated API applyConstraint is removed . Public Attributes; BaseProjectiveConstraintSet * component { nullptr };  ; sofa::core::behavior::ZeroDirichletCondition * zeroDirichletCondition { nullptr };  . Public Member Functions; Index rowSize () const override;  Number of rows. More...;  ; Index colSize () const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:1529,clear,clearRowCol,1529,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowCol']
Usability,"eneric< TBlock, TPolicy >::rowBSize ; (; ); const. inline . Returnsthe number of row blocks . ◆ setBlock() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::setBlock ; (; Index ; i, . Index ; j, . const Block & ; v . ). inline . ◆ setBlock() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::setBlock ; (; Index ; i, . Index ; j, . Index & ; rowId, . Index & ; colId, . const Block & ; v . ). inline . ◆ shiftIndices(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::shiftIndices ; (; Index ; base). inline . Add the given base to all indices. Use 1 to convert do Fortran 1-based notation. Note that the matrix will no longer be valid from the point of view of C/C++ codes. You need to call again with -1 as base to undo it. . ◆ sortedFind() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::sortedFind ; (; const VecIndex & ; v, . Index ; val, . Index & ; result . ). inlinestatic . ◆ sortedFind() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::sortedFind ; (; const VecIndex & ; v, . Range ; in, . Index ; val, . Index & ; result . ). inlinestatic . ◆ swap(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::swap ; (; Matrix & ; m). inline . ◆ transposeFullRows(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename TBlock2 , typename TPolicy2 > . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::transposeFullRows ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:31954,undo,undo,31954,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['undo'],['undo']
Usability,"ent to each vertex). More...;  ; const sofa::type::vector< HexahedraAroundEdge > & getHexahedraAroundEdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();  Returns the HexahedraAroundQuad array (i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool hasHexahedra () const;  ; bool hasEdgesInHexahedron () const;  ; bool hasQuadsInHexahedron () const;  ; bool hasHexahedraAroundVertex () const;  ; bool hasHexahedraAroundEdge () const;  ; bool hasHexahedraAroundQuad () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; const SeqHexahedra & getHexahedra () override;  Get the array of hexahedra. More...;  ; const Hexahedron getHexahedron (HexaID i) override;  Get a hexahedron from its index. More...;  ; virtual unsigned int getLocalIndexFromBinaryIndex (const HexahedronBinaryIndex bi) const;  Get the local hexahedron index (0<i<8) from its 3 binary indices. More...;  ; virtual HexahedronBinaryIndex getBinaryIndexFromLocalIndex (const unsigned int li) const;  Get the binary index (array of 3 binary values) from its local index (0<li<8) More...;  ; HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8) override;  Get the index of a hexahedron from the indices of its vertices. More...;  ; const EdgesInHexahedron & getEdgesInHexahedron (HexaID id) override;  Get the 12 ed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:7444,clear,clear,7444,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,1,['clear'],['clear']
Usability,"ent::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; BarycentricMapperTetrahedronSetTopologyRigid(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; d_mapsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >protected; d_mapOrientsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >protected; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; InDeriv typedefsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; Index typedefsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; Inherit typedefsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; init(c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid-members.html:1967,clear,clear,1967,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid-members.html,1,['clear'],['clear']
Usability,ented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50525,clear,clearEdgesInTetrahedron,50525,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearEdgesInTetrahedron']
Usability,"envector of a matrix. . Protected Attributes; VectorEigen eigenVector;  the data More...;  . Public Member Functions; VectorEigen & getVectorEigen ();  ; const VectorEigen & getVectorEigen () const;  ;  EigenVector (Index nbRow=0);  ; Index size () const override;  Number of elements. More...;  ; void resize (Index nbRow) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; void resizeBlocks (Index nbBlocks);  Resize the matrix without preserving the data (the matrix is set to zero), with the size given in number of blocks. More...;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void setBlock (Index i, const Block &v);  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; void clear (Index i) override;  Reset the value of element i to 0. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; const std::string Name ();  ;  Public Member Functions inherited from sofa::linearalgebra::BaseVector; virtual ~BaseVector ();  ; virtual const float * elements (Index i0, Index n, float *src) const;  Get the values of n elements, starting at element i0, into given float buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const double * elements (Index i0, Index n, double *src) const;  Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const int * elements (Index i0, Index n, int *src) const;  Get the values of n elements, starting at element i0, into given int buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual void set (Index i0, Index n, const float *src);  Write the values of n float elements, starting at element ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:1640,clear,clear,1640,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,2,['clear'],['clear']
Usability,"eps;  ; std::map< AdvancedTimer::IdVal, ValData > valData;  ; type::vector< AdvancedTimer::IdVal > vals;  . Public Member Functions;  TimerData ();  ; void init (AdvancedTimer::IdTimer id);  ; void clear ();  ; void process ();  ; void print ();  ; void print (std::ostream &result);  ; json getJson (std::string stepNumber);  ; json getLightJson (std::string stepNumber);  ; json createJSONArray (int s, json jsonObject, StepData &data);  . Attribute details. ◆ defaultInterval. int sofa::helper::TimerData::defaultInterval. ◆ id. AdvancedTimer::IdTimer sofa::helper::TimerData::id. ◆ interval. int sofa::helper::TimerData::interval. ◆ nbIter. int sofa::helper::TimerData::nbIter. ◆ records. type::vector<Record> sofa::helper::TimerData::records. ◆ stepData. std::map<AdvancedTimer::IdStep, StepData> sofa::helper::TimerData::stepData. ◆ steps. type::vector<AdvancedTimer::IdStep> sofa::helper::TimerData::steps. ◆ timerOutputType. AdvancedTimer::outputType sofa::helper::TimerData::timerOutputType. ◆ valData. std::map<AdvancedTimer::IdVal, ValData> sofa::helper::TimerData::valData. ◆ vals. type::vector<AdvancedTimer::IdVal> sofa::helper::TimerData::vals. Constructor details. ◆ TimerData(). sofa::helper::TimerData::TimerData ; (; ). inline . Function details. ◆ clear(). void sofa::helper::TimerData::clear ; (; ). ◆ createJSONArray(). json sofa::helper::TimerData::createJSONArray ; (; int ; s, . json ; jsonObject, . StepData & ; data . ). ◆ getJson(). json sofa::helper::TimerData::getJson ; (; std::string ; stepNumber). ◆ getLightJson(). json sofa::helper::TimerData::getLightJson ; (; std::string ; stepNumber). ◆ init(). void sofa::helper::TimerData::init ; (; AdvancedTimer::IdTimer ; id). inline . ◆ print() [1/2]. void sofa::helper::TimerData::print ; (; ). ◆ print() [2/2]. void sofa::helper::TimerData::print ; (; std::ostream & ; result). ◆ process(). void sofa::helper::TimerData::process ; (; ). sofahelperTimerData; Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html:1830,clear,clear,1830,api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html,4,['clear'],['clear']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::Mes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:4906,clear,clearLoggedMessages,4906,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:4806,clear,clearLoggedMessages,4806,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:4909,clear,clearLoggedMessages,4909,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:4943,clear,clearLoggedMessages,4943,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['clear'],['clearLoggedMessages']
Usability,"er)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5737,clear,clear,5737,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,2,['clear'],['clear']
Usability,"er::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5484,clear,clearTetrahedraAroundVertex,5484,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedraAroundVertex']
Usability,"erer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – Visco-Elasticity. /x-ray-rendering; ; SOFA – X-Ray Rendering. /xxl-robot; ; SOFA – XXL Robot. SOFA – Plugins. /publications; . /add-a-publication-with-hal; ; SOFA – Add a publication with HAL. /feed; . 	Comments on: Publications	. SOFA – Publications. /submit; ; SOFA – Submit your asset. comments; . /feed; . 	Comments for SOFA	. community; . /feedback; ; SOFA – Feedback Form. /forum; . /feed; ; SOFA » All Posts. /reply; . /15772; ; SOFA - Reply To: CGAL Configuration. /3279; ; SOFA - Reply To: [SOLVED] Obj Files, Msh Files. /section; . /announcements-infos; . /feed; ; SOFA » All Posts. /page; . /2; ; SOFA - Forum: Announcements / Infos. /3; ; SOFA - Forum: Announcements / Infos. /4; ; SOFA - Forum: Announcements / Infos. /5; ; SOFA - Forum: Announcements / Infos. SOFA - Forum: Announcements / Infos. /sofa; . /building-sofa; . /feed; ; SOFA » All Posts. /page; . /10; ; SOFA - Forum: Building SOFA. /11; ; SOFA - Forum: Building SOFA. /12; ; SOFA - Forum: Building SOFA. /13; ; SOFA - Forum: Building SOFA. /2; ; SOFA - Forum: Building SOFA. /3; ; SOFA - Forum: Building SOFA. /4; ; SOFA - Forum: Building SOFA. /5; ; SOFA - Forum: Building SOFA. /6; ; SOFA - Forum: Building SOFA. /7; ; SOFA - Forum: Building SOFA. /8; ; SOFA - Forum: Building SOFA. /9; ; SOFA - Forum: Building SOFA. SOFA - Forum: Building SOFA. /feed; ; SOFA » All Posts. /gettin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:247597,feedback,feedback,247597,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"erridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:2820,clear,clearLoggedMessages,2820,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,erridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::crea,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40594,clear,clearQuadsAroundEdge,40594,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundEdge']
Usability,erridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::to,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50787,clear,clearTetrahedra,50787,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedra']
Usability,"ers. addComponent(const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true)sofa::gui::qt::QDisplayPropertyWidget; addData(const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QDisplayPropertyWidget; addDescriptionItem(QTreeWidgetItem *groupItem, const QString &name, const QString &description)sofa::gui::qt::QDisplayPropertyWidgetprotected; addGroup(const QString &component, const QString &group)sofa::gui::qt::QDisplayPropertyWidget; addLink(const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link)sofa::gui::qt::QDisplayPropertyWidget; clear()sofa::gui::qt::QDisplayPropertyWidget; clearAll()sofa::gui::qt::QDisplayPropertyWidget; clearComponentOutput()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; clearComponentWarning()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; DefaultDataGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultInfoGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLinkGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLogGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; findComponent(const QString &component) constsofa::gui::qt::QDisplayPropertyWidgetprotected; findGroup(const QString &component, const QString &group) constsofa::gui::qt::QDisplayPropertyWidgetprotected; GraphHistoryManager classsofa::gui::qt::QDisplayPropertyWidgetfriend; LinkComponent classsofa::gui::qt::QDisplayPropertyWidgetfriend; QDisplayPropertyWidget(const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr)sofa::gui::qt::QDisplayPropertyWidget; setConsoleOutput(const QString &component, const QString &group, sofa::core::objectmodel::Base *base)sofa::gui::qt::QDisplayPropertyWidget; setDescription(const QString &component, const QString &group, sofa::core::objectmodel::Base *base)sofa::gui::qt::QDisplayPropertyWidget; ~QDisplayPropertyWidget() overridesofa::gui::qt::QDisplayPropertyWidget. Gen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html:367,clear,clear,367,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html,10,['clear'],"['clear', 'clearAll', 'clearComponentOutput', 'clearComponentWarning']"
Usability,ervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContain,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4693,clear,clearEdgesInQuad,4693,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdgesInQuad']
Usability,"es from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [6/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<class TReal > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ add() [8/8]. template<class Real > . void sofa::linearalgebra::RotationMatrix< Real >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). template<class Real > . void sofa::linearalgebra::RotationMatrix< Real >::clear. overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<class Real > . sofa::SignedIndex sofa::linearalgebra::RotationMatrix< Real >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::RotationMatrix< Real >::element ; (; Index ; i, . sofa::SignedIndex ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getVector(). template<class Real > . type::vector< Real > & sofa::linearalgebra::RotationMatrix< Real >::getVector. virtual . ◆ Name() [1/5]. const char * sofa::linearalgebra::RotationMatrix< float >::Name ; (; ). ◆ Name() [2/5]. const char * sofa::linearalgebra::RotationMatrix< double >::Name ; (; ). ◆ Name() [3/5]. template<class TReal > . template SOFA_LINEARALGEBRA_API const ch",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:17715,clear,clear,17715,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,2,['clear'],['clear']
Usability,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:7460,simpl,simple,7460,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,2,['simpl'],['simple']
Usability,"es. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19856,clear,clear,19856,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clear']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3451,clear,clearRowCol,3451,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearRowCol']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the result in vector result. More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5802,clear,clearRowCol,5802,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,2,['clear'],['clearRowCol']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the resu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3913,clear,clearRowCol,3913,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearRowCol']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15958,clear,clearRowCol,15958,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clearRowCol']
Usability,"escription; This class exists only for compatibility reasons. To be removed once the deprecated API addKToMatrix and addMToMatrix is removed . Public Attributes; std::map< sofa::type::fixed_array< const sofa::core::behavior::BaseMechanicalState *, 2 >, std::shared_ptr< linearalgebra::BaseMatrix > > matrixMap;  . Public Member Functions; MatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; InteractionMatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const override;  ; void setMatrix (sofa::core::behavior::BaseMechanicalState *mstate1, sofa::core::behavior::BaseMechanicalState *mstate2, std::shared_ptr< linearalgebra::BaseMatrix > matrix);  ;  Public Member Functions inherited from sofa::core::behavior::DefaultMultiMatrixAccessor;  DefaultMultiMatrixAccessor ();  ;  ~DefaultMultiMatrixAccessor () override;  ; virtual void clear ();  ; virtual void setGlobalMatrix (linearalgebra::BaseMatrix *matrix);  ; void addMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void addMappedMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; virtual void computeGlobalMatrix ();  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::DefaultMultiMatrixAccessor; bool m_doPrintInfo {false};  ; linearalgebra::BaseMatrix * globalMatrix {nullptr};  ; Index globalDim {0};  ; std::map< const sofa::core::behavior::BaseMechanicalState *, unsigned int > realState",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html:1367,clear,clear,1367,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html,1,['clear'],['clear']
Usability,"essedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; static bool sortedFind (const VecIndex &v, Range in, Index val, Index &result);  ; static bool sortedFind (const VecIndex &v, Index val, Index &result);  ; static const char * Name ();  ; static bool check_matrix (Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x);  ; static auto blockMultTranspose (const TBlock &blockA, const TBlock &blockB);  . Protected Member Functions; template<class M > ; void equal (const M &m, bool add=false);  ; template<class M > ; void addEqual (const M &m);  this += m More...;  ;  Protected Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; bool registerNewCol (Index &colId, TBlock &bvalue);  Add a new col into matrix. More...;  ; std::pair< Index, Index > registerBtempLine (typename VecIndexedBlock::const_iterator &itbtemp);  Add a complete new line from btemp into matrix. More...;  ; void fullyCompressBtemp ();  Clear matrix and just add btemp array. More...;  ; Block * insertBtemp (const Index i, const Index j);  Method to easy insert new block into btemp. More...;  ; Index getMaxColIndex ();  Method to easy have the max colIndex. Could only be used if AutoSize policy is activated. More...;  ; void deleteRow (Index rowId);  Method to easy delete row given position in rowIndex. More...;  ; void compressBtemp ();  Clear matrix and compute new triplet's arrays by combining old ones and btemp(VecIndexedBlock) array. More...;  ; void compressCSR ();  ; void writeVector (const TVec &vec, std::ostream &os);  ; void readVector (TVec &vec, std::istream &in);  ;  Protected Member Functions inherited from sofa::linearalgebra::BaseMatrix; virtual SReal bAccessorElement (const InternalBlockAccessor *b, Index i, Index j) const;  ; virtual void bAccessorSet (InternalBlockAccessor *b, Index i, Index j, double v);  ; virtual void bAccessorAdd (InternalBlockAccessor *b, Index i, Index j, double v);  ; template<c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:21188,Clear,Clear,21188,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['Clear'],['Clear']
Usability,"est); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ equal(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::equal ; (; const M & ; m, . bool ; add = fals",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20512,clear,clearRowCol,20512,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clearRowCol']
Usability,"et< fixed_array< float, 8 > > > DWClass_fixed_array8f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 8 > > > DWClass_fixed_array8d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< float > > > DWClass_Quatf (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< double > > > DWClass_Quatd (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 5 > > > DWClass_PolynomialLD5d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 4 > > > DWClass_PolynomialLD4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 3 > > > DWClass_PolynomialLD3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 2 > > > DWClass_PolynomialLD2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 1 > > > DWClass_PolynomialLD1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,5 > > > DWClass_PolynomialLD5f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,4 > > > DWClass_PolynomialLD4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,3 > > > DWClass_PolynomialLD3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,2 > > > DWClass_PolynomialLD2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,1 > > > DWClass_PolynomialLD1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, float > > > DWClass_Mat22f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, double > > > DWClass_Mat22d (""default"", true);  ; Creator< DataWidge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:27906,Simpl,SimpleDataWidget,27906,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"et< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > > DWClass_fixed_array4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_array6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 6 > > > DWClass_fixed_array6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 8 > > > DWClass_fixed_a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:25952,Simpl,SimpleDataWidget,25952,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"et< unsigned int > > DWClass_uint (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Crea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:21969,Simpl,SimpleDataWidget,21969,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Constructor details. ◆ NodeElement(). sofa::simulation::xml::NodeElement::NodeElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; parent = nullptr . ). ◆ ~NodeElement(). sofa::simulation::xml::NodeElement::~NodeElement ; (; ). override . Function de",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html:5200,clear,clearErrors,5200,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,2,['clear'],['clearErrors']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  ;  Protected Member Functions inherited from sofa::simulation::xml::BaseElement; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Constructor de",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html:5115,clear,clearErrors,5115,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html,8,['clear'],['clearErrors']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Protected Member Functions; virtual void updateSceneGraph (sofa::core::BaseMapping *multiMapping, const type::vector< simulation::Node * > &ancestorInputs, type::vector< simulation::Node * > &otherInputs, type::vector< simulation::Node * > &outputs)=0;  ;  Protected Member Functions inherited from sofa::simulation::xml::BaseElement; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html:5317,clear,clearErrors,5317,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,2,['clear'],['clearErrors']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Static Public Member Functions; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Protected Member Functions; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Attribute details. ◆ replaceAttribute. std::map< std::string, std::string > sofa::simulation::xml::BaseElement::replaceAttribute. protected . Constructor details. ◆ BaseElement(). sofa::simulation::xml::BaseElement::BaseElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; newParent = nullptr . ). ◆ ~BaseElement(). sofa::simulation::xml::BaseElement::~BaseElement ; (; ). override . Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html:4822,clear,clearErrors,4822,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,2,['clear'],['clearErrors']
Usability,"etFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_arra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:25445,Simpl,SimpleDataWidget,25445,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"etFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > > DWClass_fixed_array4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_array6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 6 > > > DWClass_fixed_array6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 8 > > > DWClass_fixed_array8f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 8 > > > DWClass_fixed_array8d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< float > > > DWClass_Quatf (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::type::Quat< double > > > DWClass_Quatd (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 5 > > > DWClass_Po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:26426,Simpl,SimpleDataWidget,26426,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"evirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ asub() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:16993,clear,clear,16993,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],['clear']
Usability,evirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This functi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41537,clear,clearTriangles,41537,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTriangles']
Usability,"evirtual . Create the system corresponding to the constraints ; Implements sofa::core::behavior::ConstraintSolver. ◆ buildSystem_matrixAssembly(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixAssembly ; (; const core::ConstraintParams * ; cParams). protected . ◆ buildSystem_matrixFree(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixFree ; (; unsigned int ; numConstraints). protected . ◆ cleanup(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ clearConstraintProblemLocks(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::clearConstraintProblemLocks ; (; ). protected . ◆ computeResidual(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::computeResidual ; (; const core::ExecParams * ; ). overridevirtual . Compute the residual in the newton iterations due to the constraints forces i.e. compute Vecid::force() += J^t lambda the result is accumulated in Vecid::force() ; Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getConstraintProblem(). ConstraintProblem * sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getConstraintProblem ; (; ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ getDx(). sofa::core::MultiVecDerivId sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getDx ; (; ); const. overridevirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getLambda(). sofa::core::MultiVecDerivId sofa::component::constraint::lagran",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:29940,clear,clearConstraintProblemLocks,29940,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['clear'],['clearConstraintProblemLocks']
Usability,"ex, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2596,clear,clearCol,2596,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clearCol']
Usability,exity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40230,clear,clearEdgesInQuad,40230,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearEdgesInQuad']
Usability,exity(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected .,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:40986,clear,clear,40986,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clear']
Usability,"f matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator-= (const MatrixExpr< Expr2 > &m);  ; MatrixExpr< MatrixTranspose< Matrix > > t () const;  ; MatrixExpr< MatrixNegative< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:6110,clear,clearRowCol,6110,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,3,"['Clear', 'clear']","['Clear', 'clearRowCol']"
Usability,"f the element at row i, column j (using 0-based indices) . ◆ addB() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19106,clear,clear,19106,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],['clear']
Usability,"fa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; ConstantLocalMatrix< linearalgebra::clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; Col typedefsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ComponentType typedefsofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >; compressedInsertionOrderListsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ConstantLocalMatrix< linearalgebra::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; currentIdsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html:6965,clear,clear,6965,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,1,['clear'],['clear']
Usability,"fa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(DampingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; remove(DampingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator-members.html:2043,clear,clear,2043,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,fa::component::topology::container::dynamic::QuadSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::componen,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40074,clear,clear,40074,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clear']
Usability,"fa::core::behavior::ApplyConstraintCompat, and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the all values in column j to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:35591,clear,clearCol,35591,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearCol']
Usability,"fa::core::behavior::DefaultMultiMatrixAccessor::DefaultMultiMatrixAccessor ; (; ). ◆ ~DefaultMultiMatrixAccessor(). sofa::core::behavior::DefaultMultiMatrixAccessor::~DefaultMultiMatrixAccessor ; (; ). override . Function details. ◆ addMappedMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMappedMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalMapping(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalMapping ; (; sofa::core::BaseMapping * ; mapping). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ clear(). void sofa::core::behavior::DefaultMultiMatrixAccessor::clear ; (; ). virtual . ◆ computeGlobalMatrix(). void sofa::core::behavior::DefaultMultiMatrixAccessor::computeGlobalMatrix ; (; ). virtual . Reimplemented in sofa::core::behavior::CRSMultiMatrixAccessor. ◆ createMatrix(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrix ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2 . ). static . ◆ createMatrixImpl(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrixImpl ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2, . bool ; doPrintInfo . ). static . ◆ getGlobalDimension(). DefaultMultiMatrixAccessor::Index sofa::core::behavior::DefaultMultiMatrixAccessor::getGlobalDimension ; (; ); const. overridevirtual . Implements sofa::core::behavior::MultiMatrixAccessor. ◆ getGlobalOffset(). int sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html:5004,clear,clear,5004,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"fa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Compute the system matrix corresponding to . ; Parameters. mparamsmparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) ; matrixthe matrix to add the result to . Implements sofa::core::behavior::BaseForceField. ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContact(). template<class DataTypes > . const type::vector< Contact >& sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::getContact ; (; ); const. inline . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::getPotentialEnergy ; (; const sofa::core::MechanicalParams * ; mparams, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ); const. overridevirtual . Get the potential energy associated to this ForceField.; Used to estimate the total energy of the system by some ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:25838,clear,clear,25838,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['clear'],['clear']
Usability,"fa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html:1561,clear,clearLoggedMessages,1561,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,1,['clear'],['clearLoggedMessages']
Usability,"fa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_messageLogCoun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:3176,clear,clearLoggedMessages,3176,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"fa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess() overridesofa::component::topology::container::grid::RegularGridTopologyprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *contex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html:3863,clear,clearLoggedMessages,3863,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"fa::defaulttype::IntegerTypeInfo< long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long long >; name()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long long >; size()sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; size(const DataType &)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Text enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ValidInfo enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ValueType typedefsofa::defaulttype::IntegerTypeInfo< long long >; ValueTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long long >; ZeroConstructor enum valuesofa::defaulttype::IntegerTypeInfo< long long >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html:1873,Simpl,SimpleCopy,1873,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"fa::gui::qt::DWClass_OptionsGroup(""default"", true) ; (; ""default"" ; , . true ;  . ). OptionsGroup support. . ◆ DWClass_Poissonratio. helper::Creator<DataWidgetFactory, QPoissonRatioWidget> sofa::gui::qt::DWClass_Poissonratio(""poissonRatio"", false) ; (; ""poissonRatio"" ; , . false ;  . ). ◆ DWClass_PolynomialLD1d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,1> > > sofa::gui::qt::DWClass_PolynomialLD1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD1f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,1> > > sofa::gui::qt::DWClass_PolynomialLD1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,2> > > sofa::gui::qt::DWClass_PolynomialLD2d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD2f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,2> > > sofa::gui::qt::DWClass_PolynomialLD2f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,3> > > sofa::gui::qt::DWClass_PolynomialLD3d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD3f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,3> > > sofa::gui::qt::DWClass_PolynomialLD3f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<double,4> > > sofa::gui::qt::DWClass_PolynomialLD4d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD4f. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD<float ,4> > > sofa::gui::qt::DWClass_PolynomialLD4f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_PolynomialLD5d. Creator<DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:69617,Simpl,SimpleDataWidget,69617,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"fa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ TableDataWidget(). template<class T , int FLAGS = TABLE_NORMAL> . sofa::gui::qt::TableDataWidget< T, FLAGS >::TableDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >. ◆ sizeWidget(). template<class T , int FLAGS = TABLE_NORMAL> . virtual unsigned int sofa::gui::qt::TableDataWidget< T, FLAGS >::sizeWidget ; (; ). inlinevirtual . Helper method to give a size. ; Reimplemented from sofa::gui::qt::DataWidget. sofaguiqtTableDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:3984,Simpl,SimpleDataWidget,3984,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,1,['Simpl'],['SimpleDataWidget']
Usability,"fa::gui::qt::toString ; (; const std::string & ; s). inline . ◆ toString() [2/2]. template<class T > . std::string sofa::gui::qt::toString ; (; const T & ; v). inline . Variable Documentation. ◆ application. QApplication* sofa::gui::qt::application = nullptr. ◆ DW_Datafilename. helper::Creator<DataWidgetFactory,DataFileNameWidget> sofa::gui::qt::DW_Datafilename(""widget_filename"", false) ; (; ""widget_filename"" ; , . false ;  . ). ◆ DWClass_bool. Creator<DataWidgetFactory, SimpleDataWidget<bool> > sofa::gui::qt::DWClass_bool(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_char. Creator<DataWidgetFactory, SimpleDataWidget<char> > sofa::gui::qt::DWClass_char(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_DisplayFlags. helper::Creator<DataWidgetFactory, DisplayFlagsDataWidget > sofa::gui::qt::DWClass_DisplayFlags(""widget_displayFlags"", true) ; (; ""widget_displayFlags"" ; , . true ;  . ). ◆ DWClass_double. Creator<DataWidgetFactory, SimpleDataWidget<double> > sofa::gui::qt::DWClass_double(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Edge. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > sofa::gui::qt::DWClass_Edge(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1d. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<double,1> > > sofa::gui::qt::DWClass_fixed_array1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1f. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<float,1> > > sofa::gui::qt::DWClass_fixed_array1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1i. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<int,1> > > sofa::gui::qt::DWClass_fixed_array1i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_fixed_array1u. Creator<DataWidgetFactory, SimpleDataWidget< fixed_array<unsigned int,1> > > sofa::gui::qt::DWClass_fixed_array1u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWCl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:60241,Simpl,SimpleDataWidget,60241,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"fa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5066,clear,clear,5066,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clear']
Usability,"fa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20437,clear,clearRowCol,20437,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRowCol']
Usability,"fa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void ; ); const. pure virtual . Number of columns. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39750,clear,clearRowsCols,39750,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearRowsCols']
Usability,"fa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39369,clear,clearRows,39369,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],['clearRows']
Usability,"fa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference . #include <RigidDeriv.h>. Static Public Member Functions; static const Real & v (const Block &b, int, int col);  ; static Real & v (Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static BlockTranspose transposed (const Block &b);  ; static void transpose (BlockTranspose &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const char * Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const char* sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::subBlock ; (; const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:1295,clear,clear,1295,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,2,['clear'],['clear']
Usability,"false }. protected . Constructor details. ◆ ConstantSparsityPatternSystem(). template<class TMatrix , class TVector > . sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::ConstantSparsityPatternSystem. protected . Function details. ◆ applyProjectiveConstraints(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::applyProjectiveConstraints ; (; const core::MechanicalParams * ; mparams). overridevirtual . Reimplemented from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >. ◆ buildHashTable(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::buildHashTable ; (; linearalgebra::CompressedRowSparseMatrix< SReal > & ; M, . ConstantCRSMapping & ; mapping . ). staticprotected . ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::clearSystem. overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ isConstantSparsityPatternUsedYet(). template<class TMatrix , class TVector > . bool sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::isConstantSparsityPatternUsedYet. ◆ makeCreateDispatcher(). template<class TMatrix , class TVector > . std::unique_ptr< CreateMatrixDispatcher< c > > sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::makeCreateDispatcher. overrideprotectedvirtual . Define the type of dispatcher, itself defining the type of local matrices To override if matrix accumulation methods differs from this class. ; Reimplemented from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >. ◆ makeIndexVerificationStrategy(). template<class TMatrix , class TVector > . std::shared_ptr< sofa::core::matrixaccumulator::IndexVerificationStrategy >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:29270,clear,clearSystem,29270,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['clear'],['clearSystem']
Usability,"fault"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 4 > > > DWClass_PolynomialLD4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 3 > > > DWClass_PolynomialLD3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 2 > > > DWClass_PolynomialLD2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< double, 1 > > > DWClass_PolynomialLD1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,5 > > > DWClass_PolynomialLD5f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,4 > > > DWClass_PolynomialLD4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,3 > > > DWClass_PolynomialLD3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,2 > > > DWClass_PolynomialLD2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::helper::Polynomial_LD< float,1 > > > DWClass_PolynomialLD1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, float > > > DWClass_Mat22f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 2, double > > > DWClass_Mat22d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, float > > > DWClass_Mat23f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 2, 3, double > > > DWClass_Mat23d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, float > > > DWClass_Mat33f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 3, double > > > DWClass_Mat33d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Mat< 3, 4, float > > > DWClass_Mat34f (""default"", true);  ; Creator< DataWidgetFacto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:28444,Simpl,SimpleDataWidget,28444,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"faulttype::SolidTypes< R >::Twist, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Twist(const Vec3 &linear, const Vec3 &angular)sofa::defaulttype::SolidTypes< R >::Twistinline; Vec typedefsofa::type::SpatialVector< TReal >. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html:273,clear,clear,273,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html,1,['clear'],['clear']
Usability,"fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacementTransposed &J)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inlineprotected; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacementTransposed &J, SReal fact)sofa::component::solidmechanics::fem::elastic::Tet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html:7571,clear,clearLoggedMessages,7571,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::MatrixAccumulatorInterface Class Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::MatrixAccumulatorInterface:. [legend]. Public Member Functions; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . Constructor details. ◆ ~MatrixAccumulatorInterface(). virtual sofa::core::MatrixAccumulatorInterface::~MatrixAccumulatorInterface ; (; ). virtualdefault . Function details. ◆ add() [1/10]. void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html:1488,clear,clear,1488,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,1,['clear'],['clear']
Usability,"fferent-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:321191,feedback,feedback,321191,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"ffnessMatrix *matrix) overridesofa::component::mechanicalload::ConstantForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkForce(const Deriv &force)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; checkForces(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForceFromForcesVector(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromSingleForce(const Deriv singleForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromTotalForce(const Deriv &totalForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; ConstantForceField()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html:5056,clear,clearLoggedMessages,5056,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (; void ; ); const. inlineoverridevirtual . number of columns ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::compress ; (; ). inlineoverridevirtual . Add the values from the scheduled list, and clears the schedule list. ; See alsoset(Index i,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:21148,clear,clearRowsCols,21148,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRowsCols']
Usability,"fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  LCPConstraintSolver ();  Default Constructor. More...;  ;  ~LCPConstraintSolver () override;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; void postBuildSystem (const core::ConstraintParams *cParams) override;  ; void postSolveSystem (const core::ConstraintParams *cParams) override;  ; void clearConstraintCorrections ();  ; void resetConstraints (const core::ConstraintParams *cParams);  ; void buildLocalConstraintMatrix (const core::ConstraintParams *cparams, unsigned int &constraintId);  Call the method buildConstraintMatrix on all the BaseConstraintSet. More...;  ; void accumulateMatrixDeriv (const core::ConstraintParams *cparams);  ; unsigned int buildConstraintMatrix (const core::ConstraintParams *cparams);  ; void applyProjectiveConstraintOnConstraintMatrix (const core::ConstraintParams *cparams);  ; void getConstraintViolation (const core::ConstraintParams *cparams, sofa::linearalgebra::BaseVector *v);  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintSolver;  ConstraintSolver ();  ;  ~ConstraintSolver () override;  ; bool prepareStatesTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool buildSystemTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool solveSystemTask (const ConstraintParams *, M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:15727,clear,clearConstraintCorrections,15727,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['clear'],['clearConstraintCorrections']
Usability,"findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  HermiteSplineProjectiveConstraint (core::behavior::MechanicalState< DataTypes > *mstate=nullptr);  ;  ~HermiteSplineProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to kn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:16095,clear,clear,16095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clear']
Usability,"fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > > DWClass_fixed_array4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:25715,Simpl,SimpleDataWidget,25715,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"float > > DWClass_float (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< double > > DWClass_double (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< std::string > > DWClass_string (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, int > > > DWClass_Vec1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, unsigned int > > > DWClass_Vec1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, float > > > DWClass_Vec1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 1, double > > > DWClass_Vec1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, int > > > DWClass_Vec2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, unsigned int > > > DWClass_Vec2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, float > > > DWClass_Vec2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 2, double > > > DWClass_Vec2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, int > > > DWClass_Vec3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, unsigned int > > > DWClass_Vec3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, float > > > DWClass_Vec3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 3, double > > > DWClass_Vec3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, int > > > DWClass_Vec4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, unsigned int > > > DWClass_Vec4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, float > > > DWClass_Vec4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 4, double > > > DWClass_Vec4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creato",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:22071,Simpl,SimpleDataWidget,22071,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"fo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2370,clear,clearHandlers,2370,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,2,['clear'],['clearHandlers']
Usability,"frame)=0;  ; virtual void setLightingEnabled (bool _isAnabled)=0;  ; States (save/restore); virtual void saveLastState ()=0;  ; virtual void restoreLastState ()=0;  ; StateLifeCycle makeStateLifeCycle ();  ; Overlay methods; virtual void writeOverlayText (int x, int y, unsigned fontSize, const RGBAColor &color, const char *text)=0;  draw 2D text at position (x,y) from top-left corner More...;  ; virtual void enablePolygonOffset (float factor, float units)=0;  Allow a variable depth offset for polygon drawing. More...;  ; virtual void disablePolygonOffset ()=0;  Remove variable depth offset for polygon drawing. More...;  ; virtual void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr)=0;  . Constructor details. ◆ DrawTool(). sofa::helper::visual::DrawTool::DrawTool ; (; ). inline . ◆ ~DrawTool(). virtual sofa::helper::visual::DrawTool::~DrawTool ; (; ). inlinevirtual . ◆ ~StateLifeCycle(). sofa::helper::visual::DrawTool::~StateLifeCycle ; (; ). Function details. ◆ clear(). virtual void sofa::helper::visual::DrawTool::clear ; (; ). inlinevirtual . Reimplemented in sofa::gl::DrawToolGL. ◆ disableBlending(). virtual void sofa::helper::visual::DrawTool::disableBlending ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableDepthTest(). virtual void sofa::helper::visual::DrawTool::disableDepthTest ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableLighting(). virtual void sofa::helper::visual::DrawTool::disableLighting ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disablePolygonOffset(). virtual void sofa::helper::visual::DrawTool::disablePolygonOffset ; (; ). pure virtual . Remove variable depth offset for polygon drawing. ; Implemented in sofa::gl::DrawToolGL. ◆ draw3DText(). virtual void sofa::helper::visual::DrawTool::draw3DText ; (; const Vec3 & ; p, . float ; scale, . const RGBAColor & ; color, . const char * ; text . ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ draw3DText_Indices(). virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:9916,clear,clear,9916,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,2,['clear'],['clear']
Usability,"from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ add() [4/4]. template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::add ; (; const core::matrixaccumulator::no_check_policy & ; , . sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . float ; value . ). overrideprotectedvirtual . Reimplemented from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ clear(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::clear. override . ◆ getMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::getMatrix. ◆ shareMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::shareMatrix ; (; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & ; m). ◆ SOFA_CLASS(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::SOFA_CLASS ; (; AssemblingMappedMatrixAccumulator< c, TBlockType > ; , . AssemblingMatrixAccumulator< c > ;  . ). sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:9455,clear,clear,9455,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,1,['clear'],['clear']
Usability,"from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [4/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:25161,clear,clearPoints,25161,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearPoints']
Usability,"function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19822,clear,clear,19822,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],['clear']
Usability,"function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bufCP1sofa::component::animationloop::ConstraintAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:2198,clear,clearLoggedMessages,2198,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; collisionStepssofa::component::animationloop::MultiStepAnimationLoop; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_collisionStepssofa::component::animationloop::MultiStepAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_integrationStepssofa::component::animationloop::MultiStepAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:2124,clear,clearLoggedMessages,2124,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeFreeMotion(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; computeFreeMotionAndCollisionDetection(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:2126,clear,clearLoggedMessages,2126,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html:2096,clear,clearLoggedMessages,2096,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,2,['clear'],['clearLoggedMessages']
Usability,"g::linear::BarycentricMapperSparseGridTopology< In, Out >:. [legend]; Detailed Description; template<class In, class Out>; class sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; Class allowing barycentric mapping computation on a SparseGridTopology. . Protected Attributes; sofa::type::vector< CubeData > m_map;  ; topology::container::grid::SparseGridTopology * m_fromTopology {nullptr};  ; MatrixType * m_matrixJ {nullptr};  ; bool m_updateJ {false};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperSparseGridTopology, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ;  ~BarycentricMapperSparseGridTopology () override;  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void clear (std::size_t reserve=0) override;  ; Index addPointInCube (const Index cubeIndex, const SReal *baryCoords) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const BaseMatrix * getJ (int outSize, int inSize) override;  ; void draw (const VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void resize (core::State< Out > *toModel) override;  . Protected Member Functions;  BarycentricMapperSparseGridTopology (topology::container::grid::SparseGridTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  . Friends; template<class I , class O > ; std::istream & operator>> (std::istream &in, BarycentricMapperSparseGridTopology< I, O > &b);  ; template<class I , class O > ; std::ostream & operator<< (std::ostream &out, const BarycentricMapperSparseGridTopology< I, O > &b);  . Attribute details. ◆ m_fromTopology. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html:1391,clear,clear,1391,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,1,['clear'],['clear']
Usability,"gFactoryRegister< std::string > ; (; const std::string & ; baseclass, . const std::string & ; classname, . std::string ; key, . bool ; multi . ). ◆ narrow_cast(). template<class T , class U > . constexpr T sofa::helper::narrow_cast ; (; U && ; u). constexpr . Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) ; Template Parameters. TTarget type ; USource type . Parameters. uValue to cast . ReturnsThe value converted to the target type . ◆ narrow_cast_check(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_check ; (; U ; u). constexpr . Explicit narrow conversion checking that the value is unchanged by the cast. If the value changed, an exception is thrown Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) . ◆ narrow_cast_nocheck(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_nocheck ; (; U && ; u). constexprnoexcept . Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) ; Template Parameters. TTarget type ; USource type . Parameters. uValue to cast . ReturnsThe value converted to the target type . ◆ narrowString(). SOFA_HELPER_API std::string sofa::helper::narrowString ; (; const std::wstring & ; ws). Convert a wstring to a string. ; ReturnsThe converted string on success, or an empty string on failure. . ◆ nlcp_gaussseidel(). SOFA_HELPER_API int sofa::helper::nlcp_gaussseidel ; (; int ; dim, . SReal * ; dfree, . SReal ** ; W, . SReal * ; f, . SReal ; mu, . SReal ; tol, . int ; numItMax, . bool ; useInitialF, . bool ; verbose, . SReal ; minW, . SReal ; maxF, . std::vector< SReal > * ; residuals, . std::vector< SReal > * ; violations . ). ◆ nlcp_gaussseidelTimed(). SOFA_HELPER_API int sofa::helper::nlcp_gaussseidelTimed ; (; int ; dim, . SReal * ; dfree, . SReal ** ; W, . SReal * ; f, . SReal ; mu, . SReal ; tol, . int ; numItMax, . bool ; useInitialF, . SReal ; timeout, . bool ; verbose . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:31035,Guid,Guidelines,31035,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['Guid'],['Guidelines']
Usability,gForceField;  ; class  JointSpring;  JOINTSPRING. More...;  ; class  JointSpringForceFieldInternalData;  ; class  JointSpringForceField;  ; class  LinearSpring;  This class contains the description of one linear spring. More...;  ; class  MeshSpringForceField;  ; class  PolynomialRestShapeSpringsForceField;  This class describes a polynomial elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  PolynomialSpringsForceField;  This class describes a polynomial elastic springs ForceField. More...;  ; class  QuadBendingSprings;  ; class  QuadularBendingSprings;  ; class  RegularGridSpringForceField;  ; class  RepulsiveSpringForceField;  ; class  RestShapeSpringsForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  SpringForceFieldInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SpringForceField;  Set of simple springs between particles. More...;  ; class  TriangleBendingSprings;  ; class  TriangularBendingSprings;  ; class  TriangularBiquadraticSpringsForceField;  ; class  TriangularQuadraticSpringsForceField;  ; class  VectorSpringForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  ; typedef core::topology::BaseMeshTopology::Quad Quad;  ; typedef core::topology::BaseMeshTopology::EdgesInQuad EdgesInQuad;  ; using SpringForceField = SpringForceField< T >;  ; typedef core::topology::BaseMeshTopology::Triangle Triangle;  . Functions; void registerAngularSpringForceField (sofa::core::ObjectFactory *factory);  ; void registerFastTriangularBendingSprings (sofa::core::ObjectFactory *factory);  ; void registerFrameSpringForceField (sofa::core::ObjectFactory *factory);  ; void registerGearSpringForceField (sofa::core::ObjectFactory *factory);  ; void registerNonUniformHexahedronFEMForceFieldAndMass (sofa::core::ObjectFactory *factory);  ; voi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html:1615,simpl,simple,1615,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,2,['simpl'],['simple']
Usability,"gMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgeRestInformation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:5459,clear,clearLoggedMessages,5459,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"geSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTetrahedronArray()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::contain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5816,clear,clearTrianglesAroundVertex,5816,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundVertex']
Usability,"gebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; Block typedefsofa::linearalgebra::BlockDiagonalMatrix< LC, T >; BlockDiagonalMatrix()sofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6288,clear,clear,6288,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,2,['clear'],['clear']
Usability,"gebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:6032,clear,clearRows,6032,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,2,['clear'],['clearRows']
Usability,"gebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void ; ); const. pure virtual . Number of columns. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39493,Clear,Clears,39493,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['Clear'],['Clears']
Usability,"gend]. Protected Attributes; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate1;  ; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate2;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  ConstraintAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~ConstraintAttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html:1439,clear,clear,1439,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,2,['clear'],['clear']
Usability,"gend]. Static Public Attributes; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  . Protected Attributes; unsigned char m_bLoaded;  . Public Member Functions;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  ; virtual bool load (std::string filename);  ; virtual bool save (std::string filename, int compression_level=-1);  . Static Public Member Functions; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:1749,clear,clear,1749,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,2,['clear'],['clear']
Usability,"generic ForceField::addForce() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addSpring(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::addSpring ; (; int ; m1, . int ; m2, . SReal ; ks, . SReal ; kd, . Coord ; restVector . ). ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ createDefaultSprings(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createDefaultSprings. ◆ createEdgeInformation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createEdgeInformation ; (; Index ; , . Spring & ; t, . const core::topology::BaseMeshTopology::Edge & ; e, . const sofa::type::vector< Index > & ; ancestors, . const sofa::type::vector< SReal > & ; coefs . ). protected . Method to initialize See alsoSpring when a new edge is created. Will be set as creation callback in the EdgeData . d_springArray . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:29535,clear,clear,29535,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['clear'],['clear']
Usability,"get< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:24107,Simpl,SimpleDataWidget,24107,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"getFactory, SimpleDataWidget< Vec< 6, int > > > DWClass_Vec6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, unsigned int > > > DWClass_Vec6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, float > > > DWClass_Vec6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 6, double > > > DWClass_Vec6d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, int > > > DWClass_Vec8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< Vec< 8, unsigned int > > > DWClass_Vec8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 1 > > > DWClass_fixed_array1i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 1 > > > DWClass_fixed_array1u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 2 > > > DWClass_fixed_array2i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 2 > > > DWClass_fixed_array2u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 3 > > > DWClass_fixed_array3i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 3 > > > DWClass_fixed_array3u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 4 > > > DWClass_fixed_array4i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 4 > > > DWClass_fixed_array4u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 6 > > > DWClass_fixed_array6i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 6 > > > DWClass_fixed_array6u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:23982,Simpl,SimpleDataWidget,23982,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"gin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ); const. inline . ◆ equal(). template<typename T > . template<class M > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22264,clear,clearRowCol,22264,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['clear'],['clearRowCol']
Usability,"ginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:3925,clear,clear,3925,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clear']
Usability,gsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin inst,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:387005,simpl,simple-set-of-beams-via-beamfemforcefield,387005,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['simpl'],"['simple', 'simple-set-of-beams-via-beamfemforcefield']"
Usability,"gui::component::performer::AttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; SReal m_stiffness;  ; SReal m_size;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  AttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~AttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ; void setStiffness (SReal s);  ; void setArrowSize (float s);  ; virtual void configure (sofa::component::setting::MouseButtonSetting *setting) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html:1440,clear,clear,1440,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,2,['clear'],['clear']
Usability,"gui::component::performer::BaseAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html:455,clear,clear,455,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,2,['clear'],['clear']
Usability,"gy::Element< sofa::geometry::Quad > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; SimpleLayout enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; Size enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; size()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; size(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Text enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValidInfo enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValueType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ValueTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; ZeroCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html:2435,Simpl,SimpleCopy,2435,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,1,['Simpl'],['SimpleCopy']
Usability,"gy< In, Out >; addPointInTriangle(const Index triangleIndex, const SReal *baryCoords) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; BarycentricMapperMeshTopology(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *toTopology)sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; createPointInLine(const typename Out::Coord &p, Index lineIndex, const typename In::VecCoord *points) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; createPointInQuad(const typename Out::Coord &p, Index quadIndex, const typename In::VecCoord *points) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; createPointInTriangle(const typename Out::Coord &p, Index triangleIndex, const typename In::VecCoord *points) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; getMap3d() consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology-members.html:1911,clear,clear,1911,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology-members.html,1,['clear'],['clear']
Usability,"gyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4793,clear,clearHexahedra,4793,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedra']
Usability,h from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325187,learn,learn,325187,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learn']
Usability,"h>. Inheritance diagram for sofa::gui::common::BaseViewer:. [legend]. Protected Attributes; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf);  ; virtual const std::string screenshotName ();  ; virtual void setPrefix (const std::string &prefix, bool prependDirectory=true);  ; virtual void screenshot (const std::string &filename, int compression_level=-1);  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html:1574,resume,resume,1574,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,2,['resume'],['resume']
Usability,"hanical< TBlock, TPolicy >inlinevirtual; bRowSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsRange() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14242,clear,clear,14242,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,2,['clear'],['clear']
Usability,"hanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48448,clear,clear,48448,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,"hanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; computeMuGamma(Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >protectedstatic; computePrincipalStress()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; computeTriangleRotation(Transformation &result, Coord eab, Coord eac)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, Coord a, Coord b, Coord c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, VecCoord &x0, Triangle t)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; Coord type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html:5411,clear,clearLoggedMessages,5411,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,1,['clear'],['clearLoggedMessages']
Usability,"happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). template<class Info > . virtual void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elements of the type. (It doesn't mean that the BaseType is of a fixed size) ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [1/2]. template<class Info > . sofa::Size sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::size ; (; ); const. inlineoverridevirtual . The size of this type, in number of elements. For example, the size of a fixed_array<fixed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [2/2]. template<class Info > . sofa::Size sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::size ; (; const void * ; data); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html:10987,simpl,simply,10987,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,1,['simpl'],['simply']
Usability,"hase() overridesofa::component::collision::detection::algorithm::IncrSAPvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; sofa::changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; sofa::core::collision::NarrowPhaseDetection::changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; sofa::draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html:3183,clear,clearLoggedMessages,3183,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,1,['clear'],['clearLoggedMessages']
Usability,"havior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMassDensity()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeVertexMass(Real density)sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; Coord typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_fileMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showAxisSizesofa::component::mass::Di",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:7610,clear,clearLoggedMessages,7610,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"he force field must start adding its contribution. ; kFactstiffness factor that needs to be multiplied to each matrix entry. ; offsetStarting index of the submatrix to fill in the global matrix. . Reimplemented from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:24914,clear,clearKeyForces,24914,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearKeyForces']
Usability,"he set of hexahedra adjacent to a given quad. More...;  ; virtual const VerticesAroundVertex getVerticesAroundVertex (PointID i);  Returns the set of vertices adjacent to a given vertex (i.e. sharing an edge) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElement (Index elem);  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  ; virtual void clear ();  ; virtual void addPoint (SReal px, SReal py, SReal pz);  ; virtual void addEdge (Index a, Index b);  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addQuad (Index a, Index b, Index c, Index d);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  ; virtual bool checkConnexity ();  ; virtual bool checkTopology () const;  Checks if the topology is coherent. More...;  ; virtual Size getNumberOfConnectedComponent ();  Returns the number of connected component. More...;  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbPoints () const;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:18445,clear,clear,18445,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['clear'],['clear']
Usability,heckConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4475,clear,clearEdgesAroundVertex,4475,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdgesAroundVertex']
Usability,hedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvir,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49252,clear,clearEdgesInHexahedron,49252,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearEdgesInHexahedron']
Usability,"i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockType typedefsofa::linearalgebra::BTDMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5713,clear,clear,5713,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,2,['clear'],['clear']
Usability,"i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:5111,clear,clearRows,5111,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,2,['clear'],['clearRows']
Usability,"i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5760,clear,clear,5760,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,4,['clear'],['clear']
Usability,"i-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ OffSequenceLoader(). sofa::component::io::mesh::OffSequenceLoader::OffSequenceLoader ; (; ). protected . Function details. ◆ clear(). void sofa::component::io::mesh::OffSequenceLoader::clear ; (; ). ◆ handleEvent(). void sofa::component::io::mesh::OffSequenceLoader::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::io::mesh::OffSequenceLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::OffSequenceLoader::load ; (; const char * ; filename). virtual . ◆ reset(). void sofa::component::io::mesh::OffSequenceLoader::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::io::mesh::OffSequenceLoader::SOFA_CLASS ; (; OffSequenceLoader ; , . MeshOffLoader ;  . ). sofacomponentiomeshOffSequenceLoader; Generated on Mon No",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:20995,clear,clear,20995,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['clear'],['clear']
Usability,"i-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::TagSet Class Reference . #include <TagSet.h>. Public Member Functions;  TagSet ()=default;  ;  TagSet (const Tag &t);  Automatic conversion between a tag and a tagset composed of this tag. More...;  ; bool includes (const Tag &t) const;  Returns true if this TagSet contains specified tag. More...;  ; bool includes (const TagSet &t) const;  Returns true if this TagSet contains all specified tags. More...;  ; iterator find (const Tag &_Keyval);  ; const_iterator find (const Tag &_Keyval) const;  ; bool empty () const noexcept;  ; std::size_t size () const noexcept;  ; std::size_t count (const Tag &_Keyval) const;  ; iterator begin () noexcept;  ; const_iterator begin () const noexcept;  ; iterator end () noexcept;  ; const_iterator end () const noexcept;  ; reverse_iterator rbegin () noexcept;  ; const_reverse_iterator rbegin () const noexcept;  ; reverse_iterator rend () noexcept;  ; const_reverse_iterator rend () const noexcept;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; std::pair< iterator, bool > insert (const value_type &_Val);  ; iterator erase (const_iterator _Where) noexcept;  ; iterator erase (const_iterator _First, const_iterator _Last) noexcept;  ; std::size_t erase (const Tag &_Keyval) noexcept;  ; void clear () noexcept;  . Constructor details. ◆ TagSet() [1/2]. sofa::core::objectmodel::TagSet::TagSet ; (; ). default . ◆ TagSet() [2/2]. sofa::core::objectmodel::TagSet::TagSet ; (; const Tag & ; t). Automatic conversion between a tag and a tagset composed of this tag. . Function details. ◆ begin() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::begin ; (; ); const. noexcept . ◆ begin() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::begin ; (; ). noexcept . ◆ cbegin(). TagSet::const_iterator ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html:1593,clear,clear,1593,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,1,['clear'],['clear']
Usability,"i::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI(). sofa::gui::qt::RealGUI::~RealGUI ; (; ). override . Function details. ◆ activateNode. void sofa::gui::qt::RealGUI::activateNode ; (; sofa::simulation::Node * ; node, . bool ; activate . ). virtualslot . ◆ appendToDataLogFile. void sofa::gui::qt::RealGUI::appendToDataLogFile ; (; QString ; dataModifiedString). protectedslot . ◆ centerWindow(). void sofa::gui::qt::RealGUI::centerWindow ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ changeViewer. void sofa::gui::qt::RealGUI::changeViewer ; (; ). protectedvirtualslot . Allow to dynamically change viewer. Called when click on another viewer in GUI Qt viewer list (see viewerMap). TODO: find a better way to propagate the argument when we construct the viewer . ◆ clear. void sofa::gui::qt::RealGUI::clear ; (; ). virtualslot . ◆ closeGUI(). int sofa::gui::qt::RealGUI::closeGUI ; (; ). overridevirtual . Close the GUI. ; Implements sofa::gui::common::BaseGUI. ◆ CreateApplication(). void sofa::gui::qt::RealGUI::CreateApplication ; (; int ; _argc = 0, . char ** ; _argv = nullptr . ). staticprotected . ◆ createDisplayFlags(). void sofa::gui::qt::RealGUI::createDisplayFlags ; (; Node::SPtr ; root). protected . ◆ CreateGUI(). BaseGUI * sofa::gui::qt::RealGUI::CreateGUI ; (; const char * ; name, . sofa::simulation::Node::SPtr ; groot = nullptr, . const char * ; filename = nullptr . ). static . ◆ createViewer(). void sofa::gui::qt::RealGUI::createViewer ; (; const char * ; _viewerName, . bool ; _updateViewerList = false . ). virtual . create a viewer according to the argument key Notethe viewerMap have to be initialize at least once before ; _updateViewerList is used only if you want to reactualise the viewerMap in the GUI TODO: find a better way to propagate the argument when we c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:13080,clear,clear,13080,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,2,['clear'],['clear']
Usability,"ic Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat. const char * sofa::helper::io::Image::strFromChannelFormat. static . Initial value:=; {; ""L"",; ""LA"",; ""R"",; ""RG"",; ""RGB"",; ""RGBA"",; ""BGR"",; ""BGRA"",; ; ""COUNT_OF_CHANNEL_FORMATS""; }. ◆ strFromDataType. const char * sofa::helper::io::Image::strFromDataType. static . Initial value:=; {; ""UNORM8"",; ""UNORM16"",; ""UINT32"",; ""HALF"",; ""FLOAT"",; ; ""UCOMPRESSED"",; ; ""COUNT_OF_DATA_TYPES""; }. ◆ strFromTextureType. const char * sofa::helper::io::Image::strFromTextureType. static . Initial value:=; {; ""TEXTURE_2D"",; ""TEXTURE_3D"",; ""TEXTURE_CUBE"",; ; ""TEXTURE_INVALID""; }. Constructor details. ◆ Image() [1/2]. sofa::helper::io::Image::Image ; (; ). ◆ ~Image(). sofa::helper::io::Image::~Image ; (; ). virtual . ◆ Image() [2/2]. sofa::helper::io::Image::Image ; (; const Image & ; rhs). Function details. ◆ clear(). void sofa::helper::io::Image::clear ; (; ). ◆ create(). template<class Object > . static Object* sofa::helper::io::Image::create ; (; Object * ; , . std::string ; arg = """" . ). inlinestatic . ◆ Create(). Image * sofa::helper::io::Image::Create ; (; std::string ; filename). static . ◆ get3DSliceMipmapPixels(). unsigned char * sofa::helper::io::Image::get3DSliceMipmapPixels ; (; unsigned ; slice, . unsigned ; mipmap . ). ◆ getBytesPerBlock(). unsigned sofa::helper::io::Image::getBytesPerBlock ; (; ); const. ◆ getBytesPerChannel(). unsigned sofa::helper::io::Image::getBytesPerChannel ; (; ); const. ◆ getBytesPerPixel(). unsigned sofa::helper::io::Image::getBytesPerPixel ; (; ); const. ◆ getChannelCount(). unsigned sofa::helper::io::Image::getChannelCount ; (; ); const. ◆ getChannelFormat(). Image::ChannelFormat sofa::helper::io::Image::getChannelFormat ; (; ); const. ◆ getCubeMipmapPixels(). unsigned char * sofa::helper::io::Image::getCubeMipmapPixels ; (; unsigned ; cubeside, . unsigned ; mipmap . ). ◆ getDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:3217,clear,clear,3217,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,2,['clear'],['clear']
Usability,"ic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedbackT< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::haptics::NullForceFeedbackT< TDataTypes >; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NullForceFeedbackT, TDataTypes), MechanicalStateForceFeedback< TDataTypes >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeForce (const VecCoord &, VecDeriv &) override;  ; void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:1800,feedback,feedback,1800,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,1,['feedback'],['feedback']
Usability,"ic< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::Com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14766,clear,clearRow,14766,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,2,['clear'],['clearRow']
Usability,"ich can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  QuadSetTopologyContainer ();  ;  ~QuadSetTopologyContainer () override;  ; virtual void createQuadSetArray ();  Creates the QuadSet array. More...;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; virtual void createEdgesInQuadArray ();  Creates the array of edge indices for each quad. More...;  ; virtual void createQuadsAroundVertexArray ();  Creates the QuadsAroundVertex Array. More...;  ; virtual void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void clearQuads ();  ; void clearEdgesInQuad ();  ; void clearQuadsAroundVertex ();  ; void clearQuadsAroundEdge ();  ; virtual QuadsAroundVertex & getQuadsAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of quad indices around a given DOF for subsequent modification. More...;  ; virtual QuadsAroundEdge & getQuadsAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of quad indices around a given edge for subsequent modification. More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:31522,clear,clearQuads,31522,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,4,['clear'],"['clearEdgesInQuad', 'clearQuads', 'clearQuadsAroundEdge', 'clearQuadsAroundVertex']"
Usability,"ics simuation. sofa::core::MatrixAccumulatorInterface Member List . This is the complete list of members for sofa::core::MatrixAccumulatorInterface, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html:1602,clear,clear,1602,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html,1,['clear'],['clear']
Usability,"ics simuation. sofa::core::objectmodel::TagSet Member List . This is the complete list of members for sofa::core::objectmodel::TagSet, including all inherited members. begin() noexceptsofa::core::objectmodel::TagSet; begin() const noexceptsofa::core::objectmodel::TagSet; cbegin() const noexceptsofa::core::objectmodel::TagSet; cend() const noexceptsofa::core::objectmodel::TagSet; clear() noexceptsofa::core::objectmodel::TagSet; const_iterator typedefsofa::core::objectmodel::TagSet; const_reverse_iterator typedefsofa::core::objectmodel::TagSet; count(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; crbegin() const noexceptsofa::core::objectmodel::TagSet; crend() const noexceptsofa::core::objectmodel::TagSet; empty() const noexceptsofa::core::objectmodel::TagSet; end() noexceptsofa::core::objectmodel::TagSet; end() const noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _Where) noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _First, const_iterator _Last) noexceptsofa::core::objectmodel::TagSet; erase(const Tag &_Keyval) noexceptsofa::core::objectmodel::TagSet; find(const Tag &_Keyval)sofa::core::objectmodel::TagSet; find(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; includes(const Tag &t) constsofa::core::objectmodel::TagSet; includes(const TagSet &t) constsofa::core::objectmodel::TagSet; insert(const value_type &_Val)sofa::core::objectmodel::TagSet; iterator typedefsofa::core::objectmodel::TagSet; rbegin() noexceptsofa::core::objectmodel::TagSet; rbegin() const noexceptsofa::core::objectmodel::TagSet; rend() noexceptsofa::core::objectmodel::TagSet; rend() const noexceptsofa::core::objectmodel::TagSet; reverse_iterator typedefsofa::core::objectmodel::TagSet; size() const noexceptsofa::core::objectmodel::TagSet; TagSet()=defaultsofa::core::objectmodel::TagSet; TagSet(const Tag &t)sofa::core::objectmodel::TagSet; value_type typedefsofa::core::objectmodel::TagSet. Generated on Mon Nov 11 2024 03:16:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html:467,clear,clear,467,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html,1,['clear'],['clear']
Usability,"id sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::draw ; (; const VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::resize ; (; core::State< Out > * ; toModel). override . ◆ SOFA_CLASS(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html:5236,clear,clear,5236,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,1,['clear'],['clear']
Usability,"idStr, const std::string &objStr);  ; template<class T > ; static void stepEnd (const char *idStr, T *obj);  ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, current delta time or dt (from the context) . Returnsstd::string, the o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:4060,clear,clearData,4060,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,2,['clear'],['clearData']
Usability,"idevirtual . Project the given matrix (Experimental API). See doc in base parent class ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:25559,clear,clear,25559,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['clear'],['clear']
Usability,"idget< fixed_array< int, 8 > > > DWClass_fixed_array8i (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< unsigned int, 8 > > > DWClass_fixed_array8u (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Edge > > DWClass_Edge (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > DWClass_Triangle (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Quad > > DWClass_Quad (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > DWClass_Tetrahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Hexahedron > > DWClass_Hexahedron (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 1 > > > DWClass_fixed_array1f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 1 > > > DWClass_fixed_array1d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 2 > > > DWClass_fixed_array2f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 2 > > > DWClass_fixed_array2d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 3 > > > DWClass_fixed_array3f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 3 > > > DWClass_fixed_array3d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 4 > > > DWClass_fixed_array4f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 4 > > > DWClass_fixed_array4d (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< float, 6 > > > DWClass_fixed_array6f (""default"", true);  ; Creator< DataWidgetFactory, SimpleDataWidget< fixed_array< double, 6 > > > DWClass_fixed_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:25833,Simpl,SimpleDataWidget,25833,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"idgetFactory, TableDataWidget< std::vector<fixed_array<unsigned int,6> > > > sofa::gui::qt::DWClass_stdvectorA6u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_stdvectorA8i. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<int,8> > > > sofa::gui::qt::DWClass_stdvectorA8i(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_stdvectorA8u. Creator<DataWidgetFactory, TableDataWidget< std::vector<fixed_array<unsigned int,8> > > > sofa::gui::qt::DWClass_stdvectorA8u(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_string. Creator<DataWidgetFactory, SimpleDataWidget<std::string> > sofa::gui::qt::DWClass_string(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_TagSet. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::objectmodel::TagSet > > sofa::gui::qt::DWClass_TagSet(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Tetrahedron. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Tetrahedron > > sofa::gui::qt::DWClass_Tetrahedron(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Triangle. Creator<DataWidgetFactory, SimpleDataWidget< sofa::core::topology::Topology::Triangle > > sofa::gui::qt::DWClass_Triangle(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uchar. Creator<DataWidgetFactory, SimpleDataWidget<unsigned char> > sofa::gui::qt::DWClass_uchar(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_uint. Creator<DataWidgetFactory, SimpleDataWidget<unsigned int> > sofa::gui::qt::DWClass_uint(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1d. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,double> > > sofa::gui::qt::DWClass_Vec1d(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1f. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,float> > > sofa::gui::qt::DWClass_Vec1f(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_Vec1i. Creator<DataWidgetFactory, SimpleDataWidget< Vec<1,int> > > s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:76717,Simpl,SimpleDataWidget,76717,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,1,['Simpl'],['SimpleDataWidget']
Usability,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeCorrection(ElementMass &)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >inlineprotectedvirtual; computeElementMass(ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >pro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:8863,clear,clearLoggedMessages,8863,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementMass(ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:8752,clear,clearLoggedMessages,8752,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; computeForce(Displacement &F, const Displacement &Depl, const ElementStiffness &K)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeMaterialStiffness(MaterialStiffness &m, double youngModulus, double poissonRatio)sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:5827,clear,clearLoggedMessages,5827,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffnessMatrix(type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeMaterialStiffness(int i, Index &a, Index &b, Index &c) overridesofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >virtual; computePrincipalStrain(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computePrincipalStress(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computeStiffness(Stiffness &K, const StrainDisplacement ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html:6321,clear,clearLoggedMessages,6321,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffnessMatrix(type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeMaterialStiffness(int i, Index &a, Index &b, Index &c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protectedvirtual; computePrincipalStrain(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computePrincipalStress(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computeStiffness(Stiffness &K, const StrainDisplacement &J, const M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html:6299,clear,clearLoggedMessages,6299,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"id readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Public Slots; void openExternalBrowser (const QUrl &link);  ; void reject () override;  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUpdate. protected . ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::ModifyObject::data_. protected . ◆ dialogFlags_. const ModifyObjectFlags sofa::gui::qt::ModifyObject::dialogFlags_. protected . ◆ dialogTab. QTabWidget* sofa::gui::qt::ModifyObject::dialogTab. protected . ◆ Id_. void* sofa::gui::qt::ModifyObject::Id_. protected . ◆ item_. QTreeWidgetItem* sofa::gui::qt::ModifyObject::item_. protected . ◆ m_numMessages. int sofa::gui::qt::ModifyObject::m_numMessages. protected . ◆ m_tabs. std::vector< QTabulationModifyObject* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:2260,clear,clearMessages,2260,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,2,['clear'],['clearMessages']
Usability,"id shiftIndices (Index base);  ; const Block & block (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5296,Clear,Clear,5296,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['Clear'],['Clear']
Usability,"id shiftIndices (Index base);  ; const Block & block (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; void addDiag (unsigned int bi, const Block &b);  ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; void addDiagDBlock (unsigned int bi, const DBlo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:6182,Clear,Clear,6182,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,2,['Clear'],['Clear']
Usability,ieve-simulation-of-liver-deformation-using-sofa-framework%EF%BC%9F; ; SOFA - Topic: [SOLVED] How to achieve simulation of liver deformation using SOFA framework？. /how-to-add-flexible-plugin-to-sofa; ; SOFA - Topic: How to add Flexible plugin to SOFA. /how-to-add-points-into-a-container; ; SOFA - Topic: [SOLVED] How to add points into a container?. /how-to-add-python-script-to-c-code; ; SOFA - Topic: [SOLVED] How to add python script to c++ code. /how-to-add-qt-and-boost-to-the-path; ; SOFA - Topic: How to add qt and boost to the PATH?. /how-to-add-value-in-a-item-of-a-section; . /embed; ; SOFA - Topic: [SOLVED] How to add value in a item of a section. SOFA - Topic: [SOLVED] How to add value in a item of a section. /how-to-add-vr-functionality-in-sofa-framework; . /feed; ; [SOLVED] How to add VR functionality in SOFA framework? – SOFA. SOFA - Topic: [SOLVED] How to add VR functionality in SOFA framework?. /how-to-apply-a-force-and-get-the-feedback-of-the-soft-tissue-deformation; ; SOFA - Topic: How to apply a force and get the feedback of the soft tissue deformation. /how-to-apply-an-orientation-dependent-pure-torque-to-rigid-body; ; SOFA - Topic: How to apply an orientation-dependent pure torque to Rigid body?. /how-to-apply-displacement-on-object; ; SOFA - Topic: How to apply Displacement on object. /how-to-attach-a-beam-with-a-rigid-body; ; SOFA - Topic: How to attach a beam with a rigid body. /how-to-begin-to-use-sofa-for-medical-simulations; . /feed; ; [SOLVED] How to begin to use sofa for medical simulations? – SOFA. SOFA - Topic: [SOLVED] How to begin to use sofa for medical simulations?. /how-to-break-the-spring-between-mesh; ; SOFA - Topic: [SOLVED] How to break the spring between mesh?. /how-to-build-qtsofa; ; SOFA - Topic: [SOLVED] How to build 'qtSofa'. /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:316212,feedback,feedback-of-the-soft-tissue-deformation,316212,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-of-the-soft-tissue-deformation']"
Usability,"iewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ; virtual LightType getLightType ()=0;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html:6695,clear,clearVisual,6695,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"if DataWidget has not been filled at constructor and need to be filled at first call. Will turn toFill to true only if isFilled == false . ◆ getBaseData() [1/2]. core::objectmodel::BaseData* sofa::gui::qt::DataWidget::getBaseData ; (; ). inline . ◆ getBaseData() [2/2]. const core::objectmodel::BaseData* sofa::gui::qt::DataWidget::getBaseData ; (; ); const. inline . BaseData pointer accessor function. . ◆ isDirty(). bool sofa::gui::qt::DataWidget::isDirty ; (; ). inline . ◆ isFilled(). bool sofa::gui::qt::DataWidget::isFilled ; (; ). inline . return if DataWidget as been filled . ◆ numColumnWidget(). virtual unsigned int sofa::gui::qt::DataWidget::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented in sofa::gui::qt::QDataSimpleEdit, sofa::gui::qt::TableDataWidget< T, FLAGS >, sofa::gui::qt::SimpleDataWidget< T, Container >, sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >, sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >, sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget, sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget, sofa::gui::qt::materialdatawidget_h::MaterialDataWidget, sofa::gui::qt::GraphDataWidget< T >, and sofa::gui::qt::DisplayFlagsDataWidget. ◆ readFromData(). virtual void sofa::gui::qt::DataWidget::readFromData ; (; ). protectedpure virtual . The implementation of this method tells how the widget reads the value of the data. ; Implemented in sofa::gui::qt::QDataSimpleEdit, sofa::gui::qt::RadioDataWidget, sofa::gui::qt::SimpleDataWidget< T, Container >, sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >, sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >, sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget, sofa::gui::qt::QPoissonRatioWidget, sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget, sofa::gui::qt::materialdatawidget_h::MaterialDataWidget, sofa::gui::qt::GenericDataWid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html:5539,Simpl,SimpleDataWidget,5539,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,3,['Simpl'],['SimpleDataWidget']
Usability,"if exist or empty Block if not . ◆ blockMultTranspose(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static auto sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21347,clear,clear,21347,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['clear'],['clear']
Usability,"igenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; class  CRSMechanicalPolicy;  ; class  CompressedRowSparseMatrixMechanical;  ; class  DiagonalMatrix;  Simple full matrix container. More...;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, M2 >;  ; class  MatrixProductOp< M1, DiagonalMatrix< R2 > >;  ; class  MatrixProductOp< DiagonalMatrix< R1 >, DiagonalMatrix< R2 > >;  ; class  MatrixInvertOp< DiagonalMatrix< R1 > >;  ; class  EigenBaseSparseMatrix;  ; class  EigenSparseMatrix;  ; class  EigenVector;  ; class  FullMatrix;  Simple full matrix container. More...;  ; class  LPtrFullMatrix;  Simple full matrix container, with an additional pointer per line, to be able do get a T** pointer and use [i][j] directly. More...;  ; class  FullVector;  ; struct  CleanupCheck;  ; class  bloc_index_func;  ; class  matrix_bloc_traits;  ; class  matrix_bloc_traits< type::Mat< L, C, real >, IndexType >;  ; class  matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >;  ; class  matrix_bloc_traits< float, IndexType >;  ; class  matrix_bloc_traits< double, IndexType >;  ; class  matrix_bloc_traits< int, IndexType >;  ; class  MatrixProduct;  ; class  MatrixAddition;  ; class  MatrixSubtraction;  ; class  MatrixTranspose;  ; class  MatrixNegative;  ; class  MatrixScale;  ; class  MatrixExpr;  ; class  DefaultMatrixProductOp;  ; class  MatrixProductOp;  ; class  DefaultMatrixProductOp< 0, 0, M1, M2 >;  ; class  DefaultMatrixProductOp< 1, 0, M1, M2 >;  ; class  DefaultMatrixProductOp< 0, 1, M1, M2 >;  ; class  DefaultMatrixInvertOp;  ; class  MatrixInvertOp;  ; class  DefaultMatrixInvertOp< 0, M1 >;  ; class  type_selector;  ; class  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:2545,Simpl,Simple,2545,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['Simpl'],['Simple']
Usability,"ildFromVoxelFile(const std::string &filename)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildFromVoxelLoader(sofa::core::loader::VoxelLoader *loader)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildVirtualFinerLevels()sofa::component::topology::container::grid::SparseGridTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html:7212,clear,clear,7212,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,1,['clear'],['clear']
Usability,"imer::outputType getOutputType (IdTimer id);  getOutputType Get the outputType for the given AdvancedTimer. More...;  ; static std::string getTimeAnalysis (IdTimer id, double time, double dt);  getTimeAnalysis Return the result of the AdvancedTimer More...;  ; static type::vector< AdvancedTimer::IdStep > getSteps (IdTimer id, bool processData=false);  getSteps Return the vector of IDStep of the AdvancedTimer given execution More...;  ; static std::map< AdvancedTimer::IdStep, StepData > getStepData (IdTimer id, bool processData=false);  getStepData Return the map of StepData of the AdvancedTimer given execution More...;  ; static type::vector< Record > getRecords (IdTimer id);  getRecords the vector of Record of the AdvancedTimer given execution id. More...;  ; static void clearData (IdTimer id);  clearDatato clear a specific Timer Data More...;  ; static void clear ();  ; static void begin (IdTimer id);  ; static void end (IdTimer id);  ; static void end (IdTimer id, std::ostream &result);  ; static std::string end (IdTimer id, double time, double dt);  end Override fo the end method in which you can use JSON or old format More...;  ; static bool isActive ();  ; static void stepBegin (IdStep id);  ; static void stepBegin (IdStep id, IdObj obj);  ; template<class T > ; static void stepBegin (IdStep id, T *obj);  ; static void stepEnd (IdStep id);  ; static void stepEnd (IdStep id, IdObj obj);  ; template<class T > ; static void stepEnd (IdStep id, T *obj);  ; static void stepNext (IdStep prevId, IdStep nextId);  ; static void step (IdStep id);  ; static void step (IdStep id, IdObj obj);  ; template<class T > ; static void step (IdStep id, T *obj);  ; static void begin (const char *idStr);  ; static void end (const char *idStr);  ; static void stepBegin (const char *idStr);  ; static void stepBegin (const char *idStr, const char *objStr);  ; static void stepBegin (const char *idStr, const std::string &objStr);  ; template<class T > ; static void stepBegin (const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:1775,clear,clear,1775,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,2,['clear'],['clear']
Usability,"index, . const std::string & ; value . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:3934,simpl,simply,3934,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,2,['simpl'],['simply']
Usability,"indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3717,clear,clearCol,3717,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearCol']
Usability,"ine; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5821,clear,clearCol,5821,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,4,['clear'],['clearCol']
Usability,"ineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:2470,clear,clearRowCol,2470,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,2,['clear'],['clearRowCol']
Usability,"inearalgebra::BaseVector::add(Index i0, Index n, const float *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const double *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const int *src)sofa::linearalgebra::BaseVectorinlinevirtual; addDefaultImpl(Index i0, Index n, const T *src)sofa::linearalgebra::BaseVectorinlineprotected; allocsizesofa::linearalgebra::FullVector< T >protected; asub(Index bi, Index) constsofa::linearalgebra::BlockVector< N, T >; asub(Index bi, Index)sofa::linearalgebra::BlockVector< N, T >; begin()sofa::linearalgebra::FullVector< T >inline; begin() constsofa::linearalgebra::FullVector< T >inline; BlockVector()sofa::linearalgebra::BlockVector< N, T >; BlockVector(Index n)sofa::linearalgebra::BlockVector< N, T >explicit; capacity() constsofa::linearalgebra::FullVector< T >inline; checkIndex(Index n) constsofa::linearalgebra::FullVector< T >protected; clear() overridesofa::linearalgebra::FullVector< T >virtual; clear(Index dim) overridesofa::linearalgebra::FullVector< T >virtual; const_iterator typedefsofa::linearalgebra::BlockVector< N, T >; ConstIterator typedefsofa::linearalgebra::FullVector< T >; cursizesofa::linearalgebra::FullVector< T >protected; datasofa::linearalgebra::FullVector< T >protected; dot(const FullVector< Real > &a) constsofa::linearalgebra::FullVector< T >; element(Index i) const overridesofa::linearalgebra::FullVector< T >inlinevirtual; ELEMENT_FLOAT enum valuesofa::linearalgebra::BaseVector; ELEMENT_INT enum valuesofa::linearalgebra::BaseVector; ELEMENT_UNKNOWN enum valuesofa::linearalgebra::BaseVector; elements(Index i0, Index n, float *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, double *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, int *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elementsDefaultImpl(Index i0, Index n, T *b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html:1356,clear,clear,1356,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html,2,['clear'],['clear']
Usability,"inearsystem::CompositeLinearSystem< TMatrix, TVector >::l_solverLinearSystem. protected . Constructor details. ◆ CompositeLinearSystem(). template<class TMatrix , class TVector > . sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::CompositeLinearSystem. protected . Function details. ◆ allocateSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::allocateSystem. overrideprotectedvirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ assembleSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::assembleSystem ; (; const core::MechanicalParams * ; mechanical_params). overrideprotectedvirtual . Reimplemented from sofa::core::behavior::BaseMatrixLinearSystem. ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::clearSystem. overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ dispatchSystemRHS(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::dispatchSystemRHS ; (; core::MultiVecDerivId ; v). overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ dispatchSystemSolution(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::dispatchSystemSolution ; (; core::MultiVecDerivId ; v). overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ getRHSVector(). template<class TMatrix , class TVector > . TVector * sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::getRHSVector. overridevirtual . Return the RHS of the linear system",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:20291,clear,clearSystem,20291,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['clear'],['clearSystem']
Usability,"ineoverridevirtual . Get the iterator corresponding to the end of the rows of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::Com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48282,clear,clear,48282,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,"iner;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:17840,simpl,simply,17840,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['simpl'],['simply']
Usability,"inestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; name()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; Size enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; size()sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Text enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValidInfo enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValueType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ValueTypeInfo typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; ZeroConstructor enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html:2128,Simpl,SimpleCopy,2128,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,2,['Simpl'],"['SimpleCopy', 'SimpleLayout']"
Usability,"ing to the output type More...;  ; static void setOutputType (IdTimer id, const std::string &type);  setOutputType Set the outputType for the given AdvancedTimer. More...;  ; static AdvancedTimer::outputType getOutputType (IdTimer id);  getOutputType Get the outputType for the given AdvancedTimer. More...;  ; static std::string getTimeAnalysis (IdTimer id, double time, double dt);  getTimeAnalysis Return the result of the AdvancedTimer More...;  ; static type::vector< AdvancedTimer::IdStep > getSteps (IdTimer id, bool processData=false);  getSteps Return the vector of IDStep of the AdvancedTimer given execution More...;  ; static std::map< AdvancedTimer::IdStep, StepData > getStepData (IdTimer id, bool processData=false);  getStepData Return the map of StepData of the AdvancedTimer given execution More...;  ; static type::vector< Record > getRecords (IdTimer id);  getRecords the vector of Record of the AdvancedTimer given execution id. More...;  ; static void clearData (IdTimer id);  clearDatato clear a specific Timer Data More...;  ; static void clear ();  ; static void begin (IdTimer id);  ; static void end (IdTimer id);  ; static void end (IdTimer id, std::ostream &result);  ; static std::string end (IdTimer id, double time, double dt);  end Override fo the end method in which you can use JSON or old format More...;  ; static bool isActive ();  ; static void stepBegin (IdStep id);  ; static void stepBegin (IdStep id, IdObj obj);  ; template<class T > ; static void stepBegin (IdStep id, T *obj);  ; static void stepEnd (IdStep id);  ; static void stepEnd (IdStep id, IdObj obj);  ; template<class T > ; static void stepEnd (IdStep id, T *obj);  ; static void stepNext (IdStep prevId, IdStep nextId);  ; static void step (IdStep id);  ; static void step (IdStep id, IdObj obj);  ; template<class T > ; static void step (IdStep id, T *obj);  ; static void begin (const char *idStr);  ; static void end (const char *idStr);  ; static void stepBegin (const char *idStr);  ; stat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:1686,clear,clearData,1686,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,6,['clear'],"['clear', 'clearData', 'clearDatato']"
Usability,"ing value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ add() [2/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const double * ; src . ). inlinevirtual . Add to the values of n double elements, starting at element i0. . ◆ add() [3/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const float * ; src . ). inlinevirtual . Add to the values of n float elements, starting at element i0. . ◆ add() [4/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const int * ; src . ). inlinevirtual . Add to the values of n int elements, starting at element i0. . ◆ addDefaultImpl(). template<class T > . void sofa::linearalgebra::BaseVector::addDefaultImpl ; (; Index ; i0, . Index ; n, . const T * ; src . ). inlineprotected . ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; Index ; i). inlinevirtual . Reset the value of element i to 0. ; Reimplemented in sofa::linearalgebra::EigenVector< TReal, TBlockSize >, sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, and sofa::linearalgebra::FullVector< SReal >. ◆ element(). virtual SReal sofa::linearalgebra::BaseVector::element ; (; Index ; i); const. pure virtual . Read the value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ elements() [1/3]. virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:4850,clear,clear,4850,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,2,['clear'],['clear']
Usability,ing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] mode,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:349015,simpl,simple,349015,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,ingForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  FastTriangularBendingSprings;  ; class  FrameSpringForceFieldInternalData;  ; class  FrameSpringForceField;  ; class  GearSpring;  ; class  GearSpringForceFieldInternalData;  ; class  GearSpringForceField;  ; class  JointSpring;  JOINTSPRING. More...;  ; class  JointSpringForceFieldInternalData;  ; class  JointSpringForceField;  ; class  LinearSpring;  This class contains the description of one linear spring. More...;  ; class  MeshSpringForceField;  ; class  PolynomialRestShapeSpringsForceField;  This class describes a polynomial elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  PolynomialSpringsForceField;  This class describes a polynomial elastic springs ForceField. More...;  ; class  QuadBendingSprings;  ; class  QuadularBendingSprings;  ; class  RegularGridSpringForceField;  ; class  RepulsiveSpringForceField;  ; class  RestShapeSpringsForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  SpringForceFieldInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SpringForceField;  Set of simple springs between particles. More...;  ; class  TriangleBendingSprings;  ; class  TriangularBendingSprings;  ; class  TriangularBiquadraticSpringsForceField;  ; class  TriangularQuadraticSpringsForceField;  ; class  VectorSpringForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  ; typedef core::topology::BaseMeshTopology::Quad Quad;  ; typedef core::topology::BaseMeshTopology::EdgesInQuad EdgesInQuad;  ; using SpringForceField = SpringForceField< T >;  ; typedef core::topology::BaseMeshTopology::Triangle Triangle;  . Functions; void registerAngularSpringForceField (sofa::core::ObjectFactory *factory);  ; voi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html:1348,simpl,simple,1348,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,2,['simpl'],['simple']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html:5885,clear,clearLoggedMessages,5885,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Pa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:5647,clear,clearLoggedMessages,5647,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Pair",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:5609,clear,clearLoggedMessages,5609,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteracti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:5805,clear,clearLoggedMessages,5805,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,3,['clear'],['clearLoggedMessages']
Usability,"ingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; computeAccFromMapping(const MechanicalParams *, const type::vector< DataVecDeriv_t< Out > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html:4936,clear,clearLoggedMessages,4936,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,ing getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; tags; Methods related to tagged subsets . const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; componentstate; Methods related to component state . ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  . Static Public Member Functions; static const BaseClass * GetClass ();  ; template<class T > ; static std::stri,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:4382,clear,clearLoggedMessages,4382,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['clear'],['clearLoggedMessages']
Usability,"initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_cameraUpsofa::component::visual::RecordedCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:2228,clear,clearLoggedMessages,2228,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,"initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html:2220,clear,clearLoggedMessages,2220,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,"inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (; void ; ); const. inlineoverridevirtual . number of columns ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::compress ; (; ). inlineoverridevirtual . Add the val",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:21048,clear,clearRowsCols,21048,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRowsCols']
Usability,"inlineprotectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; ConstantLocalMatrix< linearalgebra::clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; Col typedefsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ComponentType typedefsofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >; compressedInsertionOrderListsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ConstantLocalMatrix< linearalgebra::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; currentIdsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ConstantLocalMatrix< linearalgebra::GetCustomTemplateName()sofa::component::linearsystem::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html:7164,clear,clear,7164,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,1,['clear'],['clear']
Usability,"ion *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMassDensity()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeVertexMass(Real density)sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; Coord typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_fileMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_messageLog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:7535,clear,clear,7535,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['clear'],['clear']
Usability,"ion specialized on contributions of the same size than the blocks. . ◆ asub() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17302,clear,clear,17302,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],['clear']
Usability,"ion vector. More...;  ; void projectVelocity (core::MultiVecDerivId v, SReal time=0.0);  Apply projective constraints to the given velocity vector. More...;  ; void projectResponse (core::MultiVecDerivId dx, double **W=nullptr);  Apply projective constraints to the given vector. More...;  ; void projectPositionAndVelocity (core::MultiVecCoordId x, core::MultiVecDerivId v, double time=0.0);  Apply projective constraints to the given position and velocity vectors. More...;  ; void addMdx (core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId resul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3184,clear,clear,3184,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,2,['clear'],['clear']
Usability,"ion).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ removeIndex(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::removeIndex ; (; Index ; index). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(FixedTranslationProjectiveConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:25302,clear,clear,25302,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clear']
Usability,"ion).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponseT(). template<class TDataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ reset(). template<class DataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setAnimationSpeed(). template<class TDataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >::setAnimationSpeed ; (; float ; speed).",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html:27873,clear,clear,27873,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,1,['clear'],['clear']
Usability,"ion. sofa::core::behavior::MassMatrixAccumulator Member List . This is the complete list of members for sofa::core::behavior::MassMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator-members.html:1612,clear,clear,1612,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"ion::DetectionOutputVector:. [legend]; Detailed Description; Abstract description of a set of contact point. . Public Member Functions; virtual void clear ()=0;  Clear the content of this vector. More...;  ; virtual unsigned int size () const =0;  Current size (number of detected contacts. More...;  ; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx)=0;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx)=0;  Const iterator end to iterate the detection pairs. More...;  . Protected Member Functions; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~DetectionOutputVector(). virtual sofa::core::collision::DetectionOutputVector::~DetectionOutputVector ; (; ). inlineprotectedvirtual . Function details. ◆ clear(). virtual void sofa::core::collision::DetectionOutputVector::clear ; (; ). pure virtual . Clear the content of this vector. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ empty(). bool sofa::core::collision::DetectionOutputVector::empty ; (; ); const. inline . Test if the vector is empty. . ◆ getFirstPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getFirstPosition ; (; unsigned ; idx). pure virtual . Const iterator to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ getSecondPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getSecondPosition ; (; unsigned ; idx). pure virtual . Const iterator end to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ release(). virtual void sofa::core::collision::DetectionOutputVector::release ; (; ). inlinevirtual . Delete this vector from memory once the contact pair is no longer active. . ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html:1453,clear,clear,1453,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,1,['clear'],['clear']
Usability,"ions ; (; const core::ExecParams * ; params, . core::objectmodel::BaseContext * ; ctx, . bool ; precomputedTraversalOrder = false . ). Function details. ◆ accFromF(). void sofa::simulation::common::MechanicalOperations::accFromF ; (; core::MultiVecDerivId ; a, . core::ConstMultiVecDerivId ; f . ). a = M^-1 . f ; Parameters. fa = M^-1 . f . ◆ addMBK_ToMatrix(). void sofa::simulation::common::MechanicalOperations::addMBK_ToMatrix ; (; const sofa::core::behavior::MultiMatrixAccessor * ; matrix, . SReal ; mFact, . SReal ; bFact, . SReal ; kFact . ). ◆ addMBKdx(). void sofa::simulation::common::MechanicalOperations::addMBKdx ; (; core::MultiVecDerivId ; df, . SReal ; m, . SReal ; b, . SReal ; k, . bool ; clear = true, . bool ; accumulate = true . ). accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) . ◆ addMBKv(). void sofa::simulation::common::MechanicalOperations::addMBKv ; (; core::MultiVecDerivId ; df, . SReal ; m, . SReal ; b, . SReal ; k, . bool ; clear = true, . bool ; accumulate = true . ). accumulate $ df += (m M + b B + k K) velocity $ . ◆ addMdx(). void sofa::simulation::common::MechanicalOperations::addMdx ; (; core::MultiVecDerivId ; res, . core::MultiVecDerivId ; dx, . SReal ; factor = 1.0 . ). res += factor M.dx . ◆ addSeparateGravity(). void sofa::simulation::common::MechanicalOperations::addSeparateGravity ; (; SReal ; dt, . core::MultiVecDerivId ; result = core::VecDerivId::velocity() . ). Add dt*Gravity to the velocity. . ◆ baseVector2MultiVector(). void sofa::simulation::common::MechanicalOperations::baseVector2MultiVector ; (; const linearalgebra::BaseVector * ; src, . core::MultiVecId ; dest, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ computeAcc(). void sofa::simulation::common::MechanicalOperations::computeAcc ; (; SReal ; t, . core::MultiVecDerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute a(x,v) at time t. Parameters x and v not const due to propagation thr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:9417,clear,clear,9417,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,2,['clear'],['clear']
Usability,"iption & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5582,simpl,simpleapi,5582,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['simpl'],['simpleapi']
Usability,"irtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html:1942,clear,clearLoggedMessages,1942,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,1,['clear'],['clearLoggedMessages']
Usability,"irtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html:1987,clear,clearLoggedMessages,1987,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"irtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:2514,clear,clearVisual,2514,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,2,['clear'],['clearVisual']
Usability,"is function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ add() [2/3]. template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::add ; (; Index ; row, . Index ; col, . const type::Mat3x3f & ; _M . ). inlineoverridevirtual . Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ add() [3/3]. template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<matrixaccumulator::Contribution c> . Index sofa::core::behavior::AddToMatrixCompatMatrix< c >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<matrixaccumulator::Contribution c> . SReal sofa::core::behavior::AddToMatrixCompatMatrix< c >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Implements so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:16505,clear,clear,16505,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clear']
Usability,"ist< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html:2104,clear,clearLoggedMessages,2104,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"isting value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ end() [2/2]. template<class Rea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19673,clear,clearRow,19673,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['clear'],['clearRow']
Usability,"isual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html:3005,clear,clearVisual,3005,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"isualGrid () override=default;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateGrid ();  ; void buildGrid ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:3995,clear,clearVisual,3995,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"itance diagram for sofa::core::behavior::ListDampingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >; void push_back (DampingMatrixAccumulator *m);  ; void remove (DampingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListDampingMatrixAccumulator; Generated on Mon Nov 11 2024 03:15",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html:630,clear,clear,630,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html,1,['clear'],['clear']
Usability,"itialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ; Color getColor (unsigned int i);  ; template<class Real > ; helper::ColorMap::evaluator< Real > getEvaluator (Real vmin, Real vmax);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:3666,clear,clearVisual,3666,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"ition).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ removeIndex(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::removeIndex ; (; Index ; index). ◆ reset(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:32068,clear,clear,32068,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,ity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:4880,clear,clearEdgesAroundVertex,4880,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"iv > & ; in . ). override . ◆ buildGeometricStiffnessMatrix(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::buildGeometricStiffnessMatrix ; (; sofa::core::GeometricStiffnessMatrix * ; matrices). overridevirtual . Assembles the geometric stiffness matrix of the mapping in the provided matrix object. ; The geometric stiffness is defined as dJ^T/dx * outForce, where outForce is the forces applying on the output of the mapping, J is the jacobian matrix of the mapping and x is the position of the input of the mapping.; Inside the method, outForce is retrieved, while dJ^T/dx and its product with outForce must be computed.; Note that dJ^T/dx is null for linear mappings, meaning that the method can remain empty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getGlobalToLocalCoords() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xFrom, . const OutCoord & ; xTo . ). ◆ getGlobalToLocalCoords() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xfrom, . const OutCoord & ; xto . ). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:30612,clear,clear,30612,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['clear'],['clear']
Usability,"iv > * read (core::ConstVecDerivId v) const override;  ; virtual Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html:3971,simpl,simplified,3971,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,1,['simpl'],['simplified']
Usability,"ix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; d_youngModulussofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< DataTypes >; DataVecDeriv type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html:4869,clear,clearLoggedMessages,4869,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3028,clear,clear,3028,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,4,['clear'],"['clear', 'clearRow']"
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5379,clear,clear,5379,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,4,['clear'],"['clear', 'clearRow']"
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15535,clear,clear,15535,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,4,['clear'],"['clear', 'clearRow']"
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector resu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3104,clear,clear,3104,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,2,['clear'],"['clear', 'clearRow']"
Usability,"ix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficie",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20588,Clear,Clears,20588,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['Clear'],['Clears']
Usability,"ix;  . Public Member Functions;  SOFA_CLASS (AssemblingMappedMatrixAccumulator, AssemblingMatrixAccumulator< c >);  ; void clear () override;  ; void shareMatrix (const std::shared_ptr< LocalMappedMatrixType< TBlockType > > &m);  ; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & getMatrix () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  . Prote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:1299,clear,clear,1299,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,2,['clear'],['clear']
Usability,"ixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6621,clear,clearCols,6621,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,2,['clear'],['clearCols']
Usability,"ixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index intern",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6157,clear,clearCols,6157,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,2,['clear'],['clearCols']
Usability,"izer_list< BaseData * > outputs)sofa::core::objectmodel::Base; backgroundValuesofa::component::io::mesh::VoxelGridLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bppsofa::component::io::mesh::VoxelGridLoaderprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::VoxelGridLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::VoxelGridLoadervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth) overridesofa::component::io::mesh::VoxelGridLoadervirtual; d_activeValuesofa::component::io::mesh::VoxelGridLoader; d_backgroundValuesofa::component::io::mesh::VoxelGridLoader; d_componentStatesofa::core::objectmodel::Base; d_dataResolutionsofa::component::io::mesh::VoxelGridLoader; d_filenamesofa::core::loader::BaseLoader; d_generateHexasofa::component::io::mesh::VoxelGridLoader; d_headerSizesofa::component::io::mesh::VoxelGridLoader; d_idxInRegularGridsofa::component::io::mesh::VoxelGridLoader; d_messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:2762,clear,clearLoggedMessages,2762,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jective::DirectionProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:24136,clear,clearConstraints,24136,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"jective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:33901,clear,clearIndices,33901,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"jectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear)sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; reinit() overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; removeConstraint(Index index)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; rem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:14774,clear,clear,14774,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['clear'],['clear']
Usability,"jectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMeshVolumeAndArea(Real &volume, Real &area, const helper::ReadAccessor< DataVecCoord > &x)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; computePressureAndStiffness(Real &pressure, Real &stiffness, Real currentVolume, Real v0)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protected; computePressureTriangles()sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; computeStatistics(const helper::ReadAccessor< DataVecCoord > &x)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::A",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:4937,clear,clearLoggedMessages,4937,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kdsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showSpringssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataTypes typedefsofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:5787,clear,clearLoggedMessages,5787,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4267,clear,clearEdgesAroundVertex,4267,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"jectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2174,clear,clearLoggedMessages,2174,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html:1955,clear,clearLoggedMessages,1955,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,11,['clear'],['clearLoggedMessages']
Usability,"k & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21645,clear,clearColBlock,21645,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['clear'],['clearColBlock']
Usability,"k (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, const Block &b);  ; t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5341,clear,clearColBlock,5341,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,3,"['Clear', 'clear']","['Clear', 'clearColBlock']"
Usability,"k (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; void addDiag (unsigned int bi, const Block &b);  ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; void addDiagDBlock (unsigned int bi, const DBlock &b);  ; void addDiagDValue (unsigned int bi, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:6227,clear,clearColBlock,6227,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,6,"['Clear', 'clear']","['Clear', 'clearColBlock']"
Usability,"k::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:4549,clear,clearConstraints,4549,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"k< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedTranslationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearIndices ();  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:4600,clear,clearIndices,4600,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"k< Multi2Mapping< In1, In2, Out >, State< In2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK >, sofa::core::objectmodel::MultiLink< DAGNode, DAGNode, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_DOUBLELINK >, sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>, and sofa::core::objectmodel::MultiLink< MyType, sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >, BaseLink::FLAG_DUPLICATE >. ◆ addPath(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::addPath ; (; const std::string & ; path). inline . ◆ begin(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::begin ; (; ); const. inline . ◆ clear(). template<class TOwnerType , class TDestType , unsigned TFlags> . void sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::clear ; (; ). inline . ◆ empty(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::empty ; (; ); const. inline . ◆ end(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::end ; (; ); const. inline . ◆ getDestClass(). template<class TOwnerType , class TDestType , unsigned TFlags> . const BaseClass* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getDestClass ; (; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseLink. ◆ getIndex(). template<class TOwnerType , class TDestType , unsigned TFlags> . DestType* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getIndex ; (; std::size_t ; index); const. inlineprotected . ◆ getOwnerBase(). template<class TOwnerType , class TDestType , unsigned TFlags> . sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:31490,clear,clear,31490,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['clear'],['clear']
Usability,"l >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; CompressedMatrix typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; copyFrom(const CompressedRowSparseMatrix< type::Mat< Nout, Nin, AnyReal > > &crs)sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >inline; createBlock(unsigned column, const Block &b)sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7859,clear,clearRowsCols,7859,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,2,['clear'],['clearRowsCols']
Usability,"l);  ; SReal element (Index i, Index j) const override;  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:5956,Clear,Clear,5956,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['Clear'],['Clear']
Usability,"l)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturePointervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; enabledsofa::gl::component::shader::OglTexturePo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:2571,clear,clearVisual,2571,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,2,['clear'],['clearVisual']
Usability,"l, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:3354,clear,clearVisual,3354,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,2,['clear'],['clearVisual']
Usability,"l, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:3354,clear,clearVisual,3354,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,2,['clear'],['clearVisual']
Usability,"l, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:3354,clear,clearVisual,3354,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,2,['clear'],['clearVisual']
Usability,"l::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinesta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4173,clear,clearEdges,4173,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"l::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:2783,clear,clearLoggedMessages,2783,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['clear'],['clearLoggedMessages']
Usability,"l::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildFileName()sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >protected; bwdInit() overridesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDx(Data< VecDeriv > &dx, const Data< VecDeriv > &f, const std::list< int > &activeDofs)sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >protected; computeMotionCorrection(const core::ConstraintParams *, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; constraint_Dsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:5613,clear,clearLoggedMessages,5613,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"l::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4077,clear,clear,4077,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clear']
Usability,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2213,Simpl,SimpleDataWidget,2213,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,1,['Simpl'],['SimpleDataWidget']
Usability,"l; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadState; d_intervalsofa::component::playback::ReadState; d_loopsofa::component::playback::ReadState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rotationsofa::component::playback::ReadState; d_scalePossofa::component::playback::ReadState; d_shiftsofa::component::playback::ReadState; d_translationsofa::component::playback::ReadState; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html:1949,clear,clearLoggedMessages,1949,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:2485,clear,clearLoggedMessages,2485,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,4,['clear'],['clearLoggedMessages']
Usability,"lParams *, linearalgebra::BaseVector *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html:2446,clear,clearLoggedMessages,2446,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
