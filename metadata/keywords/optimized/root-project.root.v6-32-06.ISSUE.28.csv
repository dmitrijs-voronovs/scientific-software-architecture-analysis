quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,"t main() {; collection_entry_default();; return 0;; }; ```. This works reasonably as expected, with the following output:; ```; {; ""particles"": [{""energy"": 1}]; }; ```. However, a user may want to create non-default entries, ie `auto entry = writer->CreateEntry();` and then calling `writer->Fill(*entry);`. <details>; <summary>Full code example</summary>. ```c++; #include <ROOT/REntry.hxx>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>. using ROOT::Experimental::REntry;; using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleReader;; using ROOT::Experimental::RNTupleWriter;. static void write() {; auto particleModel = RNTupleModel::Create();; auto energy = particleModel->MakeField<float>(""energy"");. auto model = RNTupleModel::CreateBare();; auto particles = model->MakeCollection(""particles"", std::move(particleModel));. auto writer = RNTupleWriter::Recreate(std::move(model), ""events"", ""collection_entry.root"");; auto entry = writer->CreateEntry();. *energy = 1.0;; particles->Fill();; writer->Fill(*entry);; }. void collection_entry() {; write();. auto reader = RNTupleReader::Open(""events"", ""collection_entry.root"");; reader->Show(0);; }. int main() {; collection_entry();; return 0;; }; ```. </details>. This doesn't work right now, even for a single entry as in the code example above; when opening the ntuple, the code crashes:; ```; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```. This is because `RNTupleModel::CreateEntry()` calls; https://github.com/root-project/root/blob/d52f98f56341edaa43bf03c16d218176afc5a17b/tree/ntuple/v7/src/RNTupleModel.cxx#L363-L365; for all top-level field. Conceptually it's possible to fix by applying the same logic as `RNTupleModel::MakeCollection`, something like; ```diff; diff --git a/tree/ntuple/v7/src/RNTupleModel.cxx b/tree/ntuple/v7/src/RNTupleModel.cxx; index c652608bf1..ed02338e2b 100644; --- a/tree/ntuple/v7/src/RNTupleModel.cxx; +++",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14642:1857,energy,energy,1857,https://root.cern,https://github.com/root-project/root/issues/14642,1,['energy'],['energy']
Energy Efficiency,"t of the errors coming from `TInterpreter` that were leaving the dask worker in a bad state and thus breaking the scheduler too. But then, I updated to `distributed==2022.8.1` and they were not present. So I went on and I used `git bisect` starting from `2022.8.0` going onwards. . I was able to identify the following scenarios, depending on a combination of the status of ROOT and the version of dask `distributed` module:. * ROOT current master, with `distributed==2022.8.0`: errors like shown shown above, both those coming from `TInterepreter::Calc` from RDF and those coming from dask about `cannot schedule new futures after shutdown` that I mentioned in this comment.; * ROOT current master, with `distributed==2022.8.1`: **No more errors about futures after shutdown**. The errors from `TInterpreter::Calc` remain; * ROOT master+fix, with `distributed==2022.8.0`: **No more errors from `TInterpreter::Calc`**, but still errors from dask about `cannot schedule new futures after shutdown` **and also the segfaults with Python-only stacktrace** that I wrote in a previous comment; * ROOT master+fix, with `distributed==2022.8.1`: **No errors at all!**. So it seems that a mix of adding the fix suggested by Philippe (a `R_LOCKGUARD` in `TClingClassInfo::IsEnum`) plus updating to `distributed==2022.8.1` fixes all our problems. ## More details about the `distributed` versions. Thanks to the `git bisect` I could identify more closely the sources of errors on the dask side. For the very weird Python stacktrace leading to a full segfault, I found that https://github.com/dask/distributed/pull/6684 seems to fix it. In test runs where the segfault is triggered, before getting it (and the Python stacktrace), I can see these lines ; ```; RuntimeError: cannot schedule new futures after shutdown; Exception in thread AsyncProcess Dask Worker process (from Nanny) watch process join:; Traceback (most recent call last):; File ""/usr/lib64/python3.10/threading.py"", line 1016, in _bootstrap_inner;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515#issuecomment-1272186236:2340,schedul,schedule,2340,https://root.cern,https://github.com/root-project/root/issues/11515#issuecomment-1272186236,1,['schedul'],['schedule']
Energy Efficiency,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12710:3247,efficient,efficient,3247,https://root.cern,https://github.com/root-project/root/issues/12710,1,['efficient'],['efficient']
Energy Efficiency,"t-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:426:3; #100 0x0000000008fdde5f RunSafelyOnThread_Dispatch(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:498:29; #101 0x0000000008fddeb5 llvm::thread::thread<void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #102 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #103 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1164:7; #104 0x00000000040e46c6 compileModule(clang::CompilerInstance&, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1225:12; #105 0x00000000040e1108 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1305:11; #106 0x00000000040e0bb4 clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) /scratch/greenc/test-products/root/v6_27_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:52075,green,greenc,52075,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"t-linux/include""; ignoring nonexistent directory ""/include""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include""; ignoring duplicate directory ""/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include""; ignoring duplicate directory ""/usr/include""; as it is a non-system directory that duplicates a system directory; #include ""..."" search starts here:; .; #include <...> search starts here:; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/cont/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/gui/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:9866,green,greenc,9866,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,5,['green'],['greenc']
Energy Efficiency,"t-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; clang version 13.0.0; Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.5; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Selected GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ignoring nonexistent directory ""/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directory ""/include""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude""; ignoring duplicate directory ""/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include""; ignoring duplicate directory ""/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include""; ignoring duplicate directory ""/usr/include""; as it is a non-system directory that duplicates a system directory; #include ""..."" search starts here:; .; #include <...> search starts here:; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/cont/inc; /scratch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:8975,green,greenc,8975,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,t-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:81:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithBranch::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:81:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithBranch::operator[](std::size_t) const’ is not a literal type . ### Warnings:; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAddPdf.cxx:860:0: warning: ignoring #pragma omp simd [-Wunknown-pragmas] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-525174380:1442,Watt,Wattributes,1442,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-525174380,1,['Watt'],['Wattributes']
Energy Efficiency,t/build/workspace/root-pullrequests-build/build/include/RooAbsData.h:229:7: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:26:09.018Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooFitLegacy/RooMinuit.h:151:3: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:26:41.386Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:26:41.641Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:26:59.417Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:27:01.864Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:27:04.069Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:27:07.029Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:27:11.035Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:27:15.528Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 175 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361260560:2371,Watt,Wattributes,2371,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361260560,5,['Watt'],['Wattributes']
Energy Efficiency,t/build/workspace/root-pullrequests-build/build/include/RooAbsData.h:229:7: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:08:46.140Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooFitLegacy/RooMinuit.h:151:3: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:09:18.031Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:18.297Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:22.525Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:24.540Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:24.540Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:24.802Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:24.802Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:09:24.802Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 220 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1361624839:1443,Watt,Wattributes,1443,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1361624839,5,['Watt'],['Wattributes']
Energy Efficiency,t/root_src/io/xml/src/TBufferXML.cxx:984; 63: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 64: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 65: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; 66: Dereference of null pointer in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; /opt/root_src/io/xml/src/TBufferXML.cxx:2535:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 2: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 4: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 6: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 7: Memory is allocated in /opt/root_src/io/xml/src/TBufferXML.cxx:2557; 8: Use of zero-allocated memory in /opt/root_src/io/xml/src/TBufferXML.cxx:2558; /opt/root_src/io/xml/src/TXMLEngine.cxx:134:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'res' is not equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 2: Left side of '||' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1449; 3: Assuming 'xmlnode' is not equal t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:128018,allocate,allocated,128018,https://root.cern,https://github.com/root-project/root/issues/7431,1,['allocate'],['allocated']
Energy Efficiency,t/root_src/io/xml/src/TXMLEngine.cxx:1816; 7: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1816; 8: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1902; 9: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1906; 10: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1906; 11: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 12: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1946; 13: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 14: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2102; 15: Assuming the condition is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 16: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2110; 17: Assuming 'len' is > 0 in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 18: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2113; 19: Calling 'TXMLEngine::AllocateNode' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 20: Memory is allocated in /opt/root_src/io/xml/src/TXMLEngine.cxx:1515; 21: Assuming 'parent' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 22: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:1525; 23: Returned allocated memory in /opt/root_src/io/xml/src/TXMLEngine.cxx:2115; 24: Assuming 'colon' is equal to null in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 25: Left side of '&&' is false in /opt/root_src/io/xml/src/TXMLEngine.cxx:2124; 26: Taking false branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2130; 27: Assuming the condition is true in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 28: Taking true branch in /opt/root_src/io/xml/src/TXMLEngine.cxx:2134; 29: Potential leak of memory pointed to by 'node' in /opt/root_src/io/xml/src/TXMLEngine.cxx:2135; /opt/root_src/io/xml/src/TXMLFile.cxx:203:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Va,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:132197,Allocate,AllocateNode,132197,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Allocate'],['AllocateNode']
Energy Efficiency,"t/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; #0 0x0000000009107d3a llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107eeb PrintStackT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:24706,green,greenc,24706,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,t/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; '/usr/include/module.modulemap' does not exist. Mounting '/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'; Loading '/scratch/gree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:11046,green,greenc,11046,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"t/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; clang -cc1 version 13.0.0 based upon LLVM 13.0.0 default target x86_64-unknown-linux-gnu; ignoring nonexistent directory ""/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:15313,green,greenc,15313,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,3,['green'],['greenc']
Energy Efficiency,"t/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/GeneratePCH.cpp:68:14; #18 0x00000000042038e3 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/MultiplexConsumer.cpp:291:23; #19 0x00000000043aecc6 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:178:12; #20 0x000000000419c5ec clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:1060:1; #21 0x000000000419c01c clang::FrontendAction::Execute() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:955:7; #22 0x00000000040de3f6 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:974:23; #23 0x00000000040e52dd compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1168:7; #24 0x00000000040e52a5 void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:30359,green,greenc,30359,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,tUtil.cxx.o ; - [2020-10-08T14:41:18.379Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.379Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.379Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' . And 16 more. ### Warnings:; - [2020-10-08T14:41:00.294Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-705617729:1353,Reduce,Reduce,1353,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-705617729,1,['Reduce'],['Reduce']
Energy Efficiency,"t\interpreter\llvm\src\tools\clang\lib\Analysis\CFGStmtMap.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-21T12:19:43.841Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(348,62): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\CXXInheritance.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-09-21T12:19:44.116Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(166,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SSAUpdaterBulk.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-21T12:19:44.116Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/Optional.h(146,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGRRList.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-21T12:19:44.116Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/SelectionDAGNodes.h(1900,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ResourcePriorityQueue.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] . And 121 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11401#issuecomment-1253634415:3642,Schedul,ScheduleDAGRRList,3642,https://root.cern,https://github.com/root-project/root/pull/11401#issuecomment-1253634415,1,['Schedul'],['ScheduleDAGRRList']
Energy Efficiency,t_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is false. Execution continues on line 472 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:472; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:478; 28: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:479; 29: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:479; 30: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:480; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368:33: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:10165,allocate,allocated,10165,https://root.cern,https://github.com/root-project/root/issues/7526,1,['allocate'],['allocated']
Energy Efficiency,t_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is false. Execution continues on line 371 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 23: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 24: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 25: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:371; 26: Assuming the condition is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 27: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:377; 28: Assuming 'j' is < field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:378; 29: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:378; 30: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:379; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h:83:39: warning: Use of memory after it is freed [clang-analyzer-cplusplus.NewDelete]; 1: Calling 'BinaryTree::Read' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:206; 2: Assuming 'currentNode' is not equal to null in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:174; 3: Taking false branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:174; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:179; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:180; 6: Taking true branch in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:180; 7: Memory is released in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:181; 8: Calling 'BinaryTree::SetTotalTreeDepth' in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:182; 9: 'n' is equal to NULL in /opt/root_src/tmva/tmva/src/BinaryTree.cxx:215; 10: Taking true branch in /opt/root_src/tmva/tmva/src/BinaryTree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:20397,allocate,allocated,20397,https://root.cern,https://github.com/root-project/root/issues/7526,1,['allocate'],['allocated']
Energy Efficiency,tage1/src/rootcling_stage1.cxx:46:4; #123 0x00007ff582580555 __libc_start_main (/lib64/libc.so.6+0x22555); #124 0x00000000031d8aa9 _start (/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1+0x31d8aa9); PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0.	Program arguments: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1 -v4 -f G__Core.cxx -cxxmodule -s /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99 -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORRECT_ISO_CPP_WCHAR_H_PROTO -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/x86_64-unknown-linux-gnu/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:58138,green,greenc,58138,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,tch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04 -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/externals -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORRECT_ISO_CPP_WCHAR_H_PROTO -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/x86_64-unknown-linux-gnu/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/include -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:2473,green,greenc,2473,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,2,['green'],['greenc']
Energy Efficiency,"td::allocator<char> >, int> > > const&, char const**, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/src/TROOT.cxx:2557:15; #10 0x7f8823177c7c in (anonymous namespace)::TriggerDictionaryInitialization_libHist_Impl() /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx:15989:7; #11 0x7f8822d01f29 in (anonymous namespace)::DictInit::DictInit() /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx:15997:7; #12 0x7f8822d01f29 in __cxx_global_var_init.284 /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx:15999:5; #13 0x7f8822d01f29 in _GLOBAL__sub_I_G__Hist.cxx /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/hist/hist/G__Hist.cxx; #14 0x7f88584a3059 in call_init.part.0 /usr/src/debug/glibc-2.28-220.el8.x86_64/elf/dl-init.c:72:3. previously allocated by thread T1 here:; #0 0x511128 in operator new(unsigned long) (/home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/bin/root.exe+0x511128) (BuildId: 38590f4d5d08c122d0e0d8161ece8eeec84b2e5e); #1 0x7f8857aacabe in TStorage::ObjectAlloc(unsigned long) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/src/TStorage.cxx:292:19; #2 0x7f8857c82ee9 in TObject::operator new(unsigned long) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TObject.h:181:46; #3 0x7f8857c82ee9 in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5877:11; #4 0x7f8857cb19f9 in ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/Rtypes.h:179:17; #5 0x7f885",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:11443,allocate,allocated,11443,https://root.cern,https://github.com/root-project/root/issues/12715,1,['allocate'],['allocated']
Energy Efficiency,"ter shutdown')>); Traceback (most recent call last):; File ""/home/vpadulan/.local/lib/python3.10/site-packages/tornado/ioloop.py"", line 741, in _run_callback; ret = callback(); File ""/home/vpadulan/.local/lib/python3.10/site-packages/tornado/ioloop.py"", line 765, in _discard_future_result; future.result(); RuntimeError: cannot schedule new futures after shutdown; ```. Initially I thought these errors were just a by-product of the errors coming from `TInterpreter` that were leaving the dask worker in a bad state and thus breaking the scheduler too. But then, I updated to `distributed==2022.8.1` and they were not present. So I went on and I used `git bisect` starting from `2022.8.0` going onwards. . I was able to identify the following scenarios, depending on a combination of the status of ROOT and the version of dask `distributed` module:. * ROOT current master, with `distributed==2022.8.0`: errors like shown shown above, both those coming from `TInterepreter::Calc` from RDF and those coming from dask about `cannot schedule new futures after shutdown` that I mentioned in this comment.; * ROOT current master, with `distributed==2022.8.1`: **No more errors about futures after shutdown**. The errors from `TInterpreter::Calc` remain; * ROOT master+fix, with `distributed==2022.8.0`: **No more errors from `TInterpreter::Calc`**, but still errors from dask about `cannot schedule new futures after shutdown` **and also the segfaults with Python-only stacktrace** that I wrote in a previous comment; * ROOT master+fix, with `distributed==2022.8.1`: **No errors at all!**. So it seems that a mix of adding the fix suggested by Philippe (a `R_LOCKGUARD` in `TClingClassInfo::IsEnum`) plus updating to `distributed==2022.8.1` fixes all our problems. ## More details about the `distributed` versions. Thanks to the `git bisect` I could identify more closely the sources of errors on the dask side. For the very weird Python stacktrace leading to a full segfault, I found that https://github.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515#issuecomment-1272186236:1985,schedul,schedule,1985,https://root.cern,https://github.com/root-project/root/issues/11515#issuecomment-1272186236,1,['schedul'],['schedule']
Energy Efficiency,"ter/Interpreter.cpp:295:24; #119 0x000000000334d2fa cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/cling/include/cling/Interpreter/Interpreter.h:364:44; #120 0x000000000333797d RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/dictgen/src/rootcling_impl.cxx:4330:33; #121 0x0000000003344a4a ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/dictgen/src/rootcling_impl.cxx:6165:16; #122 0x00000000034038ca main /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #123 0x00007ff582580555 __libc_start_main (/lib64/libc.so.6+0x22555); #124 0x00000000031d8aa9 _start (/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1+0x31d8aa9); PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.; Stack dump:; 0.	Program arguments: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1 -v4 -f G__Core.cxx -cxxmodule -s /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99 -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:57288,green,greenc,57288,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,terWithBranch::operator[](std::size_t) const’ is not a literal type ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:81:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithBranch::operator[](std::size_t) const’ is not a literal type . ### Warnings:; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAddPdf.cxx:860:0: warning: ignoring #pragma omp simd [-Wunknown-pragmas] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] ; - /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsPdf.h:200:63: warning: ‘deprecated’ attribute directive ignored [-Wattributes] . And 109 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-525174380:1607,Watt,Wattributes,1607,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-525174380,7,['Watt'],['Wattributes']
Energy Efficiency,test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/cont/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/gui/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/meta/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/clib/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/rint/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/zip/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/thread/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/textinput/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/clingutils/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/v7/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/v7/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThrea,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:4328,green,greenc,4328,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,2,['green'],['greenc']
Energy Efficiency,"test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:4013:7; #39 0x0000000008abac44 clang::Lexer::Lex(clang::Token&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3228:8; #40 0x0000000008b4686f clang::Preprocessor::Lex(clang::Token&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:931:21; #41 0x00000000043ce55a clang::Parser::TryConsumeToken(clang::tok::TokenKind) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/include/clang/Parse/Parser.h:532:5; #42 0x00000000044ab797 clang::Parser::ExpectAndConsumeSemi(unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:162:7; #43 0x00000000043be923 clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::SourceLocation*, clang::Parser::ForRangeInit*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:2151:7; #44 0x00000000044b103f clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1146:10; #45 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #46 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:98",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:36156,green,greenc,36156,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729:12; #56 0x00000000044adce3 clang::Parser::ParseFirstTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:601:8; #57 0x00000000043aeb42 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:157:15; #58 0x000000000419c5ec clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:1060:1; #59 0x000000000419c01c clang::FrontendAction::Execute() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:955:7; #60 0x00000000040de3f6 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:974:23; #61 0x00000000040e52dd compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1168:7; #62 0x00000000040e52a5 void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:40357,green,greenc,40357,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729:12; #91 0x00000000044adce3 clang::Parser::ParseFirstTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:601:8; #92 0x00000000043aeb42 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:157:15; #93 0x000000000419c5ec clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:1060:1; #94 0x000000000419c01c clang::FrontendAction::Execute() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:955:7; #95 0x00000000040de3f6 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:974:23; #96 0x00000000040e52dd compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1168:7; #97 0x00000000040e52a5 void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:49588,green,greenc,49588,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,thanks @bluehood . This is now added - I'll merge as soon as the badges are green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1497#issuecomment-358738269:76,green,green,76,https://root.cern,https://github.com/root-project/root/pull/1497#issuecomment-358738269,1,['green'],['green']
Energy Efficiency,that run only with the schedule trigger.; It makes sense to merge only after asan is fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15856:23,schedul,schedule,23,https://root.cern,https://github.com/root-project/root/pull/15856,1,['schedul'],['schedule']
Energy Efficiency,the condition is false in /opt/root_src/core/base/src/TString.cxx:1916; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1923; 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:173; 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:173; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:177; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:177; 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1923; 40: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:1933:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:132825,allocate,allocated,132825,https://root.cern,https://github.com/root-project/root/issues/7412,1,['allocate'],['allocated']
Energy Efficiency,the condition is false in /opt/root_src/core/base/src/TString.cxx:1918; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918; 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925; 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174; 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178; 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925; 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928; 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935; /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-796268286:22840,allocate,allocated,22840,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-796268286,1,['allocate'],['allocated']
Energy Efficiency,"the goal of this commit is to avoid too many allocations/deallocations in two cases:; 1. sophisticated expressions manipulating RVec<T> instances: churn kicks in due to temporaries; 2. RDataFrame runs with Defines returning RVec<T>s which are saved within custom columns via a copy. For every event, the old value is deallocated and the new one allocated. This change implements a thread local stack of buffers in the RAdoptAllocator.; If the allocation is smaller than RAdoptAllocator<T>::fgBuffersSize, before allocating; a fresh region of memory through the stl allocator, a pop from the aforementioned stack is tried.; At deallocation time, the memory taken from the stak, is put back in the stack.; In some sense, this is an optimisation for short (defined by RAdoptAllocator<T>::fgBuffersSize) RVec<T>s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3467:345,allocate,allocated,345,https://root.cern,https://github.com/root-project/root/pull/3467,1,['allocate'],['allocated']
Energy Efficiency,"the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we've demonstrated enough utility that it was time to start talking about merging. (With many thanks to @jpivarski for driving this work home with his work on a python interface!)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:2045,efficient,efficient,2045,https://root.cern,https://github.com/root-project/root/pull/943,1,['efficient'],['efficient']
Energy Efficiency,"this PR aims to reduce the contention in TClass::GetBaseClassOffset.; Zero is returned as offset value if the class that the TClass instance represents; and all of its ancestors has no multiple inheritance.; This information can be checked without accessing the interpreter, and therewith; acquiring the global lock, because it now originally resides in the dictionaries.; The information is put in the dictionaries by rootcling, which explores the; inheritance chain *at build time*. The expectation is to reduce *considerably* contention due to accesses to the interpreter and caches of offsets in the TClassInfo instances. Potentially, this mechanism can be upgraded inserting in the dictionaries; not only the aforementioned information, but also the offsets to all the; bases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319:16,reduce,reduce,16,https://root.cern,https://github.com/root-project/root/pull/2319,2,['reduce'],['reduce']
Energy Efficiency,"this is a repeat of https://root-forum.cern.ch/t/std-bitset-streamer-endianness-issue/41529. ---. hi there,. I was adding support for reading/writing `std::bitset<N>` to [groot](https://go-hep.org/x/hep/groot) when I noticed the following behaviour:. ```; $> cat ./Event.h; #ifndef MYEVT_H; #define MYEVT_H 1. #include <bitset>. struct Event {; 	std::bitset<16> Bs;; };. #endif // MYEVT_H. $> cat ./run.C; #include ""Event.h"". void run() {; 	gSystem->Load(""./libEvent.so"");. 	auto f = TFile::Open(""std-bitset.root"", ""RECREATE"");; 	auto t = new TTree(""tree"", ""tree"");. 	int bufsize = 32000;; 	int splitlvl = 99;. 	Event e;; 	e.Bs = std::bitset<16>(""0001010111101010"");. 	t->Branch(""evt"", &e, bufsize, splitlvl);. 	t->Fill();; 	f->Write();; 	f->Close();. 	exit(0);; }. $> root -b -q ./run.C; ```. reading back the file with `groot`, I see the following bit patterns:. ```; $> root-dump testdata/std-bitset.root ; >>> file[testdata/std-bitset.root]; key[000]: tree;1 ""tree"" (TTree); [000][evt]: {[0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0]}; ```. _ie:_ it seems endianness of the bitset isn't handled when writing the bitset (and it's whatever it happens to be on the writing machine).; (I was expecting: `[0 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0]` as the on-disk bytes). or are `bitset<N>` values always little-endian encoded?. I was also a bit surprised to see a `std::bitset<N>` to take (N+4)bytes on disk (instead of ""just"" N**bits** +4bytes, or, even, just N**bits**). is there an underlying reason I am missing here? (it's also quite possible I am completely mistaken, of course). thx,; -s; ___; _Please read [tips for efficient and successful posting](https://root-forum.cern.ch/t/tips-for-efficient-and-successful-posting/28292) and [posting code](https://root-forum.cern.ch/t/posting-code-read-this-first/28293)_. ROOT Version: 6.22/02; Built for linuxx8664gcc on Aug 17 2020, 12:46:52; From tags/v6-22-02@v6-22-02; ___",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6412:1603,efficient,efficient,1603,https://root.cern,https://github.com/root-project/root/issues/6412,2,['efficient'],"['efficient', 'efficient-and-successful-posting']"
Energy Efficiency,thisroot.sh: refactor with shellcheck; thisroot.fish: `dirname` -> `path dirname` to reduce deps,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11557:85,reduce,reduce,85,https://root.cern,https://github.com/root-project/root/pull/11557,1,['reduce'],['reduce']
Energy Efficiency,"tion=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:5424,green,greenc,5424,https://root.cern,https://github.com/root-project/root/pull/5462,1,['green'],['greenc']
Energy Efficiency,to 'Reduce' ; - [2020-10-08T14:41:18.379Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.379Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' . And 16 more. ### Warnings:; - [2020-10-08T14:41:00.294Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:10.436Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-705617729:1555,Reduce,Reduce,1555,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-705617729,1,['Reduce'],['Reduce']
Energy Efficiency,to 'Reduce' ; - [2020-10-08T14:41:18.379Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' . And 16 more. ### Warnings:; - [2020-10-08T14:41:00.294Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:10.436Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:10.699Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:13.014Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused param,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-705617729:1757,Reduce,Reduce,1757,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-705617729,1,['Reduce'],['Reduce']
Energy Efficiency,to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:363:30: error: no matching member function for call to 'Reduce' ; - [2020-10-08T14:41:18.380Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/imt/inc/ROOT/TThreadExecutor.hxx:473:14: error: no matching member function for call to 'Reduce' . And 16 more. ### Warnings:; - [2020-10-08T14:41:00.294Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:10.436Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:10.699Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:13.014Z] include/ROOT/TExecutorCRTP.hxx:205:64: warning: unused parameter 'redfunc' [-Wunused-parameter] ; - [2020-10-08T14:41:13.273Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/inc/ROOT/TExecutorCRTP.hxx:205:64: warning: unused param,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327#issuecomment-705617729:1959,Reduce,Reduce,1959,https://root.cern,https://github.com/root-project/root/pull/6327#issuecomment-705617729,1,['Reduce'],['Reduce']
Energy Efficiency,"torTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:; ```diff; diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; index 403b88ac3a..5e1581f098 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; @@ -131,7 +131,8 @@ protected:; ; unsigned : NumStmtBits;; ; - unsigned NumStmts : 32 - NumStmtBits;; + unsigned WasReplaced : 1;; + unsigned NumStmts : 32 - (NumStmtBits + 1);; ; /// The location of the opening ""{"".; SourceLocation LBraceLoc;; @@ -1328,6 +1329,7 @@ public:; explicit CompoundStmt(SourceLocation Loc); : Stmt(CompoundStmtClass), RBraceLoc(Loc) {; CompoundStmtBits.NumStmts = 0;; + CompoundStmtBits.WasReplaced = 0;; CompoundStmtBits.LBraceLoc = Loc;; }; ; diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; index 0a4d403106..cc8c6888b8 100644; --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,; SourceLocation RB); : Stmt(CompoundStmtClass), RBraceLoc(RB) {; CompoundStmtBits.NumStmts = Stmts.size();; + CompoundStmtBits.WasReplaced = 0;; setStmts(Stmts);; CompoundStmtBits.LBraceLoc = LB;; }; @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,; void *Mem =; C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));; CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());; + New->CompoundStmtBits.WasReplaced = 0;; New->CompoundStmtBits.NumStmts = NumStmts;; return New;; }; ```; which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-797417462:2086,Allocate,Allocate,2086,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-797417462,1,['Allocate'],['Allocate']
Energy Efficiency,"tps://github.com/root-project/root/pull/13269 (to support LLVM 16, cf. https://github.com/vgvassilev/clad/pull/589); * [x] https://github.com/root-project/root/pull/13238; * [x] https://github.com/root-project/root/pull/13310; * [x] https://github.com/root-project/roottest/pull/989; * [x] https://github.com/root-project/root/pull/13335; * [x] https://github.com/root-project/roottest/pull/994; * [x] https://github.com/root-project/root/pull/13366; * [x] https://github.com/root-project/root/pull/13448; * [x] https://github.com/root-project/root/pull/13477; * [x] https://github.com/root-project/root/pull/13482; * [x] https://github.com/root-project/root/pull/13782 and / or https://github.com/root-project/root/pull/13785; * [x] https://github.com/root-project/root/pull/13565 (or at least the last commit to remove `isInstantiatedInPCH`); * [x] https://github.com/root-project/root/pull/14110. Things to check:; * [x] Builds on all platforms; * [x] Passes all ROOT tests on all platforms; * [x] Passes Cling test suite (at least on Linux); * [x] Check increase in resource consumption:; * [x] Build directory in `Release` configuration; * [x] Install directory in `Release` configuration; * [x] Size of module files in particular; * [x] Memory requirement; * [x] CPU requirement (time to run all tests). #### Comparison of resource consumption on AlmaLinux 8, GCC 8.5.0, `CMAKE_BUILD_TYPE=Release`. | | `master` | `llvm16` |; | --- | --- | --- |; | `build` (slightly older version) | 1706284 KB = 1.7 GB | 1766156 KB = 1.7 GB |; | `build` (with `testing` + `roottest`, before `ctest`) | 2286436 KB = 2.2 GB | 2366928 KB = 2.3 GB |; | `install` | 704236 KB = 688 MB | 701032 KB = 685 MB |; | `lib/*.pcm` | 312624 KB = 306 MB | 309560 = 303 MB |; | Memory for `./bin/root.exe -q` | 204020 kbytes | 214672 kbytes |; | Memory for `./bin/root.exe -q -e ""std::vector<int> v""` | 235580 kybtes | 251304 kbytes |; | CPU (first `ctest -j12`) | 1284s | 1293s |; | CPU (second `ctest -j12`) | 914s | 911s |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273:1273,consumption,consumption,1273,https://root.cern,https://github.com/root-project/root/pull/13273,2,['consumption'],['consumption']
Energy Efficiency,tribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T20:43:12.908Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T20:43:12.908Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T20:43:17.798Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:19.683Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:19.683Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:19.938Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:22.079Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:23.260Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:23.260Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1362098739:1404,Watt,Wattributes,1404,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1362098739,1,['Watt'],['Wattributes']
Energy Efficiency,tribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:12:14.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:12:14.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:12:19.042Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:20.743Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:20.743Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:24.287Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:25.723Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:26.902Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:27.157Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1363177370:1404,Watt,Wattributes,1404,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1363177370,1,['Watt'],['Wattributes']
Energy Efficiency,tribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11966#issuecomment-1368247534:1404,Watt,Wattributes,1404,https://root.cern,https://github.com/root-project/root/pull/11966#issuecomment-1368247534,1,['Watt'],['Wattributes']
Energy Efficiency,tribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T09:17:28.003Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T09:17:28.003Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-06T09:17:35.144Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:35.700Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:35.700Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:38.720Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:39.845Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:42.039Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:42.040Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11980#issuecomment-1373419499:1404,Watt,Wattributes,1404,https://root.cern,https://github.com/root-project/root/pull/11980#issuecomment-1373419499,1,['Watt'],['Wattributes']
Energy Efficiency,tribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T14:24:13.731Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T14:24:13.732Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T14:24:18.883Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:20.618Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:20.618Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:21.806Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:22.401Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:23.843Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:25.534Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985#issuecomment-1375754482:1404,Watt,Wattributes,1404,https://root.cern,https://github.com/root-project/root/pull/11985#issuecomment-1375754482,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:16.232Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:16.502Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:16.502Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:18.447Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:20.384Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:21.199Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 298 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162988/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162988/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162988/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1361581090:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1361581090,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-21T16:43:43.887Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:43:44.142Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:43:44.397Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:43:44.397Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:43:44.397Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:43:44.397Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162995/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162995/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162995/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11952#issuecomment-1361687422:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11952#issuecomment-1361687422,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-21T17:59:24.009Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:59:24.267Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:59:24.267Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:59:24.545Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:59:24.545Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:59:24.545Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163017/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163017/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163017/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1361837054:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1361837054,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-21T18:11:14.418Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:11:14.418Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:11:14.418Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:11:14.418Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:11:14.418Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:11:14.674Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163024/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163024/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163024/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1361857370:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1361857370,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:19.683Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:19.683Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:19.938Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:22.079Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:23.260Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:43:23.260Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163031/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163031/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163031/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1362098739:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1362098739,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-22T00:36:26.468Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T00:36:28.343Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T00:36:30.201Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T00:36:31.322Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T00:36:32.261Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T00:36:33.448Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163059/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163059/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163059/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1362277449:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1362277449,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:20.743Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:20.743Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:24.287Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:25.723Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:26.902Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:12:27.157Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163087/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163087/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163087/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1363177370:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1363177370,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:15.826Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:16.096Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:16.096Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:18.235Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:19.988Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:20.918Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163094/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163094/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163094/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1363203941:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1363203941,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:37.149Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:37.404Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:37.404Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:39.256Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:40.617Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:42.500Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163108/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163108/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163108/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265#issuecomment-1363252156:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11265#issuecomment-1363252156,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-22T19:16:29.452Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T19:16:30.827Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T19:16:31.645Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T19:16:31.645Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T19:16:33.530Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T19:16:33.530Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163115/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163115/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163115/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1363284543:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1363284543,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-23T02:52:15.690Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:52:15.690Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:52:15.946Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:52:15.946Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:52:15.946Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:52:15.946Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163129/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163129/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163129/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11958#issuecomment-1363574220:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11958#issuecomment-1363574220,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:32.204Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:32.204Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:32.204Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:32.204Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:32.204Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:32.463Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163136/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163136/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163136/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11948#issuecomment-1364145689:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11948#issuecomment-1364145689,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-27T15:08:30.759Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:08:30.759Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:08:31.023Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:08:31.024Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:08:31.024Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:08:31.024Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163171/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163171/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163171/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10210#issuecomment-1365989640:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/10210#issuecomment-1365989640,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:09.141Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:09.141Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:09.399Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:09.399Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:09.399Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:09.399Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163206/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163206/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163206/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11962#issuecomment-1366257400:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11962#issuecomment-1366257400,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:34.244Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:34.501Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:34.501Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:34.501Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:34.501Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:34.501Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163213/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163213/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163213/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11963#issuecomment-1366436079:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11963#issuecomment-1366436079,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-31T15:47:25.895Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163235/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163235/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163235/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11966#issuecomment-1368247534:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11966#issuecomment-1368247534,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-01T23:16:31.344Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-01T23:16:31.344Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-01T23:16:31.600Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-01T23:16:31.600Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-01T23:16:31.600Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-01T23:16:31.600Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163277/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163277/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163277/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11953#issuecomment-1368567354:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11953#issuecomment-1368567354,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-02T12:19:09.845Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T12:19:10.102Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T12:19:10.102Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T12:19:10.102Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T12:19:10.102Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T12:19:10.102Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163298/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163298/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163298/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1368918594:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1368918594,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-02T13:54:41.104Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T13:54:41.360Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T13:54:41.618Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T13:54:41.618Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T13:54:41.873Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-02T13:54:41.873Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163321/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163321/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163321/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9539#issuecomment-1368990012:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/9539#issuecomment-1368990012,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-03T12:47:10.757Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T12:47:14.222Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T12:47:16.062Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T12:47:17.499Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T12:47:18.875Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T12:47:18.875Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163328/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163328/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163328/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11969#issuecomment-1369768434:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11969#issuecomment-1369768434,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-03T15:55:34.043Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T15:55:34.298Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T15:55:34.298Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T15:55:34.298Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T15:55:34.298Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-03T15:55:34.298Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163335/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163335/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163335/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11970#issuecomment-1369965025:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11970#issuecomment-1369965025,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-04T14:41:43.839Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T14:41:43.839Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T14:41:43.839Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T14:41:43.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T14:41:43.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T14:41:43.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163342/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163342/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163342/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11972#issuecomment-1371049032:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11972#issuecomment-1371049032,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-04T16:15:13.515Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T16:15:13.515Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T16:15:13.515Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T16:15:13.515Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T16:15:13.515Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-04T16:15:13.515Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163356/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163356/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163356/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11973#issuecomment-1371163952:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11973#issuecomment-1371163952,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:56.703Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:56.703Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:57.262Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:57.262Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:58.623Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:59.183Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163377/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163377/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163377/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11976#issuecomment-1371972954:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11976#issuecomment-1371972954,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-05T09:05:39.958Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T09:05:39.958Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T09:05:40.213Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T09:05:40.213Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T09:05:40.213Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T09:05:40.213Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163384/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163384/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163384/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1371980486:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1371980486,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-05T16:32:25.986Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T16:32:25.986Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T16:32:25.986Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T16:32:25.986Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T16:32:25.986Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T16:32:25.986Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163391/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163391/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163391/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11978#issuecomment-1372479436:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11978#issuecomment-1372479436,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-06T08:55:07.610Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T08:55:07.865Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T08:55:07.865Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T08:55:07.866Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T08:55:08.121Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T08:55:08.121Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163419/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163419/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163419/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11976#issuecomment-1373389253:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11976#issuecomment-1373389253,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:35.700Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:35.700Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:38.720Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:39.845Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:42.039Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T09:17:42.040Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163412/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163412/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163412/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11980#issuecomment-1373419499:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11980#issuecomment-1373419499,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-06T13:52:43.223Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T13:52:43.223Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T13:52:43.478Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T13:52:43.478Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T13:52:43.479Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T13:52:43.479Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163461/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163461/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163461/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373706346:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373706346,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-06T16:08:31.086Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T16:08:31.342Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T16:08:31.342Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T16:08:31.342Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T16:08:31.342Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-06T16:08:31.343Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163468/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163468/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163468/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_red,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11982#issuecomment-1373873108:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11982#issuecomment-1373873108,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-07T20:09:26.259Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-07T20:09:26.259Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-07T20:09:26.522Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-07T20:09:26.522Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-07T20:09:26.522Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-07T20:09:26.522Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163489/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163489/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163489/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11984#issuecomment-1374603920:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11984#issuecomment-1374603920,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-08T12:04:33.362Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:04:33.362Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:04:33.362Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:04:33.362Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:04:33.362Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:04:33.362Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163503/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163503/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163503/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985#issuecomment-1374825490:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11985#issuecomment-1374825490,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-08T12:40:14.687Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:40:14.687Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:40:14.943Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:40:15.200Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:40:15.200Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T12:40:15.200Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163517/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163517/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163517/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11841#issuecomment-1374833100:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11841#issuecomment-1374833100,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-08T13:03:31.660Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T13:03:31.660Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T13:03:31.660Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T13:03:31.915Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T13:03:31.915Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-08T13:03:31.915Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163524/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163524/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163524/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11986#issuecomment-1374836810:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11986#issuecomment-1374836810,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-09T11:20:53.307Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:20:53.307Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:20:53.307Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:20:53.307Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:20:53.565Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:20:53.565Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163531/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163531/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163531/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985#issuecomment-1375509090:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11985#issuecomment-1375509090,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-09T11:54:32.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:54:32.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:54:32.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:54:32.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:54:32.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T11:54:32.840Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163538/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163538/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163538/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11988#issuecomment-1375548840:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11988#issuecomment-1375548840,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:20.618Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:20.618Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:21.806Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:22.401Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:23.843Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:24:25.534Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163552/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163552/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163552/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985#issuecomment-1375754482:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11985#issuecomment-1375754482,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-09T14:26:47.566Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:26:47.821Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:26:48.077Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:26:48.077Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:26:48.077Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T14:26:48.077Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163566/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163566/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163566/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11989#issuecomment-1375742035:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11989#issuecomment-1375742035,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-09T15:09:04.769Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:09:04.769Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:09:04.769Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:09:04.769Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:09:04.769Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:09:04.770Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163580/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163580/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163580/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11988#issuecomment-1375818279:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11988#issuecomment-1375818279,1,['Watt'],['Wattributes']
Energy Efficiency,tribute directive ignored [-Wattributes] ; - [2023-01-09T15:30:32.449Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:30:32.449Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:30:32.712Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:30:32.712Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:30:32.712Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T15:30:32.712Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163587/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163587/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163587/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11991#issuecomment-1375850349:1998,Watt,Wattributes,1998,https://root.cern,https://github.com/root-project/root/pull/11991#issuecomment-1375850349,1,['Watt'],['Wattributes']
Energy Efficiency,"tributed execution, there is no more TTreeCache leaking leftover after the analysis (see any file ending with `_patch` and compare it with the same file ending with `_master`). Now that the main source of memory usage is gone, I have noticed a much smaller contribute that still seems to make the memory increase in the flamegraphs. And it seems to have something to do with the increased number of files, at least on the surface. Let's take the following two files to compare:; * test_agc_9sample_1file_10task_patch.html; * test_agc_9sample_10file_10task_patch.html. They are running exactly the same script, with all 9 RDF samples. In the first case we have 1 file per sample, in the second case 10 files per sample. The memray flamegraph report a total of 253.5 MB used for the first case and 260.9 MB used for the first case (7.4 MB delta). There are two main parts of the graph: the one deriving from the `clone` of the Dask process, where the actual analysis code is run, and the one deriving from the `_start` function where most of the Python code around the analysis is (things like `import`ing packages or the Dask worker-scheduler communication). The difference between the two graphs in the `clone` part is of 0.6 MB, the difference between the two `_start` parts is 6.7 MB, so I focus on that from now on. This 6.7 MB difference is in turn split between a 0.1 MB difference deriving from `_PyObject_VectorcallTState` and 6.6 MB difference deriving from. Finally, the vast majority of these 6.6 MB comes from:; * The metrics gathered by profiling (i.e. memray itself); * Dask communication protocol. [Screencast from 2024-07-26 10-47-18.webm](https://github.com/user-attachments/assets/3a21ea3e-c130-42af-b50b-bb324b06eaaa). TL;DR: After this patch the leftover memory increase may be attributed mostly to Dask or memray itself. To confirm this, I have executed the full AGC benchmark on the SWAN platform with 64 workers of the CERN condor pools for 10 times in a row. At the end of the 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2252273470:1331,schedul,scheduler,1331,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2252273470,1,['schedul'],['scheduler']
Energy Efficiency,"tringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1168:7; #24 0x00000000040e52a5 void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:177:5; #25 0x00000000043d3c19 llvm::function_ref<void ()>::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:200:5; #26 0x0000000008fddacb llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:426:3; #27 0x0000000008fdde5f RunSafelyOnThread_Dispatch(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:498:29; #28 0x0000000008fddeb5 llvm::thread::thread<void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #29 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #30 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:31677,green,greenc,31677,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"tringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1168:7; #62 0x00000000040e52a5 void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:177:5; #63 0x00000000043d3c19 llvm::function_ref<void ()>::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:200:5; #64 0x0000000008fddacb llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:426:3; #65 0x0000000008fdde5f RunSafelyOnThread_Dispatch(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:498:29; #66 0x0000000008fddeb5 llvm::thread::thread<void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #67 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #68 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:41675,green,greenc,41675,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"tringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1168:7; #97 0x00000000040e52a5 void llvm::function_ref<void ()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:177:5; #98 0x00000000043d3c19 llvm::function_ref<void ()>::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:200:5; #99 0x0000000008fddacb llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:426:3; #100 0x0000000008fdde5f RunSafelyOnThread_Dispatch(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:498:29; #101 0x0000000008fddeb5 llvm::thread::thread<void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #102 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #103 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:50906,green,greenc,50906,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,tringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/inc/LinkDef.h; FAILED: core/G__Core.cxx lib/Core.pcm /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/core/G__Core.cxx /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/lib/Core.pcm ; cd /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/core && /scratch/greenc/test-products/cmake/v3_23_2/Linux64bit+3.10-2.17/bin/cmake -E env LD_LIBRARY_PATH=/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/lib:/products/xrootd/v5_4_3a/Linux64bit+3.10-2.17-c14-p3912-debug/lib:/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib64:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib:/products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/lib:/scratch/greenc/test-products/postgresql/v14_4/Linux64bit+3.10-2.17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:7217,green,greenc,7217,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,1,['green'],['greenc']
Energy Efficiency,"tringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/inc/LinkDef.h; ```; ```; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; ```; ```; #7 0x00007fe099a431a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #8 0x00007fe099a43252 (/lib64/libc.so.6+0x2f252); #9 0x0000000003784bb9 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2800:10; #10 0x00000000037869ad clang::ASTWriter::WriteSubmodules(clang::Module*) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:3002:26; #11 0x000000000379c09f clang::ASTWriter::WriteASTCore(clang::Sema&",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:14738,green,greenc,14738,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,1,['green'],['greenc']
Energy Efficiency,trix/src/TMatrixT.cxx:99; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1754; 13: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 14: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1759; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1761; /opt/root_src/math/matrix/src/TMatrixT.cxx:1782:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 6: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 7: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 10: Calling 'TMatrixT::operator=' in /opt/root_src/math/matrix/src/TMatrixT.cxx:110; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 13: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1774; 14: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 15: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1775; 16: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 17: A,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:137479,Allocate,Allocate,137479,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Allocate'],['Allocate']
Energy Efficiency,ts-build/132927/console).; ### Warnings:; - [2022-01-05T13:51:36.996Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TBufferMerger.hxx:218:21: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-01-05T13:51:36.996Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TBufferMerger.hxx:221:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-01-05T13:51:39.183Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TBufferMerger.hxx:219:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:39.183Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/TBufferMerger.hxx:222:32: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:219:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:222:32: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:219:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:51:41.329Z] /data/sftnight/workspace/root-pullrequests-build/root/io/io/inc/ROOT/TBufferMerger.hxx:222:32: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-01-05T13:52:53.504Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:180:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-01-05T13:52:53.504Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:883:4: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1005717051:1240,Watt,Wattributes,1240,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1005717051,1,['Watt'],['Wattributes']
Energy Efficiency,"ts/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:2151:7; #44 0x00000000044b103f clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1146:10; #45 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #46 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #47 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #48 0x00000000044b0ff7 clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #49 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #50 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #51 0x00000000043e8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:37210,green,greenc,37210,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,ttributes] ; - [2022-12-21T13:21:22.471Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T13:21:22.471Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T13:21:22.471Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T13:21:22.471Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T13:21:22.828Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 286 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162980/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162980/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162980/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162980/testReport/projectroot.roottest.root/dataframe/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1361348143:2300,Watt,Wattributes,2300,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1361348143,1,['Watt'],['Wattributes']
Energy Efficiency,ttributes] ; - [2022-12-21T16:40:05.229Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:40:05.552Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:40:05.553Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:40:05.553Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T16:40:05.553Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 286 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162989/testReport/projectroot.roottest.root/dataframe/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1361687227:2300,Watt,Wattributes,2300,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1361687227,1,['Watt'],['Wattributes']
Energy Efficiency,"uch luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-707273510:1888,green,green,1888,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-707273510,1,['green'],['green']
Energy Efficiency,"uct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3797,green,greenc,3797,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['green'],['greenc']
Energy Efficiency,ucts/cmake/v3_24_1/Linux64bit+3.10-2.17/bin/cmake -E env LD_LIBRARY_PATH=/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib:/scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/lib:/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib64:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/lib:/scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/lib:/scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/python/v3_9_13/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/sqlite/v3_39_02_00/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/libxml2/v2_9_12/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/gsl/v2_7/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/x86_64-unknown-linux-gnu:/scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/lib: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1 -v4 -f G__Core.cxx -cxxmodule -s /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99 -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_N,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:1492,green,greenc,1492,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,ucts/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/cont/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/gui/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:10606,green,greenc,10606,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,5,['green'],['greenc']
Energy Efficiency,"ucts/root/v6_27_99f1/source/root-6.27.99/core/gui/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; #0 0x0000000009107d3a llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:24615,green,greenc,24615,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,ucts/root/v6_27_99f1/source/root-6.27.99/core/gui/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; '/usr/include/module.modulemap' does not exist. Mounting '/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:10955,green,greenc,10955,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"ucts/root/v6_27_99f1/source/root-6.27.99/core/gui/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc; /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; clang -cc1 version 13.0.0 based upon LLVM 13.0.0 default target x86_64-unknown-linux-gnu; ignoring nonexistent directory ""/usr/lib/gcc/x86_64-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:15222,green,greenc,15222,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,3,['green'],['greenc']
Energy Efficiency,uild/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/externals -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORRECT_ISO_CPP_WCHAR_H_PROTO -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/x86_64-unknown-linux-gnu/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/include -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/cont/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/gui/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/meta/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:2717,green,greenc,2717,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,2,['green'],['greenc']
Energy Efficiency,uild/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORRECT_ISO_CPP_WCHAR_H_PROTO -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/x86_64-unknown-linux-gnu/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/cont/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/gui/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:3229,green,greenc,3229,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,2,['green'],['greenc']
Energy Efficiency,uild/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORRECT_ISO_CPP_WCHAR_H_PROTO -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/x86_64-unknown-linux-gnu/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/cont/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/gui/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc -I/scratch/greenc/test-products/root/v6_27_99f1/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:3142,green,greenc,3142,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,2,['green'],['greenc']
Energy Efficiency,"ull pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped). ```. @hahnjo, do you have a clue what to do here?. PS: It seems similar to RadeonOpenCompute/ROCm#1179",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:8007,allocate,allocated,8007,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,1,['allocate'],['allocated']
Energy Efficiency,"ullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTStructuralEquivalence.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-10-14T14:01:53.566Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/DebugInfoMetadata.h(2371,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_72151b49db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\ScheduleDAGPrinter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-10-14T14:01:53.566Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/FunctionLoweringInfo.h(114,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_35e6ec97db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\ScheduleDAGInstrs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-10-14T14:01:53.566Z] C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\include\clang/AST/Attrs.inc(2041,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_bd603ea4ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ObjCNoReturn.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-10-14T14:01:53.566Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\Inliner.cpp(1235,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11559#issuecomment-1279061910:2676,Schedul,ScheduleDAGInstrs,2676,https://root.cern,https://github.com/root-project/root/pull/11559#issuecomment-1279061910,1,['Schedul'],['ScheduleDAGInstrs']
Energy Efficiency,unning on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163364/console).; ### Warnings:; - [2023-01-09T16:15:13.480Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T16:15:13.480Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T16:15:26.486Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T16:15:26.798Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T16:15:26.798Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T16:15:29.458Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T16:18:26.516Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T16:18:30.320Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T16:19:32.248Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9521#issuecomment-1375947202:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/9521#issuecomment-1375947202,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163392/console).; ### Warnings:; - [2023-01-09T17:02:32.322Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T17:02:32.322Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T17:02:32.584Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T17:02:32.584Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T17:02:32.584Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T17:02:32.584Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T17:02:32.584Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T17:02:32.584Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T17:02:32.842Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11978#issuecomment-1376001142:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11978#issuecomment-1376001142,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163413/console).; ### Warnings:; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T18:22:23.657Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11980#issuecomment-1376129346:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11980#issuecomment-1376129346,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163420/console).; ### Warnings:; - [2023-01-09T19:03:50.495Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T19:03:50.495Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T19:04:01.236Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T19:04:01.236Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T19:04:01.236Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T19:04:02.091Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T19:04:43.146Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T19:04:48.250Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T19:07:24.862Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11976#issuecomment-1376188671:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11976#issuecomment-1376188671,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163588/console).; ### Warnings:; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:54:07.230Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:54:07.487Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:54:07.487Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11991#issuecomment-1376538976:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11991#issuecomment-1376538976,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163490/console).; ### Warnings:; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T21:20:00.065Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11984#issuecomment-1376376316:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11984#issuecomment-1376376316,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163567/console).; ### Warnings:; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-09T23:24:38.591Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11989#issuecomment-1376508491:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11989#issuecomment-1376508491,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163623/console).; ### Warnings:; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T00:00:08.324Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T00:00:08.585Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11973#issuecomment-1376544873:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11973#issuecomment-1376544873,1,['Watt'],['Wattributes']
Energy Efficiency,unning on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163658/console).; ### Warnings:; - [2023-01-10T01:30:25.606Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-10T01:30:25.606Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-10T01:30:25.896Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T01:30:25.896Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T01:30:25.896Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T01:30:26.175Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T01:30:29.616Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T01:30:29.616Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-10T01:30:32.418Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11995#issuecomment-1376617892:1059,Watt,Wattributes,1059,https://root.cern,https://github.com/root-project/root/pull/11995#issuecomment-1376617892,1,['Watt'],['Wattributes']
Energy Efficiency,uptibleIterator.hasNext(InterruptibleIterator.scala:37); 	at scala.collection.Iterator.foreach(Iterator.scala:943); 	at scala.collection.Iterator.foreach$(Iterator.scala:943); 	at org.apache.spark.InterruptibleIterator.foreach(InterruptibleIterator.scala:28); 	at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:62); 	at scala.collection.generic.Growable.$plus$plus$eq$(Growable.scala:53); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:105); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:49); 	at scala.collection.TraversableOnce.to(TraversableOnce.scala:366); 	at scala.collection.TraversableOnce.to$(TraversableOnce.scala:364); 	at org.apache.spark.InterruptibleIterator.to(InterruptibleIterator.scala:28); 	at scala.collection.TraversableOnce.toBuffer(TraversableOnce.scala:358); 	at scala.collection.TraversableOnce.toBuffer$(TraversableOnce.scala:358); 	at org.apache.spark.InterruptibleIterator.toBuffer(InterruptibleIterator.scala:28); 	at scala.collection.TraversableOnce.toArray(TraversableOnce.scala:345); 	at scala.collection.TraversableOnce.toArray$(TraversableOnce.scala:339); 	at org.apache.spark.InterruptibleIterator.toArray(InterruptibleIterator.scala:28); 	at org.apache.spark.rdd.RDD.$anonfun$collect$2(RDD.scala:1030); 	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2254); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90); 	at org.apache.spark.scheduler.Task.run(Task.scala:131); 	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:506); 	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1462); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:509); 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); 	at java.base/java.lang.Thread.run(Thread.java:829); [...]; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11050#issuecomment-1196878051:4638,schedul,scheduler,4638,https://root.cern,https://github.com/root-project/root/issues/11050#issuecomment-1196878051,2,['schedul'],['scheduler']
Energy Efficiency,"us namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #29 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #30 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1164:7; #31 0x00000000040e46c6 compileModule(clang::CompilerInstance&, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1225:12; #32 0x00000000040e1108 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1305:11; #33 0x00000000040e0bb4 clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1834:7; #34 0x00000000040e16ad clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__2::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) /scratch/greenc/test-products/root/v6_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:33102,green,greenc,33102,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"us namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #67 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #68 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1164:7; #69 0x00000000040e46c6 compileModule(clang::CompilerInstance&, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1225:12; #70 0x00000000040e1108 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1305:11; #71 0x00000000040e0bb4 clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1834:7; #72 0x00000000040e16ad clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__2::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) /scratch/greenc/test-products/root/v6_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:43100,green,greenc,43100,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:1251,monitor,monitor,1251,https://root.cern,https://github.com/root-project/root/issues/9489,1,['monitor'],['monitor']
Energy Efficiency,ute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:27:10.057Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:27:10.057Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:27:15.289Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:16.232Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:16.502Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:16.502Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:18.447Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:20.384Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T15:27:21.199Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 298 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950#issuecomment-1361581090:1407,Watt,Wattributes,1407,https://root.cern,https://github.com/root-project/root/pull/11950#issuecomment-1361581090,1,['Watt'],['Wattributes']
Energy Efficiency,ute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:38:09.640Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:38:09.640Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:38:14.322Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:15.826Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:16.096Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:16.096Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:18.235Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:19.988Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:38:20.918Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1363203941:1407,Watt,Wattributes,1407,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1363203941,1,['Watt'],['Wattributes']
Energy Efficiency,ute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T18:32:30.793Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T18:32:30.793Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T18:32:36.225Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:37.149Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:37.404Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:37.404Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:39.256Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:40.617Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:32:42.500Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265#issuecomment-1363252156:1407,Watt,Wattributes,1407,https://root.cern,https://github.com/root-project/root/pull/11265#issuecomment-1363252156,1,['Watt'],['Wattributes']
Energy Efficiency,ute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-05T08:50:50.319Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-05T08:50:50.319Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2023-01-05T08:50:55.342Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:56.703Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:56.703Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:57.262Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:57.262Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:58.623Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2023-01-05T08:50:59.183Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 60 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11976#issuecomment-1371972954:1407,Watt,Wattributes,1407,https://root.cern,https://github.com/root-project/root/pull/11976#issuecomment-1371972954,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-21T18:56:24.298Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T18:56:24.298Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T18:56:24.605Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361994147:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361994147,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T19:35:49.576Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T19:35:49.577Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1362035468:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1362035468,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-21T20:14:41.346Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T20:14:41.347Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1362073880:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1362073880,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-22T01:07:33.587Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T01:07:33.587Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T01:07:44.478Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T01:07:44.478Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T01:07:45.114Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T01:07:45.868Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T01:07:45.868Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T01:07:45.868Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T01:07:46.226Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1362293561:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1362293561,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T17:07:01.733Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1363168735:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1363168735,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-22T18:50:34.850Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265#issuecomment-1363262863:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11265#issuecomment-1363262863,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-23T02:51:46.405Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-23T02:51:46.405Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-23T02:51:46.405Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:51:46.405Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:51:46.406Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:51:46.406Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:51:46.406Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:51:46.406Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T02:51:46.406Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11958#issuecomment-1363574820:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11958#issuecomment-1363574820,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-23T17:18:04.800Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-23T17:18:04.800Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-23T17:18:04.800Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:04.800Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:04.800Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:04.801Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:05.085Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:05.085Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-23T17:18:05.085Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-je,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11948#issuecomment-1364149238:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11948#issuecomment-1364149238,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:06:45.353Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T15:06:45.354Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10210#issuecomment-1365991049:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/10210#issuecomment-1365991049,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-27T22:56:47.685Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11962#issuecomment-1366258778:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11962#issuecomment-1366258778,1,['Watt'],['Wattributes']
Energy Efficiency,utes] ; - [2022-12-28T07:11:55.474Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-28T07:11:55.474Z] /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RCsvDS.hxx:114:114: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RSqliteDS.hxx:118:81: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-28T07:11:55.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:215:7: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 54 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11963#issuecomment-1366438220:1475,Watt,Wattributes,1475,https://root.cern,https://github.com/root-project/root/pull/11963#issuecomment-1366438220,1,['Watt'],['Wattributes']
Energy Efficiency,ux64bit+3.10-2.17-c14-p3913-debug/core && /scratch/greenc/test-products/cmake/v3_24_1/Linux64bit+3.10-2.17/bin/cmake -E env LD_LIBRARY_PATH=/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib:/scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/lib:/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib64:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/lib:/scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/lib:/scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/python/v3_9_13/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/sqlite/v3_39_02_00/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/libxml2/v2_9_12/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/gsl/v2_7/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/x86_64-unknown-linux-gnu:/scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/lib: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1 -v4 -f G__Core.cxx -cxxmodule -s /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99 -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:1428,green,greenc,1428,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"ux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; #0 0x0000000009107d3a llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107eeb PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x0000000009106713 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x0000000009108505 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007ff5834a3630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3975 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3929 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e38e5 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:25922,green,greenc,25922,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,v3_23_2/Linux64bit+3.10-2.17/bin/cmake -E env LD_LIBRARY_PATH=/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/lib:/products/xrootd/v5_4_3a/Linux64bit+3.10-2.17-c14-p3912-debug/lib:/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib64:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib:/products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/lib:/scratch/greenc/test-products/postgresql/v14_4/Linux64bit+3.10-2.17-p3912/lib:/products/openblas/v0_3_20c/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/python/v3_9_12/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/sqlite/v3_38_05_00/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/libxml2/v2_9_12/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/gsl/v2_7/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/x86_64-unknown-linux-gnu:/scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/lib: /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04 -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/externals -excludePath /scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORRECT_ISO_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:1142,green,greenc,1142,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,2,['green'],['greenc']
Energy Efficiency,v6.20 version of #7563 plus the same fix for PowerPC (see also #7607),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7608:45,Power,PowerPC,45,https://root.cern,https://github.com/root-project/root/pull/7608,1,['Power'],['PowerPC']
Energy Efficiency,v6.22 version of #7563 plus the same fix for PowerPC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7607:45,Power,PowerPC,45,https://root.cern,https://github.com/root-project/root/pull/7607,1,['Power'],['PowerPC']
Energy Efficiency,v614: Additional fix for rule scheduling in TBranchElement,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2488:30,schedul,scheduling,30,https://root.cern,https://github.com/root-project/root/pull/2488,1,['schedul'],['scheduling']
Energy Efficiency,"v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc; /scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/include; /scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; #0 0x0000000009107d3a llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107eeb PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x0000000009106713 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x0000000009108505 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007ff5834a3630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3975 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3929 std::__2::basic_string<char, std::__2::char_trai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:25564,green,greenc,25564,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.h; /opt/root_src/math/matrix/src/TDecompBK.cxx; /opt/root_src/math/matrix/src/TDecompLU.cxx; /opt/root_src/math/matrix/src/TDecompSparse.cxx; /opt/root_src/math/matrix/src/TMatrixT.cxx; /opt/root_src/math/matrix/src/TMatrixTSparse.cxx; /opt/root_src/math/matrix/src/TMatrixTSym.cxx; /opt/root_src/math/matrix/src/TVectorT.cxx; /opt/root_src/math/minuit/src/TFitter.cxx; /opt/root_src/math/minuit/src/TLinearFitter.cxx; /opt/root_src/math/minuit/src/TMinuit.cxx; /opt/root_src/math/minuit/src/TM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:231238,Adapt,AdaptiveIntegratorMultiDim,231238,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Energy Efficiency,"warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235; /opt/root_src/math/mathcore/src/GoFTest.cxx:603:7: warning: Value stored to 'maij' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'maij' is never read in /opt/root_src/math/mathcore/src/GoFTest.cxx:603; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx:216:10: warning: Value stored to 'sgngam' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sgngam' is never read in /opt/root_src/math/mathcore/src/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:19854,allocate,allocated,19854,https://root.cern,https://github.com/root-project/root/issues/7458,1,['allocate'],['allocated']
Energy Efficiency,"we have lots of proper usage now, and it would need to be adapted; to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7852:58,adapt,adapted,58,https://root.cern,https://github.com/root-project/root/pull/7852,1,['adapt'],['adapted']
Energy Efficiency,"we have lots of proper usage now, and it would need to be adapted; to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7855:58,adapt,adapted,58,https://root.cern,https://github.com/root-project/root/pull/7855,1,['adapt'],['adapted']
Energy Efficiency,well done. Let's aim for all green builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1154#issuecomment-334931052:29,green,green,29,https://root.cern,https://github.com/root-project/root/pull/1154#issuecomment-334931052,1,['green'],['green']
Energy Efficiency,"when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16725:1099,Charge,Charged,1099,https://root.cern,https://github.com/root-project/root/issues/16725,1,['Charge'],['Charged']
Energy Efficiency,when running GitHub actions. This is done in order to monitor how much time each individual step of the workflows is taking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15801:54,monitor,monitor,54,https://root.cern,https://github.com/root-project/root/pull/15801,1,['monitor'],['monitor']
Energy Efficiency,"wing code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON -Dbuiltin_freetype=ON -Dbuiltin_lzma=ON -Dbuiltin_veccore=ON \; -DXROOTD_ROOT_DIR=~/software/xrootd/4.12.2/x86_64-ubuntu2004-gcc9-opt \; -DTBB_ROOT_DIR=~/software/oneTBB/2020.2/x86_64-ubuntu2004-gcc9-opt \; -DCMAKE_INSTALL_PREFIX=~/software/root/6.20.08/x86_64-ubuntu2004-gcc9-opt ../root-6.20.08/; ninja; ```. ## Setup. As mentioned earlier, I used ROOT 6.20/08 for this particular test. But the behaviour has been like this since forever. I performed the build on Ubuntu 20.04 with GCC 9, but that should make little difference to the overall behaviour. ## Additional context. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:2730,power,powerful,2730,https://root.cern,https://github.com/root-project/root/issues/6432,1,['power'],['powerful']
Energy Efficiency,wn attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:48.874Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:49.129Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:49.129Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:49.130Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:55.284Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 366 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11825#issuecomment-1361219289:2197,Watt,Wattributes,2197,https://root.cern,https://github.com/root-project/root/pull/11825#issuecomment-1361219289,1,['Watt'],['Wattributes']
Energy Efficiency,wn attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:50.318Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 366 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1361250252:2197,Watt,Wattributes,2197,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1361250252,1,['Watt'],['Wattributes']
Energy Efficiency,wn attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.446Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.707Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.707Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.707Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:35.112Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 367 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945#issuecomment-1361304018:2197,Watt,Wattributes,2197,https://root.cern,https://github.com/root-project/root/pull/11945#issuecomment-1361304018,1,['Watt'],['Wattributes']
Energy Efficiency,wn attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:52.005Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T14:16:59.807Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 367 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_pyroot_pyroot004_NumbaDeclare_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot004_NumbaDeclare_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162943/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1361413863:2197,Watt,Wattributes,2197,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1361413863,1,['Watt'],['Wattributes']
Energy Efficiency,wn attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:41.025Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:41.280Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:41.280Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:41.280Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T15:02:47.623Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 366 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_pyroot_pyroot004_NumbaDeclare_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot004_NumbaDeclare_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162950/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11940#issuecomment-1361494340:2197,Watt,Wattributes,2197,https://root.cern,https://github.com/root-project/root/pull/11940#issuecomment-1361494340,1,['Watt'],['Wattributes']
Energy Efficiency,wn attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:19:58.490Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T16:20:03.827Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 367 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.runtutorials.tutorial_pyroot_pyroot004_NumbaDeclare_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot004_NumbaDeclare_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162978/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1361648192:2197,Watt,Wattributes,2197,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1361648192,1,['Watt'],['Wattributes']
Energy Efficiency,"x64bit+3.10-2.17-c14-p3913-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:95:1; #13 0x00000000046bd5b1 clang::ASTDeclWriter::Visit(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:327:53; #14 0x00000000046cab4a clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:2481:28; #15 0x0000000004652de7 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:4687:5; #16 0x0000000004650dae clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:0:7; #17 0x00000000046efca1 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/GeneratePCH.cpp:68:14; #18 0x00000000042038e3 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/MultiplexConsumer.cpp:291:23; #19 0x00000000043aecc6 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:178:12; #20 0x000000000419c5ec clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:29085,green,greenc,29085,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,x64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/include -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -I/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/cont/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/gui/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:4170,green,greenc,4170,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,2,['green'],['greenc']
Energy Efficiency,"x64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e38e5 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1925 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004638fb9 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2501:38; #10 0x00000000046bdc47 clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:364:27; #11 0x00000000046c3071 clang::ASTDeclWriter::VisitLinkageSpecDecl(clang::LinkageSpecDecl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:1265:3; #12 0x00000000046caf39 clang::declvisitor::Base<std::__2::add_pointer, clang::ASTDeclWriter, void>::Visit(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:95:1; #13 0x00000000046bd5b1 clang::ASTDeclWriter::Visit(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:327:53; #14 0x00000000046cab4a clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:2481:28; #15 0x0000000004652de7 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:27688,green,greenc,27688,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"x7da020, Loc=..., T=..., DiagID=2479) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7398. #10 0x00007fffe363cdc7 in clang::Sema::CheckFieldDecl (this=0x7da020, Name=..., T=..., TInfo=0x7e913e0, Record=0x7e8ed10, Loc=..., Mutable=false, BitWidth=0x0, InitStyle=clang::ICIS_ListInit, TSSL=..., AS=clang::AS_private,. PrevDecl=0x0, D=0x0) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:14482. #11 0x00007fffe3d8c4de in clang::TemplateDeclInstantiator::VisitFieldDecl (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:810. #12 0x00007fffe3d807a6 in clang::declvisitor::Base<clang::declvisitor::make_ptr, clang::TemplateDeclInstantiator, clang::Decl*>::Visit (this=0x7fffffff59f0, D=0x51e8548). at /scratch/greenc/test-products/root/v6_20_04/build/Linux64bit+3.10-2.17-e20-p382-debug/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:369. #13 0x00007fffe3d4796c in clang::Sema::InstantiateClass (this=0x7da020, PointOfInstantiation=..., Instantiation=0x7e8ed10, Pattern=0x51e4900, TemplateArgs=..., TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2083. #14 0x00007fffe3d49340 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8ed10, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2543. #15 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff5ff0). at /scratch/greenc/test-products/root/v6_20_04/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:4206,green,greenc,4206,https://root.cern,https://github.com/root-project/root/pull/5462,1,['green'],['greenc']
Energy Efficiency,x86_64-unknown-linux-gnu/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1 -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/scratch/greenc/test-products/tbb/v2021_5_0b/Linux64bit+3.10-2.17-c14/include -compilerI/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/include -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -I/scratch/greenc/test-products/root/v6_26_04b/build/Linux64bit+3.10-2.17-c14-p3912-debug/ginclude -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/cont/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/gui/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/meta/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/clib/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/rint/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/zip/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/thread/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/textinput/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/clingutils/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/base/v7/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/foundation/v7/inc -I/scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/core/unix/inc -I/usr/include ROOT/TErr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:3414,green,greenc,3414,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,2,['green'],['greenc']
Energy Efficiency,x:1912; 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1916; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1916; 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922; 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:105; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:105; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:107; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:249; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:249; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:253; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:253; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:257; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:265; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:265; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:270; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:107; 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922; 40: Loop condition is false. Execution continues on line 1932 in /opt/root_src/core/base/src/TString.cxx:1926; 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1933; /opt/root_src/core/base/src/TString.cxx:2173:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2151; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2151; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2151; 6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:136235,allocate,allocated,136235,https://root.cern,https://github.com/root-project/root/issues/7412,1,['allocate'],['allocated']
Energy Efficiency,x:1914; 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918; 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918; 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924; 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106; 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106; 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108; 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250; 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250; 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254; 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254; 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258; 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266; 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266; 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271; 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108; 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924; 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928; 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935; /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153; 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153; 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153; 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153; 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153; 6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-796268286:26250,allocate,allocated,26250,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-796268286,1,['allocate'],['allocated']
Energy Efficiency,x:330; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:330; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 14: Loop condition is false. Execution continues on line 338 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:331; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 16: Loop condition is false. Execution continues on line 341 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:359; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:363; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:367; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:368; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:373:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:298; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:315; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 6: Loop condition is false. Execution continues on line 324 in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:318; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx:324; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:12344,allocate,allocated,12344,https://root.cern,https://github.com/root-project/root/issues/7526,1,['allocate'],['allocated']
Energy Efficiency,x:431; 12: Taking true branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:431; 13: Assuming 'j' is >= field 'fNOutputs' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 14: Loop condition is false. Execution continues on line 439 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:432; 15: Assuming 'i' is >= 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 16: Loop condition is false. Execution continues on line 442 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 17: Memory is allocated in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:460; 18: 'i' is < 'nValEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 19: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:464; 20: Assuming 'j' is < field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 21: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:468; 22: Use of zero-allocated memory in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:469; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:474:39: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fModelIsSetup' is true in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 2: Taking false branch in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:400; 3: 'i' is < 'nTrainingEvents' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 4: Loop condition is true. Entering loop body in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:416; 5: Assuming 'j' is >= field 'fNVars' in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 6: Loop condition is false. Execution continues on line 425 in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:419; 7: Assuming the condition is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 8: Left side of '||' is false in /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx:425; 9: Assuming the condition is false in /opt/root_src/tmva/pymva/src/Method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:2112,allocate,allocated,2112,https://root.cern,https://github.com/root-project/root/issues/7526,1,['allocate'],['allocated']
Energy Efficiency,x:810; 5: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:810; 6: Assuming 'start_src.fY' is equal to 'end_src.fY' in /opt/root_src/gui/gui/src/TGText.cxx:824; 7: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:824; 8: 'len' is > 0 in /opt/root_src/gui/gui/src/TGText.cxx:830; 9: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:830; 10: Calling 'TGText::GetLine' in /opt/root_src/gui/gui/src/TGText.cxx:831; 11: Assuming the condition is true in /opt/root_src/gui/gui/src/TGText.cxx:1000; 12: Taking true branch in /opt/root_src/gui/gui/src/TGText.cxx:1000; 13: Calling 'TGTextLine::GetText' in /opt/root_src/gui/gui/src/TGText.cxx:1001; 14: Assuming 'pos' is < field 'fLength' in /opt/root_src/gui/gui/src/TGText.cxx:187; 15: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:187; 16: Assuming the condition is false in /opt/root_src/gui/gui/src/TGText.cxx:191; 17: Taking false branch in /opt/root_src/gui/gui/src/TGText.cxx:191; 18: Memory is allocated in /opt/root_src/gui/gui/src/TGText.cxx:195; 19: Use of zero-allocated memory in /opt/root_src/gui/gui/src/TGText.cxx:196; /opt/root_src/gui/gui/src/TGText.cxx:630:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:55129,allocate,allocated,55129,https://root.cern,https://github.com/root-project/root/issues/7533,1,['allocate'],['allocated']
Energy Efficiency,xx:1046; 5: Potential leak of memory pointed to by 'sliceVal' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking true branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1044; 3: Assuming 'phiBin' is > 'nPhiBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1046; 5: Potential leak of memory pointed to by 'sliceValRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLow' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1091; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLow' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168; /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1168:25: warning: Potential leak of memory pointed to by 'sliceValsLowRef' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Taking false branch in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1040; 2: Memory is allocated in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1093; 3: Assuming 'etaBin' is > 'nEtaBins' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 4: Loop condition is false. Execution jumps to the end of the function in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:1098; 5: Potential leak of memory pointed to by 'sliceValsLowRef' in /opt/root_src/graf3d/eve7/src/REveCalo.cxx:116,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:32180,allocate,allocated,32180,https://root.cern,https://github.com/root-project/root/issues/7531,1,['allocate'],['allocated']
Energy Efficiency,xx:1759; 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TMatrixT.cxx:1761; /opt/root_src/math/matrix/src/TMatrixT.cxx:1782:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:108; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 6: Null pointer value stored to field 'fElements' in /opt/root_src/math/matrix/src/TMatrixT.cxx:472; 7: Assuming 'no_rows' is < 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 8: Left side of '||' is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:479; 9: Returning from 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:109; 10: Calling 'TMatrixT::operator=' in /opt/root_src/math/matrix/src/TMatrixT.cxx:110; 11: Assuming 'gMatrixCheck' is 0 in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 12: Left side of '&&' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 13: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1774; 14: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 15: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1775; 16: Left side of '||' is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 17: Assuming the condition is false in /opt/root_src/math/matrix/src/TMatrixT.cxx:1775; 18: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1773; 19: Assuming the condition is true in /opt/root_src/math/matrix/src/TMatrixT.cxx:1780; 20: Taking true branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:1780; 21: Null pointer passed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:137830,Allocate,Allocate,137830,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Allocate'],['Allocate']
Energy Efficiency,"xx:2644; #25 0x7ffdb74ebcc2 in GenerateFullDict(class std::basic_ostream<char, struct std::char_traits<char>> &, class cling::Interpreter &, class RScanner &, class std::list<class ROOT::TMetaUtils::RCon; structorType, class std::allocator<class ROOT::TMetaUtils::RConstructorType>> const &, bool, bool, bool, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:2803; #26 0x7ffdb7505b1e in RootClingMain(int, char **, bool) C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:4962; #27 0x7ffdb752c30d in ROOT_rootcling_Driver C:\root-dev\git\master\core\dictgen\src\rootcling_impl.cxx:6251; #28 0x7ff7a76c12f5 in main C:\root-dev\git\master\main\src\rootcling.cxx:43; #29 0x7ff7a76c2493 in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78; #30 0x7ff7a76c2493 in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288. previously allocated by thread T0 here:; #0 0x7ffdb6f701c5 in operator new(unsigned __int64) D:\a\_work\1\s\src\vctools\asan\llvm\compiler-rt\lib\asan\asan_win_new_scalar_thunk.cpp:40; #1 0x7ffdb6bbaa11 in TStorage::ObjectAlloc(unsigned __int64) C:\root-dev\git\master\core\base\src\TStorage.cxx:293; #2 0x7ffdb6b7a5db in TObject::operator new C:\root-dev\git\master\core\base\inc\TObject.h:181; #3 0x7ffdb6b7a5db in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:81; #4 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129; #5 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403; #6 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644; #7 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827; #8 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335; #9 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2370893163:8077,allocate,allocated,8077,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2370893163,1,['allocate'],['allocated']
Energy Efficiency,"y.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/inc/LinkDef.h; cling version ROOT_1.0~dev; Looking for C++ headers with:; LC_ALL=C clang-14 -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Found:; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; clang version 13.0.0; Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/i686-redhat-linux/4.8.5; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.2; Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Selected GCC installation: /usr/lib/gcc/x86_64-redhat-linux/4.8.5; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ignoring nonexistent directory ""/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../x86_64-redhat-linux/include""; ignoring nonexistent directory ""/include""; ignoring ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:7936,green,greenc,7936,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['green'],['greenc']
Energy Efficiency,"yes. As long as efficient resizing and IO are supported, I am fine with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3845#issuecomment-494722666:16,efficient,efficient,16,https://root.cern,https://github.com/root-project/root/pull/3845#issuecomment-494722666,1,['efficient'],['efficient']
Energy Efficiency,"yzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1871; /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming field 'fIOVersion' is < 2 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 2: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1879; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 4: Taking false branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1885; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 6: Taking true branch in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1888; 7: Memory is allocated in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1893; 8: Use of zero-allocated memory in /opt/root_src/io/sql/src/TBufferSQL2.cxx:1894; /opt/root_src/io/sql/src/TSQLFile.cxx:386:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/sql/src/TSQLFile.cxx:386; /opt/root_src/io/xml/src/TBufferXML.cxx:764:41: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:2390; 2: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2390; 3: Assuming 'gDebug' is > 1 in /opt/root_src/io/xml/src/TBufferXML.cxx:2402; 4: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2402; 5: Assuming 'cl' is null in /opt/root_src/io/xml/src/TBufferXML.cxx:2403; 6: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:2403; 7: Calling 'TBuffer::IsReading' in /opt/root_src/io/xml/src/TBufferXML.cxx:2404; 8: Returning zero, which participates in a condition later in /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:120345,allocate,allocated,120345,https://root.cern,https://github.com/root-project/root/issues/7431,1,['allocate'],['allocated']
Energy Efficiency,"ze=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; one with the redirection enabled:; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffe7c400bd8 /* 49 vars */) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:1875,charge,charge,1875,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,1,['charge'],['charge']
Energy Efficiency,"}, std::function<float (float, float)> > > >(tbb::detail::d1::node*, tbb::detail::d1::execution_data const&)':; TThreadExecutor.cxx:(.text+0x19b): undefined reference to `tbb::detail::r1::deallocate(tbb::detail::d1::small_object_pool&, void*, unsigned long, tbb::detail::d1::execution_data const&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text+0x1c3): undefined reference to `tbb::detail::r1::is_group_execution_cancelled(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: CMakeFiles/Imt.dir/src/TThreadExecutor.cxx.o: in function `tbb::detail::d1::task_arena_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1}, void>::operator()() const':; TThreadExecutor.cxx:(.text+0x31a): undefined reference to `tbb::detail::r1::initialize(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text+0x332): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long)'; /usr/bin/ld: TThreadExecutor.cxx:(.text+0x39a): undefined reference to `tbb::detail::r1::max_concurrency(tbb::detail::d1::task_arena_base const*)'; /usr/bin/ld: TThreadExecutor.cxx:(.text+0x3ff): undefined reference to `tbb::detail::r1::execute_and_wait(tbb::detail::d1::task&, tbb::detail::d1::task_group_context&, tbb::detail::d1::wait_context&, tbb::detail::d1::task_group_context&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text+0x407): undefined reference to `tbb::detail::r1::destroy(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text+0x416): undefined reference to `tbb::detail::r1::throw_exception(tbb::detail::d0::exception_id)'; /usr/bin/ld: CMakeFiles/Imt.dir/src/TThreadExecutor.cxx.o: in function `tbb::detail::d1::task_arena_function<ROOT::Internal::ParallelReduceHelper<float>(std::vector<float, std::allocator<float> > const&, std::function<float (float, float)> const&)::{lambda()#2}, float>::operator()() const':; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931:9000,allocate,allocate,9000,https://root.cern,https://github.com/root-project/root/issues/11931,1,['allocate'],['allocate']
Energy Efficiency,~~This PR should turn green when [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790) is resolved.~~ A temporary workaround for greedy jitting of `Cache` and `Snapshot` has been added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3602:22,green,green,22,https://root.cern,https://github.com/root-project/root/pull/3602,1,['green'],['green']
Energy Efficiency,‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:41:19.724Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:41:20.000Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:41:20.000Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:41:20.000Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T12:41:20.001Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 298 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162979/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162979/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162979/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162979/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944#issuecomment-1361299071:2189,Watt,Wattributes,2189,https://root.cern,https://github.com/root-project/root/pull/11944#issuecomment-1361299071,1,['Watt'],['Wattributes']
Energy Efficiency,‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:17:53.604Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:17:53.604Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:17:53.604Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:17:53.604Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] ; - [2022-12-21T17:17:53.605Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 298 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163010/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163010/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163010/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163010/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361747375:2189,Watt,Wattributes,2189,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361747375,1,['Watt'],['Wattributes']
Energy Efficiency,"… spectrum and adjust final plot. The files are taken form publiceos!. The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```; Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %; Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %; ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803:848,charge,charge,848,https://root.cern,https://github.com/root-project/root/pull/2803,1,['charge'],['charge']
Energy Efficiency,"…ference types."". This patch reduces deserializing of lazy template specializations from the PCH as it reduces the hash collisions (now we distinguish between pointer and reference types).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1810:29,reduce,reduces,29,https://root.cern,https://github.com/root-project/root/pull/1810,2,['reduce'],['reduces']
Energy Efficiency,"…pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #16124",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16113:176,reduce,reduce,176,https://root.cern,https://github.com/root-project/root/pull/16113,1,['reduce'],['reduce']
Energy Efficiency,…totype. Picked and adapted from Cppyy: try to get the requested method with; GetMethodWithPrototype with prototypes that consider reference; parameters too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4304:20,adapt,adapted,20,https://root.cern,https://github.com/root-project/root/pull/4304,1,['adapt'],['adapted']
Energy Efficiency,"…ue,Array}. when they are attached to the same branch.; TNamedBranchProxy did not implement a Hash method.; Therefore when adding TNamedBranchProxy instances to the THashList dedicated to their bookkeping in TTreeReader TObject::Hash was used.; Unfortunately when trying to find the TNamedBranchProxies, their name was used and the hash was built differently by THashList (based on the name).; In order to fix this the following steps were taken.; - THashList was replaced by an unordered_map with names as keys and unique_ptr<TNamedBranchProxy> as values. The unique_ptr is used to automatically manage ownership.; - The key is not the name of the branch as known by the branch any more but rather the name the user inputs in the constructor of the TTreeReader{Array,Value}.; - An exception is thrown in debug mode if the system tries to push in the TTreeReader collection of proxy with a name held by a proxy in that collection.; - The methods of TTreeReader were adapted to use this new container as well as the code in TTreeReaderValue and TTreeReaderArray. A real usecase from CMS where the mass of the W boson is studied shows a significant speedup (30%).; The code uses TDataFrame and several nodes are created which read from the same branch in an input tree which holds weights in a collection.; This configuration stressed the performance degradation pattern fixed by this commit as it triggered multiple times the deserialisation of the ""weights branch"". Thanks to Elisabetta Manca and Lorenzo Bianchini for providing the bug report and initial reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1784:966,adapt,adapted,966,https://root.cern,https://github.com/root-project/root/pull/1784,2,['adapt'],['adapted']
Energy Efficiency,"🤔 Just to understand, is it a known real leak or a false positive?. I initially thought it was something we in any case could not fix on our side and I also suppressed the sanitiser leak as described [here](https://gitlab.ep1.rub.de/fp311online/cern-root/-/tree/v6-22-08-ep1/core/sanitizer?ref_type=heads) (not sure this is an official documentation, but it's something google brought to my attention). In particular I added; ```; cd root_install/etc/; printf '\n#Full libCling for SMASH\nleak:libCling\n' >> lsan-root.supp; ```; together with; ```dockerfile; # This will let sanitizer suppress leaks according to suppressions file list of patterns; ENV LSAN_OPTIONS=""suppressions=${ROOTSYS}/etc/lsan-root.supp:print_suppressions=0""; ```; to my Dockerfile. Doing so, all the unit tests pass, but I then monitored memory usage over a long run of our application and a linear growth was evident (plot left below). Nothing extreme, sure, but I thought it was worth reporting, especially since in `v6.26.10` the problem does not occur (plot right below). 🤷‍♂️ . <div align=""center"">. <img src=""https://github.com/root-project/root/assets/13135070/ca744a83-51ca-4143-ba20-bf481e60c6b8"" width=""360"" />; <img src=""https://github.com/root-project/root/assets/13135070/a68a2ced-a04f-4698-a0e0-a72cf6dd9d1d"" width=""355"" />. </div>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1814642915:803,monitor,monitored,803,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1814642915,1,['monitor'],['monitored']
Integrability,"	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf; Integrating Gaussian distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04; 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07; 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03; Integrating ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:2801,Integrat,Integrating,2801,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability," 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:2016,Integrat,Integrating,2016,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability," ""3.12.6"", minimum required is ""3.0"") found components: Interpreter ; -- The xar file format has been deprecated: LLVM_HAVE_LIBXAR might be removed in the future.; -- Native target architecture is AArch64; -- Threads disabled.; -- Doxygen disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: arm64-apple-darwin24.0.0; -- LLVM default target triple: arm64-apple-darwin24.0.0; -- Building with -fPIC; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 16.0.6; -- Host linker version: 1115.6.2; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.1~dev; -- Cling will look for C++ headers in '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1' at runtime.; -- And then fallback to: 'clang++'; -- Found arc4random_buf in stdlib.h; CMake Warning at net/http/CMakeLists.txt:90 (MESSAGE):; Not able to recognize SSL version 3.3.2, disable SSL. -- Distributed RDataFrame enabled; -- RapidYAML not found, only compiling RooFit with nlohmann-json parser; -- Found CHROME executable /Applications/Google Chrome.app/Contents/MacOS/Google Chrome major version 128; -- ROOT Configuration . System: Darwin-24.0.0; ROOT Platform: macosx; ROOT Architecture: macosxarm64; Processor: 10 core Apple M1 Max (arm64); Build type: Release; Install path: /Users/marcomeyer/Software/root/20240914; Compiler: AppleClang 16.0.0.16000022; C++ standard: 17; Compiler flags:; - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread; - C (built type specific): -O3 -DNDEBUG; - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++; - C++ (bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350895635:4244,MESSAGE,MESSAGE,4244,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350895635,2,['MESSAGE'],['MESSAGE']
Integrability," ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TMemFile.cxx:154:42: error: class ‘TMemFile’ does not have any field named ‘fBlock’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TMemFile.cxx:154:49: error: expected ‘(’ before ‘andList’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TMemFile.cxx:154:49: error: expected ‘{’ before ‘andList’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TMemFile.cxx:154:56: error: expected constructor, destructor, or type conversion before ‘(’ token . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2248#issuecomment-400268284:1096,depend,depends,1096,https://root.cern,https://github.com/root-project/root/pull/2248#issuecomment-400268284,1,['depend'],['depends']
Integrability, - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1686,interface,interface,1686,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,1,['interface'],['interface']
Integrability, - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1686,interface,interface,1686,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['interface'],['interface']
Integrability, - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1686,interface,interface,1686,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,1,['interface'],['interface']
Integrability," -- Configuring done; CMake Warning (dev):; Policy CMP0068 is not set: RPATH settings on macOS do not affect; install_name. Run ""cmake --help-policy CMP0068"" for policy details. Use; the cmake_policy command to set the policy and suppress this warning. For compatibility with older versions of CMake, the install_name fields for; the following targets are still affected by RPATH settings:. ZevLib. This warning is for project developers. Use -Wno-dev to suppress it. -- Generating done; -- Build files have been written to: /Users/couet/git/zevis-build. % make; /Applications/CMake.app/Contents/bin/cmake -S/Users/couet/git/zevis -B/Users/couet/git/zevis-build --check-build-system CMakeFiles/Makefile.cmake 0; /Applications/CMake.app/Contents/bin/cmake -E cmake_progress_start /Users/couet/git/zevis-build/CMakeFiles /Users/couet/git/zevis-build/CMakeFiles/progress.marks; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/Makefile2 all; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/ZevLib.dir/build.make CMakeFiles/ZevLib.dir/depend; [ 1%] Generating G__ZevLib.cxx, libZevLib_rdict.pcm, libZevLib.rootmap; /Applications/CMake.app/Contents/bin/cmake -E env LD_LIBRARY_PATH=/Users/couet/git/couet-root-bin/lib:/Users/couet/git/couet-root-bin/lib /Users/couet/git/couet-root-bin/bin/rootcling -v2 -f G__ZevLib.cxx -s /Users/couet/git/zevis-build/libZevLib.dylib -rml libZevLib.dylib -rmf /Users/couet/git/zevis-build/libZevLib.rootmap -inlineInputHeader -IZevLib/inc -I/Users/couet/git/couet-root-bin/include -I/Users/couet/git/zevis ZevLib/dict/ZevLib_Classes.hh /Users/couet/git/zevis/ZevLib/dict/LinkDef.hh; input_line_12:3:10: fatal error: 'ZFTD.h' file not found; #include ""ZFTD.h""; ^~~~~~~~; Error: /Users/couet/git/couet-root-bin/bin/rootcling: compilation failure (/Users/couet/git/zevis-build/libZevLib560a827c25_dictUmbrella.h); make[2]: *** [G__ZevLib.cxx] Error 1; make[1]: *** [CMakeFiles/ZevLib.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693277452:4118,depend,depend,4118,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693277452,1,['depend'],['depend']
Integrability," -Droofit:BOOL=ON -Droot7:BOOL=ON -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=ON -Dsqlite:BOOL=OFF -Dssl:BOOL=ON -Dtcmalloc:BOOL=OFF -Dtmva-cpu:BOOL=ON -Dtmva-gpu:BOOL=OFF -Dtmva-pymva:BOOL=ON -Dtmva-rmva:BOOL=OFF -Dtmva:BOOL=ON -During:BOOL=OFF -Dunuran:BOOL=OFF -Dvc:BOOL=OFF -Dvdt:BOOL=OFF -Dveccore:BOOL=OFF -Dvecgeom:BOOL=OFF -Dvmc:BOOL=OFF -Dwebgui:BOOL=ON -Dx11:BOOL=ON -Dxml:BOOL=ON -Dxproofd:BOOL=OFF -Dxrootd:BOOL=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_STANDARD=17 -DCMAKE_C_COMPILER=clang -DCMAKE_C_STANDARD=11 -DCMAKE_Fortran_COMPILER=gfortran -DCMAKE_Fortran_FLAGS=-std=legacy -DCLANG_DEFAULT_CXX_STDLIB=libc++ -DLLVM_ENABLE_LIBCXX:BOOL=ON -Dlibcxx:BOOL=ON /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99; ```; Notes:; * Source built is 66df8b8ee6b336197678950c4f9c83f2c479662a, attached patches recommended:; * [fermi_root_6_27_99.patch](https://github.com/root-project/root/files/10393538/fermi_root_6_27_99.patch); * [fermi_root_6.patch](https://github.com/root-project/root/files/10393540/fermi_root_6.patch); * [rootcling-verbose.patch](https://github.com/root-project/root/files/10393542/rootcling-verbose.patch); * Platform is SLF7/x64_64 with externally-built Clang14.; * ROOT is built (see CMake command line above) with libc++ and C++17.; * You'll need to tweak paths, boolean options, and `buildtin_X` for your environment as necessary. ; * Clang 14 was bootstrapped: initially built with GCC 12.2 and then itself, with lib and runtime settings (`libc++`/`compiler-rt`/`cxxabi`) set so that the resulting compiler and libraries have _no_ dependence on the original compiler/library/runtime used to build it. Also, the resulting compiler uses `libc++`/`compiler-rt`/`cxxabi` by default. This _shouldn't_ matter, and I wouldn't try to duplicate this without first trying a vanilla Clang14 build, but I include this information JiC.; * My first attempt to reproduce would be by stripping down all not-obviously-required externals and trying with a vanilla Clang14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1378895796:4049,depend,dependence,4049,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1378895796,1,['depend'],['dependence']
Integrability," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:5633,wrap,wrapper,5633,https://root.cern,https://github.com/root-project/root/issues/11657,2,['wrap'],['wrapper']
Integrability," /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97; 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99; 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103; 17: call_init.part.0 in ./elf/./elf/dl-init.c:70; 18: call_init in ./elf/./elf/dl-init.c:33; 19: _dl_init in ./elf/./elf/dl-init.c:117; 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 21: dl_open_worker in ./elf/./elf/dl-open.c:808; 22: dl_open_worker in ./elf/./elf/dl-open.c:771; 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 24: _dl_open in ./elf/./elf/dl-open.c:883; 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152; 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131; 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397; 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173; 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163; 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:26663,depend,depends,26663,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['depend'],['depends']
Integrability," 0, 5};; x.setBins(25);; y.setBins(25);. RooRealVar x0(""x0"", ""x0"", 2.5, -5., 5.);; RooRealVar sigma(""sigma"", ""sigma"", 0.02, 1.E-4, 1.);; RooRealVar alpha(""a"", ""a"", 1., 1.E-6, 100.);; RooRealVar n(""n"", ""n"", 1., 1.E-6, 100.);; RooCrystalBall crystalBall(""cb1"", ""cb1"", x, x0, sigma, alpha, n);; RooCBShape cbShape(""cb2"", ""cb2"", x, x0, sigma, alpha, n);. // This one is not exact, and it fact should not be implemented.; // It is unnecessary because it forwards to the generator of the underlying Pdf; RooBinSamplingPdf binSamplingPdf(""binSamplingPdf"", ""binSamplingPdf"", x, crystalBall);. RooDataHist templHist{""templHist"", ""templHist"", x};; templHist.set(x.getBin(), 100.0, -1.0);. RooDataSet templData{""templData"", ""templData"", x};; for (int i = 0; i < x.numBins(); ++i) {; x.setBin(i);; templData.add(x);; }; x.setVal(2.5);. // no interpolation; RooHistFunc histFunc{""histFunc"", ""histFunc"", x, templHist, 0};; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, templHist, 0};. RooWrapperPdf wrapperPdf{""wrapperPdf"", ""wrapperPdf"", histFunc};. RooKeysPdf keysPdf{""keysPdf"", ""keysPdf"", x, templData};. RooArgSet normSet0{}; // check empty normalization set; RooArgSet normSet1{x}; // check ""usual"" normalization set; RooArgSet normSet2{x, y}; // it should also handle extra disconnected observables. // init caches; wrapperPdf.getVal(normSet1);. auto test = [&](RooAbsReal const &func, RooArgSet const &nset) {; int maxValCode = func.getMaxVal(nset);; double maxVal = NAN;; if (maxValCode != 0); maxVal = func.maxVal(maxValCode);; std::cout << func.ClassName() << nset << "": "" << func.getVal(nset) << "" "" << maxVal << std::endl;; };. for (auto &normSet : {normSet0, normSet1, normSet2}) {; std::cout << std::endl;. test(histFunc, normSet);; test(histPdf, normSet);; test(keysPdf, normSet);; test(crystalBall, normSet);; test(cbShape, normSet);; test(wrapperPdf, normSet);; test(binSamplingPdf, normSet);; // still missing: RooFFTConvPdf, RooSPHarmonic, and RooLegendre; }; ```. The output is:; ```; RooHistFunc()",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12317:1248,wrap,wrapperPdf,1248,https://root.cern,https://github.com/root-project/root/issues/12317,3,['wrap'],['wrapperPdf']
Integrability," 0; bash-4.2$ rm /tmp/vvasilev/vvasilev/afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp*; bash-4.2$ /usr/bin/time -v python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp')"" ; ACLiC:0: RuntimeWarning: /afs/cern.ch/user/t/tnanut/public/Stephan is not writable!; ACLiC:0: RuntimeWarning: Output will be written to /tmp/vvasilev/vvasilev; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/vvasilev/vvasilev//afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. 	Command being timed: ""python3 -c import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp')""; 	User time (seconds): 10.15; 	System time (seconds): 9.33; 	Percent of CPU this job got: 60%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:32.42; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 289024; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 77343; 	Minor (reclaiming a frame) page faults: 410033; 	Voluntary context switches: 132557; 	Involuntary context switches: 153; 	Swaps: 0; 	File system inputs: 15192688; 	File system outputs: 928; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```. It looks like the version in the master takes around 10s. It is still a lot more than what it used to be but that is the cost of having more accurate low-level linker symbol resolution system. I assume we could bring this probably closer to the initial timing (eg may get factor 2 speedup) but that will likely come at the cost of introducing more complex, hard-to-debug and hard-to-maintain code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774#issuecomment-931958356:6665,message,messages,6665,https://root.cern,https://github.com/root-project/root/issues/7774#issuecomment-931958356,2,['message'],['messages']
Integrability," 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C7E84: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:137); ==270704== by 0x66C837E: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMetho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:10408,depend,depends,10408,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3764,message,message,3764,https://root.cern,https://github.com/root-project/root/issues/16242,1,['message'],['message']
Integrability," 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2552,rout,routine,2552,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability," 2022 MacOSX13.1.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:57 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:56 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:1793,contract,contract,1793,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['contract'],['contract']
Integrability, 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataframe-test-dataframe-resptr; 406/1231 Test #383: gtest-tree-dataframe-test-dataframe-resptr .......................... Passed 0.61 sec; Start 384: gtest-tree-dat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:2699,interface,interface,2699,https://root.cern,https://github.com/root-project/root/pull/10300,1,['interface'],['interface']
Integrability," ; ```c++; #include <iostream>; #include <fstream>; #include<TRandom.h>. float input_lambda(float width){; return -6.347e-07*width*width+0.0015*width+1.835;; }. void exampleND(){; auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);; myy->setBins(450.);. auto w = new RooWorkspace(""w"");. auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);; for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}; auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);; for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}; hist_1->Scale(1./hist_1->Integral());; hist_400->Scale(1./hist_400->Integral());. auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);; auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_pdf_1 = new RooHistPdf(""hist_pdf_1"", ""hist_pdf_1"", RooArgList(*myy), *data_sig_1);; auto hist_pdf_400 = new RooHistPdf(""hist_pdf_400"", ""hist_pdf_400"", RooArgList(*myy), *data_sig_400);. std::vector<float> Lambda_list = {1., 400.};; auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);; auto paramVec = TVectorD(2);; for (int j = 0; j < 2; ++j){; 	paramVec[j] = Lambda_list[j];; }. auto morph_ND = new RooMomentMorphND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_pdf_1, *hist_pdf_400), paramVec, RooMomentMorphND::Linear);. w->import(*morph_ND);; w->Print();; w->writeToFile(""test_workspace.root"");; }; ```; If you run the code, you will see the the error occurs at line 40, where I see the error message cites the issue as being related to the ""_referenceGrid"" not able to be saved. . The output seen is:; ```; Warning in <TStreamerInfo::Build>: RooMomentMorphND: RooMomentMorphND::Grid has no streamer or dictionary, data member ""_referenceGrid"" will not be saved. *** Break *** segmentation violation; __boot(); import os; ```. ### Setup; For the record, I am using ROOT Version: 6.24/06",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876:2055,message,message,2055,https://root.cern,https://github.com/root-project/root/issues/11876,1,['message'],['message']
Integrability," = double]’, declared using local type ‘testConvBackwardPass(size_t, size_t, size_t, size_t, size_t, size_t, size_t, typename Architecture::Scalar_t, ETestType) [with Architecture = TMVA::DNN::TCpu&lt;double&gt;; size_t = long unsigned int; typename Architecture::Scalar_t = double]::&lt;lambda(Scalar_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - include/Vc/scalar/vector.h:288:9: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/sse/vector.h:318:9: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/common/simdarray.h:450:5: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - include/Vc/common/simdarray.h:1377:5: warning: declaration of ‘reference’ shadows a previous local [-Wshadow] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2980#issuecomment-439015981:1999,depend,depends,1999,https://root.cern,https://github.com/root-project/root/pull/2980#issuecomment-439015981,1,['depend'],['depends']
Integrability," > Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT.; > ; > Well, the problem is that this is no so easy to control. LLVM can come in from a dependency chain via many libraries like OpenCL / Vulkan / arrow. And I am afraid this will become more complicated in the future. Instead of messing with each of them, I thought it might be better to fix the issue in a single place on the ROOT side.; > ; > > I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; > I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that.; > ; > > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; > All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt to be compiled with -fPIC. But again, if there is a better way, I am also in favor of avoiding -fPIC-; > ; > > This check is to protect the subsequent `dlsyms` in TCling to resolve symbols from the wrong place. We can fix the check and play with the JIT resolution logic by playing with the search order here:; > > https://github.com/root-project/root/blob/39630b7530771be3e4643048361886dcfb057f07/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299-L302; > > ; > > The challenge is to come u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564024419:1511,depend,dependent,1511,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564024419,1,['depend'],['dependent']
Integrability," Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.12.0; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Looking for OpenGL; -- Looking for LibXml2; -- Looking for MySQL; -- Looking for SQLite; -- Looking for FFTW3; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.0 (setting -DROOTXRDVERS=500050000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /Users/marcomeyer/Software/xrootd/5.5.0/include/xrootd;/Users/marcomeyer/Software/root/src/proof/xrdinc; -- libraries: /Users/marcomeyer/Software/xrootd/5.5.0/lib/libXrdUtils.dylib;/Users/marcomeyer/Software/xrootd/5.5.0/lib/libXrdCl.dylib; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.4; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool; -- Native target ARM is not selected; lli will not JIT code; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:2008,wrap,wrapper,2008,https://root.cern,https://github.com/root-project/root/issues/14337,1,['wrap'],['wrapper']
Integrability," ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:153:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillParHelper<TH1D>, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto actionPtr = BuildAction<BranchTypes...>(bl, std::move(rOnHeap), nSlots, std::move(prevNodePtr), ActionTag{},; ^; input_line_35:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase, TH1D>' requested here; ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:2939,Interface,InterfaceUtils,2939,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability," I suppose you also need to create a new `__init__.py` file in the same directory. That would be enough for this PR I think. Here are some thoughts on what to do as we proceed (of course you can do some of it also in this PR if you like). We probably will have some common helper classes for RooFit pythonizations at some point, as there are reoccurring patterns, like the `RooCmdArg` pattern you saw in [`fitTo`](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8). Then, I'd suggest to we don't create a new `@pythonization()` function every RooFit class we pythonize in the future, because that would mean to pattern-match all class names one after the other. Maybe we can have a single `@pythonization()` in `ROOT/pythonization/_roofit/__init__.py` that checks if the class has a name starting with `Roo`. If it does, it will call all the roofit pythonization functions that we create. As we add more pythonizations, we probably have to add some doxygen text if the pythonized interface behaves in any way dfferent from the C++ interface. An example here is [RVec](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rvec.py#L11) (this is how it looks like in the [documentation](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref)). Finally, we can consider also adding some docstring to the pythonized function. That would be convenient in an interactive python shell, i.e. one could just type `??gaus.fitTo` and get a nice documentation for the pythonized function. However, I'm not sure if this is really worth it because it probably means duplication of documentation text. Still it's something to keep in mind. Right now, only pyROOT functions that are not pythonizations of C++ functions have such a docstring (e.g. [`RDataFrameAsNumpy`](https://github.com/root-project/root/blob/90116604cdd34cf296d0bbe8f636545ca239a6af/bindings/pyroot/python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-790082105:1997,interface,interface,1997,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-790082105,2,['interface'],['interface']
Integrability," Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; ```.sh-session; [root@csresearch00 /scratch/root]# patch --verbose -p0 < ../tmp-products/root/v6_27_99f2/patch/fermi_root_6_27_99.patch ; [root@csresearch00 /scratch]# cd ../; [root@csresearch00 /scratch]# rm -rf build; [root@csresearch00 /scratch]# mkdir build; [root@csresearch00 /scratch]# setup -z ../tmp-products/root/v6_27_99f2/fakedb -z /products root v6_27_99f2 -q+c14:p3913:debug; [root@csresearch00 /scratch]# unsetup -j root; [root@csresearch00 /scratch]# setup ninja; [root@csresearch00 /scratch]# setup cmake v3_23_1; [root@csresearch00 /scratch]# cd build; [root@csresearch00 /scratch/build]# cmake -GNinja -DCMAKE_BUILD_TYPE=Debug '-DCMAKE_IGNORE_PATH=/usr/local/lib;/usr/local/include;/usr/local/bin' -DCMAKE_INSTALL_PREFIX=/scratch/install/root/v6_27_99f2/Linux64bit+3.10-2.17-c14-p3913-debug -Dall:BOOL=OFF -Dasan:BOOL=OFF -Dasserts:BOOL=ON -Dccache:BOOL=OFF -Dclingtest:BOOL=OFF -Dcoverage:BOOL=OFF -Dcxxmodules:BOOL=OFF -D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1403723179:2846,inject,injected,2846,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1403723179,1,['inject'],['injected']
Integrability," NOT find CFITSIO (missing: CFITSIO_LIBRARY CFITSIO_INCLUDE_DIR); -- CFITSIO not found. You can enable the option 'builtin_cfitsio' to build the library internally'; -- For the time being switching off 'fitsio' option; -- Looking for XROOTD; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.4.2; -- Could NOT find GFAL (missing: GFAL_INCLUDE_DIR SRM_IFCE_INCLUDE_DIR GFAL_LIBRARY); -- GFAL library not found. Set variable GFAL_DIR to point to your gfal installation; and the variable SRM_IFCE_DIR to the srm_ifce installation; -- For the time being switching OFF 'gfal' option; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:7469,depend,dependencies,7469,https://root.cern,https://github.com/root-project/root/issues/10528,1,['depend'],['dependencies']
Integrability," No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9278,message,message,9278,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability," ROOT_HIST=0; 885: Test timeout computed to be: 1500; 885: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 885: error code: -529697949; 885:; 885:; 8/16 Test #885: tutorial-dataframe-df010_trivialDataSource-py ............***Failed 4.46 sec; test 886; Start 886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py. 886: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 886: Environment variables:; 886: ROOT_HIST=0; 886: Test timeout computed to be: 1500; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py ...***Failed 4.43 sec; test 887; Start 887: tutorial-dataframe-df014_CSVDataSource-py. 887: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df014_CSVDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 887: Environment variables:; 887: ROOT_HIST=0; 887: Test timeout computed to be: 1500; [TFile::Cp] Total 14.46 MB |====================| 100.00 % [57.6 MB/s]; 887: Traceback (most recent call last):; 887: File ""C:/Users/sftnight/git/master/tutorials/launcher.py"", line 33, in <module>; 887: spec.loader.exec_module(module); 887: File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module; 887: File ""<frozen importlib._boot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:7816,message,message,7816,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability," TNode::CheckOverlaps => TGeoVolume::CheckOverlaps => TGeoPainter::CheckOverlaps => TGeoChecker::CheckOverlaps | => TGeoChecker::MakeCheckOverlap; | => TGeoChecker::CheckOverlapsBySampling; ```. However [the line using this parameter in the sampling case (l.1271) is commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1271).; It was commented in https://github.com/root-project/root/commit/406af49ee13e135d7c2f1268370ea83e0a99c729 and the commit message does not mention this change explicitly (maybe a consequence of the introduction of the usage of `Voxels`?). The [corresponding line for the non-sampling method is in `TGeoChecker::MakeCheckOverlap` (l.1173) and not commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1173), which would indicate that the intended original usage is still valid. We (CBMROOT) stumbled upon this as we started to find for some of our geometries overlaps with total integrated volume in the order of `10^-6 to 10^-10 cm3` when changing the sampling points number. We first started by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:1611,integrat,integrated,1611,https://root.cern,https://github.com/root-project/root/issues/14675,1,['integrat'],['integrated']
Integrability," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:1702,message,message,1702,https://root.cern,https://github.com/root-project/root/issues/7345,1,['message'],['message']
Integrability," [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1372 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51612/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_aclicDataMemberSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51612/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.evolution.version5.roottest_root_meta_evolution_version5_execNestedColl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51612/testRep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-454627604:2426,depend,depends,2426,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-454627604,1,['depend'],['depends']
Integrability," [~]: rootls -l myfile.root ; TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px""; TProfile Jun 12 10:00 2021 hprof ""Profile of pz versus px""; TH1F Jun 12 10:00 2021 hpx ""This is the px distribution""; TH1F Jun 12 10:00 2021 hpx ""This is the px distribution""; TH2F Jun 12 10:00 2021 hpxpy ""py vs px""; TH2F Jun 12 10:00 2021 hpxpy ""py vs px""; TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple""; TNtuple Jun 12 10:00 2021 ntuple ""Demo ntuple""; ```. Example with ROOT master@fa3677a8e579e14feb72efaef381ac00514dff77; ```; [~]: rootls -l myfile.root ; TProfile Jun 12 10:00 2021 hprof;2 ""Profile of pz versus px"" [current cycle]; TProfile Jun 12 10:00 2021 hprof;1 ""Profile of pz versus px"" [backup cycle]; TH1F Jun 12 10:00 2021 hpx;2 ""This is the px distribution"" [current cycle]; TH1F Jun 12 10:00 2021 hpx;1 ""This is the px distribution"" [backup cycle]; TH2F Jun 12 10:00 2021 hpxpy;2 ""py vs px"" [current cycle]; TH2F Jun 12 10:00 2021 hpxpy;1 ""py vs px"" [backup cycle]; TNtuple Jun 12 10:00 2021 ntuple;2 ""Demo ntuple"" [current cycle]; TNtuple Jun 12 10:00 2021 ntuple;1 ""Demo ntuple"" [backup cycle]; ```. I have always found that showing namecycles makes the output much more difficult to understand in general (even with TFile::ls at the prompt). At the same time namecycles are a thing and some users might want to see them, so I'd be inclined to add a specific extra option for that such as `--namecycles` or `-n`. . Or one could see it from the other side and say that the current `-l` option is already the correct one to show multiple namecycles since ""longListing"" should include every extra detail possible about the objects in the file (including namecycles). If we go for this route though I would still say that the `-t` option is a bit confusing since it is effectively a `-l` option but just for trees.; ```; vpadulan@fedorathinkpad-T550 [~]: rootls -h; [...]; -l, --longListing Use a long listing format.; -t, --treeListing Print tree recursively and use a long listing format.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8361#issuecomment-860019489:1912,rout,route,1912,https://root.cern,https://github.com/root-project/root/issues/8361#issuecomment-860019489,1,['rout'],['route']
Integrability," ] Implement batch eval for Chi2 test stat; - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401); - [x] Implement getWeightBatch() and getBatches() for RooDataHist; - [ ] Implement getBatch for RooTreeDataStore?; - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:1027,integrat,integration,1027,https://root.cern,https://github.com/root-project/root/issues/6557,1,['integrat'],['integration']
Integrability," a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context about the problem here.; -->. At least [one user](https://root-forum.cern.ch/t/break-segmentation-violation-for-a-compiled-program/42022/12) could have used a better error message :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:1941,message,message,1941,https://root.cern,https://github.com/root-project/root/issues/6743,2,['message'],['message']
Integrability," a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make -Croot-build -j7 install; # This last command fails; ```. ### ROOT version. https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, i.e. `v6-27-02~243^2~17`. ### Installation method. git clone, cmake, make. ### Operating system. Linux Ubuntu 23.04. ### Additional context. ## Why would you want to do that???. A valid question is why one would want to build ROOT inside a qemu/docker environment where a foreign architecture is emulated? Well, just for this PR in fact, to make it self-contained and (somewhat) debuggable. You can also build a container natively on ARM, upload to docker, and atempt to run ROOT inside that container on a qemu/docker arm64 emulation, with the same results. ## Still, why would you want to do that???. We have provided ARM containers for our users at the Electron-Ion Collider for a while now. In the absence of ARM nodes on our container build cluster, we build these using emulation. Aside from a rare major dependency recompile, this works well enough. As of ROOT v6.28 we have had to stop providing ARM images for our users because the C++20 feature of the upgrade was more important than the continued ARM support. Nevertheless, we would like to bring back ARM support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:5722,depend,dependency,5722,https://root.cern,https://github.com/root-project/root/issues/13845,1,['depend'],['dependency']
Integrability," address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); > ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); > IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; > You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; > Maybe you need to load the corresponding shared library?; > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); > ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); > terminate called after throwing an instance of 'cling::InvalidDerefException'; > what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; > ==22765== ; > ==22765== Process terminating with default action of signal 6 (SIGABRT); > ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250619567:7037,rout,routine,7037,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250619567,1,['rout'],['routine']
Integrability," and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/rint/src/TTabCom.cxx:1378:14: warning: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/net/src/TSecContext.cxx:266:24: warning: ‘)’ directive output may be truncated writing 1 byte into a region of size between 0 and 9 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 72 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41119/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41119/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423484950:2220,depend,depends,2220,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423484950,1,['depend'],['depends']
Integrability," and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/rint/src/TTabCom.cxx:1378:14: warning: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/net/src/TSecContext.cxx:266:24: warning: ‘)’ directive output may be truncated writing 1 byte into a region of size between 0 and 9 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 72 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41020/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41020/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423234786:2220,depend,depends,2220,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423234786,1,['depend'],['depends']
Integrability," and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/rint/src/TTabCom.cxx:1378:14: warning: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/net/src/TSecContext.cxx:266:24: warning: ‘)’ directive output may be truncated writing 1 byte into a region of size between 0 and 9 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 72 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41083/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/41083/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423470178:2220,depend,depends,2220,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423470178,1,['depend'],['depends']
Integrability," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:5190,rout,routine,5190,https://root.cern,https://github.com/root-project/root/issues/10191,1,['rout'],['routine']
Integrability," be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```; Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V ; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Add coverage exclude regular expressions.; SetCTestConfiguration:CMakeCommand:/usr/bin/cmake; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Test project /scratchnvme/bendavid/rootdev2/build; Constructing a list of tests; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 76; Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 104 tests from 3 test suites.; 76: [----------] Global test environment set-up.; 76: [----------] 6 tests from InterpreterLock; 76: [ RUN ] InterpreterLock.ConcurrentCalc; 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms); 76: [ RUN ] InterpreterLock.ReadLocks; 76: [ OK ] InterpreterLock.ReadLocks (95 ms); 76: [ RUN ] InterpreterLock.BalancedUserReadLock; 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms);",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:1309,depend,dependency,1309,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['depend'],['dependency']
Integrability," between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```; 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 126 tests from 3 test suites.; 76: [----------] Global test environment set-up.; 76: [----------] 6 tests from InterpreterLock; 76: [ RUN ] InterpreterLock.ConcurrentCalc; 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms); 76: [ RUN ] InterpreterLock.ReadLocks; 76: [ OK ] InterpreterLock.ReadLocks (78 ms); 76: [ RUN ] InterpreterLock.BalancedUserReadLock; 76: [ OK ] InterpreterLock.Balanc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:1044,depend,dependency,1044,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['depend'],['dependency']
Integrability," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:1553,message,message,1553,https://root.cern,https://github.com/root-project/root/issues/8073,1,['message'],['message']
Integrability," by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256); ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578); ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722); ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743); ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643); ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433); ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379); ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629); ==2728568== by 0x4B1B291: Py_RunMain (main.c:709); ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763); ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58); ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd; ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483); ==2728568== by 0x3735A021: ???; ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802); ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895); ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99); ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767); ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123); ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203); ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956); ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133); ```. See also the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16014:1713,Wrap,WrapperCall,1713,https://root.cern,https://github.com/root-project/root/pull/16014,1,['Wrap'],['WrapperCall']
Integrability," can be used internally by `RooMinimizer` to speed up fitting with `migrad`. The way to use them is to use the new `RooMinimizer` constructor that takes a (pointer to a) `RooAbsL` likelihood class that was introduced in previous PR #8700. This PR is the seventh and final part of a split and clean-up of #8294. ## Changes or fixes:; - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace.; - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252.; - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets.; - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free.; - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication.; - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed.; - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally; - [x] update the docs (if necessary); - [x] unify copyright/license headers with previous commits; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:1332,Wrap,Wrapper,1332,https://root.cern,https://github.com/root-project/root/pull/9349,1,['Wrap'],['Wrapper']
Integrability," cbShape(""cb2"", ""cb2"", x, x0, sigma, alpha, n);. // This one is not exact, and it fact should not be implemented.; // It is unnecessary because it forwards to the generator of the underlying Pdf; RooBinSamplingPdf binSamplingPdf(""binSamplingPdf"", ""binSamplingPdf"", x, crystalBall);. RooDataHist templHist{""templHist"", ""templHist"", x};; templHist.set(x.getBin(), 100.0, -1.0);. RooDataSet templData{""templData"", ""templData"", x};; for (int i = 0; i < x.numBins(); ++i) {; x.setBin(i);; templData.add(x);; }; x.setVal(2.5);. // no interpolation; RooHistFunc histFunc{""histFunc"", ""histFunc"", x, templHist, 0};; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, templHist, 0};. RooWrapperPdf wrapperPdf{""wrapperPdf"", ""wrapperPdf"", histFunc};. RooKeysPdf keysPdf{""keysPdf"", ""keysPdf"", x, templData};. RooArgSet normSet0{}; // check empty normalization set; RooArgSet normSet1{x}; // check ""usual"" normalization set; RooArgSet normSet2{x, y}; // it should also handle extra disconnected observables. // init caches; wrapperPdf.getVal(normSet1);. auto test = [&](RooAbsReal const &func, RooArgSet const &nset) {; int maxValCode = func.getMaxVal(nset);; double maxVal = NAN;; if (maxValCode != 0); maxVal = func.maxVal(maxValCode);; std::cout << func.ClassName() << nset << "": "" << func.getVal(nset) << "" "" << maxVal << std::endl;; };. for (auto &normSet : {normSet0, normSet1, normSet2}) {; std::cout << std::endl;. test(histFunc, normSet);; test(histPdf, normSet);; test(keysPdf, normSet);; test(crystalBall, normSet);; test(cbShape, normSet);; test(wrapperPdf, normSet);; test(binSamplingPdf, normSet);; // still missing: RooFFTConvPdf, RooSPHarmonic, and RooLegendre; }; ```. The output is:; ```; RooHistFunc(): 100 nan; RooHistPdf(): 500 nan; RooKeysPdf(): 0.201299 nan; RooCrystalBall(): 1 nan; RooCBShape(): 1 nan; RooWrapperPdf(): 100 nan; RooBinSamplingPdf(): 0.308511 nan. RooHistFunc(x): 100 105; RooHistPdf(x): 5 105; RooKeysPdf(x): 0.218569 0.205937; RooCrystalBall(x): 9.92564 9.92564; RooCBShape(x): ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12317:1570,wrap,wrapperPdf,1570,https://root.cern,https://github.com/root-project/root/issues/12317,1,['wrap'],['wrapperPdf']
Integrability," code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630#issuecomment-1498932509:2681,wrap,wrapper,2681,https://root.cern,https://github.com/root-project/root/pull/12630#issuecomment-1498932509,1,['wrap'],['wrapper']
Integrability," commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/root-project/root/network/alerts). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863:1567,depend,dependabot,1567,https://root.cern,https://github.com/root-project/root/pull/11863,36,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability," copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46828/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2914#issuecomment-435440172:3181,depend,depends,3181,https://root.cern,https://github.com/root-project/root/pull/2914#issuecomment-435440172,1,['depend'],['depends']
Integrability," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:8677,interface,interface,8677,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability," dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:3387,interface,interface,3387,https://root.cern,https://github.com/root-project/root/pull/12681,8,['interface'],['interface']
Integrability," every computer; program, no matter how complicated, executes a sequence of elementary; arithmetic operations (addition, subtraction, multiplication, division, etc.); and elementary functions (exp, log, sin, cos, etc.). By applying the chain; rule repeatedly to these operations, derivatives of arbitrary order can; be computed automatically, accurately to working precision, and using at; most a small constant factor more arithmetic operations than the original; program. AD is an alternative technique to symbolic and numerical differentiation.; These classical methods run into problems: symbolic differentiation leads; to inefficient code (unless done carefully) and faces the difficulty of; converting a computer program into a single expression, while numerical; differentiation can introduce round-off errors in the discretization; process and cancellation. Both classical methods have problems with; calculating higher derivatives, where the complexity and errors increase.; Finally, both classical methods are slow at computing the partial; derivatives of a function with respect to many inputs, as is needed for; gradient-based optimization algorithms. Automatic differentiation solves; all of these problems, at the expense of introducing more software; dependencies. This patch allows ROOT to interoperate with clad. Namely, users can ask; the interpreter to produce a derivative or a gradient to a known function. An illustrative example code for first order derivative:. root [0] #include ""Math/CladDerivator.h""; root [1] double my_pow2(double x) { return x*x; }; root [2] auto derivative_meta_obj = clad::differentiate(my_pow2, /*wrt 1-st argument*/0);; root [3] derivative_meta_obj.dump();; The code is: double my_pow2_darg0(double x) {; return (1. * x + x * 1.);; }; root [5] derivative_meta_obj.execute(1) // no iterations, at the cost of function call.; (double) 2.0000000. Learn more about clad at https://github.com/vgvassilev/clad. Patch by Aleksandr Efremov(@efremale) and me!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378:1702,depend,dependencies,1702,https://root.cern,https://github.com/root-project/root/pull/2378,1,['depend'],['dependencies']
Integrability," failure:; * Fedora 39; * C++20; * ROOT built in Release mode (-O3); * The test `dataframe-vecops`, which needs to be run via ctest and using gtest infrastructure; * The test being compiled in release mode too. The failure is:; ```; 730/2406 Test #393: gtest-tree-dataframe-test-dataframe-vecops ........................................................***Failed 5.01 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RDFAndVecOps; [ RUN ] RDFAndVecOps.ReadStdVectorAsRVec; [ OK ] RDFAndVecOps.ReadStdVectorAsRVec (4678 ms); [ RUN ] RDFAndVecOps.DefineRVec; [ OK ] RDFAndVecOps.DefineRVec (0 ms); [ RUN ] RDFAndVecOps.SnapshotRVec; [ OK ] RDFAndVecOps.SnapshotRVec (6 ms); [ RUN ] RDFAndVecOps.RVecBool; double free or corruption (out); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```. And gdb says:; ```; 0 0x00007f25d4eae834 in __pthread_kill_implementation () from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324e1 in MakeTreeWithBools(std::__cxx11::basic_string<char, s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:1041,message,message,1041,https://root.cern,https://github.com/root-project/root/pull/14803,1,['message'],['message']
Integrability," file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9521,message,message,9521,https://root.cern,https://github.com/root-project/root/issues/13996,3,['message'],['message']
Integrability," for( int i = 0; i < 10; ++i) {; group.run([id](); {; auto thread_id = activity_group(0);; if(thread_id == 0 or thread_id != id) {; otherThreadStarted[id-1]=true;; }; if (thread_id != 0 and thread_id != id) {; std::cout <<""WRONG THREAD""<<std::endl;; }; if (thread_id !=0 and thread_id == id) {; std::cout <<""on starting thread""<< id <<std::endl;; while( not otherThreadStarted[id-1]);; return;; }; using namespace std::chrono_literals;; std::cout <<""start sleep ""<<id<< std::endl;; std::this_thread::sleep_for(3000ms);; std::cout <<""end sleep""<<std::endl;; });; }; group.wait();; #if defined(OTHER_ISOLATE); });; #endif; #if defined(OTHER); });; #endif; }; #if !defined(NO_ISOLATE); );; #endif; activity_group(100);; };. group.run(activity);; group.run(activity);; group.wait();. });; std::cout <<""main_arena execute finished""<<std::endl;; other_group.wait();; return 0;; }; ```. This 'simulates' the CMSSW framework running to ROOT output modules concurrently (represented by the `group.run(activity)` calls ). Within each of those 'modules' 10 new identical TBB tasks are launched and the waited upon. If a task from one 'module' ever is run on the thread of the other module (i.e. the thread doing the `group.wait()`) the program prints ""WRONG THREAD"". The program can be built with the options to; - Turn off task_arena isolation (-DNO_ISOLATE) at the 'module' level (this would represent removing such isolate calls in CMSSW); - Add another task arena (-DOTHER) which represents the global ROOT arena.; - Add task_arena isolate within the other arena (-DOTHER_ISOLATE) which would represent what would happen if ROOT internally called isolate within your own arena. The results are; - with only -DNO_ISOLATE see 'WRONG THREAD' message every time the program is run. This shows why CMS added the isolate; - with no other option, 'WRONG THREAD' is never seen; - with -DOTHER, see 'WRONG THREAD' every time >>> this is the case for what this PR does; - with -DOTHER_ISOLATE never see 'WRONG THREAD'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1971612644:3254,message,message,3254,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1971612644,1,['message'],['message']
Integrability," from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] . And 1185 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54842/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54842/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3495#issuecomment-470430033:2540,depend,depends,2540,https://root.cern,https://github.com/root-project/root/pull/3495#issuecomment-470430033,1,['depend'],['depends']
Integrability, gc run reported the following. Please correct the root cause ; - FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iinclude -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation.dir/src/FoundationUtils.cxx.o -MF core/foundation/CMakeFiles/Foundation.dir/src/FoundationUtils.cxx.o.d -o core/foundation/CMakeFiles/Foundation.dir/src/FoundationUtils.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx:114:15: error: ‘ROOTPREFIX’ was not declared in this scope ; - FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iinclude -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -fvisibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation_Stage1.dir/src/FoundationUtils.cxx.o -MF core/foundation/CMakeFiles/Foundation_Stage1.dir/src/FoundationUtils.cxx.o.d -o core/foundation/CMakeFiles/Foundation_Stage1.dir/src/FoundationUtils.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx:114:15: error: ‘ROOTPREFIX’ was not declared in this scope . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553#issuecomment-543023161:2239,message,message,2239,https://root.cern,https://github.com/root-project/root/pull/4553#issuecomment-543023161,1,['message'],['message']
Integrability, gc run reported the following. Please correct the root cause ; - FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iinclude -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation.dir/src/FoundationUtils.cxx.o -MF core/foundation/CMakeFiles/Foundation.dir/src/FoundationUtils.cxx.o.d -o core/foundation/CMakeFiles/Foundation.dir/src/FoundationUtils.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx:115:15: error: ‘ROOTPREFIX’ was not declared in this scope ; - FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iinclude -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -fvisibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation_Stage1.dir/src/FoundationUtils.cxx.o -MF core/foundation/CMakeFiles/Foundation_Stage1.dir/src/FoundationUtils.cxx.o.d -o core/foundation/CMakeFiles/Foundation_Stage1.dir/src/FoundationUtils.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/FoundationUtils.cxx:115:15: error: ‘ROOTPREFIX’ was not declared in this scope . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:887 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553#issuecomment-543040642:2239,message,message,2239,https://root.cern,https://github.com/root-project/root/pull/4553#issuecomment-543040642,1,['message'],['message']
Integrability," guess SrvAuthenticate is defined in DaemonUtils.[h|cxx] and refers to the libSrvAuth !; ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. Additionally, https://root.cern/doc/master/authserv_8C.html is not working due to this. Knowing that there are all these ./src/net/net/ useful classes about remote connections.. why is that TSocket is being deprecated ? https://github.com/root-project/root/commit/8ef5d04e0102290cc2457c5a7cc40fc9874fa006 . This is incredibly useful feature.. same for all other basic communication protocol developped in `./net/net/` directory. ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. ### Reproducer. https://root.cern/doc/master/authserv_8C.html; https://root.cern/doc/master/authclient_8C.html. ### ROOT version. 2023/08/01. ### Installation method. build form source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:1396,protocol,protocol,1396,https://root.cern,https://github.com/root-project/root/issues/13387,1,['protocol'],['protocol']
Integrability," here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628; this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument.; -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:; https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280; (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr); -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814; But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would be best if the lookup fails in this case, but aside from that, probably cppyy should throw an exception rather than returning a default value at htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1456059333:1228,Wrap,WrapperCall,1228,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1456059333,1,['Wrap'],['WrapperCall']
Integrability," https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager; > [], protocol version 500); >; > Fail Romania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed CERN:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout; >; > [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [; > eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Failed Technion:; >; >; > https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout; >; > [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [; > tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed Manchester:; >; >; > https://bigpanda.cern.ch//media/filebrowser/75e12a74-de3e-4b78-bc16-cfcde3fdcb77/panda/tarball_PandaJob_4926186317_UKI-NORTHGRID-MAN-HEP/payload.stdout; >; > [2020-12-19 00:36:00.516637 +0000][Debug ][XRootDTransport ] [; > bohr3226.tier2.hep.manchester.ac.uk:1094 #0.0] kX",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:4201,protocol,protocol,4201,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability," if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealFullVector` class; [RF] Enable AD code-gen test for RooFit.; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:3133,integrat,integration,3133,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability," in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):; 151: error code: 1; 151:; 151:; 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:4072,message,message,4072,https://root.cern,https://github.com/root-project/root/pull/3312,1,['message'],['message']
Integrability," issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:; ```; Torch Version: 2.0.1; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:955,message,message,955,https://root.cern,https://github.com/root-project/root/issues/13155,1,['message'],['message']
Integrability," like to give my two cents about this. > Instances of RDataFrame objects are meant to be treated like trees. I am curious about this first sentence. I have never got this impression, neither reading docs / toying with tutorials or doing more complex analyses with RDF. the first line of the [RDF docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html) says `ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. > there should be a function that allows us to merge them. If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; ```python; # Opening files and loading pre-existing datasets; df_1=ROOT.RDataFrame('tree', file_path_1); df_2=ROOT.RDataFrame('tree', file_path_2). # creating new columns in the datasets; df_1=df_1.Define('identity', '+1'); df_2=df_2.Define('identity', '+2'). # Merging the datasets in memory; df_3 = df_1.Merge(df_2); # Opening a new file and save the merged dataset into the new file; df_3.Snapshot('tree', ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927091065:1084,interface,interface,1084,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927091065,1,['interface'],['interface']
Integrability," linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:4689,interface,interface,4689,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['interface'],['interface']
Integrability, logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! mes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2042,message,message,2042,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability," ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 17 Sep 14:08 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:10 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:09 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft34 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:18735,contract,contract,18735,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['contract'],['contract']
Integrability," memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46214/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46214/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-434629864:3181,depend,depends,3181,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-434629864,1,['depend'],['depends']
Integrability, message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogge,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1341,message,message,1341,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability," my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary scripts. So we have about 2.5 issues. ; 1) The global command,; 2) the interface and ownership model, and; 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns. Objects are scoped only as far as requested. When that scope dies, or the container is reset, it's cleaned up where it is made. That's what smart pointers are all about. The PR as-is won't leak, but only because it's not flexible enough to create different things. It's a fragile gr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:4077,interface,interface,4077,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['interface'],['interface']
Integrability," necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRoo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:2433,interface,interface,2433,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['interface'],['interface']
Integrability, necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory var,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:1538,interface,interface,1538,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,1,['interface'],['interface']
Integrability," need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151:1535,depend,dependency,1535,https://root.cern,https://github.com/root-project/root/pull/5151,2,"['Interface', 'depend']","['Interface', 'dependency']"
Integrability," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:2738,interface,interface,2738,https://root.cern,https://github.com/root-project/root/issues/16553,3,['interface'],['interface']
Integrability," notice that for most types, the listed values are the minimum/maximum value that type can take, for example:; ```const UInt_t kMaxUInt = UInt_t(~0);```; (NB: on a system where ``sizeof(int)==2``, the compiler is (afaik) free to interpret 0 as int, whose complement will then be disappointingly small.); Under this interpretation, I want to cast doubt on ; ```; const Int_t kMaxUChar = 256;; const Int_t kMaxUShort = 65534;; ```; While there were some promising publications of computer scientists claiming to have succeeded in storing 256 in an unsigned char, later attempts to reproduce that research found that the bit sequence was indistinguishable from zero. The general consensus among computer scientists today is that the highest value which can be stored in a uint8_t is in fact 255. On the other hand, a few years later initially doubtful claims that 65535 could be stored in an unsigned short *were* replicated. Today, big tech (e.g. GAFAM) routinely store that value in their 16 bit numbers and even smaller startups are picking up on the trend. ``</sarcasm>``. (Also, while the kMaxUShort error is rendered harmless by the bitshift in kMaxShort, the kMaxUChar error means that kMinChar and kMaxChar are wrong. In fact, Char_t(kMinChar)>Char_t(kMaxChar) is true. However, nine out of ten math professors agree that the maximum of a set of values should be at least as large as the minimum of that set. ``[[citation needed]]``). These issues have been present in the codebase since at least ROOT5, so fixing them would break backwards compatibility. My suggestion is a different one. C++14 introduces an attribute called ``[[deprecated]]``. ```; [[deprecated(""kMaxUChar has a misleading value and should not be used.""; "" Please use std::numeric_limits<unsigned char>::max()"")]] ; const Int_t kMaxUChar = 256;; ```. And while we are at it, let's be honest: Most users are already somewhat aware that there is a C++ ecosystem outside the safe-ish space that is ROOT. The fallout of vendor-spe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12208:1917,rout,routinely,1917,https://root.cern,https://github.com/root-project/root/issues/12208,1,['rout'],['routinely']
Integrability," objects in an invalid state. See for; example this code:. ```c++; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. RooRealVar mean2(mean);. gauss.replaceServer(mean, mean2, true, false);; gauss.Print(""v"");. std::cout << ""x : "" << &gauss.getX() << std::endl;; std::cout << ""mean : "" << &gauss.getMean() << std::endl;; std::cout << ""sigma: "" << &gauss.getSigma() << std::endl;; ```. Here, the proxy for `mean` will still point to the original `mean`, but; the server was redirected to the copy `mean2`. This is dangerous, and; desyncing of the proxy and server list are actually the underlying; reason for a set of RooFit problems. The safter `RooAbsArg::redirectServers()` should always be used,; becauese that one is also updating the proxies. Therefore, the; `replaceServer()` interface is now marked as dangerous everywhere; possible: in a printout when you use it, in the docs, and with the; `R__SUGGEST_ALTERNATIVE` macro. Internally, the `replaceServer()` was also used in `redirectServers()`.; But this was also causing problems: `replaceServer()` always adds the; new server at the end of the server list, which means the list gets; reordered. This can confuse usercode that rely on the server list being; ordered (yes, that's not a good idea anyway, but there are many codes; that do this). This reordering can also be seein in the example code; above. Therefore, the `redirectServers()` function is now rewritten to replace; the server without changing its position in the server list. This also; means that the original server list doesn't need to be copied, as not; iterators are invalidated. Furthermore, the `redirectServers()` is more optimized now. Before, it; redundantly figured out whether a server was a value and/or shape; server. Now, this is figured out only once when removing the original; server from the clien",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12040:1043,interface,interface,1043,https://root.cern,https://github.com/root-project/root/pull/12040,1,['interface'],['interface']
Integrability," of a split and clean-up of #8294. ## Changes or fixes:; - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace.; - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252.; - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets.; - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free.; - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication.; - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed.; - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally; - [x] update the docs (if necessary); - [x] unify copyright/license headers with previous commits; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] refactor member names: underscore suffix; - [x] remove commented out code and TODOs and other junk; - [x] clang-tidy up; - [ ] rebase into two commits (one for `KahanSum` and one for the rest); - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:1733,depend,depend,1733,https://root.cern,https://github.com/root-project/root/pull/9349,1,['depend'],['depend']
Integrability," of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:2269,interface,interface,2269,https://root.cern,https://github.com/root-project/root/issues/7258,1,['interface'],['interface']
Integrability," of the issue, which is why I'm not a big fan of it and was trigger happy to close it. Acknowledged that re-interpretation of issues is difficult; in this case I would argue that I better understood the underlying reason and changed the issue to correct the description. Just closing and dismissing this analysis is what I'm against. > When reinterpreting issues like this, you have to ask yourself: would I have also opened an original issue for this too? Especially because of:. Yes, I would have opened the same issue if I had understood the underlying reason before; that's why I updated it. > ROOT 7 has now the same CMAKE_CXX_STANDARD requirements, so please give me a new example of why someone would do this. I already gave you an example in https://github.com/root-project/root/issues/8642#issuecomment-2039323384:; > FWIW the same problem can be seen when going from `CMAKE_CXX_STANDARD=17` to `CMAKE_CXX_STANDARD=20` with GCC 13.2.0:. C++17 is now the default, but if somebody tries to switch an existing build directory to C++20, they will be faced with obscure error messages. > Anyone who reads this issue to consider fixing it will have this context in mind, which brings them to the conclusion that it's not relevant to fix. So why keep it open?. Anyone looking at this issue should have a look at the entire discussion, including https://github.com/root-project/root/issues/8642#issuecomment-2039323384 and this comment. This should explain why I think it's still relevant. > I'm very happy to discuss about this by the way and I would like to understand you better and improve my communication when closing issues: what ""wrong signal"" did it send in this case?. The ""wrong signal"" that this sends is exactly what you describe: A valid report of something not working is thought ""not relevant to fix"". IMHO this is a disastrous attitude and will just discourage people from reporting issue - it just risks being deemed ""not relevant"" by the core developers, so why put in the effort?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642#issuecomment-2046879273:1133,message,messages,1133,https://root.cern,https://github.com/root-project/root/issues/8642#issuecomment-2046879273,1,['message'],['messages']
Integrability," of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 637, in save_reduce; save(func); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1064, in save_builtin_method; pick",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:1620,protocol,protocol,1620,https://root.cern,https://github.com/root-project/root/issues/6370,1,['protocol'],['protocol']
Integrability," provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, provided we can make TDataFrame sufficiently fast.; * A Python-based numpy export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; * The numpy interface is low-level for Python; we intend to further explore the ideal high-level ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:1350,interface,interface,1350,https://root.cern,https://github.com/root-project/root/pull/2519,1,['interface'],['interface']
Integrability," rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950:1549,DEPEND,DEPENDS,1549,https://root.cern,https://github.com/root-project/root/issues/8950,1,['DEPEND'],['DEPENDS']
Integrability," realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:2205,message,message,2205,https://root.cern,https://github.com/root-project/root/pull/15044,1,['message'],['message']
Integrability," regions for batch eval (https://github.com/root-project/root/pull/6401); - [x] Implement getWeightBatch() and getBatches() for RooDataHist; - [ ] Implement getBatch for RooTreeDataStore?; - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:1069,interface,interface,1069,https://root.cern,https://github.com/root-project/root/issues/6557,1,['interface'],['interface']
Integrability," size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.cling.offset.roottest_cling_offset_compiled](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_compiled/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:2894,interface,interface,2894,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,2,['interface'],['interface']
Integrability," std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch python3 uuid-dev; ```; and then configuring as `cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -Dx11=OFF ../root.src/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:3010,message,message,3010,https://root.cern,https://github.com/root-project/root/issues/10291,1,['message'],['message']
Integrability," such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this makes the speed of NLL creation with the BatchMode on par; with the speed of `createNLL()` without BatchMode. Finally, this is also the groundwork for some future RooFit; developments, like the analytical convolution support for the GPU. To; implement this, it will also be beneficial to compile the analytical; convolution classes for a given normalization set, which can now be done; in an easy modular way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:1794,interface,interface,1794,https://root.cern,https://github.com/root-project/root/pull/12079,1,['interface'],['interface']
Integrability," the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.; - Clean up header of RooMappedCategory. Outline as much as possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:2186,interface,interfaces,2186,https://root.cern,https://github.com/root-project/root/pull/5502,2,['interface'],"['interface', 'interfaces']"
Integrability," the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps is stabled over re-running the macro (new ROOT session at each time).; The new overlaps also appear mostly in the ""last volumes in the geometry"" to be tested.; So it could be that something is not so stable in the sequence of random points:; - first volume getting always mostly the same points independent of the number of samples ; - while last volume getting set of points depending highly on number of samples. I did not manage to reliably reproduce it however so I would create a separate issue if I find the time to test and confirm it later. ### Reproducer. Files in archive: examine_mcbm_beam_2019_03.geo.root, check_overlaps.C, root_overlaps_samp_thr.patch; [check_overlaps.tar.gz](https://github.com/root-project/root/files/14261529/check_overlaps.tar.gz). 1. Run once the macro with master: some big overlaps, some known overlaps of size ~0.4, some overlap of size ~10^-8 only if higher number of samples provided, overlap threshold does not have an effect in sampling mode calls. 2. Apply following patch; ```diff; diff --git a/geom/geompainter/src/TGeoChecker.cxx b/geom/geompainter/src/TGeoChecker.cxx; index fc93cc8b82..0e77517729 100644; --- a/geom/geompainter/src/TGeoChecker.cxx; +++ b/geom/geompainter/src/TGeoChecker.cxx; @@ -1193,7 +1193,7 @@ TGeoOverlap *TGeoCheck",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:2985,depend,depending,2985,https://root.cern,https://github.com/root-project/root/issues/14675,1,['depend'],['depending']
Integrability," the test gives even more errors then before:. ```; 1548: -- BEGIN OUTDIFF OUTPUT --; 1548: --- /home/vpadulan/Programs/rootproject/roottest/root/core/execStatusBitsCheck.ref	Wed Jun 9 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2368,rout,routine,2368,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability," their concrete type, or convert the TClonesArray to a type-aware container (for reference: first brought up in https://root-forum.cern.ch/t/reading-tclonesarray-in-jitted-rdf/45784, thanks to @eguiraud for explaining why my naive code did not work). ### Optional: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.Next() );; }; return out;; }; };; ```; then I can add a set of defines and use those containers instead:; ```python; df = df.Define(""myElectrons"", ""rdfhelpers::objArrayToRVec<delphes_electron>(Electron)""); df.Def",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644:1213,integrat,integration,1213,https://root.cern,https://github.com/root-project/root/issues/8644,1,['integrat'],['integration']
Integrability," to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y projection; # if the pdf supported 2D integrals, there would be no numerical integrals at all; integral = D2.createIntegral({y}, NormSet = {x,y}); print('Projection is', integral, flush = True). # numerical integral over y2 in the 2D normalization (expected, like above); # numerical integral in the y projection (unwanted); frame = x.frame(); dt.plotOn(frame); D2.plotOn(frame); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:1638,integrat,integrate,1638,https://root.cern,https://github.com/root-project/root/issues/12646,1,['integrat'],['integrate']
Integrability," to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public.""; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:1573,depend,dependency,1573,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['depend'],['dependency']
Integrability," trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 68 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45243/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2838#issuecomment-432579492:3181,depend,depends,3181,https://root.cern,https://github.com/root-project/root/pull/2838#issuecomment-432579492,1,['depend'],['depends']
Integrability," using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealFullVector` class; [RF] Enable AD code-gen test for RooFit.; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:4046,interface,interface,4046,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['interface'],['interface']
Integrability," with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:1072,Message,MessageStr,1072,https://root.cern,https://github.com/root-project/root/issues/9036,1,['Message'],['MessageStr']
Integrability," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15874:1178,wrap,wrapper,1178,https://root.cern,https://github.com/root-project/root/issues/15874,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,![progress](https://github.com/root-project/root/assets/4936580/98687f37-f747-4f2c-ab8a-0f3b0375107d); 1. Introduce progress handlers for browsables objects; 2. Provide progress information when performing `TTree::Draw`; 3. Display such progress on the client side in the warning dialog - while waiting on result of double click; 4. Use `TVirtualMonitoringWriter` handle to hook inside `TTree::Draw` processing loop; 5. Execute long operations (like tree draw) outside of websocket data handler to let receive other messages; 6. Fix cleanup problem of widgets in RBrowser - JSROOT elements were not destroyed properly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13236:516,message,messages,516,https://root.cern,https://github.com/root-project/root/pull/13236,1,['message'],['messages']
Integrability,"""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2289,depend,dependabot,2289,https://root.cern,https://github.com/root-project/root/pull/11864,1,['depend'],['dependabot']
Integrability,"""Commit"" is not a good commit message. @lmoneta could you help @surya2191997 rewrite the commits?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3924#issuecomment-504893263:30,message,message,30,https://root.cern,https://github.com/root-project/root/pull/3924#issuecomment-504893263,1,['message'],['message']
Integrability,"""if (gR) { ... }"" will not work as a check whether the global interface object is freed. gR - the pointer to the TRInterface object - is assigned by new. Only one instance of this class can be created. There is no explicit delete of this global object, but it is destroyed when the program exits. But this destruction of remaining object when the program ends does not reset the gR pointer to NULL, so using ""if (gR) { ... }"" as a test to check whether the object is destroyed or not will not work. I think this PR implements the intended behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/476:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/476,1,['interface'],['interface']
Integrability,"""overloadedFreePtsq"", ROOT.squared). #will fail because argument name determination from overloads is ambiguous; d = d.Define(""overloadedFreePtsq"", ROOT.squared2). #templated free function; d = d.Define(""templatedFreeNmuonsSq"", ROOT.squared[""int""], [""nMuons""]). #static class member; d = d.Define(""staticPtsq"", ROOT.Callable.mul, [""Muon_pt"", ""Muon_pt""]). #class member; d = d.Define(""overloadedMemberPtsq"", ROOT.Callable().squared, [""Muon_pt""]). #templated class member; d = d.Define(""templatedMemberNmuonsSq"", ROOT.Callable().squared[""int""], [""nMuons""]). #overloaded operator(); d = d.Define(""overloadedCallPtsq"", ROOT.Callable(), [""Muon_pt""]). #string expression; d = d.Define(""lambdaPtsq"", ""Muon_pt*Muon_pt""). #complete lambda expression (direct jitting without parsing); d = d.Define(""lambdaPtsq"", ""[](float x) { return x*x; }"", [""Muon_pt""]). #complete lambda expression with inferred column names and argument types (direct jitting without parsing, argument names determined from cling after jitting); d = d.Define(""lambdaAutoPtsq"", ""[](auto Muon_pt) { return Muon_pt*Muon_pt; }""); ```. A few remaining issues here:; - ""Warning: failed - offset calculation between TList and TViewPubFunctions"" in some cases (related to extracting argument names through cling machinery). - cppyy gives limited or obscure errors on template instantiation. In this case the templates are instantiated in code compiled by TClingCallFunc::compile_wrapper() which apparently has different verbosity than TCling::Declare (jitting through this route also does not forcibly disable the null pointer check like Declare does, and possibly other subtleties); In particular there's one nasty case which is fairly common and produces totally incomprehensible errors compared to compiling the same code in gcc (or even with TCling::Declare), where an incorrect number of columns is passed to Declare compare to the callable. All of the above functionality can be easily extended to Filter once we're happy with the direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:3880,rout,route,3880,https://root.cern,https://github.com/root-project/root/pull/9174,1,['rout'],['route']
Integrability,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7417#issuecomment-827147657:83,message,message,83,https://root.cern,https://github.com/root-project/root/issues/7417#issuecomment-827147657,2,['message'],"['message', 'messages']"
Integrability,"# 6.30.02. **Backports** that need to be made for the v6.30 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/13995; - [x] https://github.com/root-project/root/pull/14021; - [x] https://github.com/root-project/root/pull/14043; - [x] https://github.com/root-project/root/pull/14044; - [x] https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2); - [x] https://github.com/root-project/root/pull/14026; - [x] https://github.com/root-project/root/pull/13863. The backports were grouped in a few PRs to `v6-30-00-patches`:. 1. https://github.com/root-project/root/pull/14008; 2. https://github.com/root-project/root/pull/14047",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13458#issuecomment-1795523443:451,depend,dependency,451,https://root.cern,https://github.com/root-project/root/issues/13458#issuecomment-1795523443,1,['depend'],['dependency']
Integrability,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[RF][CMake] Use PUBLIC (not INTERFACE) for adding &#x60;res&#x60; to include dirs](https://github.com/root-project/root/pull/15664); - [[RF][CMake] Add missing dependencies](https://github.com/root-project/root/pull/15664). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15675:122,INTERFACE,INTERFACE,122,https://root.cern,https://github.com/root-project/root/pull/15675,2,"['INTERFACE', 'depend']","['INTERFACE', 'dependencies']"
Integrability,"# Goal. This PR implements `Im2Col` in CUDA in (what I consider) an optimal way in terms of performance. I achieve that by assigning one thread per output element. This means that threads do not share their write address and therefore no synchronization is required. They do share read address which is of course thread safe. I complement the new functionality with a complete testing suite to assert correctness. # Extra tasks. The tests within the `CNN` module suffer from extensive code duplication as the `Reference` and `CPU` versions do exactly the same thing (the CUDA one's would just worsen the issue). Instead I refactored the `Im2Col` one's using templated arguments: As a result the tests are now defined only once and called independently from each architecture using templates. This approach is also followed in the `DNN` module. If time allows, I plan to refactor all tests within the `CNN` module in a similar manner.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118:238,synchroniz,synchronization,238,https://root.cern,https://github.com/root-project/root/pull/2118,1,['synchroniz'],['synchronization']
Integrability,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780:989,Depend,Depending,989,https://root.cern,https://github.com/root-project/root/pull/10780,1,['Depend'],['Depending']
Integrability,"# Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:; ```C++; #include ""ROOT/TThreadExecutor.hxx""; #include ""ROOT/TSeq.hxx""; #include <iostream>. int main(){; auto func = [&](long int x)->long int { return x; };; auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};; ROOT::TThreadExecutor t(1);; std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5; return 0;; }; ```; Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:; ```C++; unsigned start = *args.begin();; unsigned end = *args.end();; unsigned seqStep = args.step();. using retType = decltype(func(start));; std::vector<retType> reslist(args.size());; ; auto lambda = [&](unsigned int i); {; reslist[i] = func(i);; };; ParallelFor(start, end, seqStep, lambda);; ``` ; This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:; ```C++; auto lambda = [&](unsigned int i); {; reslist[i] = func(args[i]);; };; ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f); // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func; // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10404:243,depend,depending,243,https://root.cern,https://github.com/root-project/root/issues/10404,1,['depend'],['depending']
Integrability,"# This PR is not meant to be merged but for documentation purposes. Implementation of fast inference for Decision Trees.; @stwunsch will make another PR to integrate properly into the root system.; ## Getting started; Required additional librairies; - ROOT; - for running tests you need Google Tests; - for running benchs, you need Google Benchs and XGBoost. ### Run tests ; Update the makefile in the tests folder, then execute `make clean && make && ./testAll.exe`; At the end of this text is a setup file for a new installation of ubuntu 18.04. ### Code structure; Here below we show the structure of the repository with the files of interest.; .; ├── bench.py; ├── bench.sh; ├── build/; ├── data/; ├── experiments/; │ ├── arrayBdtPreds.cxx; │ ├── data/; │ ├── generate_data.py; │ ├── makefile; │ ├── readme.md; │ ├── run_all.sh; │ └── setup.h; ├── figures/; ├── generated_files/; ├── include/; │ ├── BranchedTree.hxx; │ ├── BranchlessTree.hxx; │ ├── CodeGeneratorsJIT.hxx; │ ├── ForestHelpers.hxx; │ ├── json.hpp; │ ├── RForestInference.hxx; │ └── TreeHelpers.hxx; ├── makefile_bench.make; ├── README.md; ├── run.sh; ├── src/; │ └── benchmark.cxx; ├── tests/; │ ├── build/; │ ├── data/; │ │ ├── events.csv; │ │ ├── model.json; │ │ ├── model.rabbit; │ │ ├── multiclass_events.csv; │ │ ├── multiclass_model.json; │ │ ├── multiclass_model.rabbit; │ │ ├── multiclass_python_groundtruths.csv; │ │ ├── multiclass_python_predictions.csv; │ │ ├── multiclass_python_scores.csv; │ │ ├── python_predictions.csv; │ │ ├── regression_events.csv; │ │ ├── regression_model.json; │ │ ├── regression_model.rabbit; │ │ ├── regression_python_groundtruths.csv; │ │ ├── regression_python_predictions.csv; │ │ ├── regression_python_scores.csv; │ ├── forestBDTest.hxx; │ ├── helpersBDTest.hxx; │ ├── makefile; │ ├── readme.md; │ ├── RegressionBDTest.hxx; │ ├── run_all.sh; │ ├── testAll.cxx; ├── train_classifiers_examples.py; └── utils.py. ### Setup script for ubuntu 18.04; It sets up a new machine, installing everythi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:156,integrat,integrate,156,https://root.cern,https://github.com/root-project/root/pull/4351,1,['integrat'],['integrate']
Integrability,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008:328,message,message,328,https://root.cern,https://github.com/root-project/root/pull/9008,1,['message'],['message']
Integrability,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9009:410,message,message,410,https://root.cern,https://github.com/root-project/root/pull/9009,1,['message'],['message']
Integrability,# This Pull request: ; tutorial/tree/dictionary C++ stand-alone application can not be compiled when the cmake project is generated for xcode. The solution is to explicitly tell cmake that the shared library depends on the ROOT dictionary. ## Changes or fixes: ; New line in the CMakeLists specifying the dependency . ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (not needed). This PR fixes https://github.com/root-project/root/issues/14595,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14619:208,depend,depends,208,https://root.cern,https://github.com/root-project/root/pull/14619,2,['depend'],"['dependency', 'depends']"
Integrability,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10937:31,depend,dependent,31,https://root.cern,https://github.com/root-project/root/pull/10937,2,['depend'],['dependent']
Integrability,"# This Pull request: [RDFD][Fix #7205] Print() now indicates non-fitting columns. ## Changes or fixes:. In case of tables of many columns, Print() now have a right-most; column of dots (...). Moreover, the user will be notified with an; info message as well. Print() guarantees that at least 1 column of the table is displayed; (regardless the width of the first column). The default maximum allowed width of the table is increased to 100; (from 80). New tests written to check the behaviour of wide tables. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7205",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9124:242,message,message,242,https://root.cern,https://github.com/root-project/root/pull/9124,1,['message'],['message']
Integrability,# This Pull request: [RNTuple] Addition of the evil storage layer. ## Changes or fixes:; - Add modifications to `RRawFile` to enable failures (bit flips and short reads) to be injected into the `ReadAt` and `ReadV` methods.; - Add I/O error unit test file `ntuple_ioerrors`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13434:176,inject,injected,176,https://root.cern,https://github.com/root-project/root/pull/13434,1,['inject'],['injected']
Integrability,"# This Pull request:. ## Changes or fixes:. Add `dependabot.yml` file which will configure the dependabot to periodically create PRs whenever GitHub actions can be updated. Currently configured to submit the PR weekly with a maximum of 5 concurrent open PRs. GitHub actions cannot (or should not) be configured to run on the latest version, you can only specify which major version to run. Many times whenever there is a new version released it never gets updated on the developer's end. This PR fixes this with the added benefit of a dedicated PR for each action which should test if there are any breaking changes. The PR also contains a link to the action changelog.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:49,depend,dependabot,49,https://root.cern,https://github.com/root-project/root/pull/14683,2,['depend'],['dependabot']
Integrability,"# This Pull request:. ## Changes or fixes:. Adds `','.join(strings)` capabilities to `TString.h`.; Right now it is as a variadic argument, but it could be expanded to std::array, std::vector or even TObjArray. ## Checklist:. - [x] tested changes locally; - [X] updated the docs (if necessary). This PR depends on https://github.com/root-project/root/pull/13243",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13299:302,depend,depends,302,https://root.cern,https://github.com/root-project/root/pull/13299,1,['depend'],['depends']
Integrability,# This Pull request:. ## Changes or fixes:. Adds deprecation messages to classes that are no longer recommended. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/14582; Fixes https://its.cern.ch/jira/browse/ROOT-8594,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14754:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/14754,1,['message'],['messages']
Integrability,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15274:130,message,messages,130,https://root.cern,https://github.com/root-project/root/pull/15274,1,['message'],['messages']
Integrability,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:258,interface,interface,258,https://root.cern,https://github.com/root-project/root/pull/16075,1,['interface'],['interface']
Integrability,"# This Pull request:. ## Changes or fixes:. Improvements in the error message displayed when the call to `FT_Set_Char_Size` fails in `TTF::SetTextSize`:; - The error code returned by the call to TTF FT_Set_Char_Size function was lost in the if condition, now it is displayed.; - Adding the display of passed parameters to the error message helps distinguish TTF related errors from context related ones. ## Checklist:. - [x] tested changes locally (execution v6.22 and v6.26, compilation v6.22, v6.26 and master; - [ ] updated the docs (not necessary I suspect). This PR fixes the easy part of #14592",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14603:70,message,message,70,https://root.cern,https://github.com/root-project/root/pull/14603,2,['message'],['message']
Integrability,"# This Pull request:. ## Changes or fixes:. Removes `.pyc` files that are checked into source. PYC files are Python version dependent, and are automatically generated from `.py` files. From the structure, I'm guessing these are Python 2.x auto-generated files. There's a small chance they could have been intentional, but I don't know why they would be. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10249:124,depend,dependent,124,https://root.cern,https://github.com/root-project/root/pull/10249,1,['depend'],['dependent']
Integrability,# This Pull request:. ## Changes or fixes:. See the commit messages for details. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10306:59,message,messages,59,https://root.cern,https://github.com/root-project/root/pull/10306,1,['message'],['messages']
Integrability,"# This Pull request:. ## Changes or fixes:. Since the possibillity to use an external libAfterImage was removed, the built-in version needs some fixes.; See commit messages for details. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15191:164,message,messages,164,https://root.cern,https://github.com/root-project/root/pull/15191,1,['message'],['messages']
Integrability,"# This Pull request:. ## Changes or fixes:. Some minor interface changes to reflect better the underlying TestStatistics classes and how we intend to bring it to users in the upcoming release. . The 'NewStyle' name was changed to 'ModularL' to reflect the fact that these new test statistics are modular. Note that we are undecided on 'ModularL' versus just 'Modular', so if you have a strong opinion on this feel free to change it. Some of the functionality included in the added named arguments is not implemented yet, this is because we plan to add the respective backend for these new features in the near future. Therefore these named arguments were added under RooFit::Experimental namespace. Do we also need to add these not yet functioning arguments already to the RooMinimizer config struct, since we plan to add them in the near future?. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/11906,1,['interface'],['interface']
Integrability,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791:733,interface,interface,733,https://root.cern,https://github.com/root-project/root/pull/11791,1,['interface'],['interface']
Integrability,"# This Pull request:. ## Changes or fixes:. This allows to build the documentation as part of the normal ROOT build and sets the basis for integrating it into the GitHub CI. And to test new PullRequests so that they do not break the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160:139,integrat,integrating,139,https://root.cern,https://github.com/root-project/root/pull/15160,1,['integrat'],['integrating']
Integrability,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311:75,depend,depending,75,https://root.cern,https://github.com/root-project/root/pull/11311,1,['depend'],['depending']
Integrability,# This Pull request:. ## Changes or fixes:. `root.exe -a`; returns right now a non-understandable error message. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14816:104,message,message,104,https://root.cern,https://github.com/root-project/root/pull/14816,1,['message'],['message']
Integrability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:294,message,messages,294,https://root.cern,https://github.com/root-project/root/pull/15499,1,['message'],['messages']
Integrability,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13748:383,message,messages,383,https://root.cern,https://github.com/root-project/root/pull/13748,2,['message'],['messages']
Integrability,# This Pull request:. ## Changes or fixes:; Replaced somewhat cryptic 'assert failed' message with the actual I/O error message explaining what went wrong in RNTupleWriter::RFileSimple::Write(). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14487,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14677:86,message,message,86,https://root.cern,https://github.com/root-project/root/pull/14677,2,['message'],['message']
Integrability,"# This Pull request:. ## Changes or fixes:; The actual calculation of the Hessian / covariance matrix done by MnHesse was contained to a single function. Since the only needed internal state was the `MnStrategy` object, it was easy to turn this calculation function into a static member function. The implementation of the ""internal interface"" (previously the calculation function) now forwards its call to a static class member `std::function` object. By default, this object is set to be the now-static calculation function. However, this `std::function` object is public, so users can easily replace it with any Hessian calculator function they prefer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11113:333,interface,interface,333,https://root.cern,https://github.com/root-project/root/pull/11113,1,['interface'],['interface']
Integrability,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14164:71,Integrat,IntegrateSubrange,71,https://root.cern,https://github.com/root-project/root/pull/14164,2,['Integrat'],['IntegrateSubrange']
Integrability,"# This Pull request:. ## Changes or fixes:; warns of overflow with an error message. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). See https://root-forum.cern.ch/t/break-segmentation-violation-while-using-geometry-package/53087/7. Side note: To allow for Long64_t, a complete rewrite of all variables' data types would be needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12028:76,message,message,76,https://root.cern,https://github.com/root-project/root/pull/12028,1,['message'],['message']
Integrability,"# This Pull request:. - Adds new Constructor interfaces to RooCmdArg; - Adds new printouts to RooCmdArg. ## Changes or fixes:. RooCmdArg is a bit of an old-style piece of code that doesn't really work well with python.; Also, when talking among statistics code developers, it's commonplace to have to ""exchange"" fit arguments between codes (""what arguments to you pass to make it converge?"").; For this purpose, it's very convenient to:; - be able to print the command arguments in a human-readable format, and; - directly use these printouts to copy&paste them into some other piece of code to make comparison studies. The changes in this PR make this possible with little effort. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16349:45,interface,interfaces,45,https://root.cern,https://github.com/root-project/root/pull/16349,1,['interface'],['interfaces']
Integrability,# This Pull request:. - Simplifies the `\legacy` interface. It has now only one parameter.; - The text has been rephrased.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9108:49,interface,interface,49,https://root.cern,https://github.com/root-project/root/pull/9108,1,['interface'],['interface']
Integrability,"# This Pull request:. A follow up to #13219 ; It improves the RField API that is used to create, destroy, and bind objects being read from disk or being written to disk. A follow-up PR will make several public RField interfaces non-public, among the reading and appending. ## Changes or fixes:. - Replace `RFieldValue` by `RFieldBase::RValue`. The new class can be owning or non-owning and takes care of destroying its wrapped object if it is owning.; - Make `RFieldBase::DestroyValue` protected and use raw pointers in its interface; - Reuse base class `DestroyValue` in derived classes; - Make `GenerateValue(void *)` overload protected and with a `void` return value; - Remove unused templated version of `GenerateValue` from field classes; - Rename `CaptureValue` to `BindValue` and make it non-virtual. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13264:217,interface,interfaces,217,https://root.cern,https://github.com/root-project/root/pull/13264,3,"['interface', 'wrap']","['interface', 'interfaces', 'wrapped']"
Integrability,"# This Pull request:. Added some instrospection methods to TestStatistics Likelihood classes and also added corresponding tests. In particular added GetName() and GetInfo(). GetName() follows the same interface as the other RooFit classes in order to stay consistent. GetInfo() returns an std::string which allows for the added flexibility of concatenating more information about the class. Also added getComponents() to RooSumL in order to retrieve the vector of components from the sum likelihood. Note I am not completely happy about the implementation of the naming, in particular with the fact that the name needs to be supplied to the constructor of the RooAbsL class. Another option would be to override the GetName() and GetInfo() functions in each of the child classes explicitly with the same implementation, in which case we could have a unique name_ variable in each of the child classes and no need for the modification to the constructors. Let me know if this is preferred. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10043:201,interface,interface,201,https://root.cern,https://github.com/root-project/root/pull/10043,1,['interface'],['interface']
Integrability,# This Pull request:. Adds RNTuple support for `std::atomic<T>`. The inner type `T` has to be an I/O supported type. On-disk representation is identical between atomic `T` and plain `T` except for an extra marker field for the atomic wrapper. CMS MiniAOD use atomic types. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13897:234,wrap,wrapper,234,https://root.cern,https://github.com/root-project/root/pull/13897,1,['wrap'],['wrapper']
Integrability,# This Pull request:. Adds more options to generate asimov datasets by; - allowing to generate asimov datasets for RooMultiVarGaussian; - adding a new constructor to RooExtendPdf that allows to more easily extend pdfs to fixed nEvents; - improving error messages emitted by AsymptoticsCalculator when creating error messages. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12034:254,message,messages,254,https://root.cern,https://github.com/root-project/root/pull/12034,2,['message'],['messages']
Integrability,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/11549,1,['interface'],['interface']
Integrability,# This Pull request:. Adds support for the `std::byte` type. Vectors of bytes can be used to represent BLOBs in RNTuple. The unit test shows an example where a `TMemFile` is stored in such a vector. A follow-up PR should provide a convenient interface to store BLOBs. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13806:242,interface,interface,242,https://root.cern,https://github.com/root-project/root/pull/13806,1,['interface'],['interface']
Integrability,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105:1534,depend,dependencies,1534,https://root.cern,https://github.com/root-project/root/pull/15105,1,['depend'],['dependencies']
Integrability,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178:755,rout,route,755,https://root.cern,https://github.com/root-project/root/pull/14178,1,['rout'],['route']
Integrability,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15789:373,Depend,Depends,373,https://root.cern,https://github.com/root-project/root/pull/15789,1,['Depend'],['Depends']
Integrability,"# This Pull request:. Improves exception handling of RooWorkspace for non-existing objects. ## Changes or fixes:. Adding a non-existing object to RooWorkspace prints an error message but doesn't terminate the program, which might lead to segmentation faults. The fix prints the error message and then throws a runtime error to handle such cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [JIRA: ROOT-7922](https://sft.its.cern.ch/jira/browse/ROOT-7922)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12860:175,message,message,175,https://root.cern,https://github.com/root-project/root/pull/12860,2,['message'],['message']
Integrability,# This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13098:49,message,messages,49,https://root.cern,https://github.com/root-project/root/pull/13098,1,['message'],['messages']
Integrability,"# This Pull request:. Introduce GraphAsymmErrors member in ActionHelpers.hxx similar to Graph.; GraphAsymmErrors creates a TGraphAsymmErrors, hence 6 arguments need to; be passed to it.; Appropriate structures in InterfaceUtils.hxx and RInterface.hxx are added. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9760:213,Interface,InterfaceUtils,213,https://root.cern,https://github.com/root-project/root/pull/9760,1,['Interface'],['InterfaceUtils']
Integrability,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:39,interface,interface,39,https://root.cern,https://github.com/root-project/root/pull/16437,2,['interface'],['interface']
Integrability,"# This Pull request:. Moves GetTopLevelBranchNames from the RDF Internals namespace to the Internal TreeUtils namespace, as it does not rely on RDF and creates unnecessary dependencies. ## Changes or fixes:; - Move GetTopLevelBranch names and its implementation from `/tree/dataframe` to `/tree/tree`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11144:172,depend,dependencies,172,https://root.cern,https://github.com/root-project/root/pull/11144,1,['depend'],['dependencies']
Integrability,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:50,interface,interface,50,https://root.cern,https://github.com/root-project/root/pull/11577,1,['interface'],['interface']
Integrability,# This Pull request:. Removes the dependency on arrow/testing for dataframe tests. ## Changes or fixes:. Copies over the various ArrayFromVector / ASSERT_OK helpers dropping the arrow:: namespace for them. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #13516.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13523:34,depend,dependency,34,https://root.cern,https://github.com/root-project/root/pull/13523,1,['depend'],['dependency']
Integrability,"# This Pull request:. Simplified/fixed how VDT would be used. Did this by making `ROOTVecOps`, `RooBatchCompute` and `TMVA` link against `VDT::VDT` in all circumstances (as long as VDT is being used). Regardless of whether VDT is used as a ""builtin"" or as an ""external"". At the same time made `ROOTVecOps` and `RooBatchCompute` depend on `VDT::VDT` publicly, as they actually do. ## Changes or fixes:. - Made sure that an imported `VDT::VDT` library would be set up when `builtin_vdt` is being used.; - Simplified how `ROOTVecOps`, `RooBatchCompute` and `TMVA` would just (publicly) link against `VDT::VDT` if either `vdt` or `builtin_vdt` is `TRUE`. Instead of the spaghetti of options that it had before.; - Made sure that all of those targets would explicitly depend on the `VDT` target if `builtin_vdt` is set to `TRUE`.; - Made sure that VDT would be searched for when calling `find_package(ROOT)` in client code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11797.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844:328,depend,depend,328,https://root.cern,https://github.com/root-project/root/pull/11844,2,['depend'],['depend']
Integrability,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13813:174,message,message,174,https://root.cern,https://github.com/root-project/root/pull/13813,1,['message'],['message']
Integrability,"# This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. ; An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11209:199,interface,interface,199,https://root.cern,https://github.com/root-project/root/pull/11209,1,['interface'],['interface']
Integrability,# This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9728:81,interface,interface,81,https://root.cern,https://github.com/root-project/root/pull/9728,1,['interface'],['interface']
Integrability,# This Pull request:. add some missing dependency for headers and libraries when building the executable sofiec as part of the tests of TMVA-sofie,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8799:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/8799,1,['depend'],['dependency']
Integrability,"# This Pull request:; - Remove default argument for creating GDML positions. The default arguments always define lengths in ""cm"",; which is wrong for Geant4 units (mm). Instead the digested units string fDefault_lunit is used, which ; has the correct value depending on the chosen system of units. ## Changes or fixes:; Creating correct GDML files understood by Geant4. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11887:257,depend,depending,257,https://root.cern,https://github.com/root-project/root/pull/11887,1,['depend'],['depending']
Integrability,"# This Pull request:; ; Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used ; along the following lines,; ```; ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9444:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/9444,2,['interface'],['interface']
Integrability,# This Pull request:; Added RNTupleTTreeChecker and RNTupleTTreeCheckerCLI to ROOT. ## Changes or fixes:; - Added RNTupleTTreeChecker class for comparing TTree and RNTuple structures.; - Added RNTupleTTreeCheckerCLI for command-line interface to interact with RNTupleTTreeChecker.; - Included necessary header and source files. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Details:. tree/ntupleutil/; - RNTupleTTreeChecker.cxx: Implementation of the RNTupleTTreeChecker class.; - RNTupleTTreeCheckerCLI.cxx: Implementation of the command line interface.; - inc/ROOT/RNTupleTTreeChecker.hxx: Header file for the RNTupleTTreeChecker class.; - inc/ROOT/RNTupleTTreeCheckerCLI.hxx: Header file for the RNTupleTTreeChecker CLI class.; - modified CMakeLists to include above files. main/; - src/rntuplevsttree.cxx: Main entry point for CLI.; - Modified CMakeLists to include rntuplevsttree.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15904:233,interface,interface,233,https://root.cern,https://github.com/root-project/root/pull/15904,2,['interface'],['interface']
Integrability,# This Pull request:; Addition of FOAM tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15574:164,synchroniz,synchronized,164,https://root.cern,https://github.com/root-project/root/pull/15574,1,['synchroniz'],['synchronized']
Integrability,# This Pull request:; Addition of Unique Pointer for TFile::Open -> Creation of Interface and implementation for the same. ## Changes or fixes:; Enables utilization of Unique Pointer for TFile::Open. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017:80,Interface,Interface,80,https://root.cern,https://github.com/root-project/root/pull/14017,1,['Interface'],['Interface']
Integrability,"# This Pull request:; Adds a Complete translation of the Geometry-Tutorials into python. ## Changes or fixes:; It runs, it re-reruns, and it gets out of IPython without crashing memory.; The Root-Objects have been cautiously removed once they have been created by pyroot, this helps to run the scripts again-and-again without crashing memory, since ROOT hasn't the ownership of the Objects anymore.; Enjoy the pygeom tutorials, if so. ## Checklist:. - [ yes] tested changes locally; - [ yes] updated the docs (if necessary); - [ yes] synchronized forked with master(latest-stable). This PR fixes # . It doesn't fix anything but adds alternatives approach to use pyroot with; the Geometry Package.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15573:534,synchroniz,synchronized,534,https://root.cern,https://github.com/root-project/root/pull/15573,1,['synchroniz'],['synchronized']
Integrability,"# This Pull request:; Adds an optional safety parameter to : `TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z, Option_t *option, Double_t safety)`; ## Changes or fixes:; Backward-compatible interface change, allowing the user to inspect if a given distance is safe (not touching the volume surfaces neighbouring a point). ```cpp; gGeoManager->CheckPoint(4.00457, -62.4337, 4.46698);; === Check current point : (4.00457, -62.4337, 4.46698) ===; - path : /TOP_1; Safety radius : 35.433700; ```. ![root_arb8](https://github.com/root-project/root/assets/18400453/133e7f2e-a20b-4c89-b4c7-5587ba50df84). ```cpp; gGeoManager->CheckPoint(4.00457, -62.4337, 4.46698, """", 31.067 /*user-defined*/); === Check current point : (4.00457, -62.4337, 4.46698) ===; - path : /TOP_1; Safety radius : 31.067000; ```; ![surface](https://github.com/root-project/root/assets/18400453/425f7b02-24e2-486c-b8a4-0da323d7dd1a). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) Updated the class reference. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14851:201,interface,interface,201,https://root.cern,https://github.com/root-project/root/pull/14851,1,['interface'],['interface']
Integrability,# This Pull request:; Adds the Physics Tutorial into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15576:163,synchroniz,synchronized,163,https://root.cern,https://github.com/root-project/root/pull/15576,1,['synchroniz'],['synchronized']
Integrability,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11102:190,Integrat,Integrates,190,https://root.cern,https://github.com/root-project/root/pull/11102,1,['Integrat'],['Integrates']
Integrability,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16724:943,depend,dependencies,943,https://root.cern,https://github.com/root-project/root/pull/16724,1,['depend'],['dependencies']
Integrability,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16046:942,depend,dependencies,942,https://root.cern,https://github.com/root-project/root/pull/16046,1,['depend'],['dependencies']
Integrability,# This Pull request:; Development of the Instance Normalization operator for the Google Summer of Code 2021 project [Inference Code Generation for Batch Normalization](https://hepsoftwarefoundation.org/gsoc/2021/proposal_TMVAOperatorBatchnorm.html).; Depends on #8882. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8885:251,Depend,Depends,251,https://root.cern,https://github.com/root-project/root/pull/8885,1,['Depend'],['Depends']
Integrability,"# This Pull request:; Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:; As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9399:697,depend,dependent,697,https://root.cern,https://github.com/root-project/root/pull/9399,1,['depend'],['dependent']
Integrability,"# This Pull request:; Fixes some small issues with debug printout during integration or generation. ## Changes or fixes:; The first commit changes the debug printout in `RooRealIntegral::evaluate`. `_mode` here is the analytical integral code, `_intOperMode` is the variable that can be `Hybrid`, `Analytic` or `PassThrough` (like in the switch-case above). The second commit adds `printMultiline` to `RooEffGenContext`. This is used when requesting verbose printout during dataset generation, which is supposed to recursively print all gen contexts. Before this change, having a `RooEffProd` inside the model stopped the recursive printout. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178:73,integrat,integration,73,https://root.cern,https://github.com/root-project/root/pull/12178,1,['integrat'],['integration']
Integrability,"# This Pull request:; Fixes validity of exported gdml file when the exported node is not the top geometry node. Adds error messages on gdml import errors, and deletes geometry manager in such case. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #9310",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10044:123,message,messages,123,https://root.cern,https://github.com/root-project/root/pull/10044,1,['message'],['messages']
Integrability,# This Pull request:; In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:; Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8571:174,message,messages,174,https://root.cern,https://github.com/root-project/root/pull/8571,1,['message'],['messages']
Integrability,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11826:139,integrat,integration,139,https://root.cern,https://github.com/root-project/root/pull/11826,10,['integrat'],"['integrated', 'integration']"
Integrability,"# This Pull request:; Move call to set the export precision to the lowest level of WriteGDML. ## Changes or fixes:; At the lower level interface setting the precision was impossible,. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11894:135,interface,interface,135,https://root.cern,https://github.com/root-project/root/pull/11894,1,['interface'],['interface']
Integrability,# This Pull request:; Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:; Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # N/A,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11249:187,depend,dependency,187,https://root.cern,https://github.com/root-project/root/pull/11249,1,['depend'],['dependency']
Integrability,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675:1242,integrat,integrate,1242,https://root.cern,https://github.com/root-project/root/pull/8675,1,['integrat'],['integrate']
Integrability,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8822:106,rout,routines,106,https://root.cern,https://github.com/root-project/root/pull/8822,1,['rout'],['routines']
Integrability,# This Pull request:; Synchronizes all changes dome in the materials. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR is requested in #11272,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11386:22,Synchroniz,Synchronizes,22,https://root.cern,https://github.com/root-project/root/pull/11386,1,['Synchroniz'],['Synchronizes']
Integrability,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15337:856,depend,dependencies,856,https://root.cern,https://github.com/root-project/root/pull/15337,1,['depend'],['dependencies']
Integrability,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14077:664,message,messages,664,https://root.cern,https://github.com/root-project/root/pull/14077,2,['message'],['messages']
Integrability,# This Pull request:; Translated Matrix-Tutorials into Python. ## Checklist:. - [ yes ] tested changes locally; - [ yes ] updated the docs (if necessary); - [ yes ] synchronized forked with master(latest-stable),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15575:165,synchroniz,synchronized,165,https://root.cern,https://github.com/root-project/root/pull/15575,1,['synchroniz'],['synchronized']
Integrability,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16657:119,wrap,wrappers,119,https://root.cern,https://github.com/root-project/root/pull/16657,2,['wrap'],['wrappers']
Integrability,"# This Pull request:; adds an option to CreateModel: `fForwardCompatible`. If true, the model will be created successfully even if the RNTuple contains unknown column types, and all fields that recursively contain one will be skipped and won't appear in the model. ## Notes:; Depends on #16627; #16602 will be rebased on this. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16631:276,Depend,Depends,276,https://root.cern,https://github.com/root-project/root/pull/16631,1,['Depend'],['Depends']
Integrability,"# This Pull request:; adds the `-Ddev=on` flag on the debian CI machine. It's a ""test run"" to see if we can later enable it on more (potentially all) build machines. Here's what the flag does:; - enables asserts; - (Linux|BSD) enables -Werror; - (Linux|BSD) does not relink if a dependent .so has changed (CMAKE_LINK_DEPENDS_NO_SHARED On); - (Linux|BSD) splits debug info (-gsplit-dwarf); - (Linux|BSD) uses lld if available; - defines USE_LESS_INCLUDES",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15853:279,depend,dependent,279,https://root.cern,https://github.com/root-project/root/pull/15853,1,['depend'],['dependent']
Integrability,"# This Pull request:; by @hahnjo suggestion, since we are exposing a type-erased virtual interface for `RColumnElement` through `RColumnElementBase`, we can hide all the concrete definitions into a cxx file.; This has the benefit of reducing the compile time of any translation unit that includes `RColumnElementBase.hxx` significantly, as the compiler won't have to instantiate all the combination matrix of `RColumnElement<CppT, ColumnType>` every time.; It also let us have better control on exactly which types of `RColumnElement` we allow to instantiate by explicitly listing them into a proxy enum. ## Changes or fixes:; - renamed `RColumnElement.hxx` to `RColumnElementBase.hxx`; - moved all concrete definitions from `RColumnElementBase.hxx` to `src/RColumnElement.hxx`. This is a private header file that is included by `RColumnElement.cxx` and by `ntuple_endian.cxx`. The reason to separate this from `RColumnElement.cxx` is that `ntuple_endian.cxx` needs to simulate a big-endian machine by defining `R__LITTLE_ENDIAN 0`, which changes the definitions of some `RColumnElement`s. To avoid including the whole `RColumnElement.cxx` in the test, we decided to split the definitions into a file that can be included independently by the test. It's not a perfect solution (the test executable ends up with mismatching instantiations of RColumnElement since it links to libROOTNTuple.so) but it's technically not worse than before. We still might want to think of alternative solutions.; - introduces an enum `EColumnCppType` that lists all the allowed c++ in-memory types for RColumnElement. This is used internally to map the templated `RColumnElementBase::Generate` to a non-templated function that can be implemented in the cxx file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16299:89,interface,interface,89,https://root.cern,https://github.com/root-project/root/pull/16299,1,['interface'],['interface']
Integrability,"# This Pull request:; depends on https://github.com/root-project/root/pull/15553. The interesting file to look at is `ntuple_compat.cxx`. Adding some RNTuple compat tests where we handcraft an on-disk representation for a RNTuple (and its wrapping TKey) and we try to read it back to verify it works.; The reason to do this is that we can then mess around with the binary representation to simulate both a corrupted payload and a future version of RNTuple, which allows to test forward compatibility. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15618:22,depend,depends,22,https://root.cern,https://github.com/root-project/root/pull/15618,2,"['depend', 'wrap']","['depends', 'wrapping']"
Integrability,# This Pull request:; gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15992:196,Depend,Depends,196,https://root.cern,https://github.com/root-project/root/pull/15992,1,['Depend'],['Depends']
Integrability,"# This Pull request:; is the first half of #15714. It deprecates `ECompressionAlgorithm` in favor of `RCompressionSetting::EAlgorithm` and fixes the code to use the new enum.; This PR should be much safer and less problematic to merge than #15714, so we can start with this and later discuss about changing the `RCompressionSetting` enums to enum classes. Depends on #15820 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15821:356,Depend,Depends,356,https://root.cern,https://github.com/root-project/root/pull/15821,1,['Depend'],['Depends']
Integrability,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16080:674,message,messages,674,https://root.cern,https://github.com/root-project/root/pull/16080,1,['message'],['messages']
Integrability,"# This Pull request:; uses `RNTuple::fMaxKeySize` to split any payload larger than that into multiple chunks, each backed by a TKey. These keys are then read back as a single object. Depends on #15869. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15776:183,Depend,Depends,183,https://root.cern,https://github.com/root-project/root/pull/15776,1,['Depend'],['Depends']
Integrability,"# Udate cppyy. *Sister PR in `roottest`: https://github.com/root-project/roottest/pull/1071*. ## Summary. Synchronizes the [CPyCppyy](https://github.com/wlav/CPyCppyy) CPython extension and [cppyy](https://github.com/wlav/cppyy) Python library with upstream to fix bugs, add features, and avoid duplicate maintenance efforts. ## Behavior changes. ### No implicit conversion from fixed-sized char buffers to null-terminated string. If you have a `char` buffer with constant size, people might use it for different things. For example, to store null-terminated short strings in a TTree. Therefore, the current PyROOT converts such buffers to Python strings. However, that means it's impossible to get the full buffer if it contains zeros, which can be useful if the buffer doesn't contain a string but for example some status bytes. Therefore, the used is not required to *explicitly convert the buffer to a Python string* with the `as_string()` method. Demo:; ```python; import ROOT. ROOT.gInterpreter.Declare("""""". struct Struct {; char char_buffer[5] {};; };. void fill_char_buffer(Struct & st); {; std::string foo{""foo""};; std::memcpy(st.char_buffer, foo.data(), foo.size());; }. """"""); struct = ROOT.Struct(); ROOT.fill_char_buffer(struct); char_buffer = struct.char_buffer. # With thew new cppyy, you get access to the lower level buffer instead:; print(""struct.char_buffer : "", char_buffer). # However, you can turn the buffer into a string very easily with as_string():; print(""struct.char_buffer.as_string(): "", char_buffer.as_string()); ```; The output:; ```txt; struct.char_buffer : <cppyy.LowLevelView object at 0x74c7a2682fb0>; struct.char_buffer.as_string(): foo; ```. ## Associated GitHub issues. This will close the following GitHub issue:; * https://github.com/root-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:106,Synchroniz,Synchronizes,106,https://root.cern,https://github.com/root-project/root/pull/14507,1,['Synchroniz'],['Synchronizes']
Integrability,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265:1031,wrap,wrap,1031,https://root.cern,https://github.com/root-project/root/pull/11265,2,['wrap'],"['wrap', 'wrapper']"
Integrability,"## Changes or fixes:; added/modified MinInt, MaxInt, IntRndm.; added test of Integer interface. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12410:85,interface,interface,85,https://root.cern,https://github.com/root-project/root/pull/12410,1,['interface'],['interface']
Integrability,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:799,Wrap,Wrapper,799,https://root.cern,https://github.com/root-project/root/pull/8700,2,"['Wrap', 'interface']","['Wrapper', 'interfaces']"
Integrability,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:; https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1988096588:23,interface,interface,23,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1988096588,1,['interface'],['interface']
Integrability,"## DeepCode's analysis on [#de2dd7](https://www.deepcode.ai/app/gh/root-project/root/fdb7d15ad82392ca6bf79b3f90c2b7f63706da3d/root-project/root/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/pr/_/%2F/code/?utm_source=gh_review&c=0&w=0&i=2&) found:. - :information_source: **2** minor issues. :point_down:; ## Top issues. <table>; <thead>; <tr>; <th align=""left"">Description</th>; <th align=""left"">Example fixes</th>; </tr>; </thead>; <tbody>; <tr>; <td width=""77%"">assertTrue cannot provide an informative message about the values in the comparison _ if it fails Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py#L37"">rooabscollection.py:37</a></li> <li><a href=""https://github.com/root-project/root/blob/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py#L64"">rooabscollection.py:64</a></li> <li><a href=""https://github.com/root-project/root/blob/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py#L65"">rooabscollection.py:65</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/fdb7d15ad82392ca6bf79b3f90c2b7f63706da3d/root-project/root/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/pr/_/%2Fbindings%2Fpyroot%2Fpythonizations%2Ftest%2Froofit%2Frooabscollection.py/python%2Fdc%2FDescriptiveAssert%2Ftest/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">The call to next should be guarded with a try/except block Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py#L47"">rooabscollection.py:47</a></li> <li><a href=""https://github.com/root-project/root/blob/de2dd71cab724475e1f6e4e7f9a1fffaf91b735e/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py#L48"">rooabsc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8179#issuecomment-841888691:500,message,message,500,https://root.cern,https://github.com/root-project/root/pull/8179#issuecomment-841888691,1,['message'],['message']
Integrability,"## Describe the bug. Templated ctors cannot be called on Windows because demangling of the constructor *template* (!) fails - likely because there is no mangling standard for the template. See https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1693. ## Expected behavior. Template ctor should be called. ## To Reproduce. @hageboeck has it. ## Setup. Master, with MSVC. ## Additional context. Instead of demangling and looking for '<' we could add a new interface: `TFunction::`-is-this-a-template.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393:522,interface,interface,522,https://root.cern,https://github.com/root-project/root/issues/6393,1,['interface'],['interface']
Integrability,"## Describe the bug; As discussed in the [ROOT forum](https://root-forum.cern.ch/t/root-memstat-doesnt-work/41455):; WIthout the memstat feature, `root.exe` still offers the `-memstat` option but produced failures like; ```; input_line_11:2:6: error: unknown type name 'TMemStat'; new TMemStat("""",100000,5000000);; ```. ## Expected behavior; If memstat is not part of the build, the memstat option should not be offered or there should be a clearer error message. ## To Reproduce; Steps to reproduce the behavior:; 1. Compile with `cmake -Dmemstat=off`; 2. Run `root -l`. ## Setup; 1. Master; 2. Arch Linux; 3. Built from sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6410:455,message,message,455,https://root.cern,https://github.com/root-project/root/issues/6410,1,['message'],['message']
Integrability,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8684:627,Interface,Interface,627,https://root.cern,https://github.com/root-project/root/pull/8684,1,['Interface'],['Interface']
Integrability,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8430:358,depend,dependency,358,https://root.cern,https://github.com/root-project/root/pull/8430,1,['depend'],['dependency']
Integrability,"## Description; This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8594:110,depend,depends,110,https://root.cern,https://github.com/root-project/root/pull/8594,2,['depend'],"['dependency', 'depends']"
Integrability,"## Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c646 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x000000000446eba6 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000826961b60 (/lib/libthr.so.3+0x19b60); #4 0x000000082696111f (/lib/libthr.so.3+0x1911f); #5 0x00007ffffffff8a3 ([vdso]+0x2d3); #6 0x000000082da5f7b4 strlen (/lib/libc.so.7+0x1587b4); #7 0x00000000016482c9 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:1420,depend,dependencies,1420,https://root.cern,https://github.com/root-project/root/issues/12787,1,['depend'],['dependencies']
Integrability,## Explain what you would like to see improved; The current crash message of root applications contains; ```; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs; ```. ## Optional: share how it could be improved; The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce; Crash root in any way. ## Setup; Any,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6540:66,message,message,66,https://root.cern,https://github.com/root-project/root/issues/6540,2,['message'],['message']
Integrability,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7239:192,integrat,integrate,192,https://root.cern,https://github.com/root-project/root/issues/7239,2,['integrat'],['integrate']
Integrability,"## Is your feature request related to a problem? Please describe. ROOT compilation requires hours of compilation time (up to 10 hours on virtual machines such as CI bots, and I hasn't seen compilation time less than an hour by now). ROOT takes hundreds of megabytes (600 - 800?) of space and requires a number of dependencies. This both greatly affects image sizes (e.g. docker) which, in turn, affects many areas such as automated testing, CI, transferring to farm nodes, even using in cloud resources and binder. . If one dares to build ROOT with it dependencies in something like Spack or other kind build scripts which take root dependencies into account and work on older system (which is a standard in HENP community) it just takes forever. Even If one uses something like Conda with precompiled ROOT binaries it quickly eats couple of gigabytes of space and still takes time. . Yet **many application require just a minimal ROOT IO** with saving data to files in ROOT format. Even without reflection, generating dictionaries and etc. - flat root files with `vector<value>` as the max complexity. . ## Describe the solution you'd like. In the ideal world I would be glad to have really modular ROOT build where I could choose that I want to have just a basic IO and get root installation witch is done in minutes and resulting binaries would be just megabytes in size. . ## Describe alternatives you've considered. - Surprisingly one can achieve such behavior with uproot. The only caveat is that you have to call python from C++ which is slow and feels perverse. Still compilation time of the whole python is much less and for sure python is preinstalled on all linux systems. . - Geant4 has some C++ library for writing root files and one even can find it on github ([It is diana_hep. Isn't it?](https://github.com/diana-hep/inexlib_rio)) but it doesn't allow to save something like arrays or something like `vector<double>`. I'm talking about at least some basic IO but not that basic. uproot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6471:313,depend,dependencies,313,https://root.cern,https://github.com/root-project/root/issues/6471,3,['depend'],['dependencies']
Integrability,"## Profiler for inspecting C++ models generated with SOFIE; Added a new class called `RModelProfiler` that allows to generate an hardcoded C++ header that automatically measures the time that each operator took during one or more runs of the `infer` function. In other words it profiles the model by means of _code instrumentation_. ### Under the hood; `RModelProfiler` is a friend class of `RModel` that initializes a private reference to an existing `RModel` object.; When the code is generated through `RModelProfiler::Generate()` (rewritten to inject profiling code in between operators), the latter access the private member `fGC`, thus generating the model directly into the `RModel` object.; In the generated code, profiling info such as time (microseconds) are saved in `::profiler_results`. ### Affine changes; - Added public member `std::string name` in `ROperator` (e.g. Gemm_1, ..).; - Changed `make_ROperator()` so that is assigns `name` of the operator with the one it had within the original ONNX model.; - Added an example of how to use the profiler in `README.md`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8957:548,inject,inject,548,https://root.cern,https://github.com/root-project/root/pull/8957,1,['inject'],['inject']
Integrability,"## SOFIE-SYCL; SOFIE-SYCL extends SOFIE functionality so that SYCL inference code can be generated for Intel GPUs using Intel oneAPI libraries for the BLAS routines. This functionality is already enabled by default when -Dtmva-sofie=On. The inference code should be compiled with a SYCL compiler and linked against the Intel oneAPI MKL library. Currently, the only SYCL Implementation supported is IntelDPCPP. The correctness of the SYCL implementations of the ONNX Operators has been tested with the SOFIE gtests. Also, missing gtests for BatchNormalization, Slice, Transpose have been added. In addition, the transpose convolution for 3d (ConvTranspose3d) operator that was not supported before has been added for both C++ and SYCL inference code, as well as the respective gtest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13550:156,rout,routines,156,https://root.cern,https://github.com/root-project/root/pull/13550,1,['rout'],['routines']
Integrability,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11437:1143,DEPEND,DEPENDS,1143,https://root.cern,https://github.com/root-project/root/issues/11437,1,['DEPEND'],['DEPENDS']
Integrability,## This PR introduces new functionality in REve to draw and browse TGeo geometry; * Use JSROOT tessellation to draw TGeo geometry in 3D REve Viewer. Support Three.js and RenderCore renderers.; * Introduce REveGeoTopNode to draw TGeo geometry with given path and visibility level.; * Integrate JSROOT geo hierarchy browser in REveGeo table. ### Test macro demonstrating geometry table and ReveGeoTopNode. The macro is located in `tutorials/eve7/eveGeoBrowser.C`; ![Screenshot from 2024-10-31 15-26-59](https://github.com/user-attachments/assets/b973c2ef-06b3-445c-80a5-a89aea9ec43b). ### Test macro demonstrating two REveGeoTopNodes without geometery table. The test macro is located in `tutorials/eve7geoTopNode.C`; ![Screenshot from 2024-10-31 15-30-55](https://github.com/user-attachments/assets/94d2dee0-0a97-4396-921a-bb7dd4494553),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16806:283,Integrat,Integrate,283,https://root.cern,https://github.com/root-project/root/pull/16806,1,['Integrat'],['Integrate']
Integrability,"## This Pull request:. Development of the ConvTranspose operator for TMVA/SOFIE. Depends on #11382. ## Checklist:. - [x] tested changes locally; - [x] tests for 1d, 2d and 3d ConvTranspose",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11309:81,Depend,Depends,81,https://root.cern,https://github.com/root-project/root/pull/11309,1,['Depend'],['Depends']
Integrability,"## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). ; Stating the PR message for clarity. The pull request add the tutorials for the lagrangian ; morphing class and also add an example for the factory interface. The are some accompanying ; fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9680:180,message,message,180,https://root.cern,https://github.com/root-project/root/pull/9680,3,"['interface', 'message']","['interface', 'message']"
Integrability,## This Pull request:; Development of the Gated Recurrent Unit operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8847:234,Depend,Depends,234,https://root.cern,https://github.com/root-project/root/pull/8847,1,['Depend'],['Depends']
Integrability,## This Pull request:; Development of the Long Short-term Memory operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8846:236,Depend,Depends,236,https://root.cern,https://github.com/root-project/root/pull/8846,1,['Depend'],['Depends']
Integrability,## This Pull request:; Development of the Recurrent Neural Network operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8825:238,Depend,Depends,238,https://root.cern,https://github.com/root-project/root/pull/8825,1,['Depend'],['Depends']
Integrability,## This Pull request:; Use the member functions GetBlasRoutines and GetStdLibs in the operators to specify the blas routines and the standard library headers needed to compile and run the generated code. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11639:116,rout,routines,116,https://root.cern,https://github.com/root-project/root/pull/11639,1,['rout'],['routines']
Integrability,"## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The first line executed is invalid C++ code, and cling rightly complains. The second line is valid code, but cling does not seem to be able to compile it after the previous compilation failure. Opening a new ROOT prompt and directly inserting the valid code works fine. ```; ~ root -l; root [0] ROOT::RDataFrame(10).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"");; ROOT_prompt_0:1:53: error: no matching member function for call to 'Snapshot'; /*** snip ***/; root [1] ROOT::RDataFrame(10).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""});; IncrementalExecutor::executeFunction: symbol '_ZStanSt12memory_orderSt23__memory_order_modifier' unresolved while linking [cling interface function]!; You are probably missing the definition of std::operator&(std::memory_order, std::__memory_order_modifier); Maybe you need to load the corresponding shared library?; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@3ae45ea5f9, RelWithDebInfo.; I could not reproduce with master@dcac6e1bf0, Debug build type.; The 6.22.02 conda package also seems to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439:983,interface,interface,983,https://root.cern,https://github.com/root-project/root/issues/6439,1,['interface'],['interface']
Integrability,"## Warning message on repeated named arguments. Emit warning message in RooCmdConfig when multiple named arguments of the same type are encountered, for which no chaining behavior is defined. *Originally suggested by Wouter Verkerke in [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1495714973:11,message,message,11,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1495714973,2,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour?. No error message when generating `module.idx`. ### How to reproduce?. This can be reproduced with a modified ROOT:; ```diff; diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx; index 7a094cc01f..d74c69aa2b 100644; --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx; +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx; @@ -73,4 +73,6 @@ namespace cling {; std::string printValue(ROOT::RDataFrame *tdf);; } // ns cling; ; +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);; +; #endif // ROOT_RDATAFRAME; ```. This causes; ```; [522/527] Generating lib/modules.idx; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12988:491,message,message,491,https://root.cern,https://github.com/root-project/root/issues/12988,1,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour?. If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists!. ### How to reproduce?. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT?. irrelevant. ### Which operating system are you using?. irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:497,inject,inject,497,https://root.cern,https://github.com/root-project/root/issues/13042,1,['inject'],['inject']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:530,Depend,DependencyVersions,530,https://root.cern,https://github.com/root-project/root/issues/15212,5,"['Depend', 'depend']","['DependencyVersions', 'dependencies', 'dependency']"
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16654:344,message,message,344,https://root.cern,https://github.com/root-project/root/issues/16654,1,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear Rooters,. Indeed I used the TMapFile together with TApplication to realize the online monitoring for my DAQ. After having tried many combinations of ROOT and ubuntu versions, finally it worked with ROOT 6.12.06 on Ubuntu 16.04.7 LTS (gcc 5.4.0). . The main problem is remaining with the TMapFile which requires -lNew to be included in the makefile. Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. Or vice versa, TApplication works but TMapFile doesn't work. In order to repeat the errors, I collected the three ROOT example macros (as attached) and created a makefile to compile them. In the Makefile, the option of --new or -lNew have been added. One can include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:492,message,message,492,https://root.cern,https://github.com/root-project/root/issues/13511,1,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:313,message,messages,313,https://root.cern,https://github.com/root-project/root/issues/16577,1,['message'],['messages']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:405,message,messages,405,https://root.cern,https://github.com/root-project/root/issues/14571,2,['message'],"['message', 'messages']"
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello @guitargeek @cburgard !. My student @mathyuu is trying to use the JSON functionality for some combination workflow, and at first we are making sure we can ""round-trip"" existing workspaces. There are problems importing JSON files that were produced by the export functionality. More specifically, when importing ""generic functions"", aka RooFormulas, the parser used to get the names of the dependent variables is extremely brittle and cannot handle numbers in scientific notation in all cases... and to be honest, reading the code, what surprises me is that it can at all work in some cases. Can't you rely on the built-in parsers for `RooFormula` instead, for instance ?. The issue is in `extractArguments` function. BTW, if you fix the bug, can you take the opportunity to change the output from `vector<string>` to `set<string>` ? There are warnings printed down the line with a difference between what the function ""claims to use"" and what it ""is in use"", that all come from variables that appear several times in the formula. See below for reproducer. ### Reproducer. Here is a copy of the function:. ``` C++; #include <vector>; #include <algorithm>; #include <string>; #include <iostream>; #include <cctype>. std::vector<std::string> extractArguments(std::string expr); {; // Get rid of whitespaces; expr.erase(std::remove_if(expr.begin(), expr.end(), [](unsigned char c) { return std::isspace(c); }), expr.end());. std::vector<std::string> arguments;; size_t startidx = expr.size();; for (size_t i = 0; i < expr.size(); ++i) {; if (startidx >= expr.size()) {; if (isalpha(expr[i])) {; startidx = i;; }; } else {; if (!isdigit(expr[i]) && !isalpha(expr[i]) && expr[i] != '_') {; if (expr[i] == '(') {; startidx = expr.size();; continue;; }; std::string arg(expr.substr(startidx, i - startidx));; startidx = expr.size();; arguments.push_back(arg);; }; }; }; if (startidx < expr.size()) {; arguments.push_back(expr.su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14637:470,depend,dependent,470,https://root.cern,https://github.com/root-project/root/issues/14637,1,['depend'],['dependent']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:350,Interface,InterfaceUtils,350,https://root.cern,https://github.com/root-project/root/issues/13656,2,['Interface'],['InterfaceUtils']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi ROOT team,. We ran into some trouble last night with the ROOT ""HEAD"" builds that have CUDA enabled in our LCG nightlies. The builds failed on these platforms: x86_64-centos7-gcc11-opt, x86_64-centos8-gcc11-opt, and el9-gcc11-opt. These are the ones we use for this configuration. @bellenot: asked me to let you know, so here's the ticket. Here's the error message we got:. ```; Error: Module 'RooFitCuda.pcm' failed to load.; ```; and this:; ```; make[5]: *** [roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/build.make:519: roofit/roofitcore/G__RooFitCore.cxx] Error 1; make[5]: Target 'roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/depend' not remade because of errors.; make[4]: *** [CMakeFiles/Makefile2:44521: roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/all] Error 2; ```. you can find the full build logs here:. http://cdash.cern.ch/upload/d526fd513d6f4007d95aa0eeb56dfc0627929bf1/ROOT-HEAD-build.log. Thanks for looking into this, and let me know if you need anything else!. Cheers,; Dmitri. ### Reproducer. No reproducer. ### ROOT version. HEAD. ### Installation method. build from sources. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415:434,message,message,434,https://root.cern,https://github.com/root-project/root/issues/13415,2,"['depend', 'message']","['depend', 'message']"
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I found that putting a RooBinSamplingPdf that wraps an extended pdf inside a RooAddPdf (that is in 'no-coefficient' mode, so that it is also extended), you cannot construct the NLL for this. The reason I think is that the RooBinSamplingPdf class does not forward the createExpectedEventsFunc call to the underlying pdf. Will submit a fix in just a moment. ### Reproducer. Here's a minimal reproducer:; ```; RooWorkspace w;; w.factory(""RooAddPdf::apdf(RooBinSamplingPdf::p(x,RooExtendPdf::epdf(EXPR::pdf('x',x[0,10]),e[100])))"");; RooDataSet d(""data"",""data"",*w.var(""x""));; w.pdf(""apdf"")->createNLL(d);; ```; Produces:; ```; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(apdf) fixing normalization set for coefficient determination to observables in data; [#0] ERROR:InputArguments -- The pdf ""p"" of type RooBinSamplingPdf did not overload RooAbsPdf::createExpectedEventsFunc()!. *** Break *** segmentation violation; ```. ### ROOT version. 6.34. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16796:121,wrap,wraps,121,https://root.cern,https://github.com/root-project/root/issues/16796,1,['wrap'],['wraps']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15196:166,wrap,wrapper,166,https://root.cern,https://github.com/root-project/root/issues/15196,1,['wrap'],['wrapper']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731:580,message,messages,580,https://root.cern,https://github.com/root-project/root/issues/13731,1,['message'],['messages']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749:476,message,message,476,https://root.cern,https://github.com/root-project/root/issues/13749,1,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The RDataFrame execution order for branches of the computation graph is bottom-up: actions request values to the upstream readers traversing them one by one in reverse order w.r.t. their insertion. This logic seems to be flipped when the action is JITted. In a simple example with two `Define`d columns and one `Graph`, the order of execution of the `Define`s changes depending on whether the action needs to infer the column types or not. Correc order (bottom-up); ```; ./repro_graph_compiled.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; Defining 'b2': address: 0x7ffe1477198c, value: 42; Defining 'b1': address: 0x7ffe1477198c, value: 10; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:889 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 6.10352e-05s elapsed).; graph: X: 10,Y:42; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:811 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Nothing to jit and execute.; ```. Wrong order; ```; ./repro_graph_jitted.out ; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:852 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Starting event loop number 0.; Info in <[ROOT.RDF] Info /home/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:825 in void ROOT::Detail::RDF::RLoopManager::Jit()>: Just-in-time compilation phase completed in 1.388524 seconds.; Defining 'b1': address: 0x7ffd017cb8dc, value: 42;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15686:443,depend,depending,443,https://root.cern,https://github.com/root-project/root/issues/15686,1,['depend'],['depending']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16600:129,message,message,129,https://root.cern,https://github.com/root-project/root/issues/16600,1,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The failure seen in the asan job for the `gtest-tree-dataframe-test-dataframe-interface` test is due to the reproducer attached. It seems trying to JIT a function with a very long return expression is causing issues. Unfortunately asan just reports a segfault with no stacktrace, but I was able to get a (very long) stacktrace with gdb and the reproducer, see the attachment. Note that the reproducer is completely detached from RDataFrame and just calls the interpreter. [gdb_ginterpreter_declare_manyargs.txt](https://github.com/user-attachments/files/15794771/gdb_ginterpreter_declare_manyargs.txt). ### Reproducer. ```cpp; #include <TInterpreter.h>. int main(){; gInterpreter->Declare(R""(; namespace R_rdf {; auto func0(const int var0){return var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + va",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818:153,interface,interface,153,https://root.cern,https://github.com/root-project/root/issues/15818,1,['interface'],['interface']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15090:225,rout,routinely,225,https://root.cern,https://github.com/root-project/root/issues/15090,1,['rout'],['routinely']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The legacy backend can be used with models with categorical parameters (minimization can proceed if it is held constant). ; The new cpu backend appears to not include the categorical param in its list of variables (from `getVariables()`) and also just crashes when you try to evaluate the function. ### Reproducer. ```; {; // create a one-channel on-bin model, with two samples in the channel, which are each scaled by a factor; // that depends on the state of a category; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/chan1""]->SetXaxis(1,0,1);; w[""simPdf/chan1/bkg1""]->SetBinContent(1,5);; w[""simPdf/chan1/bkg2""]->SetBinContent(1,10);; w[""simPdf/chan1/bkg1""]->Multiply(""fac1('myCat==0?1:0',myCat[a,b])"",""func"");; w[""simPdf/chan1/bkg2""]->Multiply(""fac2('myCat==0?0:1',myCat)"",""func"");; w[""simPdf/chan1""]->SetBinData(1,12);. w.pars()[""myCat""]->get<RooAbsArg>()->setAttribute(""Constant""); // how I would hold the param constant. auto nll = w[""simPdf""]->nll(""obsData"",{RooFit::EvalBackend(""cpu"")});; nll->getVariables()->Print(); // in cpu mode ""myCat"" doesn't appear here!!; nll->getVariables()->setCatLabel(""myCat"",""a"");. cout << nll->getVal() << endl; // this crashes for cpu mode. }; ```. ### ROOT version. 6.32 , master. ### Installation method. source. ### Operating system. all?. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15701:512,depend,depends,512,https://root.cern,https://github.com/root-project/root/issues/15701,1,['depend'],['depends']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:763,rout,routine,763,https://root.cern,https://github.com/root-project/root/issues/15318,2,['rout'],['routine']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14162:584,depend,dependencies,584,https://root.cern,https://github.com/root-project/root/issues/14162,1,['depend'],['dependencies']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When a class is schema evoled (see reproducer) using a renaming rules. At least on line 1258 of `StreamerInfoReadBuffer.cxx`:; ```; subinfo = (TStreamerInfo*)newProxy->GetValueClass()->GetConversionStreamerInfo( oldProxy->GetValueClass(), vClVersion );; ```. is not properly handling the case whether the classes are unversion and thus the search ought to be done using the checksum rather than the class version. ### Reproducer. ```; template <typename T>; struct Wrapper; {; bool present = true;; T obj;; };. struct MatchedCSCSegment; {; float someValue = 0.0;. MatchedCSCSegment(float in = 0.0) : someValue{in} {}. // The simeple update fails if the class version is not set.; ClassDef(MatchedCSCSegment, 5);; };. struct CSCSegment; {; float someValue;. operator MatchedCSCSegment(); {; return MatchedCSCSegment{someValue};; }. #ifdef OLD_VERSION; std::vector<CSCSegment> theDuplicateSegments;; ClassDef(CSCSegment, 3);; #else; std::vector<MatchedCSCSegment> theDuplicateSegments;. ClassDef(CSCSegment, 4);; #endif; };; ```; and rule:; ```; #pragma read sourceClass=""CSCSegment"" targetClass=""MatchedCSCSegment""; ```. ### ROOT version. master. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14491:540,Wrap,Wrapper,540,https://root.cern,https://github.com/root-project/root/issues/14491,1,['Wrap'],['Wrapper']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h; ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h; #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h""; #include ""TH2D.h""; #include ""TH3D.h""; #include ""TFile.h""; #include ""TMath.h"". #include <eigen3/Eigen/Dense>; // #include <eigen3/Eigen/Eigenvalues>; //#include <stdlib.h>; //#include <stdio.h>; #include <cstdlib> ; #include <cstdio>; #include <cmath>; #include <iostream>; #include <string>; #include <fstream>; #include <cassert>. namespace wrem {. // ================================================; // Some functions to be used for EtaPtCorrelatedEfficiency; // ================================================; // TODO:; // put functions in another header file; // write a base class to make all functions derive from, at least for polynomials; // write a generic class for polynomials; class pol3_custom {; public:; pol3_custom() {};; pol3_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double operator() (std::vector<double> &x, std::vector<double> &p) {; double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;; return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);; }; void setPolynomialArgument(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; }; int getNparams() { return nparams_; }; protected:; // to normalize polynomial argument; int nparams_ = 4;; double xMinNorm_ = 0.0;; double xRangeNorm_ = 1.0;; };. class pol4_custom {; public:; pol4_custom() {};; pol4_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:272,depend,dependency,272,https://root.cern,https://github.com/root-project/root/issues/16578,1,['depend'],['dependency']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When linking a dependent product (happens to be Celeritas but apriori it could be anything) against ROOT build with a builtin TBB, the link fails with:; ```; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const; ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem.; * doing `ldd` on `libImt` prints the expected path for `libtbb`; * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem; * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem ; * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that; * we use `-ltbb` for the buitin; * the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13079:90,depend,dependent,90,https://root.cern,https://github.com/root-project/root/issues/13079,1,['depend'],['dependent']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When you have a Gaussian where the sigma depends on the observable, the pdf values will be wrong. This can be fixed by forcing numeric integration of the Gaussian. So apparently, RooFit has some problem figuring out that numeric integrals are necessary here. ### Reproducer. ```c++; RooRealVar x{""x"", ""x"", 100., 1000.};; RooFormulaVar res{""res"", ""0.07 * x + 2.0"", {x}};; RooGaussian model{""sig"", ""sig"", x, 200, res};. std::unique_ptr<RooAbsReal> integ1{model.createIntegral(x)};; integ1->Print();. model.forceNumInt(true);. std::unique_ptr<RooAbsReal> integ2{model.createIntegral(x)};; integ2->Print();. ```; Output:; ```txt; RooRealIntegral::sig_Int[x][ Int sigd[Ana](x) ] = 101.518; RooRealIntegral::sig_Int[x][ Int sig d[Num](x) ] = [#1] INFO:NumericIntegration -- RooRealIntegral::init(sig_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); 129.761; ```. ### ROOT version. `master`. ### Installation method. Building from source. ### Operating system. Arch Linux. ### Additional context. Inspired by the following forum post:; https://root-forum.cern.ch/t/fit-multiple-peaks-with-shared-parameters/57725/3?u=jonas. Could be related to [ROOT-3079](https://sft.its.cern.ch/jira/browse/ROOT-3079).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14320:116,depend,depends,116,https://root.cern,https://github.com/root-project/root/issues/14320,3,"['depend', 'integrat']","['depends', 'integration', 'integrator']"
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. cmake -Dminimal=ON .... leads to:; ```; CMake Deprecation Warning at cmake/modules/RootBuildOptions.cmake:421 (message):; >>> Option 'builtin_afterimage' is deprecated: in the future it will always; be set to ON. In the next release of ROOT, you will no longer be able to; disable this feature. Please contact root-dev@cern.ch should you still; need disabling it.; Call Stack (most recent call first):; CMakeLists.txt:117 (include); ```; i.e this message should probably not appear when X11/Cocoa are disabled. ### Reproducer. see description	. ### ROOT version. master	. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15027:186,message,message,186,https://root.cern,https://github.com/root-project/root/issues/15027,2,['message'],['message']
Integrability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. last version `07d2b27d192bd20bea8421da7b1c6c381376cfb2`; build on macos ; cmake ; ```; cmake version 3.29.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; ```; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information.; ```. ### Reproducer. mkdir build; cmake ../root. ### ROOT version. last commit `07d2b27d192bd20bea8421da7b1c6c381376cfb2`. ### Installation method. build from source. ### Operating system. macos 14.4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15549:298,message,message,298,https://root.cern,https://github.com/root-project/root/issues/15549,1,['message'],['message']
Integrability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description; From https://its.cern.ch/jira/browse/ROOT-2927. Dear ROOT,. I am attaching to this message a ROOT file that contains a sparse matrix, and a vector. Trying to solve the equation formed by the two causes a segfault. The steps to reproduce the problem are the following:. ```cpp; $ root \-l matrix_fail.root; root [0]; Attaching file matrix_fail.root as _file0...; root [1] M; (class TMatrixTSparse&amp;lt;double&amp;gt;*)0xbed850; root [2] x; (class TVectorT&amp;lt;double&amp;gt;*)0xbedcb0; root [3] TDecompSparse solver(*M,0); root [4] Bool_t ok; root [5] TVectorD xx = solver.Solve(*x, ok). *** Break *** segmentation violation; ```. The problem is due to this particular instance of the data: if you change one of the values of the x vector for example, you won't observe the segfault. I have tried this in two different linux distributions (SL5 and ubuntu karmic) and two different ROOT versions (5.24 and 5.18), both 64 bits. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Find input file in the Jira issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14554:158,message,message,158,https://root.cern,https://github.com/root-project/root/issues/14554,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:; ```; Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour?. Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce?. Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash; root@2cd219ab253b:~/data# root --version; ROOT Version: 6.28/04; Built for linuxx8664gcc on May 24 2023, 17:37:00; From tags/v6-28-04@v6-28-04; root@2cd219ab253b:~/data# root -l workspace_example.root; root [0]; Attaching file workspace_example.root as _file0...; (TFile *) 0x402fde6770; root [1] minimal_example->PrintXML(); Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. ### ROOT version. 6.28/04. ### How did you install ROOT?. custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using?. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967:681,message,message,681,https://root.cern,https://github.com/root-project/root/issues/12967,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With `ROOT::IsImplicitMTEnabled() == false`, `TVirtualFitter::GetFitter()` should return the fitter used in a previous fit operation. With ROOT 6.28.04 (and older versions too) compiled form source on the latest macOS/Xcode this doesn't seem to be the case anymore. The `GetFitter()` call returns `nullptr` despite a previous successful call to a fit routine. As a result, various tests that employ fits fail/crash, for example the ""test-stresshistogram"" test. ### What is the expected behaviour?. After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce?. This snippet (taken from the test-stresshistogram source),; ```; ROOT::DisableImplicitMT();; double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }; TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);; TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);; gaus->SetParameters(1,0,1);; h1->FillRandom(""gaus1d"",10000);; auto res = h1->Fit(gaus,""L0S"");; cout << TVirtualFitter::GetFitter() << endl;; ```; run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT?. Custom build from source. ### Which operating system are you using?. macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:; ```; $ root-config --cflags; -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include; $ root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041:431,rout,routine,431,https://root.cern,https://github.com/root-project/root/issues/13041,1,['rout'],['routine']
Integrability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865:244,message,message,244,https://root.cern,https://github.com/root-project/root/issues/13865,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx: In member function 'virtual void TDumpMembers::Inspect(TClass*, const char*, const char*, const void*, Bool_t)': ; /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx:701:20: warning: 'char* strncpy(char*, const char*, size_t)' specified bound depends on the length of the source argument [-Wstringop-truncation] ; 701 | strncpy(line + kvalue, *ppointer, std::min( i, kline - kvalue)); ; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; /tmp/user/spack-stage/spack-stage-root-6.32.04-2rp3usgipgbdq7rwb7pcpfc2iut72ltg/spack-src/core/meta/src/TClass.cxx:691:20: note: length computed here ; 691 | i = strlen(*ppointer); . ### Reproducer. compile 6.32.04 using GCC 14. ### ROOT version. 6.32.04. ### Installation method. spack build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16384:498,depend,depends,498,https://root.cern,https://github.com/root-project/root/issues/16384,1,['depend'],['depends']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As of https://github.com/root-project/root/commit/e9d264eb545be5f7c3df9733fe8adb9d4dac1163, building ROOT inside a docker container for arm64 architectures on a x86_64 host system using qemu emulation fails on the hsimple.C test:; ```; Consolidate compiler generated dependencies of target GeomBuilder; make[2]: Entering directory '/mnt/root-build-ubuntu'; make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Generating etc/allDict.cxx.pch; make[2]: Entering directory '/mnt/root-build-ubuntu'; [100%] Linking CXX shared library ../../lib/libGeomBuilder.so. Generating PCH for core core/clingutils core/imt core/multiproc core/rint core/thread graf2d/gpad graf2d/graf graf2d/postscript graf3d/g3d gui/fitpanel gui/gui hist/hist hist/histpainter io/io math/genvector math/mathcore math/matrix math/minuit math/physics math/smatrix math/vecops net/net tree/tree tree/treeplayer tree/treeviewer. make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Built target GeomBuilder; make[2]: Leaving directory '/mnt/root-build-ubuntu'; [100%] Built target onepcm; make[2]: Entering directory '/mnt/root-build-ubuntu'; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[2]: Entering directory '/mnt/root-build-ubuntu'; [100%] Generating tutorials/hsimple.root. Processing hsimple.C... *** Break *** segmentation violation; Generating stack trace...; 0x000000550424be2c in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550424c598 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550432bef4 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005504338200 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550433a1d4 in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x00000055043253ec in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550415c38c in <unknown> from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005504174cf4 in TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:342,depend,dependencies,342,https://root.cern,https://github.com/root-project/root/issues/13845,1,['depend'],['dependencies']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal; A valgrind run of the example given there issues:; ```; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:265,depend,depends,265,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Bug found by Attilah here: https://github.com/root-project/root-docker/issues/64#issuecomment-1859787405. The only place where gsl is included publicly in ROOT is in TMVA:; ```; grep -r gsl/ /opt/root/*; `include/TMVA/DNN/Architectures/Cpu/Blas.h:#include ""gsl/gsl_cblas.h""`; ```; So cmake should link publicly to that library to make it a dependency, rather than privately. ### Reproducer. https://github.com/root-project/root-docker/issues/64. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. docker. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14263:415,depend,dependency,415,https://root.cern,https://github.com/root-project/root/issues/14263,1,['depend'],['dependency']
Integrability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14169:233,depend,dependencies,233,https://root.cern,https://github.com/root-project/root/issues/14169,1,['depend'],['dependencies']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159:155,message,message,155,https://root.cern,https://github.com/root-project/root/issues/14159,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Calling `ROOT::Experimental::RNTupleWriter::Recreate` with a path to a full disk results in an assert in RMiniFile.cxx about `fileStream` being bad. A more useful error message would be appreciated. ### Reproducer. Should happen anytime you write to a full disk. ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 21 2024, 23:43:23 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ### Installation method. CMSSW release. ### Operating system. Linux alma 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14487:244,message,message,244,https://root.cern,https://github.com/root-project/root/issues/14487,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can not compile root after xcode update: clang-1500.3.9.4. ```; #include <vector>; ^; Error: Building module 'std_vector' implicitly. If 'std_vector' requires a ; dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'.; Otherwise, specify '-mByproduct std_vector' to disable this diagnostic.; In file included from input_line_7:16:; In file included from /usr/local/root/root_build/include/ROOT/TExecutorCRTP.hxx:15:; In file included from /usr/local/root/root_build/include/ROOT/TSeq.hxx:15:; /usr/local/root/root_build/include/TError.h:37:10: remark: building module 'std_functional' as '/usr/local/root/root_build/lib/std_functional.pcm' [-Rmodule-build]; #include <functional>; ^; Error: Building module 'std_functional' implicitly. If 'std_functional' requires a ; dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_functional'.; Otherwise, specify '-mByproduct std_functional' to disable this diagnostic.; ```. ### Reproducer. cmake --build . -- install -j. ### ROOT version. v-6-31-01, and also a similar error with the master branch. ### Installation method. build from the source. ### Operating system. MacOS 14.3.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14902:270,depend,dependency,270,https://root.cern,https://github.com/root-project/root/issues/14902,4,['depend'],"['dependency', 'depends']"
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Depending on the mixture of 4-vector types and the order of operations the result can change, e.g.; lv1 - lv2 != -lv2 + lv1; See reproducer for all combinations. ### Reproducer. ```python; import ROOT. lv1 = ROOT.Math.PxPyPzEVector(0, 0, 1, 1); lv2 = ROOT.Math.PxPyPzMVector(lv1). print(lv1 - lv2); # (0,0,0,0); print(lv2 - lv1); # (0,0,0,0); print(-lv1 + lv2); # (0,0,0,0); print(-lv2 + lv1); # (0,0,0,2); ```; but I am relatively sure that it will also happen in c++. ### ROOT version. ```; ROOT Version: 6.33.01; Built for linuxx8664gcc on Jun 12 2024, 23:54:24; From heads/master@v6-31-01-2329-g4fe33d2d91; ```. ### Installation method. LCG dev3. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15842:75,Depend,Depending,75,https://root.cern,https://github.com/root-project/root/issues/15842,1,['Depend'],['Depending']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Double call to `TNetXNGFile::Close()` leads to a segfault, which is not the case for `TFile::Close()` in general. This leads to bugs when integrating software together like https://github.com/AIDASoft/DD4hep/issues/1156. ### Reproducer. ```c++; TFile *_file0 = TFile::Open(""root://dtn-eic.jlab.org//work/eic2/EPIC/Tutorials/pythia8NCDIS_10x100_minQ2=1_beamEffects_xAngle=-0.025_hiDiv.hepmc3.tree.root"");; _file0->Close();; _file0->Close();; ```. ### ROOT version. ROOT 6.26/06; xrootd-5.4.3. ### Installation method. from nixpkgs. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13503:213,integrat,integrating,213,https://root.cern,https://github.com/root-project/root/issues/13503,1,['integrat'],['integrating']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15727:86,integrat,integrating,86,https://root.cern,https://github.com/root-project/root/issues/15727,4,"['depend', 'integrat']","['dependency', 'integrating']"
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For my project I use LCG nightly builds (dev3 slot) of ROOT and from this morning I see numerous messages of this kind . ```Warning in <TBufferFile::WriteObjectAny>: since RooNLLVar has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; ```. ### Reproducer. ROOT master from LCG dev3 nightly builds . ### ROOT version. ROOT master from LCG dev3 nightly builds . ### Installation method. LCG dev3 nightly build. ### Operating system. centos7 . ### Additional context. Same warning messages I see also for other classes like `RooRealMPFE`. Also I see numerous messages ; ```; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class RooAbsArg, offset=983040 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class vector<RooAbsArg*> read too few bytes: 227437 instead of 235302; Error in <TClass::New>: cannot create object of class RooNLLVar; Error in <TBufferFile::ReadObject>: could not create object of class RooNLLVar; Error in <TExMap::Remove>: key 463722250 not found at 1407; ```; but likely they are induced by the same problem of removed default constructors,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280:172,message,messages,172,https://root.cern,https://github.com/root-project/root/issues/13280,3,['message'],['messages']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14195:468,message,message,468,https://root.cern,https://github.com/root-project/root/issues/14195,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, build craps out as seen below. Reasonably standard build, the only difference from (my) usual is that I have no preinstalled xrootd, no idea if that is related. I've seen similar issues on 13.2-RELEASE. Something makes it think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:568,message,message,568,https://root.cern,https://github.com/root-project/root/issues/14492,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the input numpy arrays to `RooDataSet.from_numpy` are not c-contiguous, then the resulting dataset will have messed up values. ### Reproducer. ```python; import itertools; import numpy as np. import ROOT. obs_1 = ROOT.RooRealVar('obs_1' , 'obs_1', 70, 70, 190); obs_1.setBins(30); obs_2 = ROOT.RooRealVar('obs_2' , 'obs_2', 100, 100, 180); obs_2.setBins(80). val_obs_1 = []; val_obs_2 = []; for i in range(obs_1.numBins()):; obs_1.setBin(i); val_obs_1.append(obs_1.getVal()); for i in range(obs_2.numBins()):; obs_2.setBin(i); val_obs_2.append(obs_2.getVal()) . # so that all combination of values are in the dataset; val_cart_product = np.array(list(itertools.product(val_obs_1, val_obs_2))); data = {; 'obs_1': val_cart_product[:, 0],; 'obs_2': val_cart_product[:, 1]; }. dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```. This gives (memory dependent):; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72. , 100.5, 72. , ..., 178.5, 128. , 179.5]),; 'obs_2': array([100.5, 72. , 101.5, ..., 128. , 179.5, 132. ])}; ```. The expected output should be; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 179.5])}; ```. This happens because the arrays `data['obs_1']` and `data['obs_2']` are not c-contiguous:; ```; >>> data['obs_1'].flags; C_CONTIGUOUS : False; F_CONTIGUOUS : False; OWNDATA : False; WRITEABLE : True; ALIGNED : True; WRITEBACKIFCOPY : False; UPDATEIFCOPY : False; ```. If we make the arrays c-contiguous, the resulting dataset is correct:; ```; for key, arr in data.items():; if not arr.flags.c_contiguous:; data[key] = np.ascontiguousarray(arr); dataset = ROOT.RooDataSet.from_numpy(data, ROOT.RooArgSet(obs_1, obs_2)); ```; this gives; ```; >>> dataset.to_numpy(); {'obs_1': array([ 72., 72., 72., ..., 188., 188., 188.]),; 'obs_2': array([100.5, 101.5, 102.5, ..., 177.5, 178.5, 17",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13605:950,depend,dependent,950,https://root.cern,https://github.com/root-project/root/issues/13605,1,['depend'],['dependent']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207:762,Protocol,Protocol,762,https://root.cern,https://github.com/root-project/root/issues/14207,2,['Protocol'],['Protocol']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In order to try to silence some warnings coming from ""externals"" during dictionary generation for our classes (where our types would publicly depend on externals that themselves generate some warning), we just now started to teach our build system to provide include paths separately with `-I` and `-isystem` to the dictionary generation commands. (See: https://gitlab.cern.ch/atlas/atlasexternals/-/merge_requests/1028). As it happens, this didn't solve our original issue with an older version of [TBB](https://github.com/oneapi-src/oneTBB), but that I did not manage to reproduce with a standalone example yet, so let's ignore that one for now. (You can find some more info in: https://gitlab.cern.ch/atlas/athena/-/merge_requests/64172). But one issue that I found during this development is fairly easy to reproduce. It seems that one can not provide `-isystem` and `-D` command line options to `genreflex` in any order. Specifying `-D` flags after `-isystem` flags seems to not work. ### Reproducer. Take the following file, called `header.h`:. ```c++; #ifndef HEADER_H; #define HEADER_H. // Require the preprocessor definition.; #ifndef DO_NOT_FAIL; #error ""Preprocessor definition not set!""; #endif. /// Dummy type; struct TypeWithDictionary {; int foo;; };. #endif; ```. With the following additional `selection.xml` file:. ```xml; <lcgdict>; <class name=""TypeWithDictionary"" />; </lcgdict>; ```. With these two, I can run the following happily:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_success.cpp -D DO_NOT_FAIL -isystem /some/path; [bash][atspot01]:root-dict-isystem > head test_dict_success.cpp ; // Do NOT change. Changes will be lost next time file is generated. #define R__DICTIONARY_FILENAME test_dict_success; #define R__NO_DEPRECATION. /*******************************************************************/; #include <stddef.h>; #include <stdio.h>; #i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13207:217,depend,depend,217,https://root.cern,https://github.com/root-project/root/issues/13207,1,['depend'],['depend']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734:1082,message,message,1082,https://root.cern,https://github.com/root-project/root/issues/13734,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:405,message,message,405,https://root.cern,https://github.com/root-project/root/issues/15474,1,['message'],['message']
Integrability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT_HEAD failed in the nightlies in centos7 platfom; The reported error estracted from the[ log file ](http://cdash.cern.ch/upload/43670d452f7f3ef813ce655ef9357e62800d1e7a/ROOT-HEAD-configure.log)is:; gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-pc-linux-gnu:/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test found_arc4; -- Performing Test found_arc4 - Failed; -- Performing Test found_arc4_bsd; -- Performing Test found_arc4_bsd - Failed; -- Performing Test found_getrandom; -- Performing Test found_getrandom - Failed; CMake Error at core/unix/CMakeLists.txt:42 (message):; Fail to detect cryptographic random generator. ### Reproducer. [lcg_nightly_pipeline](https://lcgapp-services.cern.ch/spi-jenkins/view/LCG%20Nightlies/job/lcg_nightly_pipeline/). ### ROOT version. master. ### Installation method. build from source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:890,message,message,890,https://root.cern,https://github.com/root-project/root/issues/14958,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857; ```; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='; See also; /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```; the log file says; ```; build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode.""; ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0; make[7]: *** read jobs pipe: Bad file descriptor. Stop.; make[7]: *** Waiting for unfinished jobs....; In file included from ../../src/tbb/concurrent_hash_map.cpp:17:; ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:327,depend,depends,327,https://root.cern,https://github.com/root-project/root/issues/14520,2,"['depend', 'message']","['depends', 'message']"
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16135:248,message,message,248,https://root.cern,https://github.com/root-project/root/issues/16135,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15927:819,depend,depends,819,https://root.cern,https://github.com/root-project/root/issues/15927,1,['depend'],['depends']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms); 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration); 3. see the memory increase forever. You can test the bug with the following script:; ```; import resource; import ROOT. def print_memory_usage(message):; print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""); histogram_names = open(""histogram_names.txt"").read().splitlines(); print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1""; with ROOT.TFile.Open(fn) as f:; print_memory_usage(""open ROOT file""); for i, histogram_name in enumerate(sorted(histogram_names)):; h = f.Get(histogram_name); if i % 1000 == 0:; print_memory_usage(f""read {i+1} histograms""); print_memory_usage(""read all histograms""); print_memory_usage(""outside context maneger (closing ROOT file)""); ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16178:902,message,message,902,https://root.cern,https://github.com/root-project/root/issues/16178,2,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This https://github.com/root-project/root/pull/14703 (my guess on the changes, I did not confirm that this is the case) seems to have caused issues in python projects depending on root. E.g. https://lcgapp-services.cern.ch/cdash/testDetails.php?test=23867111&build=312289 ; ```; # setting LC_ALL to ""C""; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/__init__.py"", line 29, in <module>; from .Bindings import * # noqa: F401 F403; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/Bindings.py"", line 55, in <module>; import cppyy; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/__init__.py"", line 71, in <module>; from ._cpython_cppyy import *; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/_cpython_cppyy.py"", line 18, in <module>; c = loader.load_cpp_backend(); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; ```. and many others in the list https://lcgapp-services.cern.ch/cdash/viewTest.php?onlyfailed&buildid=312289. Are we missing some required changes to build options?. ### Reproducer. On any centos7 machine with cvmfs (or use available stack for your OS); ```; source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-dbg/setup.sh; python -c ""import GaudiPython""; ```. ### ROOT version. Master from tonight.; Things were fine yesterday. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. centos7, alma9, alma8, ubuntu20, ubuntu22. ### Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904:242,depend,depending,242,https://root.cern,https://github.com/root-project/root/issues/14904,1,['depend'],['depending']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a custom histogram class which has a custom Merge method which is declared as protected. Instances of this class get merged together via TFileMerger. This worked fine until recently, when merging started to silently fail (only the first histogram was in the merged result, the others were ignored). The only thing we saw (which went unnoticed) is a message a few lines above saying:. ```c++; input_line_35:7:57: error: 'Merge' is a protected member of 'StepTHnT<TArrayF>'; new (ret) (long long) (((StepTHnT<TArrayF>*)obj)->Merge(*(TCollection**)args[0]));; ^; G__O2Framework dictionary payload:254:12: note: declared protected here; Long64_t Merge(TCollection* list) override;; ^; ```. Is this a known issue worth investigating? In the end our solution was to mark the Merge method as public, however it would be good to understand what happened and if the new behaviour is the desired one (and it would be good to have TFileMerger to throw if it does not manage to do its job). ### Reproducer. ```; void merge_test(); {; TFileMerger merger(kFALSE, kFALSE);; merger.OutputFile(""AnalysisResults.root"");; ; ifstream fin(""input_data.txt"");; while (fin.good()); {; char buffer[2000];; fin.getline(buffer, 2000);; ; if (strlen(buffer) == 0); continue;; ; Printf(""%s"", buffer);; ; merger.AddFile(buffer);; }; ; merger.Merge(); ; }; ```. ### ROOT version. 6.30.01. ### Installation method. aliBuild. ### Operating system. Linux, macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963:432,message,message,432,https://root.cern,https://github.com/root-project/root/issues/14963,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When a `TChain` is added as a friend to a `TTree` , branches coming from the `TChain` are no longer updated after switching to the second file in the chain. ### Reproducer. The [attached macro](https://github.com/user-attachments/files/17592119/bugDemo.txt) reproduces the issue. Save it `bugDemo.C` and run it. The correct behavior is to always print `true`, but we get some `false`. The code first constructs two trees with an `index` branch. The index is the entry number, going from 0 to 10 in the first file and 10 to 20 in the second one. Then, a longer tree is constructed with 20 empty entries. The two files containing the entry number as merged into a chain and attached as a friend to the empty tree. Iterating over the long tree yields the correct value of `index` until the 10th entry, than a constant 9 (the last value in the first file). Correct behavior is 0 to 20. This can be obtained by wrapping the long tree in a `TChain`. The underlying issue is that `TTree::LoadTree` lacks the following code present in `TChain::LoadTree`:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1407-L1434. ### ROOT version. Seen in:; * ROOT 6.30/04 (anaconda); * ROOT 6.28/04 (LCG 104). I couldn't find any code change in `master` in the relevant areas. ### Installation method. anaconda and LCG 104. ### Operating system. Linux (CentOS 9, Ubuntu 22.04, Ubuntu 24.04). ### Additional context. Possibly related to the following Jira tickets:; * https://its.cern.ch/jira/browse/ROOT-10778 (open); * https://its.cern.ch/jira/browse/ROOT-2935 (reportedly fixed in 6.04.00)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16804:981,wrap,wrapping,981,https://root.cern,https://github.com/root-project/root/issues/16804,1,['wrap'],['wrapping']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13675:178,message,message,178,https://root.cern,https://github.com/root-project/root/issues/13675,1,['message'],['message']
Integrability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038:334,message,message,334,https://root.cern,https://github.com/root-project/root/issues/16038,1,['message'],['message']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15370:99,message,message,99,https://root.cern,https://github.com/root-project/root/issues/15370,2,['message'],['message']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names.; But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up..; How can this be ?. The output of the reproducer is the following:; My f0 gets modified into t0..; ```; root [1] .x test.C; [f0] + [beta]*x; [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x""; ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```; {; 	double t0 = 0;; 	double t1 = 10;; 	; 	double f0 = 12.5;; 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";; TF1 *formula = new TF1(""formula1"", formulaStr);; formula->SetParName (0, ""beta"");; formula->SetParameter(0, beta);; formula->SetParName (1, ""t0"");; formula->SetParameter(1, t0);; formula->SetParName (2, ""f0"");; formula->SetParameter(2, f0);; formula->SetParName (3, ""t1"");; formula->SetParameter(3, t1);; formula->SetParName (4, ""f1"");; formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;; std::cout << formula->GetFormula()->GetExpFormula() << std::endl;; }; ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13709:664,depend,depending,664,https://root.cern,https://github.com/root-project/root/issues/13709,1,['depend'],['depending']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16496:246,message,message,246,https://root.cern,https://github.com/root-project/root/issues/16496,1,['message'],['message']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336:995,Message,Message,995,https://root.cern,https://github.com/root-project/root/issues/15336,1,['Message'],['Message']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I updated my mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:839,depend,dependency,839,https://root.cern,https://github.com/root-project/root/issues/16486,1,['depend'],['dependency']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15178:124,message,message,124,https://root.cern,https://github.com/root-project/root/issues/15178,2,['message'],['message']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. ROOT misbehaves when ASAN is enabled. Below different incarnation of the problem are illustrated:; - [ ] root/io/bigevent, root/io/event, root/io/compression, root/io/datamodelevolution, root/io/perf, root/treeformula/event, root/treeformula/retobj, ; root/treeformula/schemaEvolution, root/treeformula/sync, root/tree/friend, root/tree/evolution, root/tree/treeproblem, root/treeproxy, root/io/compression : bad linkage to asan functions; - [ ] root/io/references: badly setup dependency on libEvent; - [ ] root/tree/addresses : `AddressSanitizer: heap-buffer-overflow`; - [ ] root/io/newClassDef: Real failure with ASAN enabled; - [ ] root/io/cint: bad linkage to ASAN libraries. Should also check if the tests are needed at all. Moreover, the above (and root/tree/addresses) are automatic Makefile driven tests. They could be translated to CMake to gain granularity. ### Reproducer. Run with Asan. ### ROOT version. master. ### Installation method. From sources (need asan). ### Operating system. Linux, mac. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14682:553,depend,dependency,553,https://root.cern,https://github.com/root-project/root/issues/14682,1,['depend'],['dependency']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. TMVA tests sporadically fail in ROOT's integration buils (both PR and Nightly). Often the stack traces are not easily readable, for example when the test is steered through PyROOT. However, at least one clear problem emerged in the I/O of `TMVA::Experimental::SOFIE::RModel` instances.; In [this build](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` na",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15156:114,integrat,integration,114,https://root.cern,https://github.com/root-project/root/issues/15156,1,['integrat'],['integration']
Integrability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:; ```; Torch Version: 2.0.1; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:157,message,message,157,https://root.cern,https://github.com/root-project/root/issues/13155,1,['message'],['message']
Integrability,"### Describe the bug. I open a workspace (RooWorkspace) that contains a pdf and various parameters. From these I do a loop on pseudo-experiments (""toys"") that generate a RooDataSet. For each toy in the loop, after generation, I delete the RooDataset. But the memory, as reported by the class ProcInfo_t, never decreases. It means that either ProcInfo_t is not actually showing the current memory information, or that is shows the ""integrated memory used since the beginning"",; or that RooDataSet would have a memory leak ?; or that I have a bug in my program ?. I provide a minimum reproducible example.; See for example : ""EXAMPLE OF PROBLEM"". The minimum program is here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory. ### Expected behavior. the expected behaviour would be that when I delete the RooDataSet, the memory would reduce. ### To Reproduce; The README shows the quick steps for allowing to read the root file. ### Setup; I used root 6.18.00 to reproduce the problem on a french cluster of computer. On lxplus, I reproduce the problem, with root 6.20.02. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984:431,integrat,integrated,431,https://root.cern,https://github.com/root-project/root/issues/8984,1,['integrat'],['integrated']
Integrability,"### Describe the bug. If a RooProdPdf is in a RooAddPdf, its values change if one changes the normalization range of its factors with `RooAbsPdf::normRange()`. ### Expected behavior. The values of a RooProdPdf should not depend on the `normRange()` of its factors, because the RooProdPdf is responsible for normalizing itself. ### To Reproduce. Enable the new unit test in `testRooProdPdf` shipped with https://github.com/root-project/root/pull/11485. ### Setup. ROOT master on Arch Linux. ### Additional context. It is important now to fix the issues related to the `RooAbsPdf::normRange()` feature, because as of https://github.com/root-project/root/pull/11455 it is used in multi-range fits. Thus, we need to make sure it's less fragile. After this issue is fixed, it should be verified with `stressRooFit` that things would still work if one were to set the normalization ranges of all PDFs in the computation graph in [RooAbsOptTestStatistic::initSlave()](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx#L294) not just the top-level PDF:. For debugging, it could be helpful to replace the RooProdPdfs with `RooFixedProdPdf` objects, which explicitly represent the conputation graph of a RooProdPdf for a given normalization set without internal caching:; ```C++; if(auto prodPdf = dynamic_cast<RooProdPdf *>(pdf)) {; auto normalizedPdf = std::make_unique<RooFixedProdPdf>(*prodPdf, currNormSet);. replaceArg(*normalizedPdf, *pdf);. newNodes.emplace_back(std::move(normalizedPdf));. continue;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11486:221,depend,depend,221,https://root.cern,https://github.com/root-project/root/issues/11486,1,['depend'],['depend']
Integrability,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8438:201,message,message,201,https://root.cern,https://github.com/root-project/root/issues/8438,1,['message'],['message']
Integrability,"### Describe the bug. The analytical integral of the RooPoisson is implemented wrongly for the case where the boundaries are `0 < a < 1e30` and `b >= 1e30`. ### Expected behavior. The integral should be correct. ### To Reproduce. The wrong integral can be reproduced with this code snippet. ```C++; void testPoissonIntegral() {. const double mu = 100;; const double inf = std::numeric_limits<double>::max();. // 1. Should be 1 because the probability to have x greater than 100000 is; // basically zero.; std::cout << getPoissonIntegral(0, 100000, mu) << std::endl;. // 2. Should be around 0.5, as the range of x is from the mean of the; // Poisson to basically infinity.; std::cout << getPoissonIntegral(100, 100000, mu) << std::endl;. // 3. Should be the same as the first integral; std::cout << getPoissonIntegral(0, inf, mu) << std::endl;. // 3. Should be the same as the second integral but it isn't!; std::cout << getPoissonIntegral(100, inf, mu) << std::endl;; }; ```. ### Setup. Any setup will do. ### Additional context. The problem is most likely that in the analytical integration code for the RooPoisson, it is hardcoded to return 1.0 if the upper boundary is infinite:; https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L102. An addition code branch is required for the case where the upper bound is infinite and the lower bound greater than zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10868:1080,integrat,integration,1080,https://root.cern,https://github.com/root-project/root/issues/10868,1,['integrat'],['integration']
Integrability,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11016:58,integrat,integration,58,https://root.cern,https://github.com/root-project/root/issues/11016,5,['integrat'],"['integrate-', 'integration']"
Integrability,"### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:877,interface,interface,877,https://root.cern,https://github.com/root-project/root/issues/10203,1,['interface'],['interface']
Integrability,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:651,message,message,651,https://root.cern,https://github.com/root-project/root/issues/8145,1,['message'],['message']
Integrability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```; // ... snip ...; [ 26%] Generating VCSRevision.h; [ 26%] Built target LLVMMCDisassembler; [ 26%] Built target LLVMOption; [ 26%] Built target LLVMMCParser; [ 26%] Built target LLVMRemarks; [ 26%] Built target clang-cmake-exports; [ 26%] Built target rconfigure; [ 27%] Built target obj.llvm-tblgen; [ 27%] Built target llvm_vcsrevision_h; [ 27%] Built target gitcommit; [ 27%] Built target LLVMDebugInfoMSF; [ 27%] Built target obj.clang-tblgen; [ 27%] Built target rootMan; [ 28%] Built target LLVMDebugInfoDWARF; [ 28%] Built target rsa; [ 28%] Built target LLVMDebugInfoCodeView; [ 28%] Built target haddMan; [ 28%] Built target LLVMMC; [ 28%] Built target hist2workspaceMan; [ 28%] Built target copy_pretty_printers; [ 28%] Built target rootclingMan; [ 28%] Built target ProofBenchPARFiles; [ 29%] Built target move_headers; [ 30%] Built target LLVMSupport; [ 30%] Built target Foundation_Stage1; [ 30%] Built target BaseTROOT; [ 30%] Built target Foundation; [ 30%] Built target clang-tblgen; [ 30%] Built target Clib; [ 30%] Built target llvm-tblgen; [ 30%] Built target Lz4; [ 30%] Built target TextInput; [ 30%] Built target Zstd; [ 30%] Built target Lzma; [ 30%] Built target Unix; [ 30%] Built target GuiCore; [ 30%] Built target Zip; [ 30%] Built target Cont; [ 30%] Built target Meta; [ 30%] Built target RootPcmObjs; [ 30%] Built target mathtext; [ 30%] Built target root; [ 30%] Built target rmkdepend; [ 30%] Built target AttributeCompatFuncTableGen; [ 30%] Built target rpdutil; [ 30%] Built target ClangAttrImpl; [ 30%] Built target intrinsics_gen; [ 30%] Built target ClangSACheckers; [ 30%] Built target InstCombineTableGen; [ 30%] Built target StmtDataCollectors; [ 30%] Built t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:192,depend,dependency,192,https://root.cern,https://github.com/root-project/root/issues/7893,2,['depend'],"['dependency', 'depends']"
Integrability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805).; `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`.; When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp; #include <ROOT/TBufferMerger.hxx>; #include <ROOT/RVec.hxx>; #include <TTree.h>; #include <TFile.h>; #include <iostream>. int main(); {; // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; TFile f(""standardwrite.root"", ""recreate"");; TTree t(""t"", ""t"", 99, &f);; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv.AsVector());; t.Fill();; f.Write();; }. std::cout << ""***** standard write ******"" << std::endl;; auto f2 = TFile::Open(""standardwrite.root"");; for (auto e : *f2->GetStreamerInfoList()) {; std::cout << e->GetName() << std::endl;; }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");; auto f = bm.GetFile();; TTree t(""t"", ""t"", 99, f.get());; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv.AsVector());; t.Fill();; f->Write();; }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;; auto f = TFile::Open(""bufferm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6611:971,depend,depends,971,https://root.cern,https://github.com/root-project/root/issues/6611,1,['depend'],['depends']
Integrability,"### Describe the bug; A crash is produced if you type `.Class` in the ROOT prompt. ```; ===========================================================================; struct std::atomic<_Tp *>; SIZE: (NA) FILE: atomic LINE: -1; List of member variables --------------------------------------------------; root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed.; ```. ### Expected behavior; No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce; `.Class; `; or `.Class TTree`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140:527,depend,dependent,527,https://root.cern,https://github.com/root-project/root/issues/10140,1,['depend'],['dependent']
Integrability,"### Describe the bug; A reverted transaction due to a failed compilation ends up removing decls / JITed symbols that should be left untouched. Related issues: #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848), [ROOT-6254](https://sft.its.cern.ch/jira/browse/ROOT-6254), [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084), and [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245). ### Expected behavior; Clean unload. Reverting a transaction should probably not touch template instantiations / emitted symbols that correspond to deserialized decls. ### To Reproduce; ```c++; root [1] foo.size(); ROOT_prompt_1:1:4: error: no member named 'size' in 'std::unique_ptr<std::__cxx11::basic_string<char>, std::default_delete<std::__cxx11::basic_string<char> > >'; did you mean to use '->' instead of '.'?; foo.size(); ^; ->; root [2] foo->size(); ROOT_prompt_2:1:4: error: member reference type 'std::unique_ptr<std::string>' (aka 'unique_ptr<basic_string<char> >') is not a pointer; did you mean to use '.'?; foo->size(); ~~~^~; ```; or; ```c++; root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};; root [1] foo.GetName(); ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'?; foo.GetName(); ^; ->; root [2] foo->GetName(); IncrementalExecutor::executeFunction: symbol '_ZSt3getILm0EJP5TFileSt14default_deleteIS0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::tuple_element<0ul, std::tuple<TFile*, std::default_delete<TFile> > >::type const& std::get<0ul, TFile*, std::default_delete<TFile> >(std::tuple<TFile*, std::default_delete<TFile> > const&); Maybe you need to load the corresponding shared library?; ```. ### Setup; ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10049:1557,interface,interface,1557,https://root.cern,https://github.com/root-project/root/issues/10049,1,['interface'],['interface']
Integrability,"### Describe the bug; Because of #6563 and the fix in CMake we need to move from linking `${PYTHON_LIBRARIES}` to instead depend on `Python3::Python`. See https://gitlab.kitware.com/cmake/cmake/-/issues/21293. This fixes test failures:; ```; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; ```. ### Expected behavior; RPath correctly set. ### To Reproduce; Jenkins nightly master or 6.22 on macos15, https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/. ### Setup. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6753:122,depend,depend,122,https://root.cern,https://github.com/root-project/root/issues/6753,1,['depend'],['depend']
Integrability,"### Describe the bug; Cling produces in the dictionary files code like this:. ```; static const char* fwdDeclCode = R""DICTFWDDCLS(; #line 1 ; ```; Which is invalid for VS if the string is longer than ~16000 characters.; In these cases either the C2026 is issued ; https://docs.microsoft.com/en-us/cpp/error-messages/compiler-errors-1/compiler-error-c2026?view=msvc-160; or, much worse, the code is silently truncated and then the compiled executables crash in runtime on code parsing. ### Expected behavior; Cling should take into account this limitation in VS. ### To Reproduce; Generate relatively large dictionary or, optionally manually increase the size of string literal in a small generated dictionary. Sorry that I don't provide a reproducer. My primary goal was to avoid this behavior when I saw it and not to debug it. ### Setup; 1. ROOT 6.22, VS 16.8? ( not sure actually, I've tried many builds, some worked, other didn't); 2. Windows; 3. Official site. ### Additional context; One can try to use an array of char* like that is done `classesHeaders[]` for the and add `TROOT::RegisterModule()`` that would accept it. But I cannot submit a PR. Sorry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6824:307,message,messages,307,https://root.cern,https://github.com/root-project/root/issues/6824,1,['message'],['messages']
Integrability,"### Describe the bug; Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log.; [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log); Could you please help have a look? Thanks a lot!. Error:; CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):; Command failed: 1; ; 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'; ; See also; ; F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log; ; ### Expected behavior; Successfully build root project without errors. ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src; 3. mkdir root_build root_install && cd root_build; 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src; 5. cmake --build . --config Release --target install. ### Setup; 1. Operating system: Windows 10; 2. Visual studio version: 16.11.6; 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347:573,message,message,573,https://root.cern,https://github.com/root-project/root/issues/9347,1,['message'],['message']
Integrability,"### Describe the bug; Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot!. (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error); Error:; ```; CustomBuild:; ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel.""; Generating etc/allDict.cxx.pch; ; Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer; ; =================================================================; ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes; #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141); #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:365,message,message,365,https://root.cern,https://github.com/root-project/root/issues/9445,2,"['depend', 'message']","['depends', 'message']"
Integrability,"### Describe the bug; I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400:357,Wrap,WrapperCall,357,https://root.cern,https://github.com/root-project/root/issues/7400,2,['Wrap'],['WrapperCall']
Integrability,"### Describe the bug; I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior; The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d); 2. Operating system: Archlinux, gcc 12.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11236:122,message,messages,122,https://root.cern,https://github.com/root-project/root/issues/11236,1,['message'],['messages']
Integrability,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292:343,message,message,343,https://root.cern,https://github.com/root-project/root/issues/7292,1,['message'],['message']
Integrability,"### Describe the bug; In the lcgcmake build system; Compiling ROOT master on macOS 11 (http://cdash.cern.ch/viewFiles.php?buildid=218660) or 12 (http://cdash.cern.ch/viewFiles.php?buildid=218674) fails to compile with the error message. ```; [ 55%] Copying clang's __clang_hip_libdevice_declares.h...; In file included from /Users/sftnight/build/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/macosx/src/TMacOSXSystem.mm:12:; /Users/sftnight/build/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/macosx/inc/TMacOSXSystem.h:16:10: fatal error: 'TUnixSystem.h' file not found; [ 55%] Linking CXX static library ../../libLLVMDebugInfoCodeView.a; #include ""TUnixSystem.h""; ```. Seems related to #10690 Which was touching the related CMakeLists.txt files. ### Expected behavior. Root compiles successfully on macOS. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: master; 2. Operating system: macOS 11, 12; 3. git clone",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12130:228,message,message,228,https://root.cern,https://github.com/root-project/root/issues/12130,1,['message'],['message']
Integrability,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11067:65,integrat,integration,65,https://root.cern,https://github.com/root-project/root/issues/11067,1,['integrat'],['integration']
Integrability,"### Describe the bug; ROOT master (c8ad00846344c090c3a6f653e0decf38ad324d65) fails to build with g++ 12.2 with `cmake -DCMAKE_CXX_STANDARD=20`. The reported error is:; ```; In file included from /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamReader.h:16,; from /home/bgruber/dev/root/interpreter/llvm/src/lib/Support/BinaryStreamReader.cpp:9:; /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamArray.h:331:31: error: expected unqualified-id before ‘const’; 331 | FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other); | ^~~~~; /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamArray.h:331:31: error: expected ‘)’ before ‘const’; 331 | FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other); | ~^~~~~; | ); ```. Checking out the offending file:; ```c++; template <typename T>; class FixedStreamArrayIterator; : public iterator_facade_base<FixedStreamArrayIterator<T>,; std::random_access_iterator_tag, const T> {. public:; FixedStreamArrayIterator(const FixedStreamArray<T> &Array, uint32_t Index); : Array(Array), Index(Index) {}. FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other) // ERROR HERE; : Array(Other.Array), Index(Other.Index) {}; ...; ```; indeed looks like wrong C++ syntax (the constructor shall only be named via an id-expression referring to the injected class name, see [here](https://eel.is/c++draft/class.ctor#general-1)). The `<T>` should be removed. The issue was fixed in upstream LLVM with [this commit](https://github.com/llvm/llvm-project/commit/2ccf0b76bcaf0895e04f14e3ff53c59dd96f9f0f). Please consider cherry-picking this commit. ### To Reproduce; 1. git clone ROOT master; 2. `cmake -DCMAKE_CXX_STANDARD=20`; 3. `make`. ### Setup. * gcc 12.2; * Ubuntu 22.10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12037:1396,inject,injected,1396,https://root.cern,https://github.com/root-project/root/issues/12037,1,['inject'],['injected']
Integrability,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7454:56,interface,interface,56,https://root.cern,https://github.com/root-project/root/issues/7454,2,['interface'],['interface']
Integrability,"### Describe the bug; TGaxis::SetNdivisions is recommended to set the maximum number of digits of a TGaxis is instance, however its behavior leads to wrong data being printed, depending on the argument. https://root.cern.ch/doc/master/classTGaxis.html#a6b93d66237560f7b11701402a1a446ce. See here, for N=1,2,3,4, how the TGaxis completely changes:. ![image](https://user-images.githubusercontent.com/10653970/187413185-1a8923ff-aded-4317-a110-ff10e5ad404e.png). Weird things also happen with `SetStripDecimals(kFALSE)`:. ![image](https://user-images.githubusercontent.com/10653970/187413563-86b4c3c8-7d91-48e9-a70f-3e9826dca1b8.png). ### Expected behavior; Calling SetNdivisions or SetMaxDigits should not change the TGaxis being painted, otherwise it leads to wrong data being shown. ### To Reproduce; ```cpp; #include ""TGraph.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TGaxis.h"". void testgraphaxis(bool strip = kTRUE); {; new TCanvas();. TF1 *f2=new TF1(""fcal"",""pol2"",0,45);; f2->SetParameters(6.975e3,-6.339e1,3.10185e-1);; f2->Draw();. TF1 *f1=new TF1(""fcalinv"",""pol2"",f2->Eval(45),f2->Eval(0));; f1->SetParameters(2.239e2,-4.985e-2,2.55121e-6);//I had to invert my original graph and fit again to get the new parameters. TGraph* gr = new TGraph();; gr->SetPoint(0,5,0.2);; gr->SetPoint(1,7,0.5);; gr->GetXaxis()->SetLimits(0,45);; gr->GetYaxis()->SetRangeUser(0,1);. gStyle->SetStripDecimals(strip);. for (int N = 0; N < 12; ++N) {; new TCanvas();; gr->Draw(""APL"");. gPad->Modified();; gPad->Update();. TGaxis *A1 = new TGaxis(gPad->GetUxmin(),gPad->GetUymax(),gPad->GetUxmax(),gPad->GetUymax(),""fcalinv"",510,""-"");; if (N!=0) A1->SetNdivisions(N*1000000 + (A1->GetNdiv()%1000000));; A1->Draw();; }; }; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11280:176,depend,depending,176,https://root.cern,https://github.com/root-project/root/issues/11280,1,['depend'],['depending']
Integrability,"### Describe the bug; When importing a TTree in a RooDataSet, if a RooCategory is filled from a tree branch of type Short_t, incorrect values are silently loaded. The category is always the same (it seems that it picks the first label in alphabetical order). The same problem appears for other types, only Int_t and UChar_t seem to work correctly. ### Expected behavior; Either correctly load the data set or fail with an error. ### To Reproduce; ```; TTree* tree = new TTree(""test_tree"", ""Test tree"");; Short_t cat_in;; tree->Branch(""cat"", &cat_in);. cat_in = 2; //category B; tree->Fill();. RooCategory cat(""cat"", ""Category"",{; {""B_cat"", 2},; {""A_cat"", 3}; });; RooDataSet data(""data"", ""RooDataSet"", RooArgSet(cat), RooFit::Import(*tree));. data.table(cat)->Print(""v"");; ```; We should get an event in category cat_B but instead we get an event in category cat_A. ### Setup; Latest ROOT from git, master branch, commit 8d87e2bb6e6a; Linux. ### Additional context; It seems to come from [RooAbsCategory::attachToTree](https://github.com/root-project/root/blob/943706c005c6723500e00061872d6eff4967d262/roofit/roofitcore/src/RooAbsCategory.cxx#L454) where there should probably be an error message if the type of branch is neither Int_t or UChar_t.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10278:1189,message,message,1189,https://root.cern,https://github.com/root-project/root/issues/10278,1,['message'],['message']
Integrability,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631:714,wrap,wrapper,714,https://root.cern,https://github.com/root-project/root/issues/12631,2,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:339,interface,interface,339,https://root.cern,https://github.com/root-project/root/issues/7970,1,['interface'],['interface']
Integrability,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7968:156,depend,dependencies,156,https://root.cern,https://github.com/root-project/root/issues/7968,1,['depend'],['dependencies']
Integrability,### Describe the bug; call Int_t(Uint_t). ```; Bool_t TMessageHandler::Notify(); {; if (fClass) return kFALSE;; // case of default handler; // encode class number in message id; if (!fMessObj) return kFALSE;; Int_t uid = Int_t(fMessObj->IsA()->GetUniqueID()); ; fMessId += 10000*uid;; fMessId = -fMessId;; Notified(); // emit Notified() signal; return kFALSE;; }; ```; GetUniqueID() returns Uint_t. ### Setup. ROOT master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6715:166,message,message,166,https://root.cern,https://github.com/root-project/root/issues/6715,1,['message'],['message']
Integrability,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722:1240,depend,dependencies,1240,https://root.cern,https://github.com/root-project/root/issues/11722,1,['depend'],['dependencies']
Integrability,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15077:367,interface,interface,367,https://root.cern,https://github.com/root-project/root/issues/15077,2,"['interface', 'message']","['interface', 'message']"
Integrability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10118. In Python, it's ""Pythonic"" convention that you can test the validity of containers by implicit cast to bool, e.g. ""if mylist: do_something"" rather than ""if len(mylist) > 0: ..."". Unfortunately PyROOT's wrapping of STL containers seems to break this: if I read a ROOT tree containing branches of type std::vector<float>, PyROOT's wrapper classes are automatically used, but the test ""if tree.some_vector_branch: ..."" always evaluates true, even if the vector is empty. To be consistently Pythonic and avoid bad surprises for users, can the STL container Pythonisations be given a def __bool__(self): return bool(self.size()) or similar method?. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14573:308,wrap,wrapping,308,https://root.cern,https://github.com/root-project/root/issues/14573,2,['wrap'],"['wrapper', 'wrapping']"
Integrability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10909. The PR https://github.com/root-project/root/pull/5408 will add a requirements.txt file to the repo, which should reflect our dependencies to python packages. The current status does not cover TMVA with xgboost, sklearn and keras as runtime dependencies, which should be added. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553:231,depend,dependencies,231,https://root.cern,https://github.com/root-project/root/issues/14553,2,['depend'],['dependencies']
Integrability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5159. It recently took me many many hours to figure out that my code could not read out a branch because TTree::SetMakeClass() was not set. As far as I can tell this is neither explained in the ROOT manual, nor the TTree documentation page. I found a old RootTalk message (http://root.cern.ch/root/roottalk/roottalk03/1853.html) regarding it, but only post mortem because one has to search for SetMakeClass, and at least this one had no clue that SetMakeClass was the problem to begin with. . Some explanation and warning about this feature in the TTree documentation would be very much appreciated. . Sue Ann Koay ; sakoay@cern.ch. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14583:363,message,message,363,https://root.cern,https://github.com/root-project/root/issues/14583,1,['message'],['message']
Integrability,### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5195. At the 2013 ROOT Workshop Peter Waller pointed that the interface to clone a subset of the branches needed to be clarified (and documented) or simplified. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14550:161,interface,interface,161,https://root.cern,https://github.com/root-project/root/issues/14550,1,['interface'],['interface']
Integrability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-8515. https://root.cern.ch/doc/master/classTEntryList.html is dominated by two large, ugly pieces of old code, that have nothing to do with TEntryList but generate graphics. I would even argue that those graphics don't help in the understanding of TEntryList and can be removed.; Additionally, both TEntryList and TEventList should inform the reader about which one is deprecated and which one to use. They should do this for the deprecated version right as the first sentence of the doc, so people don't waste time reading up on an irrelevant interface.; Thanks!; Axel. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14544:643,interface,interface,643,https://root.cern,https://github.com/root-project/root/issues/14544,1,['interface'],['interface']
Integrability,"### Explain what you would like to see improved and how. Hello Root team,. It would be really interesting to deploy Root on Pip to facilitate the management of projects which rely on pip/poetry. Currently the only supported package manager is conda, which has a poor integration with poetry for example. Would it be difficult to package root for pip?; I don't know how to do it but with some explanations, i would be highly motivated to help you do this. Best regards.; Anthony. ### ROOT version. All. ### Installation method. PIP. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14890:267,integrat,integration,267,https://root.cern,https://github.com/root-project/root/issues/14890,1,['integrat'],['integration']
Integrability,"### Explain what you would like to see improved and how. I found myself trying to use a glob in `TChain::Add` with a remote path. I discovered that in XRootD, this is supported:; ```; TChain c{""Events""};; c.Add(""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run*"");; c.GetListOfFiles()->GetEntries(); (int) 4; ```; Whereas with https (through davix) this is not supported; ```; TChain c{""Events""};; c.Add(""https://root.cern/files/HiggsTauTauReduced/*.root"");; Error in <TDavixSystem::DavixOpendir>: failed to opendir the directory: HTTP 405 : Method Not Allowed, Permission refused (17); ```. First off, we should understand more clearly with the different libraries if this use case is 1. knowingly supported (xrootd), knowingly unsupported (davix) 2. a valid use case or seen as a corner case. Base on that, we should decide whether to actually support it in ROOT, which would mean support it with all the different remote protocols, or remove support with xrootd and decide to always throw an exception in case remote globbing is attempted. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258:944,protocol,protocols,944,https://root.cern,https://github.com/root-project/root/issues/13258,1,['protocol'],['protocols']
Integrability,"### Explain what you would like to see improved and how. One should fix following warning. Appears in following line: https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx#L270. ```; In file included from /usr/include/c++/14/string:51,; from /home/linev/git/webgui/core/meta/inc/TSchemaHelper.h:17,; from /home/linev/git/webgui/core/meta/inc/TGenericClassInfo.h:21,; from /home/linev/git/webgui/core/base/inc/Rtypes.h:193,; from /home/linev/git/webgui/core/base/inc/TObject.h:17,; from /home/linev/git/webgui/core/base/inc/TNamed.h:25,; from /home/linev/git/webgui/core/base/inc/TDirectory.h:24,; from /home/linev/git/webgui/core/base/inc/TROOT.h:28,; from /home/linev/git/webgui/tree/dataframe/inc/ROOT/RDataFrame.hxx:19,; from /home/linev/git/webgui/tree/dataframe/test/dataframe_utils.cxx:1:; In static member function ‘static constexpr _Up* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(_Tp*, _Tp*, _Up*) [with _Tp = long unsigned int; _Up = long unsigned int; bool _IsMove = false]’,; inlined from ‘constexpr _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:521:30,; inlined from ‘constexpr _OI std::__copy_move_a1(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:548:42,; inlined from ‘constexpr _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:555:31,; inlined from ‘constexpr _OI std::copy(_II, _II, _OI) [with _II = long unsigned int*; _OI = long unsigned int*]’ at /usr/include/c++/14/bits/stl_algobase.h:651:7,; inlined from ‘constexpr std::vector<bool, _Alloc>::iterator std::vector<bool, _Alloc>::_M_copy_aligned(const_iterator, const_iterator, iterator) [with _Alloc = std::allocator<bool>]’ at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16360:195,Interface,InterfaceUtils,195,https://root.cern,https://github.com/root-project/root/issues/16360,1,['Interface'],['InterfaceUtils']
Integrability,"### Explain what you would like to see improved and how. This forum post https://root-forum.cern.ch/t/too-many-operators-for-the-ttree-project-conditions/58009/5 triggered a discussion that probably `RResultPtr` could better behave with respect to ownership of its pointee. For example, this function; ```cpp; TH1D *DrawStuff(const char *columnname) {; auto file = TFile::Open(""tutorials/hsimple.root"", ""READ"");; auto ntuple = file->Get<TTree>(""ntuple"");; ROOT::RDataFrame df(*ntuple);; auto ht = df.Histo1D(*h, columname);; return ht.GetPtr();; }; ```. Will return a dangling pointer since the `RResultPtr` going out of scope will destroy the pointee. The forum user presents a pattern such as. ```cpp; THStack* histStack = new THStack(""histStack"", ""Bs_MCORR"");; for(int i=0; i<sampNumb; i++) {; TFile* file = new TFile(rootList[i]);; TTree* tree = (TTree*)file->Get(""DecayTree"");; ROOT::RDataFrame df(*tree);; auto ht = df.Filter(conds[i].Data()).Histo1D(h, ""Bs_MCORR"");; histStack->Add(ht.GetPtr(), , ""HIST && E1 && EX0"");; }; histStack->Draw();; ```. Which also doesn't work with the current API. Admittedly, this example would not work in general since `THStack` does not take ownership of the passed histograms and assumes they will be kept alive by ROOT global objects. In general, for this kind of use case we could convey the message to users they can store the histograms in a vector of shared pointers which is the clearest and most standard data structure to represent the situation correctly. So we need:. * `std::shared_ptr<T> RResultPtr<T>::GetSharedPtr()`; * More documentation on the RDataFrame user guide about these use cases; * A tutorial starting from the forum post reproducer once we have the API. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14766:1335,message,message,1335,https://root.cern,https://github.com/root-project/root/issues/14766,1,['message'],['message']
Integrability,"### Explain what you would like to see improved and how. This is a follow-up to #16736, see https://github.com/root-project/root/pull/16782#discussion_r1820807153. <details>; Depending on whether `p` argument is `nullptr` or not, the method actually does 2 different things. It either calculates `xp` given `p` or it calculates `p`. So it is either F^-1(p) or F(x).; </details>. The default parameter of p = nullptr brings the method to return just the bin edges, so it is not very useful. ### ROOT version. master, although notation matches what #16782 brings. ### Installation method. irrelevant. ### Operating system. irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16784:175,Depend,Depending,175,https://root.cern,https://github.com/root-project/root/issues/16784,1,['Depend'],['Depending']
Integrability,"### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more.; On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors.; For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13713:531,depend,dependency,531,https://root.cern,https://github.com/root-project/root/issues/13713,1,['depend'],['dependency']
Integrability,### Explain what you would like to see improved and how. We can speed up the builds significantly by using the github actions cache system. More can be read here: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows . Essentially we need a `actions/cache/restore@v3`. This is done in the clad CI here: https://github.com/vgvassilev/clad/blob/d2df9008e071f7f78d1606a040b21149ade66eea/.github/workflows/ci.yml#L637-L678. The idea is to cache the builds of ROOT up to cling and make a hash that will invalidate the cache only if something in cling is touched. In that case the system will regenerate the caches. We need to figure out if the 10GB storage is enough per project or we can store these things locally. For the Clad project it has been working flawlessly for ~1 year now. . ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987:222,depend,dependencies-to-speed-up-workflows,222,https://root.cern,https://github.com/root-project/root/issues/14987,1,['depend'],['dependencies-to-speed-up-workflows']
Integrability,"### Explain what you would like to see improved and how. We should move all headers from $ROOTSYS/include to $ROOTSYS/ROOT/{component} and we should automatically generate wrapping headers that `#include` the relevant ROOT/ header with a deprecation warning.; Eg. ```bash; mv ROOTSYS/include/TLish.h ROOTSYS/include/ROOT/core/TLish.h; cat ROOTSYS/include/TLish.h; ```. ```cpp; #warn ""This forwarding header will go away in X please include \""ROOT/Base/TLish.h\"" ""; #include ""ROOT/core/TLish.h""; ```. The trampoline header file can be generated by our build system by adding a -DROOT_COMPATIBILITY switch that's on by default for few releases and then off. ### ROOT version. master. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16327:172,wrap,wrapping,172,https://root.cern,https://github.com/root-project/root/issues/16327,1,['wrap'],['wrapping']
Integrability,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15285:1161,interface,interface,1161,https://root.cern,https://github.com/root-project/root/issues/15285,1,['interface'],['interface']
Integrability,"### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.); - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version?; - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful); - [ ] OS name; - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea?; - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864; - [ ] Recommend also on ROOT manual these commands; - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/; - [x] Mention in the Forum --> Done by Bertrand; - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce?. The way to submit a bug report without opening ROOT by hand would be:. ```; root -b -e '.gh bug' -q; root -b -e '.gh feature' -q; root -b -e '.gh improvement' -q; root -b -e '.forum bug' -q; ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```; rootbug; rootfeature; rootimprovement; rootforum; ```. ### ROOT version; ```; ROOT v6.29/01; Built for linuxx8664gcc on Jun 20 2023, 17:02:12; From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf; With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13062:992,message,message,992,https://root.cern,https://github.com/root-project/root/issues/13062,1,['message'],['message']
Integrability,"### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce?. A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT?. Part of CMSSW stack. ### Which operating system are you using?. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13035:373,message,message,373,https://root.cern,https://github.com/root-project/root/issues/13035,3,['message'],['message']
Integrability,"### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces.; In a workspace like this:; ```; RooWorkspace w;; w.factory(""RooGaussian::a(x[-10,10],0.,1.)""); w.factory(""RooGaussian::b(y[-10,10],0.,1.)""); ```; Now, consider this:; ```; w.factory(""RooProdPdf::p1({a,b})""); w.factory(""RooProduct::p2({x,y})""); ```; `p2` does what you think it would.; `p1` does not. On the other hand:; ```; w.factory(""RooProdPdf::p3(a,b)""); w.factory(""RooProduct::p4(x,y)""); ```; `p3` works.; `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7809:102,interface,interfaces,102,https://root.cern,https://github.com/root-project/root/issues/7809,2,['interface'],['interfaces']
Integrability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently there is a setup step done in the client before actually starting the distributed computations. During the setup, a list of ranges of entries from the original dataset is computed. The logic is as follows:; 1. For each file of the dataset, open it and compute a list of all the clusters in the file.; 2. From the list of all clusters of all files, divide it into groups of clusters (`Range`s) depending on the `npartitions` parameter of the dataframe. Each `Range` will be assigned its own task in the distributed resources. The point 1. above can be particularly expensive to run since it relies on `TFile::Open` . If the files of the dataset are stored remotely, the overhead adds up pretty quickly. The call happens specifically in:; https://github.com/root-project/root/blob/db3d4240abbda1c946fd2a7af08544cf1b357911/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Ideally we could avoid calling TFile::Open in the client. @Axel-Naumann proposed on mattermost to estimate the number of clusters of each file depending on its size and consequently compute the number of tasks to run on the distributed resources:; ```; If you have these files:. 50MB; 100MB; 300MB; 3GB. then I'd translate that to cluster estimates:. 2; 3; 10; 100. and split this into n tasks accordingly.; ```. The single task in the distributed worker would then be responsible to open only the file(s) where the estimated clusters should be stored. This needs to be explored. ### Additional context; <!--; Add any other context about the problem here.; -->; Thanks to @stwunsch for bringing this up. This issue will keep track of further discussion and updates on the matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8232:514,depend,depending,514,https://root.cern,https://github.com/root-project/root/issues/8232,2,['depend'],['depending']
Integrability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently, if our build system finds a suitable Python3 interpreter but does not find a Python2 interpreter, the CMake output looks like this:. ```; -- Looking for Python; -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Python2_LIBRARIES Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""/usr/bin/python""; ```. The CMake output should mention that Python3 was found and things are just fine. The current message looks like ROOT searched for Python2, could not find it and that was it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8084:669,message,message,669,https://root.cern,https://github.com/root-project/root/issues/8084,1,['message'],['message']
Integrability,### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. It would be nice if RDataFrame's `RResultPtr` type offered the option to return the result while releasing its ownership. This is useful e.g. to transfer ownership of that result to ROOT7 graphics interfaces. E.g. `RResultPtr<T>::Release() -> unique_ptr<T>`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047:308,interface,interfaces,308,https://root.cern,https://github.com/root-project/root/issues/7047,1,['interface'],['interfaces']
Integrability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. The current builtin version of XRootD is [`v5.3.1`](https://github.com/xrootd/xrootd/releases/tag/v5.3.1) (last updated by @oshadura in PR #7335). https://github.com/root-project/root/blob/a940bdbc40d9a0cdac8975c287e1cb7ada0d0c65/builtins/xrootd/CMakeLists.txt#L11. However, in versions of XRootD **pre** [`v5.4.1`](https://github.com/xrootd/xrootd/releases/tag/v5.4.1) (released today 2022-02-23) if XRootD is built with the Python bindings enabled with a modern version of `setuptools` (specifically [`setuptools` v0.60.0+](https://pypi.org/project/setuptools/60.0.0/)) there will be build warnings from `setuptools` and an atypical install path given a dependence on the now deprecated `easy-install.pth`. (c.f. https://github.com/xrootd/xrootd/issues/1579 for lots more details.). At the moment, this does not affect ROOT at all as ROOT's builtin XRootD explicitly disables the Python bindings. https://github.com/root-project/root/blob/a940bdbc40d9a0cdac8975c287e1cb7ada0d0c65/builtins/xrootd/CMakeLists.txt#L43. given 2c23502137acd9276fc21da300ab3d562278d57f (from @peremato in 2015). I am unclear on the specifics of explicitly disabling the Python bindings from being built as there is no associated PR for the commit. If there is not a modern reason for this to stay disabled (my assumption is that there is and I am missing it), updating to XRootD `v5.4.1` would allow for the Python bindings to be optionally enabled and to be build safely with the improvements to the Python bindings build process (and also bring along new features and bug fixes). If there are reasons to keep XRootD below `v5.4.X` then this Issue can get closed. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Make a PR similar to PR #7335 that would update the builtin to XRootD [`v5.4.1`](https://github.com/xrootd/xrootd/re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967:767,depend,dependence,767,https://root.cern,https://github.com/root-project/root/issues/9967,1,['depend'],['dependence']
Integrability,### Explain what you would like to see improved; Allow to use root as dependency using `FetchContent`. ### To Reproduce; ```cmake; cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(; root; GIT_REPOSITORY https://github.com/root-project/root.git; GIT_TAG latest-stable; ). FetchContent_MakeAvailable(root); ```; ### Setup; ROOT version : latest-stable; Operating system : Linux; How you obtained ROOT : github,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8923:70,depend,dependency,70,https://root.cern,https://github.com/root-project/root/issues/8923,1,['depend'],['dependency']
Integrability,"### Explain what you would like to see improved; As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key.; Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11758:349,depend,dependent,349,https://root.cern,https://github.com/root-project/root/issues/11758,2,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"### Explain what you would like to see improved; Currently, cling uses `cling::utils::getWrapPoint()` to cut the input line in two parts: one that will become part of an internal wrapper function (i.e., `__cling_Un1Qu3xxx`) and the other that will not.; This mechanism is overly simplistic and cannot correctly handle some cases, e.g. users would expect that the excerpts below are equivalent, however,; ```c++; root [0] namespace foo { int i; }; root [1] using namespace foo; std::cout << ""hello\n"";; hello; root [2] i; (int) 0; ```; translates into do not wrap `using namespace foo;` and wrap `std::cout << ""hello\n"";`, while; ```c++; root [0] namespace foo { int i; }; root [1] std::cout << ""hello\n""; using namespace foo;; hello; root [2] i; input_line_11:2:3: error: use of undeclared identifier 'i'; (i); ^; ```; will wrap all the input. Therefore, the `using` directive is not parsed at the TU level. Also, this function adds missing `;` for some cases, but the current support is somewhat limited (see related issue #8064). ### Optional: share how it could be improved; Cling should cut the input line in several independent fragments that will be either wrapped or directly parsed by clang. Additionally, these fragments shall incorporate some marks, such as ""needs wrapper"" or ""needs terminating semicolon"". The proposed solution might also add the terminating `;` where required, if requested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9171:179,wrap,wrapper,179,https://root.cern,https://github.com/root-project/root/issues/9171,6,['wrap'],"['wrap', 'wrapped', 'wrapper']"
Integrability,"### Explain what you would like to see improved; It would be a nice interface improvement to be able to define an RNTuple model directly in the constructor. As a result, somthing like the following would be possible:. auto ntuple = RNTupleWriter::Recreate({; RField<std::uint32_t>(""id""),; RField<std::vector<float>>(""vpx""),; RField<std::vector<float>>(""vpy""),; RField<std::vector<float>>(""vpz""); }, ""NTuple"", kNTupleFileName);. See #8688 for the full discussion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8711:68,interface,interface,68,https://root.cern,https://github.com/root-project/root/issues/8711,1,['interface'],['interface']
Integrability,"### Explain what you would like to see improved; List of things that can be vectorised / speeded up in RooFit. - [x] Vectorise https://github.com/root-project/root/blob/bd6bb9f6f62f08eba591edfc7e25b8f45857a562/roofit/roofitcore/src/RooAbsPdf.cxx#L373-L378; - [x] Same for computing logarithms in same class (getLogProbabilities()); - [x] RooNLLVar::computeBatched(); - [x] Investigate if norm and logs can be contracted. - [ ] Generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7032:409,contract,contracted,409,https://root.cern,https://github.com/root-project/root/issues/7032,2,"['contract', 'interface']","['contracted', 'interface']"
Integrability,"### Explain what you would like to see improved; RNTuple DAOS unit tests should be automatically run in a testing build. Specifically, `-Ddaos_mock=ON` should be set if `testing` is defined. `daos_mock` has no dependency on the real libdaos and is safe to run in our testing environment. ### Optional: share how it could be improved; Once PR #6825 is merged, a follow-up PR will be created to address this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8074:210,depend,dependency,210,https://root.cern,https://github.com/root-project/root/issues/8074,1,['depend'],['dependency']
Integrability,"### Explain what you would like to see improved; RNTuple metadata is serialized to a machine-independent representation. However, contents of a page are written using the native endianess of the architecture on which RNTuple runs. According to the RNTuple v1 specification, these should be laid out always in little-endian order.; ; ### Optional: share how it could be improved; If running on a big-endian machine, (un)packing of data pages for some data types should carry out a (16, 32, or 64-bit) byte swap, depending on the type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10383:511,depend,depending,511,https://root.cern,https://github.com/root-project/root/issues/10383,1,['depend'],['depending']
Integrability,"### Explain what you would like to see improved; ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved; For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:; - https://github.com/Malvineous/cfgpath; - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes; - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10148:724,depend,depending,724,https://root.cern,https://github.com/root-project/root/issues/10148,1,['depend'],['depending']
Integrability,"### Explain what you would like to see improved; Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information; - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved; Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages; - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:486,message,messages,486,https://root.cern,https://github.com/root-project/root/issues/10191,1,['message'],['messages']
Integrability,"### Explain what you would like to see improved; Support the storage of user-defined classes that behave as collections of elements. Such classes provide access to the collection via a class that overrides member functions in the `TVirtualCollectionProxy` class. . The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In later stages, RNTuple might provide this functionality through an interface different from the legacy `TVirtualCollectionProxy`. . ### Additional context; This is required for ATLAS data model, more specifically the `DataVector<T>` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11523:465,interface,interface,465,https://root.cern,https://github.com/root-project/root/issues/11523,1,['interface'],['interface']
Integrability,"### Explain what you would like to see improved; The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved; Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context; Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430:926,depend,dependency,926,https://root.cern,https://github.com/root-project/root/issues/9430,1,['depend'],['dependency']
Integrability,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740:87,integrat,integration,87,https://root.cern,https://github.com/root-project/root/issues/7740,3,"['Integrat', 'integrat']","['IntegratorMultiDim', 'integration']"
Integrability,"### Explain what you would like to see improved; Users should be allowed to customize the underlying object class of DAOS objects,; depending on their particular scenario. Unless the user specifies otherwise, we will; probably default to `OC_SX`. ### Optional: share how it could be improved; These kind of backend-specific parameters should be exposed via a subclass of; `RNTupleWriteOptions`, e.g. `RNTupleDaosWriteOptions`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8205:132,depend,depending,132,https://root.cern,https://github.com/root-project/root/issues/8205,1,['depend'],['depending']
Integrability,"### Explain what you would like to see improved; We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved; Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6635:87,depend,dependencies,87,https://root.cern,https://github.com/root-project/root/issues/6635,1,['depend'],['dependencies']
Integrability,"### Explain what you would like to see improved; When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved; Remove unneeded dependencies. ### To Reproduce; No-modification at all of the source code, ccache ON.; 1. cd into build directory; 2. Call `time make`; 3. Takes 59 seconds with 1 core; 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:; ```; [ 76%] Built target X86CommonTableGen; [ 76%] Built target LLVMX86Info; [ 76%] Built target LLVMX86AsmParser; [ 76%] Built target LLVMX86Utils; [ 76%] Built target LLVMX86Disassembler; [ 76%] Built target LLVMX86Desc; [ 76%] Built target LLVMX86CodeGen; ```. Now, an example with modification:; 1. cd into build directory; 2. Call `touch sourceDir/core/base/src/TROOT.cxx`; 3. Call `time make`; 4. Takes 485 seconds in 1 core; 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |; | From heads/master@v6-25-01-1572-gaa21d63ca3 |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8624:229,depend,depend,229,https://root.cern,https://github.com/root-project/root/issues/8624,2,['depend'],"['depend', 'dependencies']"
Integrability,"### Explain what you would like to see improved; When using RDF from PyROOT and checking the type / string representation of some RDF operation, one gets very different things depending on the operation; ```python; >>> import ROOT; >>> df = ROOT.RDataFrame(100); >>> type(df); <class cppyy.gbl.ROOT.RDataFrame at 0x55b7a99f15a0>; >>> type(df.Count); <class 'cppyy.CPPOverload'>; >>> type(df.Histo1D); <class 'functools.partial'>; >>> type(df.Report); <class 'cppyy.CPPOverload'>; >>> type(df.Display); <class 'cppyy.TemplateProxy'>; >>> type(df.Min); <class 'cppyy.TemplateProxy'>; >>> df.Count; <cppyy.CPPOverload object at 0x7f4f22f32ca0>; >>> df.Histo1D; functools.partial(<bound method _histo_profile of <cppyy.gbl.ROOT.RDataFrame object at 0x55b7a9b6fb70>>, ('_OriginalHisto1D', <class cppyy.gbl.ROOT.RDF.TH1DModel at 0x55b7a88dbbb0>)); >>> df.Define; ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression); >>> df.Filter; ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Filter(basic_string_view<char,char_traits<char> > expression, basic_string_view<char,char_traits<char> > name = """"); >>> df.Report; <cppyy.CPPOverload object at 0x7f4f22f32ca0>; >>> df.Max; ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Max(basic_string_view<char,char_traits<char> > columnName = """"); >>> df.Min; ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Min(basic_string_view<char,char_traits<char> > columnName = """"); >>> df.Mean; ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Mean(basic_string_view<char,char_traits<char> > columnName = """"); >>> df.Display; ROOT::RDF::RResultPtr<ROOT::RDF::RDisplay> ROOT::RDF::RInterface<ROOT::Det",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9023:176,depend,depending,176,https://root.cern,https://github.com/root-project/root/issues/9023,1,['depend'],['depending']
Integrability,"### Explain what you would like to see improved; While running [slackbuild](https://slackbuilds.org/repository/15.0/academic/root/) for the latest stable ROOT (v6.26/10), as well as for some previous versions, I receive the following warning from package utils:; ```; WARNING: zero length file opt/ROOT-6.26.10/tutorials/doc/v602/index.md; ```. ### Optional: share how it could be improved; You could delete the empty files from the distributed tarball or synchronize with the git repo: https://github.com/root-project/root/blob/master/doc/v602/index.md. ### To Reproduce; Steps to reproduce the behavior:; 1. Install full Slackware 15.0; 2. Install ROOT dependencies; 3. Build ROOT package. The warnings will be shown at the end of the slackbuild output . ### Setup; 1. ROOT version: 6.26/10; 2. Operating system: Slackware 15.0; 3. ROOT built from the official source tarball",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11749:456,synchroniz,synchronize,456,https://root.cern,https://github.com/root-project/root/issues/11749,2,"['depend', 'synchroniz']","['dependencies', 'synchronize']"
Integrability,"### Explain what you would like to see improved; root executable emits a lot of non-requested output which:; 1. force the users to do workarounds just to make root print only what was instructed by user to do; 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved; there should be NO output if it was not requested ... ; moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`; and users that need to remove annoyances need to `alias root='root.exe -l'`; so, i would say, that all differences between non exe and exe should be removed and hidden under a flag; and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested); for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce; just use it. ### Setup; any root version. ### Additional context; so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8446:1236,contract,contract,1236,https://root.cern,https://github.com/root-project/root/issues/8446,1,['contract'],['contract']
Integrability,"### Feature description. As C++20 goes mainstream, there are many reasons to start using C++20 modules in a non-ROOT context to provide well-designed and encapsulated APIs. Generated module files are compiler-specific, which would seem likely to lead to issues with interactions between Cling-generated PCM dictionaries and any C++20 modules used by the code upon which those dictionaries depend. My request is for the upcoming ROOT with Clang 16 to be able to accommodate the generation and use of PCM dictionaries where dependencies thereof are or use C++20 modules. This may or may not involve transitioning PCM dictionary generation to use C++20 modules as opposed to Clang's original implementation of C++ modules. ### Alternatives considered. Short of having to operate under the constraint that no code depended upon by a ROOT dictionary be or use C++20 modules at any level (direct or indirect), I do not see an alternative to providing the requested feature, although it is certainly possible I am overestimating the complexity of the situation and that the feature request either is already implemented or, ""just works"" already in 6.28/04. ### Additional context. In dealing with https://github.com/root-project/root/issues/13461 it was suggested by @pcanal and later verified _in vitro_ that using PCM dictionaries vs `.rootmap` dictionaries would be a viable workaround. This led to thoughts about ROOT C++ modules vs non-ROOT C++20 module generation, and eventually this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536:389,depend,depend,389,https://root.cern,https://github.com/root-project/root/issues/13536,3,['depend'],"['depend', 'depended', 'dependencies']"
Integrability,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16229:489,interface,interface,489,https://root.cern,https://github.com/root-project/root/issues/16229,3,['interface'],['interface']
Integrability,"### Feature description. Geometry module of ROOT (TGeo) features scaled solids, while support for them in TGDMLWrite class is extremely limited and inconsistent. For now, it is possible to export to GDML only two scaled solids: TGeoCone (directly, but only for a subset of possible scalings) and TGeoSphere (only if it has an intersection with a box). All remaining scaled solids are exported as non-scaled ones, which could be an ugly surprise of an unaware user. One of the main roles of GDML export is for establishing an interface to Geant4. During a discussion with Andrei Gheata, he has mentioned that Geant4 is now natively supports scaled solids. The suggested feature is to update TGDMLWrite class to use the “scaledSolid” tag. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13194:525,interface,interface,525,https://root.cern,https://github.com/root-project/root/issues/13194,1,['interface'],['interface']
Integrability,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13924:65,wrap,wrapper,65,https://root.cern,https://github.com/root-project/root/issues/13924,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:662,depend,dependencies,662,https://root.cern,https://github.com/root-project/root/issues/8518,1,['depend'],['dependencies']
Integrability,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7614:751,depend,dependency,751,https://root.cern,https://github.com/root-project/root/issues/7614,1,['depend'],['dependency']
Integrability,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603:1363,depend,depend,1363,https://root.cern,https://github.com/root-project/root/issues/11603,1,['depend'],['depend']
Integrability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Rather often for minimisation in `RooFit`, using `RooAbsPDf::fitTo`, for complicated functions a maximal number of calls is reached. Since there is no direct war to access this parameter of `RooMinimiser` from `RooAbsPDf::fitTo`,; for such cases I need to switch from `RooAbsPdf::fitTo` to a manual creation of `RooMinimiser` object, ; configure it and use it to minimize (manually created) NLL. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. It will be very good to have a dedicated option(`RooCmdArg`) to `RooAbsPdf::fitTo` function that allows to redefine the default number of calls, such that one can use it together with other options, e.g. . ```; dataset = ...; pdf = ...; result = pdf.FitTo ( dataset , ROOT.RooFit.Save() , ROOT.RooFit.MaxCalls( 10000 ) , ... ); ```; ; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. The standard way that I use , is in case `RooAbsPdf::fitTo` reaches maximal number of calls, switch ; to manual creation and configuration of `RooMinimiser`, manual creation of NLL and edssentially bypass very nice and convinient `RooAbsPdf::fitTo` interface. . ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11875:1387,interface,interface,1387,https://root.cern,https://github.com/root-project/root/issues/11875,1,['interface'],['interface']
Integrability,"### Is your feature request related to a problem? Please describe.; A long-standing TGaxis issue is that calling secondaryXaxis->SetMaxDigits(N) affects all other X and Y axes in the current canvas. ### Describe the solution you'd like; TGaxis::SetMaxDigits, StripDecimals, etc. are all axes-dependent and don't affect the default state of other axes. ### Additional context; https://root-forum.cern.ch/t/tgaxis-setmaxdigits/11543/2?u=ferhue; https://sft.its.cern.ch/jira/browse/ROOT-35; https://root-forum.cern.ch/t/tgaxis-setmaxdigits-not-working-as-expected/2889/3; https://root-forum.cern.ch/t/tgaxis-and-setmaxdigits/19425/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8774:292,depend,dependent,292,https://root.cern,https://github.com/root-project/root/issues/8774,1,['depend'],['dependent']
Integrability,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:265,message,messages,265,https://root.cern,https://github.com/root-project/root/issues/8952,2,['message'],['messages']
Integrability,"### Is your feature request related to a problem? Please describe.; If I want to read data from a webDav/http endpoint using an oidc token, I'd need to be able to pass the token somehow in ROOT to the Davix client wrapper. Possibly through env variable and rootrc. ### Describe the solution you'd like; Make the Davix client wrapper able to take the token from env variable and rootrc. ### Additional context; Preparatory for future WLCG (and not only) authN/Z model.; I was thinking to something like this as a required change, but, of course, I'd need more feedback: https://github.com/root-project/root/compare/master...dciangot:davix_bearer_token?expand=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802:214,wrap,wrapper,214,https://root.cern,https://github.com/root-project/root/issues/6802,2,['wrap'],['wrapper']
Integrability,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8427:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/8427,5,['message'],['message']
Integrability,"### The WebSocket data handler in ROOT is not complete; The data handler (as defined in line 136 in TCivetWeb.cxx) only checks the `fin` bit (`code & 0x0f`) bit but not the `opcode` (`code & 0x0f`), which may leads to unexpected behaviour in some circumstance. ### Optional: both `fin` and `opcode` need to be checked to determine the type of frame received.; As stated in RF4855, the the `fin` bit and `opcode` work together to represent the state of the frame. As shown below, the `fin` (standing for `finished`) only set for frames contain a complete message (single frame message), or the last frames of multi-frame messages. The `opcode` indicates the type of frames, i.e., continuation, text, binary, or closing. For multi-frame messages, the `opcode` indicates the text or binary nature only in the first frame, and the `opcode` set to zero for the rest of the frames. ; - single frame: `fin = 1` and `opcode = 1,2,8` (1: text; 2: binary; 8 closing);; - cont'd frame - 1st: `fin = 0` and `opcode = 1,2`(1: text; 2: binary);; - cont'd frame - 2..(n-1)-th: `fin = 0` and `opcode = 0 `;; - cont'd frame - n-th (last): `fin = 1` and `opcode = 0`;; - closing: `fin = 1` and `opcode = 8 `. Only use `fin` may lead to two problems:; 1. the closing message from client will be interpreted as data. In my case, I receive two bytes (0x03, 0xC5).; 2. the binary or text nature of the multi-frame message will not be interpreted, because this is only indicate in the first frame. This may not be an issue, though, because the single-frame message in CivetWeb can be as long as 131,000 bytes, which is long enough for most communication from clients. I hope this can be fixed in the future release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9207:554,message,message,554,https://root.cern,https://github.com/root-project/root/issues/9207,7,['message'],"['message', 'messages']"
Integrability,"### This Pull request:. Hi @guitargeek , the class `RooPolyFunc` is introduced with this pull request. This class allow to form multi-variable polynomials of arbitrary number of variables. . The class also allows for RooFit functions to be Taylor expanded as a function of the dependent variables. This is provided by static functions which return the Taylor expanded function as a `RooPolyFunc`. ## Checklist:. - [x] tested changes locally; - [x] added tutorials; - [x] added unit test; - [ ] analytical integral",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184:277,depend,dependent,277,https://root.cern,https://github.com/root-project/root/pull/9184,1,['depend'],['dependent']
Integrability,### This Pull request:; * Fix axis labels ; * CaloTower selection in context of REveDataCollection when collection filter is applied; * Fix client's duplicate error messages from server; * Minor correction in Summary view layout; * Add expression validator for new column expression in table; * Review log messages; * Introduce HttpPublic option which disable usage of RFileDialog; * Updates REnderCore with fixes in font renderin. From verion 1.5 to 1.6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16829:165,message,messages,165,https://root.cern,https://github.com/root-project/root/pull/16829,2,['message'],['messages']
Integrability,"### To Reproduce. ```; root tutorials/graphics/triangles.C ; root [] c1->SaveAs(""c1.C""); root [] .x c1.C; ```; One gets several error messages: `error: use of undeclared identifier 'ci'`. Problem can be easily fixed. PR will be provided after #11914 will be merged",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11916:134,message,messages,134,https://root.cern,https://github.com/root-project/root/issues/11916,1,['message'],['messages']
Integrability,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161:257,message,message,257,https://root.cern,https://github.com/root-project/root/issues/7161,4,['message'],['message']
Integrability,"#8709 fixes a part of this. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory, e.g. install a lot of builtins there.; 2. Either; - Place an entire ROOT installation there, where all headers start with `#error This is the wrong header`. or; - Search `compile_commands.json` for `-I/my/include/directory/`; 3. Fix the `FindXXX` for all dependencies that provoke the above error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8708#issuecomment-884226626:263,depend,dependency,263,https://root.cern,https://github.com/root-project/root/issues/8708#issuecomment-884226626,2,['depend'],"['dependencies', 'dependency']"
Integrability,"#9513 should fixes the case of using integer spectator variables in the Reader.; As a workaround use the interface requiring a float* : `Reader::AddSpectator(""eventID"", float *)`; Thank you for reporting this problem!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115#issuecomment-1007663007:105,interface,interface,105,https://root.cern,https://github.com/root-project/root/issues/9115#issuecomment-1007663007,1,['interface'],['interface']
Integrability,"#To do so one needs to pass -Dbuiltin_llvm=Off -Dbuiltin_clang=Off and the; PATH should contain the path to llvm-config. Note this is not enabling ROOT to work with vanilla clang!. This patch allows ROOT to be built against a prebuilt clang and llvm from; https://root.cern.ch/git/{llvm.git,clang.git}. It allows to reduce ROOT's; build times (in cases when cmake decides to rebuild the in-tree llvm for; no good reason). It moves the common denominator of different ROOT builds; in one place to save space. It also allows easy switch between LLVM in; debug and release mode. To build the external clang and llvm exactly in the same way as the; in-tree builds use:. CMAKE_FLAGS=""\; -DLLVM_ENABLE_WARNINGS=OFF \; -DLLVM_INCLUDE_TESTS=OFF \; -DCLANG_INCLUDE_TESTS=OFF \; -DLLVM_INCLUDE_EXAMPLES=OFF \; -DCLANG_BUILD_TOOLS=OFF \; -DCLANG_TOOL_ARCMT_TEST_BUILD=OFF \; -DCLANG_TOOL_CLANG_CHECK_BUILD=OFF \; -DCLANG_TOOL_CLANG_FORMAT_BUILD=OFF \; -DCLANG_TOOL_CLANG_FORMAT_VS_BUILD=OFF \; -DCLANG_TOOL_CLANG_FUZZER_BUILD=OFF \; -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=OFF \; -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF \; -DCLANG_TOOL_CLANG_RENAME_BUILD=OFF \; -DCLANG_TOOL_C_ARCMT_TEST_BUILD=OFF \; -DCLANG_TOOL_C_INDEX_TEST_BUILD=OFF \; -DCLANG_TOOL_DIAGTOOL_BUILD=OFF \; -DCLANG_TOOL_LIBCLANG_BUILD=OFF \; -DCLANG_TOOL_SCAN_BUILD_BUILD=OFF \; -DCLANG_TOOL_SCAN_VIEW_BUILD=OFF \; -DLLVM_BUILD_TOOLS=ON \; -DLLVM_TOOL_LLVM_AR_BUILD=OFF \; -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF \; -DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON \; -DCLANG_ENABLE_STATIC_ANALYZER=OFF \; -DCLANG_ENABLE_ARCMT=OFF \; -DCLANG_ENABLE_FORMAT=OFF \; -DLLVM_TARGETS_TO_BUILD=host \; -DLLVM_ABI_BREAKING_CHECKS=FORCE_OFF \; -DLLVM_ENABLE_ABI_BREAKING_CHECKS=OFF \; -DCMAKE_INSTALL_PREFIX=.. \; -DCMAKE_BUILD_TYPE=Debug"". cmake ""$CMAKE_FLAGS"" ../../../sources/root-llvm/. EDIT: We actially need -DLLVM_BUILD_TOOLS=OFF to be ON to build the llvm-config binary. Fixed in the description of this PR but not in the commit message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1798:1977,message,message,1977,https://root.cern,https://github.com/root-project/root/pull/1798,1,['message'],['message']
Integrability,' in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 7: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 8: Calling 'TGeoCone::DistFromOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 20: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 21: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 22: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 23: 'inrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 24: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 25: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 27: 'inrmax' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:471; 28: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:471; 29: Assuming 'delta' is >= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:475; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:475; 31: The left operand of '-' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:476; /opt/root_src/geom/geom/src/TGeoCone.cxx:585:31: warni,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:20011,rout,rout,20011,https://root.cern,https://github.com/root-project/root/issues/7428,1,['rout'],['rout']
Integrability,' in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 7: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:501; 8: Calling 'TGeoCone::DistFromOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rout' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 20: Left side of '&&' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 21: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 22: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 23: 'in' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 24: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 25: 'hasrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:413; 26: '?' condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:413; 27: Assuming 'safz' is > 'safrmin' in /opt/root_src/geom/geom/src/TGeoCone.cxx:415; 28: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:415; 29: Assuming 'safrmax' is >= 'safrmin' in /opt/root_src/geom/geom/src/TGeoCone.cxx:420; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:420; 31: Assuming 'ddotn' is < 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:428; 32: Taking false branch in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:12018,rout,rout,12018,https://root.cern,https://github.com/root-project/root/issues/7428,1,['rout'],['rout']
Integrability,"'__atomic_fetch_add_8' unresolved. It does not fail on any other Fedora architectures including 32 bit arm. Fedora koji scratch build: https://koji.fedoraproject.org/koji/taskinfo?taskID=55575382. ```; 50/1028 Test #11: pyunittests-pyroot-pyz-ttree-branch-attr ............................***Failed 1.24 sec; test_alias_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_basic_type_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_char_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ntuples (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch_leaflist (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr) ... IncrementalExecutor::executeFunction: symbol '__atomic_fetch_add_8' unresolved while linking symbol '__cf_16'!; ERROR; test_vector_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; ======================================================================; ERROR: test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.22.04/bindings/pyroot/pythonizations/test/ttree_branch_attr.py"", line 139, in test_ttree_subclass_in_namespace; t = ROOT.Foo.MyTree(); TypeError: Foo::MyTree constructor failed; ----------------------------------------------------------------------; Ran 9 tests in 0.509s; FAILED (errors=1); CMake Error at /builddir/build/BUILD/root-6.22.04/cmake/modules/RootTestDriver.cmake:237 (message):; error code: 1; ```; ### Expected behavior; Successful test on all architectures. ### To Reproduce; 1. Compile root 6.22.04 for ix32; 2. Run unit tests. ### Setup; 1. ROOT version: 6.22.04; 2. Operating system: Fedora Linux 32/33/34 for ix32; 3. Compilation from source during packaging for Fedora/EPEL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:2032,message,message,2032,https://root.cern,https://github.com/root-project/root/issues/6813,1,['message'],['message']
Integrability,"'s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`.\r\n\r\nWhen executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it's creation time. For example:\r\n\r\n```\r\n$ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm\r\n-rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm\r\n-rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm\r\n-rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm\r\n-rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm\r\n-rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm\r\n```\r\n\r\nthen later uses of those `pcm` leads to the (mis-worded) error message:\r\n\r\n```\r\n&lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature\r\n&lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'\r\nError: Module 'MathCore.pcm' failed to load.\r\nError: Error loading the default rootcling header files.\r\nmake[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1\r\n```\r\n\r\nSee the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39\r\n\r\nThe stack trace that was triggers the auto-generation of `Rint.pcm`\r\n\r\n at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325\r\n at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687#issuecomment-1311248032:1252,message,message,1252,https://root.cern,https://github.com/root-project/root/pull/11687#issuecomment-1311248032,1,['message'],['message']
Integrability,"'s annoying to have all these explicit usage of `this`, just to access a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2621) returns an owning raw pointer too, while it should return a `std::unique_ptr<TH1>` in this case. Can this interface still be changed without disrupting users too much? **No, this can break usercode, so this suggestion was not implemented!**. All these flaws above have been addressed by @rahulgrit in #9912. Some more flaws were fixed in #11023. - [x] The `getCache` function takes a unused argument. It is a private function, so to signature can simply be changed and the argument removed; - [x] The unused `_ownsParameters` member should be removed. However, that's not all! There are more issues with this class that have to be resolved in a followup PR:. - [x] Various memory leaks (search for `new ` in the file and you will find them, almost everything created on the heap is leaking.; - for example, [here](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L836) we even have some RooDataHists that leak; - [x] There is a static counter variable in the default constructor. It is unused and should be removed; - [x] The `RooStringVar` is used in the configuration of the class. We sho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:2175,interface,interface,2175,https://root.cern,https://github.com/root-project/root/issues/9845,1,['interface'],['interface']
Integrability,(946): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_47f7ab62ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\montecarlo\eg\EG.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xxatomic(465): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_8df1dd02sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\geom\geompainter\GeomPainter.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TVirtualQConnection.h(63): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_76b69657sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\gui\Gui.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xxatomic(570): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_70600ff6sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\montecarlo\eg\EG.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xxatomic(687): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_96bd4182ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\treeplayer\TreePlayer.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\xxatomic(570): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_af17cc11sy': No space left on device [C:\build\workspace\root-pullrequests-build\build\geom\geompainter\GeomPainter.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527102784:2507,message,message,2507,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527102784,1,['message'],['message']
Integrability,"(Don't you want to remove this interface in master, given it's deprecated in 6.28?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12804#issuecomment-1542915407:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/12804#issuecomment-1542915407,1,['interface'],['interface']
Integrability,"(For context, this is important for multi-dimensional constant arrays as described in [ROOT-7016](https://sft.its.cern.ch/jira/browse/ROOT-7016) and tested in Cling's `Interfaces/evaluate.C` test. But for reasons unknown to me, the ROOT prompt now seems to have a different way of handling this case because just reverting commit https://github.com/root-project/root/commit/d97e4dca36370a1f036026cb6976416670882bc6 still works there...). Instead of using relying on recursive templated calls, perform the type cast in the `ValueExtractionSynthesizer`. This has the advantage of avoiding an ODR violation warning in `MultipleInterpreters.C` with LLVM 16 (while unclear if that one is correct or not).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13477:168,Interface,Interfaces,168,https://root.cern,https://github.com/root-project/root/pull/13477,1,['Interface'],['Interfaces']
Integrability,"(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:157:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillHelper, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto actionPtr = BuildAction<BranchTypes...>(bl, std::move(rOnHeap), nSlots, std::move(prevNodePtr), ActionTag{},; ^; input_line_35:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase, TH1D>' requested here; ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:6885,Interface,InterfaceUtils,6885,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability,"(I'm not part of the root team, just someone who uses this a lot). There are a few things you may already be aware of, but if not might be helpful;. 1. The [uproot](https://github.com/scikit-hep/uproot5) library; if all you are doing is reading from root format files and then processing with other libraries, then uproot is a much lighter weight, more modern feeling, way to read data. You don't need root installed at all to use it. Afaik, it's only got a python api, so you would still need root for c++ stuff. 2. The reason for all the TThis and TThat is the [Taligent](https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html#HEADING77) naming standard. That made a lot more sense of things for me. 3. The official root docs are fairly nicely presented. E.g https://root.cern.ch/doc/master/classTTree.html which does start by doing it's best to describe what the heck a TTree is. Perhaps in a sense the official docs are a glossary, just not a very complete one yet? TTree and TLeaf are both well documented, TBranch is a bit sketcher. Possibly because we aren't meant to handle them directly too often. Most of your suggested translations are a reasonable description of the basic function of those classes, but sometimes it gets more complicated. For example, a TTree can be a rectangular array, but it's more often a ragged array (edit, or I suppose, not an array at all, depending what got saved there). Also a TBranch may in fact hold compiled objects, or even just a part of a compiled object. Edit; also, RDataFrame is mostly just a different reader from root files, it's not got much to do with the underlying format.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11967#issuecomment-1370007758:1411,depend,depending,1411,https://root.cern,https://github.com/root-project/root/issues/11967#issuecomment-1370007758,1,['depend'],['depending']
Integrability,"(minor nit on the commit message: in the latest version, we don't allocate a control block anymore at all; the `fObjPtr` aliases an empty `shared_ptr`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14731#issuecomment-1948508870:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/14731#issuecomment-1948508870,1,['message'],['message']
Integrability,"(only fixed a typo in the commit message, merging; now the mac13arm build passes in 20 minutes instead of timing out after 2 hours; and we again get the test results posted)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12792#issuecomment-1542023848:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/12792#issuecomment-1542023848,1,['message'],['message']
Integrability,"(slight correction to what I said before: Since https://github.com/root-project/root/pull/10289 LLVM is built *with* RTTI in `master`. This is different from released versions of 6.26 and earlier, so keep in mind while investigating...). > Note the `-Wl,--no-undefined` linker option, added by default on TW for all builds. This option is also a ROOT default for shared libraries. I tested adding it to `CMAKE_EXE_LINKER_FLAGS` for executable as well and it doesn't change anything. (not sure if it should, after all all symbols must be resolved when linking an executable, no?). > `find /var/tmp/build-root/openSUSE_Tumbleweed-x86_64/.build.packages/BUILD/root-6.26.06/_builddir/core/metacling/ -iname \*o -print -exec nm -C --undefined '{}' \; | grep -E 'cxx.o| clang::sema'`; > ; > ```; > ...; > /var/tmp/build-root/openSUSE_Tumbleweed-x86_64/.build.packages/BUILD/root-6.26.06/_builddir/core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; > U clang::sema::FunctionScopeInfo::~FunctionScopeInfo(); > U typeinfo for clang::sema::FunctionScopeInfo; > U vtable for clang::sema::FunctionScopeInfo; > ```. Unfortunately I cannot reproduce this on my end. It's correct that only a few files are compiled with `-fno-rtti`, all others including `TCling.cxx` interface with the rest of ROOT and must be built with RTTI. They should never contain code that references RTTI of LLVM classes, and while it's possible that we overlooked something I don't quite understand why we can only observe the problem in very limited environments...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1207873475:1259,interface,interface,1259,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1207873475,1,['interface'],['interface']
Integrability,") and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message log",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1117,message,message,1117,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,") somehow have their client-server interface messed up. Here is a reproducer:. ```C++; void repro() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);. RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct parMod(""par_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers, but it doesn't:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. For some reason, the direct value server, which is `par_mod` is **skipped** now, misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it wrong. I need to fix this problem with the value servers registered for integrals on RooRealSumPdfs. Further notes:. * The problem has always been there in RooFit, it's just that the BatchMode uncovered it; * Naturally, the problem is somehow in `getValueAndShapeServers` in [RooRealIntegral.cxx](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooRealIntegral.cxx#L68); * Whatever the fix will be, it may be a too big change to the central `RooRealIntegral` class for a patch release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1281427464:1632,interface,interface,1632,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1281427464,1,['interface'],['interface']
Integrability,) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes; (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member; (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type; (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type; (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects; (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:4471,Interface,Interface,4471,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,4,"['Interface', 'inject']","['Interface', 'injected']"
Integrability,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:1091,Message,MessageStr,1091,https://root.cern,https://github.com/root-project/root/issues/9036,2,"['Message', 'message']","['MessageStr', 'message']"
Integrability,"). I think this method requires more explanation. It all started from my proposal to rely on Itanium C++ ABI to implement cast. I won't post that mail here because it is written in such a broken English. On 24/03/17 22:32, Axel Naumann wrote:; > Hi Berserker,; >; > I'm more and more convinced that this is the way to go... I'm talking; > specifically about; > <https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/libsupc%2B%2B/cxxabi.h#L591>; > here.; >; > Do you think you could give it a shot in the form of a PR? . On 25/03/17 19:06, Berserker Troll wrote:; > Hi Axel,; > ; > __dynamic_cast is standardized, but works only for polymorphic classes, while TClass::DynamicCast and exception-based cast also work for non-polymorphic ones.; > If you want TDirectory to work for all kinds of classes you should consider not dynamic_cast algorithm [1], but exception handler matching one [2].; > Unfortunately, [2] says:; >> Since the RTTI related exception handling routines are ""personality specific"", no interfaces need to be specified in this document (beyond the layout of the RTTI data).; > ; > In libstdc++/libsupc++, handler matching algorithm is easily accessible directly through std::type_info from standard <typeinfo> header, using __do_catch() member function [3].; > The situation with libcxxabi is a bit more complicated. std::type_info in libcxx <typeinfo> header [4] doesn't have any non-standard member functions, instead it has additional hidden __shim_type_info class [5] between std::type_info and other Itanium C++ ABI type_info derived types. And this __shim_type_info class, in turn, provides access to the handler matching algorithm [6].; > ; > So, if we want this exception hander matching algorithm, there are a couple of options:; > 1) Stick to libsupc++ with its ""public"" __do_catch() member function; > 2) Implement independent handler matching algorithm ([7] might help), I think it doesn't require anything except standardised list of type_info-derived types [8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/463:1251,rout,routines,1251,https://root.cern,https://github.com/root-project/root/pull/463,2,"['interface', 'rout']","['interfaces', 'routines']"
Integrability,* Add array interface; * Add `__getitem__` magic; * Add tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4043:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/4043,1,['interface'],['interface']
Integrability,"* Add infrastructure to call distcc as prefix; * Use distcc as CCACHE_PREFIX if ccache is enabled. Works extremely well! I get a speedup of almost 2x using a second laptop with a comparable CPU. My third laptop is so slow that it does not help at all ;) However, a screenshot of the monitoring:. ![screenshot_25-05-20_23-19-08](https://user-images.githubusercontent.com/6951222/82887084-c6801a80-9f47-11ea-969a-10fc9b2c7a4f.png). Also works nicely with ccache. Though I'm not too sure whether it's nice how I integrated it (see the `CCACHE_PREFIX` envvar set in the command for `RULE_LAUNCH_COMPILE`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5705:509,integrat,integrated,509,https://root.cern,https://github.com/root-project/root/pull/5705,1,['integrat'],['integrated']
Integrability,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11123:175,interface,interface,175,https://root.cern,https://github.com/root-project/root/pull/11123,1,['interface'],['interface']
Integrability,"* Decouple browsing and geometry drawing functionality; * Try to provide generic browsing module (server and client), using ui5 TreeTable; * Support partial and full loading of browsing structures (depending on size); * Support online and offline operations (later used for web snapshots); * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3648:198,depend,depending,198,https://root.cern,https://github.com/root-project/root/pull/3648,1,['depend'],['depending']
Integrability,* Increases the test coverage of interacting with third-party python packages; * Improve message to user if the pandas package is not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397:89,message,message,89,https://root.cern,https://github.com/root-project/root/pull/5397,1,['message'],['message']
Integrability,* Removed unused import; * Updated class docstrings; * Added commit message; * Rebased,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8816#issuecomment-895210091:68,message,message,68,https://root.cern,https://github.com/root-project/root/pull/8816#issuecomment-895210091,1,['message'],['message']
Integrability,"* Removes unneeded custom pdfs; * Fix dependency of RooStats tutorials on HistFactory test data creation; * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14074:38,depend,dependency,38,https://root.cern,https://github.com/root-project/root/pull/14074,1,['depend'],['dependency']
Integrability,* Rename function access a channel from EveLog() to REveLog(); * Make logger stored messages thred local,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8191:84,message,messages,84,https://root.cern,https://github.com/root-project/root/pull/8191,1,['message'],['messages']
Integrability,* Reuse REveData table in REveTableProxyBuilder::Build() function; * Add interface in REveManager for client version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4186:73,interface,interface,73,https://root.cern,https://github.com/root-project/root/pull/4186,1,['interface'],['interface']
Integrability,"* The `ROOFIT_MEMORY_SAFE_INTERFACES` macro is explained in the release notes, so that users and framework developers can use it to detect memory leaks. * Since people are now encouraged to use it, the `RooFit::Detail::owningPtr` helper function was renamed to `RooFit::makeOwningPtr`, because this is now not an implementation detail anymore but part of the user interface. * Remove `takeOwnership` constructor arguments from `PiecewiseInterpolation` and `RooAddition`, because there are not memory-safe and it's not easily possible to only exclude selected parameters behind the `ROOFIT_MEMORY_SAFE_INTERFACES` macro without also changing the sources. Like this, we ensure that the memory-safe interfaces can be used without re-building ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14177:364,interface,interface,364,https://root.cern,https://github.com/root-project/root/pull/14177,2,['interface'],"['interface', 'interfaces']"
Integrability,* Try/catch exceptions in steaming of table; * Stream REveLog message conent in the the end-change content form server; * Add support for different projections than RPhi RhoZ in REveJetCone,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9643:62,message,message,62,https://root.cern,https://github.com/root-project/root/pull/9643,1,['message'],['message']
Integrability,* Update the commit message; * Fix `Data` is not initialized; We need to another build and test @vgvassilev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1178551901:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1178551901,1,['message'],['message']
Integrability,* [cmake] Fix dependency of some TMVA_SOFIE tutorials. * [tmva] Set unique model file names for tutorials. The tutorials were using the same model file name and this was causing a problem when running the tutorials in parallel as in the CI builds. Fix also some deprectations happening when using now the new Keras version based on tensorflow.keras Fix dependency also for Python Keras tutorials. Disable also Regression Keras tutorials in CI builds since they are too slow for the regression evaluation on single events. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11325:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/11325,2,['depend'],['dependency']
Integrability,"* `RooInt` was only a wrapper class to save unit test integer results to reference files (like `RooDouble`), but it is unused by now. * `RooTFoamBinding` is an implementation detail of the `RooFoamGenerator` and should not be part of the public interface. * `RooConvIntegrandBinding` is an implementation detail of `RooNumConvPdf`/`RooNumConvolution` and should not be part of the public interface. * Some unnecessary includes are removed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12754:22,wrap,wrapper,22,https://root.cern,https://github.com/root-project/root/pull/12754,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"* modernize memory management; * don't define factory interfaces in header files; * remove unneeded base classes, LinkDef entries, and ClassDefs for helper classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11896:54,interface,interfaces,54,https://root.cern,https://github.com/root-project/root/pull/11896,1,['interface'],['interfaces']
Integrability,"* moves `MinuitFcnGrad`, `RooGradMinimizerFcn`, and the implementations; of `LikelihoodWrapper` and `LikelihoodGradientWrapper` out of the; public interfaces. * removing these public interfaces is unproblematic because they have; not been released yet. * new factory methods added to `Likelihood(Gradient)Wrapper` so we can; still create specific implementations for testing. * `clang-format` applied",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9871:147,interface,interfaces,147,https://root.cern,https://github.com/root-project/root/pull/9871,3,"['Wrap', 'interface']","['Wrapper', 'interfaces']"
Integrability,"* replace ROOTSYS by $ROOTSYS; * import new options for `root` and `root-config` from the current help messages; * extended the explanation of `root` for macro compilation (`+`, `+O`, ...), combinations of macro and data files, combinations of macros with expressions; * updated a few URLs; * updated root-config explanation for Makefiles (adapting to built-in rules). Please check, especially the third point is based my on my regular usage of root and not on the official documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487:103,message,messages,103,https://root.cern,https://github.com/root-project/root/pull/1487,1,['message'],['messages']
Integrability,"***tl;dr;*** This PR eliminates (almost all of) the dependencies between the implicit and explicit multithreading execution modes in ROOT and allows the co-existance of several TThreadExecutor instances, each one executing on a different number of threads. . It doesn't change any other behaviour in the eyes of the user. TO DO:. - [ ] Decide on explicit-implicit MT execution modes' interactions; - [ ] Rename TPoolManager; - [ ] Decide if allowing change of the number of threads when calling several times EnableImplicitMT(x) with a varying x without an intermediate call to DisableImplicitMT(); - [ ] Add warnings . ***********************************************************************************. # Previous behaviour; Previous to this PR, the number of threads was limited during the lifetime of the tbb scheduler, kept alive by TPoolManager as a ```std::shared_ptr``` as long as references to it existed, to the value set on its initialization. ```cpp; //We initialize the scheduler with 4 threads; ROOT::EnableIMT(4);; { ; //The scheduler is active, so the value passed to TThreadExecutor; //is overriden with the number of threads the scheduler has been; //initialized with (4); TThreadExecutor executor(9);; }; ROOT::DisableIMT();. //The scheduler is not alive at this point, ; //so we initialize it with 2 threads; ROOT::EnableIMT(2);; ROOT::TThreadExecutor executor(8);; ROOT::DisableIMT();. executor.MapReduce(...); //Runs on two threads!. ROOT::EnableIMT(3);; //Still two threads! TThreadExecutor instance was keeping the scheduler alive; ```; This also implies that given two co-existent instances of TThreadExecutor initialized with a different number of threads, the first one to be initialized forces on the second one the number of threads to work with. ```cpp; ROOT::TThreadExecutor executor(4);; ROOT::TThreadExecutor executor2(8); //will run limited to two threads!!; ```; This setup was useful [to avoid undefined behaviours between the implicit and explicit parallelism mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389:52,depend,dependencies,52,https://root.cern,https://github.com/root-project/root/pull/2389,1,['depend'],['dependencies']
Integrability,"**1st commit:** Do not randomly add to lookup results during <code>EvaluateT()</code>; Axel fixed the notorious bug which prevented having templated <code>printValue()</code> functions in the ""RuntimePrintValue.h"" header which is declared programmatically on the first <code>printValue()</code>invocation. Runtime resolving of some identifiers was used when it shouldn't be. Moving the checking of this condition to the beginning of the function fixed the issue. **2nd commit:** Removed old <code>printValue</code> from TDatime and TString. **3rd commit:** New <code>printValue</code> integration. **4th commit:** Re-added <code>printValue</code> functionality to TString and TDatime. **5th, final commit:** Minor fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/75:585,integrat,integration,585,https://root.cern,https://github.com/root-project/root/pull/75,1,['integrat'],['integration']
Integrability,"**Context:**; I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains.; One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes.; All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**; The error message helps neither; - to find out the call origin ; - to identify the root cause; - to fix the problem. as it provides ; 1. neither the parameters used in the top call ; 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** ; (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `); ```diff; diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx; index b8acf771d9..2f844b98da 100644; --- a/graf2d/graf/src/TTF.cxx; +++ b/graf2d/graf/src/TTF.cxx; @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize); }; ; Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;; - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)); - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");; + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);; + if (err); + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);; }; ; ////////////////////////////////////////////////////////////////////////////////; ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter).; The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**; In our case it allowed to find out that the automat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592:518,message,message,518,https://root.cern,https://github.com/root-project/root/issues/14592,1,['message'],['message']
Integrability,"**Edit:** I'll post the newest version always at the bottom of the feed. The interface here at the top is not state-of-the-art!. ---. I've created this issue to discuss how the feature should look like, see the attached PR for the impl. My current interface looks as follows:. ```python; import ROOT. df = ROOT.RDataFrame(1)\; .Define('myInt', 'int(1)')\; .Define('myFloat', 'float(1)')\; .Define('myVec', 'ROOT::RVec<float>({1, 2, 3})'). print(df.GetSchema()); # Prints you this:; '''; Column Type; ------ ----; myInt int; myFloat float; myVec ROOT::VecOps::RVec<float>; '''; ```. - ~Do we like the name of the function?~ Describe is better; - ~Do we like that it returns a string rather than printing to stdout?~ We like strings!; - ~Should we add a header to the table?~ Edit: Done, see above!; - ~Should we add any other information (see `TTree::Print`)?~ Yes, see below",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561:77,interface,interface,77,https://root.cern,https://github.com/root-project/root/issues/7561,2,['interface'],['interface']
Integrability,**NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/314:40,depend,dependent,40,https://root.cern,https://github.com/root-project/root/pull/314,1,['depend'],['dependent']
Integrability,"**Need**:. The need for a new evaluation metric for testing the convergence of the optimizer is essential. The already existing metric was maximumRelativeError() between two matrices which takes the maximum of all the relative errors between its individual elements. But the relative error between these elements depends on the element values. i.e. Relative error between a and b = abs(a-b)/(abs(a)+abs(b)). Let use consider 2 cases,. case a) If two values are a = 0.0001 , b = 0.0002, relative error = 0.3333; case b) If two values are a = 10.0001 b = 10.0002 relative error = 4.99992e-6 . Since the unit tests for optimizer is written in a way so that a sample 3 layer DNN will learn this function Y = K * X. So, If X = I ( Identity matrix ), then Y = K * I = K. This should be equivalent to the output of the trained DNN when I is feed as Input. Let Y' be the output of the trained DNN. So I need to compare the matrices K and Y' for approximate equality with a certain threshold. So If I use maximumRelativeError for comparing the approximate equality for two matrices, then even though the difference is small for two cases, the relative error is significantly different. So there is a need for a new evaluation metric.; ; **Goal**:. The goal of this PR is to implement new evaluation metric meanAbsoluteError() between two matrices which takes the mean of all the absolute errors of individual elements. Absolute error between a and b = abs(a-b). So both the cases described above will have the same absolute error. So I propose this would be a good choice of metric for comparing two matrices for approximate equality as needed for testing optimizers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2376:313,depend,depends,313,https://root.cern,https://github.com/root-project/root/pull/2376,1,['depend'],['depends']
Integrability,"**TLDR;** I repeated your tests with our environment, see below for the actual setup. Without the root file being opened, I get more preloaded dictionaries (119), but roughly the same memory footprint. Adding a ROOT file on the command line it adds an additional 60MB and I see SOFIE and PyMVA being loaded on demand (see also #13055). ### Long story:. You can set up the same environment by going to lxplus and doing:. ```bash; → ALIBUILD_ARCH_PREFIX=""Packages"" WORK_DIR=/cvmfs/alice.cern.ch/el7-x86_64 . /cvmfs/alice.cern.ch/el7-x86_64/Packages/ROOT/v6-28-04-9/etc/profile.d/init.sh; /cvmfs/alice.cern.ch/el7-x86_64/Packages/AliEn-Runtime/v2-19-le-136/etc/profile.d/init.sh:source:7: no such file or directory: /cvmfs/alice.cern.ch/el7-x86_64/Packages/ApMon-CPP/v2.2.8-alice5-40/etc/profile.d/init.sh; ```. You can safely ignore the ApMon message. Without the root file, I still see over one hundred preloaded, while ""on demand"" and the memory usage is roughly the same. ```bash; # eulisse at lxplus707.cern.ch in ~ [9:39:17]; → ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading | wc -l; 119. # eulisse at lxplus707.cern.ch in ~ [9:39:24]; → ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l. 34. # eulisse at lxplus707.cern.ch in ~ [9:39:57]; → /usr/bin/time -v root.exe -l -b -q. Command being timed: ""root.exe -l -b -q""; User time (seconds): 0.22; System time (seconds): 0.26; Percent of CPU this job got: 62%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.78; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 139016; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 56647; Voluntary context switches: 5479; Involuntary context switches: 23; Swaps: 0; File system inputs: 0; File system outputs: 0; Socket messages sent: 0; Socket messages received:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1611006906:841,message,message,841,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1611006906,1,['message'],['message']
Integrability,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16285:304,depend,dependencies,304,https://root.cern,https://github.com/root-project/root/pull/16285,2,['depend'],['dependencies']
Integrability,"*Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python?; ```python; ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""); ROOT.l; ```; I get:; ```txt; /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)""; attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ); ```; I see on the contrary that it is possibile to use std::function; ```python; ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""); ROOT.f(); ```; the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16168:758,wrap,wrap,758,https://root.cern,https://github.com/root-project/root/issues/16168,1,['wrap'],['wrap']
Integrability,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:5213,Integrat,Integration,5213,https://root.cern,https://github.com/root-project/root/issues/16242,2,['Integrat'],['Integration']
Integrability,", or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-26T19:15:54.928Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-767769935:1964,integrat,integration,1964,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-767769935,1,['integrat'],['integration']
Integrability,", or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-01-27T20:55:05.573Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-768575448:1964,integrat,integration,1964,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-768575448,1,['integrat'],['integration']
Integrability,", or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-03T18:32:22.804Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-772781466:1964,integrat,integration,1964,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-772781466,1,['integrat'],['integration']
Integrability,", or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-04T18:11:39.761Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773543254:1964,integrat,integration,1964,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773543254,1,['integrat'],['integration']
Integrability,", or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T11:10:55.739Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773997337:1964,integrat,integration,1964,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773997337,1,['integrat'],['integration']
Integrability,", or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T16:35:12.117Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-774182513:1964,integrat,integration,1964,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-774182513,1,['integrat'],['integration']
Integrability,", so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440118758:1436,depend,depend,1436,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440118758,1,['depend'],['depend']
Integrability,", std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:594); ==270704== by 0x2721662C: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:898); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x6B3DBB3: unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (stl_algobase.h:235); ==270704== by 0x6B3E09E: std::basic_string_view<char, std::char_traits<char> >::compare(std::basic_string_view<char, std::char_traits<char> >) const (string_view:313); ==270704== by 0x278D9832: bool std::operator==<char, std::char_traits<char> >(std::__type_identity<std::basic_string_view<char, std::char_traits<char> > >::type, std::basic_string_view<char, std::char_traits<char> >) (string_view:565); ==270704== by 0x2719C364: bool __gnu_cxx::__ops::_Iter_equals_val<std::basic_string_view<char, std::char_traits<char> > const>::operator()<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_itera",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:133051,depend,depends,133051,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"- A rebase or similar apparently cut the documentation in two, and a stray sentence now leads the documentation of the second overload.; - The first overload has no documentation at all ... Please make it a habit immediately write a good docstring in the same commit where the interface is fixed defined. https://github.com/root-project/root/blob/a8874141392745a4f9b35fa52d41ada66f203df5/roofit/roofitcore/inc/RooAbsReal.h#L126-L139. https://root.cern.ch/doc/master/classRooAbsReal.html#a3f4185c14daa089c29ae3ba1e90b5235",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9523:277,interface,interface,277,https://root.cern,https://github.com/root-project/root/issues/9523,1,['interface'],['interface']
Integrability,- Add an implementation of getValV for RooAddPdf to use stored normalization as default one when the pdf is evaluated without passing a norm. set.; - Disable printing of warning message when evaluating un-normalized RooAddPdf in : ; - RooAbsPdf::printValue; - RooAbsArg::graphVizTree; - when getVal(0) is called in constructor of RooRealIntegral when a normalization set is not defined.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7750:178,message,message,178,https://root.cern,https://github.com/root-project/root/pull/7750,1,['message'],['message']
Integrability,"- Add back MathCore, needed by TPyFitFunction; - Drop TTreeAsMatrix.h from dictionary to cut unnecessary dependency on RDataFrame",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2809:105,depend,dependency,105,https://root.cern,https://github.com/root-project/root/pull/2809,1,['depend'],['dependency']
Integrability,"- In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not; specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending; on the length of the y-points). The matplotlib script will be:; ```; import matplotlib.pyplot as plt; import numpy as np; points = np.array([3, 8, 1, 10, 5, 7]); plt.plot(ypoints); plt. show(); ```; It is now possible to do the same with the ROOt TGraph:; ```; double y[6] = {3, 8, 1, 10, 5, 7};; auto g = new TGraph(6,y);; g->Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10588:178,depend,depending,178,https://root.cern,https://github.com/root-project/root/pull/10588,1,['depend'],['depending']
Integrability,"- Instead of a raw pointer, a deleter, and some custom memory management methods, RValue now stores a shared void pointer to the object to be written to / read from disk. Follow-up PRs are coming to change the `RField::BindValue` API to a shared pointer interface and to change RValue to not return raw pointers.; - Splits the `REntry::CaptureValueUnsafe` API into a shared-pointer based safe `BindValue` and a `BindRawPtr` unsafe version. This could be a separate PR but it ended up here... It probably makes sense to review the final change set and not go through the transitional commits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14412:254,interface,interface,254,https://root.cern,https://github.com/root-project/root/pull/14412,1,['interface'],['interface']
Integrability,"- Move some RenderCore specific classes and all shaders into RenderCore source tree. - Implement all existing Three.js functionality with RenderCore. - In RenderCore, further improve on existing functionality:; - Textured points - arbitrary size and shape.; - Mesh lines - arbitrary thickness.; - Object and sub-object picking through color buffer with fragment depth detection.; - Camera handling like in TEve, with ability to pick rotation center. - The development branch has been squashed to hide redundant changes. Full history is available in PR osschar/root#41. ## C++ / Server Changes. - REveManager: Make RenderCore the default rendering engine. - Stream interpreter errors and show them in client log. - Add flag fIsRCore to REveManager. - Make REvePointSet secondary-selectable. - Add parameter for projection depth in REveDataCollection. ## JS / Client Changes. - Remove error MessageBox popup during client updates. - EveManager.js: Check change bits in ImportSceneBinary when scene changes are streamed. - EveScene.js: Optimize visibility changes. - EveScene.js: pass eve_element instead of object3d in cases where it simplifies the code. - EveScene.js, GlViewer classes: Cleamup highlite/selection management so it can be abstracted for RCore. - Separate viewer-side selection processing for Three / RCore. ## Tutorials / Demos Changes. - event_demo.C: secondary select points, jet title include pT. - Tune marker sizes, colors, visual parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11936:889,Message,MessageBox,889,https://root.cern,https://github.com/root-project/root/pull/11936,1,['Message'],['MessageBox']
Integrability,- Refactor AdaBoost; - Add multi-class support; - Add ranking feature; - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/315:172,depend,dependent,172,https://root.cern,https://github.com/root-project/root/pull/315,1,['depend'],['dependent']
Integrability,- Replace `long` types by `Longptr_t`; - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7944:105,depend,dependent,105,https://root.cern,https://github.com/root-project/root/pull/7944,1,['depend'],['dependent']
Integrability,"- Replace some more `long` types by `Longptr_t`; - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format); - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7894:115,depend,dependent,115,https://root.cern,https://github.com/root-project/root/pull/7894,1,['depend'],['dependent']
Integrability,- Set minimum CUDA version to 8.0 (doesn't build otherwise); - Fix include path of CUDA dependent library `dnn_cuda` (previously used path `ROOT_INCLUDE_DIRS` is not in local scope),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283:88,depend,dependent,88,https://root.cern,https://github.com/root-project/root/pull/283,1,['depend'],['dependent']
Integrability,- Set the `-std:c++14` / `-std:c++17` flag depending on the version of Visual Studio (only if building outside ROOT); - Split the one line exports in three lines to fix a potential issue with Ninja on Windows (missing a white space between each `/EXPORT:` specifier),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9083:43,depend,depending,43,https://root.cern,https://github.com/root-project/root/pull/9083,1,['depend'],['depending']
Integrability,"- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ================================================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:1826,wrap,wrapping,1826,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,1,['wrap'],['wrapping']
Integrability,- TGDMLWrite: Fix interface to write partial trees. Partial trees must be identified by a TGeoNode and not by a TGeoVolume. Otherwise surfaces cannot be attached to the top level nodes of a partial tree.; - TGDMLWrite: add values of material/surface property tables to output; - TGDMLWrite: add output of CONST properties; - TGDMLParse: protect against trailing '\n' and other white spaces when reading property table values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4160:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/4160,1,['interface'],['interface']
Integrability,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:726,depend,dependednt,726,https://root.cern,https://github.com/root-project/root/pull/5441,1,['depend'],['dependednt']
Integrability,- Veto tutorial multiVarGaus.C when mathmore is not available; - Disable printing error message in exampleFunction.py when mathmore is not available. This fixes ROOT-8145,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8288:88,message,message,88,https://root.cern,https://github.com/root-project/root/pull/8288,1,['message'],['message']
Integrability,"- When `CMAKE_CXX_FLAGS` are defined at the command line, the; build-type-specific flags will be appended to `CMAKE_CXX_FLAGS`,; possibly overriding all flags set by users.; - With this patch, pre-defined ROOT flags are prepended, giving; users the option to override flags like -O2.; - Further, a status message is printed when ROOT overrides the build type and the final compiler flags are also printed in the correct order. Previously, these flags were printed wrongly, giving the false impression that the user could override e.g. the `-O` flags.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4049:305,message,message,305,https://root.cern,https://github.com/root-project/root/pull/4049,1,['message'],['message']
Integrability,"- When a plot in overlapping ranges is requested, the normalisation is not; computed correctly. Now, any overlap between plot ranges is removed; before plotting.; - [RF4756] When integrating a peaked function in a side band, the normalisation integral; might vanish. This will raise an evaluation error. Now, if the function; value also vanishes, this is accepted without error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4107:179,integrat,integrating,179,https://root.cern,https://github.com/root-project/root/pull/4107,1,['integrat'],['integrating']
Integrability,- When imt is off one needs to have still the imt dependency for using TExecutor; - Fix correct definition for variable defining location of vdt headers.; It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9441:50,depend,dependency,50,https://root.cern,https://github.com/root-project/root/pull/9441,1,['depend'],['dependency']
Integrability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12540:503,message,message,503,https://root.cern,https://github.com/root-project/root/issues/12540,1,['message'],['message']
Integrability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; I was build ROOT from source on a FreeBSD VM.; after command: cmake -Dall=ON -Dcuda=OFF -Dalien=OFF -Doracle=OFF ../root-6.26.06,; I got a warning:; Looking for XROOTD; -- Found Xrootd version num: 4.10.0 (setting -DROOTXRDVERS=400100000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /usr/local/include/xrootd;/usr/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:672,wrap,wrapper,672,https://root.cern,https://github.com/root-project/root/issues/11430,1,['wrap'],['wrapper']
Integrability,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8708:534,depend,dependency,534,https://root.cern,https://github.com/root-project/root/issues/8708,3,['depend'],"['dependency', 'depends']"
Integrability,"- [ ] Implement batch eval for Chi2 test stat; - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401); - [x] Implement getWeightBatch() and getBatches() for RooDataHist; - [ ] Implement getBatch for RooTreeDataStore?; - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:527,interface,interface,527,https://root.cern,https://github.com/root-project/root/issues/6557,2,['interface'],['interface']
Integrability,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; ### Describe the bug. When compiling some of my classes I got the following error message. The code was compiling before I removed some lines in one of the included header files. ```; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisSpectrum.cxx:78:1: error: redefinition of 'R__dummyintdefault78'; ClassImp(PairAnalysisSpectrum); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10948:444,message,message,444,https://root.cern,https://github.com/root-project/root/issues/10948,1,['message'],['message']
Integrability,"- [ y] Checked for duplicates. ### The bug; In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection.; Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!. ### Expected behavior; It should open a new window containing the projection. ### To Reproduce; Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup; Root 6.24/04; CentOS 8.5.2111 ; Built from source. ### Additional context; It worked fine under Redhat 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9330:133,message,message,133,https://root.cern,https://github.com/root-project/root/issues/9330,3,"['interface', 'message', 'wrap']","['interface', 'message', 'wrapper']"
Integrability,"- [2021-11-29T20:38:45.207Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:2114,synchroniz,synchronizeParameterSettings,2114,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"- [2021-11-29T20:39:58.379Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:2843,synchroniz,synchronizeParameterSettings,2843,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"- [2021-11-30T07:26:24.689Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:1580,synchroniz,synchronizeParameterSettings,1580,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"- [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:2309,synchroniz,synchronizeParameterSettings,2309,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,"- [X] Checked for duplicates. ### Describe the bug; A non-void returning function (specifically, returning `std::vector<ROOT::RDF::RResultPtr<TH1D>>`) that throws, causes `cling::Value::~Value()` to try freeing resources that were, in principle, already released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:445,depend,dependent,445,https://root.cern,https://github.com/root-project/root/issues/11494,1,['depend'],['dependent']
Integrability,"- [X] Checked for duplicates. ### Describe the bug; The source code build fails at build target G__Gviz3d with the following error messages:; ```; [ 96%] Built target G__Gviz3d; [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o; In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function.; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; | ;; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:131,message,messages,131,https://root.cern,https://github.com/root-project/root/issues/10155,2,"['Wrap', 'message']","['Wrapper', 'messages']"
Integrability,"- [X] Checked for duplicates. ### Describe the bug; When i create a `RooDataSet` from a numpy array using `RooDataSet.from_numpy` the values are ""clipped"" to the range of the `RooRealVar` (setting values outside the bounds to the values at the boundary). probably caused by this code:; https://github.com/root-project/root/blob/e4e8e62c2a04bd5c167b69118bf1afba7b35081b/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py#L101-L102. ### Expected behavior; I think it should instead skip events outside of the range. When i import a TTree instead events will be skipped. ### To Reproduce; ```python; import ROOT; import numpy as np; x = ROOT.RooRealVar(""x"", """", 2, 5); rds = ROOT.RooDataSet.from_numpy({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}, [x]); list(rds.store().realStoreList().data().data()); ```; gives me; ```; [2.0, 2.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 5.0]; ```; Compared to the TTree version:; ```python; ROOT.RDF.MakeNumpyDataFrame({""x"": np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])}).Snapshot(""tree"", ""npdf.root""); f = ROOT.TFile.Open(""npdf.root""); tree = f.Get(""tree""); rds = ROOT.RooDataSet("""", """", [x], ROOT.RooFit.Import(tree)); list(rds.store().realStoreList().data().data()); ```; gives me; ```; [2.0, 3.0, 4.0, 5.0]; ```. ### Setup; ```; ROOT Version: 6.26/00; Built for linuxx8664gcc on Mar 03 2022, 06:51:13; From tags/v6-26-00@v6-26-00; ```; installed on archlinux with pacman. ### Additional context; Thanks a lot for creating these pythonizations! I think this is really nice, making pyROOT interoperable with the rest of the python ecosystem!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10447:1538,interoperab,interoperable,1538,https://root.cern,https://github.com/root-project/root/issues/10447,1,['interoperab'],['interoperable']
Integrability,"- [X] Checked for duplicates. ### Describe the bug; `valgrind ... --suppressions=etc/valgrind-root.supp tree/dataframe/test/dataframe_concurrency` gives. ```; ==30221== Conditional jump or move depends on uninitialised value(s); ==30221== at 0x9D14829: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4BF24: (anonymous namespace)::DAGCombiner::visit(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4D13E: (anonymous namespace)::DAGCombiner::combine(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4EA0D: llvm::SelectionDAG::Combine(llvm::CombineLevel, llvm::AAResults*, llvm::CodeGenOpt::Level) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E2B521: llvm::SelectionDAGISel::CodeGenAndEmitDAG() (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E2F293: llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E3214B: llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) [clone .part.0] (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x98D5399: (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:194,depend,depends,194,https://root.cern,https://github.com/root-project/root/issues/8899,1,['depend'],['depends']
Integrability,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11743:122,message,message,122,https://root.cern,https://github.com/root-project/root/issues/11743,1,['message'],['message']
Integrability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `GetLeaf(branchname, leafname)` seems to ignore the `branchname` argument if friend trees are present -- or in any case, it returns a non-null pointer even for a bogus `branchname` argument, but only if friend trees are present. Note that depending on the situation this might result in wrong data being read. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `GetLeaf(branchname, leafname)` should return the same pointer whether a friend tree is present or not. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int x = 42;; t.Branch(""x"", &x);; t.Fill();; t.Write();; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints 0 as expected. TFile f2(""f.root"");; auto *t2 = f2.Get<TTree>(""t"");; t->AddFriend(t2);; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints the address of leaf `x`, unexpected. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I am using master@a7cceb7478e . ### Additional context; <!--; Add any other context about",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6964:697,depend,depending,697,https://root.cern,https://github.com/root-project/root/issues/6964,1,['depend'],['depending']
Integrability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:863,message,message,863,https://root.cern,https://github.com/root-project/root/issues/10240,1,['message'],['message']
Integrability,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8141:1635,depend,depending,1635,https://root.cern,https://github.com/root-project/root/issues/8141,1,['depend'],['depending']
Integrability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `sudo root --notebook --log-level 10 --allow-root` works; `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds.; There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:; `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`; and noticed that the kernel freezes on line 57:; `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version: 6.22/02; 2. arch linux; 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608:1306,depend,dependency,1306,https://root.cern,https://github.com/root-project/root/issues/6608,1,['depend'],['dependency']
Integrability,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:528,inject,inject,528,https://root.cern,https://github.com/root-project/root/issues/8633,3,"['depend', 'inject']","['dependencies', 'inject']"
Integrability,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:110,depend,dependency,110,https://root.cern,https://github.com/root-project/root/issues/11797,5,['depend'],"['dependency', 'depends']"
Integrability,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12431:992,message,message,992,https://root.cern,https://github.com/root-project/root/issues/12431,1,['message'],['message']
Integrability,- [x] Checked for duplicates. ### Describe the bug; Builtin TBB has broken on MacOS M1 (reported [here](https://root-forum.cern.ch/t/help-on-compile-root-on-new-arm-macbook/42495/7)); ```; CMake Error at /Users/fermi/dev/root/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2; ‘make’ ‘compiler=clang’ ‘cpp0x=1’ ‘CXXFLAGS= -mno-rtm -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk’ ‘CPLUS=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++’ ‘CONLY=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc’ ‘LDFLAGS= -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk’; See also; /Users/fermi/dev/root/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; make[2]: *** [TBB-prefix/src/TBB-stamp/TBB-build] Error 1; make[1]: *** [CMakeFiles/TBB.dir/all] Error 2; make: *** [all] Error [2](url); ```; with:; ```; unknown/unsupported architecture name for: -arch armv4t; ```. ### Available patch; https://github.com/oneapi-src/oneTBB/pull/258. ### Setup; ROOT on MacOS M1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6903:285,message,message,285,https://root.cern,https://github.com/root-project/root/issues/6903,1,['message'],['message']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; CMake EXPORT sets should only reference targets which are required for building dependent packages, not every auxiliary tool. I.e.:; 1. Libraries (implies corresponding headers); 2. Tools like code generators, preprocessors ... If a tool may be invoked by a dependent project during build, include it in the export set, otherwise, leave it out. ### Expected behavior; Only minimal set of programs is referenced by the `ROOTConfig-targets*cmake` file. E.g. `hadd` should not be exported, but it is: ; `list(APPEND _cmake_import_check_files_for_ROOT::hadd ""${_IMPORT_PREFIX}/bin/hadd"" )`. Currently, the following binaries are exported:; ```; ""${_IMPORT_PREFIX}/bin/hadd""; ""${_IMPORT_PREFIX}/bin/hist2workspace""; ""${_IMPORT_PREFIX}/bin/proofserv.exe""; ""${_IMPORT_PREFIX}/bin/rmkdepend""; ""${_IMPORT_PREFIX}/bin/root""; ""${_IMPORT_PREFIX}/bin/rootcling""; ""${_IMPORT_PREFIX}/bin/root.exe""; ""${_IMPORT_PREFIX}/bin/rootnb.exe""; ""${_IMPORT_PREFIX}/bin/rootn.exe""; ""${_IMPORT_PREFIX}/bin/roots.exe""; ""${_IMPORT_PREFIX}/bin/xpdtest""; ```. ROOT already has the `CMAKENOEXPORT` parameter to support this with `ROOT_EXECUTABLE`. ### To Reproduce; `cmake; make; make install`. ### Setup; 1. ROOT version: 6.26.06; 2. Operating system: Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11448:132,depend,dependent,132,https://root.cern,https://github.com/root-project/root/issues/11448,2,['depend'],['dependent']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; Calling `Display` on an RDataFrame created from an RNTuple that contains user-defined classes causes ROOT to crash with an error message `No on-disk column information for for field X`, where `X` is a data member of the class in question. Other methods appear to be working correctly, as well as explicitly specifying which data member should be read (i.e. `df.Display({""electrons.pt""})`). ### Expected behavior; Nothing crashes and an `RDisplay` object is returned. ### To Reproduce; Minimal reproducer:; ```c++; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RNTupleModel.hxx>. #include <iostream>. using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleWriteOptions;; using ROOT::Experimental::RNTupleWriter;. const std::string kNTupleName = ""N"";; const std::string kNTupleFileName = ""ntuple_electrons.root"";. struct Electron {; float pt = 0;; };. void write() {; auto model = RNTupleModel::Create();; auto fldElectrons = model->MakeField<Electron>(""electrons"");. auto ntuple = RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. fldElectrons->pt = 42.;; ntuple->Fill();; }. void read() {; auto df = ROOT::RDF::Experimental::FromRNTuple(kNTupleName, kNTupleFileName);; auto dfDef = df.Define(""ptSquared"", ""electrons.pt * electrons.pt"");. dfDef.Describe().Print();. auto dfDisp = df.Display();; dfDisp->Print();; }. void ntuple_rdf_custom_class() {; write();; read();; }; ``` . ### Setup; 1. ROOT version: master; 2. Operating system: Ubuntu 22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12852:181,message,message,181,https://root.cern,https://github.com/root-project/root/issues/12852,1,['message'],['message']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8537:280,message,message,280,https://root.cern,https://github.com/root-project/root/issues/8537,1,['message'],['message']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; If the external nhlohman json is used ROOT an error occurs if ROOTEve is used; ```; CMake Error at cmake/DD4hepBuild.cmake:625 (add_library):; Target ""DDEvePlugins"" links to target ""nlohmann_json::nlohmann_json"" but; the target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; Call Stack (most recent call first):; DDEve/CMakeLists.txt:43 (dd4hep_add_plugin); ```; (original discovery via lcg nightlies in DD4hep package build on top of root master. ### Expected behavior. ROOT targets resolve all their dependencies so that other CMake projects can use them without error or change to their cmake; `Find_dependency` added to e.g., ROOTConfig.cmake; or; this needs to be PRIVATE ?; https://github.com/linev/root/blob/88bdfd736f0b859b40973c457b75df9c73b0bbaf/graf3d/eve7/CMakeLists.txt#L139. ### To Reproduce; have a project with a library linking against ROOTEve; Assuming `cmake` is in the PATH (compiler and OS shouldn't matter); ```bash; wget http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/latest/ROOT-HEAD_db894-x86_64-centos7-gcc8-opt.tgz; tar xzf ROOT-HEAD_db894-x86_64-centos7-gcc8-opt.tgz; mkdir test; cd test; cat > CMakeLists.txt <<EOF; CMAKE_MINIMUM_REQUIRED(VERSION 3.12 FATAL_ERROR); PROJECT(myeve); find_package(ROOT REQUIRED); add_library(myeve SHARED myeve.cpp); TARGET_LINK_LIBRARIES(myeve ROOT::ROOTEve); EOF. cat > myeve.cpp <<EOF; int main (); {; return 1;; }; EOF; mkdir build; cd build. # assuming cmake is in the path; cmake -D ROOT_DIR=${PWD}/../../ROOT/HEAD/x86_64-centos7-gcc8-opt/cmake ..; ```. gives; ```; CMake Error at CMakeLists.txt:4 (add_library):; Target ""myeve"" links to target ""nlohmann_json::nlohmann_json"" but the; target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; ```. ### Setup. 1. ROOT master, `cmake ... -Dbuiltin_nlohmannjson=OFF ....`; 2. centos7; 3. build with LCGC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784:620,depend,dependencies,620,https://root.cern,https://github.com/root-project/root/issues/6784,1,['depend'],['dependencies']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; In TMVA documentation at ; https://root.cern/doc/master/group__TMVA.html; there is a link ""The full description of the Multi Variate Analysis package"", which leads to ; http://tmva.sourceforge.net/. On that site it's written: ""In 2013, TMVA was completely integrated into ROOT and is now released as part of it. The new official home can be found at the ROOT website (here). "", where the link ""here"" leads to; https://root.cern/tmva/; which doesn't exist. The same link is in TMVA's sourceforge page as ""Project Page"". Also I note that in the [TMVA Reference guide](https://root.cern/doc/master/group__TMVA.html) there are links to ; The TMVA Users Guide.; The TMVA Options Reference,; that all lead to sourceforge.net (and they are both broken). Probably they should be moved to root.cern?. ### Expected behavior; If the sourceforge link should be deleted, remove that. If it is relevant, then please fix the link to root.cern there or the page at root.cern/tmva .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7627:308,integrat,integrated,308,https://root.cern,https://github.com/root-project/root/issues/7627,1,['integrat'],['integrated']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; In the ROOT prompt, `.?` prints a slightly outdated help message. Both the Cling-specific part (MetaSema) and the ROOT-specific special commands (TApplication) need revision. ### Expected behavior; All options are documented, and outdated ones are removed. - [x] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [x] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [x] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb; - [x] .![shell]; - [x] .qqqqq; - [x] "" "" << metaString << ""R [user@]host[:dir] [-l user] [-d dbg] [script]\t- Launch process in a remote host\n""; - [x] "" "" << metaString << ""demo\t- Launch GUI demo\n""; - [x] "" "" << metaString << ""credits\t- Show credits\n""; - [x] "" "" << metaString << ""license\t- Show license\n""; - [x] CTRL+D also works as a way to exit; - [x] CTRL+C can interrupt; - [x] CTRL+Z pauses job; - [x] CTRL+L clear screen; - [x] CTRL+Del Ctrl Left Ctrl Right Ctrol Backspace https://github.com/root-project/root/pull/10091; - [x] CTRL+S for forward search https://github.com/root-project/root/issues/10137; - [x] .exit; - [x] .quit; - [x] .typedef; - [x] .include; - [x] Specify also a new command, e.g. .flags, to show ; - [x] .undo / .U to unload the last n input lines doesn't seem to work; - [x] .O1 to set the optimization level is implemented even if .help says it's not; - [x] Translate 0x1F code etc to key name; - [x] Clarify what .files and .fileEx and .stats mean. ### To Reproduce; `.?`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:109,message,message,109,https://root.cern,https://github.com/root-project/root/issues/10065,1,['message'],['message']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11188:382,interface,interface,382,https://root.cern,https://github.com/root-project/root/issues/11188,2,['interface'],['interface']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; When compiling with GCC c++ 4.8.5, GoogleTest fails to build. A sample of messages:. ```; In file included from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:126,message,messages,126,https://root.cern,https://github.com/root-project/root/issues/9370,1,['message'],['messages']
Integrability,"- [x] Checked for duplicates. ### Describe the bug; When root fails to load the dictionary payload it used to give a clear message that a header file couldn't be included.; ```; In file included from G__DDG4 dictionary payload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:123,message,message,123,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"- [x] Checked for duplicates. Maybe related: #7063. ### Describe the bug; ROOT fails to link TBB on Ubuntu 22.10. ### Expected behavior; Successful build. ### To Reproduce; 1. git clone ROOT; 2. `cmake`; 3. `make`. ### Setup; 1. ROOT master 487e1fcffb49242ee9029685435f67e610628a57; 2. Ubuntu 22.10; 3. installed all dependencies according to [here](https://root.cern/install/dependencies/); 4. installed `libtbb-dev`, which is not listed in the required dependencies.; ```; bgruber@graviola:~/dev/root$ apt list --installed | grep tbb. WARNING: apt does not have a stable CLI interface. Use with caution in scripts. libtbb-dev/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed]; libtbb12/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed,automatic]; libtbbbind-2-5/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed,automatic]; libtbbmalloc2/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed,automatic]; ```. ### cmake cache; ```; TBB_BINARY_DIR ; TBB_INCLUDE_DIR /usr/include ; TBB_LIBRARY /usr/local/lib/libtbb.so; TBB_LIBRARY_DEBUG TBB_LIBRARY_DEBUG-NOTFOUND ; TBB_LIBRARY_RELEASE /usr/local/lib/libtbb.so; TBB_ROOT_DIR /usr; ```. ### make output:; ```; [ 51%] Linking CXX shared library ../../lib/libImt.so; /usr/bin/ld: CMakeFiles/Imt.dir/src/TTaskGroup.cxx.o: in function `ROOT::Experimental::TTaskGroup::TTaskGroup()':; TTaskGroup.cxx:(.text+0x6b): undefined reference to `tbb::detail::r1::initialize(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: CMakeFiles/Imt.dir/src/TTaskGroup.cxx.o: in function `ROOT::Experimental::TTaskGroup::Cancel()':; TTaskGroup.cxx:(.text+0xfa): undefined reference to `tbb::detail::r1::cancel_group_execution(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: CMakeFiles/Imt.dir/src/TTaskGroup.cxx.o: in function `ROOT::Experimental::TTaskGroup::Run(std::function<void ()> const&)':; TTaskGroup.cxx:(.text+0x173): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long)'; /usr/bin/ld: TTaskGroup.cxx:(.text+0x214): un",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931:317,depend,dependencies,317,https://root.cern,https://github.com/root-project/root/issues/11931,4,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"- [x] Checked for duplicates. When using clang trunk to build ROOT (main branch), it fails due to `case value is not a constant expression`. ```; ❯ clang --version; clang version 16.0.0 (https://github.com/llvm/llvm-project/ dde41c6c560b67165c7ac884815cd50fdce446f8); Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /home/jun/opt/clang/bin; ```. cmake commands:; ```; cmake -DCMAKE_BUILD_TYPE=Debug \; -DCMAKE_EXPORT_COMPILE_COMMANDS=YES \; -DCMAKE_C_COMPILER=clang \; -DCMAKE_CXX_COMPILER=clang++ \; -DCMAKE_EXE_LINKER_FLAGS=""-fuse-ld=lld"" \; -GNinja .. ```; System info:; I have tried Ubuntu 22 and WSL (Ubuntu 20) and got the same results. Error message:; ```; FAILED: io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o ; /home/jun/opt/clang/bin/clang++ -I/home/jun/dev/root/io/io/inc -I/home/jun/dev/root/core/unix/inc -I/home/jun/dev/root/core/foundation/v7/inc -I/home/jun/dev/root/core/base/v7/inc -I/home/jun/dev/root/core/clingutils/inc -I/home/jun/dev/root/core/textinput/inc -I/home/jun/dev/root/core/thread/inc -I/home/jun/dev/root/core/zip/inc -I/home/jun/dev/root/core/rint/inc -I/home/jun/dev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:670,message,message,670,https://root.cern,https://github.com/root-project/root/issues/11128,1,['message'],['message']
Integrability,"- [x] Checked for duplicates. `TCling::UpdateListOfLoadedSharedLibraries()` iterates through the linked list of dynamic libraries maintained by glibc and saves a pointer into the middle of the list:. https://github.com/root-project/root/blob/49c45b3291c71ffc7f603ae4267f112fdaf77ac4/core/metacling/src/TCling.cxx#L3285-L3290. This is a linked list that can be modified by the activity of other threads, so access to it needs to be protected by a glibc internal `dl_load_write_lock`. glibc provides an interface for this purpose, `dl_iterate_phdr(3)`:. https://linux.die.net/man/3/dl_iterate_phdr. which should be used instead of iterating through the list without the appropriate locking. This bug is not trivial to reproduce, but is believed to be responsible for crashes observed in CMS relval tests https://github.com/cms-sw/cmssw/issues/30359",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6797:501,interface,interface,501,https://root.cern,https://github.com/root-project/root/issues/6797,1,['interface'],['interface']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. ROOT installed from the binary distribtution for Ubuntu 22 is broken and can't start, at least for 6.26.08 and 6.26.10 (N.B. this is using WSL2). ### Expected behavior. `root` should start normally. ### To Reproduce. - Install dependencies via `apt`; - N.B. `python` and `python-dev` do not exist on Ubuntu22; use `python3` and `python-is-python3` instead; likewise `libglew1.5-dev` should now be `libglew-dev`; - Download and unpack `root_v6.26.10.Linux-ubuntu22-x86_64-gcc11.3.tar.gz` in `/opt`; - `cd /opt/root; source bin/thisroot.sh`; - Then I get the following:. ```; ➜ which root; /opt/root/bin/root; ➜ root; input_line_1:1:2: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/opt/root/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; Module libc not found.; Failed to load module std; <<< cling interactive line includer >>>: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module '_Builtin_intrinsics' in '/opt/root/lib/_Builtin_intrinsics.pcm'; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:610,depend,dependencies,610,https://root.cern,https://github.com/root-project/root/issues/11901,1,['depend'],['dependencies']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7558:610,message,message,610,https://root.cern,https://github.com/root-project/root/issues/7558,1,['message'],['message']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:743,message,message,743,https://root.cern,https://github.com/root-project/root/issues/7982,1,['message'],['message']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have a model containing a `RooRealSumPdf` which wraps a `RooAbsReal` with an analytical integral (I tested with `RooGaussModel` and `RooPolyVar`). One of the parameters of the `RooAbsReal` is a function of the actual fit parameter (a `RooProduct` containing a `RooRealVar` for example).; When using batchmode, in the computation of the integral of the `RooAbsReal` (which is internal to the `RooRealSumPdf`, since it overrides `analyticalIntegralWN`), the value of the transformed parameter is not synced with the changes of the `RooRealVar` it contains, leading to a wrong integral.; Inspecting the `RooFitDriver` contents shows that the dataMap entry corresponding to the transformed parameter has the correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:508,wrap,wraps,508,https://root.cern,https://github.com/root-project/root/issues/11578,1,['wrap'],['wraps']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Running `ROOT::GetImplicitMTPoolSize()` gives the error message; `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`.; Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Start an interactive session of ROOT.; Run `ROOT::GetImplicitMTPoolSize()`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs).; No error in version 6.20/07. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10413:514,message,message,514,https://root.cern,https://github.com/root-project/root/issues/10413,1,['message'],['message']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:521,message,message,521,https://root.cern,https://github.com/root-project/root/issues/7987,3,['message'],['message']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When using the pythonization of _some_ `RooCmdArgs` together with the `RooArgSet` pythonization, the created set is dropped too early.; It does not always cause a segfault (depends on the `RooCmdArg`) but it is visible in `valgrind`.; I've seen this happen with `Minos`, `Slice`, `Project`, `Parameters` and SelectVar, while I tested `Conditional`, `Constrain`, `ExternalConstraints`, `Components` and `VisualizeError` and they show no issue (not even in `valgrind`). ; I _think_ the difference is wether the `RooArgSet` is stored as a `RooArgSet` in the `RooCmdArg` (works fine) or as a `TObject*` (dropped early).; I've also noticed that this happens only when you combine the two pythonizations, e.g. both; ```Python; model.fitTo(data, Minos = ROOT.RooArgSet(parameter)); model.fitTo(data, ROOT.RooFit.Minos({parameter})); ```; work fine, only; ```Python; model.fitTo(data, Minos = {parameter}); ```; is affected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No use after free. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421:631,depend,depends,631,https://root.cern,https://github.com/root-project/root/issues/11421,1,['depend'],['depends']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:605,integrat,integrate,605,https://root.cern,https://github.com/root-project/root/issues/12646,3,['integrat'],"['integrate', 'integration']"
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10604:754,message,message,754,https://root.cern,https://github.com/root-project/root/issues/10604,1,['message'],['message']
Integrability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; The bug is not reported. ### Describe the bug; <!--. -->; When I compile my code using TMVA reader, I got the following message. ld: warning: libguide.so, needed by /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found (try using -rpath or -rpath-link). Then, I execute my .exe file, and get:; error while loading shared libraries: libguide.so: cannot open shared object file: No such file or directory. ### Expected behavior; <!--; -->; No warning during compiling. No error when running. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->; #include <cstdlib>; #include <iostream>; #include ""TString.h""; #include ""TTree.h""; #include ""TGraph.h""; #include ""TFile.h""; #include <TMVA/Reader.h>; #include ""TF1.h""; using namespace std;; int main(int argc, char *argv[]){; int t_i = 19;; float mu, Delta, Ng, Ec, h, epsilon_c, ng, Gamma, L_M_5;; TMVA::Reader *reader = new TMVA::Reader(""!Color:!Silent"");; reader->AddVariable( ""mu"", &mu );; reader->AddVariable( ""Delta"", &Delta );; reader->AddVariable( ""Ng"", &Ng );; reader->AddVariable( ""Ec"", &Ec );; reader->AddVariable( ""h"", &h );; reader->AddVariable( ""epsilon_c"", &epsilon_c );; reader->AddVariable( ""ng"", &ng );; reader->AddVariable( ""Gamma"", &Gamma );; reader->AddVariable( ""L-5"", &L_M_5 );; reader->BookMVA( ""MLP method"", Form(""/eos/user/j/jfeng5/work/quantum_computing/mc/tmva/weights/qc_MLP_%d.weights.xml"",t_i ));; TFile tf_fi(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904:481,message,message,481,https://root.cern,https://github.com/root-project/root/issues/6904,1,['message'],['message']
Integrability,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10577:748,depend,depend,748,https://root.cern,https://github.com/root-project/root/issues/10577,2,['depend'],['depend']
Integrability,"- `SetUpWindows.cmake`: Remove the `-D_WIN32` and `-D_WIN64` compiler flags that are set internally by the compiler and can cause redefinition warnings (e.g. with roottest); - `TWinNTSystem.cxx`: Don't add dependencies on system DLLs from the `C:\Windows` directory, their import libraries might not be available (e.g. in debug mode)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13362:206,depend,dependencies,206,https://root.cern,https://github.com/root-project/root/pull/13362,1,['depend'],['dependencies']
Integrability,"- add check if rms is NaN; - output value of rms (zero, negative, or NaN); - set rms to zero if it is NaN (before only done for zero or negative values). → I suspect the training will have problems in that situation anyway but **I think** it makes the message easier to digest:. before:; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : ------------------------------------------------------------------------------------------------------------------; : LifeTime: 0.0011344 -nan [ 8.5046e-05 0.024133 ]. …; : Some more output; : -nan -nan -nan -nan -nan -nan; <FATAL> : <GetSeparation> signal and background histograms have different or invalid dimensions:; ***> abort program execution; terminate called after throwing an instance of 'std::runtime_error'; what(): FATAL error. ```; after; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <WARNING> <WARNING> : Variable ""LifeTime"" has zero, negative, or NaN RMS^2: -nan ==> set to zero. Please check the variable content. ```; I.e. the nan does not appear in the table anymore (where I didn't spot it first) but the abnormal value gets pulled out into a WARNING message. (Where it also comes with variable name, as opposed to the long list of correlation matrix warning, which makes it non-trivial to understand which variables are problematic, if many, and comes w/o human readable names). tbh: I have not yet understood why NaN arrives there (… well a few lines before the √ of a negative number is computed … but I don't yet know why that arrived there. Still investigating, will follow up once I know more).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1669:252,message,message,252,https://root.cern,https://github.com/root-project/root/pull/1669,2,['message'],['message']
Integrability,- add dependencied on Core and IO (needed to resolve the symbols at link time on Windows); - add a few symbols to be exported; - use the ANSI version of system functions; - convert the backslashs to forward slashs in the rootmap file path,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1122:6,depend,dependencied,6,https://root.cern,https://github.com/root-project/root/pull/1122,1,['depend'],['dependencied']
Integrability,- fix ROOTTest executions problem : remove failed word from warning message; - gridMode considers now CAPath correctly; - correct problem related to X509_CERT_DIR and gridmode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15:68,message,message,68,https://root.cern,https://github.com/root-project/root/pull/15,2,['message'],['message']
Integrability,- fix an error message (text was misleading); - correclty initialize a data member; - allow initialHesse to be used with Minimizer option in fitTo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10053:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/10053,1,['message'],['message']
Integrability,- initial port of physics-data -> EVE representation infrastructure from Fireworks;; - cleanup of TObject inheritance;; - first steps towards multi client synchronized selection support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3466:155,synchroniz,synchronized,155,https://root.cern,https://github.com/root-project/root/pull/3466,1,['synchroniz'],['synchronized']
Integrability,"- primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1416,interface,interface,1416,https://root.cern,https://github.com/root-project/root/pull/943,1,['interface'],['interface']
Integrability,"- the CUDA sm level can be set via CLING_TEST_CUDA_SM_LEVEL environment variable (e.g. ""35""), before running the tests; - this necessary, because the minimum sm level depends on the use CUDA SDK; - for example, CUDA 8.0 supports sm level 2.0, which is not support from CUDA 10.1 anymore",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7190:167,depend,depends,167,https://root.cern,https://github.com/root-project/root/pull/7190,1,['depend'],['depends']
Integrability,- the invocation in TF1 is broken and needs to be fixed.; - TString can benefit from a `Warning` message if the input string has a \0 before the n-th character. But we really need both parts.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8136#issuecomment-842494947:97,message,message,97,https://root.cern,https://github.com/root-project/root/issues/8136#issuecomment-842494947,1,['message'],['message']
Integrability,"- try harder to find branches and leaves users requested when; trying to figure out their type; - when building the list of valid column names, use the output of; TBranch::GetFullName instead of the names (joined by dots) of; the branches we traversed so far. With multiple nested; TBranchElements, the traversal might be `a.b.c` while the name; returned by TBranch::GetFullName (which is what TTree::GetBranch; recognizes) might be simply `a.c` (see e.g. ROOT-9975). These changes fix ROOT-9975, although in some corner cases they might; change which column names RDataFrame considers valid (any ""reasonable""; user application that was working should keep working -- no tutorial,; test or integration benchmark we have was broken by these changes). A test is at https://github.com/root-project/roottest/pull/632 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6988:690,integrat,integration,690,https://root.cern,https://github.com/root-project/root/pull/6988,1,['integrat'],['integration']
Integrability,- use for the registration of MathCore functions the Mathcore header files (e.g. DistFuncMathCore); - move file definining registration of Mathmore functions in roofitmore. This fixes ROOT-10709 and remove dependency introduced in #5439,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5452:206,depend,dependency,206,https://root.cern,https://github.com/root-project/root/pull/5452,1,['depend'],['dependency']
Integrability,"-----------------------------------; extVecFld [#0] -- SplitIndex64 {id:1}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 8 B; Size on storage: 16 B; Compression: 1.00; ............................................................; extVecFld._0 [#0] -- SplitReal32 {id:2}; # Elements: 2; # Pages: 1; Avg elements / page: 2; Avg page size: 12 B; Size on storage: 12 B; Compression: 0.67; ............................................................; fld [#0] -- SplitReal32 {id:0}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 4 B; Size on storage: 8 B; Compression: 1.00; ............................................................; ```; Note the column with ID 2 (middle row of the column details). This column contains the actual elements of `extVecFld`. As can be seen in the macro, there should be three elements, but it is reported to only contain two. To reproduce the `TBrowser` issue, open a ROOT promt with the RNTuple and start a browser session (N.B., web graphics need to be used):; ```sh; $ root -l modelext.root; root [0] ; Attaching file modelext.root as _file0...; (TFile *) 0x2e48180; root [1] TBrowser t; ```; In the browser window, double-click on `modelext.root`, decollapse the field list of `ntuple;1`, decollapse the field list of `extVecFld` and double click on the leaf field named `_0`. ROOT then crashes with the following message:; ```txt; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): entry with index 3 out of bounds; At:; virtual ROOT::Experimental::Internal::RPage ROOT::Experimental::Internal::RPageSourceFile::PopulatePage(ROOT::Experimental::Internal::RPageStorage::ColumnHandle_t, ROOT::Experimental::NTupleSize_t) [/home/florine/cern/root/src/tree/ntuple/v7/src/RPageStorageFile.cxx:435]; ```. ### ROOT version. 6.30 and up (most likely also 6.28, haven't verified yet). ### Installation method. built from source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15661:5251,message,message,5251,https://root.cern,https://github.com/root-project/root/issues/15661,1,['message'],['message']
Integrability,-04/0/core/thread/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/zip/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/lzma/inc -I/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1/include -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/lz4/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/zstd/inc -I/opt/homebrew/include -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/macosx/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/unix/inc -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/unix/../clib/res -I/Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include -I/Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/builtins/xxhash ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMapFile.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:6155,Message,MessageTypes,6155,https://root.cern,https://github.com/root-project/root/issues/16449,1,['Message'],['MessageTypes']
Integrability,"-22T14:26:32.477Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.733Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:26:32.989Z] /data/sftnight/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope . And 5 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440118758:1706,depend,depend,1706,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440118758,3,['depend'],"['depend', 'dependent']"
Integrability,"-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorROOT11010; [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms); [ RUN ] TClingMethodInfo.TemplateFun; [ OK ] TClingMethodInfo.TemplateFun (1 ms); [ RUN ] TClingMethodInfo.Ctors; [ OK ] TClingMethodInfo.Ctors (4 ms); [----------] 5 tests from TClingMethodInfo (90 ms total); [----------] Global test environment tear-down; [==========] 33 tests from 4 test suites ran. (7341 ms total); [ PASSED ] 32 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TClingDataMemberInfo.Offset; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. Build root 6.30.02 for s390x; Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x; Fedora Linux 39 for s390x; Fedora Linux 38 for s390x; RHEL 9 + EPEL 9 for s390x; RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:5075,message,message,5075,https://root.cern,https://github.com/root-project/root/issues/14512,1,['message'],['message']
Integrability,"-DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in the source directory. The default configuration is in `.ci/config.cmake`. It is used if no specific configuration is found for the detected OS. For example, on Ubuntu, a file named `ubuntu.cmake` will be used if present instead of `config.cmake`. The script also tries to detect a version, so, for example, on Alma, one could use `almalinux8.cmake` which would have higher precedence than `almalinux.cmake`. The default `config.cmake` tries to enable as many options as possible without failing if the dependencies are not installed. Sample `ubuntu.cmake` and `macos.cmake` are added in this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:2502,depend,dependencies,2502,https://root.cern,https://github.com/root-project/root/pull/14999,1,['depend'],['dependencies']
Integrability,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```; cmake .. \; -Dalien=OFF -Dcuda=ON \; -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \; -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \; -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9; ```. The error message:. ```; /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:; /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope; return (char *) memcpy (__dest, __src, __n) + __n;; ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257136223:3013,message,message,3013,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257136223,1,['message'],['message']
Integrability,"-Dfortran=OFF""; ""-Dimt=ON""; ""-Dgfal=OFF""; ""-Dgviz=OFF""; ""-Dhdfs=OFF""; ""-Dhttp=ON""; ""-Dkrb5=OFF""; ""-Dldap=OFF""; ""-Dmonalisa=OFF""; ""-Dmysql=OFF""; ""-Dodbc=OFF""; ""-Dopengl=ON""; ""-Doracle=OFF""; ""-Dpgsql=OFF""; ""-Dpythia6=OFF""; ""-Dpythia8=OFF""; ""-Drfio=OFF""; ""-Droot7=OFF""; ""-Dsqlite=OFF""; ""-Dssl=ON""; ""-Dtmva=ON""; ""-Dvdt=OFF""; ""-Dwebgui=OFF""; ""-Dxml=ON""; ""-Dxrootd=OFF""; ]; ++ lib.optional (stdenv.cc.libc != null) ""-DC_INCLUDE_DIRS=${lib.getDev stdenv.cc.libc}/include""; ++ lib.optionals stdenv.isDarwin [; ""-DOPENGL_INCLUDE_DIR=${OpenGL}/Library/Frameworks""; ""-DCMAKE_DISABLE_FIND_PACKAGE_Python2=TRUE"". # fatal error: module map file '/nix/store/<hash>-Libsystem-osx-10.12.6/include/module.modulemap' not found; # fatal error: could not build module '_Builtin_intrinsics'; ""-Druntime_cxxmodules=OFF""; ];. NIX_LDFLAGS = lib.optionalString (stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU) ""-lgcc"";. postInstall = ''; for prog in rootbrowse rootcp rooteventselector rootls rootmkdir rootmv rootprint rootrm rootslimtree; do; wrapProgram ""$out/bin/$prog"" \; --set PYTHONPATH ""$out/lib"" \; --set ${lib.optionalString stdenv.isDarwin ""DY""}LD_LIBRARY_PATH ""$out/lib""; done. # Make ldd and sed available to the ROOT executable; wrapProgram ""$out/bin/root"" --prefix PATH : ""${lib.makeBinPath [; gnused # sed; stdenv.cc # c++ ld etc.; stdenv.cc.libc # ldd; ]}"". # Patch thisroot.{sh,csh,fish}. # The main target of `thisroot.sh` is ""bash-like shells"",; # but it also need to support Bash-less POSIX shell like dash,; # as they are mentioned in `thisroot.sh`. # `thisroot.sh` would include commands `lsof` and `procps` since ROOT 6.28.; # See https://github.com/root-project/root/pull/10332. patchRcPathPosix ""$out/bin/thisroot.sh"" ""${lib.makeBinPath [; coreutils # dirname tail; gnugrep # grep; gnused # sed; lsof # lsof # for ROOT (>=6.28); man # manpath; procps # ps # for ROOT (>=6.28); which # which; ]}""; patchRcPathCsh ""$out/bin/thisroot.csh"" ""${lib.makeBinPath [; coreutils; gnugrep; gnused; lsof # l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:7473,wrap,wrapProgram,7473,https://root.cern,https://github.com/root-project/root/issues/11920,1,['wrap'],['wrapProgram']
Integrability,"-Dpythia8=OFF""; ""-Drfio=OFF""; ""-Droot7=OFF""; ""-Dsqlite=OFF""; ""-Dssl=ON""; ""-Dtmva=ON""; ""-Dvdt=OFF""; ""-Dwebgui=OFF""; ""-Dxml=ON""; ""-Dxrootd=OFF""; ]; ++ lib.optional (stdenv.cc.libc != null) ""-DC_INCLUDE_DIRS=${lib.getDev stdenv.cc.libc}/include""; ++ lib.optionals stdenv.isDarwin [; ""-DOPENGL_INCLUDE_DIR=${OpenGL}/Library/Frameworks""; ""-DCMAKE_DISABLE_FIND_PACKAGE_Python2=TRUE"". # fatal error: module map file '/nix/store/<hash>-Libsystem-osx-10.12.6/include/module.modulemap' not found; # fatal error: could not build module '_Builtin_intrinsics'; ""-Druntime_cxxmodules=OFF""; ];. NIX_LDFLAGS = lib.optionalString (stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU) ""-lgcc"";. postInstall = ''; for prog in rootbrowse rootcp rooteventselector rootls rootmkdir rootmv rootprint rootrm rootslimtree; do; wrapProgram ""$out/bin/$prog"" \; --set PYTHONPATH ""$out/lib"" \; --set ${lib.optionalString stdenv.isDarwin ""DY""}LD_LIBRARY_PATH ""$out/lib""; done. # Make ldd and sed available to the ROOT executable; wrapProgram ""$out/bin/root"" --prefix PATH : ""${lib.makeBinPath [; gnused # sed; stdenv.cc # c++ ld etc.; stdenv.cc.libc # ldd; ]}"". # Patch thisroot.{sh,csh,fish}. # The main target of `thisroot.sh` is ""bash-like shells"",; # but it also need to support Bash-less POSIX shell like dash,; # as they are mentioned in `thisroot.sh`. # `thisroot.sh` would include commands `lsof` and `procps` since ROOT 6.28.; # See https://github.com/root-project/root/pull/10332. patchRcPathPosix ""$out/bin/thisroot.sh"" ""${lib.makeBinPath [; coreutils # dirname tail; gnugrep # grep; gnused # sed; lsof # lsof # for ROOT (>=6.28); man # manpath; procps # ps # for ROOT (>=6.28); which # which; ]}""; patchRcPathCsh ""$out/bin/thisroot.csh"" ""${lib.makeBinPath [; coreutils; gnugrep; gnused; lsof # lsof # for ROOT (>=6.28); man; which; ]}""; patchRcPathFish ""$out/bin/thisroot.fish"" ""${lib.makeBinPath [; coreutils; man; which; ]}""; '';. setupHook = ./setup-hook.sh;; }; ```. `flake.nix`. ```Nix; {; inputs.flake-utils.url",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:7671,wrap,wrapProgram,7671,https://root.cern,https://github.com/root-project/root/issues/11920,1,['wrap'],['wrapProgram']
Integrability,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11529:17,depend,dependency,17,https://root.cern,https://github.com/root-project/root/pull/11529,2,['depend'],"['depend', 'dependency']"
Integrability,-Release.cmake:49 (message): ; - [2021-10-29T11:02:00.746Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2021-10-29T11:02:00.746Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2021-10-29T11:02:04.031Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-10-29T11:02:04.031Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:25.960Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-10-29T11:02:25.960Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-10-29T11:01:20.633Z] CMake Warning at CMakeLists.txt:212 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-954652370:2042,message,message,2042,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-954652370,3,['message'],['message']
Integrability,"-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:26:27.836Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-30T07:27:04.442Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:467:53: warning: declaration of ‘likelihood’ shadows a member of ‘LikelihoodSimBinnedConstrainedTest_ConstrainedAndOffset_Test’ [-Wshadow] . ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodGradientJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131195/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodGradientJob/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982368821:3319,synchroniz,synchronizeParameterSettings,3319,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982368821,1,['synchroniz'],['synchronizeParameterSettings']
Integrability,-build/11502/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11502/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 83 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344080035:3527,interface,interface,3527,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344080035,2,['interface'],['interface']
Integrability,-build/11503/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11503/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 83 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344059587:3484,interface,interface,3484,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344059587,2,['interface'],['interface']
Integrability,-build/11504/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11504/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 79 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344062073:3498,interface,interface,3498,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344062073,2,['interface'],['interface']
Integrability,-build/11512/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11512/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 74 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344093769:3498,interface,interface,3498,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344093769,2,['interface'],['interface']
Integrability,-build/54289/console).; ### Errors:; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/graf2d/primitives && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f G__ROOTGraphicsPrimitives.cxx -cxxmodule -s /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives.so -m libCore_rdict.pcm -m libRIO_rdict.pcm -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -rml libROOTGraphicsPrimitives.so -rmf /mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives.rootmap -I/mnt/build/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/io/io/res -writeEmptyRootPCM ROOT/RBox.hxx ROOT/RColor.hxx ROOT/RDisplayItem.hxx ROOT/RDrawingAttr.hxx ROOT/RDrawingOptsBase.hxx ROOT/RLine.hxx ROOT/RMarker.hxx ROOT/RPalette.hxx ROOT/RStringEnumAttr.hxx ROOT/RStyle.hxx ROOT/RText.hxx /mnt/build/workspace/root-pullrequests-build/root/graf2d/primitives/inc/LinkDef.h ; - Error: Had to build non-system module ROOTGpadv7 implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RPad.hxx:23:10: fatal error: cyclic dependency in module 'ROOTGraphicsPrimitives': ROOTGraphicsPrimitives -&gt; ROOTGpadv7 -&gt; ROOTGraphicsPrimitives ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RBox.hxx:22:10: fatal error: could not build module 'ROOTGpadv7' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libROOTGraphicsPrimitives13fffdb3fe_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3466#issuecomment-467361670:1660,depend,dependency,1660,https://root.cern,https://github.com/root-project/root/pull/3466#issuecomment-467361670,1,['depend'],['dependency']
Integrability,-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc Fit/BasicFCN.h Fit/BinData.h Fit/Chi2FCN.h Fit/DataOptions.h Fit/DataRange.h Fit/FcnAdapter.h Fit/FitConfig.h Fit/FitData.h Fit/FitExecutionPolicy.h Fit/FitResult.h Fit/FitUtil.h Fit/Fitter.h Fit/LogLikelihoodFCN.h Fit/ParameterSettings.h Fit/PoissonLikelihoodFCN.h Fit/SparseData.h Fit/UnBinData.h Math/AdaptiveIntegratorMultiDim.h Math/AllIntegrationTypes.h Math/BasicMinimizer.h Math/BrentMethods.h Math/BrentMinimizer1D.h Math/BrentRootFinder.h Math/ChebyshevPol.h Math/Delaunay2D.h Math/DistFuncMathCore.h Math/DistSampler.h Math/DistSamplerOptions.h Math/Error.h Math/Factory.h Math/FitMethodFunction.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-25T09:12:01.464Z] /mnt/build/workspace/root-pullrequests-build/build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8220#issuecomment-868356611:3453,Integrat,IntegratorOptions,3453,https://root.cern,https://github.com/root-project/root/pull/8220#issuecomment-868356611,1,['Integrat'],['IntegratorOptions']
Integrability,-build/root/roofit/roofit/inc -Iinclude -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofit -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT roofit/roofit/CMakeFiles/RooFit.dir/src/RooBifurGauss.cxx.o -MF roofit/roofit/CMakeFiles/RooFit.dir/src/RooBifurGauss.cxx.o.d -o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBifurGauss.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooBifurGauss.cxx ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:87:22: error: enclosing class of constexpr non-static member function ‘double BatchHelpers::BracketAdapterWithMask::operator[](std::size_t) const’ is not a literal type ; - /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/BatchHelpers.h:91:20: error: enclosing class of constexpr non-static member function ‘bool BatchHelpers::BracketAdapterWithMask::isBatch() const’ is not a literal type . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-526488833:4201,message,message,4201,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-526488833,1,['message'],['message']
Integrability,-i386/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80549/console).; ### Warnings:; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:56: warning: ‘ROOT::TThreadedObject&lt;TH1F&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations] ; - /home/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TThreadedObject.hxx:207:33: warning: ‘ROOT::TThreadedObject&lt;T&gt;::fgMaxSlots’ is deprecated: will be removed in ROOT v6.24: Superior interface exists: construct TThreadedObject using TNumSlots instead. [-Wdeprecated-declarations],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-596724308:1312,interface,interface,1312,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-596724308,3,['interface'],['interface']
Integrability,-jenkins/job/root-pullrequests-build/118087/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844250497:1158,interface,interface,1158,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844250497,1,['interface'],['interface']
Integrability,-jenkins/job/root-pullrequests-build/118088/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:1159,interface,interface,1159,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,1,['interface'],['interface']
Integrability,-jenkins/job/root-pullrequests-build/118089/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844261645:1151,interface,interface,1151,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844261645,1,['interface'],['interface']
Integrability,-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VC-prefix/src/VC-stamp/VC-download ; - CMake Error at VC-stamp/VC-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; - CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - CMake Error at TBB-stamp/TBB-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - CMake Error at VDT-stamp/VDT-download-Release.cmake:16 (message): ; - FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/local/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/local/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:16 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512764850:1365,message,message,1365,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512764850,3,['message'],['message']
Integrability,"-pullrequests-build/root/math/mathcore/src/TMath.cxx:3186:78: error: expected primary-expression before ‘gamma’ ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3201:34: error: ‘ROOT::Double_v TMath::Gaus’ redeclared as different kind of symbol ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3201:34: error: ‘Double_v’ is not a member of ‘TMath::ROOT’ ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/TMath.cxx:3201:44: error: ‘x’ was not declared in this scope . And 30 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400583007:2038,depend,depends,2038,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400583007,1,['depend'],['depends']
Integrability,"-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2024-03-06T09:24:12.969Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - [2024-03-06T09:24:12.969Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/Support/Endian.h(346,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\Interp\InterpFrame.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2024-03-06T09:24:12.969Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/PointerIntPair.h(173,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Frontend\DependencyFile.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2024-03-06T09:24:12.969Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/DenseMap.h(521,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Serialization\ASTCommon.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2024-03-06T09:24:12.969Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\llvm\include\llvm/ADT/DenseMap.h(395,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1980437552:1657,Depend,DependencyFile,1657,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1980437552,1,['Depend'],['DependencyFile']
Integrability,"., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; 615 {; (gdb) p tname.c_str(); $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>""; (gdb) bt; #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437; #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854; #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041; #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957; #5 0x00007ffff78df048 in ?? (); #6 0x0000000000000000 in ?? (); (gdb) n; .....; 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; (gdb); 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));; (gdb); 639 if (!t.isNull()) {; (gdb) p t.dump(); TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function; |-TemplateArgument type 'int (const int *, const std::string &)'; `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'; `-ClassTemplateSpecialization 0x555556b67a18 'function'; $34 = void; ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8470:2971,rout,routine,2971,https://root.cern,https://github.com/root-project/root/issues/8470,1,['rout'],['routine']
Integrability,"... and TCling__SplitAclicMode. The FileNotFound() method of TPPClingCallbacks is called via; Callbacks->FileNotFound(Filename, RecoveryPath) in; Preprocessor::HandleIncludeDirective(), allowing to compile code via; ACLiC when specifying #include ""myfile.C+"", and hence suppressing; preprocessor error message like:; input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4:302,message,message,302,https://root.cern,https://github.com/root-project/root/pull/4,1,['message'],['message']
Integrability,"... but even if it did come clean it would not necessarily prove that it is not needed. Order of tear down is notoriously fickled and may depends on many variable (version of python, compilation options, general order of operation). I.e. unless we unearth the actual commits and/or changes that make this step obsolete, I would not touch it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1156628253:138,depend,depends,138,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1156628253,1,['depend'],['depends']
Integrability,".... well. > Copy the line of the ""required dependencies"". I am not sure what line you mean. > Open a Terminal. ok . > sudo apt update. ask me for a password I do not know ...; Never mind ..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026945835:44,depend,dependencies,44,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026945835,1,['depend'],['dependencies']
Integrability,"...........***Failed Error regular expression found in output. Regex=[Error in] 4.65 sec; test 891; Start 891: tutorial-dataframe-df021_createTGraph-py. 891: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df021_createTGraph.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 891: Environment variables:; 891: ROOT_HIST=0; 891: Test timeout computed to be: 1500; 891: input_line_39:2:28: error: use of undeclared identifier 'x'; 891: auto lambda0 = [](){return x*x; 891: ^; 891: input_line_39:2:30: error: use of undeclared identifier 'x'; 891: auto lambda0 = [](){return x*x; 891: ^; 891: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 891: error code: -529697949; 891:; 891:; 14/16 Test #891: tutorial-dataframe-df021_createTGraph-py .................***Failed Error regular expression found in output. Regex=[: error:] 4.85 sec; test 892; Start 892: tutorial-dataframe-df024_Display-py. 892: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df024_Display.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 892: Environment variables:; 892: ROOT_HIST=0; 892: Test timeout computed to be: 1500; 892: IncrementalExecutor::executeFunction: symbol '?printValue@cling@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PB_K@Z' unresolved while linking [cling interface function]!; 892: You are probably missing the definition of class std::basic_string<char,struct std::char_tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:14249,message,message,14249,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,".........................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:1724,message,message,1724,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['message'],['message']
Integrability,..........................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:2521,interface,interface,2521,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['interface'],['interface']
Integrability,"...............................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx .....................................................",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:2518,message,message,2518,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['message'],['message']
Integrability,"...and add a test. The new argument is to make TTreeProcessorMT consistent with other; multi-threading interfaces, namely TThreadExecutor. This is the last; ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5278:103,interface,interfaces,103,https://root.cern,https://github.com/root-project/root/pull/5278,1,['interface'],['interfaces']
Integrability,...and make it part of the common RAxisBase interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5023:44,interface,interface,44,https://root.cern,https://github.com/root-project/root/pull/5023,1,['interface'],['interface']
Integrability,"...instead of relying on ReadClassBuffer(). This is necessary for schema evolution with RNTuple's custom streamer. ## Changes or fixes:; Using `TBuffer::ReadClassBuffer` in `RNTuple::Streamer` is wrong because it doesn't handle cases where the schema of RNTuple changes. To do that, we need to manually read back the fields depending on the class version. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) - not necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15516:324,depend,depending,324,https://root.cern,https://github.com/root-project/root/pull/15516,1,['depend'],['depending']
Integrability,...or have a new interface in `TTreeReader` that behaves in a saner way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10540#issuecomment-1125329668:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/issues/10540#issuecomment-1125329668,1,['interface'],['interface']
Integrability,"../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3106,message,message,3106,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,1,['message'],['message']
Integrability,..OK; Test 13 : Component plotting variations..........................OK; Test 14 : FFT Convolution operator p.d.f.........................SKIPPED; Test 15 : Analytical convolution operator........................OK; Test 16 : Composition extension of basic p.d.f...................OK; Test 17 : Sum and product utility functions......................OK; Test 18 : Conditional use of F(x|y)..............................OK; Test 19 : Product operator p.d.f. with uncorrelated terms........OK; Test 20 : Product operator p.d.f. with conditional term..........OK; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............OK; Test 23 : Normalization of p.d.f.s in 2D.........................OK; Test 24 : Data and p.d.f projection in category slice............OK; Test 25 : Data and p.d.f projection in sub range.................OK; Test 26 : Fit in multiple rectangular ranges.....................OK; Test 27 : Integration over non-rectangular regions...............OK; Test 28 : P.d.f. marginalization through integration.............OK; Test 29 : Fit with non-rectangular observable boundaries.........OK; Test 30 : Likelihood ratio projection plot.......................OK; Test 31 : Basic operations on datasets...........................OK; RooFitResult::isIdentical: final parameter a1 differs in value:	-0.0526778 vs.	-0.0526783	(-1.09602e-05); RooFitResult::isIdentical: final parameter a2 differs in value:	0.0908314 vs.	0.0907493	(0.000904683); RooUnitTest ERROR: comparison of object RooFitResult::chi2 from result rf403_ml_chi2 fails comparison with counterpart in reference RooFitResult chi2; Test 32 : Fits with weighted datasets............................FAILED; Test 33 : Categories basic functionality.........................OK; Test 34 : Real-to-category functions.............................OK; Test 35 : Category-to-category functions.........................OK; Test 36 : Simultaneous p.d.f. operator.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:4222,Integrat,Integration,4222,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,1,['Integrat'],['Integration']
Integrability,.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.248Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:18.766Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:19.025Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:20.220Z] /build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] ; - [2021-03-22T09:19:52.151Z] include/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter 'nSlots' [-Wunused-parameter] . And 34 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111619/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803916135:2058,Interface,InterfaceUtils,2058,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803916135,1,['Interface'],['InterfaceUtils']
Integrability,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:2561,depend,dependencies,2561,https://root.cern,https://github.com/root-project/root/issues/10777,1,['depend'],['dependencies']
Integrability,".; Running on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169139/console).; ### Errors:; - [2023-02-22T14:16:52.640Z] FAILED: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/SOFIE_common.cxx.o ; - [2023-02-22T14:16:53.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:16:53.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:16:53.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:16:53.617Z] FAILED: tmva/sofie/test/CMakeFiles/emitGNN.dir/__/src/SOFIE_common.cxx.o ; - [2023-02-22T14:16:54.184Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:16:54.184Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:16:54.184Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:16:54.184Z] FAILED: tmva/sofie/test/CMakeFiles/emitGraphInd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440092637:1047,depend,dependent,1047,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440092637,1,['depend'],['dependent']
Integrability,.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.typedef.roottest_cling_typedef_assertTypedefIter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertTypedefIter/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10564/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 45 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1272#issuecomment-341670236:3693,interface,interface,3693,https://root.cern,https://github.com/root-project/root/pull/1272#issuecomment-341670236,2,['interface'],['interface']
Integrability,".com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:1415,message,message,1415,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['message'],['message']
Integrability,".cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory; #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h""; ^; compilation terminated.; CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):; Error generating; /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1; make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; make: *** [all] Error 2; ```. And now here the verbose make output (stdout grep 'nvcc'):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257136223:1394,depend,depend,1394,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257136223,1,['depend'],['depend']
Integrability,".d/init.sh; ```. You can safely ignore the ApMon message. Without the root file, I still see over one hundred preloaded, while ""on demand"" and the memory usage is roughly the same. ```bash; # eulisse at lxplus707.cern.ch in ~ [9:39:17]; → ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading | wc -l; 119. # eulisse at lxplus707.cern.ch in ~ [9:39:24]; → ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l. 34. # eulisse at lxplus707.cern.ch in ~ [9:39:57]; → /usr/bin/time -v root.exe -l -b -q. Command being timed: ""root.exe -l -b -q""; User time (seconds): 0.22; System time (seconds): 0.26; Percent of CPU this job got: 62%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.78; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 139016; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 56647; Voluntary context switches: 5479; Involuntary context switches: 23; Swaps: 0; File system inputs: 0; File system outputs: 0; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. With the root file being loaded, the preloading stays almost the same, while ""on demand"" goes to 41. This also results in a 60MB jump in memory:. ```bash; → ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep Preloading | wc -l; 120. → ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l; 41. → /usr/bin/time -v root.exe -l -b -q ~/public/AO2D.root. Attaching file /afs/cern.ch/user/e/eulisse/public/AO2D.root as _file0...; (TFile *) 0x3910f20; Command exited with non-zero status 255; Command being timed: ""root.exe -l -b -q /afs/cern.ch/user/e/eulisse/public/AO2D.root""; User time (seconds): 0.42; System time (seconds): 0.30; Percent of CPU this j",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1611006906:1958,message,messages,1958,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1611006906,2,['message'],['messages']
Integrability,.h Math/Functor.h Math/GaussIntegrator.h Math/GaussLegendreIntegrator.h Math/GenAlgoOptions.h Math/GoFTest.h Math/IFunction.h Math/IFunctionfwd.h Math/IMinimizer1D.h Math/IOptions.h Math/IParamFunction.h Math/IParamFunctionfwd.h Math/IRootFinderMethod.h Math/Integrator.h Math/IntegratorMultiDim.h Math/IntegratorOptions.h Math/KDTree.h Math/LCGEngine.h Math/Math.h Math/MersenneTwisterEngine.h Math/MinimTransformFunction.h Math/MinimTransformVariable.h Math/Minimizer.h Math/MinimizerOptions.h Math/MinimizerVariableTransformation.h Math/MixMaxEngine.h Math/MultiDimParamFunctionAdapter.h Math/OneDimFunctionAdapter.h Math/ParamFunctor.h Math/PdfFuncMathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appear on non-static member f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:6276,Wrap,WrappedParamFunction,6276,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['Wrap'],['WrappedParamFunction']
Integrability,".h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:4585,depend,dependency,4585,https://root.cern,https://github.com/root-project/root/issues/11765,1,['depend'],['dependency']
Integrability,".org/wiki/Pseudorandom_binary_sequence; */; template <size_t k, size_t nTaps>; vector<bool>; LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false); {; vector<bool> result;; //Sanity-checks; if(taps.size()<2); {; cerr << ""At least two taps are needed"" << endl;; return result;; }; for(auto tap : taps); {; if(tap > k); {; cerr << ""Out of range tap "" << tap << endl;; return result;; }; }; if(start.none()); {; cerr << ""A non-zero start value is needed"" << endl;; return result;; }. const uint32_t maxPeriod = pow(2,k) - 1;; result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;; bitset<k> lfsr(start);; uint32_t i = 0;; do; {; // XOR of all the tapped bits. We use -1 because an exponent N in the monic polynomial corresponds to bitset index N-1; bool newBit = lfsr[taps.at(0) - 1];; for(uint16_t j = 1; j < taps.size() ; ++j); {; newBit ^= lfsr[taps.at(j) - 1];; }. lfsr <<= 1;; lfsr[0] = newBit;; if(verbose); {; cout << i << "" "" << newBit << "" "" << lfsr << endl;; }; result.emplace_back(newBit);; ++i;. if(!wrapping); {; if(lfsrHistory.count(lfsr.to_ulong())); {; break;; }; lfsrHistory.insert(lfsr.to_ulong());; }; }; while(lfsr != start && i < maxPeriod);; result.shrink_to_fit();//only some special taps, namely the PRBS-k, will lead to the maxPeriod, others will stop earlier; return result;; }. void test_prbs(); {; //PRBS3; array<uint16_t, 2> taps3 = {2, 3}; // Exponents of the monic polynomial; auto prbs3 = LFSR(bitset<3>().flip(), taps3);// Start value all high. //PRBS4; array<uint16_t, 2> taps4 = {3, 4}; // Exponents of the monic polynomial; auto prbs4 = LFSR(bitset<4>().flip(), taps4);// Start value all high. //PRBS7; array<uint16_t, 2> taps7 = {7, 6}; // Exponents of the monic polynomial; auto prbs7 = LFSR(bitset<7>().flip(), taps7);// Start value all high. for(auto prbs : {prbs3, prbs4, prbs7}); {; cout << prbs.size() << "":\t"";; for(auto p : prbs); {; cout << p << "" "";; }; cout << endl;; }; return 0;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8199#issuecomment-843369054:2317,wrap,wrapping,2317,https://root.cern,https://github.com/root-project/root/issues/8199#issuecomment-843369054,1,['wrap'],['wrapping']
Integrability,".py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1330,depend,dependency,1330,https://root.cern,https://github.com/root-project/root/pull/15272,1,['depend'],['dependency']
Integrability,.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12134/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 38 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1321#issuecomment-345228175:3239,interface,interface,3239,https://root.cern,https://github.com/root-project/root/pull/1321#issuecomment-345228175,2,['interface'],['interface']
Integrability,/ message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; /,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2113,message,message,2113,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446#issuecomment-537446729:1874,interface,interface,1874,https://root.cern,https://github.com/root-project/root/pull/4446#issuecomment-537446729,2,['interface'],['interface']
Integrability,/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 6 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446#issuecomment-537447310:1876,interface,interface,1876,https://root.cern,https://github.com/root-project/root/pull/4446#issuecomment-537447310,2,['interface'],['interface']
Integrability,"/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x53D12DC: TFile::GetType(char const*, char const*,; TString*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so); ==2512== by 0x53D2847: TFile::Open(char const*, char const*, char; const*, int, int) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libRIO.so); ==2512== by 0x403275: main (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2); ==2512== Uninitialised value was created by a stack allocation; ==2512== at 0x5ABC43E: TSystem::IsPathLocal(char const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512==; ==2512== Conditional jump or move depends on uninitialised value(s); ==2512== at 0x4F01099: TStorage::UpdateIsOnHeap(unsigned int const; volatile&, unsigned int volatile&) (in; /srv/workDir/usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/lib/libH4lAnalysisRun2Lib.so); ==2512== by 0x5A7E9BA: TMessageHandler::Notify() (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A7E2B0: TMessageHandler::HandleMessage(int, TObject; const*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A42360: TROOT::Message(int, TObject const*) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x5A812D4: TObject::Error(char const*, char const*,; ...) const (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libCore.so); ==2512== by 0x3F34D156: TNetXN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759537229:1827,depend,depends,1827,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759537229,1,['depend'],['depends']
Integrability,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:2902,depend,dependency,2902,https://root.cern,https://github.com/root-project/root/issues/16486,1,['depend'],['dependency']
Integrability,/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6019,interface,interface,6019,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"/IncrementalParser.cpp:663; #25 0x00007fffeebcbc4e in cling::Interpreter::DeclareInternal (this=0x4a0f30, input=..., CO=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1195; #26 0x00007fffeebca8e8 in cling::Interpreter::declare (this=0x4a0f30, input=..., T=0x7fffffffd680) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823; #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096; #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140; #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270; #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096; #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233; #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045; #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065; #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:8477,wrap,wrapper,8477,https://root.cern,https://github.com/root-project/root/pull/2776,2,['wrap'],['wrapper']
Integrability,"/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df024_Display.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 892: Environment variables:; 892: ROOT_HIST=0; 892: Test timeout computed to be: 1500; 892: IncrementalExecutor::executeFunction: symbol '?printValue@cling@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PB_K@Z' unresolved while linking [cling interface function]!; 892: You are probably missing the definition of class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cling::printValue(unsigned __int64 const *); 892: Maybe you need to load the corresponding shared library?; 892: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 892: error code: -529697949; 892:; 892:; 15/16 Test #892: tutorial-dataframe-df024_Display-py ......................***Failed 9.91 sec; test 893; Start 893: tutorial-dataframe-df031_Stats-py. 893: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df031_Stats.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 893: Environment variables:; 893: ROOT_HIST=0; 893: Test timeout computed to be: 1500; 893: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 893: error code: -529697949; 893:; 893:; 16/16 Test #893: tutorial-dataframe-df031_Stats-py ........................***Failed 4.47 sec. 0% tests passed, 16 tests failed out of 16. Label Time Summary:; tutorial = 85.86 sec*proc (16 tests). Total Test time (real) = 94",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:15533,message,message,15533,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:1658,message,message,1658,https://root.cern,https://github.com/root-project/root/issues/7982,2,['message'],['message']
Integrability,"/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:3488,message,message,3488,https://root.cern,https://github.com/root-project/root/issues/7982,1,['message'],['message']
Integrability,"/code></a> 0.5.2</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/node-mkdirp/compare/0.5.1...v0.5.6"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~isaacs"">isaacs</a>, a new releaser for mkdirp since your current version.</p>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:9789,Depend,Dependabot,9789,https://root.cern,https://github.com/root-project/root/pull/11865,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"/code></a> fix infinite loop on windows machines</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d784e70d1eb3fc73bcda52f22f57ec55c00c2525""><code>d784e70</code></a> 0.5.3</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d612c5ddca62d50282147f5d199810bf1de0b314""><code>d612c5d</code></a> add files list so this package isn't a monster</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/b2e7ba0dd8ac7029735969c5a6062d49e839b30d""><code>b2e7ba0</code></a> 0.5.2</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/node-mkdirp/compare/0.5.1...v0.5.6"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~isaacs"">isaacs</a>, a new releaser for mkdirp since your current version.</p>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:9603,depend,dependabot,9603,https://root.cern,https://github.com/root-project/root/pull/11865,1,['depend'],['dependabot']
Integrability,/core/clingutils/inc -I/home/stephan/Projects/ROOT/core/clingutils/res -I/home/stephan/Projects/ROOT/core/cont/inc -I/home/stephan/Projects/ROOT/core/foundation/inc -I/home/stephan/Projects/ROOT/core/foundation/v7/inc -I/home/stephan/Projects/ROOT/core/foundation/res -I/home/stephan/Projects/ROOT/core/gui/inc -I/home/stephan/Projects/ROOT/core/meta/inc -I/home/stephan/Projects/ROOT/core/rint/inc -I/home/stephan/Projects/ROOT/core/textinput/inc -I/home/stephan/Projects/ROOT/core/textinput/src -I/home/stephan/Projects/ROOT/core/thread/inc -I/home/stephan/Projects/ROOT/core/zip/inc -I/home/stephan/Projects/ROOT/core/lzma/inc -I/usr/include -I/home/stephan/Projects/ROOT/core/lz4/inc -I/home/stephan/Projects/ROOT/core/zstd/inc -I/home/stephan/Projects/ROOT/core/unix/inc -I/home/stephan/Projects/ROOT/core/unix/../clib/res -I/home/stephan/Projects/ROOT/builtins/xxhash ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:3053,Message,MessageTypes,3053,https://root.cern,https://github.com/root-project/root/issues/12156,1,['Message'],['MessageTypes']
Integrability,/epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11688/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/). And 38 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317#issuecomment-344253085:3229,interface,interface,3229,https://root.cern,https://github.com/root-project/root/pull/1317#issuecomment-344253085,2,['interface'],['interface']
Integrability,"/github.com/isaacs/node-mkdirp/commit/d784e70d1eb3fc73bcda52f22f57ec55c00c2525""><code>d784e70</code></a> 0.5.3</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d612c5ddca62d50282147f5d199810bf1de0b314""><code>d612c5d</code></a> add files list so this package isn't a monster</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/b2e7ba0dd8ac7029735969c5a6062d49e839b30d""><code>b2e7ba0</code></a> 0.5.2</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/node-mkdirp/compare/0.5.1...v0.5.6"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~isaacs"">isaacs</a>, a new releaser for mkdirp since your current version.</p>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:9632,depend,dependabot-automerge-start,9632,https://root.cern,https://github.com/root-project/root/pull/11865,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"/include/TMathBase.h:337:6: error: use of undeclared identifier 'TMath' ; - ./include/TString.h:110:18: error: no type named 'string_view' in namespace 'std' ; - ./include/TString.h:144:38: error: no member named 'TypeTraits' in namespace 'ROOT' ; - ./include/TString.h:144:66: error: 'T' does not refer to a value ; - ./include/TString.h:144:70: error: friends can only be classes or functions ; - ./include/TString.h:144:76: error: friends can only be classes or functions ; - ./include/TString.h:144:83: error: expected ';' at end of declaration list . And 9 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2530#issuecomment-416270073:1354,depend,depends,1354,https://root.cern,https://github.com/root-project/root/pull/2530#issuecomment-416270073,1,['depend'],['depends']
Integrability,"/isaacs/node-mkdirp/commit/2867920c08dc6c47bad0ea5b385a8e78bade0c8f""><code>2867920</code></a> fix infinite loop on windows machines</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d784e70d1eb3fc73bcda52f22f57ec55c00c2525""><code>d784e70</code></a> 0.5.3</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d612c5ddca62d50282147f5d199810bf1de0b314""><code>d612c5d</code></a> add files list so this package isn't a monster</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/b2e7ba0dd8ac7029735969c5a6062d49e839b30d""><code>b2e7ba0</code></a> 0.5.2</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/node-mkdirp/compare/0.5.1...v0.5.6"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~isaacs"">isaacs</a>, a new releaser for mkdirp since your current version.</p>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:9457,Depend,Dependabot,9457,https://root.cern,https://github.com/root-project/root/pull/11865,1,['Depend'],['Dependabot']
Integrability,"/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang-cl"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang-cl-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). -- Generating done; CMake Generate step failed. Build files cannot be regenerated correctly.; error: builder for '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv' failed with exit code 1;; last 10 log lines:; > The dependency target ""install-clang-stripped"" of target; > ""install-clang-cl-stripped"" does not exist.; > Call Stack (most recent call first):; > /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); > interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); > interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:19145,depend,dependency,19145,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,/job/root-pullrequests-build/71792/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.root.io.arrayobject.roottest_root_io_arrayobject_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/arrayobject/roottest_root_io_arrayobject_make/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/71792/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 42 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5154#issuecomment-599546155:2314,interface,interface,2314,https://root.cern,https://github.com/root-project/root/pull/5154#issuecomment-599546155,2,['interface'],['interface']
Integrability,"/local/include/xrootd/private; -- libraries: /usr/local/lib/libXrdUtils.so;/usr/local/lib/libXrdClient.so;/usr/local/lib/libXrdCl.so; CMake Warning (dev) at /usr/local/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:438 (message):; The package name passed to `find_package_handle_standard_args` (PkgConfig); does not match the name of the calling package (Arrow). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; /usr/local/share/cmake/Modules/FindPkgConfig.cmake:99 (find_package_handle_standard_args); cmake/modules/FindArrow.cmake:39 (include); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1040 (find_package); CMakeLists.txt:245 (include); This warning is for project developers. Use -Wno-dev to suppress it. I just ignored it.; after command: cmake --build . --target install, everything goes well and then it stopped with following message. [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x00000000044aaf65 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x00000000044a91b6 llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x00000000044ab726 SignalHandler(int) Signals.cpp:0:0; #3 0x0000000804b32580 (/lib/libthr.so.3+0x1a580); #4 0x0000000804b31b3f (/lib/libthr.so.3+0x19b3f); #5 0x00007ffffffff2d3 ([vdso]+0x2d3); #6 0x0000000804e8ee84 strlen (/lib/libc.so.7+0x157e84); #7 0x000000000161c729 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<std::nullptr_t>(char const*) rootcling_stage1.cxx:0:0; #8 0x000000000161c673 GetEtcDir() rootcling_stage1.cxx:0:0; #9 0x0000000001686202 RootClingMain(int, char**, bool) (/home/cai/root/bld/core/rootcling_stage1/src/rootcling_stage1+0x1686202); #10 0x0000000001697075 ROOT_rootcling_Driver (/home/cai/root/bld/core/rootcling_stage1/src/rootcling_stage1+0x1697075); Stack dump:; 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:1776,message,message,1776,https://root.cern,https://github.com/root-project/root/issues/11430,1,['message'],['message']
Integrability,"/mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:235:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:270:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:306:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409646068:1492,depend,depends,1492,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409646068,2,['depend'],['depends']
Integrability,/root-pullrequests-build/build/include/RConfigure.h:23:3: error: invalid preprocessing directive #R__HAS_MATHMORE ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:26:3: error: invalid preprocessing directive #R__HAS_CLING ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:27:3: error: invalid preprocessing directive #R__HAS_COCOA ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:28:3: error: invalid preprocessing directive #R__HAS_VC ; - [2021-01-25T16:12:32.403Z] /build/workspace/root-pullrequests-build/build/include/RConfigure.h:31:3: error: invalid preprocessing directive #R__USE_LIBCXX ; - [2021-01-25T16:12:34.991Z] CMake Error at /build/workspace/root-pullrequests-build/build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message): ; - [2021-01-25T16:13:51.187Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-01-25T16:12:27.043Z] cc1plus: warning: ‘-Wabi’ won’t warn about anything [-Wabi] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:73:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256’ {aka ‘__vector(8) float’} [-Wignored-attributes] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:74:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256i’ {aka ‘__vector(4) long long int’} [-Wignored-attributes] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:75:42: warning: ignoring attributes on template argument ‘ROOT::Vc::AVX::m256d’ {aka ‘__vector(4) double’} [-Wignored-attributes] ; - [2021-01-25T16:12:27.043Z] /build/workspace/root-pullrequests-build/root/math/vc/include/Vc/avx/types.h:76:42: warning: ignoring attributes on template argument ‘,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089#issuecomment-766928340:1286,message,message,1286,https://root.cern,https://github.com/root-project/root/pull/7089#issuecomment-766928340,1,['message'],['message']
Integrability,"/root/core/thread/test/testTThreadedObject.cxx ; - include/ROOT/TThreadedObject.hxx:324:13: error: ‘lock_guard’ is not a member of ‘std’ ; - include/ROOT/TThreadedObject.hxx:324:45: error: expected primary-expression before ‘&gt;’ token ; - include/ROOT/TThreadedObject.hxx:324:65: error: there are no arguments to ‘lg’ that depend on a template parameter, so a declaration of ‘lg’ must be available [-fpermissive] ; - include/ROOT/TThreadedObject.hxx:324:49: error: ‘lg’ was not declared in this scope ; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -Iinclude -Icore/thread/test -Igoogletest-prefix/src/googletest/googletest/include -Igoogletest-prefix/src/googletest/googlemock/include -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++11 -MD -MT core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o -MF core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o.d -o core/thread/test/CMakeFiles/corethreadtestUnit.dir/testTThreadedObject.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/thread/test/testTThreadedObject.cxx ; - include/ROOT/TThreadedObject.hxx:324:13: error: ‘lock_guard’ is not a member of ‘std’ ; - include/ROOT/TThreadedObject.hxx:324:45: error: expected primary-expression before ‘&gt;’ token ; - include/ROOT/TThreadedObject.hxx:324:65: error: there are no arguments to ‘lg’ that depend on a template parameter, so a declaration of ‘lg’ must be available [-fpermissive] ; - include/ROOT/TThreadedObject.hxx:324:49: error: ‘lg’ was not declared in this scope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-595748340:2971,depend,depend,2971,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-595748340,1,['depend'],['depend']
Integrability,"/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:40:02.927Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:40:1: warning: base class ‘class RooFit::MultiProcess::Job’ should be explicitly initialized in the copy constructor [-Wextra] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientWrapper.h:45:17: warning: ‘virtual void RooFit::TestStatistics::LikelihoodGradientWrapper::synchronizeParameterSettings(const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ was hidden [-Woverloaded-virtual] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/TestStatistics/LikelihoodGradientJob.h:47:9: warning: by ‘virtual void RooFit::TestStatistics::LikelihoodGradientJob::synchronizeParameterSettings(ROOT::Math::IMultiGenFunction*, const std::vector&lt;ROOT::Fit::ParameterSettings&gt;&)’ [-Woverloaded-virtual] ; - [2021-11-29T20:41:10.036Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/TestStatistics/testLikelihoodGradientJob.cpp:467:53: warning: declaration of ‘likelihood’ shadows a member of ‘LikelihoodSimBinnedConstrainedTest_ConstrainedAndOffset_Test’ [-Wshadow]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-982003312:3502,synchroniz,synchronizeParameterSettings,3502,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-982003312,2,['synchroniz'],['synchronizeParameterSettings']
Integrability,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6382,interface,interface,6382,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"/src/RDFInterfaceUtils.cxx:173:31: error: invalid operands of types ‘const char [3]’ and ‘void’ to binary ‘operator+’; TPRegexp replacer(""\\b"" + escapeDots(colOrAlias) + ""\\b""); // watch out: need to replace colOrAlias, not col; ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~; root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:177:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};; ^; In file included from GCC-8.2.0-linux64/include/c++/8.2.0/string:52,; from root-6.24.00/core/meta/inc/TSchemaHelper.h:17,; from root-6.24.00/core/meta/inc/TGenericClassInfo.h:21,; from root-6.24.00/core/base/inc/Rtypes.h:191,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RColumnReaderBase.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/ColumnReaderUtils.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/RAction.hxx:14,; from root-6.24.00/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:14,; from root-6.24.00/tree/dataframe/src/RDFInterfaceUtils.cxx:11:; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3562:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(basic_string&& __str); ^~~~~~~~~~~~; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3545:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]’; basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());; ^~~~~~~~~~~~; GCC-8.2.0-linux64/include/c++/8.2.0/bits/basic_string.h:3498:7: note: candidate: ‘std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477#issuecomment-864130448:3251,Interface,InterfaceUtils,3251,https://root.cern,https://github.com/root-project/root/pull/8477#issuecomment-864130448,1,['Interface'],['InterfaceUtils']
Integrability,/src/core/foundation/inc -I/tmp/workspace/src/core/foundation/v7/inc -I/tmp/workspace/src/core/foundation/res -I/tmp/workspace/src/core/gui/inc -I/tmp/workspace/src/core/meta/inc -I/tmp/workspace/src/core/rint/inc -I/tmp/workspace/src/core/textinput/inc -I/tmp/workspace/src/core/textinput/src -I/tmp/workspace/src/core/thread/inc -I/tmp/workspace/src/core/zip/inc -I/tmp/workspace/src/core/lzma/inc -I/tmp/workspace/build/include -I/tmp/workspace/src/core/lz4/inc -I/tmp/workspace/src/core/zstd/inc -I/tmp/workspace/src/builtins/zstd -I/tmp/workspace/src/core/macosx/inc -I/tmp/workspace/src/core/unix/inc -I/tmp/workspace/src/core/unix/../clib/res -I/tmp/workspace/build/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/tmp/workspace/src/builtins/xxhash -I/tmp/workspace/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12629#issuecomment-1499102403:8346,Message,MessageTypes,8346,https://root.cern,https://github.com/root-project/root/pull/12629#issuecomment-1499102403,1,['Message'],['MessageTypes']
Integrability,/test_stressentrylist_interpreted/); - [projectroot.roottest.root.collection.roottest_root_collection_execHistArray_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/collection/roottest_root_collection_execHistArray_auto/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12203/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1348#issuecomment-345679975:2533,interface,interface,2533,https://root.cern,https://github.com/root-project/root/pull/1348#issuecomment-345679975,1,['interface'],['interface']
Integrability,"/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12373,message,message,12373,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.module -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:8824,protocol,protocols,8824,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['protocol'],['protocols']
Integrability,"/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.module -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:4198,protocol,protocols,4198,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['protocol'],['protocols']
Integrability,/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -writeEmptyRootPCM Foption.h HFitInterface.h TAxis.h TAxisModLab.h TBackCompFitter.h TBinomialEfficiencyFitter.h TConfidenceLevel.h TEfficiency.h TF12.h TF1AbsComposition.h TF1Convolution.h TF1.h TF1NormSum.h TF2.h TF3.h TFitResult.h TFitResultPtr.h TFormula.h TFractionFitter.h TGraph2DErrors.h TGraph2D.h TGraphAsymmErrors.h TGraphBentErrors.h TGraphDelaunay2D.h TGraphDelaunay.h TGraphErrors.h TGraph.h TGraphSmooth.h TGraphTime.h TH1C.h TH1D.h TH1F.h TH1.h TH1I.h TH1K.h TH1S.h TH2C.h TH2D.h TH2F.h TH2.h TH2I.h TH2Poly.h TH2S.h TH3C.h TH3D.h TH3F.h TH3.h TH3I.h TH3S.h THLimitsFinder.h THnBase.h THnChain.h THn.h THnSparse.h THnSparse_Internal.h THStack.h TKDE.h TLimitDataSource.h TLimit.h TMultiDimFit.h TMultiGraph.h TNDArray.h TPolyMarker.h TPrincipal.h TProfile2D.h TProfile2Poly.h TProfile3D.h TProfile.h TSpline.h TSVDUnfold.h TVirtualFitter.h TVirtualGraphPainter.h TVirtualHistPainter.h Math/WrappedMultiTF1.h Math/WrappedTF1.h v5/TF1Data.h v5/TFormula.h v5/TFormulaPrimitive.h ROOT/RAxis.hxx ROOT/RHist.hxx ROOT/RHistBinIter.hxx ROOT/RHistBufferedFill.hxx ROOT/RHistConcurrentFill.hxx ROOT/RHistData.hxx ROOT/RHistImpl.hxx ROOT/RHistUtils.hxx ROOT/RHistView.hxx /mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc/LinkDef.h ; - Error: Had to build non-system module ROOTHistDraw implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RHistDrawable.hxx:21:10: fatal error: cyclic dependency in module 'Hist': Hist -&gt; ROOTHistDraw -&gt; Hist ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:23:10: fatal error: could not build module 'ROOTHistDraw' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libHist819c163063_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3470#issuecomment-467450433:2434,depend,dependency,2434,https://root.cern,https://github.com/root-project/root/pull/3470#issuecomment-467450433,1,['depend'],['dependency']
Integrability,/workspace/root-pullrequests-build/root -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -writeEmptyRootPCM Foption.h HFitInterface.h TAxis.h TAxisModLab.h TBackCompFitter.h TBinomialEfficiencyFitter.h TConfidenceLevel.h TEfficiency.h TF12.h TF1AbsComposition.h TF1Convolution.h TF1.h TF1NormSum.h TF2.h TF3.h TFitResult.h TFitResultPtr.h TFormula.h TFractionFitter.h TGraph2DErrors.h TGraph2D.h TGraphAsymmErrors.h TGraphBentErrors.h TGraphDelaunay2D.h TGraphDelaunay.h TGraphErrors.h TGraph.h TGraphSmooth.h TGraphTime.h TH1C.h TH1D.h TH1F.h TH1.h TH1I.h TH1K.h TH1S.h TH2C.h TH2D.h TH2F.h TH2.h TH2I.h TH2Poly.h TH2S.h TH3C.h TH3D.h TH3F.h TH3.h TH3I.h TH3S.h THLimitsFinder.h THnBase.h THnChain.h THn.h THnSparse.h THnSparse_Internal.h THStack.h TKDE.h TLimitDataSource.h TLimit.h TMultiDimFit.h TMultiGraph.h TNDArray.h TPolyMarker.h TPrincipal.h TProfile2D.h TProfile2Poly.h TProfile3D.h TProfile.h TSpline.h TSVDUnfold.h TVirtualFitter.h TVirtualGraphPainter.h TVirtualHistPainter.h Math/WrappedMultiTF1.h Math/WrappedTF1.h v5/TF1Data.h v5/TFormula.h v5/TFormulaPrimitive.h ROOT/RAxis.hxx ROOT/RHist.hxx ROOT/RHistBinIter.hxx ROOT/RHistBufferedFill.hxx ROOT/RHistConcurrentFill.hxx ROOT/RHistData.hxx ROOT/RHistImpl.hxx ROOT/RHistUtils.hxx ROOT/RHistView.hxx /mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc/LinkDef.h ; - Error: Had to build non-system module ROOTHistDraw implicitly. You first need to ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RHistDrawable.hxx:21:10: fatal error: cyclic dependency in module 'Hist': Hist -&gt; ROOTHistDraw -&gt; Hist ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:23:10: fatal error: could not build module 'ROOTHistDraw' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libHistdad8e0d21c_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3470#issuecomment-467443510:2434,depend,dependency,2434,https://root.cern,https://github.com/root-project/root/pull/3470#issuecomment-467443510,1,['depend'],['dependency']
Integrability,"0,; ""Do not recover from input errors"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""help""), help, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print this help text"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""L""), L, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Add directory to library search path"", ""<directory>"", nullptr); OPTION(prefix_3, llvm::StringLiteral(""l""), l, JoinedOrSeparate, INVALID, INVALID, nullptr, 0, 0,; ""Load a library before prompt"", ""<library>"", nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr=""), _metastr_EQ, Joined, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""metastr""), _metastr, Separate, INVALID, INVALID, nullptr, 0, 0,; ""Set the meta command tag, default '.'"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""nologo""), _nologo, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Do not show startup-banner"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""noruntime""), noruntime, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Disable runtime support (no null checking, no value printing)"", nullptr, nullptr); OPTION(prefix_1, llvm::StringLiteral(""ptrcheck""), _ptrcheck, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Enable injection of pointer validity checks"", nullptr, nullptr); OPTION(prefix_2, llvm::StringLiteral(""version""), version, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Print the compiler version"", nullptr, nullptr); OPTION(prefix_3, llvm::StringLiteral(""v""), v, Flag, INVALID, INVALID, nullptr, 0, 0,; ""Enable verbose output"", nullptr, nullptr); #endif // OPTION. #ifdef SIMPLE_ENUM_VALUE_TABLE. struct SimpleEnumValue {; const char *Name;; unsigned Value;; };. struct SimpleEnumValueTable {; const SimpleEnumValue *Table;; unsigned Size;; };; static const SimpleEnumValueTable SimpleEnumValueTables[] = {};; static const unsigned SimpleEnumValueTablesSize = std::size(SimpleEnumValueTables);; #endif // SIMPLE_ENUM_VALUE_TABLE; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628#issuecomment-1933795392:3182,inject,injection,3182,https://root.cern,https://github.com/root-project/root/pull/14628#issuecomment-1933795392,1,['inject'],['injection']
Integrability,"0.0] kXR_protocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed CERN:. https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout. [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Failed Technion:. https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout. [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed Manchester:. https://bigpanda.cern.ch//media/filebrowser/75e12a74-de3e-4b78-bc16-cfcde3fdcb77/panda/tarball_PandaJob_4926186317_UKI-NORTHGRID-MAN-HEP/payload.stdout. [2020-12-19 00:36:00.516637 +0000][Debug ][XRootDTransport ] [bohr3226.tier2.hep.manchester.ac.uk:1094 #0.0] kXR_protocol successful (type: manager [], protocol v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:3703,protocol,protocol,3703,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,0.746Z] CMake Error at VC-stamp/VC-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:00.746Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VDT-prefix/src/VDT-stamp/VDT-download ; - [2021-10-29T11:02:00.746Z] CMake Error at VDT-stamp/VDT-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/VECCORE-prefix/src/VECCORE-stamp/VECCORE-download ; - [2021-10-29T11:02:04.031Z] CMake Error at VECCORE-stamp/VECCORE-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:04.031Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-download ; - [2021-10-29T11:02:04.031Z] CMake Error at TBB-stamp/TBB-download-Release.cmake:49 (message): ; - [2021-10-29T11:02:25.960Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src && /usr/bin/cmake -P /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download-Release.cmake && /usr/bin/cmake -E touch /mnt/build/workspace/root-pullrequests-build/build/builtins/davix/DAVIX-prefix/src/DAVIX-stamp/DAVIX-download ; - [2021-10-29T11:02:25.960Z] CMake Error at DAVIX-stamp/DAVIX-download-Release.cmake:49 (message): . ### Warnings:; - [2021-10-29T11:01:20.633Z] CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-954652370:1597,message,message,1597,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-954652370,1,['message'],['message']
Integrability,"00; [2021-01-12 06:55:54.209937 -0500][Debug ][TaskMgr ]; Registering task: ""TickGeneratorTask for: this-will-totally-fail:1094""; to be run at: [2021-01-12 06:56:09 -0500]; [2021-01-12 06:55:54.209976 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] MsgHandler created: 0x3171890 (message:; kXR_open (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat; ) ).; [2021-01-12 06:55:54.210005 -0500][Dump ][PostMaster ]; [this-will-totally-fail:1094 #0] Sending message kXR_open (file: ,; mode: 00, flags: kXR_open_read kXR_async kXR_retstat ) (0x31933e0); through substream 0 expecting answer at 0; [2021-01-12 06:55:54.210582 -0500][Error ][Utility ] Unable; to resolve this-will-totally-fail:1094: Name or service not known; [2021-01-12 06:55:54.210595 -0500][Error ][PostMaster ]; [this-will-totally-fail:1094 #0] Unable to resolve IP address for the; host; [2021-01-12 06:55:54.210610 -0500][Error ][XRootD ]; [this-will-totally-fail:1094] Unable to send the message kXR_open; (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat ):; [FATAL] Invalid address; [2021-01-12 06:55:54.210651 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] Destroying MsgHandler: 0x3171890.; Error in <TNetXNGFile::Open>: [FATAL] Invalid address; [2021-01-12 06:55:54.211229 -0500][Debug ][Utility ]; Monitor library name not set. No monitoring. The TFile is expected to fail, but why the segfault?; The jobs ran on native CentOS, so the singularity container theory is; another good one shot down by facts. Cheers,; Rod. On Tue, 12 Jan 2021 at 12:15, Attila Krasznahorkay <notifications@github.com>; wrote:. > Hi @rdschaffer <https://github.com/rdschaffer>,; >; > And it seems only in October, was it?; >; > Would you know if it may have been tied to your analysis going to a; > different analysis release?; >; > Analysis release 21.2.139 uses XRootD 4.10.0. (As it happens we switched; > to XRootD 4.12.2 just with AnalysisBase-21.2.140.) We've used XRootD 4.10.0; > (in sync with exter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758618647:1509,message,message,1509,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758618647,1,['message'],['message']
Integrability,"01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #26 0x00002b8fceee69fa in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #27 0x00002b8fceee79e1 in cling::Interpreter::DeclareCFunction(llvm::StringRef, llvm::StringRef, bool, cling::Transaction*&) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #28 0x00002b8fceeeaa2d in cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #29 0x00002b8fcee7556b in TClingCallFunc::compile_wrapper (this=0x2b913aff4c00, wrapper_name=..., wrapper=..., withAccessControl=true) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-8e7a9c4406e195d049d6d9526c8e2ae6/root-6.23.01/core/metacling/src/TClingCallFunc.cxx:267; #30 0x00002b8fcee78390 in TClingCallFunc::make_wrapper (this=0x2b913aff4c00) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-8e7a9c4406e195d049d6d9526c8e2ae6/root-6.23.01/core/metacling/src/TClingCallFunc.cxx:1117; #31 0x00002b8fcee7d5a8 in TClingCallFunc::IFacePtr (this=0x2b913aff4c00) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-8e7a9c4406e195d049d6d9526c8e2ae6/root-6.23.01/core/metacling/src/TClingCallFunc.cxx:2301; #32 0x00002b8fced52d75 in TCling::CallFunc_IFacePtr (this=0x2b8fb708cf80, func=0x2b913aff4c00) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-8e7a9c4406e195d049d6d9526c8e2ae6/root-6.23.01/core/metacling/src/TCling.cxx:7882; #33 0x00002",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093:10896,wrap,wrapper,10896,https://root.cern,https://github.com/root-project/root/issues/7093,1,['wrap'],['wrapper']
Integrability,"01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500); [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username: atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private IPv6: false. Failed Tokyo:. https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout. [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed CERN:. https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout. [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Failed Technion:.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:3061,protocol,protocol,3061,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,019\Community\VC\Tools\MSVC\14.20.27508\include\vector(503): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_6242897aex': No space left on device [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\ROOTDataFrame.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\gui\sessionviewer\src\TSessionDialogs.cxx(164): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b5bd4027ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\sessionviewer\SessionViewer.vcxproj] ; - C:\build\workspace\root-pullrequests-build\build\include\TGFrame.h(282): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_6e940083ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\ged\Ged.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\gui\fitpanel\inc\TAdvancedGraphicsDialog.h(97): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_0afdfcb7db': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\fitpanel\FitPanel.vcxproj] ; - C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.20.27508\include\memory(778): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_51fab9d8ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\guihtml\GuiHtml.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\gui\guibuilder\src\TRootGuiBuilder.cxx(2598): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c2423a01gl': No space left on device [C:\build\workspace\root-pullrequests-build\build\gui\guibuilder\GuiBld.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527126611:2656,message,message,2656,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527126611,1,['message'],['message']
Integrability,"023-02-22T14:16:53.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:16:53.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:16:53.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:16:53.617Z] FAILED: tmva/sofie/test/CMakeFiles/emitGNN.dir/__/src/SOFIE_common.cxx.o ; - [2023-02-22T14:16:54.184Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - [2023-02-22T14:16:54.184Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:10: error: ‘assert’ was not declared in this scope ; - [2023-02-22T14:16:54.184Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:466:10: error: ‘assert’ was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive] ; - [2023-02-22T14:16:54.184Z] FAILED: tmva/sofie/test/CMakeFiles/emitGraphIndependent.dir/__/src/SOFIE_common.cxx.o ; - [2023-02-22T14:16:54.761Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/SOFIE_common.hxx:464:4: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] . And 34 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1440092637:1395,depend,depend,1395,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1440092637,3,['depend'],"['depend', 'dependent']"
Integrability,"0231010/0; 338: ****************************************************************************; 338: (bool) false; 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:; test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec; ```. New pass manager:; ```bash; dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Test project /home/dvalapar/work/root/newpassmanager; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 338; Start 338: test-stressinterpreter. 338: Test command: /usr/bin/cmake ""-DCMD=/home/dvalapar/work/root/newpassmanager/test/stressInterpreter"" ""-DPRE=/usr/bin/cmake^-E^copy^/home/dvalapar/work/root/test/stressInterpreter.cxx^/home/dvalapar/work/root/newpassmanager/test/stressInterpreter.cxx"" ""-DSYS=/home/dvalapar/work/root/newpassmanager"" ""-P"" ""/home/dvalapar/work/root/newpassmanager/RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:3359,depend,dependency,3359,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,1,['depend'],['dependency']
Integrability,"05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:1711,Integrat,Integrating,1711,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,06:04.193Z] FAILED: roofit/roofitcore/G__RooFitCore.cxx lib/libRooFitCore_rdict.pcm lib/libRooFitCore.rootmap /mnt/build/workspace/root-pullrequests-build/build/roofit/roofitcore/G__RooFitCore.cxx /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCore_rdict.pcm /mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCore.rootmap ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:32:13: error: typedef redefinition with different types ('IMultiGenFunctionTempl&lt;double&gt;' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: typedef redefinition with different types ('ROOT::Math::IBaseFunctionMultiDim' (aka 'IBaseFunctionMultiDimTempl&lt;double&gt;') vs 'ROOT::Math::IMultiGenFunction') ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:154:37: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:174:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:180:43: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:193:40: error: base class has incomplete type ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:215:30: error: only virtual member functions can be marked 'override' ; - [2023-01-06T12:06:08.435Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/WrappedFunction.h:219:43: error: only virtual member functions can be marked 'override' . ### Warnings:; -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373548076:1294,Wrap,WrappedFunction,1294,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373548076,1,['Wrap'],['WrappedFunction']
Integrability,0T14:59:27.381Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please u,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:1407,interface,interfaces,1407,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,1,['interface'],['interfaces']
Integrability,0T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:1757,interface,interfaces,1757,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,1,['interface'],['interfaces']
Integrability,"0x00007ffff76d1364 in TGClient::HandleInput (this=0x5555563eef20) at /opt/root_src/gui/gui/src/TGClient.cxx:703; #15 0x00007ffff76cf70c in TGInputHandler::Notify (this=0x5555564c87f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117; #16 0x00007ffff6fa0d9f in TUnixSystem::DispatchOneEvent (this=0x5555557f57c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1067; #17 0x00007ffff6e863af in TSystem::InnerLoop (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406; #18 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356; #19 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604; #20 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}; ```. again debug, but a different trace; ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff7f8fb80 (LWP 23769) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; 2 Thread 0x7fffa2a96700 (LWP 23803) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747dfa8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; (gdb) thread apply all bt. Thread 2 (Thread 0x7ff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:9340,Protocol,Protocol,9340,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['Protocol'],['Protocol']
Integrability,"1' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:571:27: error: call to 'BesselK0' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:572:27: error: call to 'BesselK1' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:617:14: error: call to 'BesselI0' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:636:21: error: call to 'BesselI0' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:637:21: error: call to 'BesselI1' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:726:43: error: call to 'BesselJ0' is ambiguous . And 2 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405616154:1604,depend,depends,1604,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405616154,1,['depend'],['depends']
Integrability,"1-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:5098,interface,interface,5098,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,1. Annotate more RooFit interfaces with the `RooFit::OwningPtr<T>` type.; 2. Fix memory leaks in RooFit tutorials by wrapping toy datasets in `std::unique_ptr`; 3. Fix a warning in the tutorials by consistently using `override` in the code generated by `RooClassFactory`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13096:24,interface,interfaces,24,https://root.cern,https://github.com/root-project/root/pull/13096,2,"['interface', 'wrap']","['interfaces', 'wrapping']"
Integrability,"1. Create TWebCanvas from TRootGuiFactory if nothing else is configured; 2. Add warning message when web-based canvas started by default; 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back; 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`.; If no extra command-line arguments are specified, web canvas will be started and warning message will appear.; Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13107:88,message,message,88,https://root.cern,https://github.com/root-project/root/pull/13107,3,"['depend', 'message']","['depending', 'message']"
Integrability,1. Do not expose special parameters to URL string - now in default HTML file special attributes can be inserted together with `JSROOT.ConnectWebWindow` call; 2. Correctly handle `#` in WebWindow URL. Such symbol used for routing inside webpage and will be often used with openui5; 3. Unify handling of URL options with RWebDisplayArgs. For now only `key` and `batch_mode` parameters are exposed to web window URL; 4. Update/extend doxygen docu; 5. Fix error in v7 CanvasPainter - v616 already fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3561:221,rout,routing,221,https://root.cern,https://github.com/root-project/root/pull/3561,1,['rout'],['routing']
Integrability,1. Fix - handle reordering of fragments in multipart reply https://github.com/root-project/jsroot/issues/319; 2. Fix - properly show non-zero entries https://github.com/root-project/jsroot/issues/320; 3. Fix - display empty hist bin if fSumw2 not zero; 4. Fix - let use batch_mode script injection in interactive session,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16792:288,inject,injection,288,https://root.cern,https://github.com/root-project/root/pull/16792,1,['inject'],['injection']
Integrability,"1. Fix problem with fragmented websocket messages - some browsers can split messages on 120KB chunks. Now message merged together before delivered to the user.; 2. Solve problem with Google Chrome run in headless mode. ; Now chrome browser can run in headless mode without any special debugging flags, which opens some http ports. Now THttpServer provides special ""dummy"" script, which timedout until batch job is not finished.; 3. Try to correctly handle situation when browser hangs and does not reply for a long time. After pre-configured timeout (default 50 sec) such browser application will be closed.; 4. Let identify connecting websocket at the very beginning - with the first connect request. Allows to reject not allowed connection. Also for the future simplifies re-connection.; 5. In TWebWindow clearly identify batch job connection, let reuse if for consequent jobs, close it after 20 sec of idle time; 6. Use std::recursive_mutex in WebWindowsManager to protect methods which creates THttpServer / creates new window / starts new web browser. Comment out special manager guard - useless without special threading functionality; 7. Correspondent changes in JSROOT. ; 8. Special handling of 2d/3d canvas when producing PNG images - now is more consistent, no need to use THREE.SVGRenderer for that; 9. Add canvas size to the RPadDisplayItem class, used only in batch mode to configure image size; 10. Use workaround with static mutex to protect I/O in canvas painter in multi-threaded environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:41,message,messages,41,https://root.cern,https://github.com/root-project/root/pull/2603,3,['message'],"['message', 'messages']"
Integrability,"1. Introduce special timer to send data to clients. If not everything can be send at once, after short timeout will be tried again; 2. Extend functionality of control message, manage it per connection. All special messages like enabling editor, moving web browser, enable/disable tooltip - all belong now to control message; 3. Change message priority, try to send as much as possible. First one sends control message, then specially requests for menu or projection and finally update for canvas drawing.; 4. Implement `Raise() / Iconify()` methods, they fully depend on the web browser",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13285:167,message,message,167,https://root.cern,https://github.com/root-project/root/pull/13285,6,"['depend', 'message']","['depend', 'message', 'messages']"
Integrability,"1. Let load and directly draw `TGeoVolume` object in geometry viewer - disregard of `TGeoManager` state; 2. Let draw `TGeoVolumeAssembly` from `RBrowser`; 3. Functionality to produce JSON from geometry viewer data, such JSON can be used on JSROOT for three.js model generation; 4. Update JSROOT; 5. Remove dependency from EVE7 components in geometry viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11449:306,depend,dependency,306,https://root.cern,https://github.com/root-project/root/pull/11449,1,['depend'],['dependency']
Integrability,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14119:216,message,messages,216,https://root.cern,https://github.com/root-project/root/pull/14119,1,['message'],['messages']
Integrability,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11727:737,message,message,737,https://root.cern,https://github.com/root-project/root/pull/11727,1,['message'],['message']
Integrability,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11822:701,depend,dependency,701,https://root.cern,https://github.com/root-project/root/pull/11822,1,['depend'],['dependency']
Integrability,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16416:426,inject,inject,426,https://root.cern,https://github.com/root-project/root/pull/16416,2,['inject'],['inject']
Integrability,"1. Support plain TBranch; 2. Fix error with item double-click; 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside; 4. Show warning message when double-click action takes too long time; 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7938:157,message,message,157,https://root.cern,https://github.com/root-project/root/pull/7938,1,['message'],['message']
Integrability,"1. When filter expression entered, reopen folders again. Means if `TFile` keys were shown, they will be shown again. ; 2. When object like `TH1` or `TTree` read from `TFile`, it will be removed from managed objects and owned by `RBrowser`. This allows to correctly work with different histograms version at the time.; 3. Show `TFile` size ; 4. Fix two LGTM warnings; 5. Add `root7` as dependency for `RGeomViewer`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11585:385,depend,dependency,385,https://root.cern,https://github.com/root-project/root/pull/11585,1,['depend'],['dependency']
Integrability,"1.0.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=path-parse&package-manager=npm_and_yarn&previous-version=1.0.6&new-version=1.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863:931,Depend,Dependabot,931,https://root.cern,https://github.com/root-project/root/pull/11863,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:5734,message,message,5734,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"12:22: error: incomplete type ‘TFile’ used in nested name specifier ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:915:29: error: incomplete type ‘TFile’ used in nested name specifier ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:923:11: error: invalid use of incomplete type ‘class TFile’ ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:924:18: error: incomplete type ‘TFile’ used in nested name specifier ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:34: error: invalid use of incomplete type ‘class TFile’ ; - /mnt/build/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:34: error: invalid use of incomplete type ‘class TFile’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2619#issuecomment-421309703:1191,depend,depends,1191,https://root.cern,https://github.com/root-project/root/pull/2619#issuecomment-421309703,1,['depend'],['depends']
Integrability,"136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Assuming field 'fIg1Dim' is null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:11975,Wrap,WrappedMemFunction,11975,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Wrap'],['WrappedMemFunction']
Integrability,"136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:7191,Wrap,WrappedMemFunction,7191,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Wrap'],['WrappedMemFunction']
Integrability,14 : FFT Convolution operator p.d.f.........................SKIPPED; Test 15 : Analytical convolution operator........................OK; Test 16 : Composition extension of basic p.d.f...................OK; Test 17 : Sum and product utility functions......................OK; Test 18 : Conditional use of F(x|y)..............................OK; Test 19 : Product operator p.d.f. with uncorrelated terms........OK; Test 20 : Product operator p.d.f. with conditional term..........OK; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............OK; Test 23 : Normalization of p.d.f.s in 2D.........................OK; Test 24 : Data and p.d.f projection in category slice............OK; Test 25 : Data and p.d.f projection in sub range.................OK; Test 26 : Fit in multiple rectangular ranges.....................OK; Test 27 : Integration over non-rectangular regions...............OK; Test 28 : P.d.f. marginalization through integration.............OK; Test 29 : Fit with non-rectangular observable boundaries.........OK; Test 30 : Likelihood ratio projection plot.......................OK; Test 31 : Basic operations on datasets...........................OK; RooFitResult::isIdentical: final parameter a1 differs in value:	-0.0526778 vs.	-0.0526783	(-1.09602e-05); RooFitResult::isIdentical: final parameter a2 differs in value:	0.0908314 vs.	0.0907493	(0.000904683); RooUnitTest ERROR: comparison of object RooFitResult::chi2 from result rf403_ml_chi2 fails comparison with counterpart in reference RooFitResult chi2; Test 32 : Fits with weighted datasets............................FAILED; Test 33 : Categories basic functionality.........................OK; Test 34 : Real-to-category functions.............................OK; Test 35 : Category-to-category functions.........................OK; Test 36 : Simultaneous p.d.f. operator...........................OK; Test 37 : Workspace and p.d.f. persistence........,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:4322,integrat,integration,4322,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,1,['integrat'],['integration']
Integrability,"14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Diagnostic.h(180): message : see reference to class template instantiation 'llvm::SmallVector<clang::FixItHint,6>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12379:1494,message,message,1494,https://root.cern,https://github.com/root-project/root/pull/12379,6,['message'],['message']
Integrability,14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.383Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:183:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:2459,interface,interfaces,2459,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,1,['interface'],['interfaces']
Integrability,"1da4cd4006""><code>f8145c5</code></a> Add 'allowWindowsEscape' option</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/570e8b1aef6c9e823a824aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:1914,depend,dependency-name,1914,https://root.cern,https://github.com/root-project/root/pull/11864,1,['depend'],['dependency-name']
Integrability,"2-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed CERN:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout; >; > [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [; > eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Failed Technion:; >; >; > https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout; >; > [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [; > tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed Manchester:; >; >; > https://bigpanda.cern.ch//media/filebrowser/75e12a74-de3e-4b78-bc16-cfcde3fdcb77/panda/tarball_PandaJob_4926186317_UKI-NORTHGRID-MAN-HEP/payload.stdout; >; > [2020-12-19 00:36:00.516637 +0000][Debug ][XRootDTransport ] [; > bohr3226.tier2.hep.manchester.ac.uk:1094 #0.0] kXR_protocol successful; > (type: manager [], protocol version 500); >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-758062082>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRWG72B5EXUTO6T63C3SZMQJNANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:4882,protocol,protocol,4882,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,2,['protocol'],['protocol']
Integrability,"2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:7563,message,message,7563,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:648:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TMethod.cxx:235:28: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TMethod.cxx:243:31: warning: ‘%s’ directive output may be truncated writing up to 63 bytes into a region of size 61 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:991,depend,depends,991,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['depend'],['depends']
Integrability,"292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf; Integrating Gaussian distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04; 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07; 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03; Integrating Gaussian distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02; 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02; 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07; Integrating Gauss",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:3111,Integrat,Integrating,3111,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,"2b74b31cd79dc51b; which modifies the `TFileMerger` class. . The slow down affect ROOT versions `>= 6.22.08`. The problem is the call of the ; ```; else; dirtodelete.Add(result);; ```. When hadding files, those two lines are called for each object found in a TDirectory. ; So for instance if you store histograms in a TDirectory the directory is going to be added to `dirtodelete` as many times as you have histograms in that directory. And this slows down condiderably the hadd command as previously there was not such thing done. The deletion is called several times over the same object as well which is also inneficient. . With some inputs containing several TDirectories, hadding with ROOT version `6.22.06` takes around 1 hour on lxplus ; whereas with ROOT version `>= 6.22.08` it would take more than a day... I can provide inputs files to illustrate the problem that are stored here ; /eos/user/b/bouquet/VHbbcc_results/testHadd_3periods/; (3 files of size ~5GB each they contain ~640 TDirectory each one containing around 6000 histograms) . Or available thanks to the following link ; https://cernbox.cern.ch/index.php/s/FBryG2p5Lshp6Lx; (in practive you can download just one file and replicate it 2 times to have 3 files to hadd and do tests) . I can tell the hadd is much slower as the names of Tdirectory processed are printed out and the difference in time to process only just one TDirectory is large depending on the ROOT version used it takes few seconds (`v6.22.06`) versus 10-15 minutes (`>= v6.22.08`). . This bug needs to be absolutely fixed as it would affect many analyses and it needs backported to all the root versions starting from `6.22.08`. . I made a test commenting the two lines with the following gitlab repository https://gitlab.cern.ch/robouque/haddtests; ```; else; dirtodelete.Add(result);; ```; the speed is restored even using `ROOT 6.22.08`. So the problem really comes from adding the directory many times to that list. Many thanks in advance, ; Best, ; Romain",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9939:1686,depend,depending,1686,https://root.cern,https://github.com/root-project/root/issues/9939,1,['depend'],['depending']
Integrability,"2e4b30b8c2 [RF] Better server redirection in compileForNormSet without attributes; d5ca98077e [RF] New function for server changing without setting attributes; 1f8a1666d1 [RF] Factor out marking compiled args in `NormalizationHelpers`; 7db5be20e9 [RF] Support multiple NLL with BatchMode existing at the same time; 24f1ca4fc1 [RF] Add exception if `RooAbsArg::_dataToken` is corrupted; ef69ad7633 [RF] Refactor BatchMode likelihood creation code; 364f67393d [RF] Disable RooFit multiprocess ProcessTimer test; e7d4ec3a69 [RF] Introduce `ROOFIT_MEMORY_SAFE_INTERFACES` macro; 3fd6057316 [RF] Use `RooFit::OwningPtr<>` also for RooAbsReal::createIntegral(); 8ad7711af6 [RF] Fix several memory leaks in `RooProdPdf::rearrangeProduct()`; ab420820bb [RF] Remove unused `binb` variable in RooBinnedGenContext; 81fbc904d4 [RF] Less manual memory management in RooFit; ff32c33446 [RF] Modernize memory management in RooStats; d89d54ce65 [RF] Fix `getPropagatedError()` negative parameter case for zero error; 4542e761eb [RF] Flag `RooAbsArg::getObservables()` as returning owning pointer; c246acb066 [RF] Always use `addOwned()` overload that takes `unique_ptr`; f17180742c [RF] Add `ExternalConstraints`, createNLL() and fitTo() to ModelConfig; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:3041,interface,interface,3041,https://root.cern,https://github.com/root-project/root/pull/12905,1,['interface'],['interface']
Integrability,"2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private IPv6: false. Failed Tokyo:. https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout. [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout. [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Fail canada:. https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout. [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed CERN:. https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout. [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 400). Failed Technion:. https://bigpanda.cern.ch//media/filebrowser/a51fb0cb-4f96-4442-b0c2-ea15e6d72bf7/panda/tarball_PandaJob_4926186375_TECHNION/payload.stdout. [2020-12-19 02:37:01.970916 +0200][Debug ][XRootDTransport ] [tech-gftp.hep.technion.ac.il:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400). Failed Manch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:3381,protocol,protocol,3381,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,"3-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc""><code>13c01a5</code></a></li>; <li>even more aggressive checks for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab""><code>38a4d1c</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2"">v1.2.2</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>failing test for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab""><code>0efed03</code></a></li>; <li>cleanup <a href=""https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2""><code>67d3722</code></a></li>; <li>console.dir -&gt; console.log <a href=""https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54""><code>47acf72</code></a></li>; <li>don't assign onto <strong>proto</strong> <a href=""https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94""><code>63e7ed0</code></a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/minimistjs/minimist/commit/c590d75b741a12b5423e2b299f38a7f7c7d25a18""><code>c590d75</code></a> v1.2.7</li>; <li><a href=""https://github.com/minimistjs/minimist/commit/0ebf4ebcd5f7787a5524d31a849ef41316b83",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:4590,protocol,protocol,4590,https://root.cern,https://github.com/root-project/root/pull/11865,1,['protocol'],['protocol']
Integrability,"3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/ar -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_INSTALL_PREFIX=/nix/store/4csvzgc3216rdp2lndklpcqr67w5mcc5-root-6.28.00 -Drpath=ON -Dbuiltin_llvm=OFF -Dbuiltin_freetype=OFF -Dbuiltin_gtest=OFF -Dbuiltin_nlohmannjson=OFF -Dbuiltin_openui5=OFF -Dalien=OFF -Dbonjour=OFF -Dcastor=OFF -Dchirp=OFF -Dclad=OFF -Ddavix=ON -Ddcache=OFF -Dfail-on-missing=ON -Dfftw3=OFF -Dfitsio=OFF -Dfortran=OFF -Dgnuinstall=ON -Dimt=ON -Dgfal=OFF -Dgviz=OFF -Dhdfs=OFF -Dhttp=ON -Dkrb5=OFF -Dldap=OFF -Dmonalisa=OFF -Dmysql=OFF -Dodbc=OFF -Dopengl=ON -Doracle=OFF -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Drfio=OFF -Droot7=OFF -Dsqlite=OFF -Dssl=ON -Dtmva=ON -Dvdt=OFF -Dwebgui=OFF -Dxml=ON -Dxrootd=ON -DC_INCLUDE_DIRS=/nix/store/nasgvbblxi25r6y1s82il4m0m4ghib68-glibc-2.35-224-dev/include ; -- The C compiler identification is GNU 11.3.0; -- The CXX compiler identification is GNU 11.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /nix/store/1y8i61anhs9hh1g5x3zw2fvdbivwixzg-gcc-wrapper-11.3.0/bin/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /nix/store/bslw1kzx445wxp08ykq2vdsgnr516vcq-git-2.39.1/bin/git (found version ""2.39.1"") ; -- Checking internet connectivity; -- Checking internet connectivity - failed: will not automatically download external dependencies; -- Looking for Python; -- Found Python3: /nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python3.10 (found version ""3.10.9"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:4691,wrap,wrapper-,4691,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper-']
Integrability,"4,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2736,rout,routine,2736,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['rout'],['routine']
Integrability,4.8 is still mentioned in the dependencies here: https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370#issuecomment-985615217:30,depend,dependencies,30,https://root.cern,https://github.com/root-project/root/issues/9370#issuecomment-985615217,2,['depend'],['dependencies']
Integrability,46354/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1142372934:2388,interface,interface,2388,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1142372934,2,['interface'],['interface']
Integrability,"491031 libCore.so`TMacOSXSystem::ProcessPendingEvents(this=0x0000000100c06d60) at TMacOSXSystem.mm:473; frame #42: 0x000000010049097d libCore.so`TMacOSXSystem::DispatchOneEvent(this=0x0000000100c06d60, pendingOnly=true) at TMacOSXSystem.mm:365; frame #43: 0x0000000100294f4b libCore.so`TSystem::ProcessEvents(this=0x0000000100c06d60) at TSystem.cxx:429; frame #44: 0x0000000100fe5844 threadsh2_C.so`threadsh2() at threadsh2.C:196; frame #45: 0x0000000100fec06a; frame #46: 0x0000000103d7dc2f libCling.so`cling::IncrementalExecutor::executeWrapper(this=0x0000000100a1d410, function=(Data = ""_Z15__cling_Un1Qu30Pv"", Length = 21), returnValue=0x00007fff5fbfbde0) at IncrementalExecutor.h:196; frame #47: 0x0000000103d7db1f libCling.so`cling::Interpreter::RunFunction(this=0x0000000100a0e3b0, FD=0x000000011780f6b0, res=0x00007fff5fbfbde0) at Interpreter.cpp:980; frame #48: 0x0000000103d7a92a libCling.so`cling::Interpreter::EvaluateInternal(this=0x0000000100a0e3b0, input=""threadsh2()"", CO=CompilationOptions @ 0x00007fff5fbfaae8, V=0x00007fff5fbfbde0, T=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1232; frame #49: 0x0000000103d79e27 libCling.so`cling::Interpreter::process(this=0x0000000100a0e3b0, input=""threadsh2()"", V=0x00007fff5fbfbde0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:684; frame #50: 0x0000000103e552a5 libCling.so`cling::MetaProcessor::process(this=0x0000000100b65aa0, input_line=(Data = ""threadsh2()"", Length = 11), compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0, disableValuePrinting=false) at MetaProcessor.cpp:341; frame #51: 0x000000010397bd63 libCling.so`HandleInterpreterException(metaProcessor=0x0000000100b65aa0, input_line=""threadsh2()"", compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0) at TCling.cxx:2053; frame #52: 0x000000010397a16e libCling.so`TCling::ProcessLine(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:2170; frame #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:8339,wrap,wrapPoint,8339,https://root.cern,https://github.com/root-project/root/pull/1573,1,['wrap'],['wrapPoint']
Integrability,4bit+3.10-2.17/include/c++/v1 -compilerI/products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include -compilerI/products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/clang/14.0.6/include -compilerI/usr/local/include -compilerI/usr/include -I/scratch/obj/include -I/scratch/obj/ginclude -I/scratch/root/core/base/inc -I/scratch/root/core/foundation/inc -I/scratch/root/core/cont/inc -I/scratch/root/core/gui/inc -I/scratch/root/core/meta/inc -I/scratch/root/core/clib/inc -I/scratch/root/core/rint/inc -I/scratch/root/core/zip/inc -I/scratch/root/core/thread/inc -I/scratch/root/core/textinput/inc -I/scratch/root/core/clingutils/inc -I/scratch/root/core/base/v7/inc -I/scratch/root/core/foundation/v7/inc -I/scratch/root/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1399201750:13997,Message,MessageTypes,13997,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1399201750,1,['Message'],['MessageTypes']
Integrability,4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:54780,rout,routine,54780,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,6,['rout'],['routine']
Integrability,"5""><code>d784e70</code></a> 0.5.3</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/d612c5ddca62d50282147f5d199810bf1de0b314""><code>d612c5d</code></a> add files list so this package isn't a monster</li>; <li><a href=""https://github.com/isaacs/node-mkdirp/commit/b2e7ba0dd8ac7029735969c5a6062d49e839b30d""><code>b2e7ba0</code></a> 0.5.2</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/node-mkdirp/compare/0.5.1...v0.5.6"">compare view</a></li>; </ul>; </details>; <details>; <summary>Maintainer changes</summary>; <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~isaacs"">isaacs</a>, a new releaser for mkdirp since your current version.</p>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:9722,Depend,Dependabot,9722,https://root.cern,https://github.com/root-project/root/pull/11865,1,['Depend'],['Dependabot']
Integrability,"5.681Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Compiler.h:557:62: warning: unused parameter ‘Alignment’ [-Wunused-parameter] ; - [2020-09-26T21:54:15.681Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘end_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T21:54:15.681Z] ts-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:42:7: warning: declaration of ‘begin_iterator’ shadows a member of ‘llvm::iterator_range&lt;IteratorT&gt;’ [-Wshadow] ; - [2020-09-26T21:54:15.682Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:95:7: warning: declaration of ‘Size’ shadows a member of ‘llvm::SmallVectorTemplateCommon&lt;T, &lt;template-parameter-1-2&gt; &gt;’ [-Wshadow] ; - [2020-09-26T21:54:15.682Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:88:32: warning: declaration of ‘I’ shadows a member of ‘llvm::iterator_facade_base&lt;DerivedT, IteratorCategoryT, T, DifferenceTypeT, PointerT, ReferenceT&gt;::ReferenceProxy’ [-Wshadow] ; - [2020-09-26T21:54:15.682Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator.h:354:7: warning: declaration of ‘DR’ shadows a member of ‘llvm::WrappedPairNodeDataIterator&lt;ItType, NodeRef, DataRef&gt;’ [-Wshadow] ; - [2020-09-26T21:54:15.682Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:138:7: warning: declaration of ‘callable’ shadows a member of ‘llvm::function_ref&lt;Ret(Params ...)&gt;’ [-Wshadow] ; - [2020-09-26T21:54:15.682Z] /build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:226:5: warning: declaration of ‘F’ shadows a member of ‘llvm::mapped_iterator&lt;ItTy, FuncTy, FuncReturnTy&gt;’ [-Wshadow] . And 150065 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699553034:2155,Wrap,WrappedPairNodeDataIterator,2155,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699553034,1,['Wrap'],['WrappedPairNodeDataIterator']
Integrability,"5.79821e+10 vs 57.9821GiB and 54GB; Checking 8.90604e+13 vs 89.0604TiB and 81TB; Checking 1.36797e+17 vs 136.797EiB and 121.5EB; Checking 2.1012e+20 vs 210.12ZiB and 182.25ZB; Checking 3.22744e+23 vs 322.744YiB and 273.375YB; (int) 0. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx.so; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx_ACLiC_dict.cxx:41:; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:1:; [NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/include/ROOT/StringConv.hxx:103:18: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;35mwarning: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1mimplicit conversion from 'long long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-int-float-conversion][NON-XML-CHAR-0x1B][0m; if (v < std::numeric_limits<T>::max()) {; [NON-XML-CHAR-0x1B][0;1;32m ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:9:29: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;30mnote: [NON-XML-CHAR-0x1B][0min instantiation of function template specialization 'ROOT::FromHumanReadableSize<long long>' requested here[NON-XML-CHAR-0x1B][0m; auto parseResult = ROOT::FromHumanReadableSize(input,res);; [NON-XML-CHAR-0x1B][0;1;32m ^; [NON-XML-CHAR-0x1B][0m1 warning generated. -- END TEST ERROR --; CMake Error at /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/root/cmake/modules/RootTestDriver.cmake:179 (message):; Unexpected error output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4257:4150,message,message,4150,https://root.cern,https://github.com/root-project/root/pull/4257,1,['message'],['message']
Integrability,"53xgscd7x2arj-libAfterImage-1.20/include/libAfterImage (found version ""1.20"") ; -- Looking for GSL; -- Found GSL: /nix/store/qygz4zj36abjlxglak3475wbr18fjh7i-gsl-2.7.1/include (found suitable version ""2.7.1"", minimum required is ""1.10"") ; -- Looking for OpenGL; -- Found OpenGL: /nix/store/8qxlk9vc11v84ir8s6c4hxi6nndqfxs3-libGL-1.5.0/lib/libOpenGL.so ; -- Looking for GLEW; -- Found GLEW: /nix/store/xf7mbavhmng1s729hvkpqgj8ymkfp8dm-glew-2.2.0-dev/lib/cmake/glew/glew-config.cmake ; -- Looking for gl2ps; -- Found gl2ps: /nix/store/lvm73632hn805cfwnrfqvy3zqcbn0z6k-gl2ps-1.4.2/lib/libgl2ps.so ; -- Looking for LibXml2; -- Found LibXml2: /nix/store/6pcf2hzn0d4kjddj8v2rzkpr99wwnfx9-libxml2-2.10.3/lib/libxml2.so (found version ""2.10.3"") ; -- Found OpenSSL: /nix/store/gw4hdapx2kipvjlwm8r4vg356abbi9xd-openssl-3.0.7/lib/libcrypto.so (found version ""3.0.7"") ; -- Looking for XROOTD; -- Found untagged Xrootd version: assuming very recent (setting -DROOTXRDVERS=1000000000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /nix/store/7g904n4vqsj77r8rmyxbrx0iza8sa4bw-xrootd-5.5.1-dev/include/xrootd;/build/source/proof/xrdinc; -- libraries: /nix/store/8ajjky60vk5dbrgciyppc8sw3dkrwb60-xrootd-5.5.1/lib/libXrdUtils.so;/nix/store/8ajjky60vk5dbrgciyppc8sw3dkrwb60-xrootd-5.5.1/lib/libXrdCl.so; -- Found FTGL: /nix/store/n8xnr87zp15xf74y52cprqy5ppk20wpp-ftgl-2.4.0/include ; -- Found PkgConfig: /nix/store/v73ppkjk196bwsjm6yy9yv80bdq7q68v-pkg-config-wrapper-0.29.2/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.3; -- Looking for TBB; -- Found TBB: /nix/store/2d2lhp3b4fwva16v4hnxswwc99z0k3ab-tbb-2020.3 (found suitable version ""2020.3"", minimum required is ""2018"") ; -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:12654,wrap,wrapper,12654,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['wrap'],['wrapper']
Integrability,"6.22.02 build error on mac OS 10.15. Building 6.22.02 from source on macOS fails. Note I maintain the ROOT6 port in MacPorts, and my ultimate aim here is to update that build to 6.22.02 (currently 6.22.00). We use a number additional options and dependencies, hence the cmake configure command is a bit long (apologies). 6.22.00 builds just fine using the exact same configuration, so the issue is new to 6.22.02. I have attached the output from the configure and build steps (as outlined below). [configure.log](https://github.com/root-project/root/files/5231518/configure.log). [build.log](https://github.com/root-project/root/files/5231520/build.log). Unfortunately the build log error messages aren't hugely helpful (at least to me) in pointing to the issue, so I am hoping someone can offer suggestions as to where to look. First indication of a problem is; ```; [ 74%] Linking CXX shared library ../lib/libCore.so; <snip>; make[1]: *** read jobs pipe: Resource temporarily unavailable. Stop.; make[1]: *** Waiting for unfinished jobs....[ 74%] Linking CXX shared library ../lib/libCore.so; ```. ## Expected behavior; Builds OK. ## To Reproduce; ```; git clone git@github.com:root-project/root.git; cd root; git checkout v6-22-02; cd ..; mkdir install build; cd build; cmake -G ""CodeBlocks - Unix Makefiles"" -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=""/opt/local"" -DCMAKE_INSTALL_NAME_DIR=""/opt/local/lib"" -DCMAKE_SYSTEM_PREFIX_PATH=""/opt/local;/usr"" -DCMAKE_C_COMPILER=""$CC"" -DCMAKE_CXX_COMPILER=""$CXX"" -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_POLICY_DEFAULT_CMP0060=NEW -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_COLOR_MAKEFILE=ON -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_MODULE_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_PREFIX_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON -DCMAKE_INSTALL_RPATH=""/opt/local/lib"" -Wno-dev -Dgnuinstall=ON -Drpath=ON -DCMAKE_INSTALL_PREFIX=""/opt/local/libex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366:246,depend,dependencies,246,https://root.cern,https://github.com/root-project/root/issues/6366,2,"['depend', 'message']","['dependencies', 'messages']"
Integrability,"62740 (LWP 13922) ""python""):; #0 0x00007f2343fa3a2f in wait4 () from /usr/lib/libc.so.6; #1 0x00007f2343f21a2b in do_system () from /usr/lib/libc.so.6; #2 0x00007f23434ea0bf in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fe35ea2d00) at /home/b/bendavid/rootdev19/root/core/unix/src/TUnixSystem.cxx:2108; #3 TUnixSystem::StackTrace (this=0x55fe35ea2d00) at /home/b/bendavid/rootdev19/root/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007f233e3d7c28 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #5 0x00007f233e3cbe0c in cling_runtime_internal_throwIfInvalidPointer () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #6 0x00007f233324203a in ?? (); #7 0x00007fff669129b0 in ?? (); #8 0x00007fff66912be0 in ?? (); #9 0x00007f233e3cbdb0 in ?? () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #10 0x00007f234368a20f in WrapperCall (method=94550400788944, nargs=0, args_=0x7fff66912be0, self=0x0, result=0x7fff669129b0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #11 0x00007f234368ad50 in CallT<double> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #12 Cppyy::CallD (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:840; #13 0x00007f23437038df in GILCallD (ctxt=0x7fff66912bc0, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:76; #14 CPyCppyy::(anonymous namespace)::DoubleExecutor::Execute (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7fff66912bc0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:3190,Wrap,WrapperCall,3190,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,1,['Wrap'],['WrapperCall']
Integrability,"6472: connect (in /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ==2505== by 0x3F7B62B8: XrdNetConnect::Connect(int, sockaddr const*, int, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2.0.0); ==2505== by 0x3FCEE754: XrdCl::Socket::ConnectToAddress(XrdNetAddr const&, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD59467: XrdCl::AsyncSocketHandler::Connect(long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7B48: XrdCl::Stream::EnableLink(XrdCl::PathID&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7DEC: XrdCl::Stream::Send(XrdCl::Message*, XrdCl::OutgoingMsgHandler*, bool, long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD202FC: XrdCl::MessageUtils::SendMessage(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams const&, XrdCl::LocalFileHandler*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2AC91: XrdCl::FileStateHandler::IssueRequest(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2E324: XrdCl::FileStateHandler::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned short, unsigned short, XrdCl::ResponseHandler*, unsigned short) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759513859:1199,Message,Message,1199,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759513859,1,['Message'],['Message']
Integrability,"68,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Supporting `explicit(bool)` will also improve build throughput, as `std::pair`, `std::tuple`, and `std::optional`'s constructor sets were nearly twice the size with the `_HAS_CONDITIONAL_EXPLICIT=0` workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:2452,depend,dependency,2452,https://root.cern,https://github.com/root-project/root/issues/10875,1,['depend'],['dependency']
Integrability,"6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=OFF -Dwebgui=OFF -Droot7=OFF -Dspectrum=OFF -Dsqlite=OFF -Dssl=OFF -Dtmva=OFF -Dtmva-cpu=OFF -Dvdt=OFF -Dx11=OFF -Dxml=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=root-install; make -Croot-build -j7 install; # Reset ROOT to next commit, which introduced the problem ; git -C root reset --hard e9d264e; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; make ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:3789,depend,dependencies,3789,https://root.cern,https://github.com/root-project/root/issues/13845,1,['depend'],['dependencies']
Integrability,7 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-08T05:13:23.652Z] ghprbPullLongDescription=This fixes test failure:\r\n```\r\n 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856508685:1688,interface,interface,1688,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856508685,3,"['interface', 'message']","['interface', 'message']"
Integrability,7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec; Test ordered data ....; Testing for type 7 :		.............	 OK !; Testing for type 1 :		.............	 OK !; Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7; .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5; Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8; ....; Test Failed for type 2; Testing for type 3 :		.............	 OK !; Testing for type 4 :		.............	 OK !; Testing for type 5 :		.............	 OK !; Testing for type 6 :		.............	 OK !; Testing for type 7 :		.............	 OK !; Testing for type 8 :		.............	 OK !; Testing for type 9 :		.............	 OK !; Test data in random order....; Testing for type 7 :		.............	 OK !; Testing for type 1 :		.............	 OK !; Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7; .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5; Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8; ....; Test Failed for type 2; Testing for type 3 :		.............	 OK !; Testing for type 4 :		.............	 OK !; Testing for type 5 :		.............	 OK !; Testing for type 6 :		.............	 OK !; Testing for type 7 :		.............	 OK !; Testing for type 8 :		.............	 OK !; Testing for type 9 :		.............	 OK !; Test sample quantiles FAILED ; CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):; error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/359:1488,message,message,1488,https://root.cern,https://github.com/root-project/root/pull/359,1,['message'],['message']
Integrability,"705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code simple, but the performance drop is opt-in. If no filters are used, then there is no performance loss. The filters work correctly whether or not the full prefix is displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:1203,message,message,1203,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,4,['message'],"['message', 'messages']"
Integrability,"734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang++-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang-cl"" does not; exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:736 (add_dependencies):; The dependency target ""install-clang-stripped"" of target; ""install-clang-cl-stripped"" does not exist.; Call Stack (most recent call first):; /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:1920 (add_llvm_install_targets); interpreter/llvm/src/tools/clang/cmake/modules/AddClang.cmake:177 (llvm_install_symlink); interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:66 (add_clang_symlink). -- Generating done; CMake Generate step",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:18596,depend,dependency,18596,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,1,['depend'],['dependency']
Integrability,"7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:2823,message,message,2823,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['message'],['message']
Integrability,"77%] Built target clingMetaProcessor; [ 77%] Built target CLING; [ 77%] Built target LLVMRES; [ 77%] Built target ClingUtils; [ 77%] Built target Dictgen; [ 77%] Built target rootcling_stage1; [ 77%] Built target MetaCling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:1106,depend,dependency,1106,https://root.cern,https://github.com/root-project/root/issues/16498,1,['depend'],['dependency']
Integrability,"7: error: call to 'BesselK1' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:617:14: error: call to 'BesselI0' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:636:21: error: call to 'BesselI0' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:637:21: error: call to 'BesselI1' is ambiguous ; - /mnt/build/workspace/root-pullrequests-build/build/include/VectorizedTMath.h:726:43: error: call to 'BesselJ0' is ambiguous . And 2 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-ini",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405616154:1834,depend,depends,1834,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405616154,1,['depend'],['depends']
Integrability,"7: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629); ==270704== by 0x19820055: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66CAF87: _S_copy (basic_string.h:356); ==270704== by 0x66CAF87: _S_copy_chars (basic_string.h:401); ==270704== by 0x66CAF87: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:225); ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109); ==270704== by 0x190163FE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:32733,depend,depends,32733,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"8/console).; ### Errors:; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:187:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:192:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-541874616:1078,depend,depend,1078,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-541874616,1,['depend'],['depend']
Integrability,"8079454f8 <col:64, line:180:5>; `-BinaryOperator 0x5578079454d0 <line:179:7, col:29> 'enum cling::Value::EStorageType' lvalue '='; |-MemberExpr 0x557807945498 <col:7, col:13> 'enum cling::Value::EStorageType' lvalue .m_StorageType 0x5578079450f8; | `-DeclRefExpr 0x557807945470 <col:7> 'class cling::Value' lvalue ParmVar 0x55780793f240 'other' 'class cling::Value &&'; `-DeclRefExpr 0x5578079453f8 <col:29> 'enum cling::Value::EStorageType' EnumConstant 0x557807945428 'kUnsupportedType' 'enum cling::Value::EStorageType'; CXXMethodDecl 0x55780793f4a0 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:270:5, line:272:5> line:270:7 imported in Cling_Runtime_Extra.Value.h hidden simplisticCastAs 'T (void) const'; `-CompoundStmt 0x557807945ac0 <col:32, line:272:5>; `-ReturnStmt 0x557807945aa8 <line:271:7, col:36>; `-CallExpr 0x557807945a70 <col:14, col:36> '<dependent type>'; |-CXXDependentScopeMemberExpr 0x557807945578 <col:14, col:26> '<dependent type>' lvalue ->cast; `-UnaryOperator 0x557807945558 <col:31, col:32> 'const class cling::Value' lvalue prefix '*'; `-CXXThisExpr 0x557807945518 <col:32> 'const class cling::Value *' this; CXXConstructorDecl 0x55780793fb58 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:161:5, line:165:5> line:161:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (void *, class cling::Interpreter &, enum cling::Value::EStorageType)'; |-ParmVarDecl 0x55780793fd60 <col:11, col:17> col:17 imported in Cling_Runtime_Extra.Value.h hidden used QualTypeAsOpaquePtr 'void *'; |-ParmVarDecl 0x55780793fde0 <col:38, col:51> col:51 imported in Cling_Runtime_Extra.Value.h hidden used Interp 'class cling::Interpreter &'; |-ParmVarDecl 0x55780793fe58 <col:59, col:72> col:72 imported in Cling_Runtime_Extra.Value.h hidden used stType 'enum cling::Value::EStorageType'; |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'; | `-CXXConstructExpr 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2859#issuecomment-433234889:11255,depend,dependent,11255,https://root.cern,https://github.com/root-project/root/pull/2859#issuecomment-433234889,2,['depend'],['dependent']
Integrability,"80: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 880: error code: -529697949; 880:; 880:; 3/16 Test #880: tutorial-dataframe-df003_profiles-py .....................***Failed 4.47 sec; test 881; Start 881: tutorial-dataframe-df004_cutFlowReport-py. 881: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df004_cutFlowReport.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 881: Environment variables:; 881: ROOT_HIST=0; 881: Test timeout computed to be: 1500; 881: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 881: error code: -529697949; 881:; 881:; 4/16 Test #881: tutorial-dataframe-df004_cutFlowReport-py ................***Failed 4.53 sec; test 882; Start 882: tutorial-dataframe-df006_ranges-py. 882: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df006_ranges.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:3229,message,message,3229,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/Ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:4418,interface,interface,4418,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"9 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSett",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:1407,Integrat,Integrating,1407,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,"9/console).; ### Errors:; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:201:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive] ; - /data/sftnight/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/TaskContext.hxx:206:91: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ mu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4546#issuecomment-543261278:1078,depend,depend,1078,https://root.cern,https://github.com/root-project/root/pull/4546#issuecomment-543261278,1,['depend'],['depend']
Integrability,9/core/gui/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/meta/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clib/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/rint/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/zip/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/thread/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/textinput/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/clingutils/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/base/v7/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/foundation/v7/inc -I/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:4975,Message,MessageTypes,4975,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,2,['Message'],['MessageTypes']
Integrability,"993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RCanvas&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RCanvas, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]\r\n993: ((const shared_ptr&lt;ROOT::Experimental::RBox&gt;*)obj)-&gt;operator-&gt;&lt;ROOT::Experimental::RBox, 0&gt;();\r\n993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n993: Traceback (most recent call last):\r\n993: File \""C:\Users\bellenot\git\master\tutorials\launcher.py\"", line 34, in &lt;module&gt;\r\n993: spec.loader.exec_module(module)\r\n993: File \""&lt;frozen importlib._bootstrap_external&gt;\"", line 850, in exec_module\r\n993: File \""&lt;frozen importlib._bootstrap&gt;\"", line 228, in _call_with_frames_removed\r\n993: File \""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py\"", line 24, in &lt;module&gt;\r\n993: box1.border.color = RColor.kBlue\r\n993: AttributeError: &lt;class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98&gt; has no attribute 'kBlue'. Full details:\r\n993: attribute access requires an instance\r\n993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class\r\n993: 'kBlue' is not a known C++ template\r\n993: 'kBlue' is not a known C++ enum\r\n993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):\r\n993: error code: 1\r\n993:\r\n993:\r\n1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec\r\n\r\n0% tests passed, 1 tests failed out of 1\r\n\r\nLabel Time Summary:\r\ntutorial = 3.69 sec*proc (1 test)\r\n\r\nTotal Test time (real) = 6.60 sec\r\n\r\nThe following tests FAILED:\r\n 993 - tutorial-rcanvas-rbox-py (Failed)\r\nErrors while running CTest\r\n```\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035#issuecomment-927923183:2585,message,message,2585,https://root.cern,https://github.com/root-project/root/pull/9035#issuecomment-927923183,1,['message'],['message']
Integrability,: 0.51 ( 0%) 0.02 ( 1%) 0.52 ( 0%) 52404 kB ( 3%); tree SSA other : 0.13 ( 0%) 0.14 ( 4%) 0.34 ( 0%) 314 kB ( 0%); tree SSA incremental : 1.06 ( 0%) 0.00 ( 0%) 1.07 ( 0%) 1 kB ( 0%); tree operand scan : 0.21 ( 0%) 0.15 ( 4%) 0.31 ( 0%) 26106 kB ( 1%); tree switch lowering : 0.01 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 0 kB ( 0%); dominance frontiers : 0.05 ( 0%) 0.00 ( 0%) 0.04 ( 0%) 0 kB ( 0%); dominance computation : 0.80 ( 0%) 0.01 ( 0%) 0.83 ( 0%) 0 kB ( 0%); out of ssa : 0.39 ( 0%) 0.01 ( 0%) 0.36 ( 0%) 3829 kB ( 0%); expand vars : 0.05 ( 0%) 0.00 ( 0%) 0.06 ( 0%) 14241 kB ( 1%); expand : 1.28 ( 0%) 0.08 ( 2%) 1.37 ( 0%) 323252 kB ( 17%); post expand cleanups : 0.49 ( 0%) 0.01 ( 0%) 0.50 ( 0%) 45997 kB ( 2%); varconst : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 31 kB ( 0%); jump : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); loop init : 4.00 ( 1%) 0.02 ( 1%) 4.00 ( 1%) 20377 kB ( 1%); loop fini : 0.05 ( 0%) 0.00 ( 0%) 0.06 ( 0%) 0 kB ( 0%); mode switching : 0.01 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); integrated RA : 172.04 ( 54%) 0.76 ( 20%) 173.04 ( 53%) 158446 kB ( 8%); LRA non-specific : 3.26 ( 1%) 0.10 ( 3%) 3.35 ( 1%) 8175 kB ( 0%); LRA virtuals elimination : 1.16 ( 0%) 0.01 ( 0%) 1.17 ( 0%) 19987 kB ( 1%); LRA reload inheritance : 0.03 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 26 kB ( 0%); LRA create live ranges : 108.01 ( 34%) 0.14 ( 4%) 108.24 ( 33%) 3724 kB ( 0%); LRA hard reg assignment : 0.18 ( 0%) 0.00 ( 0%) 0.19 ( 0%) 0 kB ( 0%); reload : 0.03 ( 0%) 0.00 ( 0%) 0.02 ( 0%) 0 kB ( 0%); thread pro- & epilogue : 1.19 ( 0%) 0.00 ( 0%) 1.26 ( 0%) 3682 kB ( 0%); machine dep reorg : 0.03 ( 0%) 0.00 ( 0%) 0.05 ( 0%) 0 kB ( 0%); shorten branches : 0.75 ( 0%) 0.01 ( 0%) 0.77 ( 0%) 0 kB ( 0%); reg stack : 0.01 ( 0%) 0.00 ( 0%) 0.00 ( 0%) 0 kB ( 0%); final : 1.78 ( 1%) 0.05 ( 1%) 1.79 ( 1%) 73058 kB ( 4%); early local passes : 0.00 ( 0%) 0.00 ( 0%) 0.01 ( 0%) 0 kB ( 0%); rest of compilation : 2.25 ( 1%) 0.04 ( 1%) 2.33 ( 1%) 64482 kB ( 3%); repair loop structures : 0.01 ( 0%) 0.00 ( 0%) 0.02 ( 0%,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-802860588:2405,integrat,integrated,2405,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-802860588,1,['integrat'],['integrated']
Integrability,": true, private IPv6: false. Successful UK WATERLOO:. https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout. [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server [], protocol version 400); [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false. Successful IN2P3 LAPP_LAKE. https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout. [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500); [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username: atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false, private IPv4: false, private IPv6: false. Failed Tokyo:. https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout. [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Failed BNL:. https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout. [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager [], protocol version 500). Fail Romania:. https://bigpand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758062082:2115,protocol,protocol,2115,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758062082,1,['protocol'],['protocol']
Integrability,:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5516-mac1015-cxx17&date=2020-04-30).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79744/console).; ### Warnings:; - [2020-04-30T14:59:27.381Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please us,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:1057,interface,interfaces,1057,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,1,['interface'],['interfaces']
Integrability,"::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:1615,message,message,1615,https://root.cern,https://github.com/root-project/root/pull/11153,1,['message'],['message']
Integrability,"::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:8642,message,message,8642,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"::lookup (UnmangledName=..., JD=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x1099ceb50, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 0x00007fffa2f9fee4 in cling::Interpreter::compileFunction (this=0x10994ea90, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:5190,wrap,wrapper,5190,https://root.cern,https://github.com/root-project/root/issues/12372,1,['wrap'],['wrapper']
Integrability,"::lookup (UnmangledName=..., JD=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc44",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:30603,wrap,wrapper,30603,https://root.cern,https://github.com/root-project/root/issues/12372,1,['wrap'],['wrapper']
Integrability,"::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`; and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:3133,depend,dependencies,3133,https://root.cern,https://github.com/root-project/root/issues/10107,1,['depend'],['dependencies']
Integrability,"::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:1581,interface,interfaces,1581,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,1,['interface'],['interfaces']
Integrability,"::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:67: warning: ‘ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:1986,interface,interfaces,1986,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,1,['interface'],['interfaces']
Integrability,":; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility(312,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\ASTMatchers\ASTMatchFinder.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\ASTMatchers\obj.clangASTMatchers.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGDeclCXX.cpp(751,67): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(73,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\DependencyFile.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility(132,48): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXInstrInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2021-05-04T11:23:49.988Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(224,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\CGCXX.cpp) [C:\build\workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8036#issuecomment-831868860:1296,Depend,DependencyFile,1296,https://root.cern,https://github.com/root-project/root/pull/8036#issuecomment-831868860,1,['Depend'],['DependencyFile']
Integrability,:; - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105993/testReport/projectroot.bindings.experimental.distrdf.tests.unit/backend/pyunittests_distrdf_unit_back,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774112839:1209,integrat,integration,1209,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774112839,1,['integrat'],['integration']
Integrability,":CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C8367: capacity (basic_string.h:977); ==270704== by 0x66C8367: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:307); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:8671,depend,depends,8671,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,":CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C3391: ??? (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x4A7BC13: PyEval_EvalCode (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C93DC: capacity (basic_string.h:977); ==270704== by 0x66C93DC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:457); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:5495,depend,depends,5495,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,":CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== by 0x5E619A2: CPyCppyy::tpp_call(CPyCppyy::TemplateProxy*, _object*, _object*) (TemplateProxy.cxx:632); ==270704== by 0x49CE7CA: _PyObject_MakeTpCall (in /usr/lib/libpython3.10.so.1.0); ==270704== by 0x49C9E27: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.10.so.1.0); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66C83D3: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:313); ==270704== by 0x66C94BE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:498); ==270704== by 0x5DF05AF: CPyCppyy::(anonymous namespace)::STLStringConverter::ToMemory(_object*, void*, _object*) (Converters.cxx:1680); ==270704== by 0x5DF3A47: CPyCppyy::(anonymous namespace)::InitializerListConverter::SetArg(_object*, CPyCppyy::Parameter&, CPyCppyy::CallContext*) (Converters.cxx:2634); ==270704== by 0x5E1A3AC: CPyCppyy::CPPMethod::ConvertAndSetArgs(_object*, CPyCppyy::CallContext*) (CPPMethod.cxx:706); ==270704== by 0x5E1A5D5: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:758); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverloa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:17496,depend,depends,17496,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,":Internal::TExecutor x2{};; ROOT::Internal::TExecutor x3(ROOT::Internal::ExecutionPolicy::kMultithread, 20); // will actually have ROOT::GetPoolSize() threads; ROOT::Internal::TExecutor x4(ROOT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the chil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327:1401,depend,dependencies,1401,https://root.cern,https://github.com/root-project/root/pull/6327,1,['depend'],['dependencies']
Integrability,":RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr&lt;ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;&gt; ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface&lt;ROOT::RDF::RInterface&lt;Proxied,DataSource&gt;::RLoopManager,void&gt;' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]\r\nC:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153#issuecomment-1209201215:1960,message,message,1960,https://root.cern,https://github.com/root-project/root/pull/11153#issuecomment-1209201215,1,['message'],['message']
Integrability,":Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3399,message,message,3399,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,":\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::un",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:1545,message,message,1545,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,:confused: I have no idea where the. ```; ...; 09:16:19 -- Found BLAS: /usr/lib/i386-linux-gnu/libblas.so ; 09:16:19 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1549 (message):; 09:16:19 PyROOT2: Python2 development package not found and pyroot2 component; 09:16:19 required (python2 executable: ); 09:16:19 Call Stack (most recent call first):; 09:16:19 CMakeLists.txt:205 (include); ```. error is coming from. I really don't think that my changes had anything to do with that. :confused:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5889#issuecomment-645830327:182,message,message,182,https://root.cern,https://github.com/root-project/root/pull/5889#issuecomment-645830327,1,['message'],['message']
Integrability,":length_error'; '; what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert; terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '; what(): what(): vector::_M_fill_insert; vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; '; '; what(): vector::_M_fill_insert what(): ; vector::_M_fill_insert; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of ' what(): vector::_M_fill_insert; std::length_error'; terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''; terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error; '; std::length_error'; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8; ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9406:3052,message,message,3052,https://root.cern,https://github.com/root-project/root/issues/9406,1,['message'],['message']
Integrability,":operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1899,interface,interface,1899,https://root.cern,https://github.com/root-project/root/issues/10203,1,['interface'],['interface']
Integrability,":string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:34: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.568Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:137:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:155:67: warning: ‘ROOT::RDF::RRootDS::RRootDS(std::string_view, std::string_view)’ is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:19:08.569Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:170:67: warning: ‘ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621890214:2392,interface,interfaces,2392,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621890214,1,['interface'],['interfaces']
Integrability,":thinking: As I wrote earlier, with `builtin_vdt` used for the build, `ROOTConfig.cmake` should indeed probably add the ROOT installation path as a search path for VDT. To clarify: 6.30 now makes a dependency explicit, which was always there. And which required people **not** using `builtin_vdt` (for instance ATLAS...) to call `find_package(VDT)` in their own code, and link against `VDT::VDT` on their own, just to be able to use some of the ROOT libraries. So for some people the new ROOT version behaves a lot better now... But yes, I didn't think of use-cases where people use a built-in version of VDT in ROOT, and they set up their build against ROOT without setting up the ROOT runtime environment. :thinking: (Does your build system set up the appropriate environment for running the dictionary generation, as part of the build commands? Since you do need the full ROOT runtime environment for that. Or do you just not generate any dictionaries in that particular build? :confused:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1837408368:198,depend,dependency,198,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1837408368,1,['depend'],['dependency']
Integrability,"; + find_dependency(Vdt); +endif(); ; #----------------------------------------------------------------------------; # Now set them to ROOT_LIBRARIES; ```. Though on this latter part I wasn't sure how you prefer to pass configuration options from the build to the generated `ROOTConfig.cmake` file. :thinking:. 2. Just use `VDT_INCLUDE_DIRS` and `VDT_LIBRARIES` correctly. Like:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..dd998c1a9b 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -23,13 +19,13 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; Core; ); ; -if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); + target_include_directories(ROOTVecOps PUBLIC $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>; + $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>); + target_link_libraries(ROOTVecOps PUBLIC $<BUILD_INTERFACE:${VDT_LIBRARIES}>; + $<INSTALL_INTERFACE:${CMAKE_INSTALL_LIBDIR}/${CMAKE_STATIC_LIBRARY_PREFIX}vdt${CMAKE_SHARED_LIBRARY_SUFFIX}>); elseif(vdt); + target_include_directories(ROOTVecOps PUBLIC ${VDT_INCLUDE_DIRS}); target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); endif(); ```. I personally favour option 1, as it should be a bit more robust in the long run in my mind. But option 2 could work as well. Though it makes relocatabiity harder. (If VDT is in a different place after relocation, the `ROOTConfig-targets.cmake` file now needs to be manually updated as part of the relocation. Which is not great.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339057027:3487,INTERFACE,INTERFACE,3487,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027,1,['INTERFACE'],['INTERFACE']
Integrability,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:4114,wrap,wrapped,4114,https://root.cern,https://github.com/root-project/root/issues/12761,1,['wrap'],['wrapped']
Integrability,"; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_snapshot.cxx(218): error C3535: cannot deduce type for 'auto' from 'initializer list' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_snapshot.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_snapshot.cxx(218): error C3535: cannot deduce type for 'auto &&' from 'initializer list' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_snapshot.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_snapshot.cxx(219): error C2440: '=': cannot convert from '_Elem' to 'ROOT::RDF::RSnapshotOptions::ECAlgo' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_snapshot.vcxproj] . ### Warnings:; - CMake Warning at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\CodeView\SymbolRecordMapping.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\CodeView\LLVMDebugInfoCodeView.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/DebugInfo/CodeView/SymbolRecordMapping.h(43): warning C4266: 'llvm::Error llvm::codeview::SymbolVisitorCallbacks::visitSymbolBegin(llvm::codeview::CVSymbol &,uint32_t)': no override available for virtual member function from base 'llvm::codeview::SymbolVisitorCallbacks'; function is hidden (compiling source file C:\build\w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3947#issuecomment-526762595:1571,message,message,1571,https://root.cern,https://github.com/root-project/root/pull/3947#issuecomment-526762595,1,['message'],['message']
Integrability,"; -- Looking for BLAS for optional parts of TMVA; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Found libtool - /Library/Developer/CommandLineTools/usr/bin/libtool; -- Native target ARM is not selected; lli will not JIT code; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: arm-apple-darwin23.2.0; -- LLVM default target triple: arm-apple-darwin23.2.0; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: unknown; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime. -- Cling will look for C++ headers in '' at runtime.; -- And then fallback to: 'clang'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration . System Darwin-23.2.0; Processor 10 core Apple M1 Max (arm64); Build type Release; Install path /Users/marcomeyer/Software/root/20240113; Compiler AppleClang 15.0.0.15000100; Compiler flags:; C -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-boun",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:3449,MESSAGE,MESSAGE,3449,https://root.cern,https://github.com/root-project/root/issues/14337,1,['MESSAGE'],['MESSAGE']
Integrability,; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogge,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2186,message,message,2186,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"; 878: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 878: error code: -529697949; 878:; 878:; 1/16 Test #878: tutorial-dataframe-df001_introduction-py .................***Failed 5.63 sec; test 879; Start 879: tutorial-dataframe-df002_dataModel-py. 879: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df002_dataModel.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 879: Environment variables:; 879: ROOT_HIST=0; 879: Test timeout computed to be: 1500; 879: Error in <TChain::LoadTree>: Cannot find tree with name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df003_profiles.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 880: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 880: error code: -529697949; 880:; 880:; 3/16 Test #880: tutorial-dataframe-df003_profiles-py .....................***Failed 4.47 sec; test 881; Start 881: tutorial-dataframe-df004_cutFlowReport-py. 881",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:1608,message,message,1608,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"; > [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username:; > atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info; > =&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false,; > private IPv4: false, private IPv6: false; >; > Failed Tokyo:; >; >; > https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout; >; > [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [; > lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); >; > Failed BNL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: manager; > [], protocol version 500); >; > Fail Romania:; >; >; > https://bigpanda.cern.ch//media/filebrowser/60928171-593f-4422-a5f9-8481afc66428/panda/tarball_PandaJob_4925666809_ROMANIA07_HTCondor/payload.stdout; >; > [2020-12-18 16:38:24.552941 +0200][Debug ][XRootDTransport ] [; > tbit00.nipne.ro:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 400); >; > Fail canada:; >; >; > https://bigpanda.cern.ch//media/filebrowser/f0630909-256d-4ff3-be37-fe0bd2947a15/panda/tarball_PandaJob_4926273208_CA-SFU-T2/payload.stdout; >; > [2020-12-18 18:32:55.988804 -0800][Debug ][XRootDTransport ] [; > lcg-dp4.sfu.computecanada.ca:1094 #0.0] kXR_protocol successful (type:; > server [], protocol version 400); >; > Failed CERN:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c4b9c33e-f260-46b5-9b07-40d54ddef09b/panda/tarball_PandaJob_4926196336_CERN/payload.stdout; >; > [2020-12-19 01:47:52.683440 +0100][Debug ][XRootDTransport ] [; > eosatlas.cern.ch:1094 #0.0] kXR_protocol successful (type: ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:3509,protocol,protocol,3509,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,"; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=4.19165, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.07341, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=3.42638, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=2.6117, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-3.10404, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.5732, mean=mean1=3.74943, sigma=sigma1=0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:2467,message,message,2467,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,4,['message'],['message']
Integrability,; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/69924/console).; ### Errors:; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CallContext.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:553:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:575:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:593:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:173:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:174:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/stringobject.h:175:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] ; - FAILED: bindings/pyroot_experimental/cppyy/CPyCppyy/CMakeFiles/cppyy.dir/src/CPPClassMethod.cxx.o ; - /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister] . And 78 more. ### Warnings:; - CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:872 (message): . +++++ Just tried to build it on this machine and it works,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-541072427:1961,message,message,1961,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-541072427,1,['message'],['message']
Integrability,"; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2171,message,messages,2171,https://root.cern,https://github.com/root-project/root/issues/6421,1,['message'],['messages']
Integrability,"; but it is beyond me to find the problem. Maybe it is time to include Andy; etc. Cheers,; Rod. On Mon, 11 Jan 2021 at 17:19, rdschaffer <notifications@github.com> wrote:. > Well looking at the debug logs, all failed jobs die after ""kXR_protocol""; > and before "" and before ""Sending out kXR_login request"". I haven't been; > able to download logs from too many successful jobs. But I have three - two; > reading from RAL and one reading in LAPP. I give a link to the log files; > and the last DEBUG line of the failed jobs and the same line plus the next; > for the successful jobs. So perhaps a question of what is happening in the; > code between these two points?; >; > see you, RD; >; > Successful RAL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout; >; > [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0,; > dual-stack: false, private IPv4: true, private IPv6: false; >; > Successful UK WATERLOO:; >; >; > https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout; >; > [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:1079,protocol,protocol,1079,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1424,message,message,1424,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/f8145c54f34075069f4a23cb214d871da4cd4006""><code>f8145c5</code></a> Add 'allowWindowsEscape' option</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/570e8b1aef6c9e823a824aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:1815,Depend,Dependabot,1815,https://root.cern,https://github.com/root-project/root/pull/11864,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 25: 'useIntegral' is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 26: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:135; 27: Calling 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 28: Field 'fFunc' is not equal to null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 29: '?' condition is true in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:150; 30: expanded from macro 'assert' in /usr/include/assert.h:93; 31: Assuming field 'fDim' is equal to 1 in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 32: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:153; 33: Calling constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 34: Returning from constructor for 'WrappedMemFunction<ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>, double (ROOT::Fit::FitUtil::IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:6789,Wrap,WrappedMemFunction,6789,https://root.cern,https://github.com/root-project/root/issues/7458,2,['Wrap'],['WrappedMemFunction']
Integrability,"<TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of the diagnostics;. I figured this is worth an issue. Originally discovered in: https://github.com/key4hep/EDM4hep/issues/42#issuecomment-721167821",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:2029,message,message,2029,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"<col:54> 'class cling::runtime::internal::DynamicExprInfo *' lvalue ParmVar 0x55780793e5f8 'ExprInfo' 'class cling::runtime::internal::DynamicExprInfo *'; | `-ImplicitCastExpr 0x55780793eb00 <col:64> 'clang::DeclContext *' <LValueToRValue>; | `-DeclRefExpr 0x55780793ead8 <col:64> 'clang::DeclContext *' lvalue ParmVar 0x55780793e670 'DC' 'clang::DeclContext *'; |-IfStmt 0x55780793f7f0 <line:52:7, line:56:43>; | |-<<<NULL>>>; | |-<<<NULL>>>; | |-CXXMemberCallExpr 0x55780793f7c8 <line:52:11, col:26> '_Bool'; | | `-MemberExpr 0x55780793f790 <col:11, col:18> '<bound member function type>' .isValid 0x55780793f6d8; | | `-ImplicitCastExpr 0x55780793f6b8 <col:11> 'const class cling::Value' lvalue <NoOp>; | | `-DeclRefExpr 0x55780793f690 <col:11> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'; | |-ReturnStmt 0x55780793f678 <line:56:9, col:43>; | | `-CallExpr 0x55780793f650 <col:16, col:43> '<dependent type>'; | | `-UnresolvedMemberExpr 0x55780793f308 <col:16, col:41> '<bound member function type>' lvalue; | | `-DeclRefExpr 0x55780793e900 <col:16> 'class cling::Value' lvalue Var 0x55780793ea78 'result' 'class cling::Value'; | `-<<<NULL>>>; `-ReturnStmt 0x55780793e8e8 <line:57:7, col:16>; `-CXXUnresolvedConstructExpr 0x55780793e8b0 <col:14, col:16> 'T'; CXXConstructorDecl 0x55780793f108 </home/vvassilev/workspace/builds/root_runtime_modules/etc/cling/Interpreter/Value.h:175:5, line:180:5> line:175:5 imported in Cling_Runtime_Extra.Value.h hidden referenced Value 'void (class cling::Value &&)'; |-ParmVarDecl 0x55780793f240 <col:11, col:19> col:19 imported in Cling_Runtime_Extra.Value.h hidden used other 'class cling::Value &&'; |-CXXCtorInitializer Field 0x557807944c50 'm_Storage' 'union cling::Value::Storage'; | `-CXXConstructExpr 0x557807944e68 <line:176:7, col:32> 'union cling::Value::Storage' 'void (const union cling::Value::Storage &) noexcept'; | `-ImplicitCastExpr 0x557807944e50 <col:17, col:23> 'const union cling::Value::Storage' lvalue <NoOp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2859#issuecomment-433234889:7800,depend,dependent,7800,https://root.cern,https://github.com/root-project/root/pull/2859#issuecomment-433234889,1,['depend'],['dependent']
Integrability,"<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (RDFInterfaceUtils.cxx:582); ==270704== by 0x272164AD: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:890); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x671C31A: _M_construct<char const*> (basic_string.tcc:217); ==270704== by 0x671C31A: _M_construct_aux<char const*> (basic_string.h:255); ==270704== by 0x671C31A: _M_construct<char const*> (basic_string.h:274); ==270704== by 0x671C31A: basic_string (basic_string.h:521); ==270704== by 0x671C31A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::__sv_wrapper, std::allocator<char> const&) (basic_string.h:154); ==270704== by 0x6B50558: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&) (basic_string.h:664); ==270704== by 0x271E7C48: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:60771,depend,depends,60771,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"=0x7fff9d900168 ""hpx"", title=0x7fff9d90016c ""This is the px distribution"", nbins=100, xlow=-4, xup=4) at /builddir/build/BUILD/root-6.24.00/hist/hist/src/TH1.cxx:685; #14 0x00007fff9cb0a3c8 in TH1F::TH1F (this=<optimized out>, name=<optimized out>, title=<optimized out>, nbins=<optimized out>, xlow=<optimized out>, xup=<optimized out>) at /builddir/build/BUILD/root-6.24.00/hist/hist/src/TH1.cxx:9873; #15 0x00007fff9d57071c in ?? (); #16 0x00007fff9d570050 in ?? (); #17 0x00007fffa8b0c810 in cling::IncrementalExecutor::executeWrapper (this=0x1366e8cf0, function=..., returnValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376; #18 0x00007fffa8a45a50 in cling::Interpreter::RunFunction (this=0x1366e76e0, FD=0x1379d9920, res=0x7fffc5bcba10) at /usr/include/c++/10/bits/basic_string.h:907; #19 0x00007fffa8a4f2b4 in cling::Interpreter::EvaluateInternal (this=0x1366e76e0, input=..., CO=..., V=0x7fffc5bcba10, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391; #20 0x00007fffa8a4fd74 in cling::Interpreter::echo (this=0x1366e76e0, input=""hsimple() /* '.x' tries to invoke a function with the same name as the macro */"", V=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1043; #21 0x00007fffa8ba224c in cling::MetaSema::actOnxCommand (this=0x137078a00, file=..., args=..., result=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:145; #22 0x00007fffa8bb2c10 in cling::MetaParser::isXCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:319; #23 0x00007fffa8bb50b0 in cling::MetaParser::isCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-844784432:3983,wrap,wrapPoint,3983,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-844784432,1,['wrap'],['wrapPoint']
Integrability,"=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:3300,interface,interface,3300,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,4,"['interface', 'message']","['interface', 'message']"
Integrability,"=270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x271E7C65: ROOT::Internal::RDF::RColumnRegister::ResolveAlias[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >) const (RDFColumnRegister.cxx:137); ==270704== by 0x27216527: ROOT::Internal::RDF::GetValidatedColumnNames(ROOT::Detail::RDF::RLoopManager&, unsigned int, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister const&, ROOT::RDF::RDataSource*) (RDFInterfaceUtils.cxx:893); ==270704== by 0x197967D1: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:68188,depend,depends,68188,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"=270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x271AAC01: std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >::_M_equals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__detail::_Hash_node_value<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> const&) const (hashtable_policy.h:1614); ==270704== by 0x271AAA6A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:211412,depend,depends,211412,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"=270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== by 0x5E1B1EF: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:149); ==270704== by 0x5E1A47E: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:728); ==270704== by 0x5E1A6B2: CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (CPPMethod.cxx:783); ==270704== by 0x5E1F5FA: CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (CPPOverload.cxx:566); ==270704== by 0x5E60E19: CPyCppyy::CallMethodImp(CPyCppyy::TemplateProxy*, _object*&, _object*, _object*, bool, unsigned long) (TemplateProxy.cxx:449); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272CB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:145); ==270704== by 0x75167D5: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x7516F81: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x753C32B: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:70033,depend,depends,70033,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9197,message,message,9197,https://root.cern,https://github.com/root-project/root/issues/13996,2,['message'],['message']
Integrability,"> ${definitions} leaks _out_ of the `REFLEX_GENERATE_DICTIONARY` macro _into_ the `ROOT_GENERATE_DICTIONARY` function. One could also rename `definitions` in the REFLEX_GENERATE_DICTIONARY, or unset it at the end of the macro. I would rather prefer to make the macro a function and if that's impossible to unset the `definitions` in the end of it. > ; > > Why do we need another switch for REFLEX_GENERATE_DICTIONARY?; > ; > Because there is nothing at the moment which let's one use the target properties instead of the directory properties? Generator expressions are not supported either.; > Doesn't using the target (library) properties actually ensure better consistency between the dictionary and the library?; > ; > ```cmake; > add_library(edm4hep SHARED ${sources} ${headers}); > target_link_libraries(edm4hep PUBLIC podio::podio); > target_include_directories(edm4hep PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep> $<INSTALL_INTERFACE:edm4hep>); > REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml; > USES edm4hep ) # creates edm4hep.cxx; > target_sources(edm4hep PRIVATE edm4hep.cxx) # compile library and the cxx file for the dict; > ```. Can't we make this call to `target_sources(edm4hep PRIVATE edm4hep.cxx)` internal to `REFLEX_GENERATE_DICTIONARY`, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587543609:1452,rout,routine,1452,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587543609,1,['rout'],['routine']
Integrability,"> 'unistd.h' file not found. Ok, we might need to add some platform-dependency now. When you run ""cmake"", what is the CXX compiler that is reported in the terminal?. Or in other words, what is the value of CMAKE_CXX_COMPILER in your case? In my case it's `c++`. Might be related to https://stackoverflow.com/questions/29357618/clang-fatal-error-unistd-h-file-not-found",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2075197137:68,depend,dependency,68,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2075197137,1,['depend'],['dependency']
Integrability,"> (And btw it's GCC 12, I'm not remembering seeing this issue with GCC 11 as the commit log says?). Nope, the problem being fixed is seen for gcc11 as the commit message points out: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-centos9,SPEC=noimt,V=master/3429/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429228775:162,message,message,162,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429228775,1,['message'],['message']
Integrability,"> (ii) circumvents this issue by directly using the resolved type name provided by TDataMember::GetTrueTypeName(). Note: this is not ""just"" a work-around. This is the intended behavior. The information from the `TDataMember` for a class that has a dictionary comes pre-digested (in the form of the rootpcm) and is thus guaranteed to have less (or equal to) run-time parsing than any other interface. . This behavior was implemented to reduce the amount of run-time CPU and memory for ""just"" doing I/O operations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13255#issuecomment-1640517628:389,interface,interface,389,https://root.cern,https://github.com/root-project/root/pull/13255#issuecomment-1640517628,1,['interface'],['interface']
Integrability,"> * We cannot implement a precision loss check in TH*F classes as they are implemented currently, as it would effectively be a no-op ... . Why not ?. You can always check that (value in the bin after fill) - (value in the bin before fill) is reasonably close to the value that was added, and print a warning message otherwise. > ... and a waste of CPU cycles. Ah, yes, it would definitely be slower !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2046975683:308,message,message,308,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2046975683,1,['message'],['message']
Integrability,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution.; > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,; > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`.; > And try to provide proper solution for MySQL. Otherwise method only will be implemented in; > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-506537340:613,depend,dependent,613,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-506537340,1,['depend'],['dependent']
Integrability,"> ; > ; > I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have...; > ; > I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if; > ; > If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option.; > ; > Is that an acceptable approach?. Sounds good to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-863959906:506,message,message,506,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-863959906,1,['message'],['message']
Integrability,"> ; > Maybe an error message if `BASH_...` isn't available would be enough?. I started doing this, but it's not possible. The reason is that BASH is not defined either for zsh, so I would be breaking the code already in place for zsh then. The only way is to get somehow the shell name. > I'm not sure whether all shells that currently support `thisroot.sh` will continue to be happy. Maybe a CI test could be run to test them all on mac and linux, but I have no idea how to implement it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10332#issuecomment-1089327209:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/10332#issuecomment-1089327209,1,['message'],['message']
Integrability,> ; The cloning happens only for the internal created `WrappedMultiFunction` not for the user provided object.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10737#issuecomment-1152678762:55,Wrap,WrappedMultiFunction,55,https://root.cern,https://github.com/root-project/root/pull/10737#issuecomment-1152678762,1,['Wrap'],['WrappedMultiFunction']
Integrability,"> > > > We should understand why there are still DeferredDeclsToEmit;; > > > > Do we understand why there are still some left?; > > > > I think we do. When committing a transaction CodeGen requires some definition which is present in another module which then eagerly deserializes declarations.; > ; > And is that the intent or is that a problem? Either, should we update the ""call to action"" at the end of the commit message?. The problem is that the intent fails due to the fact we have an assert on having `DeferredDeclsToEmit`. I think the commit message captures pretty much what I want to say at that point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398#issuecomment-810371400:418,message,message,418,https://root.cern,https://github.com/root-project/root/pull/7398#issuecomment-810371400,2,['message'],['message']
Integrability,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me.; > > > ; > > > ; > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.; > > ; > > ; > > Got it. Thanks.; > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4); > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566); > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.; > ; > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978559674:328,depend,dependent,328,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978559674,1,['depend'],['dependent']
Integrability,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows?; > > ; > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.; > ; > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?. Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1491725885:166,message,message,166,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1491725885,3,"['depend', 'message']","['dependencies', 'message']"
Integrability,"> > > Are these commit names better?; > > ; > > ; > > A bit, but look at this commit for example:; > > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159); > > You can use the message to explain a bit better what was going on e.g.:; > > ```; > > [TF1] Fix buffer overflow.; > > ; > > TF1 was copying 5 characters from an incoming string without checking its length.; > > This was replaced by strncmp, which takes into account the length.; > > ```; > ; > So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation?. Ah, no! That's r for ""reword"". `git` will stop and let you edit the commit message. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862410369:220,message,message,220,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862410369,2,['message'],['message']
Integrability,"> > > For Guix purposes, ...; > > ; > > ; > > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode.; > ; > The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode. I agree this change shouldn't break the current way of linking cling statically. The CI suggests this change didn't impact that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2123615293:228,depend,dependencies,228,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2123615293,1,['depend'],['dependencies']
Integrability,"> > > The reason is that we link to libgandiva (we do not dlopen it). ROOT does not link to libCling, but InitInterpreter() is called after the main(), so it will always be after libgandiva was opened.; > > > I agree, that could be avoided if we would dlopen libgandiva, and make sure to do gROOT->GetInterpreter() beforehand, but this would require some changes to our software. And also this problem is not specific to libgandiva only, but it would affect any library that uses LLVM.; > > ; > > ; > > Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT.; > ; > Well, the problem is that this is no so easy to control. LLVM can come in from a dependency chain via many libraries like OpenCL / Vulkan / arrow. And I am afraid this will become more complicated in the future. Instead of messing with each of them, I thought it might be better to fix the issue in a single place on the ROOT side.; > ; > > I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; > I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that.; > ; > > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; > All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564024419:634,depend,depend,634,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564024419,2,['depend'],"['depend', 'dependency']"
Integrability,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.; > > ; > > ; > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.; > ; > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985324759:286,message,message,286,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985324759,2,"['depend', 'message']","['depend', 'message']"
Integrability,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me.; > > ; > > ; > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.; > ; > Got it. Thanks.; > ; > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4); > ; > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566); > ; > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978147182:320,depend,dependent,320,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978147182,1,['depend'],['dependent']
Integrability,"> > @couet I found it's not quite obvious how to modify the `TGraphMultiErrors` class without modifying the `SetPointError` family methods. For `TGraphAsymmErrors`, `TGraphBentErrors`, and `TGraph2DErrors`'s I didn't experience any problems to update them.; > ; > What error do you encounter if you try with:; > ; > ```; > void TGraphMultiErrors::AddPointError(Double_t x, Double_t y, Int_t ne, Double_t exL, Double_t exH, const Double_t *eyL, const Double_t *eyH) {; > AddPoint(x,y);; > SetPointError(fNpoints - 1, ne, exL, exH, eyL, eyH);; > }; > ```. `SetPointError` calls `SetPointEY` which checks against `fNYerrors` and sets effectively all errors to zero (depends which constructor you call). One needs to call the `AddYError` first if the `fNYerrors` is below the number of requested errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232#issuecomment-2066944064:663,depend,depends,663,https://root.cern,https://github.com/root-project/root/pull/15232#issuecomment-2066944064,1,['depend'],['depends']
Integrability,"> > @guitargeek please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks; > ; > Hi @bellenot, I have now forked [roottest](https://github.com/root-project/roottest), but the Windows build is still failing. Should I do something else besides just forking? Thanks for your help!. Hi @guitargeek No, now the failure is a real one, see the build log:; ```; 17:41:07 CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-configure-Release.cmake:49 (message):; 17:41:07 Command failed: 1; 17:41:07 ; 17:41:07 'devenv.exe' '/useenv' '/upgrade' 'build/vs2013/makefile.sln'; 17:41:07 ; 17:41:07 See also; 17:41:07 ; 17:41:07 C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-configure-*.log; 17:41:07 ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7126#issuecomment-775010584:551,message,message,551,https://root.cern,https://github.com/root-project/root/pull/7126#issuecomment-775010584,1,['message'],['message']
Integrability,"> > @hahnjo, is there a way to move forward without losing progress we made for windows?; > ; > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that. Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1491710190:160,message,message,160,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1491710190,3,"['depend', 'message']","['dependencies', 'message']"
Integrability,"> > @osschar the problem that it will not work...; > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:; > > ```; > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):; > > ""FTGL"" of type SHARED_LIBRARY; > > depends on ""RGL"" (weak); > > ""RGL"" of type SHARED_LIBRARY; > > depends on ""FTGL"" (weak); > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries.; > > CMake Generate step failed. Build files cannot be regenerated correctly.; > > make: *** [Makefile:9096: cmake_check_build_system] Error 1; > > ```; > > ; > > ; > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR.; > > Here is a test PR I opened to show you an error for your proposal: #4786; > > ```; > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]; > > ```; > ; > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?. Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-600592932:113,depend,depends,113,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-600592932,8,['depend'],"['dependencies', 'dependency', 'depends']"
Integrability,"> > @pcanal has suggested leveraging the old behavior to disable optimizations before, so I would wait for his ok before merging.; > EDIT: just to be clear, I am convinced the old behavior is a bug. The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior seems to be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this is fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7382#issuecomment-791547695:421,depend,depending,421,https://root.cern,https://github.com/root-project/root/pull/7382#issuecomment-791547695,2,['depend'],['depending']
Integrability,"> > @pcanal proposes to add the literal diagnostic, which helps understand ""recent failure"" in two years, and which allows to search if we run into this again, e.g. in 6-26:; > > ```; > > [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; > > ; > > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:491:10: error: module 'std.bits/ranges_base.h' requires feature 'cplusplus20'; > > module ""bits/ranges_base.h"" {; > > ^; > > /usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here; > > #include <bits/ranges_base.h> // enable_borrowed_range, enable_view; > > ^; > > In file included from input_line_3:2:; > > ; > > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; > > #include ""TIsAProxy.h""; > > ~~~~~~~~^~~~~~~~~~~~~; > > ; > > Error: Error loading the default rootcling header files.; > > gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; > > ```; > ; > The commit message says exactly that. I don't think I want to paste the error to say actually the same thing as the commit message says. I think I see where the confusion comes from, now. I added the PR title in the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429235250:1131,message,message,1131,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429235250,3,['message'],['message']
Integrability,"> > A possibility might be:; > ; > ```c++; > #ifdef R__USE_IMT; > # define R__EXECUTOR_THREAD ROOT::TThreadExecutor; > #else; > # define R__EXECUTOR_THREAD ROOT::TSequentialExecutor; > #endif; > #ifndef R__WIN32; > # define R__EXECUTOR_PROCESS ROOT::TProcessExecutor; > #else; > # define R__EXECUTOR_PROCESS ROOT::TSequentialExecutor; > #endif; > std::unique_ptr<R__EXECUTOR_THREAD> fThreadExecutor;; > std::unique_ptr<R__EXECUTOR_PROCESS> fProcessExecutor;; > ```; > ; > Hm, but you cannot have multiple `std::unique_ptr` reference the same object on the heap, which is what the current `define`s do. Maybe that's fine though, I didn't look into the code... In this solution we would only have a single `std::unique_ptr` reference. The ifdef conditions are on definitions that depend on the configuration of the root build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760115226:778,depend,depend,778,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760115226,1,['depend'],['depend']
Integrability,"> > About the name argument, if inside the code you invoke the user function as fn(klass, name=name) then it becomes a user choice whether to use it or not.; > ; > But even if I call the user function that way, such function still needs to have a `name` parameter in its signature, right? Even if in the body of the function `name` is not used.; > . Sorry, silly me... I tend to forget I almost always use `**kwargs`. The alternative could be to have the decorator inspect the function signature and, if it does not have the second argument, wrap it with something like:; ```py; lambda klass, name: wrapped(klass); ```; when adding it to the list of callbacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-961755319:542,wrap,wrap,542,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-961755319,2,['wrap'],"['wrap', 'wrapped']"
Integrability,"> > Are there some common guidelines for the future on this? Like 'only do changes in 6.30 branch', or 'only do changes in master and then backport'?; > ; > I don't think we have a guideline yet for this very specific case. I think in practice, for the majority of cases we try to merge changes in master and then backport. Let's imagine an example. I fix an issue for 6.32, and it is automatically collected and added to the 6.32 Release Notes. Furthermore i add a custom message to 6.32relnotes in the e.g. roofit section. I then backport the fix to 6.30. However, this time, the custom message in relnotes will not be automatically added to the 6.30 Release Notes because it was already released. So, after backporting the fix from master to 630, should one:. a) Create a new PR for the 630_ReleaseNotes file, but on the master branch and then after merging, backport it to 6.30 branch; or; b) Create a new PR for the 630_ReleaseNotes file and forget about the master branch, which will stay with an outdated version of 630-relnotes, which is however not very critical since the RelnotesWebpage for 6.30 is built from the 630 branch and not from master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439#issuecomment-1944051025:473,message,message,473,https://root.cern,https://github.com/root-project/root/issues/14439#issuecomment-1944051025,2,['message'],['message']
Integrability,"> > Are these commit names better?; > ; > A bit, but look at this commit for example:; > [6ddcc0d](https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159); > ; > You can use the message to explain a bit better what was going on e.g.:; > ; > ```; > [TF1] Fix buffer overflow.; > ; > TF1 was copying 5 characters from an incoming string without checking its length.; > This was replaced by strncmp, which takes into account the length.; > ```. So in the interactive rebase I just write this detailed description under the commit? Because when I do that it tells me that that line is invalid. Do I need to use some special indentation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862405839:208,message,message,208,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862405839,1,['message'],['message']
Integrability,"> > Copy the line of the ""required dependencies"". ![image](https://user-images.githubusercontent.com/10653970/151994837-3b55785f-dc11-4776-bcfa-a1e8796ffd19.png); . > ask me for a password I do not know ... Never mind .. pwd is 123456",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026948805:35,depend,dependencies,35,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026948805,1,['depend'],['dependencies']
Integrability,"> > For Guix purposes, ...; > ; > For other purposes :) we should continue to make sure we can also build LLVM and CLANG in static mode. The shared library mode is more rigorous of detecting missing link-time dependencies. If we enumerate them all that won't hurt and won't change the way we build ROOT/cling if we want to build it is static mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2123274389:209,depend,dependencies,209,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2123274389,1,['depend'],['dependencies']
Integrability,"> > How can I format the commits that I have already pushed?; > ; > no need, just add a commit that fixes the formatting of your branch (e.g. with the command above). We will squash the 12 commits in this PR together into a single commit anyway when merging into ROOT.; > ; > > it tells me that clang-format is not a git command.; > ; > uhm, you might need to install _something_, depending on your system sweat_smile. Ah ok. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779785562:381,depend,depending,381,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779785562,1,['depend'],['depending']
Integrability,"> > However, wouldn't doing that create troubles with the later integration of the LLVM upstream?; > ; > No, backports are fine for git to deal with during upgrades. Well, they do need a bit of care to synchronize to our set of patches for newer LLVMs, but that's what we have to deal with.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1744386933:64,integrat,integration,64,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1744386933,2,"['integrat', 'synchroniz']","['integration', 'synchronize']"
Integrability,"> > I cannot reproduce it either, but a number of Linux builds agree that the assertion can still be triggered. PRs should be built from a clean state (in Jenkins), but even if not you are not changing the on-disk format so incremental builds must also work correctly. This needs investigation.; > ; > What I think is happening is that the broken PR generated some broken file, and the new PR is not able to survive such broken file. IMHO, this is a problem with the build setup (not being able to notice broken files and delete them) more than with my PR (which of course has no dependency on some intermediate state). Shall I just open a new PR and we see how that goes?. I'm telling that this is not the case - there are no left-behind files (in Jenkins) that influence future PR runs. We know this from changing the on-disk format / upgrading LLVM / etc. There is a problem and it needs to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1721018511:580,depend,dependency,580,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1721018511,1,['depend'],['dependency']
Integrability,"> > I think llvm discourages that setup generally; > ; > Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.).; > . No, relying on the llvm-config binary. . > I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.). In that case we should use find_package instead. You can see how that is done in the clad project https://github.com/vgvassilev/clad. Unfortunately, I do not understand how the current changes help our project. I can claim they make our cmake more complicated and unreadable. I can see how this helps your package manager but this is the first time I hear about it. . To move forward here, I propose to replace the llvm-config part with find_package for clang and llvm. Most of these changes you inserted will be handled automatically for you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2128017265:1085,depend,dependencies,1085,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2128017265,1,['depend'],['dependencies']
Integrability,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :); > ; > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?. They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654934046:878,depend,dependencies,878,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654934046,1,['depend'],['dependencies']
Integrability,"> > I thought you wanted to support non-explicit linking, too.; > ; > Yes, true. But the explicit linking case is seemingly broken now. Yes, it is broken because when calling `rootcling -lib-list-prefix` (and no `-cxxmodule`) we do not load any modules and [this code](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L561-L562) is dead. We should implement some new option in rootcling which says preload all modules because ROOT/ACLiC is in `runtime_cxxmodules` mode but we do not intend to build a module (via `-cxxmodule` flag.). > ; > > we should just get all loaded libraries and append them. Just to be clear, I was not proposing to go that route, but in principle we could filter out ""user"" libraries... > ; > That is where we started a long time and ago and led to spurrious failures. For example:; > ; > ```; > root; > root [] .L A.C+; > root [] .L B.C+; > root [] .q; > rm A.C A_C*; # User give up on A.C; > root; > root [] .L B.C+; > // linking error complaining about A_C.so not found.; > ```; > ; > > By symbol you mean clang::Decl?; > ; > Not sure. I meant that during parsing, 'missing' symbols provoke call to 'auto-parsing' mechanism that get info from the rootmap file (humm I realize that this is not necessary quite an accurate description :( ); > ; > > That is the power of the new dynamic loader.; > ; > It works solely if it is loaded though :). Nope, it is able to visit the elf/mach-o binary format and extract whatever information is needed without dlopening the library. > ; > We do have users that use ACLiC to generate libraries (from a Makefile) to be used to link to a main executable. I thought we have coverage for that case. I would recommend to go forward with this approach to fix the bug while I am working on fixing the explicit linking in general.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-607811483:684,rout,route,684,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-607811483,1,['rout'],['route']
Integrability,"> > I would argue that typical cmake projects do not need to deal with this; > ; > Fair enough, other projects just leave the headers in the source directory.; > But I don't understand the motivation for this change then.; > ; > > it allows better navigation from compile output logs in IDEs and better editing of headers; > ; > Can you elaborate on why symlinking is better than copying in these regard? (e.g. why is your IDE trying to edit the headers in the build directory?) Again, just curious, my workflow does not rely on compilation logs for navigation so I never had this problem. The problem might actually stem from a different problem. But first things first:. In VS when you compile a target in ROOT, like Tree, compiler invocations are spawned that compile the various source files. The output of these compilers is piped into a window inside VS. Error messages and warnings are analyzed by VS. You can double-click these in the compiler output window and VS will jump to the file and line where this error/warning occured. This is a super useful navigation feature. The workflow for running static code analysis like clang-tidy is similar. Now the issue is that when you jump to errors/warnings in header files, VS jumps to the copies of the headers in the build directory. If I fix the problem there and recompile/rerun clang-tidy, the errors/warnings of course persist, because the fixed header files are overridden again from the source directory. A possible explanation why VS jumps to the headers in the build directory might be, that the headers in the source directory are NOT part of the CMake targets and thus not part of the VS projects. This is a problem of itself. Btw, I just tried reproducing the problem with the clicks on the output window jumping into the build directory on master and now VS jumps into the source directory. That is confusing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6010#issuecomment-656561889:867,message,messages,867,https://root.cern,https://github.com/root-project/root/pull/6010#issuecomment-656561889,1,['message'],['messages']
Integrability,"> > In the example from the bug report that would be spec_func_C.so; > ; > The intent is for this library to be hard linked to its dependencies. What does ""hard linked"" mean? Using explicit linking?. > To do so rootcling needs a mapping ""symbols to library"" (previously provided by rootmap) and output a list of used library. Previously, if I am not mistaken, rootcling will list all loaded libraries in the existing session and then replay them when loading the ACLiC library. That seems suboptimal as may redundant things can be loaded, especially when the `.L ...++` is not the first command to execute. > ; > hence my question "" Doesn't rootcling have access to the information (connection symbol to library) through the pcm files?"". I has it, but it is lazily obtained by the visiting the undefined symbols when the library is loaded as intended avoid loading of libraries which existed in the session but are irrelevant to the ACLiC-produced library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605494767:131,depend,dependencies,131,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605494767,1,['depend'],['dependencies']
Integrability,"> > Is somebody working with priority on the test case so that we can merge this fix?; > ; > I attempted to create one but didn't succeed ([#14887 (comment)](https://github.com/root-project/root/pull/14887#issuecomment-1981644071)) so I abandoned it. I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-2023286731:397,depend,depending,397,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-2023286731,1,['depend'],['depending']
Integrability,"> > Or even make a single libPyROOT work both with Python 2.x and 3.x if possible. As far as I understand, that should be possible too if we don't link directly to the Python library, but let symbols be resolved from the already loaded Python interpreter.; > ; > I don't think that is even possible, since extension modules like libPyROOT need to define a different interface for Python2 and Python3. Moreover, there are differences also in the Python APIs between versions (even between 3.X versions) that also impose those `#if`s in our PyROOT code. If the differences are only symbol names, then providing both symbols should be ok if we're not linking to Python. If the implementation needs to change, we can get rid of all the `#if PY_VERSION_HEX ...` by replacing them with a regular `if (Py_GetVersion() ...)`, which is computed at runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462722332:366,interface,interface,366,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462722332,1,['interface'],['interface']
Integrability,"> > Pointing to what alternatives there are, if any, either through the legacy alias, or in > the body doc, would be additionally helpful.; > ; > We cannot test the existence of an input variable in an alias therefore we cannot handle with the same alias the case where there is another solution and the case where there is not. I guess if there are possible alternatives they should be mentioned in the body of the class documentation. I guess one could use:; `ALIASES = ""legacy{2}=\htmlonly<div class=\""legacybox\""><h2>Legacy Code</h2> \1 is a legacy interface: there will be no bug fixes nor new developments. But depending on the context using \1 might still be a valid solution. \2</div>\endhtmlonly""; `. and then e.g.:; `\legacy{TSpectrum,Some parts of this class are superseded by RooFit.}`. or:; `\legacy{TTreeReader,RDataFrame is recommended as replacement.}`. Second argument can be also left empty `{TTreeReader,}`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237828753:553,interface,interface,553,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237828753,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"> > Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.; > ; > Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`. I see, thanks for the clarification!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16675#issuecomment-2411286373:162,depend,dependency,162,https://root.cern,https://github.com/root-project/root/pull/16675#issuecomment-2411286373,2,['depend'],['dependency']
Integrability,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.; > ; > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985394696:141,depend,depend,141,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985394696,1,['depend'],['depend']
Integrability,"> > The reason is that we link to libgandiva (we do not dlopen it). ROOT does not link to libCling, but InitInterpreter() is called after the main(), so it will always be after libgandiva was opened.; > > I agree, that could be avoided if we would dlopen libgandiva, and make sure to do gROOT->GetInterpreter() beforehand, but this would require some changes to our software. And also this problem is not specific to libgandiva only, but it would affect any library that uses LLVM.; > ; > Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT.; > ; Well, the problem is that this is no so easy to control. LLVM can come in from a dependency chain via many libraries like OpenCL / Vulkan / arrow. And I am afraid this will become more complicated in the future. Instead of messing with each of them, I thought it might be better to fix the issue in a single place on the ROOT side. > I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example.; > ; I agree, me neither. If we can find a better and cleaner way, I am absolutely in favor of that. > IIUC, `RTLD_DEEPBIND` alters the search order of the dynamic linker and using -fPIC intends to deduplicate. That seems as bad as preloading a set of llvm dependent libraries, IMO. Do we need `libgandiva.so` to be compiled with -fPIC or just the executables which 'use' ROOT?; > ; All shared libraries must be compiled with -fPIC by definition, so libgandiva is already compiler with -fPIC. The change would only be for exectuables, which usually do not have -fPIC by default. But then actually other libraries have similar requirements, e.g. Qt5 (with -reduce-relocation flag, which is the default) requires all executables to link against Qt to be compiled with -fPIC. But ag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564020905:620,depend,depend,620,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564020905,2,['depend'],"['depend', 'dependency']"
Integrability,"> > The remaining issues would seem to be related to the way Clang is built for our ecosystem relative to how ROOT's internal Clang is built/configured.; > ; > So you're not using the builtin clang then? I missed that so far. No, we're using the builtin Clang for Cling. However, the Clang we're using to build everything is configured in a way that is incompatible with the way ROOT's builtin Clang is built. In order to avoid dependency on a non-native GCC on SLF7 we use a bootstrapped build of Clang with `cxxabi`, `libc++` and the Clang runtime instead of GCC's. > Are there any patches coming out of this issue that ROOT would need to take care of?. Don't think so. We'll revisit the issue when we're more advanced with our migration from UPS to Spack.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1549937644:428,depend,dependency,428,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1549937644,1,['depend'],['dependency']
Integrability,"> > The subtraction was never needed, this was a way to cast a pointer into an integer via a ptrdiff_t. I can elaborate on this, but I'm not sure this really adds value to archeological investigations that might ever come across this...; > ; > This plausible albeit a bit odd (i.e. why didn't they do the straight cast in the first place? I find it more likely that there has been a change in the C++ standard (from 1994 to now :) ) that allows the straight cast to work ), I agree that it might not be helpful to dig any further. I would add the above fact/claim/opinion :) at the very least in the git log. Yes, `uintptr_t` likely didn't exist in 1994. It's still optional in current C++ standards as far as I can tell, but ROOT and many other projects use it throughout their code base, so its existence is likely a given on all relevant platforms. Regarding the straight cast not being possible, I remember reading some time ago that the original `malloc` implementation in Unix casted pointers to `int` in various places, so it definitely was possible and I can't tell why it wasn't done here. I've added a sentence to the commit message explaining that we're now directly going to `uintptr_t` instead of taking the detour into `ptrdiff_t`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9969#issuecomment-1061647802:1135,message,message,1135,https://root.cern,https://github.com/root-project/root/pull/9969#issuecomment-1061647802,1,['message'],['message']
Integrability,"> > There is still failures.; > ; > Maybe rebasing to current master helps with those. I checked alma9 build, it failed somewhere else if I understand the log correctly:; ```; [ 98%] Linking CXX executable emitGraphIndependent; /usr/bin/ld: cannot find -lblas; Scanning dependencies of target G__TMVAUtils; Consolidate compiler generated dependencies of target G__TMVAUtils; [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o; collect2: error: ld returned 1 exit status; gmake[2]: *** [tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/build.make:124: tmva/pymva/test/TestRModelParserPyTorch] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:70193: tmva/pymva/test/CMakeFiles/TestRModelParserPyTorch.dir/all] Error 2; ```. Suspicious, that all but linux jobs failed. I have tested locally on my linux machine a month ago, and it worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232#issuecomment-2126878049:270,depend,dependencies,270,https://root.cern,https://github.com/root-project/root/pull/15232#issuecomment-2126878049,2,['depend'],['dependencies']
Integrability,"> > This looks quite good already, but consider removing the helper class.; > > ```c++; > > if (templateParameter); > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > won't have any runtime overhead with any decent compiler, and both `dynamic_cast` and `static_cast` are syntactically correct code paths, so no `if constexpr` required.; > ; > > This looks quite good already, but consider removing the helper class.; > > ```c++; > > if (templateParameter); > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > won't have any runtime overhead with any decent compiler, and both `dynamic_cast` and `static_cast` are syntactically correct code paths, so no `if constexpr` required.; > ; > Thanks for the comments! Before I address the other comments: just one answer to this comment. No, it seems that `dynamic_cast<T*>` is not syntactically correct if T is not polymorphic, e.g. it has not virtual method.; > ; > You can for example see that this code doesn't compile:; > ; > ```c++; > struct A {; > void foo() {}; > };; > ; > struct B : public A {; > void bar() {}; > };; > ; > int main() {; > ; > A* ptr = new B;; > dynamic_cast<B*>(ptr);; > delete ptr;; > }; > ```; > ; > Here is the error:; > ; > ```; > collection_cast.cc: In function ‘int main()’:; > collection_cast.cc:95:5: error: cannot ‘dynamic_cast’ ‘ptr’ (of type ‘struct A*’) to type ‘struct B*’ (source type is not polymorphic); > 95 | dynamic_cast<B*>(ptr);; > | ; > ```; > ; > So we have to find a way to make the decision static_cast/dynamic_cast at compile time. That's correct. I think whether or not you can use it depends on whether you want to use it only for RooFit collections or for other things as well?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891000129:1637,depend,depends,1637,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891000129,1,['depend'],['depends']
Integrability,"> > Upstream is taking a different route in [llvm/llvm-project#107638](https://github.com/llvm/llvm-project/pull/107638) Let's hope soon we can drop this huge and messy workaround we have...; > ; > That hasn't landed yet and even if it did today, it's still multiple versions of SDK down the road. So why are we seeing problems _now_ that nobody else has? And where do we see them at all, because our CI is green?. Simply because our use of C++ modules is on the bleeding edge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2367412416:35,rout,route,35,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2367412416,1,['rout'],['route']
Integrability,"> > We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs...; > ; > Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in [#14664 (comment)](https://github.com/root-project/root/issues/14664#issuecomment-1940795175)). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`. ok, I'm closing the PR. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14662#issuecomment-1943610902:474,message,message,474,https://root.cern,https://github.com/root-project/root/pull/14662#issuecomment-1943610902,1,['message'],['message']
Integrability,"> > What does ""hard linked"" mean? Using explicit linking?; > ; > Yes, I meant explicit linking. I thought you wanted to support non-explicit linking, too. If we want to support the same explicit-linking which we supported with rootmaps we should `just` get all loaded libraries and append them. This will not solve ROOT-10637, though. In order to solve it we should probably keep track of all modules which we have deserialized declarations from and get their corresponding libraries. Both seem to be very inaccurate to me. > ; > > rootcling will list all loaded libraries in the existing session and; > ; > If I remember correctly, it is passed a rootmap file which is then leverage to obtains (from cling) the actual symbol and thus actual library needed and then issue a list of library needed. This is used to at least load the depend library that has not been loaded yet and is (or should be/could be) used to limit the explicit linking. By symbol you mean `clang::Decl`?. > ; > > y the visiting the undefined symbols when the library is loaded; > ; > Humm that is a challenge as rootcling can not load any libraries. That is the power of the new dynamic loader. It can scan for symbols without opening and loading the library. At the moment it is done when the library is being loaded, however, it can be a step or rootcling. If we want accurate explicit linking, that would require two steps: (a) build the library without explicit linking; (b) walk the undefined symbols, resolve them and relink the library. I think all of that is feasible to implement, however, this PR should fix the original issue in the least intrusive way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605588365:832,depend,depend,832,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605588365,1,['depend'],['depend']
Integrability,"> > What does the build error message say? I can't read it; > ; > ```; > 12:53:51 MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; > 12:53:51 Creating library C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.lib and object C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.exp; > 12:53:51 C:\build\workspace\root-pullrequests-build\build\core\base\test\Release\CoreBaseTests.exe : fatal error LNK1169: one or more multiply defined symbols found [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; > ```. Thanks. I have no clue what it means",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779872889:30,message,message,30,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779872889,1,['message'],['message']
Integrability,"> > What is the benefit?; > ; > `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries. OK, thanks for the explanation. It's fine with me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5072#issuecomment-593369796:100,depend,dependncies,100,https://root.cern,https://github.com/root-project/root/pull/5072#issuecomment-593369796,1,['depend'],['dependncies']
Integrability,"> > While we are at it, the Clang libraries should probably be linked with `clang_target_link_libraries` to make `CLANG_LINK_CLANG_DYLIB` work.; > ; > I am not sure I completely understand. Can you suggest a change?. I think the first branch should read something like; ```cmake; set(LIBS; clingInterpreter; clingMetaProcessor; clingUserInterface; clingUtils; ); add_cling_executable(cling; cling.cpp; ); clang_target_link_libraries(cling; clangFrontendTool; ); ```; `clang_target_link_libraries` is a function that automatically ""does the right thing"" depending on `CLANG_LINK_CLANG_DYLIB`. But we can do that in another PR, if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11703#issuecomment-1319656567:553,depend,depending,553,https://root.cern,https://github.com/root-project/root/pull/11703#issuecomment-1319656567,1,['depend'],['depending']
Integrability,"> > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.; > ; > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there. That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985314491:274,message,message,274,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985314491,1,['message'],['message']
Integrability,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me.; > ; > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566; ; Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1976338232:308,depend,dependent,308,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1976338232,1,['depend'],['dependent']
Integrability,"> > it will not be automatically added to the 6.30 Release Notes because it was already released; > ; > This might not be specific enough. The release notes for the already released version of v6.30 (let's say v6.30.04) are frozen by definition. However the fix should be properly pickup by the release procedure for the next version, i.e. v6.30.06. (of course this require adding the proper tag to the issue). What am I missing?. Thanks for the message.; True, but I did not express myself well (edited now above message). I am not speaking only about the automatic fixed issues collection protocol. I am speaking about manual additions to the release notes where a more in-depth message is written. In that case, there is the ambiguity of where this should be added, in the 63006relnotes of master and then backport to 630patches, or rather directly in 630patches. Right now, we have a bit of everything. If you use 'meld' to compare them, you will see the issue more clearly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439#issuecomment-1947883057:446,message,message,446,https://root.cern,https://github.com/root-project/root/issues/14439#issuecomment-1947883057,4,"['message', 'protocol']","['message', 'protocol']"
Integrability,> > just note that clang is unhappy now; > ; > What do you mean?. sorry I meant clang format ... message edited!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11054#issuecomment-1195827246:97,message,message,97,https://root.cern,https://github.com/root-project/root/pull/11054#issuecomment-1195827246,1,['message'],['message']
Integrability,"> > the performance of the llvm::SmallVector comes from the fact it is not exception safe; > ; > Can you elaborate a bit? For us, the performance boost in RVec 2.0 comes from the small buffer optimization, which reduces the amount of heap allocations during analysis event loops. The implementation of SmallVector in llvm assumes it is used in codebases without exception support (like llvm itself). Thus the implementation can make some assumptions which the general std::vector cannot. See some terse documentation [here](https://llvm.org/doxygen/classllvm_1_1SmallVector.html). There are two things I'd encourage you to try and see if you can reach the same level of small buffer optimization as you got now:; * Make a wrapper class which always takes an assumed size over std::vector and call std::vector::reserve; * Make a wrapper class which takes a template argument assumed size and try to allocate the assumed size on the stack, if it exceeds that, call underlying std::vector and move things there. If either gets similar performance that'd be probably better approach in my opinion as it'd be exception safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-818864506:722,wrap,wrapper,722,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-818864506,2,['wrap'],['wrapper']
Integrability,> > to add a non-const accessor to the TGraph interface; > ; > I don't understand what you are considering here?; > ; > TGraph was designed to own the data; changing this is likely not worth the cost as virtually all use cases will not make use of the shared ownership. A non-const accessor to allow TGraph to own the data and allow a user to access and modify the data without making a copy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1057000000:46,interface,interface,46,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1057000000,1,['interface'],['interface']
Integrability,"> > why is `/usr/lib64/libgandiva.so.14.1.0 ` initialized/dlopened first?; > ; > The reason is that we link to libgandiva (we do not dlopen it). ROOT does not link to libCling, but InitInterpreter() is called after the main(), so it will always be after libgandiva was opened.; > ; > I agree, that could be avoided if we would dlopen libgandiva, and make sure to do gROOT->GetInterpreter() beforehand, but this would require some changes to our software. And also this problem is not specific to libgandiva only, but it would affect any library that uses LLVM. Unfortunately, those should be carefully attended because of ROOT. I would feel more comfortable if my stack knows which libraries depend on LLVM to avoid pain debugging ROOT. > I have in the mean time found the root cause why my patch fails:; > ; > * It is due to copy relocations of symbols from libstdc++; > ; > * Crashes happen whenever cling wants to output text via cout / cerr / etc.; > ; > * The problem is that there are 2 instances of cout / cerr: The first created by the executable itself through copy relocation, when the executable prints something via cout. The second created by libCling loaded with RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). I am not a huge fan of the `RTLD_DEEPBIND` approach because it is not portable and it essentially overrides the dynamic linker behavior yet one more time. I am not sure how this would translate to Windows for example. > ; > ; > The problem can be avoided if executables are compiled with -fPIC as well.; > I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; > The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564015399:692,depend,depend,692,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564015399,1,['depend'],['depend']
Integrability,"> @agheata How is a ""squash"" done ? I am not at all a git expert....actually git is my outspoken enemy!. I can do it from the git web interface when merging, but this will squash all commits into one. Otherwise, if your branch started after say commit #N, you can locally rebase interactively the branch on top of that commit using `git rebase -i #N`, which opens an editor and allows you to do actions like squashing commits. Then you must push the branch with --force, since you are altering history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11888#issuecomment-1352771264:134,interface,interface,134,https://root.cern,https://github.com/root-project/root/pull/11888#issuecomment-1352771264,1,['interface'],['interface']
Integrability,"> @amadio, does that make sense from the XRootD perspective?. Yes, XRootD/EOS 4.x are both EOL at the end of this year. All EOS instances will be on EOS 5.x by then. If you can, depend on XRootD from EPEL, as it's well maintained by @ellert. On Debian/Ubuntu, however, due to their restrictions on updating packages to newer versions, you may want to carry the builtin just in case for the older releases. Depending on when you plan to release ROOT 6.30, XRootD 5.6.3 (current release) or 5.7.0 (upcoming feature release early December) should be used for the builtin, to have the fixed CMake module exporting a version. Let me know if you have any other questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1790801482:178,depend,depend,178,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1790801482,2,"['Depend', 'depend']","['Depending', 'depend']"
Integrability,"> @andresailer reports; > ; > ```; > ...; > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h; > requested to autoload type IOIMPL::TrackerPulseIOImpl; > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h; > requested to autoload type IOIMPL::TrackerRawDataIOImpl; > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; > Missing FileEntry for include/IOIMPL/VertexIOImpl.h; > requested to autoload type IOIMPL::VertexIOImpl; > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:; > ; > #line 1 ""EVENT dictionary payload""; > ...; > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; > ```; > ; > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11921#issuecomment-1357863281:887,rout,routine,887,https://root.cern,https://github.com/root-project/root/pull/11921#issuecomment-1357863281,3,['rout'],['routine']
Integrability,"> @bellenot could you help us with the Win regex of that test. I do not understand why it fails, the output across platforms should be the same... No idea, I don't even understand the error message... But I'll check on my own llvm 9.0 build and let you know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6970#issuecomment-749423083:190,message,message,190,https://root.cern,https://github.com/root-project/root/pull/6970#issuecomment-749423083,1,['message'],['message']
Integrability,> @bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason). Done (the new PyROOT was not supported on Windows). Thanks @oshadura,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7324#issuecomment-788708660:50,message,message,50,https://root.cern,https://github.com/root-project/root/pull/7324#issuecomment-788708660,1,['message'],['message']
Integrability,"> @eguiraud As long as we don't leak the interface to users, I guess TBB is fine. @jblomer @Axel-Naumann does that mean we can include TBB headers in our headers? I thought that wasn't the case. If we cannot it will be impossible (or at least very awkward) to use TBB's concurrent queue e.g. in template code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715#issuecomment-887277679:41,interface,interface,41,https://root.cern,https://github.com/root-project/root/pull/8715#issuecomment-887277679,1,['interface'],['interface']
Integrability,> @ellert can you please fix commit message and it is ready to go?. Typos corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5944#issuecomment-671282401:36,message,message,36,https://root.cern,https://github.com/root-project/root/pull/5944#issuecomment-671282401,1,['message'],['message']
Integrability,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4025#issuecomment-507696583:288,message,message,288,https://root.cern,https://github.com/root-project/root/pull/4025#issuecomment-507696583,1,['message'],['message']
Integrability,"> @ferdymercury I took the branch from #15314 . I issued the command suggested in you previous comment:; > ; > ```; > cmake ../root-new-doc -Ddocu=ON -DDOCU_LOCATION=/tmp/docoutput -DDOCU_THREADS=8 -DDOCU_LOGFILE=/tmp/warnings.txt -DDOXYGEN_EXECUTABLE=/Users/couet/bin/doxygen -DDOCU_INPUT=""./mainpage.md;../../core""; > ```; > ; > and I get:; > ; > ```; > CMake Error at documentation/doxygen/CMakeLists.txt:58 (STRING):; > STRING sub-command REGEX, mode REPLACE needs at least 6 arguments total to; > command.; > ```. Thanks for the review! This might be a platform-dependent issue, it works well in Ubuntu. Or it might be that you are using a tarball instead of git repository?. So the conflicting line is:. `STRING(REGEX REPLACE ""^\n\\(const char \\*\\) "" """" ROOT_GIT_VERSION ${ROOT_GIT_VERSION})`. which is called after:. execute_process(COMMAND ${ROOT_root_CMD} -l -b -q -e gROOT->GetGitBranch\(\) OUTPUT_VARIABLE ROOT_GIT_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE). Could you post here the output of ROOT_GIT_VERSION before calling REPLACE ? So that I know what to fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2074407620:567,depend,dependent,567,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2074407620,1,['depend'],['dependent']
Integrability,"> @ferdymercury is that library already used in ROOT?. I don't think it's used yet in ROOT, but @henryiii could confirm. . > Considering it's 10k loc, I'd not count it as ""simplifying"" unless we decided to use it in multiple places (ideally all our cpp executables). True. My experience is that there are many places doing CLI parsing over and over again within ROOT, so if we would replace everywhere, then we would remove more than 10k from ROOT's codebase, and reduce maintenance / bugs on ROOT's side, so it would be worth it. Or at least for new interfaces, see e.g. https://github.com/root-project/root/pull/14038. > Also, we must make sure that the argument parsing logic remains backward-compatible, which is not very clear to me if it would be the case with that lib. That lib has many customization options, so a derived parser class could probably do it, but yeah, it's hard to say for sure in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2244874004:551,interface,interfaces,551,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2244874004,1,['interface'],['interfaces']
Integrability,"> @hageboeck commit [e973470](https://github.com/root-project/root/commit/e97347056cb20cfaa89e5c58e668538d774e9120) is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?. Sure, it's for #8709 as mentioned in the description of this PR. Could you post what's going wrong with the dictionary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1486534839:145,DEPEND,DEPENDENCIES,145,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1486534839,2,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependency']"
Integrability,"> @hahnjo there is no stack trace unfortunately, just the assertion failure message. Were you able to reproduce yourself? I can reproduce on both my laptop and desktop machines, Ubuntu and CentOS7 with master, but not e.g. on lxplus. I didn't try yet, first checking if you might have more information that would accelerate diagnosis. I will build a debug version of Cling and try to reproduce :+1: with Axel and Javi on vacation, I might take a look if it's easy to fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-899365169:76,message,message,76,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-899365169,1,['message'],['message']
Integrability,"> @hahnjo yeah, I noticed too late. Should I just wrap that line in a `#ifndef __llvm__`?. Probably, unless there is a more standard way to do it... (`__clang__` might be the more appropriate macro to check, judging by a quick `grep`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16386#issuecomment-2340375346:50,wrap,wrap,50,https://root.cern,https://github.com/root-project/root/pull/16386#issuecomment-2340375346,1,['wrap'],['wrap']
Integrability,"> @hahnjo, @lhames just told me that we should be able to backport the brand-new jitlink ppc64 support. We need to go find all relevant revisions that touched these files:; > ; > ```; > llvm/include/llvm/ExecutionEngine/JITLink/*ppc64*; > llvm/lib/ExecutionEngine/JITLink/*ppc64*; > llvm/lib/ExecutionEngine/JITLink/ELF.cpp; > ```; > ; > @smuzaffar, can we trigger an integration build for this PR with cmssw as it is now? Then we can repeat the exercise once we backport the jitlink backend and see if [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658) is resolved. cc: @aandvalenzuela",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1665253182:368,integrat,integration,368,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1665253182,1,['integrat'],['integration']
Integrability,"> @hahnjo, is there a way to move forward without losing progress we made for windows?. I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1491661864:152,message,message,152,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1491661864,1,['message'],['message']
Integrability,"> @hahnjo; > ; > > Hm, but you cannot have multiple std::unique_ptr reference the same object on the heap; > ; > I don't see that being the case, neither for master nor for my proposed change. What am I overlooking?; > ; > @xvallspl; > ; > > In this solution we would only have a single std::unique_ptr reference.; > ; > I don't know what you mean by ""reference"", I don't have lvalue references anywhere here. With my proposal, for all ROOT configuration cases we'd have a definition of three members, `fSequentialExecutor`, `fThreadExecutor`, `fProcessExecutor`. Their types differ depending on ROOT's configuration. Note that I'm using the (assumed) feature that having one or many `ROOT::TSequentialExecutor` doesn't make any difference; that might be wrong. Shouldn't make any difference. These ifdefs are for compilation purposes. The execution policies available in these specific cases will ensure we never call a method from the fallbacks to TSequentialExecutor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760128510:583,depend,depending,583,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760128510,1,['depend'],['depending']
Integrability,"> @junaire tests _should_ be clean in CI builds, as you can see for this PR. Any failures are introduced by the code changes, possibly due to exposing other issues (as was the case here, leading to this fix). And it's not only some obscure platforms, but both macOS and two of the three Linux platforms. But we should discuss this on the PR itself, not here... Sorry about discussing unrelated content here, I sent you a message in mattermost. Anyway, thanks for your help!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11514#issuecomment-1273032219:421,message,message,421,https://root.cern,https://github.com/root-project/root/pull/11514#issuecomment-1273032219,1,['message'],['message']
Integrability,"> @lmoneta the reason why this is not merged is not clear to me: could you clarify?. Ah, now I remember!. This would be a backwards incompatible change, because it changes the meaning of. ```c++; TVectorD{5};; ```; Before, this created a vector with 5 zero elements. With this PR, it will create a vector with a single 5!. This is way too backwards incompatible to be merged. @hageboeck maybe came to the same conclusion, and for that reason decided to not continue working on this PR anymore. Making it work in a backwards compatible way is probably not worth the effort for a legacy pre-STL class like `TVector`. I would instead suggest to change the interfaces of for example TGraph so that they can take initializer lists directly without going over the `TVectorT`. We can also wait for C++26 [1], which will introduce a `std::span` constructor from initializer list. Then we also have the option to use `std::span` in the interfaces to cover this usecase without losing generality: a TVectorT can probably be converted to a `std::span` too. [1] https://en.cppreference.com/w/cpp/container/span/span",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9968#issuecomment-2076889507:653,interface,interfaces,653,https://root.cern,https://github.com/root-project/root/pull/9968#issuecomment-2076889507,2,['interface'],['interfaces']
Integrability,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go?. Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:; ```; $ int Val = 5; // input_line_1; $ #include ""input_line_1"" // input_line_2; $ #include ""input_line_3"" // input_line_3; $ #include ""input_line_5"" // input_line_4; $ Val = 6; // input_line_5; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589#issuecomment-305206910:393,rout,routines,393,https://root.cern,https://github.com/root-project/root/pull/589#issuecomment-305206910,1,['rout'],['routines']
Integrability,"> @osschar the problem that it will not work...; > ; > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:; > ; > ```; > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):; > ""FTGL"" of type SHARED_LIBRARY; > depends on ""RGL"" (weak); > ""RGL"" of type SHARED_LIBRARY; > depends on ""FTGL"" (weak); > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries.; > CMake Generate step failed. Build files cannot be regenerated correctly.; > make: *** [Makefile:9096: cmake_check_build_system] Error 1; > ```; > ; > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR.; > ; > Here is a test PR I opened to show you an error for your proposal: #4786; > ; > ```; > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]; > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-596676095:113,depend,depends,113,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-596676095,7,['depend'],"['dependencies', 'dependency', 'depends']"
Integrability,"> @pcanal proposes to add the literal diagnostic, which helps understand ""recent failure"" in two years, and which allows to search if we run into this again, e.g. in 6-26:; > ; > ```; > [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; > ; > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:491:10: error: module 'std.bits/ranges_base.h' requires feature 'cplusplus20'; > module ""bits/ranges_base.h"" {; > ^; > /usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here; > #include <bits/ranges_base.h> // enable_borrowed_range, enable_view; > ^; > In file included from input_line_3:2:; > ; > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; > #include ""TIsAProxy.h""; > ~~~~~~~~^~~~~~~~~~~~~; > ; > Error: Error loading the default rootcling header files.; > gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; > ```. The commit message says exactly that. I don't think I want to paste the error to say actually the same thing as the commit message says.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429231571:1091,message,message,1091,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429231571,2,['message'],['message']
Integrability,"> @phsft-bot build!; > ; > Could you update the commit message to something like:; > ""[rootcling] Don't generate dictionary to throw it away when called with -r; > ; > This patch should speed up rootcling -r and simplify some of the conditional logic."". It's just cosmetics, but could you maybe shorten the first line a bit more? In github, the `-r` starts to fall into the next line.; ""[rootcling] Suppress dictionary when called with -r.""; Then, the ""throwing away"" part etc can go into the body.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-606481867:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-606481867,1,['message'],['message']
Integrability,"> @raistmer Your `sh` is peculiar. What's the output of these commands:; > ; > ```; > which sh; > sh --help; > sh -V; > man sh; > ```. For the sake of completeness. which sh; /bin/sh. sh --help; sh: 0: Illegal option -- sh --help. sh -V; no output, just return to the prompt. man sh; man: warning: /usr/share/man/man1/sh.1.gz is a dangling symlink; SH(1POSIX) POSIX Programmer's Manual SH(1POSIX); PROLOG; This manual page is part of the POSIX Programmer's Manual. The Linux; implementation of this interface may differ (consult the corresponding; Linux manual page for details of Linux behavior), or the interface may; not be implemented on Linux.; NAME; sh — shell, the standard command language interpreter; SYNOPSIS; sh [−abCefhimnuvx] [−o option]... [+abCefhimnuvx] [+o option]...; [command_file [argument...]]; sh −c [−abCefhimnuvx] [−o option]... [+abCefhimnuvx] [+o option]...; command_string [command_name [argument...]]; sh −s [−abCefhimnuvx] [−o option]... [+abCefhimnuvx] [+o option]...; [argument...]. (and so on). Not sure is it dash or not ; It's result of:. %%html; <div id=term_demo></div>; <script src=""https://code.jquery.com/jquery-latest.js""></script>; <script src=""https://cdn.jsdelivr.net/npm/jquery.terminal/js/jquery.terminal.min.js""></script>; <link href=""https://cdn.jsdelivr.net/npm/jquery.terminal/css/jquery.terminal.min.css"" rel=""stylesheet""/>; <script>; $('#term_demo').terminal(async function(command) {; if (command !== '') {; try {; let res = await google.colab.kernel.invokeFunction('shell', [command]); let out = res.data['application/json'][0]; this.echo(new String(out)); } catch(e) {; this.error(new String(e));; }; } else {; this.echo('');; }; }, {; greetings: 'Welcome to Colab Shell',; name: 'colab_demo',; height: 250,; prompt: 'colab > '; });. I would agree with [ferdymercury](https://github.com/ferdymercury) regarding possible diagnostic error improvement. If nothing can be done no objections vs closing this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1088514490:499,interface,interface,499,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1088514490,2,['interface'],['interface']
Integrability,"> @stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..?. @bluehood sorry, I created this PR before the Jira issue... Without this patch, the test crash on Windows due to a division by zero at this line (224) in `TTreeProcessorMT`:; ```; const auto nFolds = clustersInThisFileSize / maxTasksPerFile;; ```; `maxTasksPerFile` being zero at line 218:; ```; const auto maxTasksPerFile = TTreeProcessorMT::GetMaxTasksPerFilePerWorker() * ROOT::GetImplicitMTPoolSize();; ```; since `ROOT::GetImplicitMTPoolSize()`, which calls `ROOT::Internal::TPoolManager::GetPoolSize()` returns zero, because the `TPoolManager::fgPoolSize` default value is 0, and the constructor of `TPoolManager` has never been called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4947#issuecomment-583272612:112,message,message,112,https://root.cern,https://github.com/root-project/root/pull/4947#issuecomment-583272612,1,['message'],['message']
Integrability,"> @vepadulano I've integrated the support for subnames in TChains, see the adapted output at the bottom of the summary above. Looks ok thanks!. > Finally, I would add this to the top of Describe. What do you think?. I think it's the correct place, although my previous doubt still stands: if a tree has 100s of files the output would become very long, although it's a similar problem to the case where the dataset has 1000s of columns that we already discussed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7829#issuecomment-821078554:19,integrat,integrated,19,https://root.cern,https://github.com/root-project/root/issues/7829#issuecomment-821078554,1,['integrat'],['integrated']
Integrability,"> @vgvassilev , `-DLLVM_BUILD_TYPE=Debug` did not help much. It failed again with the same error ( see https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25499/external/py3-hepdata-lib/0.8.1-23017aefcaec1f6e033b49c0652b0cd2/log ). @smuzaffar, but this great :) Now if you tell me the recipe to debug it would be awesome.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1155124994:161,integrat,integration,161,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1155124994,1,['integrat'],['integration']
Integrability,"> @vgvassilev , cms tests failed. Looks like hepdata-lib package, see the build error [here](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-57f21d/29184/external/py3-hepdata-lib/0.10.1-d5a65a50fc66bb6ceb2097b9bc30c480/log); > ; > ```; > Processing ./v0.10.1.tar.gz; > Preparing metadata (setup.py): started; > Running command python setup.py egg_info; > input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/build/etc/cling/libc.modulemap); > #include <new>; > ^; > input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/std.pcm'; > Warning in cling::IncrementalParser::CheckABICompatibility():; > Failed to extract C++ standard library version.; > Replaced symbol atexit cannot be found in JIT!; > Replaced symbol at_quick_exit cannot be found in JIT!; > <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/libc.pcm' is out of date and needs to be rebuilt; > Failed to load module libc; > Failed to load module std; > Failed to load module _Builtin_intrinsics; > Failed to load module _Builtin_intrinsics; > Failed to load module std; > Failed to load module libc; > python3: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326879491:151,integrat,integration,151,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326879491,1,['integrat'],['integration']
Integrability,"> @vgvassilev I have a doubt here. We can certainly copy individual directories and reduce the churn, but then how can we express that if a certain file, e.g. a tutorial, is modified it then needs to be recopied?. We can make a cmake target depend on multiple files. Then if one gets invalidated the target gets re-run. To avoid copying everything iirc cmake had some copy-if-different functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14953#issuecomment-1997815839:241,depend,depend,241,https://root.cern,https://github.com/root-project/root/issues/14953#issuecomment-1997815839,1,['depend'],['depend']
Integrability,"> @vgvassilev Thanks for review.; > To split it on logical PRs will create a mess - there are ~10-20 missing dependencies, wrong includes, wrong sub-class usages. It will be a lot of work. I really appreciate if we can merge it as is and probably face few minor issues in next days. It will be much more productive. I can do it for you if you prefer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5181#issuecomment-603752145:109,depend,dependencies,109,https://root.cern,https://github.com/root-project/root/pull/5181#issuecomment-603752145,1,['depend'],['dependencies']
Integrability,"> @vgvassilev; > ; > User CPU time, 2nd run of all tests:; > test 	opt 	non-opt; > stressGeometry.cxx 	20.10 	19.36; > stressHistogram.cxx 	16.52 	15.89; > stressGraphics.cxx 	57.68 	16.13; > ; > stressGraphics generates code that's full of virtual function calls. This used to explode; a factor 4 is still terrible but given that this is on the ""awkward"" side of our legacy code likely a price we need to pay. The question is how many tutorials and code such as stressGraphics.cxx we have, and more importantly how much of the experiments/users use that style of coding/interfaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-971694661:571,interface,interfaces,571,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-971694661,1,['interface'],['interfaces']
Integrability,"> @wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message. Hi @bellenot,; Very sorry for the late response, could you please check if you install ""C++ Address Sanitizer"" components in Visual studio?; ![image](https://user-images.githubusercontent.com/17844901/150507061-705a7a2a-5092-4fe4-83c2-efde6fd0fa79.png). Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1018356508:211,message,message,211,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1018356508,1,['message'],['message']
Integrability,"> A doubt: is the test really testing the example provided in #13965 ?. To add to Dev's reply, the crash message for the code provided in that issue changed after the upgrade to LLVM 16. I agree it's the same underlying problem, ie calling a function / constructor with the wrong number of arguments so that the `auto` deduction doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14451#issuecomment-1916315141:105,message,message,105,https://root.cern,https://github.com/root-project/root/pull/14451#issuecomment-1916315141,1,['message'],['message']
Integrability,> A new line somewhere to break the message in two lines wouldn't hurt. Done (by editing on github)! Please squash this away when merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4244#issuecomment-523349216:36,message,message,36,https://root.cern,https://github.com/root-project/root/pull/4244#issuecomment-523349216,1,['message'],['message']
Integrability,"> About the exact line, sorry, I can't tell you.. we have very parallel builds (not verbose as well) but you can easily reproduce while compiling libMathMore.so.6.23.01. Unfortunately, it wasn't ""easy to reproduce"" because it required specific packages to be present (and not present) on the system. However, @pcanal was able to run some interactive commands on the node and I got the information I needed. Your test systems have Netlib BLAS installed, wherein `cblas` functions are in a different library than `blas` functions (the latter, I believe, being implemented in Fortran), whereas mine used OpenBLAS, which provides only one library containing everything. GSL uses functions found only in `cblas`, so `FindBLAS.cmake` sufficient to satisfy GSL's needs in only the latter case, which is why I didn't see the problem. The situation is further complicated by the fact that TMVA can handle both situations via conditional compilation (`-DTMVA_USE_CBLAS`). It will require some care to ensure thatall possible situtations can be handled while satisfying the original goal of my PR, that of ensuring consistency of BLAS implementation between all dependents. Since the holiday break is looming and I have other demands on the remaining time, I am closing this PR for the nonce; thanks for your help and time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6950#issuecomment-746242933:1151,depend,dependents,1151,https://root.cern,https://github.com/root-project/root/pull/6950#issuecomment-746242933,1,['depend'],['dependents']
Integrability,"> According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X. OK, fine, but it uses configure/make and I'll have to figure out how to build it and how far it's supported on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-946480280:90,depend,depend,90,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-946480280,1,['depend'],['depend']
Integrability,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394475678:83,depend,depending,83,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394475678,1,['depend'],['depending']
Integrability,"> Adding NEEDED section when generating so files.; > This is like a ""static linker"" solution, which means we'll change; > rootcling_impl to properly add dependency libraries. This features already exist but is based on the content of rootmap files. See TSystem::CompileMacro (In particular the use of mapfileout and depLibraries) and rootcling's --lib-list-prefix= and --rml options.). By the way, you can see the command line executed by ACLiC by adding the letter v after the trailing +.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396913441:153,depend,dependency,153,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396913441,1,['depend'],['dependency']
Integrability,"> After updating ROOT to [026a1a7](https://github.com/root-project/root/commit/026a1a701b246b495fda3054719a2a224e4299f8), the first error is gone. But dictionary generation still fails due to ""Missing lambda call operator"". Build log: [link](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-2c2cf9/30616/build.log). Correction: the first error is still there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1430101217:300,integrat,integration,300,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1430101217,1,['integrat'],['integration']
Integrability,"> Agreed today at I/O meeting that we need to remind ourselves and investigate these questions. I'm okay with merging this PR if e.g. @hahnjo could create a new issue with the above questions - this seems to indicate a bug, whether it's a missing error message or an ignored linkdef entry or whatever it is. https://github.com/root-project/root/issues/13303",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13238#issuecomment-1647548705:253,message,message,253,https://root.cern,https://github.com/root-project/root/pull/13238#issuecomment-1647548705,1,['message'],['message']
Integrability,"> Also, I am not sure whether I should combine the commits (as Guilherme explained) . I would prefer if you do .. in addition I would prefer if the git log was expanded to include the complete explanation given in the PR introduction. > do you have a preference on whether to fix all the formatting complaints or leave the file formatting consistent with the existing code?. I would apply the recommendation. **However** I still have to actually review the proposal for content ... (i.e. in particular I am still pondering if the interface selected is the best one ...). More later this week. thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-319126181:530,interface,interface,530,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-319126181,1,['interface'],['interface']
Integrability,"> Also, when calling an operator, instead of using the function-style; way of doing ""a->operator==(b)"", we now just call ""a == b""; because that seems to be correct way of calling overloaded operators.; Again, this should still resolve in the right lookup because we; provide the arguments with the exact type the target function; expects. Note that the semantic of CallFunc is as follow:; * find (by whatever means) a **specific** function/overload ; * call that **specific** overload. Having the compilation of the wrapper function do **another** overload resolution defeats part of the purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/614#issuecomment-306821913:516,wrap,wrapper,516,https://root.cern,https://github.com/root-project/root/pull/614#issuecomment-306821913,1,['wrap'],['wrapper']
Integrability,"> Although the ProgressBar won't be a progress bar when we don't know the number of events ... You're right, better name pending (`AddProgressIndicator`?). > It would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using RLoopManager::RegisterCallback. Yes that's a great idea, there are actually several advantages:. - as you mention, in the callback you wouldn't have to discard a partially evaluated result anymore; - `AddProgressIndicator` wouldn't need to return anything, it can just do what it says without users having to deal with the returned object; - probably the biggest: we wouldn't have to do any magic to make sure that the method is called _on the head node_ (because if you call it on a `Filter`, now you are updating the progress bar every N _filtered_ entries) . Now -- of course we don't just expose the `RLoopManager` to _anyone_, but we trust you, so you can add a `ROOT::Internal::ExtractLoopManager` function as a friend of `RInterface` that just returns `interface.fLoopManager`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880538021:1043,interface,interface,1043,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880538021,1,['interface'],['interface']
Integrability,"> An alternative would be to check in a ""known"" hsimple.root and not generate it on the fly. This has the disadvantage of no longer testing differences in how we write it. Albeit we could store a known version and used it (read it) to write a new version. > found a better solution by disabling floating point contractions .... . Even better :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1656177155:310,contract,contractions,310,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1656177155,1,['contract'],['contractions']
Integrability,"> And I confirm that it does, as code in unnamed macros is wrapped as needed. Unless @Axel-Naumann, @vgvassilev or @hahnjo suggest otherwise, the only thing missing is to fix the two failing tests reported above. **EDIT:** sibling roottest PR is https://github.com/root-project/roottest/pull/951.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654#issuecomment-1512889140:59,wrap,wrapped,59,https://root.cern,https://github.com/root-project/root/pull/12654#issuecomment-1512889140,1,['wrap'],['wrapped']
Integrability,> And IIRC even building the ODBC part is becoming increasingly tricky with current distros... Just set default OFF for ODBC building. . > We are not aware of current users of the ODBC interfaces. I have no idea. I personally did not try it for more than 10 years.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-452748433:185,interface,interfaces,185,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-452748433,1,['interface'],['interfaces']
Integrability,"> And `clingInterpreter` is defined at `interpreter/cling/lib/Interpreter/CMakeLists.txt` with all its LLVM dependencies:. After some investigation I found the problem. Let's inspect the `LINK_LIBRARIES` from `clingInterpreter`:; ```; Properties for TARGET clingInterpreter:; clingInterpreter.LINK_LIBRARIES = ""clingUtils;clangCodeGen;clangDriver;clangFrontend;clangParse;clangSema;clangAnalysis;clangEdit;clangRewrite;clangRewriteFrontend;clangSerialization;clangAST;clangBasic;clangLex;dl;LLVMAnalysis;LLVMCore;LLVMCoroutines;LLVMCoverage;LLVMExecutionEngine;LLVMipo;LLVMJITLink;LLVMLTO;LLVMMC;LLVMObject;LLVMOption;LLVMOrcJIT;LLVMRuntimeDyld;LLVMScalarOpts;LLVMSupport;LLVMTarget;LLVMTransformUtils;LLVMBinaryFormat;LLVMAArch64CodeGen;LLVMAArch64AsmParser;LLVMAArch64Desc;LLVMAArch64Disassembler;LLVMAArch64Info;LLVMAArch64Utils;LLVMAMDGPUCodeGen;LLVMAMDGPUAsmParser;LLVMAMDGPUDesc;LLVMAMDGPUDisassembler;LLVMAMDGPUInfo;LLVMAMDGPUUtils;LLVMARMCodeGen;LLVMARMAsmParser;LLVMARMDesc;LLVMARMDisassembler;LLVMARMInfo;LLVMARMUtils;LLVMAVRCodeGen;LLVMAVRAsmParser;LLVMAVRDesc;LLVMAVRDisassembler;LLVMAVRInfo;LLVMBPFCodeGen;LLVMBPFAsmParser;LLVMBPFDesc;LLVMBPFDisassembler;LLVMBPFInfo;LLVMHexagonCodeGen;LLVMHexagonAsmParser;LLVMHexagonDesc;LLVMHexagonDisassembler;LLVMHexagonInfo;LLVMLanaiCodeGen;LLVMLanaiAsmParser;LLVMLanaiDesc;LLVMLanaiDisassembler;LLVMLanaiInfo;LLVMLoongArchCodeGen;LLVMLoongArchAsmParser;LLVMLoongArchDesc;LLVMLoongArchDisassembler;LLVMLoongArchInfo;LLVMMipsCodeGen;LLVMMipsAsmParser;LLVMMipsDesc;LLVMMipsDisassembler;LLVMMipsInfo;LLVMMSP430CodeGen;LLVMMSP430AsmParser;LLVMMSP430Desc;LLVMMSP430Disassembler;LLVMMSP430Info;LLVMNVPTXCodeGen;LLVMNVPTXDesc;LLVMNVPTXInfo;LLVMPowerPCCodeGen;LLVMPowerPCAsmParser;LLVMPowerPCDesc;LLVMPowerPCDisassembler;LLVMPowerPCInfo;LLVMRISCVCodeGen;LLVMRISCVAsmParser;LLVMRISCVDesc;LLVMRISCVDisassembler;LLVMRISCVInfo;LLVMSparcCodeGen;LLVMSparcAsmParser;LLVMSparcDesc;LLVMSparcDisassembler;LLVMSparcInfo;LLVMSystemZCodeGen;LLVMSystemZAsmParser;LLVMSyst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1668358131:108,depend,dependencies,108,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1668358131,1,['depend'],['dependencies']
Integrability,"> And if still we want to keep two APIs, how would I implement it? Duplicating code?. Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility?. The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-525481081:149,interface,interface,149,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-525481081,4,['interface'],"['interface', 'interfaces']"
Integrability,"> And yes TTree::Draw should return a TH1D. @pcanal, can this be changed ?. This is straightforward to change (in TSelectorDraw), it is the obvious solution to the problem (albeit it actually just delay the problem per se .. but by a lot I guess :) ) but is not without visible consequences:. * Increase memory usage (would be visible by users that use a lot of Draws).; * Potential type error for those that call Draw and then retrieve the htmp histogram (lucky users would have provided their own .. .likely also a TH1F though !? ... the unlikely one would have C-style casted it to TH1F (which actually might still appears to work depending which routines they call on that pointer) ... and the most unlucky would have use dynamic_cast but forgot to test the result .... and the weird ones would rely on the saturation to detect some type of results (see [xkcd space bar heating](https://xkcd.com/1172/))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-791556472:634,depend,depending,634,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-791556472,2,"['depend', 'rout']","['depending', 'routines']"
Integrability,"> Apparently ROOT's llvm-project is not up-to-date. https://github.com/root-project/llvm-project/ matches what is currently in `master`. In this PR, you are modifying files in `interpreter/llvm-project/`, so *of course* these changes cannot be reflected in https://github.com/root-project/llvm-project/. This needs to be synchronized eventually, but first the test failures need to be addressed (across all platforms).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1755369266:321,synchroniz,synchronized,321,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1755369266,1,['synchroniz'],['synchronized']
Integrability,"> Are there plans/work in progress for ROOT to move to a newer cppyy anytime soon?. Hi @taehyounpark! We have recently upgraded the cppyy frontend in ROOT, which will be part of ROOT 6.32:; https://github.com/root-project/root/pull/14507. However, it doesn't fix this reproducer. I suspect that this also requires to synchronize the [cppyy-backend](https://github.com/wlav/cppyy-backend/tree). The problem is that this backend is a fork of ROOT itself, including cling. And then, cppyy made patches to this fork of cling/ROOT for e.g. better lambda support and other advanced C++ features and details of the type system. The problem is that we can't take these patches 1 to 1 back to ROOT, because ROOT also used Cling for other things like IO, and the patches in cppyy did not have to consider compatibility with that. We try to make cppyy independent of cling on the long term to solve this conundrum. In the meantime, I can see what we are exactly missing in upstream ROOT or Cling to make the reproducer in this issue work. Maybe it is an uncontroversial patch. This will also take some time though. I worked a lot on PyROOT in the last weeks and have to work on other responsibilities in the next weeks before coming back to this. Or maybe @wlav has a hint?. > In the meantime, might there be anything I could try to ""persuade"" similar quirks, from either C++ or Python to make them work?. Unfortunately not. In ROOT, we don't use complicated template code with type traits in user interfaces. That's maybe my recommendation to you: can you simplify the user-facing interface and hide the templated stuff maybe behind some type-erased types or simplify it a bit? IMHO, templates are great for efficient implementations, but for user interfaces it can be a nightmare (think only about the error messages...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062#issuecomment-2022342966:317,synchroniz,synchronize,317,https://root.cern,https://github.com/root-project/root/issues/15062#issuecomment-2022342966,5,"['interface', 'message', 'synchroniz']","['interface', 'interfaces', 'messages', 'synchronize']"
Integrability,"> Are these commit names better?. A bit, but look at this commit for example:; https://github.com/root-project/root/commit/6ddcc0d17cd6d5fe0dc11b5ddca3989fc1fda159. You can use the message to explain a bit better what was going on e.g.:; ```; [TF1] Fix buffer overflow. TF1 was copying 5 characters from an incoming string without checking its length.; This was replaced by strncmp, which takes into account the length.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862403737:181,message,message,181,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862403737,1,['message'],['message']
Integrability,"> Are you suggesting we collect everything from all these files - and what is their relative priority?. Yes, `system.rootrc` would contain a line like `import /etc/rootrc.d/*.rootrc` or similar. Relative priority could be resolved by sorting by filename (same as shell wildcard expansion) (e.g. can be used with xxx numeric prefix and such - not perfect, but probably practical enough). Examples:; * In autofs maps one can write `+dir:/etc/auto.master.d`, or; * in apache config [`IncludeOptional conf.d/*.conf`](https://httpd.apache.org/docs/2.4/mod/core.html#include). I mean, one could also modify the `system.rootrc` file in some postinstall/preremove pkg hooks ... but that could be tricky and require more sophisticated logic than desirable in such scripts. But then again, spack, aliBuild, and other *user-space pkg managers* install each package into their own prefix and have no or limited concepts of shared directories across packages ... In the end, I am looking for a good way to *bake-in* some default search paths at install time and from a package that depends on root, ideally without setting up environment variables at all. But having `ROOT_LIBRARY_PATH` would already go a long way for us to be able to resolve some conflicts we have when being forced to use `LD_LIBRARY_PATH`, so I don't want to stall progress on that aspect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-802032258:1069,depend,depends,1069,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-802032258,1,['depend'],['depends']
Integrability,"> As I said before, we should have just a TArrayL, a TH1L and THnSparseL all based on Long64_t. We could use as typedef TArrayL64 to TArrayL. It does not make any sense to keep a TArrayL based on Long_t that is not portable, using a 32 bit integer on a 32 bit machine and a 64 bit integrated on a 64 bit machine. @Axel-Naumann , @pcanal do you agree with this ?. Note: there are some functions within ROOT that use explicitly Long_t and TArrayL. If the change is performed, then these functions would need to be modified, too. For example: https://github.com/root-project/root/blob/master/graf2d/asimage/src/TASImage.cxx#L2405. But still not sure if any of these could break backward compatibility. Maybe it's easier to just mark TArrayL as deprecated in the documentation, recommending instead TArrayL64??",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1320906798:281,integrat,integrated,281,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1320906798,1,['integrat'],['integrated']
Integrability,"> As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough?. I see that now, yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775#issuecomment-490010544:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/3775#issuecomment-490010544,1,['message'],['message']
Integrability,"> As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Yes the example is meant to be single threaded. If users run the analysis on multiple threads they have to make sure the callback can be called by multiple threads concurrently. > it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. No guarantees there: it's going to be a ""partial result"".; If it's ""thread-local partial"" or ""global partial"" depends on what each action's `PartialUpdate` method will do in practice. For some kind of actions it might be fine in terms of RAM and runtime to expose the ""global"" partial result, for others it could be an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331171774:538,depend,depends,538,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331171774,1,['depend'],['depends']
Integrability,"> As far as I understood, CompileMacro is using rootcling and rootmaps only for initializing gAutoLoads, which is a huge vector. Not only, it also generate the dictionary source file which (for now) contains scaffolding C++ functions (GenerateInitInstance), accelerator functions to bypass the interpreter (Collection Proxies, wrapper around operator new and delete, etc.) and implementation of member function declared by ClassDef. Also, and related, I can't remember if we measured whether the content of the root-io-pcm is providing an acceleration or not compare to just with the module. (The root-io-pcm contains pre-digested list of data members and offsets and a few other things).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-435135744:327,wrap,wrapper,327,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-435135744,1,['wrap'],['wrapper']
Integrability,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear?. Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1090214128:397,depend,dependent,397,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1090214128,1,['depend'],['dependent']
Integrability,"> Before we can merge (or even test) this, the version needs to be uploaded at https://lcgpackages.web.cern.ch/tarFiles/sources/. I assume that @simonmichal or @abh3 can do this?. > The checksum of the github files are not stable (somehow the files are 'routinely' regenerated sometimes with different version of tar or gzip), so we can not rely on downloading it directly from github. Ah that's interesting. Good to know for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725#issuecomment-1151363501:254,rout,routinely,254,https://root.cern,https://github.com/root-project/root/pull/10725#issuecomment-1151363501,1,['rout'],['routinely']
Integrability,"> Build failed on ROOT-fedora29/python3.; > Running on root-fedora29-3.cern.ch:/build/workspace/root-pullrequests-build; > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5496-ROOT-fedora29-python3&date=2020-04-29).; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79377/console).; > ; > ### Errors:; > * [2020-04-29T15:50:23.917Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1498 (message):; > * [2020-04-29T15:50:23.917Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):. This is understood, waiting for Axel's PR about fail-on-missing to adapt on top on it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5496#issuecomment-621306656:513,message,message,513,https://root.cern,https://github.com/root-project/root/pull/5496#issuecomment-621306656,2,['message'],['message']
Integrability,> Build failed on ROOT-fedora31/noimt.; > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5919-ROOT-fedora31-noimt&date=2020-07-15).; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89877/console).; > ### Errors:; > ; > * [2020-07-15T17:08:37.106Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1128 (message):. https://github.com/root-project/root/blob/e47774fc9887a4dedfaeeef42ed379c0a5a8ddb2/cmake/modules/SearchInstalledSoftware.cmake#L1126-L1128. @oshadura I think we maybe need to install `liburing` on the `fedora31` machine? :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-658922862:524,message,message,524,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-658922862,1,['message'],['message']
Integrability,"> Build failed on ROOT-performance-centos7-multicore/default.; > [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71269/console).; > ; > ### Warnings:; > * CMake Warning at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):; > * CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:33 (message):; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1695:38: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPScope.cxx:72:12: warning: unused parameter ‘pyclass’ [-Wunused-parameter]; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPScope.cxx:72:12: warning: unused parameter ‘pyname’ [-Wunused-parameter]; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPScope.cxx:72:12: warning: unused parameter ‘pyval’ [-Wunused-parameter]; > * cc1plus: warning: unrecognized command line option ""-Wno-register"" [enabled by default]; > ; > ### Failing tests:; > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71269/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71269/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/). The failing tests in this machine are not introduced by this PR. ; It can be seen in this dummy PR; https://github.com/root-project/root/pull/4576",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547602777:290,message,message,290,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547602777,2,['message'],['message']
Integrability,"> Build failed on ROOT-performance-centos7-multicore/default.; > [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/console).; > ; > ### Warnings:; > * CMake Warning at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):; > ; > ### Failing tests:; > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); > * [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/). In the failing tests involving TNtuples, the main difference between a successful working environment and this machine is in the root file used by the above mentioned tests: in this case, the TNtupleD is saved in the root file without name, so when it's called by name a TObject nullptr is returned, making the tests fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-550358311:290,message,message,290,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-550358311,1,['message'],['message']
Integrability,"> Build failed on ROOT-ubuntu16/nortcxxmod. Running on sft-ubuntu-1604-4.cern.ch:/build/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139908/console).; > ### Errors:; > ; > * [2022-03-21T17:21:12.635Z] stderr: error: Failed to merge in the changes.; > ; > * [2022-03-21T17:21:19.919Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1082 (message):. I just rebased to prevent the build from failing, in case you could restart the build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9655#issuecomment-1074224117:466,message,message,466,https://root.cern,https://github.com/root-project/root/pull/9655#issuecomment-1074224117,1,['message'],['message']
Integrability,> Build failed on ROOT-ubuntu16/nortcxxmod.; > Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6212-ROOT-ubuntu16-nortcxxmod&date=2020-08-19).; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93129/console).; > ### Errors:; > ; > * [2020-08-19T09:18:13.430Z] CMake Error at cmake/modules/SearchInstalledSoftware.cmake:721 (message):; > ; > * [2020-08-19T09:18:13.430Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1048 (message):. ```; 12:18:13 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:721 (message):; 12:18:13 Pythia8 libraries not found and they are required (pythia8 option enabled); 12:18:13 Call Stack (most recent call first):; 12:18:13 CMakeLists.txt:213 (include); ```. @Axel-Naumann can you install what's needed on that node?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6212#issuecomment-676209492:520,message,message,520,https://root.cern,https://github.com/root-project/root/pull/6212#issuecomment-676209492,3,['message'],['message']
Integrability,"> Build failed on ROOT-ubuntu2204/nortcxxmod.; > Running on root-ubuntu-2204-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177113/console). Totally unrelated. @Axel-Naumann, this should be now ready for review; also, note the new messages in the build log, i.e.; ```; -- Cloning roottest from 'https://github.com/root-project/roottest' (master); Cloning into 'roottest'...; ```; or; ```; -- Found roottest: /home/sftnight/build/workspace/root-pullrequests-build/root/../roottest; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13003#issuecomment-1592010000:346,message,messages,346,https://root.cern,https://github.com/root-project/root/pull/13003#issuecomment-1592010000,1,['message'],['messages']
Integrability,> Build failed on mac1014/cxx17.; > [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71275/console).; > ; > ### Errors:; > * CMake Error at cmake/modules/RootBuildOptions.cmake:396 (message):; > * CMake Error at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):; > ; > ### Warnings:; > * CMake Warning at /build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):. Fails because it configures more than once (don't know why) and if the python executable changes we need to specify also the other two flags PYTHON_LIBRARY and PYTHON_INCLUDE_DIR. Manual build needed on this machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547601898:212,message,message,212,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547601898,3,['message'],['message']
Integrability,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139399/console).; > ### Errors:; > ; > * [2022-03-15T09:41:07.706Z] ghprbPullLongDescription=`\r\nIn file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,\r\n from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':\r\n/builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?\r\n 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));\r\n | ^~~~~~\r\n | wmemcpy\r\ngmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1\r\n`\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAdd #include &lt;cstring&gt; for std::memcpy\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\n. The build reports an error because it quotes the git commit message in the log and then detects the quoted error message in the commit message as a failure when it parses the log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10116#issuecomment-1068139049:1293,message,message,1293,https://root.cern,https://github.com/root-project/root/pull/10116#issuecomment-1068139049,3,['message'],['message']
Integrability,"> Build failed on windows10/cxx14. Running on null:C:\build\workspace\root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149183/console).; > ; > ### Errors:; > * [2022-07-05T13:46:09.199Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/TBB-prefix/src/TBB-stamp/TBB-install-Release.cmake:49 (message):; > * [2022-07-05T13:46:39.257Z] CMake Error at C:/build/workspace/root-pullrequests-build/build/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-Release.cmake:49 (message):. If you want to work-around these errors, applying this diff should fix it:; ``` ; diff --git a/CMakeLists.txt b/CMakeLists.txt; index 93034be00d..66bceeba04 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -41,6 +41,7 @@ project(ROOT); set(ENV{LANG} C). #---Set paths where to put the libraries, executables and headers------------------------------; +file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/lib); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib); set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin); ```; And I'll investigate later why it has this strange behavior",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175107252:375,message,message,375,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175107252,2,['message'],['message']
Integrability,"> Build failed on windows10/cxx14.; > Running on null:C:\build\workspace\root-pullrequests-build; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116839/console).; > ### Errors:; > ; > * [2021-05-05T15:12:47.599Z] CMake Error at C:/Program Files/CMake/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:165 (message):; > ; > * [2021-05-05T15:12:47.599Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1107 (message):. @oshadura I think that we should also disable `daos_mock` on Windows, as it depends on `libuuid`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8094#issuecomment-832797544:366,message,message,366,https://root.cern,https://github.com/root-project/root/pull/8094#issuecomment-832797544,3,"['depend', 'message']","['depends', 'message']"
Integrability,"> But should we explicitly add optional ROOT dependencies there? Not sure. Anyway I put it there temporarily, for the sake of a CI run. This won't work, dependencies from `requirements.txt` are installed directly into the CI image which is generated once per night based on `master`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2045293193:45,depend,dependencies,45,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2045293193,2,['depend'],['dependencies']
Integrability,> But should we explicitly add optional ROOT dependencies there?. That file contains only optional ROOT dependencies (i.e. runtime dependencies),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2045236306:45,depend,dependencies,45,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2045236306,3,['depend'],['dependencies']
Integrability,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697616097:552,interface,interface,552,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697616097,1,['interface'],['interface']
Integrability,"> Can we maybe make these methods private and only use them internally in ROOT?. It is other way around. ; We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. ; Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. ; Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`.; No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. ; `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162757886:191,depend,depend,191,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162757886,1,['depend'],['depend']
Integrability,"> Can we simply add const TROOT *&GetROOTPtrRef(), in the source file of where gROOT is injected in the list of globals?. Question - should this function be public? ; And that about other gInterpreter and gClient?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457718764:88,inject,injected,88,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457718764,1,['inject'],['injected']
Integrability,> Can we use the -exclude-libs option in the link command for libCling?. Any suggestion on how we can implement this in CMake? Adding `--exclude-libs=ALL` fails at runtime:; ```; IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cPKv' unresolved while linking [cling interface function]!; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14778#issuecomment-1971998813:315,interface,interface,315,https://root.cern,https://github.com/root-project/root/issues/14778#issuecomment-1971998813,1,['interface'],['interface']
Integrability,"> Can you add please dependency on ${OPENGL_LIBRARIES}?. Seems to be, I need add `GLEW` as dependency - but only when it `builtin_glew`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5203#issuecomment-603102555:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/5203#issuecomment-603102555,2,['depend'],['dependency']
Integrability,"> Can you remind us of the output of ROOT v6.16's `root-config --libs`?. Sure. 6.16:; ```; -L/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -Wl,-rpath,/opt/software/linux-scientific7-x86_64/gcc-4.8.5/root-6.16.00-zmcilzuttugwi3pxlrrp5r3ztoh544sn/lib -lm -ldl -rdynamic; ```; 6.24/06:; ```; root-config --libs; -L/path/to/root/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -pthread -lm -ldl -rdynamic; ```. > Are you building against ROOT v6.16 in the above example?. In my previous message it was against 6.24/06 built with the same gcc:; ```; cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/path/to/root .. -Dx11=OFF -Dsqlite=OFF -Dtmva=OFF -Dxrootd=OFF -Dpyroot=OFF -Dmlp=OFF -Dssl=OFF -Dhttp=OFF -Dclad=OFF -Ddataframe=OFF -Dpythia6=ON -Dbuiltin_tbb=OFF -Dbuiltin_xrootd=OFF -Dbuiltin_freetype=OFF; ```. > ROOT's master does not support GCC 4.8 anymore. At godbolt link above you can reproduce the same error with GCC 11.2 and clang 13.0.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9422#issuecomment-992342989:835,message,message,835,https://root.cern,https://github.com/root-project/root/issues/9422#issuecomment-992342989,1,['message'],['message']
Integrability,"> Commit [e97f74d](https://github.com/root-project/root/commit/e97f74d67e4cf4133d431ffabda283e924fb1bb6) changed the tutorials `fit/graph2dfit.C` and `hist/hstack.C` to not return a pointer to `TCanvas`. Remove the special case and expect the test to exit code 0. Yes, see my commit message quoted here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11830#issuecomment-1337578448:283,message,message,283,https://root.cern,https://github.com/root-project/root/pull/11830#issuecomment-1337578448,1,['message'],['message']
Integrability,> Could you add the error message we get to the commit log?. @Axel-Naumann Done,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312#issuecomment-457488367:26,message,message,26,https://root.cern,https://github.com/root-project/root/pull/3312#issuecomment-457488367,1,['message'],['message']
Integrability,> Could you fix your GitHub profile match to the one from the commit message?. Done!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4213#issuecomment-522001389:69,message,message,69,https://root.cern,https://github.com/root-project/root/pull/4213#issuecomment-522001389,1,['message'],['message']
Integrability,"> Did we warn SPI about this?. Yes, I got a message from @guitargeek . We are not setting this option anywhere. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15426#issuecomment-2098027465:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/15426#issuecomment-2098027465,1,['message'],['message']
Integrability,"> Did you forget to push this file?. I think it's a missing dependency of libFitPanel.so (https://root.cern.ch/doc/master/classTFitParametersDialog.html), I tried adding it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15177#issuecomment-2049400175:60,depend,dependency,60,https://root.cern,https://github.com/root-project/root/pull/15177#issuecomment-2049400175,1,['depend'],['dependency']
Integrability,"> Do we agree that the code above should produce (in principle) the same output?. I don't see why not. We really need an authoritative answer as to which of the plots is correct though. Maybe raw TTree and TTreeReader can act as tie-breaker. There are no missing entries (the number of entries in the two histograms is the same) so it seems that one of the two interfaces is reading wrong values -- but how can it be that histogram mean and variance are exactly the same in the two cases? The mean, I can understand, but the variance should be larger for the upper histo than for the lower histo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-712736715:361,interface,interfaces,361,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-712736715,1,['interface'],['interfaces']
Integrability,"> Do we like the name of the function?. Yes, I'm pretty sure all physicists understand ""schema"" as ""the structure of the dataset/TTree"" . > Do we like that it returns a string rather than printing to stdout?. Yes, why not? It's more flexible than a printout. > Should we add a header to the table?. Yes, definitely. > Should we add any other information (see TTree::Print)?. Probably. About the rest:. * Friend branches: I agree with Stefan the should not be treated specially, they are just more columns.; * Total number of entries: does not generalize to datasources, it might not be cheap in general. However there is no reason why we cannot print a datasource-dependant heading, with a more complete heading for TTree/TChain and less info for other datasources.; * Size in memory of the TTree and the columns: that's not a thing, TTree knows at most the compressed size of branches; * null values are not a thing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-801373555:664,depend,dependant,664,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-801373555,1,['depend'],['dependant']
Integrability,"> Do you have a link to that past issue/discussion? . https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065. > It seems to me that this change under review is adding more flexibility without taking anything away. . Indeed, if we are adding only the missing dependencies. The current PR does more than that and I am not sure if that is strictly needed. >We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions. Yes, that project is called clang-repl. Unfortunately, I do not anticipate all patches to land in llvm because some hardly would make sense there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127790480:288,depend,dependencies,288,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127790480,2,"['depend', 'integrat']","['dependencies', 'integrate']"
Integrability,> Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...). @ponyisi yes :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8390#issuecomment-859622020:72,message,message,72,https://root.cern,https://github.com/root-project/root/pull/8390#issuecomment-859622020,1,['message'],['message']
Integrability,"> Do you mean short term while we fix the issue or do you mean just ignore the issue?; > In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. If the feature does not work, and it is advertised as a public tutorial, then it should be either fixed soon (i.e. before next release imho) or we need to back down on the feature and inject some sort of warning mechanism that the feature is not really working. Same as we had to recently do for https://github.com/root-project/root/issues/15197 via https://github.com/root-project/root/pull/15198. We cannot provide tutorials that just do not work, so I don't see a third way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2051101896:471,inject,inject,471,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2051101896,1,['inject'],['inject']
Integrability,> Does that catch the error issued by dlopen itself?. Yes but just by parsing error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148#issuecomment-394742752:84,message,messages,84,https://root.cern,https://github.com/root-project/root/pull/2148#issuecomment-394742752,1,['message'],['messages']
Integrability,"> Doesn't have setting the build type the same effect, which is what I do right now?; > ; > ```; > CMAKE_ARGS -G ${CMAKE_GENERATOR}; > -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}; > ```; > ; > I wonder if we can make the code more platform in-depended like this. As I said, `CMAKE_BUILD_TYPE` is meaningless on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508#issuecomment-2112211397:238,depend,depended,238,https://root.cern,https://github.com/root-project/root/pull/15508#issuecomment-2112211397,1,['depend'],['depended']
Integrability,"> EDIT: I restored the original comment. Helped me, might help others in the future.; Yes, it is essential to explain why we are not using the normal interface. > but it definitely looks like TFile::GetObject cannot be used in this header file. Well in this case use GetObjectChecked(const char *namecycle, const TClass* cl);",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/828#issuecomment-319767735:150,interface,interface,150,https://root.cern,https://github.com/root-project/root/pull/828#issuecomment-319767735,1,['interface'],['interface']
Integrability,> ELF header does contain dependency information. Only if it was explicitly added to library by the user (via the link command line). This is now the common case but is not always the case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394477265:26,depend,dependency,26,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394477265,1,['depend'],['dependency']
Integrability,"> Edit: And I would call the code above exploratory ;) It's a smallish sample in terms of HEP data and you just want to see the distribution of each column. Yes, that should make it ok to run on fewer events right?. We could add warnings like ""please specify a binning"" if vectors become too large, but it's quite unclear what ""too large"" is (in principle in depends on the exact runtime behavior of the analysis, e.g. whether events are filtered a lot or not, but that would require that RDF monitors its own RAM usage which is tricky). So I'm not sure how to proceed. Ideas? :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-720431402:359,depend,depends,359,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-720431402,1,['depend'],['depends']
Integrability,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790698646:443,message,messages,443,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790698646,1,['message'],['messages']
Integrability,"> Even-though this might be true, the C++ standard explicit says that it is undefined behavior to read a value concurrently with an update with any explicit synchronization mechanism (for example std::atomic). In practice, this means that the same 'happenstance' you describe might not be true on other platforms. Furthermore the compiler is also allowed to re-order code in 'surprising ways' that would thwart/foil the assumption on the happenstance you describe.; > ; > Thus our policy, consistent with the standard is that if a value can be updated while being read, it either must be an atomic or both the read and write must be protected by a lock. [This is not meant to preclude any other means of synchronization to achieve the same goal]. Yes, you are right. I will redo the changes while also making them thread-safe. On ARM a 64bit store can use more than one instruction, actually. I will also add comments explaining the code, I agree it's a bit confusing at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/957#issuecomment-327844814:157,synchroniz,synchronization,157,https://root.cern,https://github.com/root-project/root/pull/957#issuecomment-327844814,2,['synchroniz'],['synchronization']
Integrability,"> Fix the cmssw reported issue - I believe it is due to not properly rebased patch in clang. Just pointing out that this is likely easy to reproduce by renaming the build dir - i.e. the error message basically says ""run-time dir is different from build-time dir"". Will you have a stab at it, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326797994:192,message,message,192,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326797994,1,['message'],['message']
Integrability,"> Fixed pretty-printing, remaining issues seem related to autoloading:; > ; > ```; > IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6VecOps15SmallVectorBaseIjE8grow_podEPvmm' unresolved while linking [cling interface function]!; > You are probably missing the definition of ROOT::VecOps::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long); > Maybe you need to load the corresponding shared library?; > ```; > ; > Not sure what's going on on Windows, will have to investigate. Could be due to an an inline function?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-815675983:214,interface,interface,214,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-815675983,1,['interface'],['interface']
Integrability,"> For me, on Mac, it is protected. It seems to me that it is undefined behavior. Sometimes, I get a normal error message, sometimes I get the crash. See here below consecutive runs:; ```. /tmp$ root -l main.cpp ; root [0] ; Processing main.cpp...; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; /tmp$ root -l main.cpp ; root [0] ; Processing main.cpp...; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; /tmp$ root -l main.cpp ; root [0] ; Processing main.cpp... *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7b9f49845a in __GI___wait4 (pid=95642, stat_loc=stat_loc; entry=0x7ffd4f13a298, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f7b9f49841b in __GI___waitpid (pid=<optimized",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315454187:113,message,message,113,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315454187,1,['message'],['message']
Integrability,"> For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). Can you be more explicit of what it looks like? (I.e. clarifying whether this result is an ambiguous message or not).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1936201275:18,message,messages,18,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1936201275,4,['message'],"['message', 'messages']"
Integrability,"> Great, thanks! Can you update the commit message (`git commit --amend; git push -f`) to include these findings? That makes the motivation for the change much clearer!. Done. thanks @Axel-Naumann ! Is it OK like this now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5474#issuecomment-629076607:43,message,message,43,https://root.cern,https://github.com/root-project/root/pull/5474#issuecomment-629076607,1,['message'],['message']
Integrability,"> Hah, sorry for that. I was convinced it terminated as well. The looging routine that terminates is 'Fatal' rather than 'Error'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-504664046:74,rout,routine,74,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-504664046,1,['rout'],['routine']
Integrability,"> Having ROOT libraries in <libdir>/ROOT/ isn't an option for Debian?. This is what I currently do for my private builds, but this requires changing the linker's search path, which isn't allowed in official Debian packages as it breaks Debian's tools to automatically detect dependencies (the policy specifies that libraries in `<libdir>/<something>/` are private libraries (e.g. plugins), so dependency checking is turned off on purpose). > The main issue is backwards compatibility - all those Makefiles that just link against -lCore. Right, maintaining backwards compatibility is probably a necessity for such a change. Maybe one can add a (by default enabled) option to symlink from the old libraries to the new ones? I.e. `libCore.so -> libROOTCore.so`? For the average ROOT user this won't make any difference, and in Debian we can disable the option (I don't expect anyone running ROOT software that is still written with Makefiles instead of CMake using Debian system packages). This could be achieved in CMake by adding a new option to the `ROOT_STANDARD_LIBRARY_PACKAGE` marco, looking something like:; ```cmake; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTGui; HEADERS; ...; SOURCES; ...; DICTIONARY_OPTIONS; ...; DEPENDENCIES; ...; BACKWARDS_COMPAT; Gui; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10985#issuecomment-1188985620:275,depend,dependencies,275,https://root.cern,https://github.com/root-project/root/issues/10985#issuecomment-1188985620,3,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependencies', 'dependency']"
Integrability,"> Hello Rahul,; > ; > I had a look over the changes. and added some comments.; > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3922#issuecomment-525306032:183,integrat,integration,183,https://root.cern,https://github.com/root-project/root/pull/3922#issuecomment-525306032,1,['integrat'],['integration']
Integrability,"> Here it seems that you would like to have this behavior changed?. It seems more complicated than that ... The underlying problem needs to be investigated. Once this PR is merged, an issue will be open with words along the line of 'revert this commit, run this and see these errors messages`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1656187821:283,message,messages,283,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1656187821,1,['message'],['messages']
Integrability,"> Hey @manuelschiller,; > ; > that looks like a brilliant idea, thanks! We might get into trouble with the pragmas, though, because not all versions of ROOT are built with clang. We will see that when the bots get a chance to build it.; > ; > Would it be possible to write a test that compares the old and the new RooChebychev? A naive one would be to copy the old class into roofit/roofit/test/testRooChebychev.cxx, rename it, and just run the two against each other.; > You might have tested locally, so including that would also be a good option. As I said in my original commit message: This code is tested by stressRooFit (where a RooChebychev is used as a background model), so if this runs through fine (and it does), it means that the new code produces results that are indistinguishable from the reference file. Is that good enough?. Regarding the pragmas: Would it help if I tried hiding them behind some preprocessor magic? (According to https://en.cppreference.com/w/cpp/preprocessor/impl, unknown pragmas should be ignored by compilers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775#issuecomment-489977868:582,message,message,582,https://root.cern,https://github.com/root-project/root/pull/3775#issuecomment-489977868,1,['message'],['message']
Integrability,"> Hey, can you return back the line because *_.rdicts are installing somewhere else following two commit messages [5cad428](https://github.com/root-project/root/commit/5cad428dc71929b9f4c202fadfe5934513cd978a) and [8afa884](https://github.com/root-project/root/commit/8afa8841936b35167515789f40934d660c6455ab). I build ROOT with R modules with and without the line, and it is really doesn't allow to install _rdicts (e.g. for R). Please go ahead with merging like it is now! Thanks for patience!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4751#issuecomment-573086959:105,message,messages,105,https://root.cern,https://github.com/root-project/root/pull/4751#issuecomment-573086959,1,['message'],['messages']
Integrability,"> Hi @ShamrockLee , specifying a binning for the histogram is often better than disabling multi-threading (which potentially implies a large performance decrease), but yes that also works :D; > ; > The fundamental problem here is the lack of a good multi-thread auto-binning algorithm that does not require synchronization between threads (which we want to avoid at all costs in order to scale well to large amounts of cores and large amounts of histograms produced). Hi @eguiraud , thanks for replying.; I do specify a binning for every histogram being generated. However, the bin number is about ~20000 each histogram in order to guarantee there's no unexpected overflow/underflow. Maybe I should lower it a bit, but it would still be nice if there could be a way to control the memory usage other than disabling the multi-threading totally.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-937768950:307,synchroniz,synchronization,307,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-937768950,1,['synchroniz'],['synchronization']
Integrability,"> Hi @VanyaBelyaev!; > ; > I guess you can't share all the data and scripts to reproduce the problem, but could you please post the full stack trace of the segmentation fault? I would also be helpful to see your code around the call to `plotOn`. With which command arguments are you calling `plotOn`?; > ; > And as @eguiraud said, please indicate if this problem also happens with the C++ interface, if you can easily check this.; > Thanks a lot, I hope we can fix this issue quickly!; > ; > Cheers,; > Jonas. Dear Jonas @guitargeek . See a relevant part of stack in my reply to Enrico. Unfortunately there is no way to prepare C++ reproducer; The options are rather trivial; ```; MarkerStyle(20), DrawOptions('zp'), MarkerSize (0.75), Invisible(); ```; for data, then I have next call for the model component with options ; ```; Components( 'BBB_fitSym_compnsbghY' ), Precision(0.0001), LineColor(600), LineStyle(14), LineWidth(1); ```; and I get sef fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864067440:389,interface,interface,389,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864067440,1,['interface'],['interface']
Integrability,"> Hi @ferdymercury! You have to _rebase your commits on master_ to fix conflicts. Merging master into your development branch is the last thing you should do, because then your PR becomes unmergable because it's not a fast-forward PR.; > ; > I took the liberty to cherry-pick your commits ontop of master and force-push this to your branch so we can proceed here without having technical git discussions :) Next time your PR in in conflict with master, just do `git rebase master`. Thanks, I will write that down. (It's a pity that Github web interface does not give you that option...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9657#issuecomment-1034944095:543,interface,interface,543,https://root.cern,https://github.com/root-project/root/pull/9657#issuecomment-1034944095,1,['interface'],['interface']
Integrability,"> Hi @ferdymercury, sorry for the late reply! There were some other conflicting PRs that I wanted to get in first. Can you please rebase your commits to master now and update this PR? I plan to merge this one next. Thank you so much!. You are welcome! Conflicts are now resolved. I am not familiar with the rebase process, can I do it directly from the GitHub web interface? Or do I need to clone the whole repo and type something in the command line ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9657#issuecomment-1030416322:364,interface,interface,364,https://root.cern,https://github.com/root-project/root/pull/9657#issuecomment-1030416322,1,['interface'],['interface']
Integrability,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits.; > ; > I addressed all of your comments, but for one comment I'm not sure if I made the right choice.; > ; > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice?. The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > ; > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself.; Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class?. NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-792681797:87,message,message,87,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-792681797,1,['message'],['message']
Integrability,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11090#issuecomment-1202401228:112,message,message,112,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228,2,['message'],['message']
Integrability,"> Hi Stefan, I don't remember what this is about, can you please add more details and motivation for the change to the commit log?. Sry yes, you are right, we are missing here the context. I've added a longer explanation to the commit message and also above in the inital comment of the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6109#issuecomment-667961835:235,message,message,235,https://root.cern,https://github.com/root-project/root/pull/6109#issuecomment-667961835,1,['message'],['message']
Integrability,"> Hi Stephan, thanks a lot for your comments! I will address them as soon as I have written a test that covers all these branches in `factorizeProduct`. I don't think such a tests exists at the moment, right?. All dedicated unit tests should be in `roofit/roofitcore/test/*Prod*` etc. There's only integration tests that might by accident test this, e.g. stressRooFit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7907#issuecomment-823507523:298,integrat,integration,298,https://root.cern,https://github.com/root-project/root/pull/7907#issuecomment-823507523,1,['integrat'],['integration']
Integrability,"> Hi, I am reopening this as I still need it for my project (dealing with huge amounts of integer waveform data, so TH1I goes into overflow) as suggested by @guitargeek (thanks!).; > ; > The controversy was about TH1L vs TH1L64, or rather the underlying types: TArrayL vs TArrayL64. Or rather, why do have Long_t vs Long64_t.; > ; > In my opinion, trying to fix the TArrayL vs TArrayL64 controversy is out of scope for this PR, or too much to ask for my purpose (I am suggesting a new feature, but do not want to be in charge of fixing old designs that were not the right ones). Or, if it should be fixed, it should go into a separate PR by someone else. That being said, I do not think we should wait X years more for that preliminary PR to be merged until this one is done. Also, TH1 is gonna be replaced somehow in templated ROOT7, so I do not think it is worth to invest too much time in fixing old interfaces. So I think providing this new functionality 'as is' wouldn't harm anyone and it would be helpful for (at least) two or three users.; > ; > What are your thoughts?. I agree it is not needed to resolve the issue TArrayL64 vs TArrayL. However, I think it would still be good that these histograms are called THL instead of THL64. You can derive from TArrayL64, but still call the histogram THxL to be consistent with THxI that is 32 bits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1952560157:903,interface,interfaces,903,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1952560157,1,['interface'],['interfaces']
Integrability,"> Hi, I don't understand what temporary gcc's message refers to?; > ; > * `GetColumnType` returns a `string` by value that is taken in as a `const string &` by `TypeName2TypeID`, so everything should be fine there; > ; > * `TypeName2TypeID` returns a `const type_info &` that is conditionally assigned to a `const auto &` and that should also be ok: the `const type_info &` is produced by expressions such as `typeid(bool)` and that value should have static lifetime; > ; > ; > Help?. GCC13 has not been officially released yet. It comes with the [new `-Wdangling-reference` diagnostic](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=106393), which I think still provides many false positives, e.g. [see this](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107532). In particular, this warning seems absolutely bogus. It can be reproduced with this simple excerpt (compile with `g++ -Werror=dangling-reference`).; ```c++; #include <string>; #include <typeinfo>. const std::type_info &f(const std::string &);; void g() {; // A `std::string` temporary is implicitly constructed passing the string literal ""foo"" to the ctor.; // Apparently, this triggers one of the patterns in GCC's new `[-Wdangling-reference]`. ; const auto &ti = f(""foo"");; }; ```. IMO, this warning is totally bogus (and might be seen in other parts of ROOT). Thus, I would suggest not changing the code but conditionally ignoring it,; _(a)_ Either in this translation unit only; ```c++; #pragma GCC diagnostic ignored ...; ```; , or _(b)_ most likely for all ROOT (appending `-Wno-dangling-reference` from CMake). I would go for `_(b)_`, at least until the feature becomes mature enough and does not yield false positives. What do you think, @linev, @eguiraud?. Also CC: @Axel-Naumann and @hahnjo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12085#issuecomment-1403615900:46,message,message,46,https://root.cern,https://github.com/root-project/root/pull/12085#issuecomment-1403615900,1,['message'],['message']
Integrability,"> Hi, I trust you, but maybe can you elaborate a bit in the commit message about what's going on here? smile. Yep, done in a code comment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9262#issuecomment-964104039:67,message,message,67,https://root.cern,https://github.com/root-project/root/pull/9262#issuecomment-964104039,1,['message'],['message']
Integrability,"> Hi,; > ; > This PR cannot be merged since the test is failing. Could you please have a look @will-cern ?; > ; > ```; > Running main() from /googletest-release-1.11.0/googletest/src/gtest_main.cc; > [==========] Running 3 tests from 1 test suite.; > [----------] Global test environment set-up.; > [----------] 3 tests from Projections; > [ RUN ] Projections.Issue_6658_2D; > [ OK ] Projections.Issue_6658_2D (175 ms); > [ RUN ] Projections.Issue_6658_3D; > [ OK ] Projections.Issue_6658_3D (0 ms); > [ RUN ] Projections.Issue_6658_Profile2D; > /root/src/core/testsupport/src/TestSupport.cxx:89: Failure; > Failed; > Received unexpected diagnostic of severity 2000 at 'TROOT::Append' reading 'Replacing existing TH1: x (Potential memory leak).'.; > Suppress those using ROOT/TestSupport.hxx; > [ FAILED ] Projections.Issue_6658_Profile2D (1 ms); > [----------] 3 tests from Projections (176 ms total); > ; > [----------] Global test environment tear-down; > [==========] 3 tests from 1 test suite ran. (176 ms total); > [ PASSED ] 2 tests.; > [ FAILED ] 1 test, listed below:; > [ FAILED ] Projections.Issue_6658_Profile2D; > ; > 1 FAILED TEST; > CMake Error at /root/src/cmake/modules/RootTestDriver.cmake:232 (message):; > error code: 1; > ; > ```. ok I just renamed the projection histogram to avoid the clash, I hope.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194#issuecomment-2285931106:1213,message,message,1213,https://root.cern,https://github.com/root-project/root/pull/16194#issuecomment-2285931106,1,['message'],['message']
Integrability,"> Hi,; > The PR looks good to me.; > Just a couple of small comments:; > ; > * I don't like that there is now an Initialisation.cxx file in roofitcore and one in batchcompute. Maybe it is better having different names; > * what was the reasoning for the change of name from the library from libRooFitCompute_* to libRooBatchCompute* ? The old name looks nicer to me. roofitcore/Initialisation used to be roofitcore/RooBanner.cxx and Stephan converted it so that he could add the library loading code. This code is now moved, but I still believe it's a good idea to stay Initialisation.cxx in case there's a need in the future for other init routines to be added. (static functions shouldn't exist in random files but only in a specified Initialisation.cxx file). batchcompute/Initialisation.cxx for the moment only inspects the hardware and loads the correct version of the library, so it is again initializing... . I find RooBatchCompute more specific. The library contains all the utilities for making batch computations. RooFit can work without it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6968#issuecomment-754544065:641,rout,routines,641,https://root.cern,https://github.com/root-project/root/pull/6968#issuecomment-754544065,1,['rout'],['routines']
Integrability,"> How about fixing this repository?; > ; > https://github.com/root-project/cling/blob/master/lib/Utils/PlatformWin.cpp; > ; > Should I create independent PR?. They are somehow synchronized, @Axel-Naumann knows exactly how it works",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4897#issuecomment-580272486:176,synchroniz,synchronized,176,https://root.cern,https://github.com/root-project/root/pull/4897#issuecomment-580272486,1,['synchroniz'],['synchronized']
Integrability,"> How can I format the commits that I have already pushed?. no need, just add a commit that fixes the formatting of your branch (e.g. with the command above). We will squash the 12 commits in this PR together into a single commit anyway when merging into ROOT. > it tells me that clang-format is not a git command. uhm, you might need to install _something_, depending on your system :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779783586:359,depend,depending,359,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779783586,1,['depend'],['depending']
Integrability,"> How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info. The I/O still needs to be informed of this. The simplest is to a ClassDef with version 0 and generate the dictionary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3222#issuecomment-452066958:38,interface,interface,38,https://root.cern,https://github.com/root-project/root/pull/3222#issuecomment-452066958,1,['interface'],['interface']
Integrability,"> How difficult is adding the support for them ? They are just an extra column in the Tree. It's intermediate difficulty, because the interfaces are inconsistent.; - Weights in `RooDataSet` have to be activated explicitly by users, in `RooDataHist`, they are on by default.; - Weight errors are even less consistent.; - The `add` functions are overloaded multiple times, but *only* in the derived classes. So you have to pick the right one for the right job.; - Sometimes the `add` functions ignore the weight, sometimes not, depending on how you called the constructor.; - In RooDataSet, you can make the weight part of the entry, and it's going to be registered. In RooDataHist, you have to pass the weight explicitly. Therefore, the helper will need to know what's a weight and what's not. All in all, it's totally solvable, but it's not for me to work on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7317#issuecomment-790843601:134,interface,interfaces,134,https://root.cern,https://github.com/root-project/root/pull/7317#issuecomment-790843601,2,"['depend', 'interface']","['depending', 'interfaces']"
Integrability,"> However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. That sounds very reasonable. I would have intuitively assumed that the values are skipped, but if the clipping behavior also exists in the interface others might have assume that. Then it's probably best to force the users to decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10447#issuecomment-1110909383:454,interface,interface,454,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110909383,1,['interface'],['interface']
Integrability,"> However, I'm not sure if we would break the lines of the example code, since they are meant to be typed into the ROOT REPL. > It also seems inappropriate to break the ROOT REPL output into lines. Absolutely, feel free to ignore the suggestions of clang-format w.r.t. formatted comments when your formatting makes more sense. You can also wrap the comments with `// clang-format off` and `// clang-format off` to explicitly tell clang-format to ignore that part of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286#issuecomment-968807561:340,wrap,wrap,340,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-968807561,1,['wrap'],['wrap']
Integrability,"> However, if the user tries to use the pointer after the server is destroyed, there will be a segmentation fault,. Exactly. > So, making the destructor public and using a unique_ptr would allow us to throw a runtime exception in the server destructor, saying that clients are alive at the time the server goes down. That is one option. The other is to inform the client that the server is gone and only throw an exception if the client tries to contact the server ... . One thing to take in consideration is that (eventually) we would want a similar interface for the case where the server is in a different process. In that case, the server must handle the fact that some client might die before being able to report ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299455613:551,interface,interface,551,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299455613,1,['interface'],['interface']
Integrability,"> However, it will not solve the same problem at deployment time. You assume that build and deployment have a similar settings; not sure that's the case. As another argument for specifying this during ROOT's build, we also specify `LD_LIBRARY_PATH` and select which `root.exe` to run during the `hsimple` check. How is `ROOT_INCLUDE_PATH` different from that?. > I am not sure if we have that information in the right places in the build system. We can do it on a case by case basis. We know which ""builtins"" we depend on wrt runtime includes, and we know where they are during configure / build time. For Vc it's `Vc_INCLUDE_DIR`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1025642794:512,depend,depend,512,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1025642794,1,['depend'],['depend']
Integrability,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. ; > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. ; Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. ; Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889#issuecomment-736364867:458,integrat,integration,458,https://root.cern,https://github.com/root-project/root/issues/6889#issuecomment-736364867,1,['integrat'],['integration']
Integrability,"> However; > ; > ```; > {; > return 0;; > }; > ```; > ; > should continue to work (i.e. return in _unnamed_ macros). And I confirm that it does, as code in unnamed macros is wrapped as needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654#issuecomment-1511941015:174,wrap,wrapped,174,https://root.cern,https://github.com/root-project/root/pull/12654#issuecomment-1511941015,1,['wrap'],['wrapped']
Integrability,"> I agree that the test should probably not use `echo` for that but we should probably fix the interface, too. Agreed. > Is `Value::isVoid` not being checked in the `echo` interface? I am not sure I understand how it worked before and how the PR you mentioned broke it.. It's an issue related to multiple `Interpreter`s that have different `ASTContext`s. I fixed it by calling `isVoidType()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13282#issuecomment-1642273551:95,interface,interface,95,https://root.cern,https://github.com/root-project/root/pull/13282#issuecomment-1642273551,2,['interface'],['interface']
Integrability,"> I am a little confused on how that affects path length. As I said, I don't understand it either, but the failures are persistent and reproducibly fixed with this change. > The idea of that patch was that if we specify no_cxxmodule we should not expect targets that depend on it to have modules as the “dependee” would include the other headers making a mess. We should be fine reverting this change, if indeed is broken. We should be able to propagate the NO_CXXMODULE option through the dependency chain by hand. I understand, but it needs to be implemented differently so that it doesn't omit dependencies to `libCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1491410806:267,depend,depend,267,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1491410806,4,['depend'],"['depend', 'dependee', 'dependencies', 'dependency']"
Integrability,"> I am back. Could you elaborate on what you would like to have as a separate function? I did some more cleanup and now it would be basically mean wrapping a couple of lines, forwarding a bunch of stuff, which would look ugly, IMHO.; > ; > On a separate note, in O2 I wrote [a more complete wrapper](https://github.com/AliceO2Group/AliceO2/blob/96cae760a908ef18d960d925c188c6c101232757/Framework/Foundation/include/Framework/Signpost.h) which basically just forwards things on macOS to the underlying API and invokes a user provided logging function on Linux. Would you be interested in adopting a cleaned up version of it in ROOT?. Yes, that would make sense to me. We can add it as part of the foundation folder in ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1669214483:147,wrap,wrapping,147,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1669214483,2,['wrap'],"['wrapper', 'wrapping']"
Integrability,"> I am not in favour of this solution.; I don't think is bringing any advantages, we were using a plugin manager that was based on the interpreter and there were no direct dependency on fftw3.; Now you require people to directly install fftw3 and they would need to set also the include path. It is an over complication for the users. You are right, when building ROOT with `fftw3=ON`, it brings zero advantages but only makes if more fragile because `fftw3.h` needs to be in the path. *Edit*: it just came to my mind that this might actually be a rare case. Right now, `builtin_fftw3*` is always `OFF` by default, also on cfmfs. So the `fftw3.h` header was already found in the include path at build time, which means it's probably found when running ROOT too. However, in case where ROOT is built with `fftw3=OFF`, this makes the difference between the `RooFFTConvPdf` even working or not. And this case is relevant because we release the ROOT binaries like this. Since we need to make sure that FFTs work in RooFit when people install ROOT on their laptops with the binaries, I think a fix like this is necessary. Maybe as a compromise, I could apply the these changes only in case where `fftw3=OFF` by using preprocessor macros? The downside of this would be two different code branches thought.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14174#issuecomment-1838939107:172,depend,dependency,172,https://root.cern,https://github.com/root-project/root/pull/14174#issuecomment-1838939107,1,['depend'],['dependency']
Integrability,"> I am not sure if that's a direction worth pursuing. `GetClassSharedLibsForModule` is meant to return the Module/Library that ""contains"" (for some definition of it) the C++ entity except the ones for Core. That exception was done because it was bound to how we organize dependencies in ACLiC and so on. I believe this interface is (or should be) internal to the dictionary system.; > . Would it be ok to have an extra argument ""skipCore"" in this function? So that the caller decides if it has to be skipped or not. When we are building the doxygen documentation, we do not want to skip it. > It might be easier to make a new interface that includes core by calling `GetClassSharedLibs` and if that does not return anything but `TClass::GetClass(""TUrl"")` returns something we should assume it is in `Core.so`. What about if a class depends simultaneously on ""Core"" as well as another external shared library? (multiple inheritance or sth like that). We would then miss that Core is a dependency, too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1985342111:271,depend,dependencies,271,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1985342111,5,"['depend', 'interface']","['dependencies', 'dependency', 'depends', 'interface']"
Integrability,"> I am not sure that we should increment the number of fNRuns and log as if everything went fine if an exception was thrown during the event loop. a different message might be warranted. Indeed this could be a good idea, to further clarify that the RDF is not usable anymore and should just be thrown away",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546#issuecomment-1707966075:159,message,message,159,https://root.cern,https://github.com/root-project/root/pull/13546#issuecomment-1707966075,1,['message'],['message']
Integrability,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:; ```; fTimers->UseRWLock();; ```; thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379#issuecomment-857765612:258,rout,routine,258,https://root.cern,https://github.com/root-project/root/pull/8379#issuecomment-857765612,1,['rout'],['routine']
Integrability,"> I cannot reproduce it either, but a number of Linux builds agree that the assertion can still be triggered. PRs should be built from a clean state (in Jenkins), but even if not you are not changing the on-disk format so incremental builds must also work correctly. This needs investigation. What I think is happening is that the broken PR generated some broken file, and the new PR is not able to survive such broken file. IMHO, this is a problem with the build setup (not being able to notice broken files and delete them) more than with my PR (which of course has no dependency on some intermediate state). Shall I just open a new PR and we see how that goes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1721011333:571,depend,dependency,571,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1721011333,1,['depend'],['dependency']
Integrability,> I cannot reproduce the failure of roottest-root-core-execStatusBitsCheck; it's possible the fact I switched to an enum class avoids the underlying bug in that test?. It is indeed possible. It could also be a platform dependent thing or it could be depend on the library actually build as part of ROOT ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/959#issuecomment-327901090:219,depend,dependent,219,https://root.cern,https://github.com/root-project/root/pull/959#issuecomment-327901090,2,['depend'],"['depend', 'dependent']"
Integrability,"> I do not understand the fix. We said that the markersize should be defined according to some retina scale factor we should be fine with some global getter. This PR only changes the calling sequence `markersize` is not defined at line 913... `markerSize` is computed in TGQuartz::DrawPolyMarker (TGQuartz.mm) which passes it already scaled correctly to Quartz::DrawPolyMarker (in QuartzMarker.mm). DrawPolyMarker dispatches then the size to different DrawMarker methods, but not for DrawMarkerDot where it was assumed that the size is 1. AFAICT DrawMarkerDot is just an internal interface (according to grep), so I just added this parameter. Extracting the scale otherwise would be more complicated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12055#issuecomment-1387189058:580,interface,interface,580,https://root.cern,https://github.com/root-project/root/pull/12055#issuecomment-1387189058,1,['interface'],['interface']
Integrability,"> I do not understand why you have to have your FindROOT.cmake. We do provide ROOTConfig.cmake and this should be sufficient. If it is not, then this is a bug. **Be as native CMake as possible and of not try to complicate things by building additional interfaces.**. What we do in the `FindROOT.cmake` is as native and cmake idiomatic as it gets. [find_package](https://cmake.org/cmake/help/v3.0/command/find_package.html) has two modes. The one used here is the config mode which is intended to be used to find and include your package config file (`ROOTConfig.cmake`). > The functions like `ROOT_LINKER_LIBRARY` where intended for internal consumption. Does that mean you will not support usage in external projects? Or do you consider it now to support? If not, I suggest putting it in a different module, so its clearer which macros are meant to be for public use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916#issuecomment-326541844:252,interface,interfaces,252,https://root.cern,https://github.com/root-project/root/pull/916#issuecomment-326541844,1,['interface'],['interfaces']
Integrability,"> I don't know if I'm misinterpreting something, but I noticed something very interesting: For this compilation error, clang gives a note message:; > ; > ```; > /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; > ```; > ; > Is this enum type `EProperty` really only range from 0 - 63? clangd told me that the definition of first case `kIsClass` is from https://github.com/root-project/root/blob/master/core/meta/inc/TDictionary.h#L64 , but if I try the below cases, it told me that _this enum type `EProperty`_ from https://github.com/root-project/root/blob/master/core/cont/inc/TVirtualCollectionProxy.h#L49 ???; > ; > That may said, the compiler got confused about these two types that have same name?. That's interesting: `TGenCollectionStreamer` inherits from `TVirtualCollectionProxy` (via `TGenCollectionProxy`), so that `EProperty` is indeed ""closer"" than `::EProperty`. > > ""case value is not a constant expression"".; > ; > Humm ... either I don't understand the meaning or Clang is 'wrong' on this part. Both; > ; > ```; > EProperty(kIsPointer | kBIT_ISSTRING); > and; > kIsPointer | kBIT_ISSTRING; > ```; > ; > are ""constant"" (i.e calculatable at compile time). As discussed post-commit in https://reviews.llvm.org/D130058, the check is indeed questionable in a few corner cases. But that shouldn't stop us from finding a portable solution that avoids the problems altogether. > > ""note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type""; > > That may said, the compiler got confused about these two types that have same name?; > ; > That is likely the cause of the complaints albeit it is the developer (and possibly Coverity too) that got confused here as it was meant to be written as:; > ; > ```; > case ::EProperty(kBIT_ISSTRING):; > ```. The range checks of that new warning are also known bad for some cases, not sure if t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148#issuecomment-1208992073:138,message,message,138,https://root.cern,https://github.com/root-project/root/pull/11148#issuecomment-1208992073,1,['message'],['message']
Integrability,"> I don't really understand your question. 😕; > . Thanks for the explanation.; My question was: is it possible to modify the ROOT-cmake-find script, so that it only forces the nlohmann-json-dependency if you are going to use ROOT7 classes? So to say, that depending on the `REQUIRED COMPONENTS` that you use in the `find_package` statement in your user code, it is more or less 'requiring'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844986345:190,depend,dependency,190,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844986345,2,['depend'],"['dependency', 'depending']"
Integrability,"> I don't see why that is against the documented intent for the class. Move-constructing (or move-assigning) are allowed to leave the original object in a valid but undetermined state, i.e. it should be okay if, upon move, we leave RFieldValue::fRawPtr to nullptr. slightly_smiling_face. Sure, but `RFieldValue` documents to be not-owning: `This class is a mere wrapper around the memory location, it does not own it.`. So a move constructor of that class can just copy the pointer to the move target and there is no need to set it `nullptr` in the moved-from object. But sure, it also does not prevent us to do so! But this would then end up as a call to `std::free()` with a nullptr, which is ~~also a bug~~ valid, but may be surprising. > > Conjecturing further, if RNTuple supported parallel reading form multiple threads, it would actually be great to pull an instance of RNTupleView from an RNTupleReader and than pass a copy to each of N threads, which would then start reading non-overlapping subranges.; >; > Actually, I think this can be done. @jblomer, anything against?. I would fully support making `RNTupleView<T>` a semi-regular type!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12136#issuecomment-1410746438:362,wrap,wrapper,362,https://root.cern,https://github.com/root-project/root/issues/12136#issuecomment-1410746438,1,['wrap'],['wrapper']
Integrability,"> I find the (relative path) filename and line number entirely redundant. The information is already contained in the ouput message and function name (just open the file, get to the routine and search for the message). *The* file - which file should I open?. > Ambiguous messages (same text for different lines) are rare. Define ""rare"". ```; io/io/src/TFileMerger.cxx: Info(""MergeRecursive"", ""could not read object for key {%s, %s}; skipping file %s"",; io/io/src/TFileMerger.cxx: Info(""MergeRecursive"", ""could not read object for key {%s, %s}; skipping file %s"",; ```; ```; io/io/src/TStreamerInfo.cxx: Info(""BuildOld"", ""element: %s %s::%s has new type: %s/%d"", element->GetTypeName(), GetName(; ), element->GetName(), dm ? dm->GetFullTypeName() : TDataType::GetTypeName((EDataType)newType), newType);; io/io/src/TStreamerInfo.cxx: Info(""BuildOld"", ""element: %s %s::%s has new type: %s/%d"", element->GetTypeName(), GetName(; ), element->GetName(), dm ? dm->GetFullTypeName() : TDataType::GetTypeName((EDataType)newType), newType);; ```; to name just those I immediately found in io/io :-). I'd argue we should keep the file name:; - for debug output, be verbose because someone wanted debug output.; - for error messages, be verbose because it's an exceptional, an error case, and more information is strictly better.; So indeed, maybe for `Info` we could go with your ""super-short"" version. But I dislike having the same interface behave completely differently. So what should the interface be? Maybe a new CPP macro, `R__LOG_TERSE_INFO`, that does not show the file and line and function?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756903363:124,message,message,124,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756903363,7,"['interface', 'message', 'rout']","['interface', 'message', 'messages', 'routine']"
Integrability,"> I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right?. Yes, but with yesterday's changes I think it will be `model.GetDefaultEntry().GetPtr<T>(name)` because `GetDefaultEntry` returns a reference now. In general, there will be some more interface changes coming in the near future... > What about `addField<T>()` calls?. That one is a bit more complicated; after a quick look, I think `CommonEventFields` should call `MakeField`, store the returned `std::shared_ptr` and use that one in `fill(const edm::EventID& id)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14454#issuecomment-1917427640:310,interface,interface,310,https://root.cern,https://github.com/root-project/root/pull/14454#issuecomment-1917427640,1,['interface'],['interface']
Integrability,> I have removed the PCH dependency since. The error above seems to show that the dependency was needed... My changes do not affect at all allDict.pch or how it's generated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1402009056:25,depend,dependency,25,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1402009056,2,['depend'],['dependency']
Integrability,"> I just dislike the submission computer having to open all files. Distributed RDF employs yet another strategy that doesn't require opening all files before submitting data processing tasks but potentially produces more unbalanced tasks or some empty tasks (it's unclear to me if that has any visible performance impact or not). For local, multi-thread RDF, I guess we can either do the same that distributed RDF does or come up with a way to schedule this graph of tasks efficiently (with data processing task `#N` depending on ttree-entry-retrieval tasks `#1`, `#2`, ..., `#N`), e.g. via TBB task graphs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190#issuecomment-1413975769:517,depend,depending,517,https://root.cern,https://github.com/root-project/root/issues/12190#issuecomment-1413975769,1,['depend'],['depending']
Integrability,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061744458:1224,interface,interface,1224,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458,1,['interface'],['interface']
Integrability,"> I only wonder if in the commit message, you really meant RAction, RAction. Was it meant to be the same class name?. @hageboeck github thinks C++ templates are html tags",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6220#issuecomment-676302182:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/6220#issuecomment-676302182,1,['message'],['message']
Integrability,"> I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?. To me the description in ""Ownership Model"" section is now clear. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246#issuecomment-2069794311:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/15246#issuecomment-2069794311,1,['message'],['message']
Integrability,"> I see the problem, but I don't understand exactly from your post and the linked pyhf discussion what the expected behavior is. Do you expect the XML schema to be updated to allow for this initial `ShapeFactor` nuisance parameter values, or do you want to prohibit that such a `Measurement` object can even be instantiated?. I think the serialization of the workspace from the ROOT side needs to be fixed (something in between both solutions you have). It's very odd to me that ROOT generates XML via PrintXML that is not self-consistent with it's own schema, but certainly it's for a somewhat defunct thing that will be replaced by the HS3 spec in the future anyway.... I don't know for sure why this wouldn't be supported in the first place (I'm somewhat confused by some of the choices in the legacy codebase for allowing some NPs to be init-ed and some not allowed to be depending on the type of systematic).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287#issuecomment-1644239484:876,depend,depending,876,https://root.cern,https://github.com/root-project/root/issues/13287#issuecomment-1644239484,1,['depend'],['depending']
Integrability,"> I suppose this modification should be squashed into [root-project/llvm-project@c5365a2](https://github.com/root-project/llvm-project/commit/c5365a286dc0d5bb4298ded9353a70e094e72d2c)?. Now updated to https://github.com/root-project/llvm-project/commit/636e26aa8289c09cb341c2bb3755a034c8a09ee8. Please update `interpreter/llvm-project/llvm-project.tag` to `ROOT-llvm16-20240119-01`, and maybe fix a couple of grammar issues / typos in the commit message :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14373#issuecomment-1899942155:446,message,message,446,https://root.cern,https://github.com/root-project/root/pull/14373#issuecomment-1899942155,1,['message'],['message']
Integrability,"> I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?. Cling is built as a standalone project, in an environment that contains the patched LLVM and Clang built using the `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON` CMake options (shared library mode), among others. So yes, the LLVM (built from the sources at https://github.com/root-project/llvm-project) is found via `llvm-config` and the build system (with this proposed change) automatically detects that LLVM/Clang is a shared library and links to libLLVM.so / libclang-cpp.so in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127902486:112,integrat,integrating,112,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127902486,1,['integrat'],['integrating']
Integrability,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. ; To use with `TF1::GetSave()` - then current approach is better. One covers complete range.; If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. ; But this one can handle in TWebCanvas. ; There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13949#issuecomment-1782482379:121,depend,depends,121,https://root.cern,https://github.com/root-project/root/pull/13949#issuecomment-1782482379,1,['depend'],['depends']
Integrability,"> I think it might be hard to come up with a proper heuristic. For example is the threshold ""per dictionary"" (in which case it might be achiveable) or is it an accumulative cost, i.e. per whole set of library (in which case it is impossible) and is it lightly or highly dependent of the fraction of the generated dicitonary entries and/or header that are actually used?; > ; > > Users do not use make project; > ; > MakeProject is irrelevant here. It is ""only"" just to quickly produce an emulation of the ""Experiment Framework"" type of problem size. The relevant part is (as you noted) the amount of classes needed for I/O. One part that example does not emulate is the (high) number of libraries and dictionary. So _yes_ this type of problem is extremely relevant and no it is actually not directly represented in roottest. (and it is unknown which fraction of the roottests are exercising this code path (i.e. not only loading but also using the rootpcms). In principle the new implementation due to modules should allow us to easily turn off rootpcms and test in the cmssw context. Then I guess the results should be more reliable. > ; > Also I suppose there are ways to reduce the up-front cost of the rootpcms (for example delaying their loading until needed). That's what I am after. Do you have something in particular in mind?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-659503189:270,depend,dependent,270,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-659503189,1,['depend'],['dependent']
Integrability,"> I think it should live in InternalTreeUtils?. I was thinking this is generic enough that we may want to use it in places that do not strictly depend from `libTree`, but maybe I'm just overthinking. > How can we be sure that this function returns the same files in the same order as the previous one in all cases?. I hope we already get a (very good?) degree of certainty by not breaking existing test cases. I can come up with a few more just to add extra safety. Irrespective of this, the function is taken verbatim from the logic in `TChain::Add`. Do you see any part of the function that intuitively might lead to different results? I was thinking about this and the only place that remotely gives me a slight doubt is using `std::sort` instead of `TList::Sort`, but I really hope that doesn't introduce a different behaviour. > the new one throws if a directory cannot be opened. Yes indeed that's a different behaviour. The existing logic never throws. In case `dir == nullptr`, which I guess happens if the expanded directory cannot be found/opened (?), then it will just fall to the end of the `TChain::Add` method and `return nf`, where `nf` will be zero since no files have been added. In this regard I see two options:. 1. The new function throws (because subjectively is the correct behaviour). Then in `TChain::Add` we can keep the old behaviour, by catching the error and not re-raising it.; 2. The new function can return an empty vector, in case `dir == nullptr`. This is more similar in spirit with the old behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13160#issuecomment-1619057225:144,depend,depend,144,https://root.cern,https://github.com/root-project/root/pull/13160#issuecomment-1619057225,1,['depend'],['depend']
Integrability,"> I think llvm discourages that setup generally. Discourage what setup? If you mean `-DLLVM_BUILD_LLVM_DYLIB=ON` and `-DCLANG_LINK_CLANG_DYLIB=ON`, these are the recommended switches for a shared library build of LLVM/Clang (see: https://llvm.org/docs/CMake.html). It's used by most distributions nowadays (e.g. on Arch Linux: https://gitlab.archlinux.org/archlinux/packaging/packages/llvm/-/blob/main/PKGBUILD?ref_type=heads#L82, Debian (see: https://metadata.ftp-master.debian.org/changelogs//main/l/llvm-toolchain-13/llvm-toolchain-13_13.0.1-11_changelog), nixpkgs (see: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/compilers/llvm/common/llvm/default.nix#L326), etc.). I haven't tried `-DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/src/cling`, but this suggests I'd need to combine the build of of both cling and llvm as part of the same build, which in Guix we try to avoid as a policy (so that build units are smaller, can be patched individually, and offer more visibility in terms of dependencies, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127927643:1029,depend,dependencies,1029,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127927643,1,['depend'],['dependencies']
Integrability,"> I think my fix is actually could be right, can you check it please again?. Your fix simply removes usage of semi-standard pthread_setname_np function on linux.; It is not right solution in my mind. Unfortunately, I cannot test with clang8. ; With clang-6.0.1 I see no problems. That you always can do - try to compile following simple program:. #include ""civetweb.h"". int main(int argc, char **argv); {; return 0;; }. Just copy it into net/http/civetweb directory and call:. clang -pthread civetweb.c main.c -ldl -o test . Can you reproduce your error message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418737656:554,message,message,554,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418737656,1,['message'],['message']
Integrability,"> I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied. Right; for this I went back to the variant of the benchmark that has perfectly balanced time per event and fills identical data into 10 branches. Then I added barriers around the call to `TBufferMergerFile::Write()` to make sure there is as much synchronization and contention as possible. With that, only the run with 64 threads on `/data/ssdext4` is measurably slower (4m16s instead of 3m57s, 9%), lower numbers of threads show very similar performance within noise. However, I then realized that the second barrier after the call to `Write()` is actually not necessary since we want contention when going into the merging / queuing, but the second barrier prevents threads that exit merging early from making further progress. With *only one barrier* before the call to `TBufferMergerFile::Write()` the version without any queuing is consistently faster at higher thread counts. I think this supports my hypothesis that things will balance out automagically. Finally, on `/data/hddext4/` I cannot measure any difference at all outside of noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1823482567:110,synchroniz,synchronization,110,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1823482567,2,['synchroniz'],['synchronization']
Integrability,"> I think the builds were successful. Yes, they were. Yesterday, when you wrote this message, Jenkins (the most important step) was still running.; Well done, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-863840433:85,message,message,85,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-863840433,1,['message'],['message']
Integrability,"> I think the test is actually good, except for `assert(longString[i] = checkString[i])`: It should be `==` and `assert` doesn't work interactively depending on the options ROOT was built with. I added a standalone gtest that I came up with independently... Yep, the `==` I had fixed already and forgot to edit the post. So probably the mistake was then using assert which I was checking interactively :) Thanks for clarifying!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-2023312172:148,depend,depending,148,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-2023312172,1,['depend'],['depending']
Integrability,"> I think this is addressed within #14052 (already merged) and in particular [`8c17cbf` (#14052)](https://github.com/root-project/root/pull/14052/commits/8c17cbf69c83eefc89f46b9437bfec658cbe9058). That commit is about PR builds; in this issue, I'm discussing builds after pushes to branches. AFAICT they still use a `git pull` of the branch name, which may get you different commits depending on when the job is scheduled to start.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061#issuecomment-1951873165:383,depend,depending,383,https://root.cern,https://github.com/root-project/root/issues/14061#issuecomment-1951873165,1,['depend'],['depending']
Integrability,"> I think this is already clear enough. To the person that wrote the code i'm sure it is! :smile: Concretely maybe ""extra arguments to be used by the wrapper object when receiving a call."" could be e.g. ""extra arguments that will be forwarded to `_wrapper_class`'s init method""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094768654:150,wrap,wrapper,150,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094768654,1,['wrap'],['wrapper']
Integrability,"> I think using TArayD is an improvement than using double pointers, but I don't see any reason why not using a more standard std::vector.; > I understand also for the interface your preference for an API similar to the current TGraphAsymmError. The reason I really don't want to use std::vector here is the streaming of the class. I know that there are ways to stream STL containers, but I don't know how they really work and I refuse to make the functionality of my code rely on something I don't understand.; Furthermore, using ROOT objects provides the advantage that the streaming of the storage class is fully handled by the class itself and therefore there is no need to think about the correct way to stream it. I'm also not 100% sure whether STL containers can be streamed by an automatically built streamer but ROOT classes can be streamed by them for sure.; Last but not least I hold the opinion that ROOT classes should use other ROOT classes anywhere possible, cause we, the programmers, can always change ROOT classes if we need to, but we are not able to change C++ classes. > Thank you for explaining the meaning of SetDimensionEY, I think the name is not super clear, I would maybe just call it SetEY.; > One comment on the passed array, I think the pointers should be passed as cont , since they will not be modified. I fully agree on these points. > One other comment I have , I will not have a method to Set the error dimension. I think it will be better instead a AddError method that will increment by one the dimension and add all the point errors. This I think it will be more useful. This point I don't fully understand. To me it sounds like you propose to add a function like this:; ```; void TGraphMultiErrors::AddError(const Double_t *eyL = 0, const Double_t *eyH = 0); {; SetNErrorDimensions(fNErrorDimensions + 1);; if (eyL && eyH); SetDimensionEY(fNErrorDimensions - 1, eyL, eyH);; }; ```; This would definitly be an useful addition, but I would keep the SetNErrorDimens",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558178093:168,interface,interface,168,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558178093,1,['interface'],['interface']
Integrability,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731#issuecomment-1334547546:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546,2,['interface'],['interface']
Integrability,"> I think your first option is good enough. Thanks. Sorry, I was completely wrong with the origin of the problem. The original issue came from wrapper functions generated by `TClingCallFunc`, which in turn ends up triggering warnings when used by cppyy/PyROOT. The way to go is to supress `-Wunused-result` diagnostics only for `TClingCallFunc` wrapper functions. See all the information in the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8622#issuecomment-960919535:143,wrap,wrapper,143,https://root.cern,https://github.com/root-project/root/issues/8622#issuecomment-960919535,2,['wrap'],['wrapper']
Integrability,"> I tried the route of ClassDefInline with poor results. . Rigth ... When not creating a dictionary, the information about data member, etc. has to come from the interpreter at run-time .. i.e. it needs to loads the definition .... So indeed if the goal is to keep this class declared only in a source file, this is not the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638507751:14,rout,route,14,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638507751,1,['rout'],['route']
Integrability,"> I trust you 😄; > ; > The commit message or the code comments could use some more information to help posterity out, e.g. why changing those flags fixes those errors, whether this is expected to be fixed in future versions of MSVC, whether the problem is known upstream, etc.. I'm currently working on it, just want to have the nightlies green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10141#issuecomment-1069208047:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/10141#issuecomment-1069208047,1,['message'],['message']
Integrability,"> I was thinking this is generic enough that we may want to use it in places that do not strictly depend from libTree. I guess if the need ever comes up we can (carefully!) consider making this particular globbing implementation available outside of `tree/`, but I'd be very conservative. How does RNTuple do globbing?. > I hope we already get a (very good?) degree of certainty by not breaking existing test cases. Do we have tests for edge cases in globbing or rarely-used features of the globbing syntax?. > the only place that remotely gives me a slight doubt is using std::sort instead of TList::Sort. I would keep `TList::Sort` to avoid unintended shuffling of things with weird characters or stuff like that. Otherwise you'd have to make sure that stuff like `01.root`, `001.root` and `0.root` get ordered the same way between the two. But why risking that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13160#issuecomment-1619095994:98,depend,depend,98,https://root.cern,https://github.com/root-project/root/pull/13160#issuecomment-1619095994,1,['depend'],['depend']
Integrability,"> I will look at it. I prefer to have a self consistent doc. Having it with the doc reduces the dependencies in case the remote website is down. I see. In that case, I would suggest to use a [git submodule](https://www.atlassian.com/git/tutorials/git-submodule). This way it is self-consistent and it would work without Internet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067#issuecomment-1061659813:96,depend,dependencies,96,https://root.cern,https://github.com/root-project/root/issues/10067#issuecomment-1061659813,1,['depend'],['dependencies']
Integrability,> I would prefer if we found a solution that works with incremental builds. It is affects `ExternalProject_Add` command in cmake - one have to rebuild libAfterImage. ; I see no easy way to add dependency there,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16129#issuecomment-2255312939:193,depend,dependency,193,https://root.cern,https://github.com/root-project/root/pull/16129#issuecomment-2255312939,1,['depend'],['dependency']
Integrability,"> I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :). The proposed rename works for me. It's not only for mac and linux, it covers any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001954686:95,depend,dependencies,95,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001954686,1,['depend'],['dependencies']
Integrability,"> I'd prefer to put the message last, because the message might be multi-line. That's a good argument. Thinking about [what I'm using RLogger for in RDF](https://github.com/root-project/root/pull/6828) I tend to agree with @pcanal, users won't care about what source code line the `Info` messages come from (and if they really do, they are one grep away) but devs would hate to have to grep for a given Error/Fatal/Warning every time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756902921:24,message,message,24,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756902921,3,['message'],"['message', 'messages']"
Integrability,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-968052222:739,depend,depend,739,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222,1,['depend'],['depend']
Integrability,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16695#issuecomment-2419263518:552,wrap,wrapping,552,https://root.cern,https://github.com/root-project/root/pull/16695#issuecomment-2419263518,1,['wrap'],['wrapping']
Integrability,"> IIUC a NullStmt would mean `if (true) {1;;}`.; > ; > I'd prefer to keep value printing simple and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used. I agree with Axel. A smarter value printer is nice to have but we have enough more important issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713643650:524,interface,interfaces,524,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713643650,1,['interface'],['interfaces']
Integrability,"> IIUC, ACLiC is kind of interpreting code before generating so files to get the list of libraries that need to be loaded beforehand by passing all rootmap files to rootcling, right? If so, maybe we can do the same with modules by interpreting code beforehand, get a callback from cling and make a list of dependency libraries. We can keep this list and load them just before loading hsimple_C.so?. Yes (where there later is simply changing the input and output of the rootcling invocation in CompileMacro, and tweaking rootcling to handle this new input/output). > Anyway, these discussions are addressed (or not addressed) in another PR. I want to revert ""not generating rootmapfiles"" patch for now. Fair enough :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396920577:306,depend,dependency,306,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396920577,1,['depend'],['dependency']
Integrability,"> IMO it's too heavy to add it to the script producing CITATION.cff. Makes sense. What I would do in the GH Actions workflow would probably be something like:. 1. pip install and run the validation script there (so that it doesn't have to be included in the script, but can still be used to check PRs); 2. Maybe also run `makeCITATION.py` and compare the output to the existing CITATION.cff file, just to make sure both files were updated. But, again, can be added later. I'm not sure how much you want to depend on GitHub Actions anyway, perhaps it makes more sense to automate things elsewhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876322029:506,depend,depend,506,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876322029,1,['depend'],['depend']
Integrability,"> If I understand correctly, with this patch neither:; > ; > ```; > // This yields `warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]`; > void g() { f(); }; > ; > f(); // but this should not; > ```. Actually, the first line _does_ issue a warning (which is expected), while it is suppressed in the second case. > The issue being addressed is:; > ; > ```; > root [1] v.size(); > ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; > v.size(); > ^~~~~~; > (unsigned long) 0; > ```. I have pasted below the current state of affairs after applying the patch in this PR (i.e., `-Wunused-result`, and [others](https://github.com/root-project/root/blob/40457765864f2b7e670d1a809767780de194707d/interpreter/cling/lib/Interpreter/IncrementalParser.cpp#L165-L183) should be filtered only for wrapped code).; ```c++; root [0] std::vector<int> v;; root [1] v.size(); (unsigned long) 0; root [2] // `return` was intentionally ommitted in f() below; root [3] size_t f() { v.size(); }; ROOT_prompt_3:1:14: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; size_t f() { v.size(); }; ^~~~~~; ROOT_prompt_3:1:24: warning: non-void function does not return a value [-Wreturn-type]; size_t f() { v.size(); }; ^; ```. > So a genuine question is ""is the fix here 'too broad' ? "" and/or ""is the ""better"" fix so expensive that it is better overall to suppress the warning globally?"". It's a bit too broad, as it suppresses the warning in wrapped code even if the expression is not part of value capture/printing. . Given that the diagnostic is emitted in `SemaExpr` when the expression is parsed, the ideal solution would be to buffer diagnostics and then selectively drop this one depending on the source location. But that is probably not worth the additional complexity. :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654#issuecomment-1511922941:894,wrap,wrapped,894,https://root.cern,https://github.com/root-project/root/pull/12654#issuecomment-1511922941,3,"['depend', 'wrap']","['depending', 'wrapped']"
Integrability,"> If that's not possible, should we also think about a way to check this at dictionary generation level via the Clang interface, when we have the entire AST at disposal?. May I comment / ask something here?. If I got this right, the IsOnHeap-behaviour depends on UB? And not allowing `= default` on derived classes to support this UB is at least unintuitive. (It's good, that it's documented, and it's good to consider checking it!). Are there any plans to phase out (and then deprecate) this? So that people actually can use `= default`?. The first step towards phasing out would be to document the issues involved when using `= default` and what a non-functional IsOnHeap would actually induce?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16218#issuecomment-2288062979:118,interface,interface,118,https://root.cern,https://github.com/root-project/root/pull/16218#issuecomment-2288062979,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"> If this analysis is correct, then we already have potential deadlock problems, ... Indeed but the only we can really affect is the code that is intentionally (and necessarily) called during library loading. The rest (for better and worse) has to be left to the user (to avoid). > I'm not sure that there's any good way of addressing this short of having ROOT release the core mutex before calling dlopen. I don't think so either. The only way where we could have support this would be we could (and of course we can not :) ) enforce that all `dlopen` have to go through the ROOT wrapper for it. > We could add locking within TClassTable. . So I think this is the only choice ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1232082088:581,wrap,wrapper,581,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1232082088,1,['wrap'],['wrapper']
Integrability,"> If this is an interface that is being made public for the first time, I would take the chance to promote better code practices, e.g. by making the return type an `enum class`. > I can do that, but all the other enums in the interface will remain plain C-style. Also, the return type will not be contextually convertible to bool anymore. That's both valid. Indeed, when introducing this enum, I didn't make it an enum class mostly to be consistent with the other TH1 enums. The fact that it's less verbose is a nice extra here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14077#issuecomment-1820851306:16,interface,interface,16,https://root.cern,https://github.com/root-project/root/pull/14077#issuecomment-1820851306,2,['interface'],['interface']
Integrability,"> If this is an interface that is being made public for the first time, I would take the chance to promote better code practices, e.g. by making the return type an `enum class`. I can do that, but all the other `enum`s in the interface will remain plain C-style. Also, the return type will not be contextually convertible to bool anymore:; ```; if(TH1::CheckConsistency(&h1, &h2)) {; h1.Add(h2);; }; ```; will not work. If that's ok, I'll change the `enum` to `enum class` and the return type of the function. _Edit_: also, all instances of code like; ```; if( inconsistency & kDifferentDimensions ); ```; will become a lot more verbose:; ```; if( inconsistency & static_cast<UInt_t>(EInconsistencyBits::kDifferentDimensions) ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14077#issuecomment-1820633844:16,interface,interface,16,https://root.cern,https://github.com/root-project/root/pull/14077#issuecomment-1820633844,2,['interface'],['interface']
Integrability,"> If this is going into 6.24, should I rebase on that branch and target it?. I had missed Axel's message. It is indeed slated to go in 6.24. Our usual process is to first merge in master and then backport to the v6.24 patch branch. @ChristianTackeGSI Once you update the release note, I will merge in and then can you open a new PR against the v6.24 patch branch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-814231184:97,message,message,97,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-814231184,1,['message'],['message']
Integrability,"> In ROOT it's not used anymore after the configure-based build system was removed. ; > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4127#issuecomment-516330348:136,depend,dependent,136,https://root.cern,https://github.com/root-project/root/pull/4127#issuecomment-516330348,1,['depend'],['dependent']
Integrability,"> In ROOT-10637, which is the library that does not have rootmap file nor a modulemap file?. In the example from the bug report that would be `spec_func_C.so`. It has no `spec_func_C.rootmap` nor `spec_func_C.pcm/module.modulemap`. > > In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies; > ; > Technically the 'problem' is that the rootcling executable that is run by ACLiC is not reporting to the list of dependencies of the source file it parsed. Doesn't rootcling have access to the information (connection symbol to library) through the pcm files? [Note: rootcling must not load any library]. Do you mean this code [here](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L557-L573). The content of `spec_func_C_ACLiC_map.out` and `spec_func_C_ACLiC_map.in` [here](https://paste.ubuntu.com/p/WGcBqPTRwH/). I suspect it worked before because accidentally we had libHist's description stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605463982:374,depend,dependencies,374,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605463982,2,['depend'],['dependencies']
Integrability,> In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Technically the 'problem' is that the rootcling executable that is run by ACLiC is not reporting to the list of dependencies of the source file it parsed. Doesn't rootcling have access to the information (connection symbol to library) through the pcm files? [Note: rootcling must not load any library],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605269705:140,depend,dependencies,140,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605269705,2,['depend'],['dependencies']
Integrability,"> In fact, I have a project that uses C++20, and uses ROOT compiled with C++17,. We currently do not support this mixing of standard. > However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. . This means that the example/test that have been run so far did not stress the interfaces that uses `std::span` (and/or your lucky that both version are similar enough). In practice, changing the test as this PR does introduces a ODR (one definition rule) violation: i.e. some of the code use one version of `std::span` and some of the code use a different version of `std::span`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1252819197:380,interface,interfaces,380,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252819197,1,['interface'],['interfaces']
Integrability,"> In particular, I tried to add a trivial unit test file [...] and compiling as the other ones, i.e. linking it to [...] makes the sanitiser running the test still complain as above. Depending on how you compile it, you might get `-fsanitize=address` from the ROOT C++ flags. But in general yes, the libraries are sanitized and will operate no matter if your application itself is built with sanitizers or not. > I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. That would be as expected, so I don't think it's worth the effort. > Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. As explained before, what the AddressSanitizer is complaining about is well understood and it also doesn't explain growing memory usage when not interacting with ROOT. This latter is what needs a clear reproducer to dig out the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818478493:183,Depend,Depending,183,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818478493,1,['Depend'],['Depending']
Integrability,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-747623732:30,depend,dependencies,30,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-747623732,2,['depend'],"['dependencies', 'dependency']"
Integrability,"> In the currently generated code, I don't see a reinterpret_cast... Is the error message in the commit message maybe copied from an intermediate try?. Indeed it was! I update the description and git log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11556#issuecomment-1329810173:82,message,message,82,https://root.cern,https://github.com/root-project/root/pull/11556#issuecomment-1329810173,2,['message'],['message']
Integrability,"> In the example from the bug report that would be spec_func_C.so. The intent is for this library to be hard linked to its dependencies. To do so rootcling needs a mapping ""symbols to library"" (previously provided by rootmap) and output a list of used library. hence my question "" Doesn't rootcling have access to the information (connection symbol to library) through the pcm files?""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605489169:123,depend,dependencies,123,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605489169,1,['depend'],['dependencies']
Integrability,"> In the original reproducer, the __getitem__ attribute check is done for the instance, so this wouldn't help there right?. Right, I know no way around that. Also, it'd be fine for those cases where a pointer is known to be an array, but like the example above, would fail cases where it's simply *likely* to be an array, as a `__getitem__` would be returned. > https://gitlab.cern.ch/atlas/athena/-/merge_requests/70435/diffs. That will give you different answers depending on whether the sequence has 0 or N elements, though. But there are plenty more worrisome things in that code. :). I'm looking at the implementation of `PySequence_Check`, which is:. ```; int; PySequence_Check(PyObject *s); { ; if (PyDict_Check(s)); return 0; ; return Py_TYPE(s)->tp_as_sequence &&; Py_TYPE(s)->tp_as_sequence->sq_item != NULL;; }; ```. The default `__getitem__` is added to the class as part of the `tp_methods` set and I guess it ends up there. A bit strange, though, as `sq_item` is limited to indexing with Py_ssize_t and that's not specified in the method list (only `METH_O`). But it may give us something to work with as `mp_subscript` is also available. Would have to see whether C++-side `operator[]` properly overrides that and still makes `PySequence_Check` work. It's not directly clear to me that it would, but can give it a try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057955720:465,depend,depending,465,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057955720,1,['depend'],['depending']
Integrability,"> In this case, without the inline keyword, the compiler is ask (and has to) generate this function in every .o files that correspond to a source file that includes (directly or indirectly) this header file. I.e. it was only a matter of time until something complained about duplicated symbols. Ok, but that's not what the error is saying: it's complaining about a (different) unresolved symbol. Moreover there is a definition of `TThreadExecutor::GetPoolSize()` in `core/imt/src/TThreadExecutor.cxx` which is compiled into `libImt.so`. I also don't see how it can be a missing dependency because there is no include of `TExecutor.hxx` in ROOT right now, except for the dict generation. The removal of `TExecutorCRTP::GetPoolSize()` is just a cleanup, unrelated to actually fixing the problem. I don't think the function is needed because nothing directly receives an object of type `TExecutorCRTP` and the CRT pattern is exactly about avoiding `virtual` functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-759690888:578,depend,dependency,578,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-759690888,1,['depend'],['dependency']
Integrability,"> Is `addColumns` a public function ? Maybe we should add a deprecation message before removing it ?. Good point, I just have brought back `RooAbsDataStore::addColumns` in the same way as I did for the RooDataSet function: it is now implemented in terms of `RooAbsDataStore::addColumn`. LIke this, there is not public interface change at all and we don't need an entry in the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10504#issuecomment-1114825229:72,message,message,72,https://root.cern,https://github.com/root-project/root/pull/10504#issuecomment-1114825229,2,"['interface', 'message']","['interface', 'message']"
Integrability,"> Is that discussion documented somewhere?. Yes, in https://indico.cern.ch/event/1381548/. > Regarding the deprecation `auto auto`: will break a lot of unnamed old macros, we should wait with removing until ROOT 7. We will start issuing deprecation messages starting from ROOT 6.32.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16410#issuecomment-2345705217:249,message,messages,249,https://root.cern,https://github.com/root-project/root/pull/16410#issuecomment-2345705217,1,['message'],['messages']
Integrability,"> Is that something related to Cling? . No this is C++ and this is a real issue. . > and also the implicit inline by having the method in the class definition). Indeed there is an implicit inline keyword *if and only if* the implementation is inside the class definition (i.e. the result of this PR for example). In the original code we have a header with:; ```; class SomeName {; public:; void somefunction();; };; void SomeName::somefunction() { ... };; ```; In this case, without the inline keyword, the compiler is ask (and has to) generate this function in every .o files that correspond to a source file that includes (directly or indirectly) this header file. I.e. it was only a matter of time until something complained about duplicated symbols. As far as the original error is concerned:; ```; IncrementalExecutor::executeFunction: symbol '_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv' unresolved while linking symbol 'atexit'!; You are probably missing the definition of ROOT::TThreadExecutor::GetPoolSize() const; ```; It was indeed an accurate report (TThreadExecutor inherits from TExecutorCRTP and the `= delete` meant to require GetPoolSize implementation in the derived class ... but it was implement only in TExecutor and not in TThreadExecutor). If GetPoolSize is not part of the TExecutorCRTP interface then this PR's commit removing it from there is correct, if it is part then it probably should have been declared with:; ```; virtual unsigned GetPoolSize() const = 0;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-759664054:1309,interface,interface,1309,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-759664054,1,['interface'],['interface']
Integrability,"> Is this PR is changing a public and possibly used interface? Is this a conscious decision?. I guess you refer to the change in signature of the callbacks (from `unsigned int` to `unsigned int, RDataBlockId&`): that interface was never released.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8841#issuecomment-910438172:52,interface,interface,52,https://root.cern,https://github.com/root-project/root/pull/8841#issuecomment-910438172,2,['interface'],['interface']
Integrability,"> Is this done upstream? I'm not feeling comfortable changing the copied modulemaps too much, we _have_ to move to a more dynamic scheme to not break on changes by Apple, and every local modification makes this harder. So far, we ""only"" added a surrounding `std` module and removed one module that broke because of that. This one looks like we either set up something wrongly, or there is a problem in vanilla libc++ already... Upstream is taking a different route in https://github.com/llvm/llvm-project/pull/107638 Let's hope soon we can drop this huge and messy workaround we have...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2366957086:459,rout,route,459,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2366957086,1,['rout'],['route']
Integrability,"> Is this expected?. No. Though `TClass::GetClass()` is the canonical interface, `TClass()` should work, too. I will have a look why it fails in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250#issuecomment-856014385:70,interface,interface,70,https://root.cern,https://github.com/root-project/root/issues/8250#issuecomment-856014385,1,['interface'],['interface']
Integrability,> Isn't EnableThreadSafety() enough?. It is not necessary here and probably slow-down other ROOT components. ; The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15825#issuecomment-2163237186:302,depend,depending,302,https://root.cern,https://github.com/root-project/root/pull/15825#issuecomment-2163237186,1,['depend'],['depending']
Integrability,"> Isn't that too noisy? It seems you will get the message whether you use or not ... (i.e. no way to not get the message?). I'll need to hide the access by `TThreadedObject` itself, else any inclusion of the header will cause a warning. I guess I'll move access into `TThread.cxx` and disable the warning for that source until v6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-597012118:50,message,message,50,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-597012118,2,['message'],['message']
Integrability,"> It is at the same level of usage and encouragement as TTree. . I sincerely hope not. TEntryList is definitely not usable in production contexts as it only scales well for a few entries for its purpose. For RDataFrame we had to move away from it exactly for this reason. . > And if I remember correctly we do not have yet a RNTuple replacement/equivalent). Indeed, and I hope we are not going to develop the same feature. IMHO, for the purpose of `TEntryList`, we have already `TTreeReader::SetEntryRange` and we should have similar interfaces (private/internal) for modern I/O systems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16074#issuecomment-2242293382:534,interface,interfaces,534,https://root.cern,https://github.com/root-project/root/pull/16074#issuecomment-2242293382,1,['interface'],['interfaces']
Integrability,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786085845:185,interface,interfaces,185,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786085845,1,['interface'],['interfaces']
Integrability,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running.; We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162888620:141,interface,interface,141,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162888620,1,['interface'],['interface']
Integrability,> It looks like the warnings/errors were already present before my PR... . What about the cyclic dependencies on LZ4? That seems to be new.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/621#issuecomment-307132436:97,depend,dependencies,97,https://root.cern,https://github.com/root-project/root/pull/621#issuecomment-307132436,1,['depend'],['dependencies']
Integrability,"> It may be worth setting up include what you use (https://include-what-you-use.org/). It would be ideal case, but now we can improve some places ""by-hand"". Also one found sometime wrong dependencies. And with small efforts one can fix them - I am not sure that automatic tool can provide such solution. . For instance - because of single `enum` complete `TVirtualX.h` spread via `TVirtualPad.h` over all graphics classes. If I move such `enum` in other basic include, one can fully avoid this situation. Of course, it may have side effect on our users - they should add few more includes. But this should be affordable",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5069#issuecomment-592407465:187,depend,dependencies,187,https://root.cern,https://github.com/root-project/root/pull/5069#issuecomment-592407465,1,['depend'],['dependencies']
Integrability,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1230200939:282,message,message,282,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939,2,['message'],"['message', 'messages']"
Integrability,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```; import cppyy, gc, os, psutil. cppyy.cppdef(""""""; #include <string>; class foo {; public:; const std::string leak (std::size_t size) const {; std::string result;; result.reserve(size);; return result;; }; };; """"""). process = psutil.Process(os.getpid()). # warmup; obj = cppyy.gbl.foo(); for i in range(1000000):; s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):; s = obj.leak(2048). gc.collect(); assert last == process.memory_info().rss; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15703#issuecomment-2145734725:207,wrap,wrapper,207,https://root.cern,https://github.com/root-project/root/issues/15703#issuecomment-2145734725,1,['wrap'],['wrapper']
Integrability,"> It will have huge side effect on JSROOT - one have to rewrite it from scratch complete JavaScript code. Depends on how you do it. If you use the name as before, but `Derived::fMember` in case the derived re-uses a member name from a base, then it should be strictly an improvement, and backwards compatible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842296903:106,Depend,Depends,106,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842296903,1,['Depend'],['Depends']
Integrability,"> It works because it calls what the virtual table shows 'so-far' and essentially it is equivalent to a call to > TFile::SysOpen, we probably ought to make it clear and do the substitution explicitly in the code. Probably, one should clearly use `TFile::SysOpen()` calls here and check that none of subclasses tries to use that TFile constructor. . > They are not related to this PR . Yes, error message has nothing to do with PR. ; Changes are minimal and looking very promissing. ; Probably, one should check if BIT(9) was used in older ROOT versions with TFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-523486256:396,message,message,396,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-523486256,1,['message'],['message']
Integrability,"> It would also be nice to have a bit more consistent interface. Right now pdf and cdf can be passed via references, while dpdf only as a pointer; pdf and dpdf via constructor, while cdf requires method call. Could you add the following:; > ; > ```; > TUnuranContDist(bool copyFunc=false); > SetPdf(const ROOT::Math::IGenFunction& pdf, bool isLogPdf=false); > SetDpdf(const ROOT::Math::IGenFunction& dpdf); > ```; > ; > ?. The reason pdf is passed as a pointer and not reference is because it is an optional parameter, it is not required. ; I can add a SetDpdf() function, as (SetCDF), but I am not sure it is needed a SetPdf. One can use the constructor in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-848839001:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-848839001,1,['interface'],['interface']
Integrability,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces?. Hi @vepadulano, thanks for your comments!. The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:; * git grepability: it's not good for code navigation is the name of one function is a substring of another function name; * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13939#issuecomment-2022688720:268,interface,interfaces,268,https://root.cern,https://github.com/root-project/root/pull/13939#issuecomment-2022688720,2,['interface'],"['interface', 'interfaces']"
Integrability,"> Just one idea: Maybe @jalopezg-r00t knows of a better way of getting these infos from gCling directly rather than having to go through a temporary file write and parse?. I see that the PR has been merged already, but to reply to the question: in principle, yes. TL;DR the header `interpreter/cling/include/cling/MetaProcessor/Display.h` provides the declaration `void DisplayGlobals(llvm::raw_ostream &stream, const Interpreter *interpreter);`, i.e. the same output can be rendered to a `llvm::raw_ostream`. The only problem with the above is that the code calling the aforementioned function would depend on both, Cling and LLVM headers (for `llvm::raw_ostream`). We could, however provide an interface that, e.g. returns a `std::string` or writes to a `std::ostream`, if need be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11654#issuecomment-1303383178:601,depend,depend,601,https://root.cern,https://github.com/root-project/root/pull/11654#issuecomment-1303383178,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"> LGTM !; > Thank you Vassil for fixing the issue with the R include files.; > Are we testing in the PR builds the R interface ?. IIRC we had a node with R enabled, however I'd not rely on that. After merging I will trigger the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8827#issuecomment-895901592:117,interface,interface,117,https://root.cern,https://github.com/root-project/root/pull/8827#issuecomment-895901592,1,['interface'],['interface']
Integrability,"> LGTM for the RDF part.; > ; > Out of curiosity, can you share a link to the kind of errors you see?. ```; Start 878: tutorial-dataframe-df001_introduction-py. 878: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df001_introduction.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 878: Environment variables:; 878: ROOT_HIST=0; 878: Test timeout computed to be: 1500; 878: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 878: error code: -529697949; 878:; 878:; 1/16 Test #878: tutorial-dataframe-df001_introduction-py .................***Failed 5.63 sec; test 879; Start 879: tutorial-dataframe-df002_dataModel-py. 879: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df002_dataModel.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 879: Environment variables:; 879: ROOT_HIST=0; 879: Test timeout computed to be: 1500; 879: Error in <TChain::LoadTree>: Cannot find tree with name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:736,message,message,736,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['message'],['message']
Integrability,"> LGTM! Why some of the changes of the upstream patch rather than all of them (if relevant for the future, might be nice to add that info to the commit message). Thanks! There's some changes in that patch that are not strictly related to Python3.9, and also I added more changes needed for our PyROOT / TPython files - at least it will stay written here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8257#issuecomment-850370111:152,message,message,152,https://root.cern,https://github.com/root-project/root/pull/8257#issuecomment-850370111,1,['message'],['message']
Integrability,"> LGTM, although the commit does more than the commit message suggests, maybe amend mentioning the unveto-ing of `datasource_csv`, `dataframe_display` and `tmva/tmva003_RReader`. Done. Thanks @eguiraud !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6897#issuecomment-736547629:54,message,message,54,https://root.cern,https://github.com/root-project/root/pull/6897#issuecomment-736547629,1,['message'],['message']
Integrability,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour?. I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6582#issuecomment-706109623:256,message,message,256,https://root.cern,https://github.com/root-project/root/pull/6582#issuecomment-706109623,1,['message'],['message']
Integrability,"> LGTM, many nice small improvements.; > ; > IIUC `RooAbsCollection` offers _some_ STL compatibility support, namely `begin`, `end`, `rbegin` and `rend`. At this point it might be good to decide if it should satisfy all of the [STL container requirements](https://en.cppreference.com/w/cpp/named_req/Container) or not. It's a bit misleading to only offer _part_ of the interface expected from an STL container. Point taken. This is now:; https://sft.its.cern.ch/jira/browse/ROOT-10750",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5514#issuecomment-623971651:369,interface,interface,369,https://root.cern,https://github.com/root-project/root/pull/5514#issuecomment-623971651,1,['interface'],['interface']
Integrability,> LGTM. The related error message and disabling is done (correctly in regard to this fix) on `CMakeLists.txt` line 99 to 106. That is correct! I should have maybe explained it in the PR description. Thank you very much for double-checking.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15416#issuecomment-2096735457:26,message,message,26,https://root.cern,https://github.com/root-project/root/pull/15416#issuecomment-2096735457,1,['message'],['message']
Integrability,"> Long term: will super builds solve this?. Yes, because in a super build you don't have builtins, but a real installation of each project in sequence (more or less like what LCGCMake does now, but just for ROOT's dependencies and ROOT itself). Another alternative is to use `add_subdirectory()`, but not all projects support that. Google test and benchmark do, but CMake segfaults with other projects if they are added just with `add_subdirectory()`. https://blog.kitware.com/cmake-superbuilds-git-submodules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2727#issuecomment-426182221:214,depend,dependencies,214,https://root.cern,https://github.com/root-project/root/pull/2727#issuecomment-426182221,1,['depend'],['dependencies']
Integrability,"> Looking at the docs of `createChi2` I see that it points to `RooChi2Var` ctor. Is it ok given that you are now discouraging usage of `RooChi2Var`? Furthermore, in https://root-forum.cern.ch/t/failing-chi2-fit/56309/8 you say that `createChi2` supports more options. You are right, things are not really consistent in the RooFit Chi2 world, and you will find small bugs and inconsistencies under every stone you turn around I think. The chi2 are only third-class citizens in RooFit, and since they are not used that much they also didn't get much bugfixes in the last years :(. What I would prefer for now is to merge this PR first, as it already contains quite some changes. Then afterwards, I would like to revise the structure of these chi2 methods, before finally coming back to the docs. It doesn't make that much sense to ""optimize"" the docs when the interfaces will probably change anyway. For example, what I don't like is that there are overloads of `createChi2/fitToChi2` for each RooDataHist and RooDataSet, and also reimplementations in RooAbsPdf and RooAbsReal. There are so many entry points that the documentation gets overly verbose and it's hard to keep it in sync. The goal would be to only have one entry point for chi2 instantiation and fitting in RooAbsReal, and then bring all the docs there. Including the part that is not in RooChi2Var. Does that sound okay to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638#issuecomment-1715735600:858,interface,interfaces,858,https://root.cern,https://github.com/root-project/root/pull/13638#issuecomment-1715735600,1,['interface'],['interfaces']
Integrability,"> Looks good to me ! I agree with the implemented logic.; > ; > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793964719:145,message,message,145,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793964719,2,['message'],['message']
Integrability,"> Looks good to me !; > For curiosity, why you need to use ULong_t and not size_t for pointer formatting ?. Thanks! And you mean the opposite, right? I use `%zx` and `size_t` because it is architecture dependent and correct for both 32 and 64 bit, otherwise the compiler complains either in 32 or in 64 bit (one would need either `%llx` or `%lx`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7981#issuecomment-826613330:202,depend,dependent,202,https://root.cern,https://github.com/root-project/root/pull/7981#issuecomment-826613330,1,['depend'],['dependent']
Integrability,"> Maybe a label?. 99% of the times PR submitters will not realize that they needed a full build rather than an incremental before it's too late.; As long as the label changes the CI's behavior even if it's added after the fact (after the first build), it sounds like a good solution because it stays there permanently. > Would using comments to start a new build from scratch be a better interface? (Something like commenting /build). A command like `/build` (currently we have `@phsft-bot build [...options...]`) would be slightly worse than a label because on any new push to the PR you would still get an incremental build, and you would have to give the special `/build` command every time, I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12302#issuecomment-1433279257:388,interface,interface,388,https://root.cern,https://github.com/root-project/root/issues/12302#issuecomment-1433279257,1,['interface'],['interface']
Integrability,"> Maybe the commit message could be more verbose about what was wrong before and how this patch fixes it. Fair enough, I will expand. > Also, should we have a test for the case this fixes?. Yes :) Can you add the test you case you had?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9750#issuecomment-1025151194:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/9750#issuecomment-1025151194,1,['message'],['message']
Integrability,"> Maybe we can just make RPageSource::UnsealPage a public method?. In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14403#issuecomment-1912119472:247,interface,interface,247,https://root.cern,https://github.com/root-project/root/pull/14403#issuecomment-1912119472,1,['interface'],['interface']
Integrability,"> My question was: is it possible to modify the ROOT-cmake-find script, so that it only forces the nlohmann-json-dependency if you are going to use ROOT7 classes? So to say, that depending on the `REQUIRED COMPONENTS` that you use in the `find_package` statement in your user code, it is more or less 'requiring'. That's an interesting question. 🤔 CMake project's can't easily do this. I mean, nothing is impossible, but it's not simple to do. As long as externals are handled through imported library targets (which I'm not sure the nlohmann_json dependency is used with 😕), one would need to tweak the behaviour of CMake in a pretty fundamental way for this. 🤔 You see, when you tell in (in this case) ROOT's build that library `Foo` needs to publicly link against library `Bar::bar`, CMake exports this information in the `ROOTConfig-targets.cmake` file. (That is a file generated fully by CMake itself.) It will say that `Foo` depends on `Bar::bar`. So at that point `ROOTConfig.cmake` has to produce `Bar::bar` in some way. Even if the user's code itself never wants to use the `Foo` library. Because CMake will not like it that it has the `Foo` library defined (even if unused by others), without all of its requirements met. So even if `ROOTConfig.cmake` itself doesn't look for nlohmann_json, if any of the CMake code depends on the `nlhmann::json` target (yes, there is such a target in CMake 😄), the CMake configuration would still fail. With a complaint about `nlohmann::json` not being known. 😦. So generally, projects that publicly depend on something else, always look for all of those dependencies with [find_dependency(...)](https://cmake.org/cmake/help/latest/module/CMakeFindDependencyMacro.html). Regardless of which parts of the project the user wants to use. 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1845002083:113,depend,dependency,113,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1845002083,7,['depend'],"['depend', 'dependencies', 'dependency', 'depending', 'depends']"
Integrability,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue?. In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2050660691:547,depend,dependent,547,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2050660691,1,['depend'],['dependent']
Integrability,"> New feature (as in, RooFit can now do something more than before) but no new test or changes in the docs is suspicious 😄. True, but writing a test that checks graphics output would consume too much time. Docs have actually improved. They are just not in function docstrings, but where they were before:; RooFit sends a message when this feature is invoked, and this message is much more informative now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5566#issuecomment-625240761:321,message,message,321,https://root.cern,https://github.com/root-project/root/pull/5566#issuecomment-625240761,2,['message'],['message']
Integrability,> New warning message (for reference): ![Screenshot from 2024-02-09 11-19-18](https://private-user-images.githubusercontent.com/29475282/303646838-cb204f9e-b92b-4bdb-ac5b-d5f7dfe87333.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDc0OTUyMjEsIm5iZiI6MTcwNzQ5NDkyMSwicGF0aCI6Ii8yOTQ3NTI4Mi8zMDM2NDY4MzgtY2IyMDRmOWUtYjkyYi00YmRiLWFjNWItZDVmN2RmZTg3MzMzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjA5VDE2MDg0MVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTI5MmNiYTg0NTdlN2Q3MjY3MWE0NWU1NmVkN2FhNTk3NWUyMTUwNWIwNGUxODEwZmMwNWNhZWRiMTM5NjRmMTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.k-Aaea9NdahxJyiwhhybi-JgL-1CD-WJDYlSoIohm_8). @pcanal: This is how the warning message looks like. The warning (-Wdeprecated-declarations) I think make sense for deprecating this feature.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1936206549:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1936206549,2,['message'],['message']
Integrability,"> No guarantees there: it's going to be a ""partial result"".; > If it's ""thread-local partial"" or ""global partial"" depends on what each action's. I am afraid that this is going to be confusing/hard-to-explain .... On the other hand in some debugging scenario it might be helpful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331222981:114,depend,depends,114,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331222981,1,['depend'],['depends']
Integrability,"> No longer performing this override in TViewPubFunction.h fixes the type back to TList and the call to GetBaseOffset no longer happens. Unfortunately, it does not solve the problem but rather prevents the warning but giving inaccurate information to the routine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271691905:255,rout,routine,255,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271691905,1,['rout'],['routine']
Integrability,"> Not sure to understand, you mean FindObject?; > I will have a closer look. FindObject might take the lock (or might not depending on the container and the implementation of the containee's function that are called). 'Warning' for sure (sometimes) request the lock as if I recall correctly it uses TClass inside. etc... I.e. if you are not using the ROOT main lock, you must be *very* careful of what is inside the locked section ... and as always might it as 'small' as possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902#issuecomment-325708639:122,depend,depending,122,https://root.cern,https://github.com/root-project/root/pull/902#issuecomment-325708639,1,['depend'],['depending']
Integrability,"> Not that I know off. They are limited to each TBuffer/TBasket. Then we should try to fix that, so that each `TBranch` is a single zlib stream when compressed with zlib. > Yes and the chunking of the generation is determining the clusters size. We wanted to increase the number of tasks based on that idea, but the TTree clusters are not actually set by this. It is set by the [auto-save option](https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RSnapshotOptions.hxx#L35) in `RSnapshotOptions`. The problem is that the default is to not auto-save, but save only when calling `Write()`, which then happens only at the end of a full task that may generate lots of data that will stay in memory until the end. It's probably enough to make auto-save default to save at every 5-10% of generated data. We already call `Write()` depending on this setting, so in principle there's no need to increase the number of tasks. > This is a bit surprising. The TTree is supposed to be re-using as much as possible the memory chunk (both the compression buffer and the TBuffer) as much as possible. The `TTree` is reusing memory chunks for the baskets, but the TBB task arenas that are created for each `TTree:Fill()` are not. They are created by a `TBranchIMTHelper` that is [created on the stack](https://github.com/root-project/root/blob/master/tree/tree/src/TTree.cxx#L4406) in `TTree::Fill()`. I had already noticed this before (see 5ba88aa3bf2e0ffe222968f9b6f029bf8f4ead57), but now `TBranchIMTHelper` creates a `TTaskGroup` [on the heap](https://github.com/root-project/root/blob/master/tree/tree/src/TBranchIMTHelper.h#L35), which then creates a TBB task arena [on the heap](https://github.com/root-project/root/blob/master/core/imt/src/TTaskGroup.cxx#L67) on every call to `TTree::Fill()`. This is a big problem in my opinion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385#issuecomment-461313663:846,depend,depending,846,https://root.cern,https://github.com/root-project/root/pull/3385#issuecomment-461313663,1,['depend'],['depending']
Integrability,"> Note: at least on Intel architectures, a single 64bit pointer cannot be split into more than one cache line due to alignment of 8 bytes (i.e. it's thread-safe to read it). . Even-though this might be true, the C++ standard explicit says that it is undefined behavior to read a value concurrently with an update with any explicit synchronization mechanism (for example std::atomic). In practice, this means that the same 'happenstance' you describe might not be true on other platforms. Furthermore the compiler is also allowed to re-order code in 'surprising ways' that would thwart/foil the assumption on the happenstance you describe. Thus our policy, consistent with the standard is that if a value can be updated while being read, it either must be an atomic or both the read and write must be protected by a lock. [This is not meant to preclude any other means of synchronization to achieve the same goal]. > Therefore, any thread will either see fBase == nullptr and acquire a lock to create the list of bases, or it will find the value already computed and return it immediately. In this case this true simply due to the fact that fBase is already an std::atomic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/957#issuecomment-327819102:331,synchroniz,synchronization,331,https://root.cern,https://github.com/root-project/root/pull/957#issuecomment-327819102,2,['synchroniz'],['synchronization']
Integrability,"> Now I remembered our chat, and we get the errors because pyspark is always injected in sys.modules in SWAN. So then this PR is not necessary?. Yes indeed, after further digging we discovered that opening a notebook in a SWAN session (with no modifications on the environment from our side) already shows `""pyspark"" in sys.modules == True`. No extra dependency is injected by ROOT, so this PR can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1055433984:77,inject,injected,77,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1055433984,3,"['depend', 'inject']","['dependency', 'injected']"
Integrability,"> Now that I see this issue (https://its.cern.ch/jira/projects/ROOT/issues/ROOT-8915) can we perhaps also provide a template for the commit messages, and close the issue?. Yes, this seems like a nice addition. The points raised by Philippe in the comments are still valid, we can either only provide it as an opt-in template that people themselves have to add locally as a commit template, or we have to enforce it somehow in the CI. I'm not sure the latter is desirable as it would turn the guidelines into rules. I don't know if this would be possible, but what could be nice is a 'commit format checker' in the CI that doesn't immediately turn red if it doesn't succeed but rather points the contributor to the guidelines.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410#issuecomment-1916621891:140,message,messages,140,https://root.cern,https://github.com/root-project/root/pull/14410#issuecomment-1916621891,1,['message'],['messages']
Integrability,"> Now that you know how to rebase, could you edit the commit messages, please?; > (`git rebase -i origin/master`) and then use `e` to edit the messages.; > ; > - Use a short title, max 80 characters, e.g. ""Add warning in TString constructor""; > - Then, after an empty line, explain in detail what you did and why. E.g. ""Warn when a TString of a fixed length is constructed from an input string that's too short.""; > ; > Like this, it will be easy to understand what happened when people are looking into these commits at some point in the future.; > ; > For the TF1 fix, explain what the bug was. **Edit**: And mention something like `Fix #8136` in the commit message. Okay. I will change it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862166111:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862166111,3,['message'],"['message', 'messages']"
Integrability,"> Now there are new failures associated with this change. Can you point me to one or two of those failures?. > https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160 fixed a bug in the template argument printing,. For up-streaming that, it probably would need to become a policy switch. If I understand correctly. 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 : remove suffix in template parameter (However the fix seems counter-intuitive, I am not sure what that code change really does). https://github.com/root-project/root/commit/4417a2cd34effdc6ea59797c2d86b6ef8ca8717a : add default template parameter to the printing. Is `SuppressDefaultTemplateArgs` a new option? If it is not, is it new that it was set to true by default? (we always needed the default parameter to be printed ... and actually in most case, we 'worked' at making sure that all the component are explicitly included (with the right spelling, i.e. for 'opaque' typedef), (see Utils/AST.cpp and the partial desugaring). So, so far, my best guess (because I don't understand 'what' it really does) is that 45c0f48f3c3c631d291e0a7a32fd1ba292e79160 has the side effect of destroying/replacing the partial desugaring. I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines. (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repository)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136396468:1386,rout,routines,1386,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136396468,1,['rout'],['routines']
Integrability,"> Now... One **could** add `cmake_minimum_required(VERSION 3.12)` to `ROOTConfig.cmake`. 🤔 I just fear that that may break the code of a couple of users. Though it might not... Maybe everybody already uses a newer CMake version than that with the latest ROOT versions. Maybe if we depend on this behaviour to find VDT, we could set only 0074 in the ROOTConfig.cmake? (can we unset it at the end of the ROOTConfig.cmake?); While the actual CMake version should probably be high enough, it could be that some packages depend on pre-3.12 behaviour for other policies?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178#issuecomment-1840797866:281,depend,depend,281,https://root.cern,https://github.com/root-project/root/pull/14178#issuecomment-1840797866,2,['depend'],['depend']
Integrability,> OK I wait you next bunch of commits later today to merge it. You do not understand.; I will create separate pull request.; It is about usage of OpenUI5 library to build canvas interface.; And in that new PR I will add few modifications in CanvasPainter.cxx to solve warnings.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/819#issuecomment-319595639:178,interface,interface,178,https://root.cern,https://github.com/root-project/root/pull/819#issuecomment-319595639,1,['interface'],['interface']
Integrability,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:1303,depend,depending,1303,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,1,['depend'],['depending']
Integrability,"> Once the tests are green, I think these changes should be merged asap. Yes, I opened it to expose the fix and the result of the debugging session. While I polish it to avoid interfering with existing tests, this can be already tested on SWAN by injecting the custom DistRDF Python package taken from this branch on the PYTHONPATH of the workers, so we will try to get some measurements soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2247088485:247,inject,injecting,247,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2247088485,1,['inject'],['injecting']
Integrability,"> One good option of Init is to:; > have a non virtual function call InitImpl that is called in the constructor.; > keep the Init virtual function but have it call InitImpl. You just proposing the way to trick out clang-tidy analyzer, but not how to solve the problem.; I guess, all this can be postponed to other, more fundamental PRs - if we decide to change TFile interface. For now I do not see efficient solution without significant changes in TFile interface.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-524435918:367,interface,interface,367,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-524435918,2,['interface'],['interface']
Integrability,"> One only gets a warning when deprecatedFunction is called. Yes. The idea of the set of macros is (for a function that we no exist in v6.34.00 for example:. 1. Warn in v6.32.xy that the function is deprecated only for code where the function is called.; 2. Warn as soon as we start the development cycle of v6.34 that the function (used or not) that we said were going to be removed are removed. (2) is currently implemented by turning on the warning-even-if-not-used in v6.33.01 (i.e. the first day of the v6.34 development cycles. https://github.com/root-project/root/pull/15148 postpone this to the next development tag (6.33.02). As you point out, this system however make it difficult to use the master (eg. with `-Werror`) until we do remove the functions. (Side note, prior to this automatic system we routinely 'forgot' to remove deprecated function when intended)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15150#issuecomment-2040479365:810,rout,routinely,810,https://root.cern,https://github.com/root-project/root/issues/15150#issuecomment-2040479365,1,['rout'],['routinely']
Integrability,"> Or even make a single libPyROOT work both with Python 2.x and 3.x if possible. As far as I understand, that should be possible too if we don't link directly to the Python library, but let symbols be resolved from the already loaded Python interpreter. I don't think that is even possible, since extension modules like libPyROOT need to define a different interface for Python2 and Python3. Moreover, there are differences also in the Python APIs between versions (even between 3.X versions) that also impose those `#if`s in our PyROOT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462717945:357,interface,interface,357,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462717945,1,['interface'],['interface']
Integrability,"> P.S.: The commit message references a geom PR, it should close #10984. The GitHub web interface wouldn't let me make this connection anymore, but I'll close it manually.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13751#issuecomment-1740568887:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/13751#issuecomment-1740568887,2,"['interface', 'message']","['interface', 'message']"
Integrability,"> Personally I would find it quite surprising that a TH1 setting impacts RooPlot behavior (I realize that RooPlot is implemented in terms of TH1, but RooPlot does not inherit from TH1, i.e. it is not a TH1), especially since there is a RooPlot-specific setting to control this behavior (that now will be trumped by the apparently unrelated TH1::SetDirectory). I would instead expect that `RooPlot::AddDirectory` exists, since `RooPlot` reimplements most of TH1's interface.; > ; > Also -- couldn't this change break existing code that relies on the current behavior (e.g. a user could set `TH1::AddDirectory(nullptr)` and then still rely on RooPlots being added to gDirectory)?. I see the point, but the users [here](https://root-forum.cern.ch/t/roofit-plot-not-showing-with-open-tfile/39380/6?u=stephanh) found it surprising. Funny enough, Wile_E on second thought now doesn't want it, any more either. Maybe save it for a 5-min discussion in the PPP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5614#issuecomment-628612395:463,interface,interface,463,https://root.cern,https://github.com/root-project/root/pull/5614#issuecomment-628612395,1,['interface'],['interface']
Integrability,"> Phillipe just pushed last evening his read/write lock updates. I *only* pushed the implementation of the lock and **not** the usage thereof. As mentioned in the PR:. The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:. 1 Replace gROOTMutex by a TRWMutexImp; 2 Add R__READLOCKGUARD; 3 Add a TListWithRWLock and THashListWithRWLock; 4 Use those in TROOT; 5 Remove current external locks for those ROOT lists (in particular the ListOfFiles); 6 Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock.; 7 Introduce scalability test on RecursiveRemove",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312222457:246,interface,interface,246,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312222457,1,['interface'],['interface']
Integrability,"> Please think twice about your use-case before building as a shared library. You can get cling as a shared library through the [CppInterOp](https://github.com/compiler-research/CppInterOp) project. Is CppInterOp the future of Cling (that is, will it eventually obsolete it?). I remember reading about some effort integrating Cling or some clang-repl into the LLVM project itself, which would be simplest for users/distributors down the line. As for my use-case, I tried expounding on the rationale here: https://github.com/root-project/root/pull/15563#issuecomment-2125969791",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2125981292:314,integrat,integrating,314,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2125981292,1,['integrat'],['integrating']
Integrability,"> Probably it could be a solution. How one can get these required components in `ROOTConfig.cmake` macro?. As I wrote, I don't think it would be the way. But still, you get the values specified by the user in `ROOT_FIND_COMPONENTS`. https://cmake.org/cmake/help/latest/command/find_package.html#package-file-interface-variables. For instance we use that in another project of ours, to check if the user is asking for one of the optional components of the project. https://github.com/acts-project/vecmem/blob/main/cmake/vecmem-config.cmake.in#L38-L45. Note that this logic is figuring out if something that the user asked for exists at all. This machinery is not meant to figure out whether the user wants to actively use something that (always?) does exist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1845011209:308,interface,interface-variables,308,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1845011209,1,['interface'],['interface-variables']
Integrability,"> Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system. Not in this case, there is no C++ dependency that can be expressed in CMake. The test doesn't link against the XML library, but it uses an executable via `gSystem` that is only available when building ROOT with `xml=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16675#issuecomment-2411277606:160,depend,dependency,160,https://root.cern,https://github.com/root-project/root/pull/16675#issuecomment-2411277606,2,['depend'],['dependency']
Integrability,"> ROOT does not enforce any build-time Python dependencies (except for numpy) . Does it mean that they are optional requirement?. > The unittest is merely checking that our test suite will find the packages it needs for the optional, runtime dependencies that we want to test ourselves. Humm ... but then they become non-optional requirement for developer. It also means that we can not test the case where they are not installed ... and since we are not testing this configuration one could assume that the configuration is broken (until proven otherwise) ... i.e. those package are actually required ... and if they are required why are we not checking at build time?. i.e. I am still missing something.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2050662999:46,depend,dependencies,46,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2050662999,2,['depend'],['dependencies']
Integrability,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146#issuecomment-246284226:311,protocol,protocol,311,https://root.cern,https://github.com/root-project/root/pull/146#issuecomment-246284226,1,['protocol'],['protocol']
Integrability,"> Reason why it searched - it uses in public interfaces in following libraries:; > ; > * `ROOTEve`,; > ; > * `RooFitJSONInterface`; > ; > * `RooFitMultiProcess`; > ; > ; > Without external `nlohmann_json` is not possible to link with these libraries. If ROOT build with external `nlohmann_json`, such external `nlohmann_json` must be provided. Note that after https://github.com/root-project/root/pull/14266, this is not true anymore since `ROOTEve` is the only library that still publicly depends on nlohmann-json.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1861408806:45,interface,interfaces,45,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1861408806,2,"['depend', 'interface']","['depends', 'interfaces']"
Integrability,"> Rebased version of this PR, which already got approved:; > ; > * [Mention root.cern instead of root.cern.ch #6114](https://github.com/root-project/root/pull/6114). Nice, thanks!! Maybe it's even worth to add the check in the CI tests as already done in the web: https://github.com/root-project/web/blob/d1b74175cdcbb5d43a86c8de9293439396d07fe9/.github/workflows/continuous-integration-workflow.yml#L40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14275#issuecomment-1864499314:375,integrat,integration-workflow,375,https://root.cern,https://github.com/root-project/root/pull/14275#issuecomment-1864499314,1,['integrat'],['integration-workflow']
Integrability,"> See also https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a for some description of a challenging use case. It is unclear to me what is the weight of the behaviour described in the comment and in the commit message w.r.t. the logic of what we need to do at atexit time. From my understanding, the current behaviour (before this PR) is:; 1. Run TROOT::EndOfProcessCleanups; 2. Python gc destroys variables, thus triggering any destructors of the corresponding C++ objects; 3. Run *again* TROOT::EndOfProcessCleanups. This logic seems faulty to me. I ran the reproducer of the [original issue](https://sft.its.cern.ch/jira/browse/ROOT-10295) linked in the commit you linked and it runs smoothly after the changes of this PR. Copying here the reproducer for reference:; ```python; import ROOT. def create():; f = ROOT.TFile(""file.root"", ""RECREATE""); t = ROOT.TTree(""tree"", """"); return f, t; f, t = create(); ```. Admittedly, I have only tried with Python 3.10, I will see if I can also try with other Python 3 minor versions. But irrespective of this, I don't think `TROOT::EndOfProcessCleanups` should be called twice. I believe that if there is indeed a behaviour that requires some *Python atexit* handler, that should be written in another function, separate from EndOfProcessCleanups, and called accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155514143:243,message,message,243,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155514143,1,['message'],['message']
Integrability,"> Seeing how many places this code needed to be copied lets me thing it would be worthwhile to refactor the code to read and write axes in the HistFactory implementation to re-use the readBinnedData functionality from RooWSJSONFactoryTool via some to-be-defined interface.; > ; > What do you think @guitargeek ?. I agree, the variable management is probably the most intricate part of the RooFit HS3 code right now, and we should see how to improve it in one of the next PRs! I can also discuss this together with @yashnator who noticed the same problems when working on the pythonizations. For for this PR, let's merge it because it includes already quite a few developments. To your support of non-uniform binning, I added:. * merging `testHS3HistFactory` and `testHistFactory`, like this we test your non-uniform binning support for free; * correct global observables definition and import; * export all the HistFactory parameters (one of the things you noticed was not done and you told me on mattermost); * some improvements of the HistFactoryJSONTool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13078#issuecomment-1608428520:262,interface,interface,262,https://root.cern,https://github.com/root-project/root/pull/13078#issuecomment-1608428520,1,['interface'],['interface']
Integrability,"> Seems to be, xrootd 5.1 version does not work with current ROOT code.; > We have to debug it before merge this PR. now I'm reading this, but I have a question and it's since xrootd doesn't depend on ROOT how it doesn't work with any version of it ? I'm missing something 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-825602813:191,depend,depend,191,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-825602813,1,['depend'],['depend']
Integrability,"> Several systems (notably Macs) install curl without support for SSL. I can't speak beyond Macs here, but this hasn't been the case on macOS for quite a long time now. . It works just fine on macOS 10.10-10.13, and would be surprised if it didn't work down to at least 10.9. Some of the older versions of macOS struggle to handle newer ciphers/protocols/etc but any version of macOS released in the last 4 or 5 years should handle it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499#issuecomment-359071726:345,protocol,protocols,345,https://root.cern,https://github.com/root-project/root/pull/1499#issuecomment-359071726,1,['protocol'],['protocols']
Integrability,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?. I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6842#issuecomment-730185356:465,depend,depends,465,https://root.cern,https://github.com/root-project/root/pull/6842#issuecomment-730185356,1,['depend'],['depends']
Integrability,"> Should we merge?. That about Axel?; Here is important new interface was introduced - TWebWindow::Run().; It is equivalent of TApplication::Run(), but for extra threads where TWebWindows (and RCanvases) can be used fully independent from the main loop.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487#issuecomment-415383394:60,interface,interface,60,https://root.cern,https://github.com/root-project/root/pull/2487#issuecomment-415383394,1,['interface'],['interface']
Integrability,"> Since for these tests an interpreted and a no interpreted version exists, flag as longtest only the non interpreted version. Since the compiled version is (presummably) faster than the interpreted version, should we do the reverse or do you think that testing the interpreted interface is also essential?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3426#issuecomment-463258018:278,interface,interface,278,https://root.cern,https://github.com/root-project/root/pull/3426#issuecomment-463258018,1,['interface'],['interface']
Integrability,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?. The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973063708:202,message,message,202,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973063708,2,['message'],['message']
Integrability,"> So `R__SUGGEST_CLASS` and `R__SUGGEST_FUNCTION` are now renamed to `R__SUGGEST_FASTER_...`? It's not always about speed, I actually prefer the original names. Agreed.; > Can we spell the diagnostic as `it has a superior alternative` such that we do not need to distinguish class/ function anymore?. Done. The distinction has to be made, though, because compilers provide a plethora of function attributes, but very few class attributes. For that reason (we wanted to make the `is deprecated` disappear from the message), the function macro is fundamentally different from the class macro.; > And the maybe simply `R__SUGGEST` or `R__USE_INSTEAD`?. Yes, that would be nice. However, in my opinion it's more annoying to see the class deprecation warnings than the function warnings. Just check what the bots are saying when the CI finishes. You should at least check a clang and gcc build. Currently, it's `R__SUGGEST_NEW_INTERFACE`, but that enables both class and function warnings. *PS*:; I added the do not merge label because I enabled the warnings in RooChebychev. When we are happy, I would like to remove that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-455564165:513,message,message,513,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-455564165,1,['message'],['message']
Integrability,"> So far changing to a function and PARENT_SCOPING the gensrdict seems to work.; > . Yes, that's fine assuming the fixme I proposed. > I added the `IF(TARGET ...)` parts in the last push, this would let me do what I want without adding any additional option to the function. I am not sure about that not affecting existing uses of REFLEX_GENERATE_DICTIONARY. Good. I like this approach better. > ; > > Can't we make this call to target_sources(edm4hep PRIVATE edm4hep.cxx) internal to REFLEX_GENERATE_DICTIONARY, this way you won't need an extra switch and things are a little more consistent and controlled by the routine supposed to handle dictionary generation?; > ; > That `target_sources` call is not what made we want a new switch, though; > ; > I don't I understand which code should be re-used where from the link to ROOT_GENERATE_DICTIONARY. This is a major refactoring which I think we should do in the future. Genreflex (wrapped in cmake by REFLEX_GENERATE_DICTIONARY) and rootcling/rootcing (wrapped by ROOT_GENERATE_DICTIONARY) essentially are the same binary which takes different set of arguments. From build system perspective, we should not have two isolated routines doing dictionary generation. ROOT_GENERATE_DICTIONARY is better tested because it is the default way to generate the ROOT dictionaries. I can imagine that REFLEX_GENERATE_DICTIONARY is a tiny wrapper over ROOT_GENERATE_DICTIONARY or other helper function which just makes the genreflex specific build system requirements and translates them to the underlying rootcling...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-588207137:615,rout,routine,615,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-588207137,5,"['rout', 'wrap']","['routine', 'routines', 'wrapped', 'wrapper']"
Integrability,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?. The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394478889:20,depend,depends,20,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394478889,2,['depend'],"['dependency', 'depends']"
Integrability,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394483209:83,depend,depending,83,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394483209,3,['depend'],"['dependency', 'dependent', 'depending']"
Integrability,"> So that's because `std::sqrt` doesn't have an overload for Vc types. The solution is the following:; > ; > ```c++; > T SomeFunc() {; > using std::sqrt;; > return sqrt(fX);; > }; > ```; > ; > i.e. keep `sqrt` unqualified such that ADL (argument-dependent lookup, fixing Vc) can happen, but make `std::sqrt` available through the local (!) `using namespace std::` or better yet `using std::sqrt` if that builds everywhere. Ah ok. And just in the function(s) where the error is occurníng?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822585971:246,depend,dependent,246,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822585971,1,['depend'],['dependent']
Integrability,"> So the upstream change has been merged. How can I ask for a proper backport? I have the impression building PRs to the v6-28-00-patches branch does not always work. Shall I try with master first?. Yes, please open against the master. > However, wouldn't doing that create troubles with the later integration of the LLVM upstream?. No, backports are fine for git to deal with during upgrades.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1744338115:298,integrat,integration,298,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1744338115,1,['integrat'],['integration']
Integrability,"> So to say, that depending on the REQUIRED COMPONENTS that you use in the find_package statement in your user code, it is more or less 'requiring'. Probably it could be a solution. How one can get these required components in `ROOTConfig.cmake` macro?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844992092:18,depend,depending,18,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844992092,1,['depend'],['depending']
Integrability,"> So we still need the file makeversion.py just possibly with a different source of information, don't we?. Only if we take that route. In principle I want to have the sources edited and tagged, done. Straight forward :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620#issuecomment-1715828422:129,rout,route,129,https://root.cern,https://github.com/root-project/root/pull/13620#issuecomment-1715828422,1,['rout'],['route']
Integrability,"> So, OK, I can get things to work with the hidden parameter approach. I agree it is not a good option. However,. > Firstly, the suggested 'second method' of moving the enable_if to the template parameters does not seem to work with the DisplacementVector::Unit method as then the method no longer depends directly on the SCALAR type. . What do you mean? How does it fail?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286495956:298,depend,depends,298,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286495956,1,['depend'],['depends']
Integrability,"> So, would the error still be there if you change the example to something like:; > ; > ```; > #include <TROOT.h>; > static auto force_init = gROOT->GetInterpreter();; > int main(int argc, char** argv) {; > return 0;; > }; > ```; Well, in that case it depends on what is loaded first, but there could be other static objects loading symbols from the other LLVM, so even if this would work, it would be only by chance. It just depends on the order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564005524:253,depend,depends,253,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564005524,2,['depend'],['depends']
Integrability,"> Sorry _last thing_, I promise: can you add a line in the 6.26 release notes about this please? So we don't depend on me remembering 😄. @eguiraud Also done! :D You may want to rephrase the release notes at some point, but I leave this for the future you ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7562#issuecomment-820225499:109,depend,depend,109,https://root.cern,https://github.com/root-project/root/pull/7562#issuecomment-820225499,1,['depend'],['depend']
Integrability,> Stays like this forever for me (Google Chrome on Linux). Can you check messages in browser console (Ctrl + Shift + I)?; And try to cleanup browser cache - you can have by chance some old JSROOT scripts there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235#issuecomment-453484366:73,message,messages,73,https://root.cern,https://github.com/root-project/root/pull/3235#issuecomment-453484366,1,['message'],['messages']
Integrability,"> Still. Since one _may_ use `ROOT_DIR`, this addition should still make things a bit more robust. But we'll still need to advise people to either request CMake 3.12 as a minimum in their own code, or to explicitly set `CMP0074` to `NEW`. 🤔. While ROOT already requires CMake >= 3.12, I guess as of 6.30 it requires that any projects depending on ROOT also need to require 3.12 as a minimum (or set the policy explicitly) (regardless of what the CMake version actually is). Not sure whether this is documented somewhere, at least to me it wasn't 100% obvious. A lot of packages don't seem to define a minimum version at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178#issuecomment-1840774289:334,depend,depending,334,https://root.cern,https://github.com/root-project/root/pull/14178#issuecomment-1840774289,1,['depend'],['depending']
Integrability,"> Sure #7724. Thanks. > > > We should understand why there are still DeferredDeclsToEmit;; > > Do we understand why there are still some left?; > I think we do. When committing a transaction CodeGen requires some definition which is present in another module which then eagerly deserializes declarations. And is that the intent or is that a problem? Either, should we update the ""call to action"" at the end of the commit message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398#issuecomment-809731716:421,message,message,421,https://root.cern,https://github.com/root-project/root/pull/7398#issuecomment-809731716,1,['message'],['message']
Integrability,"> Sure, it's for #8709 as mentioned in the description of this PR. Ok got it, so it's not ""needed"" for the current state of things, strictly speaking. I'll revert it for now in https://github.com/root-project/root/pull/12561. > Could you post what's going wrong with the dictionary?. The essential problem (in the current setup) is that `DEPENDENCIES` is for dependencies on dictionaries, while `RooBatchCompute` doesn't have one right now. This needs to be solved differently (but I didn't look into your further changes in #8709).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1486557377:338,DEPEND,DEPENDENCIES,338,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1486557377,2,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependencies']"
Integrability,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure?. That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by; ```; TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-392935754:88,depend,depends,88,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-392935754,1,['depend'],['depends']
Integrability,"> TStreamerInfoActions:255. This is the inner most part of the I/O and the most commonly uses code. Consequently this will (should) have a very severe impact on performance. Furthermore, that (inner) function contract is that it is being passed a valid address. The problem (to be solved) is that . ```; b->SetAddress(nullptr);; ```; seems to be ignored. It should lead to the internal of `TBranchElement` to now point to a newly created (as a result of this code) object (of the right type) owned by the branch. Similarly, we ought to detect (this time we can probably just error out) the case:; ```; f = nullptr;; t->Fill();; ```; early in the `FIll` stack, maybe as soon:; ```; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027#issuecomment-2080082428:209,contract,contract,209,https://root.cern,https://github.com/root-project/root/issues/8027#issuecomment-2080082428,1,['contract'],['contract']
Integrability,"> Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. My point is: why would we want to go back? AFAICT we already released ROOT with the requirement for 3.9. Did anybody complain?. > `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. For me, this isn't an argument for changing the error message for *the current version* and make it worse. > After LLVM upgrade we could completely skip usage of `json_fwd.h`. I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1230208129:540,message,message,540,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230208129,1,['message'],['message']
Integrability,> Tests are then fixed in root-project/roottest#183. Wouldn't it be better to (also) have a backward compatibility layer (i.e. using statement for the old names)? In particular this would give currently user of the experimental interface a little time to update their scripts?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2055#issuecomment-391038331:228,interface,interface,228,https://root.cern,https://github.com/root-project/root/pull/2055#issuecomment-391038331,1,['interface'],['interface']
Integrability,"> Thank you for fixing this memory access problem. However, for TRandom3, with a state of 624 words, it does not make any sense to return a single seed since there is no guarantee that the other 623 values will be the same. Maybe is better to return a zero value. Hi Lorenzo. No, I believe we should leave the current contract intact, which I am fixing. I am relying in my code on the fact that `GetSeed()` returns some representation of the generator state, even though it is not the same number as SetSeed(seed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135#issuecomment-1829976842:318,contract,contract,318,https://root.cern,https://github.com/root-project/root/pull/14135#issuecomment-1829976842,1,['contract'],['contract']
Integrability,"> Thank you for the PR. I think however that is correct to return a NaN for skewness and kurtosis and not have a Fatal error which could crash the application. Fair enough. I can remove the Fatal error but I think that the division by zero is still something that needs to be addressed. Would this change be ok?. ``` C++; if (stddev == 0) {; Warning(""GetSkewness"", ""illegal value of stdev (division by zero)"");; }; ```. It would be up to the user to pay attention to the error messages. Alternatively we can conclude that the code is working as intended (returning Nan is ok as you stated) and close this PR and mark the bug report as solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14506#issuecomment-2072457326:477,message,messages,477,https://root.cern,https://github.com/root-project/root/pull/14506#issuecomment-2072457326,1,['message'],['messages']
Integrability,"> Thank you for the fix! Before merging, could you update the commit message to something that briefly describes the fix instead of only linking to the issue?. done!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14328#issuecomment-1886830898:69,message,message,69,https://root.cern,https://github.com/root-project/root/pull/14328#issuecomment-1886830898,1,['message'],['message']
Integrability,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense?; > ; > But yes _please_ contribute! You could start with imlpementing; > ; > ```c++; > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",; > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,; > Int_t netopt = 0);; > ```; > ; > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958#issuecomment-1782993206:720,interface,interface,720,https://root.cern,https://github.com/root-project/root/issues/13958#issuecomment-1782993206,2,['interface'],['interface']
Integrability,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1819517680:389,interface,interface,389,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1819517680,1,['interface'],['interface']
Integrability,"> Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that. I think that's `gSystem->Exit(0)` that was used before. You can pass a second parameter (called `mode` and effectively undocumented AFAICT) that makes it call `_exit()` instead of `exit()`. However, I'm not sure if we need to close `TFile`s because the workers don't open them, the parent should handle them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764677587:57,rout,routine,57,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764677587,2,"['inject', 'rout']","['injected', 'routine']"
Integrability,"> Thanks for hunting down solutions for these tests! For the first one, you could maybe mention that this is because of [8deb57c](https://github.com/root-project/root/commit/8deb57c04a5ceea96533d095092fcd4f71d1df94) (as far as I could find some time ago for #12454). Updated [commit](https://github.com/root-project/root/pull/12855/commits/cc4dcce381f19f3dd77133218920d2d6048842d8) message! Thanks for reviewing! :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855#issuecomment-1554771507:382,message,message,382,https://root.cern,https://github.com/root-project/root/pull/12855#issuecomment-1554771507,1,['message'],['message']
Integrability,"> Thanks for the PR. How will a user know if the histogram has reached its maximum bin content ? Should we add an error message the first time this happens or should we add a flag (e.g using one of the bit) in the histogram?. A flag sounds good to me. But we should add then this also for TH1I, TH1C, etc. What about ROOT7 new histogram interfaces, should this be added too, there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14271#issuecomment-1864335488:120,message,message,120,https://root.cern,https://github.com/root-project/root/pull/14271#issuecomment-1864335488,2,"['interface', 'message']","['interfaces', 'message']"
Integrability,"> Thanks for this nice update. Would it be perhaps possible to add a test?. Not easily I think, because passing a `void` mapping function will still fail to compile, just with a nicer error message now...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14694#issuecomment-1943313583:190,message,message,190,https://root.cern,https://github.com/root-project/root/pull/14694#issuecomment-1943313583,1,['message'],['message']
Integrability,"> Thanks for your comments! . Thanks for the discussion. I think many students learn C++ from root examples so it matters.; ; Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super!; b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: ; ```cpp; //my_subtrounes.C. // my_subroutines.C; void my_subroutine(shared_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C; #include <ROOT/RDirectory.hxx> // one extra line ;); #ifdef __CINT__; // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here...; #endif. void make_th1() {; shared_ptr<TH1> x,y,z;; my_subroutine(x);; my_subroutine(y);; my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:; #ifdef __CINT__ // I wouldn't leave the globals in compiled code. ; RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control.; RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;); RDirectory::Heap().Add(""test3"",z); // ; #endif; }; ```; I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:521,interface,interfaces,521,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['interface'],['interfaces']
Integrability,"> Thanks, @stephanlachnit . I don't understand yet why we cannot make use of the more specific dependency info we have in our CMake build system also for external LLVM? I.e. for builtin LLVM we say which libraries we depend on, and we link only those. Why isn't that also working in the case of an external LLVM?. I have to investigate a bit more. For builtin clang, I don't know (yet) how or if it selects explicitly which library it depends on. However for rootcling it definitely doesn't select the components correctly. > And `clingInterpreter` is defined at `interpreter/cling/lib/Interpreter/CMakeLists.txt` with all its LLVM dependencies:; > ; > ```cmake; > set(LIBS; > clingUtils; > [...]; > ); > ; > set(LLVM_LINK_COMPONENTS; > analysis; > [...]; > ```. It should do the trick according to [`AddLLVM.cmake`](https://github.com/stephanlachnit/root/blob/65ae229c6ba458c610f0a41d32b798a132f385e4/interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake#L458-L459). Maybe it's worth trying to set `LINK_COMPONENTS` in the function `llvm_add_library` call explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1667731152:95,depend,dependency,95,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1667731152,4,['depend'],"['depend', 'dependencies', 'dependency', 'depends']"
Integrability,"> Thanks. I understand. Maybe it depends on the use case, in some cases it could be useful. Maybe we can add a function to enable it SetEnableScrolling(), and leave it disabled by default?. Yes, please. I think it's better, just to make sure not to disturb users' experience. And check also my diff to see if it works also for you. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7272#issuecomment-784938679:33,depend,depends,33,https://root.cern,https://github.com/root-project/root/pull/7272#issuecomment-784938679,1,['depend'],['depends']
Integrability,"> That doesn't really answer any of my two questions: There are other parties than us using the libc++ modulemap, notably Apple. Why don't they see this problem? And what is special about the two installations alluded to in the commit message, when it's working in the CI?. I am not sure how to answer them. Apple Swift uses that modulemap for something to do C++ interop with. I do not know the details but Swift-C++ is probably not the go-to choice for swift developers most of the time. I am not sure what's the answer to your second question. That's for @pcanal to answer but the answer does not really matters. Before it did not work after this patch works for his setup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2370422378:235,message,message,235,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2370422378,1,['message'],['message']
Integrability,"> That should be possible. What do you think @Axel-Naumann ?. 2nd thought:; It depends on `gtest`, so better not to put it in any existing lib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9528#issuecomment-1009743484:79,depend,depends,79,https://root.cern,https://github.com/root-project/root/pull/9528#issuecomment-1009743484,1,['depend'],['depends']
Integrability,"> That's fair, but users who don't have either of them installed will get broken tests if they choose to run the tests. Well ... for what it is worth, I am one those users ... (and a minimal build would also be one of those users, wouldn't it be?). If the ROOT build configure successfully and build successfully, then ctest should be clean also. I.e. roottest failing because numba is not installed would, in my opinion, means that the cmake configure step of ROOT should fail if numba is not installed ... i.e. numba would become a hard dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938#issuecomment-650352555:539,depend,dependency,539,https://root.cern,https://github.com/root-project/root/pull/5938#issuecomment-650352555,1,['depend'],['dependency']
Integrability,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?; > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:; ```; root [0] auto func = [](const double doub) {; doub += 1.;; }; ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'; doub += 1.;; ~~~~ ^; ROOT_prompt_0:1:29: note: variable 'doub' declared const here; auto func = [](const double doub) {; ~~~~~~~~~~~~~^~~~; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526#issuecomment-702104810:54,message,message,54,https://root.cern,https://github.com/root-project/root/pull/6526#issuecomment-702104810,1,['message'],['message']
Integrability,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction.; > ; > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777286355:641,integrat,integrated,641,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777286355,1,['integrat'],['integrated']
Integrability,"> The CMake maintainers themselves state that the best workaround for ""cmake not working properly when build directories include special characters"" is ""do not use those special characters"". So probably we should not do anything about this. I think at this point we should explicitly reject if the directory name contains unsupported characters. Not doing anything is in my opinion not an option as it still result in error message but with 2 deadly flaws: it floods the screen with zillions of repetitions and requires to (after finding the ""right"" location) the line of CMake to figure out why it complains.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731#issuecomment-1738529350:424,message,message,424,https://root.cern,https://github.com/root-project/root/issues/13731#issuecomment-1738529350,1,['message'],['message']
Integrability,"> The alternative could be to have the decorator inspect the function signature and, if it does not have the second argument wrap it with something like. That's a very nice idea! Actually I already had a wrapper of the user pythonizor function (the wrapper does the filtering based on the class name), so it was easy to add the two ways of calling the pythonizor depending on its number of parameters. I also added an early check for the number of parameters of the pythonizor which happens when it is registered (I use `inspect` to get the number of positional arguments). I wrote some tests already so the only missing thing is a tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-964073687:125,wrap,wrap,125,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-964073687,4,"['depend', 'wrap']","['depending', 'wrap', 'wrapper']"
Integrability,"> The change is on the cmake hotspot used by virtually everybody. The risk to make an error here is high due to the complexity of the routine. Taking such risk weeks before the release should be very well weighted with the actual gain. It seems to me that the gain is not big enough to justify taking this direction for the release branch. @vgvassilev ; As long as @etejedor agrees, for me it's fine reverting a couple of commits and go back to 4ce57e, even if empty directories are installed. ; But I don't think this can stay as it is forever. As I partially pointed out in the description, there are two main cons:; - 80 pcms out of 90 are installed twice;; - install(DIRECTORY ...) has the default behavior of copying empty skeletons of all the subdirectories found in the directory; it was only by chance that we found it with the introduction of multiple Python versions, but this doesn't mean that we're not going to be stuck in the same situation once again in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763#issuecomment-574172758:134,rout,routine,134,https://root.cern,https://github.com/root-project/root/pull/4763#issuecomment-574172758,1,['rout'],['routine']
Integrability,> The crash depends on the input file. I landed with one file and here is the log file which came from running valgrind. . Does the crash with valgrind have the same symptoms as the original problem (i.e. seg fault in `TStreamerInfoActions::VectorLooper::ReadCollectionBool`)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1466612723:12,depend,depends,12,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1466612723,1,['depend'],['depends']
Integrability,"> The difference between `clang++` and `g++` is that upon calling `dlclose` the dependent library are unloaded (`clang` case) or not unloaded (`g++` case). Because in the `g++` the dependent libraries are not unloaded, they are also not reloaded hence drastically reducing the increase in atexit that are registered. Interesting. I still don't understand the underlying reason though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12863#issuecomment-1564108288:80,depend,dependent,80,https://root.cern,https://github.com/root-project/root/pull/12863#issuecomment-1564108288,2,['depend'],['dependent']
Integrability,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1885023776:275,synchroniz,synchronize,275,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1885023776,1,['synchroniz'],['synchronize']
Integrability,"> The error is ""real"":; > ; > ```; > Warning in <THnSparse::CreateHnAny>: Unknown Type of Histogram; > Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments.; > const int dim ( s->GetNdimensions() );; > ^; > ```; > ; > Could you have a look at `root -l -b test/stressHistogram.cxx`, please? That seems to fail after your change. It seems that THnSparse is not defined for Long64_t, only for Long_t. I'll create the L64_t version of it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-875602523:195,rout,routine,195,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-875602523,1,['rout'],['routine']
Integrability,"> The error messages in `treetreeplayertestUnit2` are expected, but should be checked. I actually tried to whitelist this one, but CMake makes no difference between an unset variable and a set, but empty string. Now, it should do the right thing, and ROOT_ADD_GTEST has one argument less.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-642579925:12,message,messages,12,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-642579925,1,['message'],['messages']
Integrability,"> The explanation here on the PR page sounds reasonable. Could you add this to the commit message?; > When I looked only at the commit, I was puzzled why this was necessary. Commit message extended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5902#issuecomment-647773859:90,message,message,90,https://root.cern,https://github.com/root-project/root/pull/5902#issuecomment-647773859,2,['message'],['message']
Integrability,"> The first report looks real, though I don't see (yet) how that can happen - apparently `~TROOT()` gets called before `libThread` is unloaded (and its `~TThreadTearDownGuard()` is run). But as `libThread` depends on `TROOT`'s `libCore` it should be the other way around...? I'd very much appreciate if you could have a look - if not just let us know!. Could it be that the call to ROOT::EnableThreadSafety is changing somehow the unloading order?. ![image](https://user-images.githubusercontent.com/10653970/123986845-ad406d80-d994-11eb-9a40-bfbe06b0ccb7.png). Or maybe because of:; https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L321-L323",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8297#issuecomment-871496674:206,depend,depends,206,https://root.cern,https://github.com/root-project/root/issues/8297#issuecomment-871496674,1,['depend'],['depends']
Integrability,"> The generation of our PCH/PCM file requires only the header files to be in; place. That's incorrect; check how the list of headers and the `-I` are generated. Please verify that this works with a `make -j32` build on a 32 core machine (or at least 16), using a freshly configured build (i.e. not incremental) and running `make onepcm`. That ensures you got the dependencies mostly right :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336704976:363,depend,dependencies,363,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336704976,1,['depend'],['dependencies']
Integrability,"> The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-795003958:1042,rout,routine,1042,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-795003958,2,['rout'],['routine']
Integrability,"> The number of fixed-sized elements is returned by GetLen(). You meant GetLenStatic. GetLen is the 'effective' number of element and is including the leaf count information, it gives information about the entry last read (via GetEntry). So. ```; TLeaf *l = GetALeaf();; if (l->GetLeafCount() != nullptr) {; // this is a variable-sized array; } else if (l->GetLenStatic() > 1) {; // this is a fixed-sized array; } else {; // l->GetLen() == 1 and this is a single element; }; ```. > It's possible to have more than one leaf per branch. Very rare, however (I believe one has to do this fairly explicitly in the internals of ROOT?). It is not that rare. Any code not supporting must be instrumented to explicitly print a error and/or warning message when the case is encountered.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359015662:739,message,message,739,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359015662,1,['message'],['message']
Integrability,"> The only problem with the above is that the code calling the aforementioned function would depend on both, Cling and LLVM ; > headers (for llvm::raw_ostream). We could, however provide an interface that, e.g. returns a std::string or writes to a; > std::ostream, if need be. For the moment it is not that important - `RBrowser` anyway uses intermediate file output to get all kind of console output when executing any kind of command in the prompt. Therefore usage and parsing of `.g` command is looking fine for me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11654#issuecomment-1303392182:93,depend,depend,93,https://root.cern,https://github.com/root-project/root/pull/11654#issuecomment-1303392182,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985330570:139,depend,depend,139,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985330570,1,['depend'],['depend']
Integrability,"> The problem appears when I read data produced by other application. I see, does the other application produce data like in your reproducer above? If so, there is a bug in that application, it doesn't follow the documentation that I linked above. I would suggest to open an issue with the developers in that case. > should not ROOT always set ownership for the data which is read from a file?. I understand the confusion, for the case of objects that were stored on disk it might be better to already have ownership of everything inside of them. But, it depends on the type of data and most importantly on the particular user application. The behaviour of ROOT object ownership may not always be the expected one, but is documented in [the manual](https://root.cern/manual/object_ownership/) and in the relevant class references. There are applications that rely on that so it can't always be changed. > For Python it is quite unnatural to explicitly manage resources, everything should be deallocated when Python object is deleted. I can't say I completely agree with this sentence. Let me break it down:; * everything should be deallocated when Python object is deleted: do you mean when you call `del obj` ? Because in general that is not true, a Python object is deleted/deallocated when the garbage collector decides it is the right time. Then, here you don't have pure Python objects, but there are also C++ objects underneath. ROOT takes care of lifetime management of the object it knows about. In the code above the objects are not properly registered.; * For Python it is quite unnatural to explicitly manage resources: in most cases I would agree. There are some notable exceptions, for example when you manage file I/O or even more when you manage databases (the standard Python `sqlite3` library comes to mind). In the case of `TFile`, the semantics and the behaviour are closer to managing access to a database than reading a text file. Finally, let me highlight that usage of `TObjArra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11099#issuecomment-1204887656:555,depend,depends,555,https://root.cern,https://github.com/root-project/root/issues/11099#issuecomment-1204887656,1,['depend'],['depends']
Integrability,"> The problem is that the macro OPENSSL_API_1_1 will only be defined during compilation of civetweb, and not during runtime or compilation of dependent targets. Then if something uses civetweb in interpreted code or other parts of ROOT, it may crash because it will be using the wrong interface. If no external code needs the macro to work properly, then it's fine. I do not see problem here. This flag used only during compilation and does not affect interface of HTTP classes. At the compile time libRHTTP will be linked with OpenSSL library (internal or external). ; Later, both in interpreted and compiled mode, always compiled version of civetweb. c code will be used, linked with proper libcrypto.so. Only if OpenSSL library changed, one should rebuild libRHTTP. But I do not have example how this can be done in cmake and if this is controlled properly in other libraries (like RootAuth or GlobusAuth)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1836#issuecomment-380158029:142,depend,dependent,142,https://root.cern,https://github.com/root-project/root/pull/1836#issuecomment-380158029,3,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"> The second one is a change in the interface of the MinimumBuilder base class. We run Minuit using > the MnMigrad class. Without this change, there is no way to change the print level in a particular; > instance of MnMigrad. The change does not violate the logical constness of MinimumBuilder. When considering thread-safety, one of the conclusion is that in order to have a consistent system, const function **must** be thread-safe. So indeed all mutable ought to be either protected by a lock or made atomic. [Most of our code was written before this conclusion was reached and thus are not compliant but we ought to have new code following this correctly to avoid getting further in technical debt :) ]. Independently, it is **very** odd to have a 'Setter' to be const. What is the actual use case/code that is prevented by having this function non-const?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384991793:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384991793,1,['interface'],['interface']
Integrability,"> The status bit check test seems a bit flaky as it also failed in the nightlies, albeit with a different problem (segfault, not error message). @amadio humm ... Odd ... I can't find any recent nightly showing the problem. Can you point me in the right direction? Also odd, *this* failure is a segfault and not an error message (aka I am confused by your message ;) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/959#issuecomment-327879837:135,message,message,135,https://root.cern,https://github.com/root-project/root/pull/959#issuecomment-327879837,3,['message'],['message']
Integrability,"> The travis-ci/pr result (clang-tidy) seems relevant (point to potential pre-existing problem). @Axel-Naumann @pcanal . 80-90% of messages from clang-tidy are false positives or not very important (like unused variables). And in case of `travis-ci/pr` it only reports about lines which are changed in PRs. Therefore it useless now. Probably, one should enable only really important errors from clang-tidy (like memory leak or wrong delete operator), but make them more prominent in PRs - send message in the thread like Jenkins does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7508#issuecomment-800009586:131,message,messages,131,https://root.cern,https://github.com/root-project/root/pull/7508#issuecomment-800009586,2,['message'],"['message', 'messages']"
Integrability,"> The user needs to understand, however, that once the server goes down, all clients go down with it too. We are trying to move towards pattern that **prevents** silent-ish user mistake (i.e. in that case if the user make a mistake the code may or may not crash depending on many factors :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299452101:262,depend,depending,262,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299452101,1,['depend'],['depending']
Integrability,"> There seems to be some problem with the new commit structure. Take for example this commit; > ; > [124dfb5](https://github.com/root-project/root/commit/124dfb5bf6ef077134458ef12bf8c6adfef41542); > ; > The title is; > ; > ```; > [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; > ```; > ; > But the diff is much larger than that. From the github diff I can see that commit practically touches all the files of the PR, not only the ones needed to `fix on loading required packages...`. Please revisit your commit layout and make sure each one only contains atomic changes, for the files touched by what the commit title/message say. I think the full commit message describes the changes for that commit that is a merge of several ones. This is probably the main change. I think it is difficult to describe in a line several things at the same time. If we want atomic commit we need to go back to 50 or more. I would not waste too much time on this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1702812061:674,message,message,674,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1702812061,2,['message'],['message']
Integrability,> This basically means we are loading the llvm libraries twice. This can happen by linking the llvm symbols to a library outside libCling for instance. After reading this again - we don't want to link libLLVM then? Then this might be an artifact of https://github.com/root-project/root/pull/12154 where I changed the linking of object to linking of target - I guess this leads to dependencies (i.e. libLLVM) being linked as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1661994062:380,depend,dependencies,380,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1661994062,1,['depend'],['dependencies']
Integrability,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded).; > ; > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db).; > ; > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded.; > ; > But still several questions:; > ; > 1. Why is libTree listed twice in the list of depend library?. The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > ; > 2. When should gSystem->Load automatically reload a library, if ever?. If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > ; > ; > @Axel-Naumann @vgvassilev opinions?; > ; > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618361118:199,depend,depend,199,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618361118,3,['depend'],"['depend', 'dependent']"
Integrability,"> This check is performed in theTProfile::Copy` function, . Such check must be introduced in all Copy methods in all classes.; To avoid such checks, I propose directly call method of appropriate class and do not use `virtual` interface.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10942#issuecomment-1203840133:226,interface,interface,226,https://root.cern,https://github.com/root-project/root/pull/10942#issuecomment-1203840133,1,['interface'],['interface']
Integrability,"> This fixes ROOT-10712.; > ; > Note, that the problem appears if; > ; > ```; > TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; > ```. Can you paste the stack trace?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462#issuecomment-619433743:104,Wrap,Wrapper,104,https://root.cern,https://github.com/root-project/root/pull/5462#issuecomment-619433743,1,['Wrap'],['Wrapper']
Integrability,"> This is (of course) the intent. Reading/writing to a variable across thread where there is no synchronization going on is C++ undefined behavior. A program with undefined behavior cannot be reasoned about as the compiler/CPU are not required to behave in a manner you expect. > Nonetheless, can you try the following patch to see if it helps:. Given the failure is 1 in 10^4-10^6 range, we have no good way to reproduce and therefore a patch to test isn't really likely to be conclusive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15090#issuecomment-2027521011:96,synchroniz,synchronization,96,https://root.cern,https://github.com/root-project/root/issues/15090#issuecomment-2027521011,1,['synchroniz'],['synchronization']
Integrability,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2009372525:38,depend,dependencies,38,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2009372525,2,['depend'],"['dependencies', 'dependency']"
Integrability,"> This is something we can handle by batching submissions. If small ring sizes have a serious impact on performance then we might want to issue an error message, telling users to adjust their rlimit (and how) for much improved I/O performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-673314896:153,message,message,153,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-673314896,1,['message'],['message']
Integrability,"> This means, that they remain open but zero bytes are served,; > (I'm getting data for some files but zero bytes for other files). Do you know if the xrootd routine just ""hang"" in that case or return with request to retry later? If they just hang there is not much I can see doing to detect the case unless there is an xrootd routine that detect/support this case that we could replace the current call with. (and we would need some help to update the xrootd plugin in ROOT to support and test this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1253892312:158,rout,routine,158,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1253892312,2,['rout'],['routine']
Integrability,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-735627850:68,Depend,Depending,68,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-735627850,1,['Depend'],['Depending']
Integrability,"> To my understanding, ClassDef required either for I/O and/or if class used with interpreter. Not only. If an object inherits from `TObject`, it gets the member functions `IsA` and `Class`. If the derived class does have a `ClassDef` those will returns the wrong answer (i.e `this is object is a TObject` rather than `this object is a derived class`). In practice this means that the behavior will be inconsistent and ***some things*** will fail silently (for example the Graphical interface will not be able to know which type object this is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638492051:483,interface,interface,483,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638492051,1,['interface'],['interface']
Integrability,"> To the person that wrote the code i'm sure it is! smile Concretely maybe ""extra arguments to be used by the wrapper object when receiving a call."" could be e.g. ""extra arguments that will be forwarded to _wrapper_class's init method""?. Added !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094796270:110,wrap,wrapper,110,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094796270,1,['wrap'],['wrapper']
Integrability,"> Upstream is taking a different route in [llvm/llvm-project#107638](https://github.com/llvm/llvm-project/pull/107638) Let's hope soon we can drop this huge and messy workaround we have... That hasn't landed yet and even if it did today, it's still multiple versions of SDK down the road. So why are we seeing problems *now* that nobody else has? And where do we see them at all, because our CI is green?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2367293519:33,rout,route,33,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2367293519,1,['rout'],['route']
Integrability,"> We are trying to move towards pattern that prevents silent-ish user mistake (i.e. in that case if the user make a mistake the code may or may not crash depending on many factors :) ). In this case, the code won't compile if the user tries to create or destroy a client directly. That's why I thought this solution is interesting. However, if the user tries to use the pointer after the server is destroyed, there will be a segmentation fault, because all the clients will have been destroyed by the server. So, making the destructor public and using a unique_ptr would allow us to throw a runtime exception in the server destructor, saying that clients are alive at the time the server goes down. I will do that then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299454025:154,depend,depending,154,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299454025,1,['depend'],['depending']
Integrability,"> We have Vc switched off in ROOT actually, but then we build it ourself and depend on it in O2. Could that be the issue?. I suspect that the headers that Vc installs and the location of the headers of installed ROOT overlap and that makes it confused.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2160628295:77,depend,depend,77,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2160628295,1,['depend'],['depend']
Integrability,"> We have a clear path to deal with this behaviour. Although there is a workaround, people hit by this bug will not necessarily know right away why their ROOT doesn't work and may waste their time trying to debug it. I think it's worth looking at a fix. It used to work before even with the compiler wrappers. Note also that the problem reported by @xkzl happens for a similar reason, but is not quite the same as the one reported here, as in https://github.com/root-project/root/issues/10556#issuecomment-1931464549 ccache is not involved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1968623162:300,wrap,wrappers,300,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1968623162,1,['wrap'],['wrappers']
Integrability,"> We have had the same discussions for the conda package. You are trading disk space for correctness and that’s something we should not do. Do you have a link to that past issue/discussion? It seems to me that this change under review is adding more flexibility without taking anything away. We can also think that at some point in the future, the LLVM project would integrate all the Cling patches, and a shared LLVM would make sense even on classic FHS distributions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127733301:367,integrat,integrate,367,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127733301,1,['integrat'],['integrate']
Integrability,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html; > Without your change the axis titles appear as you see on the reference guide online.; > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```; charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));; ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts?; ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8235#issuecomment-847929734:514,depend,depended,514,https://root.cern,https://github.com/root-project/root/pull/8235#issuecomment-847929734,1,['depend'],['depended']
Integrability,"> We import an empty Python module every time, with a function that only when called would lazily import another Python module that contains the [pyspark, dask] module. But then the imports are already lazy, aren't they (i.e. the changes in this PR should not be necessary)? E.g. the import of pyspark is only triggered when I call [this function](https://github.com/root-project/root/blob/f61d5ef82a8851f488318be8eefe06a7d5311744/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/__init__.py#L13), and that only happens when I am constructing a Spark RDataFrame, not when I'm constructing a Dask RDataFrame. So I still don't see how we get those errors. EDIT: Now I remembered our chat, and we get the errors because pyspark is always injected in sys.modules in SWAN. So then this PR is not necessary?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1055413266:746,inject,injected,746,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1055413266,1,['inject'],['injected']
Integrability,"> We set fName to a hardcoded constant (empty didn't work) so that we're not dependent on the name of the file on creation. Currently file name stored as before.; If one creating file in other directory or with other name - it is already not exactly same code.; I guess, one can resolve this problem by writing proper test scripts. Idea of the PR - if exactly same code runs twice, created binary files should be identical.; To achieve this, default values for TKey/TDirectory time stamps and UUID are stored.; Because of this some ROOT features will not work for such files - one will not be able read TRef's correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-524215736:77,depend,dependent,77,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-524215736,1,['depend'],['dependent']
Integrability,"> We should probably verify if deleters are required to be copyable, and why we don't see this on our Macs... Alright, since C++17 (https://cplusplus.github.io/LWG/issue2802 to be more precise), deleters are only required to be moveable. The problem is that libc++ only [implemented this](https://github.com/llvm/llvm-project/commit/6a328c66d35c71d5e92be80659186de567b86e38) in 2021 and the headers in macOS 11 probably don't have that change (judging by the error message in https://github.com/root-project/root/issues/14664#issuecomment-1940795175). I discussed with @jblomer and we lean towards not resolving this issue because the code complies with C++17, just it doesn't work with the old version of the STL. As a workaround, it's possible to disable RNTuple with `cmake -Droot7=OFF`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14662#issuecomment-1943587410:465,message,message,465,https://root.cern,https://github.com/root-project/root/pull/14662#issuecomment-1943587410,1,['message'],['message']
Integrability,"> We try to keep ROOT platform independent, this isn't helping :-/ I'll merge this as a stop-gap solution, but I'd like you @ferdymercury and @pcanal to consider reverting this feature. I am not sure I have seen any discussion on motivation, and why the use of e.g. tbb isn't a more appropriate solution. Hi, the discussion is here: https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519/3, I am developing a 40Gbps DAQ system where readout performance is critical to not lose data. Depending on which CPU the DAQ thread is located, the readout is fast enough to not lose any data. That's why setting CPU affinity was proposed. Without it, some readouts were not fast enough to catch up with the data rate. I do not know about TBB, thus not sure if it would be better or worse. In any case, I am not a thread expert, so if there is a better solution, I would be happy to try it instead of the current attempt with CPU affinity. Just as a side note, for my application, I do not need highly parallel tasks, I just need two threads (one for the GUI, one for the DAQ). If I do not set the affinity, Linux puts them both on the same CPU and thus the DAQ readout performance is reduced. (That being said, it's true that this feature could be expanded to Windows and MacOS, however I do not have any of these OS to test it.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8563#issuecomment-870438974:516,Depend,Depending,516,https://root.cern,https://github.com/root-project/root/pull/8563#issuecomment-870438974,1,['Depend'],['Depending']
Integrability,"> We're preloading all modules now, so runtime cxxmodules have all the identifier information which; > completely replacesrootmap files. Does it also contains the library dependency information?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394476177:171,depend,dependency,171,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394476177,1,['depend'],['dependency']
Integrability,"> Well ... libPyROOT will still need to be linked against libCore at least ... I left linking part the same how it was before, but changed only dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802#issuecomment-430290987:144,depend,dependencies,144,https://root.cern,https://github.com/root-project/root/pull/2802#issuecomment-430290987,1,['depend'],['dependencies']
Integrability,"> What about:; > ; > _TXXX is a legacy interface, there will be no bug fixes nor new developments, therefore it is not recommended to use it in new long-term production code. But depending on the context using TXXX might still be a valid solution._; > ; > ?. sounds perfect :). Pointing to what alternatives there are, if any, either through the legacy alias, or in the body doc, would be additionally helpful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11315#issuecomment-1237795154:39,interface,interface,39,https://root.cern,https://github.com/root-project/root/pull/11315#issuecomment-1237795154,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"> What does ""hard linked"" mean? Using explicit linking?. Yes, I meant explicit linking. > rootcling will list all loaded libraries in the existing session and. If I remember correctly, it is passed a rootmap file which is then leverage to obtains (from cling) the actual symbol and thus actual library needed and then issue a list of library needed. This is used to at least load the depend library that has not been loaded yet and is (or should be/could be) used to limit the explicit linking. > y the visiting the undefined symbols when the library is loaded. Humm that is a challenge as rootcling can not load any libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605537324:384,depend,depend,384,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605537324,1,['depend'],['depend']
Integrability,"> What does git blame says about the code we remove? Was that added separately to address some specific problem?. Regarding forcing symbol emission, this was added all the way back in 2016 / 2017 by commits https://github.com/root-project/root/commit/189025d7682ad27614f32dd00cabf221046b71ea and https://github.com/root-project/root/commit/1c19e0ab4a039c83821d10169c5f0c1877c89ba4. You tried to reduce this during the upgrade to LLVM 9 (https://github.com/root-project/root/commit/696d5428d7a8863e72f4ad12b32c43fa1110eabd#diff-6e2f3604a761eaec5f5cda89a7dda68ab5a46e4369278267764daff49efaff74), Axel added back the full loop for Windows: https://github.com/root-project/root/commit/2c4a756d38d9b5f0348f645a116b3014159f03d6 The CI is green on Windows, and I believe it's not needed anymore with the current lookup mechanisms in ORCv2. The lookup in `addOrReplaceDefinition` was added during the upgrade to LLVM 13 and the rewrite to ORCv2: https://github.com/root-project/root/commit/5c8451557d6eb578468a48acd87ba51e8d17304b#diff-6f538c4c81f9684d6b725af96572958f38a55ddbf11226ac5404a35b8caca965 I don't think this was ever necessary, as argued in the commit message: ""Calling `getSymbolAddress` will force symbol emission, which is not needed if the intent is to replace it.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15966#issuecomment-2203206905:1156,message,message,1156,https://root.cern,https://github.com/root-project/root/pull/15966#issuecomment-2203206905,1,['message'],['message']
Integrability,"> What does the build error message say? I can't read it. ```; 12:53:51 MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; 12:53:51 Creating library C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.lib and object C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.exp; 12:53:51 C:\build\workspace\root-pullrequests-build\build\core\base\test\Release\CoreBaseTests.exe : fatal error LNK1169: one or more multiply defined symbols found [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-779835777:28,message,message,28,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-779835777,1,['message'],['message']
Integrability,> What happens if you simply remove the DEPENDENCY. Then rule executed only once when target file is not exists.; Any following changes in source will have no effect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804#issuecomment-1029083072:40,DEPEND,DEPENDENCY,40,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029083072,1,['DEPEND'],['DEPENDENCY']
Integrability,"> What is the advantage of having RNTuple distinct from RNTupleAnchor?. I did it for class hierarchy reasons. In this way, the page storage layer (which is also part of RNTupleLite) does not need to know about the RNTuple class. Depending on how the `RNTuple` interface evolves in the future, we may move it out of the RNTuple library into, e.g., a new `RNTupleUI` library so that the `RNTuple` class can reference RDF classes (like `RNTuple::MakeRDF`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10558#issuecomment-1126019356:229,Depend,Depending,229,https://root.cern,https://github.com/root-project/root/pull/10558#issuecomment-1126019356,2,"['Depend', 'interface']","['Depending', 'interface']"
Integrability,> What is the benefit?. `TVirtualX.h` do not needed in headers while not used there. Reduce dependncies when during compilation and producing dictionaries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5072#issuecomment-593369365:92,depend,dependncies,92,https://root.cern,https://github.com/root-project/root/pull/5072#issuecomment-593369365,1,['depend'],['dependncies']
Integrability,> What's the issue that gets fixed by this commit? Can you add the error messages?. Done,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12912#issuecomment-1568626414:73,message,messages,73,https://root.cern,https://github.com/root-project/root/pull/12912#issuecomment-1568626414,1,['message'],['messages']
Integrability,"> Which PyTorch version are you using ? With 1.10 it still works for me, but I think looking at https://github.com/pytorch/pytorch/blob/master/torch/onnx/utils.py the master version has the _model_to_graph interface changed to not pass anymore example_outputs. @sanjibansg , can we remove example_outputs also for older PyTorch versions ?. ![image](https://user-images.githubusercontent.com/84740927/160382712-cbb6265d-682b-4260-b10e-cc5c1b5006d0.png); Hello, My Pytorch version is 1.11 and I think for 1.10 it works fine but for higher versions it gives the above error i will make the changes proposed by @sanjibansg and @lmoneta . Thankyou for reviewing my PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10223#issuecomment-1080499698:206,interface,interface,206,https://root.cern,https://github.com/root-project/root/pull/10223#issuecomment-1080499698,1,['interface'],['interface']
Integrability,"> While ROOT already requires CMake >= 3.12, I guess as of 6.30 it requires that any projects depending on ROOT also need to require 3.12 as a minimum (or set the policy explicitly) (regardless of what the CMake version actually is). Not sure whether this is documented somewhere, at least to me it wasn't 100% obvious. A lot of packages don't seem to define a minimum version at all... It is indeed a requirement for the users. The way that CMake works, even if you use the very latest CMake version, if your code has let's say. ```cmake; cmake_minimum_required(VERSION 3.10); ```. in it, then CMake will try to behave exactly like version 3.10 did. To have `CMP0074` have the ""`NEW` behaviour"", either the ""last"" `cmake_minimum_required(...)` call had to require CMake 3.12+, or the `CMP0074` policy specifically has to be set to `NEW`. (This way one can pick and choose which policy should behave how, without opting into all of the policies introduced by CMake 3.12.). Now... One **could** add `cmake_minimum_required(VERSION 3.12)` to `ROOTConfig.cmake`. 🤔 I just fear that that may break the code of a couple of users. Though it might not... Maybe everybody already uses a newer CMake version than that with the latest ROOT versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178#issuecomment-1840784026:94,depend,depending,94,https://root.cern,https://github.com/root-project/root/pull/14178#issuecomment-1840784026,1,['depend'],['depending']
Integrability,"> While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business... This is how I initially implemented it. Indeed it makes the index itself much more straightforward. However, when I started prototyping the actual join/unaligned friends it really didn't work without making that interface overly complicated so in the end I opted for a non-templated version. Perhaps there's some template trickery to still make it play nice with the foreseen interface (or allow for a slightly different but still simple enough interface), I will think about it for a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2285578132:659,interface,interface,659,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2285578132,3,['interface'],['interface']
Integrability,"> Why is the version with the non-pointer not supported as in std::lockguard?. Because ROOT traditionally passes pointers. You are welcome to propose a PR, I think this would be a fine and minimal addition. It might be more useful to make sure that the argument is a pointer to a `TVirtualMutex` even in the non-`_REENTRANT` case, though - for which I'd also welcome a PR!. > Why does one version need "";"" at the end, but not the other one?. Please just provide `;` after `R__LOCKGUARD(mutex)`. Alternatively, please submit a PR that adds `; {}` behind the current ""needs a semicolon"". But as this isn't really a user facing interface I don't think it really matters. > How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package?. You want to pass `-pthread` to compiler and linker - without that, no threading support can exist in your code, and thus locking cannot work. > Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?. That's an excellent question to which I do not have an authoritative answer. My assumption is that `_REENTRANT` was off and thus the conversion from `TMutex&` to `TVirtualMutex*` wasn't needed. Let me know if there is something left for us to do to fix this issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9294#issuecomment-971418353:625,interface,interface,625,https://root.cern,https://github.com/root-project/root/issues/9294#issuecomment-971418353,1,['interface'],['interface']
Integrability,"> Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations. Because, as written in the commit message, libc++ split its modules into one module per public header (https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985272091:265,message,message,265,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985272091,1,['message'],['message']
Integrability,"> Why would you remove that line?; > ; > * This lines hides ROOT's LLVM 5 symbols from other libraries, so this should be fine is certainly what we want.; > * What my patch should do is is kind of the other way around, if there are other libraries exposing LLVM symbols, ROOT should still take its own LLVM 5 symbols. In this way, other libraries do not need to hide their symbols. I’ve missed a bit where your intent is to lift the requirements on other llvm libraries being compiled with hidden visibility. Could you describe your setup in a bit more detail? dlopen-ing libCling is one side of the problem the other is the jit symbol resolution (https://github.com/root-project/root/blob/master/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L299) I suspect the latter is the issue. . PS: Can you paste the issue you have and a particular code snippet and error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561816645:870,message,message,870,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561816645,1,['message'],['message']
Integrability,"> Without external `nlohmann_json` is not possible to link with these libraries. I see, thanks for the explanation. So from my point of view, either builtin should be turned always to ON as before for binary releases, or the cmake find-script should only require it if ROOTEve is linked, or the requirement for external installation should be added to the dependencies website.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1843272381:356,depend,dependencies,356,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1843272381,1,['depend'],['dependencies']
Integrability,> Would that answer your concerns:. It shows that on this example it 'works'. It does not tell me *why* it works. (And all my questions from the previous message are still open (at least for me :) ). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413986013:154,message,message,154,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413986013,1,['message'],['message']
Integrability,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1972843020:299,depend,dependent,299,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1972843020,1,['depend'],['dependent']
Integrability,"> Yeah GetNmethods calls GetListOfMethods :) It would be nice if we don't have to make a list of methods just because we want to get the number.. Strictly speaking this is not the case. This routine is used twice in the code and both time it is used as the barrier in a for loop over the method. So indeed, those two loop might be better off being rewritten to use iterators instead of index, however lifting the need for the iteration through the method is another thing entirely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-372721042:191,rout,routine,191,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-372721042,1,['rout'],['routine']
Integrability,"> Yes it works. I am not sure if it really speed up the execution a lot. But why not doing it this may. Have you done some speed up measurement ? Note we also have more .C macros: `MakeRCanvasJS.C`, `MakeTCanvasJS.C` and `makeimage.C`. Sorry, I didn't see this message. I did not do speed-up measurements. Concerning makeimage and the others, I tried once and saw some problems when enabling multihreading, not sure why, so I did not look into it further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10004#issuecomment-1081718561:261,message,message,261,https://root.cern,https://github.com/root-project/root/pull/10004#issuecomment-1081718561,1,['message'],['message']
Integrability,"> Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!; > ; > Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; > ; > ```; > That should fix a recent nightly failure with gcc11 avoiding to require; > module ""bits/ranges_base.h"" in C++20 context.; > ```; > ; > does not call out; > ; > * that it's during dictionary generation; > ; > * that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); > ; > * that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:797,message,message,797,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,1,['message'],['message']
Integrability,"> You can always check that (value in the bin after fill) - (value in the bin before fill) is reasonably close to the value that was added, and print a warning message otherwise. Not really. Your suggestion would work well if you only had `AddBinContentByOne`. But if you have `AddBinContentByWeight`, then what's ""close"" becomes non-trivial. In other words, Closeness is a function of Weight. So your limit would depend on Weight. There is no way to ensure that that a user always calls AddBinContentByWeight with the same weight. There is no way to ensure that the user calls uses the same weight for each bin of the histogram. This would result in different ""overflow bin limits"" for every bin in the histogram. So it's an ill-posed problem. I attempted to do this with `std::nextafter - current_value` comparing it vs `weight`, but as said, this is completely problematic if you have changing weights. To me, the only solution is using TH1L where the overflow limit is well defined, and forget about floating precision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2046988364:160,message,message,160,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2046988364,2,"['depend', 'message']","['depend', 'message']"
Integrability,> [3fa8acb](https://github.com/root-project/root/commit/3fa8acb3c445f2949ea73ef62c89d761f150ebb9) has a funny character int he commit message. Will correct as soon as we are done building,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5582#issuecomment-641129245:134,message,message,134,https://root.cern,https://github.com/root-project/root/pull/5582#issuecomment-641129245,1,['message'],['message']
Integrability,"> `-Dimt=OFF -Dbuiltin_tbb=OFF`. I tried to add the 2 options you said, you can check the below steps, it still failed. The result look the same as the original error of this issue.; 1. `cmake -G ""Visual Studio 17 2022"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off -Dimt=OFF -Dbuiltin_tbb=OFF ..` ; 2. `msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild`. error message:; `C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\gitP\root-project\root\build_arm64ec\CMakeFiles\c47203b562f7dfc78de28a6cb0d4e391\Options.inc.rule;C:\gitP\root-project\root\build_arm64ec\CMakeFiles\ef6b5551e87d9b29a1350db42d169b36\ClangDriverOptions.rule;C:\gitP\root-project\root\interpreter\llvm-project\clang\include\clang\Driver\CMakeLists.txt' exited with code -1073741819.`. detailed logs:; [ROOT_Setup_arm64ec.log](https://github.com/user-attachments/files/16309437/ROOT_Setup_arm64ec.log); [ROOT_build_arm64ec.log](https://github.com/user-attachments/files/16309436/ROOT_build_arm64ec.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787#issuecomment-2238657100:438,message,message,438,https://root.cern,https://github.com/root-project/root/issues/11787#issuecomment-2238657100,1,['message'],['message']
Integrability,"> ```; > +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TBaseClass>alreadyinTClassTable; > +Warningin<TClassTable::Add>:classROOT::Detail::TTypedIter<TEnumConstant>alreadyinTClassTable; > ```; > ; > The template ROOT::Detail::TTypedIter uses ClassDefInline and the registration of the class (i.e. the call to TClassTable::Add) is triggered by via a function static variable initialization. What these messages indicates (and we see that on Windows also) is that the ""function static variable"" are initialized multiple time.; > ; > Setting a breakpoint on TClassTable::Add with the condition `cname[0] == 'R' && cname[6] == 'D' && cname[24]=='<' && cname[32] == 'E'` will tell you exactly when/why this happens (on Windows, multiple library have identical copies of the functions and they are not ""de-duplicated"" by the linker (i.e. both copies are brought in independently). GDB did not stop there but I can see we have the same symbol in libCore.so and libTree.so (both are weak). These failures might have something to do with the 3 remaining failing tests in cling standalone (@Axel-Naumann is looking into them). Thanks for investigating!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-703223267:413,message,messages,413,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-703223267,1,['message'],['messages']
Integrability,"> ```; > root [4] func(&a); > IncrementalExecutor::executeFunction: symbol '_ZN11__cling_N514funcEPN11__cling_N523ABCE' unresolved while linking [cling interface function]!; > You are probably missing the definition of __cling_N51::func(__cling_N52::ABC*); > Maybe you need to load the corresponding shared library?; > ```; This pull request improves the situation; cling now emits a diagnostic; ```c++; root [4] func(&a); ROOT_prompt_4:1:1: error: no matching function for call to 'func'; func(&a); ^~~~; ROOT_prompt_1:1:6: note: candidate function not viable: no known conversion from '__cling_N52::ABC *' to '__cling_N50::ABC *' for 1st argument; void func(ABC*) {}; ^; ```; meaning: function `func()` takes a different version of `class ABC` (for which you provided a different definition in a following step). Despite the sequence you described being valid C++, if definition shadowing is enabled (as per the current implementation), you need to also redefine the function so that the type of the first argument is that of the latest definition of `class ABC`:; ```c++; root [5] void func(ABC*) {}; root [6] func(&a); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9782#issuecomment-1030227274:152,interface,interface,152,https://root.cern,https://github.com/root-project/root/pull/9782#issuecomment-1030227274,1,['interface'],['interface']
Integrability,"> `clingtest` exports many more symbols from `libCling`, for testing purposes (see the code in `interpreter/CMakeLists.txt`). This means our (patched) LLVM and Clang will interfere with other LLVM installations used by dependent libraries. IIRC this can make tests fail!. We will build that version of ROOT only to run clingtest, right? We still will test ROOT the regular way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957#issuecomment-2116926053:219,depend,dependent,219,https://root.cern,https://github.com/root-project/root/issues/6957#issuecomment-2116926053,1,['depend'],['dependent']
Integrability,"> `json_fwd.hpp` exists since a while and included in many early distributions. My OpenSUSE has `nlohmann/json.hpp` version 3.10.5 with such forward declaration.; > ; > Problem is ROOT builds where `nlohmann/json.hpp` can be found only with extra settings for shell variables. In such cases none of its includes can be used in public ROOT interfaces. I know, but we have to do something, and as agreed on Wednesday, we actually *want* to ensure that users have the same version of `nlohmann/json`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205#issuecomment-1220364104:339,interface,interfaces,339,https://root.cern,https://github.com/root-project/root/pull/11205#issuecomment-1220364104,1,['interface'],['interfaces']
Integrability,"> `override`, links, formatting in one PR? I guess that's too much.; > I expect that people will get a lot of merge conflicts on the branches they are working on when rebasing. The symlinks are already part of a different PR, but this PR depends on that one. I will rebase it away once the referred PR is accepted.; I just formatted the lines that clang-tidy touched, as @amadio suggested. I only ran a `git clang-format master` and later a `git clang-format HEAD~1`. But you are right, it's a lot of changes. Should I remove the formatting from the PR?. > Further, some sub-projects use different formatting, so a global clang-format is maybe not the right thing to do. I personally have the IDE fix only the lines that have been worked on, so it gets the job done more slowly. I used the .clang-format files within the ROOT working copy. My IDE should have formatted only a few lines where I manually changed the `ClassDef` into `ClassDefOverride`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-656174738:238,depend,depends,238,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-656174738,1,['depend'],['depends']
Integrability,> ah can you use `[DF]` instead of `[RDF]` in the commit message please? (yes we have been inconsistent in the past but `[DF]` is the prevalent spelling). Done!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6362#issuecomment-693346573:57,message,message,57,https://root.cern,https://github.com/root-project/root/pull/6362#issuecomment-693346573,1,['message'],['message']
Integrability,"> and every source file has proper list of dependencies:. That's not true. There are files including headers not declared in their dependency list, so if that header is not copied to the build directory and found from there, compilation will fail. Just remove `${CMAKE_BINARY_DIR}/include` from the include list, add the generated headers to a special directory and add *that* to the include list, then try to compile ROOT. You will see many errors of headers that cannot be found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600641084:43,depend,dependencies,43,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600641084,2,['depend'],"['dependencies', 'dependency']"
Integrability,"> as TTree I/O does not provide bulks, . What do you mean? There is a (non-zero copy but still low) bulk i/o interface in TTree already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517#issuecomment-1433333219:109,interface,interface,109,https://root.cern,https://github.com/root-project/root/pull/11517#issuecomment-1433333219,1,['interface'],['interface']
Integrability,"> but that scripts worked before, they were not shell dependant. That's weird. Yes, but I added the multi-threading capability now, so it has been changed a bit. ![image](https://user-images.githubusercontent.com/10653970/159881470-9a8f123d-634e-4fa9-8236-2c833c60bcf7.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077397237:54,depend,dependant,54,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077397237,1,['depend'],['dependant']
Integrability,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files); (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394462603:176,depend,dependent,176,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394462603,1,['depend'],['dependent']
Integrability,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1916342665:713,depend,dependency,713,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1916342665,1,['depend'],['dependency']
Integrability,"> const&) const (RDFColumnRegister.cxx:79); ==270704== by 0x2722A89B: ROOT::Detail::RDF::RFilterBase::RFilterBase(ROOT::Detail::RDF::RLoopManager*, std::basic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:167501,depend,depends,167501,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,"> do we still need TStorage?. It looks like we don't. We might want to deprecate it and remove its internal use. > do we need to deprecate the removed TApplication interfaces?. It would probably be nicer but in this case, it looks like those are very few.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7867#issuecomment-819794451:164,interface,interfaces,164,https://root.cern,https://github.com/root-project/root/pull/7867#issuecomment-819794451,1,['interface'],['interfaces']
Integrability,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```; root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'; Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }; ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15891#issuecomment-2180639835:963,inject,injected,963,https://root.cern,https://github.com/root-project/root/pull/15891#issuecomment-2180639835,1,['inject'],['injected']
Integrability,"> e.g. it will allow ROOT to be more modular in this case. That do you mean? It is just same includes, copied in single sub-dir. ; Only if dependencies does not work correctly, it can be dangerous.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600605925:139,depend,dependencies,139,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600605925,1,['depend'],['dependencies']
Integrability,"> how we can address this with `dash`. Maybe, a more meaningful error message could be printed in thisroot.sh.; For example, check if BASH_ARGV[0] does not exist, then print ""Please change to another shell"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1088435461:70,message,message,70,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1088435461,1,['message'],['message']
Integrability,"> https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout; >; > [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0,; > dual-stack: false, private IPv4: true, private IPv6: false; >; > Successful IN2P3 LAPP_LAKE; >; >; > https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout; >; > [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); > [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username:; > atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info; > =&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.10.0, dual-stack: false,; > private IPv4: false, private IPv6: false; >; > Failed Tokyo:; >; >; > https://bigpanda.cern.ch//media/filebrowser/e051d153-88d6-4010-9bae-adee1dc89c07/panda/tarball_PandaJob_4925837464_TOKYO/payload.stdout; >; > [2020-12-18 18:28:04.321336 +0000][Debug ][XRootDTransport ] [; > lcg-se01.icepp.jp:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); >; > Failed BNL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/c62d241b-865d-4f6c-990f-83719303f272/panda/tarball_PandaJob_4925678778_ANALY_BNL_INTEL/payload.stdout; >; > [2020-12-18 10:01:07.354651 -0500][Debug ][XRootDTransport ] [; > dcgftp.usatlas.bnl.gov:1096 #0.0] kXR_protocol successful (type: ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:2497,protocol,protocol,2497,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,> i.e. we will have to find a way to force the use of TThreadedObject in MT cases. I am not sure what you mean :). We would be saying that if one want the internal implementation of MT histogram then you have to use this (or that) wrapper to enable it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902#issuecomment-325709362:231,wrap,wrapper,231,https://root.cern,https://github.com/root-project/root/pull/902#issuecomment-325709362,1,['wrap'],['wrapper']
Integrability,"> if I run with ctest --output-on-failure -R roottest-root-dataframe then tests pass. See my comment in the other issue: I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be roottest-root-dataframe-test_snapshot_manytasks. > I guess some test dependencies may be missing?. why would a missing dependency make the test _pass_ if it's run alone and fail if it's run together with others?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823937084:348,depend,dependencies,348,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823937084,2,['depend'],"['dependencies', 'dependency']"
Integrability,"> if someone will still try use pyroot_experimental => CMake should help user to switch to pyroot option? . Do you think this is really necessary? Isn't it enough to say clearly in the release notes that `pyroot_experimental` does not exist anymore, and that `pyroot_legacy` has been added? It seems to me that otherwise we are carrying old options that we do not use anymore. But I don't know what has been the policy for deprecated CMake options in the past. > As well do we need to provide message that if user uses pyroot option, CMake should notify that it is ex pyroot_experimental?. But PyROOT experimental will cease to exist as such, we will have PyROOT (which will be a new one) and then the legacy. Again I think that release notes can help explain this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5772#issuecomment-638171977:493,message,message,493,https://root.cern,https://github.com/root-project/root/pull/5772#issuecomment-638171977,1,['message'],['message']
Integrability,"> if the scenario in the commit message of https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a does not really need the early EndOfProcessCleanups. Unless something in the handling of the python handles changed since the commit, then it is needed. >Even then, it seemed weird that calling EndOfProcessCleanups twice, and once before the destructor of object at local scope is even called, was ""everything working as intended"". The ""once before ...."" is more or so because there is no 'better' place to call it. > the first call is creating a problem for RDF because of https://github.com/root-project/root/issues/10742 . Indeed (this is scenario similar to the (broken) ones I tried to describe). Getting the order of destruction right is very challenging (way more corner cases than you would expect or want) and unless there is a strong reason (and #10742 is not a good reason, that bug leads to a broken state which leads to broken behavior :) ), I would leave this code as-is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155768615:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155768615,1,['message'],['message']
Integrability,"> is that it doesn't really have a good use case. . I was thinking the case where indeed there is not enough 'memory' for IoURing (eg. the error message mentioned here) and where we want to 'stop' wasting time for the rest of the process by not even trying to use IoURing. > Client code can implement it themselves without access to RIoUring internals, because it's just a static bool checking whether the constructor threw. In this context, `RRawFile` is the only (likely) client code as RIoURing is in the internal namespace.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824274467:145,message,message,145,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824274467,1,['message'],['message']
Integrability,"> it's going to be a ""partial result"".; > If it's ""thread-local partial"" or ""global partial"" depends on what each action's. > I am afraid that this is going to be confusing/hard-to-explain .... On the other hand in some debugging scenario it might be helpful. I would just leave the explanation at: ""you get a partial analysis result (histogram filled with a part of the selected events, counter incremented only up to a certain point, mean over a subset of the events and so forth)"". I think this is enough to enjoy the feature and use it correctly. > only one thread calls the callbacks. > That's actually the behavior I had expected. . Fair enough. If no one has anything against it, I will change the behavior to have only one thread call the callback. @Axel-Naumann the event loop is still blocking so I'm not sure what users could do with the histograms we register with ROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331252952:93,depend,depends,93,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331252952,1,['depend'],['depends']
Integrability,> it's not just spurious error messages:. Then I am misremembering/missing something. Let me check a few things.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-1999599352:31,message,messages,31,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-1999599352,1,['message'],['messages']
Integrability,"> let see what if te test will pass. Yes. ; Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4151#issuecomment-524287296:165,message,message,165,https://root.cern,https://github.com/root-project/root/pull/4151#issuecomment-524287296,1,['message'],['message']
Integrability,> libNew depends on libCore. If you use LD_PRELOAD I am quite sure libCore will be loaded beforehand . Using libNew for libCore (and the MemCheck usage) is only one of the usage. Another one is the use of TMapFile and support for allocation within a shared memory block.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722#issuecomment-571305757:9,depend,depends,9,https://root.cern,https://github.com/root-project/root/pull/4722#issuecomment-571305757,1,['depend'],['depends']
Integrability,"> make Write use TTree's file if that was set in the constructor ... and doesn't contradict inheritance from TObject,. It does contradict the contracts from the inheritance. `TObject::Write` (as you quoted me saying ) ) is an explicitly request to write to the current directory. With the proposed change `TTree::Write` would behave unlike any other overload of `TObject::Write`. That said we agree that this is confusing and as you quoted Axel saying, we are change this radically in the API redesign (nicknamed ROOT v7) and in particular will remove all the implicit ownership sharing and attachment to files. We did not find a practical way to evolve the current interface in place without significant backward incompatibility. Note that there is ""already"" an equivalent to `Write(file)` which is `file->WriteObject(tree)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308#issuecomment-787188897:142,contract,contracts,142,https://root.cern,https://github.com/root-project/root/issues/7308#issuecomment-787188897,2,"['contract', 'interface']","['contracts', 'interface']"
Integrability,"> massimiliano: very nice. Maybe the commit messages can be improved in order to be more meaningful and in English?. Sure, I should have just modified them. ; I'm sorry, I didn't expect the previous commits to be visible in the PR, that's why some of them were written in Italian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3835#issuecomment-494029354:44,message,messages,44,https://root.cern,https://github.com/root-project/root/pull/3835#issuecomment-494029354,1,['message'],['messages']
Integrability,"> no backward compatibility expectations. In that case maybe it's best to get rid of `IsAvailable` in another PR. Even if everything works out, it still requires wrapping `RIoUring` with a try catch block every time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-823475448:162,wrap,wrapping,162,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-823475448,1,['wrap'],['wrapping']
Integrability,"> ok fair enough. This looks good then. Did you also test going through the `TMethodCall` interfaces?. I think `TMethodCall` uses the TClingCallFunc interface, and if I am not mistaken, it was addressed by this PR: https://github.com/root-project/root/pull/9244.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654#issuecomment-1511954479:90,interface,interfaces,90,https://root.cern,https://github.com/root-project/root/pull/12654#issuecomment-1511954479,2,['interface'],"['interface', 'interfaces']"
Integrability,> projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker. The Error message are intentional and it would be an improvement to add a check that they are present.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-640717480:83,message,message,83,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-640717480,1,['message'],['message']
Integrability,"> rebuild ROOT without explicit linking. And it looks like this path might be broken in itself (it seems that injecting '-Wl,--no-undefined' is done unconditionally ... and this requires the use of explicit linking)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394487572:110,inject,injecting,110,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394487572,1,['inject'],['injecting']
Integrability,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!. That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-806013491:366,depend,depends,366,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-806013491,2,"['depend', 'wrap']","['depends', 'wrapper']"
Integrability,"> see commit 0843036. You argue, that if compiler use includes from `${CMAKE_BINARY_DIR}/include` and one change original header file, cmake does not correctly re-compiles it. But this should never happen. cmake have to produce proper dependency - and it does it. Take an example. For each header there is copy rule:; ```; include/TError.h: /home/linev/git/webgui/core/base/inc/TError.h; copy header; ```; and every source file has proper list of dependencies:; ```; core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o: include/TError.h; ```; If I touch ` /home/linev/git/webgui/core/base/inc/TError.h`, include will be updated and TApplication.cxx.o will be compiled. Therefore use from `$ROOTSYS/include` is not a problem. And other your comment is very important:. > Unfortunately, we cannot completely remove ${CMAKE_BINARY_DIR}/include; > from the include path because generated headers like RConfigure.h and; > ROOT/RConfig.hxx exist only in that directory and are needed for; > compilation. While we cannot exclude `${CMAKE_BINARY_DIR}/include`, we should just correctly use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600605070:235,depend,dependency,235,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600605070,2,['depend'],"['dependencies', 'dependency']"
Integrability,"> sure @vgvassilev, do you mean a example file in the repo or just an example in the PR message?. It'd be best to have an example test with a fixture. Maybe convert an already existing test to a fixture if appropriate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8722#issuecomment-885097815:88,message,message,88,https://root.cern,https://github.com/root-project/root/pull/8722#issuecomment-885097815,1,['message'],['message']
Integrability,"> sure, it's running. but some questions:; > ; > * Shouldn't this `std.modulemap` be generated from the state of the STL include tree?. It should but there are headers which are not modules friendly and (at least in the old days) required quite a bit of manual work. > ; > * Let's say, even if ROOT will compile then with this approach, how does it help an experiment library that uses something from the STL that ROOT does not (by chance), isn't that file then missing from the `std.modulemap`, too?. Not really, the module `std.pcm` contains all of STL, however, some header files (which are implementation details such as the ones in `bits`) are re-exported from the submodules, that is, the submodule keeps a textual duplicate of the internal header. This in principle should only affect performance, however clang-9 has bugs when merging two definitions coming from the same textual header but re-exported by a different submodule. > ; > * Also, isn't this compiler version dependent?. STL is vendor dependent to the extent of the internal implemenation. The std.modulemap is the modulemap that ships with the gnu libstdc++. libc++ (used in osx) comes with its own modulemap which we happily find and use. The std.modulemap works (with minor tweaks from time to time) with libstdc++ from 5.1 to 11 (now you just enabled it for 12). In practice, it libstdc++ rarely removes headers and that's what we are exploiting ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113999465:979,depend,dependent,979,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113999465,2,['depend'],['dependent']
Integrability,"> that should not be shell dependent. The current build system using Makefile works fine with zsh. Agreed. We have to investigate how to change these lines in listlibs and makelibs:; ```; grep -s ""Collaboration diagram for"" $DOXYGEN_OUTPUT_DIRECTORY/html/class*.html | sed -e ""s/.html:.*$//"" | sed -e ""s/^.*html\/class//"" | xargs -P $NTHREADS -n 1 ./makelibs.sh; pid=$BASHPID # Find the libraries for the class $1, use process id $BASHPID; ```. so that it works in both shells at the same time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077392887:27,depend,dependent,27,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077392887,1,['depend'],['dependent']
Integrability,"> the APPLE system SDK has changed. @cxwx I agree. But I can't figure out why you can build successfully by turning off some options, but I can't. I also updated the command line tool to 14.3, did you?. > When using the non-homebrew cmake, make sure you removed the previous CMakeCache.txt. As a brutal measure you can temporarily rename/ops/homebrew; that should also move it out of the way... @Axel-Naumann Sure. I cleared all files when I built. It may work but I need to install the dependencies manually, which is also an annoying thing. ; And I do think there is something new happening for these building errors other than homebrew things. rootfit and glew errors are always there no matter if I use external dependencies or builtins. I have never encountered these errors before. >Can you explain why you don't want to use homebrew's build of ROOT? This seems much simpler than building ROOT yourself - unless you want to help develop ROOT, of course! ;-). It really isn't necessary, it's just a habit. In addition to macos, I also use root on various versions of linux servers. For the latter, in most cases, I can only compile it myself. And we have many codes that depend on root, so we hope that root's compilation options can be mastered by ourselves. As for contributing to the development of root, I hope that I can do it in the future, but at present more is to use root to complete physical analysis. Thank you for your invaluable contributions!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1523586633:487,depend,dependencies,487,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1523586633,3,['depend'],"['depend', 'dependencies']"
Integrability,"> the RNTuple not actually being merged ... . That is 100% correct, the actual merger is not implemented yet. I should have marked the PR `WIP` and made the RNTuple merger fail with an ""unimplemented error message"", but I wanted to highlight during execution that the attempted merger no longer segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-657719041:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-657719041,1,['message'],['message']
Integrability,"> the TApplication works but the TMapFile got the error message. That is the 'correct' behavior, `libNew` is indeed required for `TMapFile`. > Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. . Can you copy/paste the entire output in that case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1691941021:56,message,message,56,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1691941021,2,['message'],['message']
Integrability,"> the function TClass::GetClassInfo() is used routinely outside of the global interpreter lock, e.g. This is (of course) the intent. > because TObject::TestBit is not thread safe. Even-though this is accurate, it is unlikely to be the issue. At least the `kLoading` bit will only be set in the constructor and thus wont change after the user is able to use the `TClass` object. The other possibility is that some other bit setting leads to a weird interaction where the dirty memory is misread, but I also find it unlikely. Nonetheless, can you try the following patch to see if it helps:; ```; diff --git a/core/meta/inc/TClass.h b/core/meta/inc/TClass.h; index 2c94343377..c68eec6bbc 100644; --- a/core/meta/inc/TClass.h; +++ b/core/meta/inc/TClass.h; @@ -429,7 +429,7 @@ public:; ROOT::DesFunc_t GetDestructor() const;; ROOT::DelArrFunc_t GetDeleteArray() const;; ClassInfo_t *GetClassInfo() const {; - if (fCanLoadClassInfo && !TestBit(kLoading)); + if (fCanLoadClassInfo); LoadClassInfo();; return fClassInfo;; }; diff --git a/core/meta/src/TClass.cxx b/core/meta/src/TClass.cxx; index 06ef48c017..6e0475a4c1 100644; --- a/core/meta/src/TClass.cxx; +++ b/core/meta/src/TClass.cxx; @@ -5827,7 +5827,7 @@ void TClass::LoadClassInfo() const; ; // Return if another thread already loaded the info; // while we were waiting for the lock; - if (!fCanLoadClassInfo); + if (!fCanLoadClassInfo || TestBit(kLoading)); return;; ; bool autoParse = !gInterpreter->IsAutoParsingSuspended();; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15090#issuecomment-2027369620:46,rout,routinely,46,https://root.cern,https://github.com/root-project/root/issues/15090#issuecomment-2027369620,1,['rout'],['routinely']
Integrability,"> the idea here is to separate ""regular"" users just using the RNTuple API from ""power"" users . Note that this is the definition of the `Detail` namespace (which has almost the same backward compatibility constraints of the public interface). . The `Internal` namespace has interface that are **explicitly** only for internal purposes and (even if they are fully documented) have **explicitly** no guarantee on anything and the signature or even the semantic can change at any time without any warning whatsoever. Using those interface means that one takes on the burden of actively monitoring those changes (i.e. just 'us').",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786#issuecomment-2448415981:230,interface,interface,230,https://root.cern,https://github.com/root-project/root/pull/16786#issuecomment-2448415981,3,['interface'],['interface']
Integrability,> the preset actually needs to be done on a global level . The proposal was to wrap this global level (or an inner part there of). i.e. where as you currently have something 'like':; ```; part1();; export ROOT_SETUP_VAR=`eval something()`; part2();; ```; you could do:; ```; part1();; root_setup_wrapper part2(); ; ```; where the line `root_setup_wrapper` is designed to have the same net result of the last 2 lines of the original.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1687118274:79,wrap,wrap,79,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1687118274,1,['wrap'],['wrap']
Integrability,"> this settings is done on a per-tree basis, not global. . Fair enough. I have to read the example more carefully, the interface seems at very a bit awkward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-330230968:119,interface,interface,119,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-330230968,1,['interface'],['interface']
Integrability,> to add a non-const accessor to the TGraph interface. I don't understand what you are considering here?. TGraph was designed to own the data; changing this is likely not worth the cost as virtually all use cases will not make use of the shared ownership.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056920194:44,interface,interface,44,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056920194,1,['interface'],['interface']
Integrability,> ultimate goal -- make the build system independent on ROOTSYS/include. Are you really want it?; All ROOT-based code uses `ROOTSYS/include`. ; You want that ROOT itself does not work this way?. If yes - then this PR is just starting point. ; We cleanup many different unclear includes and then can start provide source dir as include path.; But this will require extra argument in `ROOT_STANDARD_LIBRARY_PACKAGE()` or some heuristic - one can generate list of source dirs based on `DEPENDENCIES` list,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600576745:483,DEPEND,DEPENDENCIES,483,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600576745,1,['DEPEND'],['DEPENDENCIES']
Integrability,> we introduce ROOT_CONFIGURE_LIBRARY_INCLUDES and then we use it in later commits. I always try to split large changes on smaller parts to be able search for errors. If we will made single commit and found error much later - it will be real challenge to fix it. `ROOT_CONFIGURE_LIBRARY_INCLUDES` is central part of this PR. I did all changes step by step and only at very end removed `${CMAKE_BUILD_DIR}/include` from list of includes. And by these steps I have to modify code which had many wrong (not mentioned in library dependencies) includes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5181#issuecomment-603205175:525,depend,dependencies,525,https://root.cern,https://github.com/root-project/root/pull/5181#issuecomment-603205175,1,['depend'],['dependencies']
Integrability,"> we should decide whether to actually support it in ROOT, which would mean support it with all the different remote protocols, or remove support with xrootd and decide to always throw an exception in case remote globbing is attempted. keeping the status quo is also an option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258#issuecomment-1638432425:117,protocol,protocols,117,https://root.cern,https://github.com/root-project/root/issues/13258#issuecomment-1638432425,1,['protocol'],['protocols']
Integrability,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-738841251:167,message,messages,167,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-738841251,1,['message'],['messages']
Integrability,"> where the configure/Makefile dependencies (e.g. autoconf) . I think you might have meant:. > where the configure/Makefile dependencies (e.g. autoconf input files) . As in the failing case `autoconf` is not installed and if it was installed and was causing the problem, having `configure/Makefile` appear older than the extraction time would only make thing worse, woudn't it. (i.e. the reason the new behavior fails is the content's is time stamp to some arbitrary time (close to extraction time) which does not respect (anymore) the internal ordering of the time stamp of the content. This sounds literally like a bug in `CMake`'s implementation of the new behavior (which is very desirable ... for the cases where the tar files is updated more than once per decades).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11742#issuecomment-1320353970:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/11742#issuecomment-1320353970,2,['depend'],['dependencies']
Integrability,"> 😕 I have no idea where the; > ; > ```; > ...; > 09:16:19 -- Found BLAS: /usr/lib/i386-linux-gnu/libblas.so ; > 09:16:19 CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1549 (message):; > 09:16:19 PyROOT2: Python2 development package not found and pyroot2 component; > 09:16:19 required (python2 executable: ); > 09:16:19 Call Stack (most recent call first):; > 09:16:19 CMakeLists.txt:205 (include); > ```; > ; > error is coming from. I really don't think that my changes had anything to do with that. 😕. No worries, it's something that was added yesterday evening. People are working on fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5889#issuecomment-645850853:187,message,message,187,https://root.cern,https://github.com/root-project/root/pull/5889#issuecomment-645850853,1,['message'],['message']
Integrability,">, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:629); ==270704== by 0x19820055: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== by 0x5E1AC45: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:74); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66CAF7E: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217); ==270704== by 0x61E2AF1: void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (stl_construct.h:109); ==270704== by 0x61E27D9: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:41285,depend,depends,41285,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['depend'],['depends']
Integrability,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running.; We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162878879:275,interface,interface,275,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162878879,1,['interface'],['interface']
Integrability,">> as TTree I/O does not provide bulks,; >; > What do you mean? There is a (non-zero copy but still low) bulk i/o interface in TTree already. Only for certain types and it's not exposed by TTreeReader.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517#issuecomment-1434436351:114,interface,interface,114,https://root.cern,https://github.com/root-project/root/pull/11517#issuecomment-1434436351,1,['interface'],['interface']
Integrability,">Though I do wonder how much I want to become involved in tweaking the ROOT configuration... There are many things that I'd love to change about the current ROOT CMake configuration (I find it pretty bad that target properties are used so sparsely in the configuration, using directory level configurations in most cases instead.), but I wouldn't have time to propose an update for those that I'd like... Hi Attila, thank you for the PR. Restructuring the build system is part of my work plan for the next year, so it's good to know that this is something that experiments will see as beneficial. I agree with you that we should be using target properties to propagate include directories and other settings that will allow dependent projects to simply add a `target_link_libraries()` call. This is one of the major motivations that we have for restructuring the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-351951349:724,depend,dependent,724,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-351951349,1,['depend'],['dependent']
Integrability,">or you'll have a leak.(edit: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. . The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791813093:30,depend,depending,30,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791813093,1,['depend'],['depending']
Integrability,"@AdvaitDhingra can you provide a complete reproducer? Here is what I get with your `CMakeLists.txt` alone:; ```; C:\Users\bellenot\rootdev\AdvaitDhingra>cmake .; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.17763.; -- The C compiler identification is MSVC 19.24.28319.0; -- The CXX compiler identification is MSVC 19.24.28319.0; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Error at C:/Users/bellenot/build/release/RootMacros.cmake:442 (message):; Cannot find header Event.h to generate dictionary G__Event for. Did you; forget to set the INCLUDE_DIRECTORIES property for the current directory?; Call Stack (most recent call first):; CMakeLists.txt:7 (ROOT_GENERATE_DICTIONARY). -- Configuring incomplete, errors occurred!; See also ""C:/Users/bellenot/rootdev/AdvaitDhingra/CMakeFiles/CMakeOutput.log"".; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982#issuecomment-825601966:1368,message,message,1368,https://root.cern,https://github.com/root-project/root/issues/7982#issuecomment-825601966,1,['message'],['message']
Integrability,"@Apteryks, I think I am lost. Are you building cling as a standalone project and you rely on the llvm-config rather than integrating it properly as an external project to llvm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563#issuecomment-2127807723:121,integrat,integrating,121,https://root.cern,https://github.com/root-project/root/pull/15563#issuecomment-2127807723,1,['integrat'],['integrating']
Integrability,"@ArifAhmed1995 We should use a combination of these two macros, depending on the case. If you just use `R__HAS_VC`, then it will be broken when Vc is enabled and VecCore disabled (Vc is used in ROOT independently of VecCore in the GenVector library). I am working to convert that library to VecCore, but in the mean time, Vc and VecCore are independent options that may be ON or OFF in any combination.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405817923:64,depend,depending,64,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405817923,1,['depend'],['depending']
Integrability,"@Axel-Naumann , looks like some latest development in v6.24 branch has fixed the hanging issue. I have tested https://github.com/root-project/root/commit/126c9c8627560f1169d60634aaf4d733568c8ccc (without #7767) and this time cmssw build was successful. We get runtime errors now, see the details here https://github.com/cms-sw/cmsdist/pull/6777#issuecomment-811478743 . You can find the crash log https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-a7de73/13897/runTheMatrix-results/135.4_ZEE_13+ZEEFS_13+HARVESTUP15FS+MINIAODMCUP15FS/step3_ZEE_13+ZEEFS_13+HARVESTUP15FS+MINIAODMCUP15FS.log. With your changes in #7767 ( on top of https://github.com/root-project/root/commit/126c9c8627560f1169d60634aaf4d733568c8ccc ) , things look in much better state. PR tests ( https://github.com/cms-sw/root/pull/153#issuecomment-811570082 ) show no build or run time errors. But we do see some comparison differences for our reconstruction code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811653152:455,integrat,integration,455,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811653152,1,['integrat'],['integration']
Integrability,"@Axel-Naumann , root v.6.24 branch is still broken for us. Testing root commit 0ae9f99 ( which is tip of v6.24 patches branch) generated multiple runtime errors [a] for us. @makortel @Dr15Jones is it something CMSSW related or root is causing this ?; Testing eda45838695204139e372d712b1d72c9d5370160 + https://github.com/cms-sw/root/pull/155/files looks good though [b] . Only difference is the addition commit https://github.com/root-project/root/commit/3480394c02a6335d271f95fcf160274811091155 , do you think 3480394c02a6335d271f95fcf160274811091155 might be causing these crashes?. [a] https://github.com/cms-sw/cmsdist/pull/6787#issuecomment-814302828; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-efd635/14020/addOnTests/pat1/cmsRun__data_cmsbld_jenkins_workspace_ib-run-pr-addon_CMSSW_11_3_ROOT624_X_2021-04-05-2300_src_PhysicsTools_PatAlgos_test_IntegrationTest_cfg.py.log. ```; cmsRun: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_11_3_ROOT624_X_2021-04-05-2300/src/FWCore/Concurrency/src/WaitingTaskList.cc:57: void edm::WaitingTaskList::reset(): Assertion `m_head == nullptr' failed. ```. [b] https://github.com/cms-sw/root/pull/155#issuecomment-812869144",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814343554:715,integrat,integration,715,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814343554,1,['integrat'],['integration']
Integrability,"@Axel-Naumann . You request significant changes in THttpServer interface.; I guess, it should be only done when dedicated ROOT7 classes will be written.; Otherwise we will brake backward compatibility with many user apps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1493#issuecomment-356314300:63,interface,interface,63,https://root.cern,https://github.com/root-project/root/pull/1493#issuecomment-356314300,1,['interface'],['interface']
Integrability,@Axel-Naumann : I have added a new commit fixing the compilation warnings seen when compiling the R interface and also when including at the ROOT prompt a file like TRInterface.h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9836#issuecomment-1033530878:100,interface,interface,100,https://root.cern,https://github.com/root-project/root/pull/9836#issuecomment-1033530878,1,['interface'],['interface']
Integrability,"@Axel-Naumann : I have to admit I have been stupid and my last posts have been wrong.; I did built root without builtin_llvm, so this could not have worked by designed.; I have rebuilt now with builtin_llvm and with your patch, and now I am only getting the warning message; ```; Error in <UnknownClass::InitInterpreter()>: LLVM SYMBOLS ARE EXPOSED TO CLING! This will cause problems; please hide them or dlopen() them after the call to TROOT::InitInterpreter()!; ```; But this is clear, since ROOT just checks for the presence of the LLVM symbols.; I am now rebuilding the ALICE software with this ROOT and checking whether the segfaults are gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-570267436:266,message,message,266,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-570267436,1,['message'],['message']
Integrability,@Axel-Naumann ; Disregard of moduls requirements - it is much clear now.; One do not have long lists of different dirs in CXX flags and in dependencies. If try to make opposite approach - when only source dirs are used - one will have super long list of all ROOT subdirs with includes. It is definitely a worse scenario.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600570372:139,depend,dependencies,139,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600570372,1,['depend'],['dependencies']
Integrability,"@Axel-Naumann ; ```cmake; if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6); # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking.; # We need it to check cpu flags in src/InitUtils.cxx; # Here, we add an explicit link instruction according to the workaround posted here:; # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899; target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc); endif(); ```; This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error ; ```sh; Failed to find Python module pytest: Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ModuleNotFoundError: No module named 'pytest'; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find py_pytest (missing: PY_PYTEST); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args); /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6855#issuecomment-732021171:1050,message,message,1050,https://root.cern,https://github.com/root-project/root/issues/6855#issuecomment-732021171,1,['message'],['message']
Integrability,"@Axel-Naumann @eguiraud One of my dataframe tests fails because of this:; ```; 27/155 Test #1500: roottest-root-dataframe-test_snapshot .........................***Failed 13.13 sec; ...; --- /srv/root/src/roottest/root/dataframe/test_snapshot.ref	Tue Mar 17 09:11:36 2020; +++ /srv/root/build/roottest/root/dataframe/test_snapshot.log	Fri Apr 23 09:56:40 2021; @@ -1,4 +1,5 @@; ; +cling::DynamicLibraryManager::loadLibrary():/srv/root/build/roottest/root/dataframe/par:cannotdynamicallyloadposition-independentexecutable; ----Nowwithatreeintherootdirectory; Branch:b1; Branch:b1_square. -- END OUTDIFF OUTPUT --; CMake Error at /srv/root/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1; ```; Somehow ROOT should address the case of binaries built with -fpie, as at least Gentoo has enabled that by default in GCC to improve security. Other distros may do the same in the future. See e.g. https://docs.fedoraproject.org/en-US/packaging-guidelines/#_pie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825474655:670,message,message,670,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825474655,1,['message'],['message']
Integrability,"@Axel-Naumann @pcanal . Just to have some performance numbers.; If I compare with root6.18.04, dependency tree in our small ROOT-based project reduced by 5%. If one considers only ROOT-related includes - it is about 10%. It is approx gain in compilation compared to previous releases. And with `less_includes` switch one could keep longer transition period to let users adjust their code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123#issuecomment-597731899:95,depend,dependency,95,https://root.cern,https://github.com/root-project/root/pull/5123#issuecomment-597731899,1,['depend'],['dependency']
Integrability,"@Axel-Naumann @pcanal @dpiparo ; What do you think about changing the behaviour so that only one thread calls the callbacks?; So users don't have to worry about concurrency which might be a useless complication.; For histograms we wouldn't want to do synchronized partial merges of the thread-local copies anyway, I guess...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331202048:251,synchroniz,synchronized,251,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331202048,1,['synchroniz'],['synchronized']
Integrability,@Axel-Naumann @pcanal Reworked a bit along the discussed lines (see updated PR message).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-565390285:79,message,message,79,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-565390285,1,['message'],['message']
Integrability,"@Axel-Naumann I've left a message on the root web channel [https://mattermost.web.cern.ch/root/channels/root-io](https://mattermost.web.cern.ch/root/channels/root-io), could you have a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1801068029:26,message,message,26,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1801068029,1,['message'],['message']
Integrability,"@Axel-Naumann It looks like http://root.cern.ch/bugs is an alias pointing to Jira. I am not sure where such aliases are defined. Is it possible to make it point to the ROOT Github Issues instead ?. Also I guess we should change ""http"" to ""https"" in that message (I can do it if you agree)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6540#issuecomment-702781325:254,message,message,254,https://root.cern,https://github.com/root-project/root/issues/6540#issuecomment-702781325,1,['message'],['message']
Integrability,@Axel-Naumann Please just fix the spelling in the first commit message before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3214#issuecomment-450497810:63,message,message,63,https://root.cern,https://github.com/root-project/root/pull/3214#issuecomment-450497810,1,['message'],['message']
Integrability,@Axel-Naumann Shouldn't matter (beside performance) at the moment if a module can't be loaded. So far we only print a message to inform that our loading setup is still wrong and then continue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1511#issuecomment-358260047:118,message,message,118,https://root.cern,https://github.com/root-project/root/pull/1511#issuecomment-358260047,1,['message'],['message']
Integrability,"@Axel-Naumann Thank you for looking at this! I thought of your approach also; using move semantics to transfer ownership means TGraph does not need to make a copy either. The idea on this branch is to demonstrate the potential for a significant performance speed-up in the constructor by not making a copy of the data. Additionally, sharing ownership with TGraph means a user can use the data for things apart from in a TGraph and/or update a TGraph after modifying the data. . In either approach, a user would still be able to use the existing TGraph constructors, however the ROOT file writing classes need an update to write `shared_ptr` or `vector` objects to a ROOT file. Thinking about this, another solution would be to use move semantics and to add a non-const accessor to the TGraph interface, which may work better when writing to a ROOT file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056881682:792,interface,interface,792,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056881682,1,['interface'],['interface']
Integrability,"@Axel-Naumann The ROOT-Fedora32/noimt failure is unrelated:; ```; 07:32:51 -- Failed to find Python module pytest: Traceback (most recent call last):; 07:32:51 File ""<string>"", line 1, in <module>; 07:32:51 ModuleNotFoundError: No module named 'pytest'; 07:32:51 CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:164 (message):; 07:32:51 Could NOT find py_pytest (missing: PY_PYTEST); 07:32:51 Call Stack (most recent call first):; 07:32:51 /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:445 (_FPHSA_FAILURE_MESSAGE); 07:32:51 /home/sftnight/build/workspace/root-pullrequests-build/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args); 07:32:51 /home/sftnight/build/workspace/root-pullrequests-build/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6952#issuecomment-746373723:344,message,message,344,https://root.cern,https://github.com/root-project/root/pull/6952#issuecomment-746373723,1,['message'],['message']
Integrability,"@Axel-Naumann You said this very nicely. That's basically my questions ;); Or also: How shall we treat such dependencies in tutorial consistently? In tests, we agreed on ""just import and fail"". Here, we still have the option. (Although, we still want to return a non-zero value for the test coverage. That's no question!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616461627:108,depend,dependencies,108,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616461627,1,['depend'],['dependencies']
Integrability,@Axel-Naumann is this because cling injects a `using namespace std`? https://godbolt.org/z/9KPxPcYEr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-856926520:36,inject,injects,36,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-856926520,1,['inject'],['injects']
Integrability,"@Axel-Naumann no problems. I'm working on it. I was using my branch on a personnal project. It seems to work but some hacking is needed to generate dictionnaries (STAGE1) :. ```cmake; root_generate_dictionary(G__Channel ""include/Channel.hpp"" LINKDEF ""include/ChannelLinkDef.hpp"" ${STAGE1}); add_library(Channel OBJECT ""src/Channel.cpp"" G__Channel.cxx); target_include_directories(Channel PUBLIC ""${YAODAQ_INCLUDE}"" PUBLIC ""include""); target_link_libraries(Channel PUBLIC ROOT::Core); set_target_properties(Channel PROPERTIES PUBLIC_HEADER ""include/Channel.hpp""); #install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libChannel_rdict.pcm TYPE BIN); install(TARGETS Channel); ```. More changes are needed on the cmake/modules/RootMacros.cmake for an easier integration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8941#issuecomment-1007501552:745,integrat,integration,745,https://root.cern,https://github.com/root-project/root/pull/8941#issuecomment-1007501552,1,['integrat'],['integration']
Integrability,"@Axel-Naumann ok thanks, I will merge this PR anyway since I am just modifying the string of a CMake message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5856#issuecomment-643234579:101,message,message,101,https://root.cern,https://github.com/root-project/root/pull/5856#issuecomment-643234579,1,['message'],['message']
Integrability,"@Axel-Naumann this was done during the huge upgrade PR to LLVM 13, do you remember which problem it was supposed to address? The commit message is somewhat scarce on details... (the `llvm-diff` workflow will fail, but I won't attempt to update the monorepo before Axel is done with syncing it to the current state in ROOT)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12454#issuecomment-1460159139:136,message,message,136,https://root.cern,https://github.com/root-project/root/pull/12454#issuecomment-1460159139,1,['message'],['message']
Integrability,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4098#issuecomment-512833634:27,integrat,integrated,27,https://root.cern,https://github.com/root-project/root/pull/4098#issuecomment-512833634,1,['integrat'],['integrated']
Integrability,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!).; The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8383#issuecomment-857732772:1077,interface,interface,1077,https://root.cern,https://github.com/root-project/root/pull/8383#issuecomment-857732772,1,['interface'],['interface']
Integrability,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out?. EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-640116570:925,interface,interface,925,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-640116570,1,['interface'],['interface']
Integrability,"@Axel-Naumann, not easily. This crash happens when clang tries to load the dependencies of MathCore, so no easy way to diagnose. Maybe if we iterate over all modules, read their dependencies and respect the loading of the dependencies in that order, we might be able to diagnose this. However, to go through the dependencies of a given PCM without loading it requires implementing some binary reading. I've seen such code, and it is doable but..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1034710024:75,depend,dependencies,75,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1034710024,4,['depend'],['dependencies']
Integrability,"@Axel-Naumann. I implement several changes you requested:; - Use R__ERROR_HERE(""WebDisplay""); - Move comments to implementation; - use std::vector as container (is it ok for potentially large queues of std::string?); - Hide THttpWSEngine from end-user; this is interface change; add to docu; - Few function signature changes in THttpWSEngine. I propose to merge this PR - it was rather bugfix PR and not redesign of THttpServer.; Currently I want rather to continue with TWebDisplay and clients implementations",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1493#issuecomment-356378851:261,interface,interface,261,https://root.cern,https://github.com/root-project/root/pull/1493#issuecomment-356378851,1,['interface'],['interface']
Integrability,"@DenizCiger @Axel-Naumann , this added dependency on `#!/usr/bin/python` which on rhel8/9 is not available. Can this be changed to either `#!/usr/bin/python3` or `#!/usr/bin/env python` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13354#issuecomment-1668496131:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/13354#issuecomment-1668496131,1,['depend'],['dependency']
Integrability,"@Falcort ; One should decide on the server side if run or not run macro.; List of extensions you provide can be incomplete.; One can send ""execution flag"" with `DBLCLK:` message and let process it on server side",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4917#issuecomment-581446290:170,message,message,170,https://root.cern,https://github.com/root-project/root/pull/4917#issuecomment-581446290,1,['message'],['message']
Integrability,@Harshalzzzzzzz wonderful! Can you as well add TIMEOUT to other dependencies please here: https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7141#issuecomment-786612898:64,depend,dependencies,64,https://root.cern,https://github.com/root-project/root/pull/7141#issuecomment-786612898,1,['depend'],['dependencies']
Integrability,"@LadaOndris : So that's a SWAN issue in that case. I am not a SWAN expert. . In SWAN, Is there any log window showing the ROOT error messages?. @etejedor : to you have an idea ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438501382:133,message,messages,133,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438501382,1,['message'],['messages']
Integrability,"@LadaOndris I see you are using SWAN may be it swallowed the error message? do you get a message if you use the normal ROOT?. I tried to run your script but it gives me:. ```; % python3 nan.py ; Traceback (most recent call last):; File ""/Users/couet/roottest/nan.py"", line 8, in <module>; np.arange(num_values, dtype='float'),; NameError: name 'np' is not defined. ```. the script is:. ### nan.py. ```; import ROOT; canvas = ROOT.TCanvas(f""test_canvas"", ""title"", 400, 400); canvas.Draw(); canvas.cd(). num_values = 5; g = ROOT.TGraph(num_values,; np.arange(num_values, dtype='float'),; np.full(num_values, fill_value=np.nan)); g.SetMarkerSize(2); g.SetMarkerStyle(2); g.DrawClone('AP'); ```; What is `np`? can you provide a running script?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438421583:67,message,message,67,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438421583,2,['message'],['message']
Integrability,"@MarkusFrankATcernch ; it's all clear now, nothing is missing. with the ROOT changes should be integrating fine.; thank you :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8955#issuecomment-915152676:95,integrat,integrating,95,https://root.cern,https://github.com/root-project/root/pull/8955#issuecomment-915152676,1,['integrat'],['integrating']
Integrability,"@MarkusFrankATcernch may describe in more detail different use cases for using G4 units with TGeo, he is one of the main authors of this. The main reason was to have the material properties calculated in the same way as Geant4, and also to be able to have a compatible internal representation when coming from GDML without having to go through conversions. . The default units had to be changed back to being ROOT ones in the master, since building geometry (materials) assumes ROOT units even if the default is set to Geant4 ones. The interface for changing the default units was intended to be allowed by explicit unlocking and then locking, to avoid user mistakes. I am aware that the support for units is far from be perfect, it was done like this to accommodate new requirements while kepping the backward compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8695#issuecomment-937548420:536,interface,interface,536,https://root.cern,https://github.com/root-project/root/issues/8695#issuecomment-937548420,1,['interface'],['interface']
Integrability,"@MarkusFrankATcernch this looks quite good, but ideally, we need the macro to call both the ""G4"" and ""ROOT"" in the same session versions and compare them between each other, not only versus the PDG reference. Is it easy to do that? When this works properly, we merge this PR and add the macro as a separate PR, to be integrated with the CI/nightlies. We can do this next Monday when I'm back at work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1197998623:317,integrat,integrated,317,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1197998623,1,['integrat'],['integrated']
Integrability,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7413#issuecomment-793876470:177,depend,dependencies,177,https://root.cern,https://github.com/root-project/root/pull/7413#issuecomment-793876470,2,['depend'],['dependencies']
Integrability,@Teemperor Because post script doesn't work when the list of pcms change depending on which -D option that you give to cmake,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3228#issuecomment-452692371:73,depend,depending,73,https://root.cern,https://github.com/root-project/root/pull/3228#issuecomment-452692371,1,['depend'],['depending']
Integrability,"@alja @osschar . Grate! Now it compiles!. Last question. Why you include `TGLSdfFontMaker` into `libGL`? It creates dependency of `libGL` from `libAfterImage` and indirectly from many libs like `libpng`, `libjpeg`, `libungif`. This can be dangerous - if somebody already uses ROOT and link against `libGL`. . Maybe one just can create special small library within `REve` folder? You anyway using `ProcessLine` and therefore independent from where class comes from.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252107168:116,depend,dependency,116,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252107168,1,['depend'],['dependency']
Integrability,"@alja Should I merge it?; The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4030#issuecomment-509813570:133,interface,interfaces,133,https://root.cern,https://github.com/root-project/root/pull/4030#issuecomment-509813570,1,['interface'],['interfaces']
Integrability,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1403728768:151,depend,dependency,151,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768,1,['depend'],['dependency']
Integrability,"@amadio . I saw this warning message and partially fix it here: https://github.com/root-project/root/pull/1852; Problem was warning suppression itself, which does not work with gcc 4.x.; Warning should disappear once #1852 is merged",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1836#issuecomment-381933346:29,message,message,29,https://root.cern,https://github.com/root-project/root/pull/1836#issuecomment-381933346,1,['message'],['message']
Integrability,@amadio @oshadura could we expect 6-22 and master to be updated for integrating with 2021.1.1 tbb ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-760148495:68,integrat,integrating,68,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-760148495,1,['integrat'],['integrating']
Integrability,@amadio As far as I can tell that is a build dependency problem. G__Core.cxx should no longer contain the definition of TDirectory::Streamer (i.e. it should have been regenerated but it looks like it did not).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1351#issuecomment-347185832:45,depend,dependency,45,https://root.cern,https://github.com/root-project/root/pull/1351#issuecomment-347185832,1,['depend'],['dependency']
Integrability,@amadio Should we run something like https://github.com/maximuska/depslint to find more of those missing dependencies?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1374#issuecomment-347598736:105,depend,dependencies,105,https://root.cern,https://github.com/root-project/root/pull/1374#issuecomment-347598736,1,['depend'],['dependencies']
Integrability,@amadio This is consistent with a missing (direct or indirect) dependency of G__Core.cxx on LinkDef1.h in the CMakeList.txt and/or a problem with generating the .d file for G__Core.cxx ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1351#issuecomment-347190993:63,depend,dependency,63,https://root.cern,https://github.com/root-project/root/pull/1351#issuecomment-347190993,1,['depend'],['dependency']
Integrability,"@amadio ah yes I remember those. look at line 242 of the cxx file. If the calculation of negative log likelihood failes, because the walk got out of bounds it sets the value very high so the algorithm turns away from this point. Minuit needed this error but in a MCMC minimizer it does not matter if it gets out of bounds. I forgot about that problem, the error messages are unnecessary. Thats why they are turned off at line 243. Sorry just turning off the error message was not a good idea, beginners error. Do you have a better idea how to solve that problem?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349219350:362,message,messages,362,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349219350,2,['message'],"['message', 'messages']"
Integrability,"@amadio let me try alternatives and lets discuss during this week what I would like to have and how we can do it. >>>Adding such a wrapper macro with a different name is a no go for me because it won't prevent people from using plain add_subdirectory() which would lead to breakage. This also goes in the opposite direction than we want to go for using modern CMake in ROOT as discussed in the workshop. I understand your concern about add_subdirectory and people using it, but I dont agree with you that it is opposite direction than using modern CMake. It solved different problem introduced by huge amounts of options and switchers... About ROOT_STANDARD_LIBRARY_PACKAGE(), of course we will modify ROOT_STANDARD_LIBRARY_PACKAGE(), there will be a lot of work there, but still there are not enough handles to implement what I would like to have.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-424307384:131,wrap,wrapper,131,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-424307384,1,['wrap'],['wrapper']
Integrability,"@amadio sorry, I lost your message and yes, I tested it works fine (even in case of root7)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3409#issuecomment-482631192:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/3409#issuecomment-482631192,1,['message'],['message']
Integrability,"@amadio thanks for the comments. How this solves the CMS problem is illustrated by the example callback I included. That wraps the merge operation with an `std::promise()`, does a `task_arena::enqueue()` with that functor to the existing CMS framework TBB task arena, and then waits for the promise to complete. `task_arena::enqueue()` guarantees that the functor is executed by an existing member of the arena's thread pool. If the calling thread is not part of the arena, it cannot join it, so it cannot execute the functor itself. AFAICT, `task_arena::enqueue()` is the only interface that guarantees this; with other interfaces like `task_arena::execute()` or `task_group::run()`, the calling thread can temporarily join the arena, which would violate our framework's scheduling assumptions. wrt the interface change, my previous version added a second callback instead of modifying the existing one. From a functionality standpoint, the wrapper callback is a superset of the completion callback, but I do see the virtue of keeping the completion callback safe and having a separate callback for the riskier operation of wrapping the merge. I can certainly make that change if that would be more acceptable. I initially tried to do this with the `TTaskGroup`; unfortunately, with a `TTaskGroup` the calling thread can end up temporarily joining the task arena, which wasn't acceptable to us. It seems we have to use `task_arena::execute()`, which requires access to the framework task arena, which is how I ended using a callback for this. Let me know if separating the merge wrapper into a second callback would be acceptable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706#issuecomment-371486460:121,wrap,wraps,121,https://root.cern,https://github.com/root-project/root/pull/1706#issuecomment-371486460,7,"['interface', 'wrap']","['interface', 'interfaces', 'wrapper', 'wrapping', 'wraps']"
Integrability,"@amadio, I thought so at the beginning, but targets are not visible to roottest.git, so putting ""DEPENDS hadd root"" doesn't work. Example of broken build is here in PR #274. If to check the same tests with cherry-picked fix proposed here they work. The reason why I need this is that I moved some tests to CMake, so data generated for tests now needs to be generated on compile time of ROOT(other way around will be to add a test that will generate these data, but I believe it wrong way to go since it doesn't increase a test coverage). The problem here is more generic, that I hope could be solved with fixture option for ctests(https://cmake.org/cmake/help/v3.7/prop_test/FIXTURES_SETUP.html)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279#issuecomment-455464750:97,DEPEND,DEPENDS,97,https://root.cern,https://github.com/root-project/root/pull/3279#issuecomment-455464750,1,['DEPEND'],['DEPENDS']
Integrability,"@amadio, one could easily edit the content the squashed messages upon merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317763378:56,message,messages,56,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317763378,1,['message'],['messages']
Integrability,"@amete Eventually we settled on a slightly different interface but it still provides equivalent functionality. Instead of `Clone()` returning a new RValue, you would now do. ```; RValue b = a;; a.EmplaceNew();; ```. Of course, if you don't need the RValue copy, you can also just call `EmplaceNew()` on the existing RValue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14461#issuecomment-1915554216:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/14461#issuecomment-1915554216,1,['interface'],['interface']
Integrability,"@andresailer reports; ```; ...; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h; requested to autoload type IOIMPL::TrackerPulseIOImpl; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h; requested to autoload type IOIMPL::TrackerRawDataIOImpl; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; Missing FileEntry for include/IOIMPL/VertexIOImpl.h; requested to autoload type IOIMPL::VertexIOImpl; Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload""; ...; Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; ```; and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11921#issuecomment-1357852969:847,rout,routine,847,https://root.cern,https://github.com/root-project/root/pull/11921#issuecomment-1357852969,3,['rout'],['routine']
Integrability,"@axel it is inside code, in comment, where I should add it as well, in the CMake message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5238#issuecomment-605622390:81,message,message,81,https://root.cern,https://github.com/root-project/root/pull/5238#issuecomment-605622390,1,['message'],['message']
Integrability,"@bbockelm @pcanal @dpiparo . Here is the new imt unzipping basket with TTaskGroup interface. Comparing to #785 , I noticed there are still 3%(in Real Time) ~ 5%(in CPU Time) performance drops in new implementation. The degradation is caused by tbb function:. tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(long&). I suspect the reason is because #785 in the following function:. https://github.com/zzxuanyuan/root/blob/15cceff19b48dfe4a4b0c69c1ec07ea75bd1ccb5/tree/tree/src/TTreeCacheUnzip.cxx#L708. CreateTasks() explicitly creates 2 tasks (empty_task and MappingTask; and set_ref_count(2) means 2 tasks in total). The scheduler might make a better decision here since it knows there will be only one task except empty_task running in future. On the other hand, TTaskGroup uses tbb::task_group which calls the following function:. https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L108. task_group_base() also first creates a empty_task. However, it only creates 1 task(itself) by setting reference count as 1 (set_ref_count(1)). When it invoke another task by calling . https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L103. allocate_additional_child() will create a new task as child and increment reference count by 1. I guess accumulating tasks on-the-fly might degrade the performance since the tbb scheduler could spend more time on finding tasks to work on. In a short, I think explicitly defining the total number of tasks and task graph should have better performance (more efficient for scheduler I guess) than adding more tasks to task_group as the program runs. There are two alternative approaches that might improve the performance. ; 1. Since we have already know we will only have one task (except empty_task) to add into the task_group, we could revise TTaskGroup interface and notify it what task is going to run in advance.; 2. We coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:82,interface,interface,82,https://root.cern,https://github.com/root-project/root/pull/1010,1,['interface'],['interface']
Integrability,"@bbockelm This test is failing because of your change in the way TBufferFile reallocation functions are passed— you added the ability to pass a pointer to state so that the reallocation function can effectively have an argument. Perhaps this interface could be made backward-compatible by naming the new function pointer type the same as the old one (i.e. without the word ""state"" in its typedef name) and the arguments could take `nullptr` as a default argument for the state. That way, the test could pass without modification. Otherwise, it could pass by a minor change in the test. Then we'd find out what the next bug is. If there is one, of course. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943#issuecomment-329146428:242,interface,interface,242,https://root.cern,https://github.com/root-project/root/pull/943#issuecomment-329146428,1,['interface'],['interface']
Integrability,"@bellenot Sorry for late reply. I was working on something else yesterday and the day before. I'm building the Nix expression for the solution now. The result will come up later. (Since `/nix/store/` is read-only, a wrapper in Nix expression is needed to apply the changes on `system.rootrc`.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213#issuecomment-781334741:216,wrap,wrapper,216,https://root.cern,https://github.com/root-project/root/issues/7213#issuecomment-781334741,1,['wrap'],['wrapper']
Integrability,"@bellenot Sorry, I accidentally added a 1 to the link, fixed in above message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10759#issuecomment-1186951653:70,message,message,70,https://root.cern,https://github.com/root-project/root/issues/10759#issuecomment-1186951653,1,['message'],['message']
Integrability,"@bellenot The new test code contains an include path injection which on Windows ends up being:; ```; ... root.exe ... -e '.include C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/include' ....; ```; which comes from the CMake list:; ```; set(RootExternalIncludes -e "".include ${CMAKE_CURRENT_SOURCE_DIR}/mwe/include""); ```; but it does not work on Windows (it works on Linux); ```; rocessing C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/combined.cxx+(0)...; Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/workspace/root-pullrequests-build/build/roottest/root/io/issue-7754/combined_cxx.dll; In file included from input_line_9:6:; In file included from C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/combined.cxx:2:; C:/build/workspace/root-pullrequests-build/roottest/root/io/issue-7754/mwe/src/SpectrometerChannelID.cc:7:10: fatal error: 'SpectrometerChannelID.hh' file not found; #include ""SpectrometerChannelID.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9585#issuecomment-1014551071:53,inject,injection,53,https://root.cern,https://github.com/root-project/root/pull/9585#issuecomment-1014551071,1,['inject'],['injection']
Integrability,"@bellenot You see error messages in the begin? It is exactly this.; As I understand, @Axel-Naumann create list of supported options and all others disabled by default.; One need to add `builtin_civetweb` into such list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14194#issuecomment-1846859708:24,message,messages,24,https://root.cern,https://github.com/root-project/root/pull/14194#issuecomment-1846859708,1,['message'],['messages']
Integrability,@bellenot let's add please a note in the commit message why it was turned off? (so we can remember reason),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7324#issuecomment-788701660:48,message,message,48,https://root.cern,https://github.com/root-project/root/pull/7324#issuecomment-788701660,1,['message'],['message']
Integrability,"@bellenot, . Bertrand,; Have you an idea that happens with the build system?; May be one should restart build?; Only first two messages - warning on MacOS and error on Windows are relevant and I fix them",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1371#issuecomment-347207861:127,message,messages,127,https://root.cern,https://github.com/root-project/root/pull/1371#issuecomment-347207861,1,['message'],['messages']
Integrability,"@beniz, could you rebase again. We have better build infrastructure now and we could speed up the integration process.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-292242620:98,integrat,integration,98,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-292242620,1,['integrat'],['integration']
Integrability,"@beniz, sorry for starting this after a long time, but I think it is good to have this library integrated in ROOT. ; I see now cameos can early build with cmake and this will make it easier to also download and install the library automatically. ; I will try to fix issues from the ROOT side myself, but feel free to comment and correct me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7044#issuecomment-760951435:95,integrat,integrated,95,https://root.cern,https://github.com/root-project/root/pull/7044#issuecomment-760951435,1,['integrat'],['integrated']
Integrability,"@bluehood , thanks a lot for investing time in the comments. They are not pedantic and more than 1 pair of eyes is needed for something like VecOps to be ""right"" both in terms of implementation and, above all, interface.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1613#issuecomment-365638608:210,interface,interface,210,https://root.cern,https://github.com/root-project/root/pull/1613#issuecomment-365638608,1,['interface'],['interface']
Integrability,"@bluehood Ok, good point. I will amend the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1896#issuecomment-383365428:50,message,message,50,https://root.cern,https://github.com/root-project/root/pull/1896#issuecomment-383365428,1,['message'],['message']
Integrability,"@cgtully can you open a new issue for the ""failed to pythonize"" message, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-718561099:64,message,message,64,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-718561099,1,['message'],['message']
Integrability,"@chrisburr, would it be okay to ship the next ROOT release requiring llvm to be built with `rtti` enabled?. > @vgvassilev the bigger question in this context is probably if we should merge `core/metacling/src/TCling.cxx` and `core/metacling/src/TClingCallbacks.cxx` or at least rethink their separation... I believe this story has not ended. I suspect that the package maintainers will start complaining about that switch (has not yet happened) and we will have to revert again to no-rtti environment... . Perhaps the utopic model would be to use the `llvm-c` interfaces when communicating with llvm (or at least crossing the rtti/no-rtti worlds). The separation between `TCling` and `TClingCallbacks` and Cling standalone in software engineering terms does not really exist. The motivation for `TClingCallbacks` was to keep cling clean from ROOT-specific features that might make its potential upstreaming harder. I am not sure how we can improve the current setup but if you have particular ideas I am happy to participate discussing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11147#issuecomment-1208497076:560,interface,interfaces,560,https://root.cern,https://github.com/root-project/root/pull/11147#issuecomment-1208497076,1,['interface'],['interfaces']
Integrability,"@couet Sorry, but how do you set up a development environment to do the tests?. I try to set up a Debian environment (from a VM) for build but have encountered dependency conflict. Is there something like a CMSENV to use on LXPLUS? Or should I create a CentOS VM and try again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1074734670:160,depend,dependency,160,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1074734670,1,['depend'],['dependency']
Integrability,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes.; For example in math/mathcore/inc/Math/Integrator.h we have : ; ```; /**; @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore; @ingroup MathMore. */; ``` ; It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-801233501:182,Integrat,Integrator,182,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-801233501,1,['Integrat'],['Integrator']
Integrability,"@couet; I guess I found the issue. Got inspiration by https://github.com/doxygen/doxygen/issues/5937. It seems that CASE_SENSE_NAMES should be set explicitly, as now it's taking a default value that is system-dependent. It seems that default value in Linux is YES, and in macOS is NO. Can you try running pulling the latest commit to verify ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081241205:209,depend,dependent,209,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081241205,1,['depend'],['dependent']
Integrability,@dan131riley - is there a similar interface for zlib?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/194#issuecomment-232393033:34,interface,interface,34,https://root.cern,https://github.com/root-project/root/pull/194#issuecomment-232393033,1,['interface'],['interface']
Integrability,"@daritter Following a series of changes almost completed by https://github.com/root-project/root/pull/10230 (and/or the v6.26 version mentioned above). With those changes a lot of warning related to pairs have been removed. Also unless there is an explicitly dictionary, the (platform dependent) base class maybe not be listed. In particular the original complaints:. ```; After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries; ```. is addressed. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<vector<Belle2::TOPPDFCollection::Gaussian>,512> >::second from type: array<vector<Belle2::TOPPDFCollection::Gaussian>,512> to type: vector<Belle2::TOPPDFCollection::Gaussian>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<float,512> >::second from type: array<float,512> to type: array<float,512>, skip element; ```; Those sounds strange as they ""seem"" the same type. To investigate one would need to look at the contains of the StreamerInfo for the pair (the actual numerical type of the element might be different).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-1109129065:285,depend,dependent,285,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-1109129065,1,['depend'],['dependent']
Integrability,@davidlange6 may want his change to be integrated tonight first and maybe the next round?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-621303526:39,integrat,integrated,39,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-621303526,1,['integrat'],['integrated']
Integrability,"@dpiparo , thanks for the backport. CMSSW tests via https://github.com/cms-sw/root/pull/195 for this change look good. I just have opened https://github.com/cms-sw/cmsdist/pull/8949 to integrate latest v6-30-00-patches changes in to CMSSW 14.0.X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14358#issuecomment-1896205278:185,integrat,integrate,185,https://root.cern,https://github.com/root-project/root/pull/14358#issuecomment-1896205278,1,['integrat'],['integrate']
Integrability,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304902488:72,message,message,72,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304902488,2,['message'],['message']
Integrability,"@dpiparo . > Doxygen doc can be embedded from the start (it is in some places and it is not in others). ; > In addition this is the opportunity to comment a backend properly. Yes. Some of code was copy-pasted before Olivier redo doxygen formatting.; Now we need to do the same with that code. > The code can be clang-formatted. If it really needed - I can do this. I prefer to use it only for new commits. > The copyright statemets can be made uniform. That is best example? In ROOT sources there are many variants. > The guards ... are useless. Ok. This can be removed. > ClassDef and ClassImp are needed. I have them for TObject-derived classes. Do we need them for others?. > The 70 commits are the right granularity (is the code compiling for each one of them?). Yes, all commits can be compiled - when rallback to appropriate date all other used ROOT classes. > We need all these dictionaries and with streamers:. Yes, these are objects exchanged between server and clients. I uses JSON conversion for them. > The globbing of headers in the CMakeLists can be replaced by the explicit list . Ok. I will check which headers are really needed. > The code ... needs yet another read . This is wrapper for TVirtualX - some objects painters (including TCanvas) doing sometime direct X11 calls. Some of them I block, another map into SVG. > I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today. Most of the comments can be resolved by Olivier @couet We will discuss tomorrow how to proceed . > that was fast. It is result of approx 18 months of work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2780#issuecomment-428706018:1194,wrap,wrapper,1194,https://root.cern,https://github.com/root-project/root/pull/2780#issuecomment-428706018,1,['wrap'],['wrapper']
Integrability,"@dpiparo : I have a question concerning clang-formatting of ""external"" files: In this PR I am including several headers coming from elsewhere (mentioned in the commit message and README will be added). I think, in principle, they should stay as they are and not be clang-formatted. Is there any policy regarding this? (We could add a .clang-format-ignore file or something related).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442#issuecomment-2360761858:167,message,message,167,https://root.cern,https://github.com/root-project/root/pull/16442#issuecomment-2360761858,1,['message'],['message']
Integrability,@dpiparo @amadio thank you very much ! I just recompiled with both options..; No error message anymore!!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1932209776:87,message,message,87,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1932209776,1,['message'],['message']
Integrability,"@dpiparo @bbockelm ,. Hi Danilo,. Based on current cache replacement policy, the cache will be invalidated (set fIsTransferred to kFALSE) immediately once the first event miss occurs. In my current implementation, each task monitors fIsTransferred and return immediately without doing actual unzipping work. But we still need to create tasks corresponding to the number of baskets. I am wondering if we should add task_group.cancel() function into TTaskGroup interface? In that case, the main thread only needs to cancel all tasks once the cache is invalid. . With event simulation benchmark, I did not see too much difference between task_group wait and cancel. But I guess it could be more efficient once the number of baskets in cache buffer becomes larger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-335903089:459,interface,interface,459,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-335903089,1,['interface'],['interface']
Integrability,"@dpiparo @bluehood From my side this is ready for review. I think it makes sense to have remote reading of files in a possible follow-up PR. Please let me know if you think it makes sense to add an integration test to roottest. In this case, how would I deal with the fact that this datasource depends on the sqlite availability?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322#issuecomment-406598298:198,integrat,integration,198,https://root.cern,https://github.com/root-project/root/pull/2322#issuecomment-406598298,2,"['depend', 'integrat']","['depends', 'integration']"
Integrability,"@dpiparo @bluehood To summarize: We need to agree on the interface of `Take[Indices,First,Last]` vs `Take` with overloads and figuring out the asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2351#issuecomment-409117535:57,interface,interface,57,https://root.cern,https://github.com/root-project/root/pull/2351#issuecomment-409117535,1,['interface'],['interface']
Integrability,"@dpiparo A yes sorry, I did not pay enough attention to the Jenkins message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/421#issuecomment-286747743:68,message,message,68,https://root.cern,https://github.com/root-project/root/pull/421#issuecomment-286747743,1,['message'],['message']
Integrability,@dpiparo I reworded the commit messages to include the CIDs of the issues,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1081#issuecomment-333298759:31,message,messages,31,https://root.cern,https://github.com/root-project/root/pull/1081#issuecomment-333298759,1,['message'],['messages']
Integrability,@dpiparo I think @stwunsch still needs some time to address our comments. Also this depends on #1872,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1889#issuecomment-383558749:84,depend,depends,84,https://root.cern,https://github.com/root-project/root/pull/1889#issuecomment-383558749,1,['depend'],['depends']
Integrability,"@dpiparo, please wait to merge. I am making changes to the documentation and commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/587#issuecomment-303094019:84,message,message,84,https://root.cern,https://github.com/root-project/root/pull/587#issuecomment-303094019,1,['message'],['message']
Integrability,"@dudarboh the friend tree has less entries than the main tree. I think that's what's causing the problem. We should definitely have better diagnostics for this (i.e. give you a clear error message rather than the error you see), but this is not a supported usecase. . I could not reproduce the issue when truncating the tree in `test_default.root` to the same amount of entries as the friend. Can you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106#issuecomment-944297935:189,message,message,189,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944297935,1,['message'],['message']
Integrability,"@egpbos Given my [comment](https://github.com/root-project/root/pull/8385#issuecomment-870570029) in your previous merge request, I am quite disappointed to learn that this has been merged as enabled by default when it depends on a yet unreleased version of ZeroMQ. This, for example, has caused failures in pretty much all the LCG builds today: https://cdash.cern.ch/index.php?project=LCGSoft&date=2021-11-29. Please disable `roofit_multiprocess` by default and re-enable it only when a *released version* of ZeroMQ has the functionality you need, adding the proper version in your call to `find_package()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981617370:219,depend,depends,219,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981617370,1,['depend'],['depends']
Integrability,"@egpbos Hi, I just landed here while trying to catch up with messages on Mattermost's Pull Requests channel... My advice is to write the builtin option last, after all work on adding roofitZMQ is done. First, please provide just an implementation using only an external version of ZeroMQ. Then, after that is done, you can add a separate commit that adds the builtin option for ZeroMQ. The builtin option should be optional and never enabled by default (See ROOT-9385 in Jira for more info). Building rootfitZMQ should not be controlled by the option that enables the builtin, but by its own option, which should respect the option `fail-on-missing` if that is enabled and ZeroMQ is not found in the system. I will review the changes again once you mark this PR as ready (just add me as a reviewer when done). I also recommend to clean up the git history a bit by rebasing and making each commit work on its own. For example, if you fixed an earlier commit with a newer one, I recommend using `git commit --fixup=$hash`, then `git rebase -i` to combine the changes into the commit that was broken rather than keeping the fix in a separate commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870358974:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870358974,1,['message'],['messages']
Integrability,"@eguiraud , cmssw test passed, so feel free to integrate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8449#issuecomment-863522919:47,integrat,integrate,47,https://root.cern,https://github.com/root-project/root/pull/8449#issuecomment-863522919,1,['integrat'],['integrate']
Integrability,"@eguiraud As long as we don't leak the interface to users, I guess TBB is fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715#issuecomment-886516512:39,interface,interface,39,https://root.cern,https://github.com/root-project/root/pull/8715#issuecomment-886516512,1,['interface'],['interface']
Integrability,@eguiraud I've briefly experimented with using keywords in the PR body/title to implement this behavior. The problem is that you have to close and re-open the issue to trigger a new build. Clicking 're-run jobs' unintuitively starts a job using the old PR title/body. Would using comments to start a new build from scratch be a better interface? (Something like commenting `/build`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12302#issuecomment-1433207672:335,interface,interface,335,https://root.cern,https://github.com/root-project/root/issues/12302#issuecomment-1433207672,1,['interface'],['interface']
Integrability,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7500#issuecomment-802317211:578,wrap,wraps,578,https://root.cern,https://github.com/root-project/root/issues/7500#issuecomment-802317211,1,['wrap'],['wraps']
Integrability,"@eguiraud build green, can you edit please commit message and it is ready to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5405#issuecomment-617052290:50,message,message,50,https://root.cern,https://github.com/root-project/root/pull/5405#issuecomment-617052290,1,['message'],['message']
Integrability,@eguiraud rebased and integrated the requested changes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7562#issuecomment-819397274:22,integrat,integrated,22,https://root.cern,https://github.com/root-project/root/pull/7562#issuecomment-819397274,1,['integrat'],['integrated']
Integrability,@ellert can you please fix commit message and it is ready to go?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5944#issuecomment-671269772:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/5944#issuecomment-671269772,1,['message'],['message']
Integrability,@ellert does CMake not offer an order-dependency like GNU make does?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1516#issuecomment-359393193:38,depend,dependency,38,https://root.cern,https://github.com/root-project/root/pull/1516#issuecomment-359393193,1,['depend'],['dependency']
Integrability,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705#issuecomment-1148590657:202,message,message,202,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657,3,['message'],['message']
Integrability,"@etejedor @bbocjelm I think a simple way to do it is to remove the differences in this pull request that touch PyROOT— my contributions. Then this pull request can concentrate on only the TBranch/TBasket/TBufferFile modifications in C++ and we can later add code to AsMatrix to make use of it. A year ago, AsMatrix didn't exist, so the Numpy interface was a one-off. Now that there's AsMatrix, there's a natural place to put it. Nothing in git is every lost— Enric can see how I implemented it and copy that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-419064045:342,interface,interface,342,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-419064045,1,['interface'],['interface']
Integrability,@etejedor Could you review the Python integration of the feature? You don't have to review all the nitty gritty details of the impl but the infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5310#issuecomment-619032838:38,integrat,integration,38,https://root.cern,https://github.com/root-project/root/pull/5310#issuecomment-619032838,1,['integrat'],['integration']
Integrability,"@etejedor I'm a little bit confused how I should implement this: The tutorial should only run if there is XRootD, XGBoost (a Python package) and experimental PyROOT. And they depend on each other and they are mixed in Python and C++. Let's discuss in person how we can put all of this together ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4448#issuecomment-537479214:175,depend,depend,175,https://root.cern,https://github.com/root-project/root/pull/4448#issuecomment-537479214,1,['depend'],['depend']
Integrability,@etejedor Thanks for the review! I've fixed your comments and squashed them into the last commit (with a more descriptive commit message).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4043#issuecomment-510829680:129,message,message,129,https://root.cern,https://github.com/root-project/root/pull/4043#issuecomment-510829680,1,['message'],['message']
Integrability,"@etejedor That sounds like a good idea. I've said before that this diff is so old that the Numpy parts can be cleanly removed and reimplemented on top of new developments from the past year. That should include TTree::AsMatrix. I was also thinking of some jagged and object types, which are considered ""destructive"" storage by BulkIO, yet are not too hard to reconstruct. The code I've written to interpret these raw buffers as structured data has been separated out of uproot so that it can be used independently*. I'll present that on Monday at the ROOT Workshop and we could talk about it then. * For instance, PyROOT could ""optionally"" depend on them, only performing a Python import inside a method call. The two libraries I'm taking about are awkward-array (for jaggedness and similarly difficult array structures) and uproot-methods (for Pythonic array-at-a-time operations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-418329858:640,depend,depend,640,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-418329858,1,['depend'],['depend']
Integrability,"@ferdymercury I look through the messages and did not found critical errors. ; Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. ; But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800017654:33,message,messages,33,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800017654,1,['message'],['messages']
Integrability,@ferdymercury says in original message that `builtin_nlohmann` is off in binary.; Therefore when install ROOT via docker one has to ensure that system-wide `nlohmann_json` is provided.; That are other solutions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1843206614:31,message,message,31,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1843206614,1,['message'],['message']
Integrability,"@ferdymercury, could you please improve the commit message before I can merge this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8663#issuecomment-879224043:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/8663#issuecomment-879224043,1,['message'],['message']
Integrability,@gargvaibhav64 please provide description of PR (why are you doing this changes) and please improve commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5086#issuecomment-594056070:107,message,message,107,https://root.cern,https://github.com/root-project/root/pull/5086#issuecomment-594056070,1,['message'],['message']
Integrability,"@gemmeren From the commits tab, it looks like you have repeated commits with the same message, and separate commits that should really be just fixups to avoid having a broken intermediate state in the tree. Are you using merge instead of rebase? Could you please rebase and combine those commits into a single one? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317746717:86,message,message,86,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317746717,1,['message'],['message']
Integrability,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:; ```; # We need to paste the content of the cling plugins disabling link symbol optimizations.; set(CLING_PLUGIN_LINK_LIBS); message(STATUS ""clad = ${clad}""); if (clad); ```; and type `cmake .` in the build directory? You should see something like:; ```; -- [...]; -- And then fallback to: 'c++'; -- clad = OFF; -- Performing Test found_stdstringview; -- [...]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872164716:113,message,message,113,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872164716,2,['message'],['message']
Integrability,@giordano can you take care of suggested changes by @henryiii? (you need at least add protection for Minuit2: `NOT CMAKE_PROJECT_NAME STREQUAL ROOT`). Failure in Jenkins:; ```; 10:57:03 CMake Error at cmake/modules/RootMacros.cmake:333 (message):; 10:57:03 Cannot find header Minuit2/ABObj.h to generate dictionary G__Minuit2 for.; 10:57:03 Did you forget to set the INCLUDE_DIRECTORIES property for the current; 10:57:03 directory?; 10:57:03 Call Stack (most recent call first):; 10:57:03 cmake/modules/RootMacros.cmake:1151 (ROOT_GENERATE_DICTIONARY); 10:57:03 math/minuit2/CMakeLists.txt:16 (ROOT_STANDARD_LIBRARY_PACKAGE); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5016#issuecomment-587360906:237,message,message,237,https://root.cern,https://github.com/root-project/root/pull/5016#issuecomment-587360906,1,['message'],['message']
Integrability,@guitargeek @vepadulano ; This also fixes the issue; - https://github.com/root-project/root/issues/12230. Where the updated buffer interface utilizes the `itemsize` to determine incompatibility between implicitly declared double type numpy arrays and the cast to float in `cppyy.gbl.std.vector`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507#issuecomment-1940873212:131,interface,interface,131,https://root.cern,https://github.com/root-project/root/pull/14507#issuecomment-1940873212,1,['interface'],['interface']
Integrability,"@guitargeek How did you find zmq symbols in the libraries? I don't see them with the following check:. ```; root [0] R__LOAD_LIBRARY(libRooFitZMQ); root [1] int a, b, c; zmq_version(&a, &b, &c);. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. IncrementalExecutor::executeFunction: symbol 'zmq_version' unresolved while linking [cling interface function]!; root [2]; ```. This is on macOS with most settings default, so with modules. Perhaps the PCH build leaks symbols somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-982673638:506,interface,interface,506,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-982673638,1,['interface'],['interface']
Integrability,"@guitargeek While addressing your comments, I started thinking that there's perhaps a better design. 1. I don't think we should have a default parameter at all, but only one ctor with the offset parameters. In real life current cases, these classes are always used from MinuitFcnGrad and they always share offsets with one or two other Likelihood* objects. The only cases where no shared offsets are necessary is in unit tests, but in those cases it's easy to just create a dummy offset vector.; 2. All the offset management is distracting a bit from the core Likelihood logic. I think it may be nicer to make a simple wrapper class `LikelihoodOffset` that holds the shared_ptrs to the vectors, does the swapping, and a few other things. This also makes it easier to create, because the unwieldy types that you also rightly point out would then only be contained within `LikelihoodOffset`. I will start working on point 1 at least, and in the meantime will consider (and allow you to comment on ;) ) point 2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202#issuecomment-2091419386:619,wrap,wrapper,619,https://root.cern,https://github.com/root-project/root/pull/12202#issuecomment-2091419386,1,['wrap'],['wrapper']
Integrability,"@guitargeek converted to DRAFT for now, please feel free to steal parts if need be (maybe the improved error messages for the asimov dataset generation are worthwhile having), for all the other parts you probably have better solutions in your current WIP PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12034#issuecomment-1384135770:109,message,messages,109,https://root.cern,https://github.com/root-project/root/pull/12034#issuecomment-1384135770,1,['message'],['messages']
Integrability,"@guitargeek starting with the end: yes, you can close this as indeed the standard solution is to have venvs. but the reason that i hit this was only the laziness to have a venv specifically for this :) and the goal to a have a project dependent only on cppyy not on ROOT (it would be to much to use ROOT only for cppyy). Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635#issuecomment-2315031409:235,depend,dependent,235,https://root.cern,https://github.com/root-project/root/issues/12635#issuecomment-2315031409,1,['depend'],['dependent']
Integrability,"@guitargeek thanks, so as it seems to be a conda-specific dependency issue then, we can take it there: https://github.com/conda-forge/root-feedstock/issues/253",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970#issuecomment-2209666174:58,depend,dependency,58,https://root.cern,https://github.com/root-project/root/issues/15970#issuecomment-2209666174,1,['depend'],['dependency']
Integrability,@hageboeck I am confused. Could you clarify how that optional dependency to mathmore is a blocker for another PR in future removing it altogether?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618460890:62,depend,dependency,62,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618460890,1,['depend'],['dependency']
Integrability,"@hageboeck Without this PR I cannot solve `cxxmodules` build problem.; I already have a solution, but it will brake ROOT build because of this missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439#issuecomment-618452636:151,depend,dependency,151,https://root.cern,https://github.com/root-project/root/pull/5439#issuecomment-618452636,1,['depend'],['dependency']
Integrability,"@hageboeck and I discussed and decided that it's best to just make RooFit depend on `mathmore` being enabled. It's definitely using GSL (and has copies of parts of GSL code in some files). Since it [links](https://github.com/root-project/root/blob/master/roofit/roofit/CMakeLists.txt#L140) against `MathMore` library, depending on `mathmore` and not just GSL is probably the safer option for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3240#issuecomment-453473263:74,depend,depend,74,https://root.cern,https://github.com/root-project/root/pull/3240#issuecomment-453473263,2,['depend'],"['depend', 'depending']"
Integrability,"@hageboeck commit e97347056cb20cfaa89e5c58e668538d774e9120 is causing problems because `DEPENDENCIES` are forwarded to the dictionary generation, but there is no dictionary for `RooBatchCompute`. Also everything in `LIBRARIES` is added as a `PUBLIC` dependency already, and rightfully so I can locally revert the commit and everything still works. Can you let me know which configuration it is needed for?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1486461748:88,DEPEND,DEPENDENCIES,88,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1486461748,2,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependency']"
Integrability,"@hageboeck thanks for another Herculean reviewing effort :) Your comments make total sense; indeed, all the copy-pasted stuff still has to be merged with all the modernization and optimization work that was done in the past two years. I will go through as much of your suggestions as I can before I will be on leave after tomorrow for three weeks. After that, if anyone else has time to work on some of the issues, I'd of course welcome the help. As you know, my time on the project is running out, so I probably won't have time to integrate everything. For instance, Manos' mini computation library I have only learned about in the last few months and don't know it in enough detail to make any kind of sensible estimate of how to do it, let alone how much time this would take. Let's discuss detailed plans in our meeting at 14:00 today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-884045031:532,integrat,integrate,532,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-884045031,1,['integrat'],['integrate']
Integrability,"@hageboeck the number of tasks is fixed, it depends on the number of clusters in the dataset. If the thread-pool size during the event loop is smaller than the number of slots RDF prepared, a bit of space and time is wasted but no harm is done, the extra slots are unused. If the thread-pool size during the event loop is larger than the number of slots RDF prepared, builds with asserts will fire an assertion, builds without asserts will incur in undefined behavior (most likely a crash: `pop_back` will be called on an empty `std::deque`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5292#issuecomment-609700306:44,depend,depends,44,https://root.cern,https://github.com/root-project/root/pull/5292#issuecomment-609700306,1,['depend'],['depends']
Integrability,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1865265443:103,Integrat,Integration,103,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1865265443,1,['Integrat'],['Integration']
Integrability,"@hahnjo ; > Hm, but you cannot have multiple std::unique_ptr reference the same object on the heap. I don't see that being the case, neither for master nor for my proposed change. What am I overlooking?. @xvallspl ; > In this solution we would only have a single std::unique_ptr reference. I don't know what you mean by ""reference"", I don't have lvalue references anywhere here. With my proposal, for all ROOT configuration cases we'd have a definition of three members, `fSequentialExecutor`, `fThreadExecutor`, `fProcessExecutor`. Their types differ depending on ROOT's configuration. Note that I'm using the (assumed) feature that having one or many `ROOT::TSequentialExecutor` doesn't make any difference; that might be wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7039#issuecomment-760117537:552,depend,depending,552,https://root.cern,https://github.com/root-project/root/issues/7039#issuecomment-760117537,1,['depend'],['depending']
Integrability,"@hahnjo Thanks for the input, I am also wary about the backwards-incompatible change in behaviour. Your idea of the ""lazy"" wrapper source is sound and I also don't see major blockers against implementing it. On the other hand, the current behaviour of RDataFrame, which does not open files at construction time but at JITting time, is not really a design choice but rather a side-effect of using `TChain` as the concrete IO backend for all TTree-based RDataFrame instances, whether the user is processing a single file or more. Every other data source, including the RNTuple data source, opens a file. We could foresee that even with chains of RNTuple we still want to open the first file right away to derive the schema and some metadata. From my current understanding and the time spent on this PR, my current belief is that the backwards-incompatible change is almost a bugfix, and opening just one file does not introduce practical penalties in users' workflows, rather it also allows for early error catching potentially. What do you think about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1886629392:123,wrap,wrapper,123,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1886629392,1,['wrap'],['wrapper']
Integrability,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845925405:281,inject,inject,281,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845925405,1,['inject'],['inject']
Integrability,"@hahnjo for `vector<char>` it's all fine, there is actually a test for it [here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/stl_vector.py#L18) and it succeeds, meaning that our pythonization for `std::vector` runs fine. The fact that `value_type` for `vector<char>` in Python is the Python string `""char""` is due to another pythonization injected by cppyy itself [here](https://github.com/root-project/root/blob/07932d78211d0ac5fdb198ac2260c35530cb9647/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx#L1159). Simple test:. ```python; >>> import ROOT; >>> a = ROOT.std.vector['char'].value_type; >>> a; 'char'; >>> type(a); <class 'str'>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11592#issuecomment-1282453903:380,inject,injected,380,https://root.cern,https://github.com/root-project/root/pull/11592#issuecomment-1282453903,1,['inject'],['injected']
Integrability,"@hahnjo it's actually not fixed, I will remove it from the 6.26 project (it still needs a new interface in `TInterpreter`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-882643615:94,interface,interface,94,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-882643615,1,['interface'],['interface']
Integrability,"@hahnjo there is no stack trace unfortunately, just the assertion failure message. Were you able to reproduce yourself? I can reproduce on both my laptop and desktop machines, Ubuntu and CentOS7 with master, but not e.g. on lxplus. As for the use of `isa_and_nonnull`, @Axel-Naumann can better comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-899293659:74,message,message,74,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-899293659,1,['message'],['message']
Integrability,"@hahnjo yeah, I noticed too late. Should I just wrap that line in a `#ifndef __llvm__`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16386#issuecomment-2340361426:48,wrap,wrap,48,https://root.cern,https://github.com/root-project/root/pull/16386#issuecomment-2340361426,1,['wrap'],['wrap']
Integrability,"@hahnjo, @lhames just told me that we should be able to backport the brand-new jitlink ppc64 support. We need to go find all relevant revisions that touched these files:. ```; llvm/include/llvm/ExecutionEngine/JITLink/*ppc64*; llvm/lib/ExecutionEngine/JITLink/*ppc64*; llvm/lib/ExecutionEngine/JITLink/ELF.cpp; ```. @smuzaffar, can we trigger an integration build for this PR with cmssw as it is now? Then we can repeat the exercise once we backport the jitlink backend and see if https://github.com/cms-sw/cmssw/issues/41658 is resolved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1664374323:346,integrat,integration,346,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1664374323,1,['integrat'],['integration']
Integrability,"@hahnjo, thanks for the clarification. I wanted to investigate the `RuntimeDyldMachO` route first, I will come back hopefully soon with more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7100#issuecomment-767771555:86,rout,route,86,https://root.cern,https://github.com/root-project/root/pull/7100#issuecomment-767771555,1,['rout'],['route']
Integrability,"@hahnjo; > I'm not sure if it's a good idea to disguise FreeBSD as Linux by including SetUpLinux, did you evaluate creating a separate SetUpBSD or something like that?. indeed I have thought about it, but laziness took over at this stage since fbsd is apparently similar enough for a first try. I'll separate it out. > Tests should pass on Linux. It's possible that there is some common problem that makes multiple / many tests fail. Probably needs to be looked at in more detail. luckily most tests seem to pass on linux with my branch. The failed ones I think are related to whatever I did not want to install (dependency-wise); On FreeBSD the situation might be very similar since I keep a pretty minimal system. A couple do have me worried though, like the threading stuff and there is a number of std container/wrapper streaming tests that fail (e.g. roottest-root-io-cpp11Containers-forwardList) plus some more IO related stuff, I suspect some different conventions in the linking chain, who knows, a root internals expert might find the issue much faster than I can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1587190402:613,depend,dependency-wise,613,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1587190402,2,"['depend', 'wrap']","['dependency-wise', 'wrapper']"
Integrability,"@henryiii I guess I can work around this problem with a `const_cast`, but `const_casts` are evil and should not be necessary to access a basic feature of the public interface. In my understanding this is an interface bug. I agree that my solution is not optimal either, so if you want to take a deeper look please do. In `iminuit`, we run MIGRAD with the class `MnMigrad`. If you look into `MnMigrad.h`, you will see that it only allows one to access the `ModularFunctionMinimizer` as a const reference. The `ModularFunctionMinimizer` allows us to access the `MinimumBuilder` as a const and non-const reference, but the latter is non available, because `ModularFunctionMinimizer` is already const. The only way to set the print level for `MnMigrad` that I can see is via; `MnMigrad.Minimizer().Builder().SetPrintLevel(...)`, and that only works when `SetPrintLevel(...)` is const. As far as I can see, it makes sense that `MnMigrad` only hands out a const reference. Otherwise, it would also be a (possibly cleaner) solution if `MnApplication` and its children offer a `Minimizer()` method which returns a non-const reference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384667376:165,interface,interface,165,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384667376,2,['interface'],['interface']
Integrability,"@henryiii Thanks for filing the issue and this PR. I will have a look into this to reduce dependencies on ROOT. Indeed, the `Types.h` header should only be used to get `R__HAS_VECCORE` and the SIMD types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1658#issuecomment-367308495:90,depend,dependencies,90,https://root.cern,https://github.com/root-project/root/pull/1658#issuecomment-367308495,1,['depend'],['dependencies']
Integrability,"@jblomer , we are trying to test latest root master changes in [CMSSW](https://github.com/cms-sw/cmsdist/pull/8973) and our build failed with errors like [a]. Looks like this change is causing cmssw to fail. I guess we need to update cmssw to use `model.GetDefaultEntry()->GetPtr<T>(name)` instead of `model.Get<T>(name)` ... right? What about `addField<T>()` calls?. We also want same cmssw code to work for ROOT 6.26 and above. So should we add some `#if ROOT_VERSION_CODE >= ROOT_VERSION(6,31,0)` blocks ?. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6f60ec/37085/build-logs/PhysicsTools/NanoAOD/log.html; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:38: error: 'class ROOT::Experimental::RNTupleModel' has no member named 'Get'; 126 | const auto* existing_field = model.Get<bool>(name);; | ^~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/TriggerOutputFields.cc:126:42: error: expected primary-expression before 'bool'; 126 | const auto* existing_field = model.Get<bool>(name);; | ^~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc: In member function 'void NanoAODRNTupleOutputModule::CommonEventFields::createFields(ROOT::Experimental::RNTupleModel&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:28: error: expected primary-expression before '>' token; 77 | model.AddField<UInt_t>(""run"", &m_run);; | ^; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_14_0_ROOT6_X_2024-01-28-2300/src/PhysicsTools/NanoAOD/plugins/rntuple/NanoAODRNTupleOutputModule.cc:77:30: error: left operand of comma operator has no effect [-Werror=unused-value]; 77 | model.A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14454#issuecomment-1914756475:572,integrat,integration,572,https://root.cern,https://github.com/root-project/root/pull/14454#issuecomment-1914756475,1,['integrat'],['integration']
Integrability,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922713482:546,protocol,protocols,546,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482,2,['protocol'],['protocols']
Integrability,"@jblomer it very well might be... the error looks it likely comes from ring initialization repeatedly failing to allocate, until it reaches 0 and becomes an invalid argument error. I will improve the error message for this case. . I may have run into the same issue in the past (see https://github.com/root-project/root/pull/5919#issuecomment-664636722), which I believe stemmed from a timing issue for repeated ring exits and inits (https://github.com/axboe/liburing/issues/157#issuecomment-656731069). This may be the cause for some kernels, I'm not sure which are affected exactly but believe 5.7.9 and up have the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-678305168:206,message,message,206,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-678305168,1,['message'],['message']
Integrability,@jolly-chen ohh I see what you mean. Maybe it's better then to add a dependency on root.exe for this ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2074409580:69,depend,dependency,69,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2074409580,1,['depend'],['dependency']
Integrability,"@jpivarski Many thanks for sharing, that's very helpful! The cluster and page sizes should be addressed in #7853 ; For bulk access with views, I was considering an interface like this; ```; const T *RNTupleView<T>::MapV(IndexType index, unsigned int &nItems);; ```. The `nItems` parameter would return the number of elements one can use in the `T*` output buffer. So `T*` would point into the page buffer and return the number of elements until the end of the page.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7112#issuecomment-825654164:164,interface,interface,164,https://root.cern,https://github.com/root-project/root/pull/7112#issuecomment-825654164,1,['interface'],['interface']
Integrability,"@junaire, the `Missing transaction during deserialization` means we needed to add `PushTransactionRAII clingRAII(...)` in the relevant interface, should be fairly straight-forward to fix assuming we have a debug build. PS: It looks like we can add one of them in ~`cling::execFindFunction`~ `cling::ParseProto::Parse`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1272542635:135,interface,interface,135,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1272542635,1,['interface'],['interface']
Integrability,@kamahori Can you add a proper commit message explaining what this code is doing? (it could be helpful https://chris.beams.io/posts/git-commit/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5081#issuecomment-593413423:38,message,message,38,https://root.cern,https://github.com/root-project/root/pull/5081#issuecomment-593413423,1,['message'],['message']
Integrability,"@ktf (I can reproduce the problem now). Commit b2c6904bf458d5149e3955881d0054ba256a4110 seems to have broken the expectation of only one basket in flight, I also wonder how it interact with the interface, in particular, it is clear that this PR removes the crashs but does it lead to correct data being read through the bulk interface?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2400792247:194,interface,interface,194,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2400792247,2,['interface'],['interface']
Integrability,"@ktf, here is how to get the fedora38 debug build failure according to the bot:. ```; Grab the image:; $ docker run --shm-size=1g -m 16g --security-opt label=disable -it registry.cern.ch/root-ci/fedora38:buildready; Then:; ; ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/fedora38/master/Debug/c8bf26fbd62398395855e8d992e7688980a1d318/2023-10-05.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin refs/pull/13808/head:reduce-memory-usage; git checkout reduce-memory-usage; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'Debug' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; )```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1791153635:769,Integrat,Integration,769,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1791153635,1,['Integrat'],['Integration']
Integrability,"@ktf, this is very useful information. I am adding @ChuanqiXu9 and @zygoloid who work in the area of modules and that information might be also interesting to them. . Do we copy in each pcm the special types from all of its dependencies? I don’t see how we can get to 1.5M entries. I am wondering if we can do anything about the special types in general…",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1616634206:224,depend,dependencies,224,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1616634206,1,['depend'],['dependencies']
Integrability,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation?. There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-510887484:308,interface,interfaces,308,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-510887484,1,['interface'],['interfaces']
Integrability,"@linev BTW, `Should resolve circular dependency error, detected only on Windows` is not true, it was detected only on `ubuntu16/rtcxxmod`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3702#issuecomment-483707712:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/3702#issuecomment-483707712,1,['depend'],['dependency']
Integrability,"@linev Do you care if an extra file is created in the build tree? We do create 3 files for each dictionary, this stamp file summarizes them for what concerns dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/852#issuecomment-321561095:158,depend,dependencies,158,https://root.cern,https://github.com/root-project/root/pull/852#issuecomment-321561095,1,['depend'],['dependencies']
Integrability,"@linev Since you introduced that dependency, can you take a look? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963#issuecomment-1186918628:33,depend,dependency,33,https://root.cern,https://github.com/root-project/root/issues/10963#issuecomment-1186918628,1,['depend'],['dependency']
Integrability,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4127#issuecomment-516328534:207,depend,dependency,207,https://root.cern,https://github.com/root-project/root/pull/4127#issuecomment-516328534,2,['depend'],"['dependency', 'dependent']"
Integrability,"@linev The rebuilding is necessary, as all dictionaries depend on the Core one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/852#issuecomment-321550049:56,depend,depend,56,https://root.cern,https://github.com/root-project/root/pull/852#issuecomment-321550049,1,['depend'],['depend']
Integrability,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784#issuecomment-724667302:80,depend,dependencies,80,https://root.cern,https://github.com/root-project/root/issues/6784#issuecomment-724667302,1,['depend'],['dependencies']
Integrability,"@lmoneta @oshadura hi, let me know whether I can help you test the PR thoroughly. I'd understand that rebasing could make it easier, depending of the additional tools / testbeds you'd like to use for the testing phase.; I believe [libcmaes](https://github.com/beniz/libcmaes) is sound, so it should really be about the integration into ROOT structures and framework.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507#issuecomment-376036974:133,depend,depending,133,https://root.cern,https://github.com/root-project/root/pull/507#issuecomment-376036974,2,"['depend', 'integrat']","['depending', 'integration']"
Integrability,"@lmoneta Good point, I am happy to add a warning message once the logging patch is merged. I looked into the failing tests, these seem to be unrelated (something about Python).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-723105789:49,message,message,49,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-723105789,1,['message'],['message']
Integrability,"@lmoneta Hi, happy to see this moving forward! FYI libcmaes recently went under the same umbrella as the other CMA-ES reference implementations, https://github.com/CMA-ES/libcmaes. Don't hesitate to file issues if we can help with integration from the libcmaes side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7044#issuecomment-760441010:231,integrat,integration,231,https://root.cern,https://github.com/root-project/root/pull/7044#issuecomment-760441010,1,['integrat'],['integration']
Integrability,"@lmoneta I have checked `test-RooFit-MultiProcess-Messenger` on infinite repeat on multiple machines and also on CI, it should be bug free now, so I need a bit more information. What setup are you running on? What is the output of the test before it hangs? Did you check out the branch clean (because I rebased / force pushed everything yesterday, so just a pull may not have fast-forwarded the branch)?. I will remove the Linkdef files. Indeed, the `res` directories are to prevent users from including the MP headers. I may need to do some magic in the next PR where they will need to be included in user facing headers again, but we'll cross that bridge when we get there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-979100033:650,bridg,bridge,650,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-979100033,1,['bridg'],['bridge']
Integrability,"@lmoneta I've changed the commit message accordingly (force-pushed to overwrite the previous commit with the old commit message). Anyway, thank you both for your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5368#issuecomment-614711534:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/5368#issuecomment-614711534,2,['message'],['message']
Integrability,"@lmoneta Now that the logging patch is in, I added a warning message to replace the assert. Good to merge?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-739034972:61,message,message,61,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-739034972,1,['message'],['message']
Integrability,"@lmoneta The patch is ready for review. All logging is now done through `MnPrint`, which gained a static method `Log` with a severity level, a prefix for the actual message (usually set to the class name to indicate the origin of the message), and the actual message, which can consist of strings and streamable objects. For convenience, there are methods `Error`, `Warn`, `Info`, `Debug`, which use a globally set prefix for convenience and to make the code more readable and less redundant. The global prefix is set with a scope guard. Thanks to RAII, this works also for nested scopes. . Since I was going through all the code anyway, I replaced some c headers with the corresponding cxx headers (e.g. math.h with cmath). I did not touch Minuit2Minimizer, because it is only used by ROOT and I could not figure out how the logging works there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-717627738:165,message,message,165,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-717627738,3,['message'],['message']
Integrability,"@lmoneta This is likely to change the error message in case of incorrect user input, isn't it?. If so, did we (can we) check that the error message after is still 'comprehensible' for the user (if it is not the case, then we traded speed (in the successful case) for user frustration in error cases). Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2017#issuecomment-389591463:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/2017#issuecomment-389591463,2,['message'],['message']
Integrability,@lmoneta We would really need this new class for some of our experiments at our collaboration. Is there a way to speed up its integration into ROOT or any further work that could be done on our side?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1279021669:126,integrat,integration,126,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1279021669,1,['integrat'],['integration']
Integrability,"@lmoneta because then it makes mathcode 'depend' on RooFit per se. For integration test like this, you should consider putting them in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2016#issuecomment-389191423:41,depend,depend,41,https://root.cern,https://github.com/root-project/root/pull/2016#issuecomment-389191423,2,"['depend', 'integrat']","['depend', 'integration']"
Integrability,"@lmoneta could you confirm this is the list of dependencies? It's important to have those fixed, also considering containers and setup of CI nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1945588474:47,depend,dependencies,47,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1945588474,1,['depend'],['dependencies']
Integrability,"@lmoneta for future commits, can you please leave an empty line between the subject (first line) and the commit description (starting in line 3)? Having text in the second line makes `git log --oneline` horrible to read because git thinks that the entire commit message is the subject...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9307#issuecomment-977850247:262,message,message,262,https://root.cern,https://github.com/root-project/root/pull/9307#issuecomment-977850247,1,['message'],['message']
Integrability,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```; // the next classe should be in NumAlgoCore ?; math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo; math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo; math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo; math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo; math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo; math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo; math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo; math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ?; math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo; math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo; math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo; ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-801248146:474,Integrat,Integrator,474,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-801248146,1,['Integrat'],['Integrator']
Integrability,"@makortel . > In CMSSW; > ; > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB; > ; > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call; > ; > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call; > ; > ; > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled?. Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1965963868:701,wrap,wrapped,701,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1965963868,2,"['synchroniz', 'wrap']","['synchronization', 'wrapped']"
Integrability,"@makortel apparently the technical term that I was looking for is ""dynamic type"". I reworded the documentation and commit message accordingly, can you have another look if it's clear(er) now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246#issuecomment-2068873320:122,message,message,122,https://root.cern,https://github.com/root-project/root/pull/15246#issuecomment-2068873320,1,['message'],['message']
Integrability,"@mkrzewic. > where would be the place to add library dependencies for rootcling_stage1 ?. That would be `core/rootcling_stage1/CMakeLists.txt`, I think. `ROOT_EXECUTABLE` is one of our macros, it will generate a target that you can call the usual CMake functions on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1551609807:53,depend,dependencies,53,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1551609807,1,['depend'],['dependencies']
Integrability,"@odahme Here is a sample of the error output (that are many more of these lines in the full output).; The test failed on all Mac nodes. ```; Processing /Volumes/MacintoshHD2/ec/build/workspace/root-nightly-master-cxx14root7/BUILDTYPE/Release/COMPILER/native/LABEL/mac1012/root/tutorials/roofit/rf611_RooMCMarkovChainexample.C... [NON-XML-CHAR-0x1B][1mRooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby[NON-XML-CHAR-0x1B][0m ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.65215, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.04508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.08508, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.11206, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization integral is zero or negative; server values: x=x=-2.61614, mean=mean1=3.74943, sigma=sigma1=0; [#0] ERROR:Eval -- RooAbsReal::logEvalError(g1) evaluation error, ; origin : RooGaussian::g1[ x=x mean=mean1 sigma=sigma1 ]; message : p.d.f normalization int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349216512:718,message,message,718,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349216512,2,['message'],['message']
Integrability,"@odahme No, sorry, I'm not sure how to fix the problem, that's why I decided to revert the changes. Please discuss this with @lmoneta, as he can help you with that. Turning off the error messages is not a solution. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327#issuecomment-349229760:187,message,messages,187,https://root.cern,https://github.com/root-project/root/pull/1327#issuecomment-349229760,1,['message'],['messages']
Integrability,"@olifre I digged a bit more and discovered that as the units were gradually introduced, the interface was not the same from the beginning. So the initial version switching to G4 units by default was v6-19-02 (backported also to v6-18-02) and there the interface to change the unit back to CGS was:; ```; TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);; ```; The system allowing to set the default unit via TGeoManager was introduced in v6-23-02 (and backported to v6-22-08) and was the same until v6-25-01:; ```; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```; So your logic will work for sure only starting from v6-23-02 included (6-23-01 seems to have the initial style)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9383#issuecomment-988638453:92,interface,interface,92,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-988638453,2,['interface'],['interface']
Integrability,"@oshadura ; I have a question concerning xrootd & ROOT and it is does xrootd uses anything from ROOT as libraries/support/dependency ? ; I would've opened an issue but this is already open and it seems ROOT uses xrootd (or it might be using it); So what happens is that the xrootd works fine (at first), opens a file and then ROOT fails in . ```; Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7567807 in TMutex::UnLock() (); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-825601727:122,depend,dependency,122,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-825601727,1,['depend'],['dependency']
Integrability,"@oshadura Can you please check if the changes are fine, and indicate in case the timeout parameter is not needed in any of the dependencies in the mentioned?; Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7141#issuecomment-786622089:127,depend,dependencies,127,https://root.cern,https://github.com/root-project/root/pull/7141#issuecomment-786622089,1,['depend'],['dependencies']
Integrability,@oshadura Very nice! Feel free to merge if it passes on Jenkins. I just want to update a bit the style later. Below is an example of the style I want to use. This way we avoid setting variables and it looks a bit nicer. ```; ROOT_STANDARD_LIBRARY_PACKAGE(RInterface; HEADERS; RExports.h; TRDataFrame.h; TRFunctionExport.h; TRFunctionImport.h; TRInterface.h; TRInternalFunction.h; TRObject.h; SOURCES; RExports.cxx; TRCompletion.cxx; TRDataFrame.cxx; TRFunctionExport.cxx; TRFunctionImport.cxx; TRInterface.cxx; TRObject.cxx; DICTIONARY_OPTIONS; -I${R_INCLUDE_DIR}; -I${R_Rcpp_INCLUDE_DIR}; -I${R_RInside_INCLUDE_DIR}; LIBRARIES; R::R readline; DEPENDENCIES; Core; Matrix; RIO; Thread; ). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2651#issuecomment-423230293:644,DEPEND,DEPENDENCIES,644,https://root.cern,https://github.com/root-project/root/pull/2651#issuecomment-423230293,1,['DEPEND'],['DEPENDENCIES']
Integrability,@oshadura We just removed this to avoid a spurrious linking to RDataFrame. Can we use a syntax that enforce the dependency but not the linking?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802#issuecomment-430284145:112,depend,dependency,112,https://root.cern,https://github.com/root-project/root/pull/2802#issuecomment-430284145,1,['depend'],['dependency']
Integrability,@oshadura We seems to still have problems on some platforms:; ```; 23:36:33 [175/9590] Building C object builtins/zlib/CMakeFiles/ZLIB.dir/adler32.c.o; 23:36:33 FAILED: builtins/zlib/CMakeFiles/ZLIB.dir/adler32.c.o ; 23:36:33 ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/gcc -pipe -m64 -Wall -W -fPIC -pthread -O2 -DNDEBUG -fvisibility=hidden -Wno-unused-function -O3 -mpclmul -MD -MT builtins/zlib/CMakeFiles/ZLIB.dir/adler32.c.o -MF builtins/zlib/CMakeFiles/ZLIB.dir/adler32.c.o.d -o builtins/zlib/CMakeFiles/ZLIB.dir/adler32.c.o -c /mnt/build/jenkins/workspace/root-pullrequests-build/root/builtins/zlib/adler32.c; 23:36:33 {standard input}: Assembler messages:; 23:36:33 {standard input}:836: Error: suffix or operands invalid for `vpmaddubsw'; 23:36:33 {standard input}:837: Error: suffix or operands invalid for `vpmaddubsw'; 23:36:33 {standard input}:838: Error: suffix or operands invalid for `vpmaddwd'; 23:36:33 {standard input}:839: Error: suffix or operands invalid for `vpmaddwd'; 23:36:33 {standard input}:840: Error: suffix or operands invalid for `vpaddd'; 23:36:33 {standard input}:841: Error: suffix or operands invalid for `vpslld'; 23:36:33 {standard input}:843: Error: suffix or operands invalid for `vpaddd'; 23:36:33 {standard input}:844: Error: suffix or operands invalid for `vpaddd'; ```; Could you take a look?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-371649534:672,message,messages,672,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-371649534,1,['message'],['messages']
Integrability,"@oshadura interpreter/cling/lib/Interpreter/CIFactory.cpp has; ```; #ifdef __FAST_MATH__; Opts.FastMath = 1;; #endif; ```. Shouldn't that work? I'd have expected that to inject the proper preprocessor definition into cling's runtime, just like for `__STRICT_ANSI__` / `Opts.GNUMode`. Could you check whether `Opts.FastMath` is `1` when it should be? Then we'll have to see why `__STRICT_ANSI__` gets set but `__FAST_MATH__` doesn't, looking at cling's calls to clang / the `Preprocessor` setup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-329252529:170,inject,inject,170,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-329252529,1,['inject'],['inject']
Integrability,"@oshadura sure. As soon as everyone is happy and all proposed changes are in, I will squash the commits with one big commit message. @bellenot I did - does it work now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084#issuecomment-594383126:124,message,message,124,https://root.cern,https://github.com/root-project/root/pull/5084#issuecomment-594383126,1,['message'],['message']
Integrability,"@oshadura thanks for taking the lead on this!. @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-721652322:132,depend,dependency,132,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-721652322,2,['depend'],"['depend', 'dependency']"
Integrability,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-585352525:221,depend,dependency,221,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-585352525,1,['depend'],['dependency']
Integrability,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```; CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):; ""FTGL"" of type SHARED_LIBRARY; depends on ""RGL"" (weak); ""RGL"" of type SHARED_LIBRARY; depends on ""FTGL"" (weak); At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries.; CMake Generate step failed. Build files cannot be regenerated correctly.; make: *** [Makefile:9096: cmake_check_build_system] Error 1; ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------; Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786; ```; C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-585676794:104,depend,depends,104,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-585676794,7,['depend'],"['dependencies', 'dependency', 'depends']"
Integrability,"@p-bhagyashree and I have found an issue related to this one, which is hinted at in the last comment on the [forum post](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724/6) that was also linked in the description of this issue.; The comment mentions an error message, which we also observed (although the `prodpdf` is `simpdf` in our case):; ```; [#0] ERROR:InputArguments -- RooDataSet::merge(fitParData_prodpdf) ERROR: datasets have different size; ```; Looking through the source code, this is happening when attempting to merge the `fitParData` and `genParData`.; The reason that they are different sizes seems to be because [`genParData` is added to for every experiment that is generated](https://github.com/root-project/root/blob/v6-28-00/roofit/roofitcore/src/RooMCStudy.cxx#L368), while [`fitParData` is only added to if the fit succeeds](https://github.com/root-project/root/blob/v6-28-00/roofit/roofitcore/src/RooMCStudy.cxx#L683). The bug could presumably be fixed therefore by delaying the append to `genParData` and again only doing so if the fit is successful. This bug means that pull plots of constrained parameters appear completely different between a set of toys where all fits are successful (here they appear essentially Gaussian) and a set where one or more fits fail (here they are a delta function).; Should we open a new issue for this bug or can it be addressed here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490#issuecomment-1433404621:284,message,message,284,https://root.cern,https://github.com/root-project/root/issues/9490#issuecomment-1433404621,1,['message'],['message']
Integrability,@pcanal - Do you mean add the text from the first comment as an extended commit message? (Sorry - more familiar with the gitlab workflow for these things...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8390#issuecomment-859239302:80,message,message,80,https://root.cern,https://github.com/root-project/root/pull/8390#issuecomment-859239302,1,['message'],['message']
Integrability,"@pcanal - OK, all should be addressed modulo the question above about adding a new `TMath` dependency to the `TTree` code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411894191:91,depend,dependency,91,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411894191,1,['depend'],['dependency']
Integrability,"@pcanal - any idea how to debug the `ctest` failure? Or at least get it to cough up the failure message?. When I run `make cleantest` directly it succeeds; when run via `ctest`, it fails.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304129653:96,message,message,96,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304129653,1,['message'],['message']
Integrability,"@pcanal - the GitHub PR page right now is a bit messy, but the rewording of the commit messages you requested is complete. Ready to go?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304642213:87,message,messages,87,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304642213,1,['message'],['messages']
Integrability,"@pcanal : Thx, I have seen that. For MacOS, as I said in the OP, I was expecting problems..; I am really puzzled by the segfaults though. I mean, if it was working before, I do not see how the RTLD_DEEPBIND should break something.; That basically means, that there is already a global symbol of something loaded, that should have precedence over symbols in libCling and libCling's dependencies. But OK, I am not that much an expert of the ROOT internals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561345680:381,depend,dependencies,381,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561345680,1,['depend'],['dependencies']
Integrability,"@pcanal ; Do you mean that we should inject ""input_line_<number>"" in IncrementalParser (where this AtlernateTuple ends up in virtual FileID) only when it was from rootcling and it doesn't have modules?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2615#issuecomment-421014268:37,inject,inject,37,https://root.cern,https://github.com/root-project/root/pull/2615#issuecomment-421014268,1,['inject'],['inject']
Integrability,"@pcanal @Axel-Naumann I spoke too soon. While I can request the dictionaries manually to get rid of the error I run into a problem when checking them:. In the pairdict example I can run the following in the root prompt. ```; root [2] c = TClass::GetClass(""std::pair<int,MyClass::MyEnum>"");; root [3] b = c->GetListOfBases(); (TList *) nullptr; ```. So the list of base classes doesn't exist. While for a `std::pair<int,int>` I get the correct base class to `__pair_base<int,int>` and it does have a class pointer:. ```; root [1] c = TClass::GetClass(""std::pair<int,int>"");; root [2] b = c->GetListOfBases(); (TList *) @0x7ffd1c3fce98; root [3] TBaseClass* bc = (TBaseClass*) *(b->begin()); (TBaseClass *) 0x1a678d0; root [4] *bc; (TBaseClass &) Name: __pair_base<int,int> Title:; root [5] bc->GetClassPointer(); (TClass *) 0x1a3e5f0; ```. Now after adding `#pragma link C++ class std::pair<int, MyClass::MyEnum>+;` to the `linkdef.h` the error message is gone but I get the following. ```; root [1] c = TClass::GetClass(""std::pair<int,MyClass::MyEnum>"");; root [2] b = c->GetListOfBases(); (TList *) @0x7fff4c93b268; root [3] TBaseClass* bc = (TBaseClass*) *(b->begin()); (TBaseClass *) 0x19c4bd0; root [4] *bc; (TBaseClass &) Name: __pair_base<int,MyClass::MyEnum> Title:; root [5] bc->GetClassPointer(); (TClass *) nullptr; ```. I do have the proper hierarchy but the `__pair_base` base class doesn't have a valid ClassPointer so I'm not convinced this is all working as intended. Now I can solve this weirdness as well by requesting the `std::_pair_base<T1,T2>` dictionaries as well. But at this point I am a bit skeptical so I would like some confirmation that this is not just some stupidity on my side. . I did make sure the example is reproducible with the vanilla ROOT 6.24 from `/cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.24.00/x86_64-ubuntu18-gcc75-opt`. ; That required a slight reordering of the compile flags but otherwise it produces exactly the same. ; The slightly updated version: [pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-832639691:944,message,message,944,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-832639691,1,['message'],['message']
Integrability,"@pcanal @Axel-Naumann it seems this patch gets rid of an error message we were testing for...?. ```; -- BEGIN OUTDIFF OUTPUT --; --- /home/sftnight/build/workspace/root-pullrequests-build/roottest/root/meta/expressiveErrorMessages.ref	Wed Apr 29 11:19:38 2020; +++ /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/meta/expressiveErrorMessages.log	Thu May 14 11:20:57 2020; @@ -1,7 +1,4 @@; ; -expressiveErrorMessagesdictionarypayload:--:--:error:unknowntypename'bla'; -bla; -^; expressiveErrorMessagesdictionarypayload:--:--:error:expectedunqualified-id; classBexprMsg{};; ^. -- END OUTDIFF OUTPUT --; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5615#issuecomment-628576879:63,message,message,63,https://root.cern,https://github.com/root-project/root/pull/5615#issuecomment-628576879,1,['message'],['message']
Integrability,"@pcanal After three hours looking into the depth of `TFile.cxx` and it's dependencies: I would refrain from changing there too much. The method calls directly the very low-level IO functions (`frombuf` and friends) dependent on C-style mechanics, which do not integrate nicely with smart pointers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2361#issuecomment-408842617:73,depend,dependencies,73,https://root.cern,https://github.com/root-project/root/pull/2361#issuecomment-408842617,3,"['depend', 'integrat']","['dependencies', 'dependent', 'integrate']"
Integrability,@pcanal Any update please? The work on our side that depends on this has been pending for many months already.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-933625628:53,depend,depends,53,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-933625628,1,['depend'],['depends']
Integrability,@pcanal Are you approve changes or we want to continue.; I tried to clarify interface - split methods of constructor detection.; And introduce special enum which used only for wrapper creation - see my last three commits,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-598694981:76,interface,interface,76,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-598694981,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,@pcanal Can you approve my changes in `TreePlayer`. I extend virtual interface to be able use `TVirtualTreePlayer` class from GUI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5231#issuecomment-604999842:69,interface,interface,69,https://root.cern,https://github.com/root-project/root/pull/5231#issuecomment-604999842,1,['interface'],['interface']
Integrability,@pcanal FYI:; ```; warning C4858: discarding return value: This function constructs an object wrapped by a smart pointer and has no other effects; it is not useful to call this function and discard the return value.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16564#issuecomment-2386042016:94,wrap,wrapped,94,https://root.cern,https://github.com/root-project/root/pull/16564#issuecomment-2386042016,1,['wrap'],['wrapped']
Integrability,"@pcanal I am also not sure how the deadlock comes about, but looking at it with gdb, I noticed that the writing thread was waiting on the condition variable, while the main thread was waiting to join the writing thread. The change I introduced breaks out of the loop immediately, so it cannot reach the wait again once the nullptr is injected. I've now run the test over 22000 times without getting the deadlock, so I think it's fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/583#issuecomment-302386104:334,inject,injected,334,https://root.cern,https://github.com/root-project/root/pull/583#issuecomment-302386104,1,['inject'],['injected']
Integrability,"@pcanal I am writing roottest for this patch. . ```; SET(THESCRIPT ${CMAKE_CURRENT_SOURCE_DIR}/parseCin.sh); SET(THEINPUTFILE ${CMAKE_CURRENT_SOURCE_DIR}/test.csv). ROOTTEST_GENERATE_EXECUTABLE(readFromCin readFromCin.cxx LIBRARIES Core Hist RIO Net Graf Graf3d Gpad Tree Rint Postscript Matrix Physics MathCore Thread MultiProc). ROOTTEST_ADD_TEST(roottest-root-tree-readcin-readFromCin; COMMAND readFromCin test.csv; OUTREF test.ref; DEPENDS ${GENERATE_EXECUTABLE_TEST}). ROOTTEST_ADD_TEST(roottest-root-tree-readcin-parseCin; COMMAND ${THESCRIPT}; OUTREF test.ref ). ROOTTEST_ADD_TESTDIRS(); ```. where parseCin.sh is one line bash script. ```; cat test.csv | ./readFromCin; ```. When I run the test case, these two command always generate empty file. test.csv never been parsed in as an argument. How should I parse a argument? I tried MACRO_ARGS but that did not work. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-170621419:436,DEPEND,DEPENDS,436,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-170621419,1,['DEPEND'],['DEPENDS']
Integrability,@pcanal I finally had a chance to look at this in more detail and did not find an elegant solution for making TBB an optional dependency for this purpose. (Putting the relevant template specification in core/imt as I had in mind would create a circular dependency with core/thread). Open to suggestions how to deal with this (or if a hard TBB dependency in core/thread would be acceptable and/or an optional one straightforward to implement.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-780064165:126,depend,dependency,126,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-780064165,3,['depend'],['dependency']
Integrability,"@pcanal I removed, I think CMakelist was not ""correct"" from beginning (was LIBRARIES vs DEPENDENCIES)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802#issuecomment-430285949:88,DEPEND,DEPENDENCIES,88,https://root.cern,https://github.com/root-project/root/pull/2802#issuecomment-430285949,1,['DEPEND'],['DEPENDENCIES']
Integrability,"@pcanal I reworked the error message for unimplemented merges in 0ccd1d3, thank you for the feedback :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008#issuecomment-663685527:29,message,message,29,https://root.cern,https://github.com/root-project/root/pull/6008#issuecomment-663685527,1,['message'],['message']
Integrability,@pcanal I trying to verify that happens with failing test `root-tree-chain`.; From the log messages I see that following macro is failing:. https://github.com/root-project/roottest/blob/master/root/tree/chain/execCleanup.C. On mac1014/cxx17 platform I can reproduce behaviour and see file destructor does not call after `gROOT->GetListOfFiles()->Delete()` call.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4305#issuecomment-526497965:91,message,messages,91,https://root.cern,https://github.com/root-project/root/pull/4305#issuecomment-526497965,1,['message'],['messages']
Integrability,"@pcanal I understand this as follows: the `RRawFileDavix` class would move into the io/davix source space, which creates a libRRawFileDavix. The libRRawFileDavix statically depends on libRDavix. And libRIO dynamically loads libRRawFileDavix. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030#issuecomment-441665999:173,depend,depends,173,https://root.cern,https://github.com/root-project/root/pull/3030#issuecomment-441665999,1,['depend'],['depends']
Integrability,"@pcanal I use the class `MnMigrad` to minimize a function and I want to set the PrintLevel for that class. Quoting myself from two messages back:; We run MIGRAD with the class `MnMigrad`. If you look into `MnMigrad.h`, you will see that it only allows one to access the `ModularFunctionMinimizer` as a const reference. The `ModularFunctionMinimizer` allows us to access the `MinimumBuilder` as a const and non-const reference, but the latter is not available, because `ModularFunctionMinimizer` is already const. The only way to set the print level for `MnMigrad` that I can see is via; `MnMigrad.Minimizer().Builder().SetPrintLevel(...)`, and that only works when `SetPrintLevel(...)` is const.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384994344:131,message,messages,131,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384994344,1,['message'],['messages']
Integrability,"@pcanal I was running valgrind on `dataframe_snapshot` to find out what caused that crashed and I got this (but not in the test case that crashed on 32bit):; ```valgrind; ==29487== Conditional jump or move depends on uninitialised value(s); ==29487== at 0x8970A6F: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29487== by 0x8971162: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29487== by 0x8966F33: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29487== by 0x896A8C5: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29487== by 0x896A9F5: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29487== by 0x896AAD2: lzma_stream_encoder (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29487== by 0x6B4FAF0: R__zipLZMA (ZipLZMA.c:57); ==29487== by 0x6B559C8: R__zipMultipleAlgorithm (RZip.cxx:95); ==29487== by 0x518802D: TBasket::WriteBuffer() (TBasket.cxx:1099); ==29487== by 0x51931FF: TBranch::WriteBasketImpl(TBasket*, int, ROOT::Internal::TBranchIMTHelper*)::{lambda()#1}::operator()() const (TBranch.cxx:2792); ==29487== by 0x51936AB: TBranch::WriteBasketImpl(TBasket*, int, ROOT::Internal::TBranchIMTHelper*) (TBranch.cxx:2842); ==29487== by 0x51949F0: TBranch::WriteBasket(TBasket*, int) (TBranch.h:139); ==29487==; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182#issuecomment-396379682:206,depend,depends,206,https://root.cern,https://github.com/root-project/root/pull/2182#issuecomment-396379682,1,['depend'],['depends']
Integrability,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges.; E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/200#issuecomment-233646031:485,interface,interface,485,https://root.cern,https://github.com/root-project/root/pull/200#issuecomment-233646031,1,['interface'],['interface']
Integrability,"@pcanal Indeed, this still breaks my (more elaborate) integration tests...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2402101784:54,integrat,integration,54,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2402101784,1,['integrat'],['integration']
Integrability,"@pcanal The status bit check test seems a bit flaky as it also failed in the [nightlies](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=394075), albeit with a different problem (segfault, not error message).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/959#issuecomment-327865024:204,message,message,204,https://root.cern,https://github.com/root-project/root/pull/959#issuecomment-327865024,1,['message'],['message']
Integrability,"@pcanal What do you think would be the right place to include VecCore in ROOT? I want to avoid injecting it as a dependency when it's not needed, but that seems to cause problems with the PCH on Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830#issuecomment-320181174:95,inject,injecting,95,https://root.cern,https://github.com/root-project/root/pull/830#issuecomment-320181174,2,"['depend', 'inject']","['dependency', 'injecting']"
Integrability,"@pcanal `RVec` is advertised and designed as a ""numpy-like"" container, and much of the interface is modeled after numpy. I would vote for keeping the consistency.; I'm sure the expert users that know veccore (certainly few w.r.t. the number of users familiar with numpy) will not be confused by the name.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2625#issuecomment-425029783:87,interface,interface,87,https://root.cern,https://github.com/root-project/root/pull/2625#issuecomment-425029783,1,['interface'],['interface']
Integrability,@pcanal any idea when this will be integrated?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062#issuecomment-670013568:35,integrat,integrated,35,https://root.cern,https://github.com/root-project/root/pull/6062#issuecomment-670013568,1,['integrat'],['integrated']
Integrability,@pcanal can this be merged? or is there a problem in the roottests?; RDataFrame analysis of nanoAOD's is depending on nanoAOD's clustering to get fixed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-411756833:105,depend,depending,105,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-411756833,1,['depend'],['depending']
Integrability,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15355#issuecomment-2082181170:197,depend,dependencies,197,https://root.cern,https://github.com/root-project/root/pull/15355#issuecomment-2082181170,2,['depend'],"['depend', 'dependencies']"
Integrability,"@pcanal the commit message does not say why the locks are needed in the first place. from your comment, I'm starting to think that we do not need these locks at all (anymore?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608543688:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608543688,1,['message'],['message']
Integrability,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6905#issuecomment-738828344:80,depend,dependent,80,https://root.cern,https://github.com/root-project/root/pull/6905#issuecomment-738828344,1,['depend'],['dependent']
Integrability,"@pcanal with `--track-origins=yes`:; ```valgrind; ==29712== Conditional jump or move depends on uninitialised value(s); ==29712== at 0x8970A6F: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x8971162: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x8966F33: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x896A8C5: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x896A9F5: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x896AAD2: lzma_stream_encoder (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x6B4FAF0: R__zipLZMA (ZipLZMA.c:57); ==29712== by 0x6B559C8: R__zipMultipleAlgorithm (RZip.cxx:95); ==29712== by 0x518802D: TBasket::WriteBuffer() (TBasket.cxx:1099); ==29712== by 0x51931FF: TBranch::WriteBasketImpl(TBasket*, int, ROOT::Internal::TBranchIMTHelper*)::{lambda()#1}::operator()() const (TBranch.cxx:2792); ==29712== by 0x51936AB: TBranch::WriteBasketImpl(TBasket*, int, ROOT::Internal::TBranchIMTHelper*) (TBranch.cxx:2842); ==29712== by 0x51949F0: TBranch::WriteBasket(TBasket*, int) (TBranch.h:139); ==29712== Uninitialised value was created by a heap allocation; ==29712== at 0x4C2BBAF: malloc (vg_replace_malloc.c:299); ==29712== by 0x8971219: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x8966F33: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x896A8C5: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x896A9F5: ??? (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x896AAD2: lzma_stream_encoder (in /lib/x86_64-linux-gnu/liblzma.so.5.2.2); ==29712== by 0x6B4FAF0: R__zipLZMA (ZipLZMA.c:57); ==29712== by 0x6B559C8: R__zipMultipleAlgorithm (RZip.cxx:95); ==29712== by 0x518802D: TBasket::WriteBuffer() (TBasket.cxx:1099); ==29712== by 0x51931FF: TBranch::WriteBasketImpl(TBasket*, int, ROOT::Internal::TBranchIMTHelper*)::{lambda()#1}::operator()() const (TBranch.cxx:2792); ==29712== by 0x51936AB: TBranch::WriteBasketImpl(TBasket*, i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182#issuecomment-396384821:85,depend,depends,85,https://root.cern,https://github.com/root-project/root/pull/2182#issuecomment-396384821,1,['depend'],['depends']
Integrability,"@pcanal yes, I had no idea that could be a problem (is it really? isn't that what an xrootd server does?): consider that we only have one file open at a time in this first phase, and only nThread files open at a time during their parallel processing. Anyway to do what you propose without getting even slower we need some non-trivial development effort:; * for TChains to return global entry numbers, we would need to build them with the first N files, process them, then destroy them, build a new TChain with the first N*2 files, process them...or possibly something smarter; * to avoid closing the bunch of files after checking their entries and reopening when processing them, we would need to somehow get around the ""one file, one thread rule"", or open the file in the same thread that process it but add a synchronization point at which we gather all the entry numbers. I would still argue that all of this is beyond the scope of this PR -- which is meant to go back to the same, sane state of v6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442107670:811,synchroniz,synchronization,811,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442107670,1,['synchroniz'],['synchronization']
Integrability,"@pcanal, I fixed the commit message and I will merge it. Let me know if you have any objections.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1409#issuecomment-348601413:28,message,message,28,https://root.cern,https://github.com/root-project/root/pull/1409#issuecomment-348601413,1,['message'],['message']
Integrability,"@pcanal, I have changed PR to now mess around with the library type any more. I was just worried by these artifacts:; ```; [4.0K] root_install/lib/TestSupport/; └── [4.0K] objects-RelWithDebInfo; └── [4.0K] TestSupport; └── [4.0K] src; └── [435K] TestSupport.cxx.o. 4 directories, 1 file; ```; The subdirectory with the `RelWithDebInfo` made me worried that this library can't be used in dependent projects that use a different build type. But this turned out to be wrong: even if I build my depended project as `Release`, I can use `ROOT_ADD_GTEST` successfully without warnings about missing test support!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16568#issuecomment-2390992175:388,depend,dependent,388,https://root.cern,https://github.com/root-project/root/pull/16568#issuecomment-2390992175,2,['depend'],"['depended', 'dependent']"
Integrability,"@pcanal, it's not just spurious error messages: @chrisburr mentioned that `hadd` (as an example) segfaults, while I do not remember reports of the ""spurious crashes"" you mention in our productions. I was discussing with @dpiparo about an option to temporarily enable compatibility of the written file with ROOT 6.24, along the lines of @sethrj suggestion.; This would save us from a deployment nightmare. We can easily add a ROOT option for the jobs that produce files we have to read with old versions of ROOT, but rebuilding legacy versions of the experiment software stack on a patched ROOT 6.24 is much more problematic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-1999462389:38,message,messages,38,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-1999462389,1,['message'],['messages']
Integrability,"@pcanal, this is some weird GH trello integration which should be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/688#issuecomment-332493745:38,integrat,integration,38,https://root.cern,https://github.com/root-project/root/pull/688#issuecomment-332493745,1,['integrat'],['integration']
Integrability,"@pcanal, updated the commit message and the PR description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398#issuecomment-808794135:28,message,message,28,https://root.cern,https://github.com/root-project/root/pull/7398#issuecomment-808794135,1,['message'],['message']
Integrability,@petrstepanov : Thank you for the contribution that now is merged!; I forgot to mention you that next time it would be better to merge together simple commits and have more meaningful commit log messages. ; Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1192647873:195,message,messages,195,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1192647873,1,['message'],['messages']
Integrability,"@phsft-bot build just on windows10/cxx14 with flags -Druntime_cxxmodules=On. I am testing unrelated to this PR improvement to cdash. @gargvaibhav64, unfortunately we should take the longer route:; >In longer terms we want to backport llvm-project/clang@bd5ee58 from D51910 where we can specify the platform. We should add two modules in each libc and std modulemaps -- one that requires unix and another that requires windows. I can try doing this now and you should probably move your changes once we have it there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5284#issuecomment-609021436:189,rout,route,189,https://root.cern,https://github.com/root-project/root/pull/5284#issuecomment-609021436,1,['rout'],['route']
Integrability,"@phsft-bot build!. Could you update the commit message to something like:; ""[rootcling] Don't generate dictionary to throw it away when called with -r. This patch should speed up rootcling -r and simplify some of the conditional logic.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-604382871:47,message,message,47,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-604382871,1,['message'],['message']
Integrability,"@rdschaffer : this is the full error reported:. ```; ==2505== Conditional jump or move depends on uninitialised value(s); ==2505== at 0x4C2D255: __strncmp_sse42 (vg_replace_strmem.c:649); ==2505== by 0x4E36472: connect (in /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ==2505== by 0x3F7B62B8: XrdNetConnect::Connect(int, sockaddr const*, int, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2.0.0); ==2505== by 0x3FCEE754: XrdCl::Socket::ConnectToAddress(XrdNetAddr const&, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD59467: XrdCl::AsyncSocketHandler::Connect(long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7B48: XrdCl::Stream::EnableLink(XrdCl::PathID&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FCF7DEC: XrdCl::Stream::Send(XrdCl::Message*, XrdCl::OutgoingMsgHandler*, bool, long) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD202FC: XrdCl::MessageUtils::SendMessage(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams const&, XrdCl::LocalFileHandler*) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by 0x3FD2AC91: XrdCl::FileStateHandler::IssueRequest(XrdCl::URL const&, XrdCl::Message*, XrdCl::ResponseHandler*, XrdCl::MessageSendParams&) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); ==2505== by",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759513859:87,depend,depends,87,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759513859,2,"['depend', 'wrap']","['depends', 'wrapper']"
Integrability,"@sbmorphe, thanks for reporting! This is a good catch!. In this case, cling is trying to wrap the input as it thinks `bool operator<=(...)` is not a valid function declarator -presumably due to the `<=`. This seems to be another limitation of the current strategy to generate wrapper functions. See also the related issue #9171. @vgvassilev and I recently talked about this, which has to be addressed also for clang-repl. As a workaround, you can either temporarily turn on raw input, or define the function in an anonymous namespace, i.e.; ```c++; [cling]$ .rawInput 1; [cling]$ bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); }; [cling]$ .rawInput 0; ```; or; ```c++; [cling]$ namespace { bool operator<=(const A &lhs, const A &rhs) { return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2)); } }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9449#issuecomment-995962294:89,wrap,wrap,89,https://root.cern,https://github.com/root-project/root/issues/9449#issuecomment-995962294,2,['wrap'],"['wrap', 'wrapper']"
Integrability,@serval2412 There's a Jenkins github integration bug; we expect to have it fixed within the next days.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-342010254:37,integrat,integration,37,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-342010254,1,['integrat'],['integration']
Integrability,"@simonspa from a quick check, performance has improved but the issue isn't resolved; probing the 16 threads shows that almost all threads now instead lock the global ROOT mutex when in the TObject destructor:; ```; #0 0x00007ffff0de186c in __lll_lock_wait () from /nix/store/27x7pinqdsl9f3rpbm8bsszd9fhwq266-glibc-2.27/lib/libpthread.so.0; #1 0x00007ffff0ddab65 in pthread_mutex_lock () from /nix/store/27x7pinqdsl9f3rpbm8bsszd9fhwq266-glibc-2.27/lib/libpthread.so.0; #2 0x00007ffff18b445e in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>::ReadLock() () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libThread.so; #3 0x00007ffff4c4d66d in ROOT::TReadLockGuard::TReadLockGuard(ROOT::TVirtualRWMutex*) () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libCore.so; #4 0x00007ffff4c4422e in TROOT::RecursiveRemove(TObject*) () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libCore.so; #5 0x00007ffff4cfc24c in TObject::~TObject() () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libCore.so; ```. ---. This happens during message destruction, which I don't think is mimicked in `root-test`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408680078:1104,message,message,1104,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408680078,1,['message'],['message']
Integrability,@smuzaffar the output of the `cmsRun` command is:; ```; adding the max pT filter; 21-Aug-2023 12:36:36 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/user/cmsbuild/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; 21-Aug-2023 12:36:37 CEST Initiating request to open file root://cms-xrd-global.cern.ch//eos/cms/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; 21-Aug-2023 12:36:39 CEST Initiating request to open file root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; ----- Begin Fatal Exception 21-Aug-2023 12:36:40 CEST-----------------------; An exception of category 'FallbackFileOpenError' occurred while; [0] Constructing the EventProcessor; [1] Constructing input source of type PoolSource; [2] Calling RootInputFileSequence::initTheFile(); [3] Calling StorageFactory::open(); [4] Calling XrdFile::open(); Exception Message:; Failed to open the file 'root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root'; Additional Info:; [a] Calling RootInputFileSequence::initTheFile(): fail to open the file with name root://cms-xrd-global.cern.ch//eos/cms/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; [b] Calling RootInputFileSequence::initTheFile(): fail to open the file with name root://eoscms.cern.ch//eos/cms/store/user/cmsbuild/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; [c] Input file root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1686079491:1133,Message,Message,1133,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1686079491,1,['Message'],['Message']
Integrability,"@smuzaffar, can you integrate this PR with cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11076#issuecomment-1201484234:20,integrat,integrate,20,https://root.cern,https://github.com/root-project/root/pull/11076#issuecomment-1201484234,1,['integrat'],['integrate']
Integrability,"@stwunsch @bellenot I'm confused, there is no mention of what issue this commit is meant to fix in the commit message or the PR. Plus the discussion at ROOT-10560 is for `TThreadExecutor`, but this PR is about `TTreeProcessorMT`..?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4947#issuecomment-583029199:110,message,message,110,https://root.cern,https://github.com/root-project/root/pull/4947#issuecomment-583029199,1,['message'],['message']
Integrability,"@stwunsch as discussed, my opinion is that the previous message was user-friendlier than an actual python runtime error, and to increase test coverage it should be enough to change `exit()` to `exit(1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616458823:56,message,message,56,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616458823,1,['message'],['message']
Integrability,"@stwunsch my attempt at fixing the conflicts via the github web interface failed spectacularly, so I rebased on master, fixed conflicts, and force-pushed to your branch. Now doing one last pass of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-594488967:64,interface,interface,64,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-594488967,1,['interface'],['interface']
Integrability,"@stwunsch, the problem is twofold. First, `cling::printValue` relies on extra interpreter runtime, which is generally not available (the non-modules implementation resolves the problem by chance). This runtime (containing various printValue overloads) was designed to be made available if somebody requests it via 'standard' value printing request, that is, by calling an evaluate-aware interface. Second, the use of `cling::printValue` works around the intended way to communicate with the interpreter when it comes to extraction of execution results. We can make `cling::printValue` work by unconditionally including all runtime in question. That would slow down some usecases (notably outside of ROOT) for no good reason. In my opinion, `cling::printValue` is on the border of being a public API and internal implementation detail. Relying on it is rather dangerous because it can break (as it broke with modules). If you need to split the type information from the actual execution result I believe we need another way to do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398719939:387,interface,interface,387,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398719939,1,['interface'],['interface']
Integrability,"@unelg just FYI your error message is independent of whether ROOT's png is too old or not: you are mixing library and header of libpng from two different versions, likely in your own build? Please don't :-) If what I say here doesn't make sense please post a reproducer of this error at https://root-forum.cern.ch - thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1840834891:27,message,message,27,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1840834891,1,['message'],['message']
Integrability,"@vepadulano @Axel-Naumann with the last commit the situation is now the following:. explicit column list passed, a necessary size branch was omitted:; - compiled Snapshot throws an exception with a (hopefully) clear error message; - jitted Snapshot silently adds the required size branches. explicit column list passed, a necessary size branch is listed _after_ the branch that needs it:; - compiled and jitted Snapshot both work. no explicit column list passed:; - this is only possible with jitted Snapshots and this now works despite the fact that Snapshot reorders the column names in alphabetical order (which might put a size branch after the branch that needs it). In a subsequent PR I'll try to go back to Snapshot using the same ordering for the output columns as the ordering of the input columns -- it's not super straightforward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10934#issuecomment-1190273501:222,message,message,222,https://root.cern,https://github.com/root-project/root/pull/10934#issuecomment-1190273501,1,['message'],['message']
Integrability,"@vepadulano @dpiparo . This PR fixes. - https://github.com/root-project/root/issues/7196. This issue is very case-dependent.; When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:; `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree; - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```; const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;; host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;; ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. This PR implements the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```; Int_t fMemAvailable; // available RAM in MB; Int_t fMemCached; // cached RAM in MB; Int_t fMemBuffer; // buffer RAM in MB; Int_t fMemShared; // shared RAM in MB; Int_t fSwapCached; // cached swap in MB; Int_t fSReclaimable // slab that might be reclaimed; ```. Results:. ```; ➜ ROOT free -h; total used free shared buff/cache available; Mem: 23Gi 3.4Gi 7.4Gi 214Mi 12Gi 19Gi; Swap: 7.6Gi 2.1Gi 5.5Gi; ```. ```; ➜ ROOT root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 23877 2786 7562; root [2] ; ```; Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14695:114,depend,dependent,114,https://root.cern,https://github.com/root-project/root/pull/14695,1,['depend'],['dependent']
Integrability,"@vepadulano I've integrated the support for subnames in TChains, see the adapted output at the bottom of the summary above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7829#issuecomment-821074977:17,integrat,integrated,17,https://root.cern,https://github.com/root-project/root/issues/7829#issuecomment-821074977,1,['integrat'],['integrated']
Integrability,"@vepadulano did you found a fix for that ? I get spam by these ""Forward declarations"" messages each time I open my programs. Any fix or way to remove these messages. Except seing the error message, I couldn't find any issue in the execution of my code using MyClass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16496#issuecomment-2390513615:86,message,messages,86,https://root.cern,https://github.com/root-project/root/issues/16496#issuecomment-2390513615,3,['message'],"['message', 'messages']"
Integrability,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html; ```; >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h; In file included from input_line_7:57:; In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:; In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:; In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:; In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:; In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:; .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]; BOOST_HAS_NOTHROW_ASSIGN(T); ....; ....; In file included from input_line_7:57:; In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:; In file included from cmssw/src/CondFormats/RunInfo/inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1782483745:388,integrat,integration,388,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1782483745,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"@vgvassilev , I also tested this for our CXXMODULE IBs and most of relvals failed with errors like. https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-d3a1b7/21842/runTheMatrix-results/8.0_BeamHalo+BeamHalo+DIGICOS+RECOCOS+ALCABH+HARVESTCOS/step1_BeamHalo+BeamHalo+DIGICOS+RECOCOS+ALCABH+HARVESTCOS.log; ```; ----- Begin Fatal Exception 21-Jan-2022 04:35:59 CET-----------------------; An exception of category 'DictionaryNotFound' occurred while; [0] Constructing the EventProcessor; [1] Constructing module: class=BeamHaloProducer label='generator'; [2] Calling ProductRegistryHelper::addToRegistry, checking dictionaries for produced types; Exception Message:; No data dictionary found for the following classes:. map<string,ULong64_t>. Most likely each dictionary was never generated, but it may; be that it was generated in the wrong package. Please add; (or move) the specification '<class name=""whatever""/>' to; the appropriate classes_def.xml file along with any other; information needed there. For example, if this class has any; transient members, you need to specify them in classes_def.xml.; Also include the class header in classes.h. A type listed above might or might not be the same as a; type declared by a producer module with the function 'produces'.; Instead it might be the type of a data member, base class,; wrapped type, or other object needed by a produced type. Below; is some additional information which lists the types declared; to be produced by a producer module that are associated with; the types whose dictionaries were not found:. edm::HepMCProduct. ----- End Fatal Exception -------------------------------------------------; ```. this is a different error than what we get in out CXXMODULE IBs https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/slc7_amd64_gcc10/CMSSW_12_3_CXXMODULE_X_2022-01-19-2300/pyRelValMatrixLogs/run/135.1_TTbar_13+TTbarFS_13+HARVESTUP15FS+MINIAODMCUP15FS/step3_TTbar_13+TTbarFS_13+HARVESTUP15FS+MINIAODMCUP15FS.log ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592#issuecomment-1018294322:158,integrat,integration,158,https://root.cern,https://github.com/root-project/root/pull/9592#issuecomment-1018294322,3,"['Message', 'integrat', 'wrap']","['Message', 'integration', 'wrapped']"
Integrability,"@vgvassilev , I am testing this change ( along with https://github.com/root-project/root/commit/fb3367fa03e1c8b639e9591b93f6ac5226a80fed ) here https://github.com/cms-sw/root/pull/160/files but root still failed to build for ppc64le ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-facf87/20984/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-986033714:293,integrat,integration,293,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-986033714,1,['integrat'],['integration']
Integrability,"@vgvassilev , I don't understand this problem.; Mathcore should not depend on Vc, we should not add Vc as a static library.; There is maybe some dependency only in the test programs, but in that case we can link then Vc statically when building the tests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8788#issuecomment-997930774:68,depend,depend,68,https://root.cern,https://github.com/root-project/root/pull/8788#issuecomment-997930774,2,['depend'],"['depend', 'dependency']"
Integrability,"@vgvassilev , `-DLLVM_BUILD_TYPE=Debug` did not help much. It failed again with the same error ( see https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25499/external/py3-hepdata-lib/0.8.1-23017aefcaec1f6e033b49c0652b0cd2/log )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154889634:159,integrat,integration,159,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154889634,1,['integrat'],['integration']
Integrability,"@vgvassilev , cms tests failed. Looks like hepdata-lib package, see the build error [here](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-57f21d/29184/external/py3-hepdata-lib/0.10.1-d5a65a50fc66bb6ceb2097b9bc30c480/log); ```; Processing ./v0.10.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module _Builtin_intrinsics; Failed to load module std; Failed to load module libc; python3: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/root-6.27.01/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1324017853:149,integrat,integration,149,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1324017853,1,['integrat'],['integration']
Integrability,"@vgvassilev , cmssw build failed during dictionaries generation [a]. I think this mostly happens when cuda code is envolved. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8fe9c7/41033/build-logs/DataFormats/VertexSoA/log.html; ```; 0.	Program arguments: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-a252d5032aa4f9a2fc7dcaab3fac8b9f/bin/rootcling -reflex -f tmp/el8_amd64_gcc12/src/DataFormats/VertexSoA/src/DataFormatsVertexSoA/a/DataFormatsVertexSoA_xr.cc -inlineInputHeader -failOnWarnings -rmf tmp/el8_amd64_gcc12/src/DataFormats/VertexSoA/src/DataFormatsVertexSoA/a/DataFormatsVertexSoA_xr.rootmap -rml libDataFormatsVertexSoA.so -m DataFormatsCommon_xr_rdict.pcm -m DataFormatsProvenance_xr_rdict.pcm -DALPAKA_DEFAULT_HOST_MEMORY_ALIGNMENT=128 -DALPAKA_DISABLE_VENDOR_RNG -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=120301 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -DPROJECT_NAME=\""CMSSW\"" -DPROJECT_VERSION=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -Isrc -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/alpaka/1.1.0-84e4d58fde852e6641ccc23881ba7b1f/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/pcre/8.43-e34796d17981e9b6d174328c69446455/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-7ac88d918a6883d593abc133ee0eb2e9/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/bz2lib/1.0.6-d065ccd79984efc6d4660f410e4c81de/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2299822796:187,integrat,integration,187,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2299822796,1,['integrat'],['integration']
Integrability,"@vgvassilev , please open a PR for cms-sw/root branch cmscxx/master/daff082e92 (which is based on root coomit daff082e92 + changes needed for cxxmodules). Once we have the PR then we can test and integrate it in CXXMODULE IBs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4331#issuecomment-527766672:196,integrat,integrate,196,https://root.cern,https://github.com/root-project/root/pull/4331#issuecomment-527766672,1,['integrat'],['integrate']
Integrability,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:161,integrat,integration,161,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,1,['integrat'],['integration']
Integrability,"@vgvassilev , we have integrated this in CMSSW ROOT6 IBs and every things looks good. We also see some improvement on the memory usage (on avg 20MB less RSS used during our tests.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1796#issuecomment-380451623:22,integrat,integrated,22,https://root.cern,https://github.com/root-project/root/pull/1796#issuecomment-380451623,1,['integrat'],['integrated']
Integrability,"@vgvassilev . > In principle we do not need this injected include path when runtime_cxxmodules are on and we might just drop that part from dictionary generation. . Isn't the recent nlohmann_json issue contradicting this? These headers must be found at runtime, and that's happening either because they are found where they were during build time, or due to `ROOT_INCLUDE_PATH`. Unless ""this"" in ""we do not need this injected include path"" specifically refers to the ROOT build directory. I suppose we'd ""survive"" that because we anyway inject `$ROOTSYS/include` (with ROOTSYS really being ""install include dir or parent dir of location of libCore"") at runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-968641012:49,inject,injected,49,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-968641012,3,['inject'],"['inject', 'injected']"
Integrability,"@vgvassilev ; > For example, I'd recommend to move the include_directories to target_include_directories outside of this PR. Not always it can be done easily. In several places I have to change from `target_include_directories` to `include_directories` to solve dependency issue between library and dictionary. We were discussing it in mattermost, but now I delete myself from discussion trying adding you. Maybe @oshadura could help us to recover it. Long story short - dictionary need information about library includes BEFORE `target_include_directories` for that library is called. There is workaround in cmake (generator expressions), but it is not flexible enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5181#issuecomment-606589395:262,depend,dependency,262,https://root.cern,https://github.com/root-project/root/pull/5181#issuecomment-606589395,1,['depend'],['dependency']
Integrability,"@vgvassilev ; I think we don't have to do Evaluate each time, rather declaring RuntimePrintValue is kind for users. Also as I wrote in a commit message, this will be a no-op with Cling modules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2591#issuecomment-418997447:144,message,message,144,https://root.cern,https://github.com/root-project/root/pull/2591#issuecomment-418997447,1,['message'],['message']
Integrability,"@vgvassilev I am in favour of this PR (now changing a cxx file triggers the construction of the pch) but I think: ; 1) I remember that once upon a time, this was not the case. Perhaps this dependency has been introduced for a reason.; 2) I remember @Teemperor having an objection about reducing dependencies to headers+Core/Cling/Thread/RIO. If the aforementioned points turn out to be irrelevant, I would merge this right away. If not, we can discuss how to reduce the number of dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336687630:189,depend,dependency,189,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336687630,3,['depend'],"['dependencies', 'dependency']"
Integrability,"@vgvassilev I have updated the PR to include a similar patch for the SourceManager and at least the trivial test seems to work fine, including a nice 9MB reduction in memory allocations. I am now testing with the ALICE analysis framework. I have also done a few of the cleanups, and it now only exposes an ""expand"" interface (basically resize without shrinking). AFAICT, it's not worth to implement the full ""resize"" functionality, given it's complicated and at least the places I fixed never shrink. I think also the calloc approach might not be a good idea given realloc does not guarantee that the memory is zeroed and besides that page ranges might be a tad too big for vector of pointers and so on. I would put aside that idea, at least for now. My current plan:. * Verify with larger tests using ALICE analysis and asynchronous reconstruction.; * Unify the two PagedVector implementations I currently have (one for ASTReader and one for SourceManager).; * Use fixed size ranges, so that I can get rid of the ranges in my internal index and just keep where each page was allocated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1717257305:315,interface,interface,315,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1717257305,1,['interface'],['interface']
Integrability,"@vgvassilev I meant to have a discussion before merging this, but oh well... Let's just hope no one complains. Please ask me before merging in the future. My commit message had a small typo that I intended to fix prior to merging, but I didn't push to avoid triggering an extra build just for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/795#issuecomment-317347494:165,message,message,165,https://root.cern,https://github.com/root-project/root/pull/795#issuecomment-317347494,1,['message'],['message']
Integrability,"@vgvassilev I think most dependent PRs are merged, so this PR could be simplified...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-620030802:25,depend,dependent,25,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-620030802,1,['depend'],['dependent']
Integrability,"@vgvassilev No, we still get the same errors. New build log: [link](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-2c2cf9/30647/build.log). > For local testing, you can use /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8312/30647/install.sh to create a dev area with all the needed externals and cmssw changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1432060211:126,integrat,integration,126,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1432060211,1,['integrat'],['integration']
Integrability,"@vgvassilev Thanks for review.; To split it on logical PRs will create a mess - there are ~10-20 missing dependencies, wrong includes, wrong sub-class usages. It will be a lot of work. I really appreciate if we can merge it as is and probably face few minor issues in next days. It will be much more productive",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5181#issuecomment-603731782:105,depend,dependencies,105,https://root.cern,https://github.com/root-project/root/pull/5181#issuecomment-603731782,1,['depend'],['dependencies']
Integrability,"@vgvassilev That's true, but that would put the several similar commit messages in the same commit, which is not that clean. If we can help the contributors prepare the PRs, that's better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317763178:71,message,messages,71,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317763178,1,['message'],['messages']
Integrability,"@vgvassilev You just squash all changes in CMakeLists.txt files. ; But changes are incomplete. I really tried to make commits, adding missing dependency *AND* removing includes which are not used but belong to some other library, which is not listed in dependency. And trying to do it on low granularity level. One example is #5232",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5233#issuecomment-604930041:142,depend,dependency,142,https://root.cern,https://github.com/root-project/root/pull/5233#issuecomment-604930041,2,['depend'],['dependency']
Integrability,"@vgvassilev anything we can do to improve the error message, see https://github.com/root-project/root/issues/9594#issuecomment-1031255059 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1034611755:52,message,message,52,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1034611755,1,['message'],['message']
Integrability,"@vgvassilev do you know why the roottest branch from https://github.com/root-project/roottest/pull/235 is not picked up here? Extract from the log:; ```; Checking out Revision 2a4cfad9b3bfb6d868786869689740f643166317 (origin/master); > git config core.sparsecheckout # timeout=10; > git checkout -f 2a4cfad9b3bfb6d868786869689740f643166317; > git branch -a -v --no-abbrev # timeout=10; > git branch -D master # timeout=10; > git checkout -b master 2a4cfad9b3bfb6d868786869689740f643166317; Commit message: ""Adding dependency for slavedict generation on masterdict""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2775#issuecomment-429016900:497,message,message,497,https://root.cern,https://github.com/root-project/root/pull/2775#issuecomment-429016900,2,"['depend', 'message']","['dependency', 'message']"
Integrability,@vgvassilev just added a rationale to the first commit message,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11019#issuecomment-1193426530:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/11019#issuecomment-1193426530,1,['message'],['message']
Integrability,"@vgvassilev there is not. llvm14 is installed as a dependency for numba, llvm16 is part of the base system. Plus whatever root builds and passes to it's builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919611807:51,depend,dependency,51,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919611807,1,['depend'],['dependency']
Integrability,"@wmyyy so I can't build with ASAN on Windows (see errors above). But it's weird that you don't have the same errors. And about the ""The items cannot be built in parallel."", it's fine, it's only an informative message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1010722493:209,message,message,209,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1010722493,1,['message'],['message']
Integrability,"@xkzl What is the output of the command if you run it on the shell?; ```sh; $ LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; ```. More importantly, though, what do you get for `command -v clang`? I know in some cases the Framework header paths are messed up on macOS depending on which path you use clang from.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1931476306:316,depend,depending,316,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1931476306,1,['depend'],['depending']
Integrability,"@xvallspl That makes a lot more sense. Could you please change the commit message accordingly? That is, add your comment as an explanation with `git commit --amend`. I think it helps if we have to look at the code later again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/803#issuecomment-317771773:74,message,message,74,https://root.cern,https://github.com/root-project/root/pull/803#issuecomment-317771773,1,['message'],['message']
Integrability,@xvallspl can we have the TBB 2021 interface backported to 6.22 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-762878492:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-762878492,1,['interface'],['interface']
Integrability,@zzxuanyuan - any estimate when you'll be able to update the PR to take advantage of the new interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/785#issuecomment-326176897:93,interface,interface,93,https://root.cern,https://github.com/root-project/root/pull/785#issuecomment-326176897,1,['interface'],['interface']
Integrability,"A PR was opened to address the issue: I suggest to also build HistFactory without XML, only excluding the `hist2workspace` executable which depends on XML.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10103#issuecomment-1066729341:140,depend,depends,140,https://root.cern,https://github.com/root-project/root/issues/10103#issuecomment-1066729341,1,['depend'],['depends']
Integrability,A RooAddPdf needs to have always a normalization set defined when evaluating. ; If this set is not defined it evaluates the component pdf without a normalization. This can cause an ambiguous definition of the coefficients and therefore a different shape of the pdf given the same coefficient values. ; See problem reported in ROOT-10814. This PR just add a warning message to warn users to not evaluate the pdf without having provided first a normalization set. . This simple code shows the problem: ; https://cernbox.cern.ch/index.php/s/iosEw6qHq51SLbi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7129:365,message,message,365,https://root.cern,https://github.com/root-project/root/pull/7129,1,['message'],['message']
Integrability,"A change depending on CMake 3.12 slipped through, I removed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299#issuecomment-527080406:9,depend,depending,9,https://root.cern,https://github.com/root-project/root/pull/4299#issuecomment-527080406,1,['depend'],['depending']
Integrability,"A common default value for relative accuracy in numerical integration algorithms is often around 1e-6 (0.000001) or 1e-8 (0.00000001). But at the same time can also depend on the desired precision . So, I believe that lesser value will be more preferable so that we get higher precision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13005#issuecomment-1590570941:58,integrat,integration,58,https://root.cern,https://github.com/root-project/root/issues/13005#issuecomment-1590570941,2,"['depend', 'integrat']","['depend', 'integration']"
Integrability,"A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13008:21,depend,dependabot,21,https://root.cern,https://github.com/root-project/root/pull/13008,1,['depend'],['dependabot']
Integrability,"A couple concern. ; ```; export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; root.exe -q -e ""double x=1;""; ```; works perfectly but; ```; export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; PATH=/location_of_another_gcc/bin:${PATH}; root.exe -q -e ""double x=1;""; ```; fails. Also the list and calculation for this type of information might change overtime and so the 'hardcoded' information in your bash script might fail. What if we had a wrapper binary that would set some (private) variables and send fork the main processes (i.e. the one that will eventually launch all your production processes)? I.e. instead of; ```; ... setup environment ...; launch_O2 some args # this is the process that eventually fork all the tasks; ```; have:; ```; ... setup environment ...; preset_expensive_root_vars launch_O2 some args # this is the process that eventually fork all the tasks; ```. where `preset_expensive_root_vars` is provided by us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1680914709:446,wrap,wrapper,446,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1680914709,1,['wrap'],['wrapper']
Integrability,"A lot of code but mainly due to the tests and pythonizations. Main place to focus on is `TMVA/RTensor.hxx`. In the following examples of the implemented features:. C++ example:. ```cpp; using namespace TMVA::Experimental;; RTensor<float> x({2, 3}); // container with shape (2, 3); x(0,0) = 1; // set element (0,0) to 1; cout << x(0, 0) << endl; // read element (0,0); // Returns:; // 1; cout << x << endl;; // Returns:; // { { 1, 0, 0 } { 0, 0, 0 } }; ```. Python example:. ```python; import ROOT; x = ROOT.TMVA.Experimental.RTensor(""float"")((2, 3)) # container with shape (2, 3); x[0,0] = 1 # set element (0,0); print(x[0,0]) # read element (0,0); # Returns:; # 1; print(x); # Returns:; # { { 1, 0, 0 } { 0, 0, 0 } }; ```. Memory adoption capability:. ```cpp; using namespace TMVA::Experimental;; float data[6] = {1, 2, 3, 4, 5, 6};; RTensor<float> x(data, {2, 3}); // adopt memory with given shape; cout << x << endl;; // Returns:; // { { 1, 2, 3 } { 4, 5, 6 } }; ```. Column-major and row-major memory ordering:. ```cpp; using namespace TMVA::Experimental;; float data[6] = {1, 2, 3, 4, 5, 6};; RTensor<float> x(data, {2, 3}, MemoryOrder::RowMajor);; cout << x << endl;; // Returns:; // { { 1, 2, 3 } { 4, 5, 6 } }; RTensor<float> x(data, {2, 3}, MemoryOrder::ColumnMajor);; cout << x << endl;; // Returns:; // { { 1, 3, 5 } { 2, 4, 6 } }; ```. RTensor to numpy conversion:. ```python; import ROOT; data = ROOT.std.vector(""float"")((1, 2, 3, 4, 5, 6)); x = ROOT.TMVA.Experimental.RTensor(""float"")(data.data(), (2, 3)); print(x); # Returns:; # { { 1, 2, 3 } { 4, 5, 6 } }. import numpy; y = numpy.asarray(x); print(y); # Returns:; # [[1, 2, 3],; # [4, 5, 6]]; ```. Missing features:. - [ ] STL iterator interface; - [ ] `ExpandDim` and `Squeeze` methods (shape manipulation); - [ ] `Apply` method (element manipulation, similar to STL iterator); - [ ] `ROOT.AsTensor` method (`numpy.array` to `RTensor` conversion)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2593:1704,interface,interface,1704,https://root.cern,https://github.com/root-project/root/pull/2593,1,['interface'],['interface']
Integrability,A maybe minor change of behavior would be when there is time-dependent static initialization. If the ‘script’ has a static init that gets the current time or looks for files on disk the behavior of the unloading will be unexpected if:. .L script.C; .undo 1; .L script.C. doesn’t rerun static init.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4465#issuecomment-538779696:61,depend,dependent,61,https://root.cern,https://github.com/root-project/root/pull/4465#issuecomment-538779696,1,['depend'],['dependent']
Integrability,A more useful example:. ```; ./Fill; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TStyle public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //A collection of all graphics attributes; (C++ compiled) class TAttFill //Fill area attributes; (C++ compiled) class TVirtualPS public:TNamed public:TAttLine public:TAttFill public:TAttMarker public:TAttText //Abstract interface to a PostScript driver; (C++ compiled) class TVirtualX public:TNamed public:TAttLine public:TAttFill public:TAttText public:TAttMarker //ABC defining a generic interface to graphics system; TAttFillEditor ; (compiled) 0xa623d0 const EGuiConstants kFillSolid=0; (compiled) 0xa62570 const EGuiConstants kFillTiled=1; (compiled) 0xa62710 const EGuiConstants kFillStippled=2; (compiled) 0xa628b0 const EGuiConstants kFillOpaqueStippled=3; (compiled) 0x7f16f7ae022c const Mask_t kGCFillStyle=256; (compiled) 0x7f16f7ae0228 const Mask_t kGCFillRule=512. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084825802:521,interface,interface,521,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084825802,2,['interface'],['interface']
Integrability,"A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9747:106,interface,interfaces,106,https://root.cern,https://github.com/root-project/root/pull/9747,1,['interface'],['interfaces']
Integrability,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-805982843:6,interface,interface,6,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-805982843,4,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,A new line somewhere to break the message in two lines wouldn't hurt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4244#issuecomment-523058912:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/4244#issuecomment-523058912,1,['message'],['message']
Integrability,"A parallel writer enables the creation of multiple `RNTupleFillContext`, where each context prepares independent clusters that are appended to the common ntuple with internal synchronization. At the moment, this synchronization makes sure that only one thread is writing to the file at any moment. Fully parallel writing into reserved offsets can be a future extension, pending further investigation and evaluation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14519:175,synchroniz,synchronization,175,https://root.cern,https://github.com/root-project/root/pull/14519,2,['synchroniz'],['synchronization']
Integrability,"A possible implementation, that could go in some ROOT::Math classes:. ```; #include <bitset>; #include <cmath>; #include <array>; #include <set>; #include <iostream>. using std::bitset;; using std::array;; using std::vector;; using std::set;; using std::cout;; using std::endl;. /**; * @brief Generation of pseudo-random bits using a linear feedback shift register (LFSR), until a register value is repeated (or maxPeriod is reached); * @tparam k the length of the LFSR, or the order of the monic polynomial PRBS-k (last exponent); * @tparam nTaps the number of taps; * @param start the start value of the LFSR; * @param taps the taps that will be XOR-ed to calculate the new bit. They are the exponents of the monic polynomial. Ordering is unimportant.; * @param wrapping if true, allow wrapping until maxPeriod or start is reached; * @param verbose if true, print the lfsr and new bit on each step; * @note Shift direction of the register is to the left <<, the newBit is set at bit position 0 (right); * @return the array of pseudo random bits, or an empty array if input was incorrect; * @see https://en.wikipedia.org/wiki/Monic_polynomial; * @see https://en.wikipedia.org/wiki/Linear-feedback_shift_register; * @see https://en.wikipedia.org/wiki/Pseudorandom_binary_sequence; */; template <size_t k, size_t nTaps>; vector<bool>; LFSR(const bitset<k> start, const array<uint16_t, nTaps> taps, const bool wrapping = false, const bool verbose = false); {; vector<bool> result;; //Sanity-checks; if(taps.size()<2); {; cerr << ""At least two taps are needed"" << endl;; return result;; }; for(auto tap : taps); {; if(tap > k); {; cerr << ""Out of range tap "" << tap << endl;; return result;; }; }; if(start.none()); {; cerr << ""A non-zero start value is needed"" << endl;; return result;; }. const uint32_t maxPeriod = pow(2,k) - 1;; result.reserve(maxPeriod);. set<uint32_t> lfsrHistory;; bitset<k> lfsr(start);; uint32_t i = 0;; do; {; // XOR of all the tapped bits. We use -1 because an exponent N in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8199#issuecomment-843369054:764,wrap,wrapping,764,https://root.cern,https://github.com/root-project/root/issues/8199#issuecomment-843369054,2,['wrap'],['wrapping']
Integrability,"A reproducer that does not depend on TDataFrame; crashes on gcc 4.9.2 and gcc 6.3.0.; If someone knows a general solution that does not require changing the template recursion limit in the compilation flags I would be super interested:. ```c++; #include <vector>; #include <tuple>. int main() {; std::vector<std::tuple<double, double, double, double, double, double, double, double, double, double, double, double, double,; double, double, double, double, double, double, double, double, double, double, double, double, double,; double, double, double, double, double, double, double, double, double, double, double, double, double,; double, double, double, double, double, double, double, double, double, double, double, double, double,; double, double, double, double, double, double, double, double, double, double, double, double, double,; double, double>> v(1);; v.resize(1);; ; return 0;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/740#issuecomment-313086139:27,depend,depend,27,https://root.cern,https://github.com/root-project/root/pull/740#issuecomment-313086139,1,['depend'],['depend']
Integrability,"A summary of the discussion at the linked PR:. * We cannot implement a precision loss check in TH*F classes as they are implemented currently, as it would effectively be a no-op and a waste of CPU cycles; * We can better document the interfaces highlighting the possibility to incur in undefined behaviour of the type seen in this issue; * The only way for a user to know that they are reaching the limits of their histogram is to check the amount of entries and compare it with the maximum integer bin content for the float channel as documented by the changes in the PR; * TH1F should probably never be used unless the user really knows what they are doing. Unfortunately it is the default histogram type used by `TTree::Draw`, rendering its deprecation very complicated; * To combat this we should probably remove bare TH1F usage from tutorials everywhere; * The difference seen by @stwunsch in his report is due to the fact that RDataFrame uses TH1D whereas TTree::Draw uses the 'malign' TH1F which saturates at 1.67e8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2046968851:234,interface,interfaces,234,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2046968851,1,['interface'],['interfaces']
Integrability,"A valid point. The problem is not in RooFit, since RooFit directly uses the TRandom interface. @lmoneta, do you think this can be fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6624#issuecomment-707635578:84,interface,interface,84,https://root.cern,https://github.com/root-project/root/issues/6624#issuecomment-707635578,1,['interface'],['interface']
Integrability,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8063:584,message,message,584,https://root.cern,https://github.com/root-project/root/issues/8063,1,['message'],['message']
Integrability,ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library.; ; The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files.; ; This patch teaches cling to work with the -fmodule-map-file= flag.; ; ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3850:633,Depend,Depends,633,https://root.cern,https://github.com/root-project/root/pull/3850,1,['Depend'],['Depends']
Integrability,"AL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout; >; > [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0,; > dual-stack: false, private IPv4: true, private IPv6: false; >; > Successful UK WATERLOO:; >; >; > https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout; >; > [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2013477.0-lcg2259.gridpp.rl.ac.uk&xrd.rn=v4.10.0,; > dual-stack: false, private IPv4: true, private IPv6: false; >; > Successful IN2P3 LAPP_LAKE; >; >; > https://bigpanda.cern.ch//media/filebrowser/f9695015-c110-4e2e-9c62-d56eade824f8/panda/tarball_PandaJob_4926136184_IN2P3-LAPP_LAKE/payload.stdout; >; > [2020-12-19 02:08:57.250908 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] kXR_protocol successful (type: manager [],; > protocol version 500); > [2020-12-19 02:08:57.251553 +0100][Debug ][XRootDTransport ] [; > lapp-se01.in2p3.fr:1094 #0.0] Sending out kXR_login request, username:; > atlaspil, cgi: ?xrd.cc=fr&xrd.tz=1&xrd.appname=runH4lAnalRun2&xrd.info; > =&xrd.hostname=lapp-wn168.in2p3.fr&xrd.rn=v4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:1782,protocol,protocol,1782,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['protocol'],['protocol']
Integrability,AXEL DEBUG: Node name is null; Build failed on ROOT-fedora29/python3.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-ROOT-fedora29-python3&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77415/console).; ### Errors:; - [2020-04-20T19:06:04.655Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616750282:485,message,message,485,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616750282,1,['message'],['message']
Integrability,AXEL DEBUG: Node name is null; Build failed on ROOT-fedora30/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-ROOT-fedora30-cxx14&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77416/console).; ### Errors:; - [2020-04-20T19:15:40.813Z] CMake Error at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616754821:477,message,message,477,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616754821,1,['message'],['message']
Integrability,AXEL DEBUG: Node name is null; Build failed on ROOT-fedora31/noimt.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-ROOT-fedora31-noimt&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77417/console).; ### Errors:; - [2020-04-20T19:07:59.538Z] CMake Error at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616751218:477,message,message,477,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616751218,1,['message'],['message']
Integrability,AXEL DEBUG: Node name is null; Build failed on ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-ROOT-performance-centos7-multicore-default&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77414/console).; ### Errors:; - [2020-04-20T19:06:05.516Z] CMake Error at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616750301:531,message,message,531,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616750301,1,['message'],['message']
Integrability,AXEL DEBUG: Node name is null; Build failed on ROOT-ubuntu16/nortcxxmod.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-ROOT-ubuntu16-nortcxxmod&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77418/console).; ### Errors:; - [2020-04-20T19:23:08.506Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616758476:491,message,message,491,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616758476,1,['message'],['message']
Integrability,AXEL DEBUG: Node name is null; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-mac1015-cxx17&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77419/console).; ### Errors:; - [2020-04-20T19:06:08.364Z] CMake Error at /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616750312:488,message,message,488,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616750312,1,['message'],['message']
Integrability,AXEL DEBUG: Node name is null; Build failed on windows10/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-windows10-cxx14&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77420/console).; ### Errors:; - [2020-04-20T19:06:24.342Z] CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616750445:471,message,message,471,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616750445,1,['message'],['message']
Integrability,AXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got an actionAXEL DEBUG: got a workspace; AXEL DEBUG: got a computer: root-jenkins-01.cern.ch; AXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got an actionAXEL DEBUG: got a workspace; AXEL DEBUG: got a computer: olhswep22.cern.ch; Build failed on ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5402-ROOT-performance-centos7-multicore-default&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77623/console).; ### Errors:; - [2020-04-21T12:16:14.317Z] CMake Error at CMakeLists.txt:9 (message): ; - [2020-04-21T12:16:14.317Z] CMake Error at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5402#issuecomment-617143091:1445,message,message,1445,https://root.cern,https://github.com/root-project/root/pull/5402#issuecomment-617143091,2,['message'],['message']
Integrability,AXEL DEBUG: null workspace; Build failed on ROOT-debian10-i386/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5415-ROOT-debian10-i386-cxx14&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77606/console).; ### Errors:; - [2020-04-21T12:56:28.483Z] CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:873 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5415#issuecomment-617161888:498,message,message,498,https://root.cern,https://github.com/root-project/root/pull/5415#issuecomment-617161888,1,['message'],['message']
Integrability,AXEL DEBUG: null workspace; Build failed on ROOT-fedora29/python3.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5415-ROOT-fedora29-python3&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77608/console).; ### Errors:; - [2020-04-21T12:59:34.627Z] CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:873 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5415#issuecomment-617163535:482,message,message,482,https://root.cern,https://github.com/root-project/root/pull/5415#issuecomment-617163535,1,['message'],['message']
Integrability,"AbsData`. This is implemented in this PR, such that things like this are now possible:. ```c++; namespace CudaInterface = RooFit::Detail::CudaInterface;. // Define model; RooRealVar x{""x"", ""x"", 0, -10, 10};; RooRealVar mu{""mu"", ""mu"", 0, 0, 10};; RooRealVar sigma{""sigma"", ""sigma"", 3, 0.1, 10};. RooGaussian gauss{""gauss"", ""gauss"", x, mu, sigma};. std::size_t numBins = 20;; x.setBins(numBins);. RooArgSet normSet{x};. // Create array of observable values; std::vector<double> xValsHost;; for (std::size_t i = 0; i < numBins; ++i) {; x.setBin(i);; xValsHost.push_back(x.getVal());; }. // Copy observable values to the array; CudaInterface::DeviceArray<double> xValsDevice{numBins};; CudaInterface::copyHostToDevice(xValsHost.data(), xValsDevice.data(), numBins);. // Compile pdf for evaluation with RooFitDriver; std::unique_ptr<RooAbsReal> gaussCompiled{RooFit::Detail::compileForNormSet(gauss, normSet)};. // Instantiate RooFitDriver and set device input array; ROOT::Experimental::RooFitDriver driver{*gaussCompiled, RooFit::BatchModeOption::Cuda};; driver.setInput(""x"", {xValsDevice.data(), numBins}, /*isOnDevice=*/ true);. // Evaluate; std::span<const double> deviceOut = driver.run();. // Copy back to host and pring results; std::vector<double> hostOut(deviceOut.size());; CudaInterface::copyDeviceToHost(deviceOut.data(), hostOut.data(), numBins);; for (int i = 0; i < numBins; ++i) {; std::cout << xValsHost[i] << "" "" << hostOut[i] << std::endl;; }; ```. The `RooFitDriver.h` interface is also significantly reduced to not include anything that strictly has to do something with the evaluation. This makes the interface less confusing, which is important because I want to make this class public to the users in the next PR. The evaluation of PDFs with the RooFitDriver also on the GPU is a very useful feature that we should not hide away for longer, now that it has proven itself as a backend for the likelihoods. This PR also removes some old code. More details in the commit description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13389:1690,interface,interface,1690,https://root.cern,https://github.com/root-project/root/pull/13389,2,['interface'],['interface']
Integrability,"According to https://en.cppreference.com/w/cpp/numeric/math/nextafter,. TH1F stops working well at 1e7 (with integer weights). Should we add this as the maximum value for TH1F, as is with TH1C for 128 e.g.; With non-integer weights, this might become more of a problem to check as it is highly dependent on the chosen weight. But usually w = 1. ```; Precision loss demo for float:; nextafter(1e+01, INF) gives 10.000001; Δ = 0.000001; nextafter(1e+02, INF) gives 100.000008; Δ = 0.000008; nextafter(1e+03, INF) gives 1000.000061; Δ = 0.000061; nextafter(1e+04, INF) gives 10000.000977; Δ = 0.000977; nextafter(1e+05, INF) gives 100000.007812; Δ = 0.007812; nextafter(1e+06, INF) gives 1000000.062500; Δ = 0.062500; nextafter(1e+07, INF) gives 10000001.000000; Δ = 1.000000; nextafter(1e+08, INF) gives 100000008.000000; Δ = 8.000000; ```. I proposed a pull request.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-1862319656:294,depend,dependent,294,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-1862319656,1,['depend'],['dependent']
Integrability,"According to https://www.freedesktop.org/wiki/Software/fontconfig/, fontconfig does not depend on X.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-946465981:88,depend,depend,88,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-946465981,1,['depend'],['depend']
Integrability,"According to the RFC 2616, a 301 Status Code only ""SHOULD"" return; the new URI -- not ""MUST"". http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.2. Jira #7809: https://sft.its.cern.ch/jira/browse/ROOT-7809",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/108:112,Protocol,Protocols,112,https://root.cern,https://github.com/root-project/root/pull/108,1,['Protocol'],['Protocols']
Integrability,"According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved; Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8909:104,depend,dependency,104,https://root.cern,https://github.com/root-project/root/issues/8909,1,['depend'],['dependency']
Integrability,According to; https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs writing [skip ci] anywhere in a commit message should automatically skipp the CI runs for this PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14609:134,message,message,134,https://root.cern,https://github.com/root-project/root/pull/14609,1,['message'],['message']
Integrability,"Actually I don't see this line in any builds. ; Anyway, I would suggest to merge the PR and then lets later in the nightly if we get this error again and if we need to add this dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1402252096:177,depend,dependency,177,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1402252096,1,['depend'],['dependency']
Integrability,"Actually I got to admit I have no idea why there are tests failing on ROOT-ubuntu16/nortcxxmod.; Acccording to the error message this seems to be related to the function TGraph::AllocateArrays which I did not touch at all, so this might be an unrelated issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698#issuecomment-566533676:121,message,message,121,https://root.cern,https://github.com/root-project/root/pull/4698#issuecomment-566533676,1,['message'],['message']
Integrability,"Actually I think it's different to that issue. In the other issue he wanted pyROOT to throw one of the exceptions, but it at least is telling the user what the exception types were from each of the c++ methods it tried. In my case, I'm unhappy that pyROOT seems to be hiding the exceptions that c++ threw behind a TypeError, rather than saying the correct exception type (which was a runtime error, and ideally to print the message associated to that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16405#issuecomment-2345636538:424,message,message,424,https://root.cern,https://github.com/root-project/root/issues/16405#issuecomment-2345636538,1,['message'],['message']
Integrability,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394474003:81,depend,depending,81,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394474003,1,['depend'],['depending']
Integrability,Actually there was an issue reported when getting `expat` from the macOS SDK: https://mattermost.web.cern.ch/root/pl/zdaib63hnbrctqk5sw43gy1t8r. Maybe you need to get some more dependencies from brew.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-825436013:177,depend,dependencies,177,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-825436013,1,['depend'],['dependencies']
Integrability,"Actually, it may be ok to _build_ uring support for ROOT, which depends only on the availability of the liburing user space library. When run in a container, it is well possible that the kernel does provide uring after all. So really, I think we need better runtime diagnostics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12701#issuecomment-1520049807:64,depend,depends,64,https://root.cern,https://github.com/root-project/root/issues/12701#issuecomment-1520049807,1,['depend'],['depends']
Integrability,"Actually, we do not have example with REve code where `nlohmann::json` interface is used.; In the `REveElement.hxx` header file I see such construct:; ```; #if __has_include(<nlohmann/json_fwd.hpp>); #include <nlohmann/json_fwd.hpp>; #else; // This forward declaration works for versions before 3.11.0, which introduced; // a ""versioned, ABI-tagged inline namespace"". The json_fwd.hpp header is; // present in multi-header installations (the default as of version 3.11.0), and; // single-header installations of version 3.11.2+.; ```. Means it can compile macro - as long as json interface is not really involved. ; But will fail if one has to use it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844987901:71,interface,interface,71,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844987901,2,['interface'],['interface']
Integrability,"Add GitHub workflow to diff copy of LLVM and Clang, so we (hopefully) never forget to synchronize patches to LLVM and Clang into https://github.com/root-project/llvm-project/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117:86,synchroniz,synchronize,86,https://root.cern,https://github.com/root-project/root/pull/12117,1,['synchroniz'],['synchronize']
Integrability,Add HTTP Bearer token to Davix wrapper from config or env,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6818:31,wrap,wrapper,31,https://root.cern,https://github.com/root-project/root/pull/6818,1,['wrap'],['wrapper']
Integrability,Add README for the bulk IO interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3644:27,interface,interface,27,https://root.cern,https://github.com/root-project/root/pull/3644,1,['interface'],['interface']
Integrability,Add Rint as a dependency of rootcling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/11687,1,['depend'],['dependency']
Integrability,"Add Size() interface to TListOfFunctions and call this from GetNmethods,; so that we don't have to allocate memory for this. Profiled the peak meory performance in valgrind; total(B) ; master: 427,544,680; HEAD: 427,542,328",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1762:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/1762,1,['interface'],['interface']
Integrability,Add TMVA PyTorch Interface to Release Notes v6-24-00,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7624:17,Interface,Interface,17,https://root.cern,https://github.com/root-project/root/pull/7624,1,['Interface'],['Interface']
Integrability,"Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3670:50,interface,interface,50,https://root.cern,https://github.com/root-project/root/pull/3670,1,['interface'],['interface']
Integrability,Add a Tutorial for IntegratorMultiDim,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740:19,Integrat,IntegratorMultiDim,19,https://root.cern,https://github.com/root-project/root/issues/7740,1,['Integrat'],['IntegratorMultiDim']
Integrability,Add a chunking interface to TProcessExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/364:15,interface,interface,15,https://root.cern,https://github.com/root-project/root/pull/364,1,['interface'],['interface']
Integrability,Add a message for the long-deprecated Gtypes.h and Htypes.h headers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4489:6,message,message,6,https://root.cern,https://github.com/root-project/root/pull/4489,1,['message'],['message']
Integrability,Add a message to enable builtin_glew on latest CMake for Mac,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5238:6,message,message,6,https://root.cern,https://github.com/root-project/root/pull/5238,1,['message'],['message']
Integrability,"Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members.; Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6615:10,interface,interface,10,https://root.cern,https://github.com/root-project/root/pull/6615,4,"['integrat', 'interface']","['integrators', 'interface']"
Integrability,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8525:90,interface,interface,90,https://root.cern,https://github.com/root-project/root/pull/8525,1,['interface'],['interface']
Integrability,"Add a utility function to call `TEntryList::Enter` with entries in a certain range, instead of having to do the loop manually. Especially useful in PyROOT to avoid doing the same in a Python loop; ### Initial idea; ```py; >>> import ROOT; >>> e = ROOT.TEntryList(); >>> e.GetN(); 0; >>> ROOT.ROOT.Detail.EnterRange(e, 0, 10); >>> e.GetN(); 10; ```. Not sure about the namespace and the naming, can be discussed. ### Final interface. ```py; >>> import ROOT; >>> e = ROOT.TEntryList(); >>> e.EnterRange(0,10); >>> e.GetN(); 10; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740:422,interface,interface,422,https://root.cern,https://github.com/root-project/root/pull/8740,1,['interface'],['interface']
Integrability,Add a warning message to indicate that MethodDNN is deprecated and now MethodDL should be used. Improve handling of inputShapeLayout. InputBatchLayout is not really needed anymore and it is now removed from the tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5665:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/5665,1,['message'],['message']
Integrability,Add a warning message when the RooAddPdf normalization set is not defined (ROOT-10814),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7129:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/7129,1,['message'],['message']
Integrability,"Add an interface to gInterpreter, which can be used like:; ```; root [1] gInterpreter->HasPCMForLibrary(""libCore.so""); (bool) true; ```; With this, you can check if there is a pcm for a certain library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2915:7,interface,interface,7,https://root.cern,https://github.com/root-project/root/pull/2915,1,['interface'],['interface']
Integrability,Add and apply the new TThreadExecutor::Foreach interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/397:47,interface,interface,47,https://root.cern,https://github.com/root-project/root/pull/397,1,['interface'],['interface']
Integrability,Add clearer wrt ownership interface to produce TInterpreterValue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2795:26,interface,interface,26,https://root.cern,https://github.com/root-project/root/pull/2795,1,['interface'],['interface']
Integrability,Add dependency of Core on etc/gitinfo.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14145:4,depend,dependency,4,https://root.cern,https://github.com/root-project/root/pull/14145,1,['depend'],['dependency']
Integrability,Add dependency.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/417:4,depend,dependency,4,https://root.cern,https://github.com/root-project/root/pull/417,1,['depend'],['dependency']
Integrability,"Add deprecation messages in PQ2, old deamons and authentication tools",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1755:16,message,messages,16,https://root.cern,https://github.com/root-project/root/pull/1755,1,['message'],['messages']
Integrability,Add detailed error message if RNTupleWriter::Write() fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14677:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/14677,1,['message'],['message']
Integrability,Add error message for failing TGrid::Connect issues,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16426:10,message,message,10,https://root.cern,https://github.com/root-project/root/pull/16426,1,['message'],['message']
Integrability,"Add error message for overflow in converting double to ULong64_t. ## Changes or fixes:; This routine returns now an unsigned 64 bit integer; For large values, larger than 1.84e+19, we print an error message; advising to use the Trandom::PoissonD for such large values,; and return the max value UINT64_MAX. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14668:10,message,message,10,https://root.cern,https://github.com/root-project/root/pull/14668,3,"['message', 'rout']","['message', 'routine']"
Integrability,Add explicit dependency between Imt and G__Imt targets,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3227:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/3227,1,['depend'],['dependency']
Integrability,Add integrator multi dim tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14730:4,integrat,integrator,4,https://root.cern,https://github.com/root-project/root/pull/14730,1,['integrat'],['integrator']
Integrability,Add interface to add a friend in RFriendInfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10841:4,interface,interface,4,https://root.cern,https://github.com/root-project/root/pull/10841,1,['interface'],['interface']
Integrability,Add libRooFitMore: Move roofit file depending on GSL in a new library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536:36,depend,depending,36,https://root.cern,https://github.com/root-project/root/pull/4536,1,['depend'],['depending']
Integrability,Add missing dependencies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5233:12,depend,dependencies,12,https://root.cern,https://github.com/root-project/root/pull/5233,1,['depend'],['dependencies']
Integrability,Add missing dependency for Hist library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4477:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/4477,1,['depend'],['dependency']
Integrability,Add missing header to MonaLisa interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1163:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/1163,2,['interface'],['interface']
Integrability,"Add more functionality to new batch interface, notably; - The direct retrieval of spans from datasets / data histograms.; - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`.; - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6650:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/6650,2,['interface'],['interface']
Integrability,Add numbered LinkDef headers to dependencies of Core module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1374:32,depend,dependencies,32,https://root.cern,https://github.com/root-project/root/pull/1374,1,['depend'],['dependencies']
Integrability,"Add options to add extra dependencies in {REFLEX,ROOT}_GENERATE_DICTIONARY()",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4122:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/4122,1,['depend'],['dependencies']
Integrability,Add python version of RDF tutorial producing dimuon spectrum from CMS Open Data. This PR depends on #3571.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3631:89,depend,depends,89,https://root.cern,https://github.com/root-project/root/pull/3631,1,['depend'],['depends']
Integrability,"Add release notes for PyROOT (current and experimental), Jupyter notebook integration and command line tools.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3060:74,integrat,integration,74,https://root.cern,https://github.com/root-project/root/pull/3060,1,['integrat'],['integration']
Integrability,Add several improvements to use Unuran with the DistSampler interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8630:60,interface,interface,60,https://root.cern,https://github.com/root-project/root/pull/8630,1,['interface'],['interface']
Integrability,Add the physical column ID to the error message shown when a different compression setting than expected is encountered. This should help in locating potential bugs/mistakes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15654:40,message,message,40,https://root.cern,https://github.com/root-project/root/pull/15654,1,['message'],['message']
Integrability,"Add yet another fence in TClass::GetClass to avoid lookups and memory consumption. This PR aims to fix #9029. Give the sophisticated implementation of TClass::GetClass, perhaps it would be good to collect some feedback, especially by @pcanal . # This Pull request:; This PR avoids lookups and parsing in some cases.; One of the principles of the TClass::GetClass method implementation is to avoid as much as possible. . ## Changes or fixes:; This commit adds yet another fence in TClass::GetClass, checking if the name in input is the name of a known fundamental type or typedef to it.; In order to avoid code duplication, a routine previously available within the implementation of TClassEdit has been made available with a public API. ## Checklist:. - [v ] tested changes locally; - [v ] updated the docs (if necessary). This PR fixes #9029",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341:625,rout,routine,625,https://root.cern,https://github.com/root-project/root/pull/13341,1,['rout'],['routine']
Integrability,Added PyTorch TMVA Interface to release notes. PTAL @lmoneta,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7624:19,Interface,Interface,19,https://root.cern,https://github.com/root-project/root/pull/7624,1,['Interface'],['Interface']
Integrability,Added TChain-like interface to THnBase histograms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/212,1,['interface'],['interface']
Integrability,"Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:17,integrat,integration,17,https://root.cern,https://github.com/root-project/root/pull/11773,4,"['integrat', 'interface', 'wrap']","['integration', 'interfaces', 'wrapper', 'wraps']"
Integrability,Added commit message and rebased. Will merge if tests pass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-896034813:13,message,message,13,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-896034813,1,['message'],['message']
Integrability,Added dependencies to onepcm target to protect from running to early in build system.; ROOT_LIBRARY_TARGETS records all targets that is used for generation of allDict.cxx.pch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2687:6,depend,dependencies,6,https://root.cern,https://github.com/root-project/root/pull/2687,1,['depend'],['dependencies']
Integrability,Added dependency on builtins from object libraries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/899:6,depend,dependency,6,https://root.cern,https://github.com/root-project/root/pull/899,1,['depend'],['dependency']
Integrability,Added missing newline in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/832:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/832,1,['message'],['message']
Integrability,"Added numpy array interface for; - `TVec`; - `TVector`; - `TMatrix`; - `std::vector`. and data types; - `float`; - `double`; - `int` (only `TVec` and `std::vector`); - `long` (only `TVec` and `std::vector`); - `unsigned int` (only `TVec` and `std::vector`); - `unsigned long` (only `TVec` and `std::vector`). WIP:; - ~~Which classes to be added?~~; - ~~Which data types?~~; - ~~What about the `numpy` dependence of the unittest?~~ I asked for numpy to activate the test.; - ~~Segfault for `TMatrixT(""int"")` and `TVectorT(""int"")`?~~ Not a problem of this PR.; - ~~Check endianess during compile-time?~~ Checked for `R__BYTESWAP` with pre-compiler.; - ~~What about histogram classes?~~ Not possible to maintain same return structure than `numpy.hist` solely by tweaking the array interface (that was the actual idea); - ~~What about the unsigned types?~~ Done for `std::vector` and `TVec`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1753:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/1753,3,"['depend', 'interface']","['dependence', 'interface']"
Integrability,"Added support for the VecGeom library as external package (-Dvecgeom). Creating new library libConverterVG within geom module. This contains the conversion interface for ROOT shapes into vecgeom ones, activated using the plugin mechanism from ROOT. Included also the class TGeoVGShape bridging TGeoShape methods to either VecGeom solid (navigation) or existing ROOT shape (visualisation and the rest). The conversion can be done once a ROOT geometry is in memory using:; TVirtualGeoConverter::Instance()->ConvertGeometry(); Once this is done, all TGeo functionality and tests can be accessed as for a standard TGeo geometry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/156:156,interface,interface,156,https://root.cern,https://github.com/root-project/root/pull/156,4,"['bridg', 'interface']","['bridging', 'interface']"
Integrability,"Added the PR description to the commit message, but the test passed. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1028#issuecomment-330916611:39,message,message,39,https://root.cern,https://github.com/root-project/root/pull/1028#issuecomment-330916611,1,['message'],['message']
Integrability,Adding missing dependency to PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802:15,depend,dependency,15,https://root.cern,https://github.com/root-project/root/pull/2802,1,['depend'],['dependency']
Integrability,Adding runtime_options and add dependencies between rootcling invocations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/877:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/877,1,['depend'],['dependencies']
Integrability,Addition of Unique Ptr type Open interface with implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/14017,1,['interface'],['interface']
Integrability,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12695:482,message,message,482,https://root.cern,https://github.com/root-project/root/pull/12695,1,['message'],['message']
Integrability,Addresses point 9 in the HEP-CCE/SOP interface review.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16557:37,interface,interface,37,https://root.cern,https://github.com/root-project/root/pull/16557,1,['interface'],['interface']
Integrability,Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3995:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/3995,2,['interface'],['interface']
Integrability,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:333,protocol,protocol-dependent,333,https://root.cern,https://github.com/root-project/root/pull/3030,3,"['depend', 'protocol', 'rout']","['dependency', 'protocol-dependent', 'routine']"
Integrability,Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2913:78,integrat,integrates,78,https://root.cern,https://github.com/root-project/root/pull/2913,1,['integrat'],['integrates']
Integrability,Adjust commit message which I think caused a false positive on windows because of this string: `test/ntuple_storage_daos.cxx:5:33: error:`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8172#issuecomment-840572493:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/8172#issuecomment-840572493,1,['message'],['message']
Integrability,"After a few private discussions, I could not find a better compromise than `std::cerr` to report the event loop was interrupted: `Error` (and probably `Warning`) are a no-go if we want to keep the original exception information, because because certain experiment frameworks modify `Error` itself to throw. `Info` and `Print` send the wrong message. This way, independently of users catching the exception caught or not, they should have a full understanding of what happened.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5214#issuecomment-604439784:341,message,message,341,https://root.cern,https://github.com/root-project/root/pull/5214#issuecomment-604439784,1,['message'],['message']
Integrability,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7479:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/7479,1,['integrat'],['integration']
Integrability,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that. The problem was reported in the ROOT forum: https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7478:26,integrat,integration,26,https://root.cern,https://github.com/root-project/root/pull/7478,1,['integrat'],['integration']
Integrability,"After considering with @lmoneta, I disabled the hanging stress test. It was meant to test the pub-sub connection between master and workers, but this is in fact already done in the `Messenger` constructor now. The ctor connection check is also more robust than the stress test, so it is unnecessary. I also removed remaining debug prints. Ready to merge, from my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-979458753:94,pub-sub,pub-sub,94,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-979458753,1,['pub-sub'],['pub-sub']
Integrability,"After discussion, we only want to use `RRawFile` for files of dynamic type `TFile`, `TDavixFile`, and `TNetXNGFile`. Otherwise the native `TFile` (subclass) is wrapped in a `RRawFileTFile`. FYI @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15246:160,wrap,wrapped,160,https://root.cern,https://github.com/root-project/root/pull/15246,1,['wrap'],['wrapped']
Integrability,"After giving RooFit's categories a new interface, a lot of legacy code was left in place - the new categories support both the old and new interface.; The PR was split in two parts partly for testing that old code would still work, partly to make #5502 smaller.; Here, the big cleanup happens:; - Most uses of the legacy interface are replaced with the new interface; - Now-unused classes are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5514:39,interface,interface,39,https://root.cern,https://github.com/root-project/root/pull/5514,4,['interface'],['interface']
Integrability,"After having install XPM headers, I tried to build root to not repeat the same error but had this:; Making include/compiledata.h; g++ -O2 -DNDEBUG -pipe -m64 -std=c++11 -Wshadow -Wall -W -Woverloaded-virtual -fPIC -Iinclude -pthread -MMD -MP -o core/base/src/TObject.o -c /home/julien/projects/root/core/base/src/TObject.cxx; In file included from include/TObject.h:16:0,; from /home/julien/projects/root/core/base/src/TObject.cxx:38:; include/RConfigure.h:39:2: error: invalid preprocessing directive #@; #@has_found_attribute_always_inline@ R__HAS_ATTRIBUTE_ALWAYS_INLINE /**/; ^. I searched about this error and found https://root-forum.cern.ch/t/compile-error-related-to-directive-in-rconfigure-h/23546/3. I also tried to follow the INSTALL file but:; 1) there's not ""root"" directory but there's a ""rootx"" directory; however ""cmake ../rootx"" (from <main dir>/build) displays some config and seems ok; 2) ""cmake --build ."" does nothing (no console message, no build) idem for ""make -j"". In brief, I don't know how to build :-(. I'm on x86-64 with Debian testing:; gcc (Debian 7.2.0-12) 7.2.1 20171025; cmake version 3.9.3; ldd (Debian GLIBC 2.24-17) 2.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-341512534:951,message,message,951,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-341512534,1,['message'],['message']
Integrability,"After merging this PR, the following RooFit commits in ROOT `master` (as of `7b1e9929c2`) are the ones that are not in `v6-28-00-patches` (as of `e41ae090ff4`). ```txt; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630#issuecomment-1498932509:843,depend,dependency,843,https://root.cern,https://github.com/root-project/root/pull/12630#issuecomment-1498932509,2,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"After merging this PR, the following commits in ROOT `master` (as of `6afa795f7e`) are the ones that are not in `v6-28-00-patches` (as of `af1ddec8fd`).; ```txt; 6afa795f7e [RF][HS3] Return node& in `set_seq()` and `set_map()` of JSON interface; 715db60b77 [RF][HS3] Add Luminosity parameter to HS3 HistFactory; 6059aad9df [RF][HS3] Fix small inconsistencies between old and HS3 HistFactory; ed3e269a70 [RF][HS3] Achieve HistFactory JSON1 -> WS -> JSON2 closure; d682e4da87 [RF][HS3] Add ROOT version info to exported JSON files; 5053f612b6 [RF][HS3] Work around the spurious weightVar problem in Asimov data; 52c0cff578 [RF][HS3] Export binned RooDataSets just like the RooDataHists; 7f364da7aa [RF][HS3] Make `RooJSONFactoryWSTool::name()` more predictable; d8c8739b0b [RF][HS3] Use info from simultaneous pdfs to split combined datasets; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 2bb0f40e74 [ci] Enable more on mac13; make it a diff to global.txt.; ecf76dfbe7 Suppress gif format from StressGraphics (#12611); 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`; fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`; 9a605d7f35 [RF][HS3] Make `combined_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620#issuecomment-1497698813:235,interface,interface,235,https://root.cern,https://github.com/root-project/root/pull/12620#issuecomment-1497698813,1,['interface'],['interface']
Integrability,"After merging this PR, the following commits in ROOT `master` (as of `6dcc352289`) are the ones that are not in `v6-28-00-patches` (as of `c512572f9973`). ```txt; 41370dd378 [RF] Make it possible to use parameter titles in `RooAbsPdf::paramOn()`; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 3f925503b4 [RF] Fix memory leaks from `RooAbsL::getParameters()`; fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`; 9a605d7f35 [RF][HS3] Make `combined_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public.""; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for diffe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:882,depend,dependency,882,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['depend'],['dependency']
Integrability,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-535583488:61,depend,dependencies,61,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-535583488,4,['depend'],"['dependencies', 'dependency']"
Integrability,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12521:47,interface,interfaces,47,https://root.cern,https://github.com/root-project/root/pull/12521,3,"['interface', 'wrap']","['interface', 'interfaces', 'wraps']"
Integrability,"After recent change I get compiler error with `-Ddev=On` option like:. ```; tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:; /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here; /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]; 99 | if (fDim < 0 || fDim > 2) {; | ~~~~~^~~; ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better ; checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9453:638,message,message,638,https://root.cern,https://github.com/root-project/root/issues/9453,1,['message'],['message']
Integrability,"After removing globbing in core module, if to fetch a fresh master; some headers were not able to get a valid relative path causing next error:; -- /home/oksana/CERN_sources/root/builds/include/TArrayF.h; CMake Error at cmake/modules/RootNewMacros.cmake:292 (message):; Header path '/home/oksana/CERN_sources/root/builds/include/TArrayF.h'; TArrayF.h is not relative!; Call Stack (most recent call first):; core/base/CMakeLists.txt:232 (ROOT_GENERATE_DICTIONARY); Adding extra replacement pattern, matching - $CMAKE_BUILD_DIR/include, fixes issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2554:259,message,message,259,https://root.cern,https://github.com/root-project/root/pull/2554,1,['message'],['message']
Integrability,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14142:247,wrap,wrapping,247,https://root.cern,https://github.com/root-project/root/pull/14142,2,"['depend', 'wrap']","['depends', 'wrapping']"
Integrability,"After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/6632,7,"['Integrat', 'integrat', 'interface']","['Integrating', 'integrator', 'integrators', 'interface']"
Integrability,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:370,rout,routine,370,https://root.cern,https://github.com/root-project/root/issues/11867,4,['rout'],['routine']
Integrability,"After updating ROOT to 026a1a701b, the first error is gone. But dictionary generation still fails due to ""Missing lambda call operator"". Build log: [link](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-2c2cf9/30616/build.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1429784113:213,integrat,integration,213,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1429784113,1,['integrat'],['integration']
Integrability,"Agreed - the interface is awkward. However, since I wanted any use of the interface to go through the `ROOT::Experimental` namespace, I couldn't come up with anything cleaner. Suggestions are welcome!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-330233763:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-330233763,2,['interface'],['interface']
Integrability,"Agreed today at I/O meeting that we need to remind ourselves and investigate these questions. I'm okay with merging this PR if e.g. @hahnjo could create a new issue with the above questions - this seems to indicate a bug, whether it's a missing error message or an ignored linkdef entry or whatever it is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13238#issuecomment-1645710400:251,message,message,251,https://root.cern,https://github.com/root-project/root/pull/13238#issuecomment-1645710400,1,['message'],['message']
Integrability,"Ah I didn't realize that was you too! Nice, thanks a lot for your contribution! I'm thinking now how this can be further extended to cover also the class of crystal ball functions with asymmetric Gaussian core. Right, there has been no new release in some time. Hmm what about this line in the error message here:; ```; ld: library not found for -lCheckFix; ```; What is `CheckFix`, is that also some custom library? I don't think it's part of ROOT. Maybe it's also a Mac related issue, which I can't reproduce on Linux unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782167119:300,message,message,300,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782167119,1,['message'],['message']
Integrability,"Ah, I know what this is, the ""important"" error message is:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available.; ```. in other words at the point `Snapshot` creates the branch `Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]`, the branch that contains the size, `Lambda_DTFL_KS_nPV`, has not been declared yet. And indeed we changed the order in which `Snapshot` creates output branches between 6.24 and 6.26, internally. Resolving https://github.com/root-project/root/issues/6932 would fix this issue, and I think it's the way to go. In the meanwhile, you can work around the issue by explicitly pass to `Snapshot` the list of columns to write, putting `Lambda_DTFL_KS_nPV` before `Lambda_DTFL_KS_M`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920#issuecomment-1177751857:47,message,message,47,https://root.cern,https://github.com/root-project/root/issues/10920#issuecomment-1177751857,1,['message'],['message']
Integrability,"Ah, I need to update a test reference, the error message slightly changed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11307#issuecomment-1235374946:49,message,message,49,https://root.cern,https://github.com/root-project/root/pull/11307#issuecomment-1235374946,1,['message'],['message']
Integrability,"Ah, sorry @AdvaitDhingra . Here it is:. ```; [ RUN ] TString.Basics; Error in <TString::Replace>: Negative number of replacement characters!; /Users/sftnight/build/workspace/root-pullrequests-build/root/test/unit_testing_support/ROOTUnitTestSupport.h:79: Failure; Value of: Seen; Expected: starts with ""Error in <TString::Append>: ""; Actual: ""Error in <TString::Replace>: Negative number of replacement characters!\n""; /Users/sftnight/build/workspace/root-pullrequests-build/root/test/unit_testing_support/ROOTUnitTestSupport.h:86: Failure; Value of: Seen; Expected: is equal to ""Error in <TString::Append>: Negative length!\n""; Actual: ""Error in <TString::Replace>: Negative number of replacement characters!\n""; ```. (you can also run the test locally if you compile ROOT with your changes). Anyway, looks like our expected error message does not match the actual error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-778183289:832,message,message,832,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-778183289,2,['message'],['message']
Integrability,"Ah, too late— I was just looking at this request and wanted to comment on the `return_labels`. If you want the output Numpy array to carry labels, you could make it a [record array](https://docs.scipy.org/doc/numpy-1.14.0/user/basics.rec.html). That way, the user wouldn't have to be involved in asking for labels, unpacking a tuple, or matching labels in a list with arrays in another list. Also, the `pandas.DataFrame` constructor can take a record array as a single argument, making it very easy to wrap the AsMatrix output, with column labels, in Pandas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1872#issuecomment-384259318:502,wrap,wrap,502,https://root.cern,https://github.com/root-project/root/pull/1872#issuecomment-384259318,1,['wrap'],['wrap']
Integrability,All `RDataSource` based datasources are responsible by themselves to return something feasible via the `RDataSource::GetLabel` interface. I can only put the `TTree` and `trivial/empty/whatever` return values.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7828#issuecomment-818567786:127,interface,interface,127,https://root.cern,https://github.com/root-project/root/issues/7828#issuecomment-818567786,1,['interface'],['interface']
Integrability,All feedback integrated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3746#issuecomment-487528334:13,integrat,integrated,13,https://root.cern,https://github.com/root-project/root/pull/3746#issuecomment-487528334,1,['integrat'],['integrated']
Integrability,"All of the code example/output in the PR description corresponds to with this PR included. Repeating the lookup without diagnostic suppression doesn't give the correct error message again; (this corresponds to the ""call attempt 1"" case in the output from test.py in the PR description). ie with superfluous debug output snipped out:; ```; declare ret True; creating helper; calling helper; call attempt 0; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug3/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; Failed to instantiate ""call_helper(Helper<vector<double> >*)""; Failed to instantiate ""call_helper(Helper<vector<double> >)""; call attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; return helper();; ^~~~~~; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1460106107:174,message,message,174,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1460106107,1,['message'],['message']
Integrability,Allow to use root as dependency using FetchContent,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8941:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/8941,1,['depend'],['dependency']
Integrability,Allow to use root as dependency using `FetchContent`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8923:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/issues/8923,1,['depend'],['dependency']
Integrability,"Already done :) The PR message is generated from the commit message!. Cheers,; Kim. > On 30 Apr 2018, at 18:17, Guilherme Amadio <notifications@github.com> wrote:; > ; > Could you please add to the commit message the description of your changes above? It's useful when looking at the log. Thanks.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958#issuecomment-385454644:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/1958#issuecomment-385454644,3,['message'],['message']
Integrability,"Alright, I've put in the comments from @etejedor (thanks!). Now we've a refined version regarding the user interface:. ```python; @ROOT.DeclareCppCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.CppCallable.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << CppCallable::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""CppCallable::f(x)""); ```. You can set an optional name. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", name=""g""); def f(x); return 2.0 * x. ROOT.CppCallable.g(21.0) # Returns 42; ```. By default, we try numba first and then fall back to the generic implementation. You can force only numba using `numba_only=True` as optional argument. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", numba_only=True); def f(x); return 2.0 * x; ```. In addition, you can set a `verbose` flag to let PyROOT tell you if the decorator falls back to the generic implementation. ```python; @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); def f(x); return ROOT.std.string(str(x)). ROOT.CppCallable.f(x); # 1) Throws Python warning:; # /home/stefan/foo.py:5: RuntimeWarning: Failed to compile Python callable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:107,interface,interface,107,https://root.cern,https://github.com/root-project/root/pull/3488,2,"['Inject', 'interface']","['Inject', 'interface']"
Integrability,"Alright, let's see :). 1. [GetSize](https://root.cern.ch/doc/master/classTCollection.html#af0ca154693eeb1e9d9a0ff3a8d43e466) returns the capacity of the object, you need to use `GetEntries` for the number of elements (I know, terrible naming). That should solve number 1.; 2. that's annoying (and a bug to fix, of course) but you can work around it by passing the list through a `std::sort` and a [`std::unique`](https://en.cppreference.com/w/cpp/algorithm/unique) to remove duplicates; 3. as the error message says, you need to generate dictionaries for `RVec<ROOT::Math::PtEtaPhiMVector>` for ROOT to know how to read/write that type. For 3., some examples on generating dictionaries are at https://github.com/eguiraud/root_dictionaries_tutorial .; As a quick workaround, adding these lines before the `reproduce` function:. ```cpp; #ifdef __CLING__; #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;; #pragma link C++ nestedclasses;; #pragma link C++ class ROOT::VecOps::RVec<ROOT::Math::PtEtaPhiMVector>;; #endif; ```. and then executing `root -l -b -q reproduce.C+` should generate the dictionaries you need. Then compiling and executing `reproduce.C` in that same directory should work (it does for me). I hope this helps!; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240#issuecomment-964982216:503,message,message,503,https://root.cern,https://github.com/root-project/root/issues/9240#issuecomment-964982216,1,['message'],['message']
Integrability,"Alright, thanks for the clarification! Then you need to rebase this PR now and force-push to the `roofit-dev/offsetting-teststatistics-interface` Maybe we can get around having to open a new PR just for the rebasing this time, to not spam the list of closed PRs to ROOT too much. If I remember correctly, the problem was that `roofit-dev` didn't allow force pushes? Maybe this can be changed? Thanks for considering this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11650#issuecomment-1327347048:135,interface,interface,135,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1327347048,1,['interface'],['interface']
Integrability,"Alright. Indeed the extreme case in which a user sets `fgTasksPerWorker` to `1` but anyway ends up with one task per file might be surprising if we call it `SetMaxTasksPerWorker` (EDIT: but also if we call it `SetTasksPerWorker`). :thinking: `SetTasksPerWorkerHint`? That should manage user expectations, and I can add a docstring explaining that we will do our best to honor that given internal constraints. It's verbose, but it's an expert interface, I'd rather be verbose than opaque.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7106#issuecomment-770852867:442,interface,interface,442,https://root.cern,https://github.com/root-project/root/pull/7106#issuecomment-770852867,1,['interface'],['interface']
Integrability,Also adjust `rfield_check` that was checking the wrong message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16627:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/16627,1,['message'],['message']
Integrability,"Also any suggestion for testing is probably better to go as PR against this base branch:; https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2; which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable); https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1; A PR against this branch could be tested (for integration, not for performance) right away. ; This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4088#issuecomment-511359239:505,integrat,integration,505,https://root.cern,https://github.com/root-project/root/pull/4088#issuecomment-511359239,1,['integrat'],['integration']
Integrability,Also avoid some heap allocations of `RooArgSet`s in `RooAbsPdf`. See commit messages for more information. The leak was a problem reported in the forum:; https://root-forum.cern.ch/t/roomomentmorph-slow-memory-leak/45062,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8238:76,message,messages,76,https://root.cern,https://github.com/root-project/root/pull/8238,1,['message'],['messages']
Integrability,Also backports for 6.20 and 6.18 are required - original error message was about for v6.18.04,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5209#issuecomment-603294300:63,message,message,63,https://root.cern,https://github.com/root-project/root/pull/5209#issuecomment-603294300,1,['message'],['message']
Integrability,Also fix TMVA-IMT dependencies and improve some of the memory allocations in LossFunction.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2632:18,depend,dependencies,18,https://root.cern,https://github.com/root-project/root/pull/2632,1,['depend'],['dependencies']
Integrability,Also fix/reduce library dependency for libRHTTP. Resolves #12766,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12798:24,depend,dependency,24,https://root.cern,https://github.com/root-project/root/pull/12798,1,['depend'],['dependency']
Integrability,Also make isBinnedDistribution depend on the vars rather than always return true. ## Changes or fixes:. Makes ParamHistFunc more flexible/powerful. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10516:31,depend,depend,31,https://root.cern,https://github.com/root-project/root/pull/10516,1,['depend'],['depend']
Integrability,"Also, `ctest -R minuit2` gives me; ```; 82% tests passed, 3 tests failed out of 17. Label Time Summary:; tutorial = 5.25 sec*proc (3 tests). Total Test time (real) = 19.52 sec. The following tests FAILED:; 	 80 - minuit2-Quad1FMain (Failed); 	 90 - minuit2-ReneTest (Failed); 	 93 - minuit2-testMinimizer (Failed); Errors while running CTest; ```; However, these may not be due to your changes. The first of the 3 tests above also fails on the master branch for me. The error is similar between tests:; ```; Start 80: minuit2-Quad1FMain. 80: Test command: /usr/bin/cmake ""-DCMD=/home/amadio/build/gcc7.3/math/minuit2/test/Quad1FMain"" ""-DSYS=/home/amadio/build/gcc7.3"" ""-P"" ""/home/amadio/src/root/cmake/modules/RootTestDriver.cmake""; 80: Test timeout computed to be: 1500; 80: Info --> MPIProcess::StartMPI: Start MPI on #0 processor; 80: Error --> MPIProcess::MPIProcess: more processors than elements!; 80: application called MPI_Abort(MPI_COMM_WORLD, -1) - process 0; 80: [unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=-1; 80: :; 80: system msg for write_line failure : Bad file descriptor; 80: Info --> MPITerminate:: End MPI on #0 processor; 80: CMake Error at /home/amadio/src/root/cmake/modules/RootTestDriver.cmake:232 (message):; 80: error code: 255; 80: ; 80: ; 1/1 Test #80: minuit2-Quad1FMain ...............***Failed 0.03 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-369928210:1237,message,message,1237,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-369928210,1,['message'],['message']
Integrability,"Also, taggin the commit with something like `[RDF] <your short message>` is helpful for the commit history. Further, take care that you have a ""short head message"" and a ""body"", if you do it like this:. ```; [RDF] Fix tutorial df103. <Here goes the long explanation!>; ```. The long explanation the shows only up if you click on the commit on GitHub, which is a nice thing!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221#issuecomment-604879862:63,message,message,63,https://root.cern,https://github.com/root-project/root/pull/5221#issuecomment-604879862,2,['message'],['message']
Integrability,"Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:; https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13637:46,message,message,46,https://root.cern,https://github.com/root-project/root/pull/13637,1,['message'],['message']
Integrability,"Also: the issue is https://sft.its.cern.ch/jira/browse/ROOT-9736, not ROOT-9959 as commit messages and PR title imply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3749#issuecomment-487381107:90,message,messages,90,https://root.cern,https://github.com/root-project/root/pull/3749#issuecomment-487381107,1,['message'],['messages']
Integrability,"Although padding is implementation-dependent, most add enough padding at the end to comply with the requirements of the type with strictest alignment.; Given that `GetValueSize()` is used to allocate memory for the described type, not accouting trailing padding may cause issues. `ROOT::Experimental::RFieldDescriptor::CreateField()` has a direct use of RRecordField. Despite it seems to be working in all tested platforms, be on the safe side and add this padding. This, does not affect derived classes `RPairField` and `RTupleField`, that override determination of the size of the type. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10790:35,depend,dependent,35,https://root.cern,https://github.com/root-project/root/pull/10790,1,['depend'],['dependent']
Integrability,Always link dependencies for external projects,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3050:12,depend,dependencies,12,https://root.cern,https://github.com/root-project/root/pull/3050,1,['depend'],['dependencies']
Integrability,"Am I afraid but changing how the enable_if templation is done is not going to be trivial I think. Firstly, the suggested 'second method' of moving the enable_if to the template parameters does not seem to work with the `DisplacementVector::Unit` method as then the method no longer depends directly on the SCALAR type. So the only option I think is to use a third method which is a hidden parameter. i.e. ``` ; template < typename SCALAR = Scalar >; DisplacementVector3D Unit( typename std::enable_if<std::is_arithmetic<SCALAR>::value,SCALAR>::type* = nullptr ) const {; const auto tot = R();; return tot == 0 ? *this : DisplacementVector3D(*this) / tot;; }; ```. Frankly, I consider this ugly as it has introduced a hidden parameter to the otherwise parameter-less Unit() method. Is this really preferred to templating on the return type. The other issue, and this is one I have run into before is I am unable to figure out how to the switch between the scalar and vector versions of the `Unit()` method with this technique. The problem is the hidden parameter types has to be different, so if I do something like. ``` ; template < typename SCALAR = Scalar >; DisplacementVector3D Unit( typename std::enable_if<!std::is_arithmetic<SCALAR>::value,void>::type* = nullptr ) const {; {; SCALAR tot = R();; tot(tot == SCALAR(0)) = SCALAR(1);; return DisplacementVector3D(*this) / tot;; }; ```. All hell breaks loose and I get a stream of compilation errors, which are pretty non trivial to decode... I have been in this position before and also found the templating on the return type just easier to get working... . I respect your opinions of course, its just if you want to change how this is done I think I am going to need some help to do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286487729:282,depend,depends,282,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286487729,1,['depend'],['depends']
Integrability,Am I right in thinking this effectively makes Java a required dependency for ROOT with it's default flags? Should Java be added to the lists at https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793429283:62,depend,dependency,62,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793429283,2,['depend'],"['dependencies', 'dependency']"
Integrability,"Am skeptical this could ever have worked even in older releases, because looking at the code I see the method ""MakeSingleChannelWorkspace"" where the measurement object is passed, and therefore it is assuming any parameter in the constant list *must* be present in the channel???. Tomas do you get the same error message about ""cannot find the variable"" in 6.28, but it succeeds? It might be blind luck that it did. . If so the fix is a simple one to just skip over said variable if its not found in the channel.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225#issuecomment-1858155447:312,message,message,312,https://root.cern,https://github.com/root-project/root/issues/14225#issuecomment-1858155447,1,['message'],['message']
Integrability,An Info message is printed when this happens.; This resolves [ROOT-9270](https://sft.its.cern.ch/jira/browse/ROOT-9270).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1758:8,message,message,8,https://root.cern,https://github.com/root-project/root/pull/1758,1,['message'],['message']
Integrability,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1341802449:38,depend,depend,38,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449,1,['depend'],['depend']
Integrability,"An even slimmer reproducer (also fails intermittently):; ```python; import cppyy; vec = cppyy.gbl.std.vector['char'](['a']); vec.__real_data(); ```; where `__real_data()` is the original `data()` of the vector. I can't reproduce with e.g. a `vector[int]`, so the problem could be in the wrapping of the result of `__real_data()` into a Python string.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9632#issuecomment-1021158340:287,wrap,wrapping,287,https://root.cern,https://github.com/root-project/root/issues/9632#issuecomment-1021158340,1,['wrap'],['wrapping']
Integrability,"An interactive binder: ; [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gist/agoose77/7e9a8c146a7dc68c87f47678d1f2e51c/HEAD?urlpath=%2Flab). Run all cells in each notebook, and then look at the coordinates in the status-bar as the cursor moves over the plot. In the un-patched case, the input lag increases with time (as more messages are buffered behind the calls to `sleep`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7684#issuecomment-806919299:352,message,messages,352,https://root.cern,https://github.com/root-project/root/issues/7684#issuecomment-806919299,1,['message'],['messages']
Integrability,And I believe the dependency of RooFit on RooFitCore was added at some point.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-387385412:18,depend,dependency,18,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-387385412,1,['depend'],['dependency']
Integrability,"And for info (if it's relevant), I managed to build ROOT v6.28.04 with gcc 9.4.0 and `-DCMAKE_CXX_STANDARD=14` without any problem (so apparently it depends on the version of gcc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453#issuecomment-1678831167:149,depend,depends,149,https://root.cern,https://github.com/root-project/root/issues/13453#issuecomment-1678831167,1,['depend'],['depends']
Integrability,"And what we've learned from the past 15 years: ""modularization"" means 100 different things, and not the same for any pair of people talking about it :-) Which is why I use the term ""lazy building"" for your ""build parts of ROOT later"" and you could use ""libdep"" or ""builddep"" for reducing or fixing/formalizing the library or build dependencies. Or ""incldep"" for header/including dependencies. Just a couple of ideas, I'm not suggesting that you should follow them (this is not a PR review)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410166279:331,depend,dependencies,331,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410166279,2,['depend'],['dependencies']
Integrability,"Another aspect of the problem is the way in which nested parallelism is tackled. Given the current interface, TThreadExecutor, I think we are pushing all items of work in the global queue, therewith ignoring potential optimisations put in place by the scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-352740564:99,interface,interface,99,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-352740564,1,['interface'],['interface']
Integrability,"Another attempt to silence many `Warnings C4624` like for example:; ```; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::Smal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12416:617,message,message,617,https://root.cern,https://github.com/root-project/root/pull/12416,1,['message'],['message']
Integrability,Another comment: the headers are quite fat. Perhaps we can have in the headers the interfaces and have cxx files with the implementation and helper functions hidden from the interface (and the pch)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-297903232:83,interface,interfaces,83,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-297903232,2,['interface'],"['interface', 'interfaces']"
Integrability,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1410720055:1053,message,message,1053,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055,1,['message'],['message']
Integrability,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-822299845:432,depend,dependent,432,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-822299845,1,['depend'],['dependent']
Integrability,Any class that inherits from TObject must have a ClassDef otherwise some the routines are inconsistent (like IsA() ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-334460303:77,rout,routines,77,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-334460303,1,['rout'],['routines']
Integrability,"Anyway it would be good to add deprecation warnings to existing interfaces.; Close this issue when you feel appropriate, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308#issuecomment-787410554:64,interface,interfaces,64,https://root.cern,https://github.com/root-project/root/issues/7308#issuecomment-787410554,1,['interface'],['interfaces']
Integrability,"Apologies for joining the party only after it's over. My opinion:. `ptr` is fine because I don't see how (regular) people would notice / care *when* the cost occurs, this should be opaque to them. If they ever notice, they can be told and learn. `TTree::Draw()` sort of suffers from a similar mismatch of interface announcement (""register in the pad"") and runtime cost that `ptr` has in this case. And we survived. I find the argument convincing that `ptr`, unlike `handle`, conveys the usage: `handle` often means ""opaque thing that you don't know what to do with but someone else will"" and is thus not very helpful for interfaces. I find the usage cost for separating trigger and value access too high.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381906840:305,interface,interface,305,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381906840,2,['interface'],"['interface', 'interfaces']"
Integrability,"Apologies for the brevity before. In my attempts to set the alignment differently on the first and last labels, I found only one value seemed to be set. On trying to make a minimal reproducer, I'm finding that for certain, changing the LabelFont is not working if all labels are not set correctly. ```; python; >>> import ROOT; >>> h = ROOT.TH1D(""h"", """", 5, 0, 5); >>> for bin in range(h.GetXaxis().GetNbins()+1):; ... h.GetXaxis().ChangeLabel(bin, 10*bin, 4*bin, -1, -1, -1, """"); ...; >>> h.Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; >>> h = ROOT.TH1D(""h"", """", 5, 0, 5); for bin in range(11):; ... if bin < 2:; ... align = 11; ... elif bin > 7:; ... align = 12; ... else:; ... align = 13; ... h.GetXaxis().ChangeLabel(bin, 15*bin, .1, align, -1, 43, """"); ...; >>> h.Draw(); ```; Produced the attached axis, so the rotations are working, but a separate test suggests that alignments are not when the rotation is different than 0 (setting the rotation to 90 seems to produce identical alignment for all labels, as far as I can tell). Setting the pixel size to e.g. 10, of course, blows up those labels to greater-than-canvas size, they're being interpreted as fractions still. That is actually related to a problem I had a few days ago, accidentally passing fractional instead of integer (>1) values for size when the font precision is changed to absolute scale, but I'm not sure it's worth a warning or error message when it's being set. So, separate from the documentation: what is the appropriate way to find the number of labels? Trying to use the TAxis::GetLabels() method didn't lead me anywhere, maybe there's a good example somewhere though; <img width=""694"" alt=""ChangeLabels"" src=""https://user-images.githubusercontent.com/38217274/161010205-85424185-a64a-4829-992e-1982f16588d5.png"">; ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10279#issuecomment-1084252582:1446,message,message,1446,https://root.cern,https://github.com/root-project/root/issues/10279#issuecomment-1084252582,1,['message'],['message']
Integrability,Appears expired with the latest interface changes. Please reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10408#issuecomment-1983521284:32,interface,interface,32,https://root.cern,https://github.com/root-project/root/issues/10408#issuecomment-1983521284,1,['interface'],['interface']
Integrability,"Apple has switched to high-resolution timing for APFS, giving mu second resolution.; Ninja supports that since 1.9.0. BUT the binutils by Apple just write out zeros,; causing wrong time stamps and causing re-build events. CMake has worked around that by touching the library generated by Apple binutils,; to update its timestamp. That means:; On Apple (assuming Apple filesystem), with a recent Ninja, CMake has to be >= 3.14.4. This will be toned down to a WARNING message later - but for now, until we find the; CI nodes suffering from this, keep it as a FATAL_ERROR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6196:466,message,message,466,https://root.cern,https://github.com/root-project/root/pull/6196,1,['message'],['message']
