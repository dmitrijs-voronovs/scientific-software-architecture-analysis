quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"Ok, other than the dataframe tests, which are reported in https://github.com/root-project/root/issues/7366, the other tests have either been fixed, are being worked on (#7942), or the failure was a configuration issue on my machine (JupyROOT). I am closing this issue then, as it's not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825672249:29,test,tests,29,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825672249,2,['test'],['tests']
Testability,"Ok, so you are saying that it's not the mmaping to cause the problem, but the subsequent allocations due to some deserialisation. Ok, I checked and indeed the mmap is called with MAP_SHARED... Find in attachment the ROOTDEBUG=7 log. This is only for the component which reads the flat root files (i.e. only basic types). [log.txt](https://github.com/root-project/root/files/11745345/log.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1591050629:228,log,log,228,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1591050629,3,['log'],['log']
Testability,"Ok, thanks for the clarification! May I ask which tests are failing because of this warning? Normally, a warning should not make the test fail, so I'm curious to know what is exactly going on there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1828231550:50,test,tests,50,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1828231550,2,['test'],"['test', 'tests']"
Testability,"Ok, thanks! That should be sufficient for us to write a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6306#issuecomment-688382154:56,test,test,56,https://root.cern,https://github.com/root-project/root/pull/6306#issuecomment-688382154,1,['test'],['test']
Testability,"Ok, thanks. I will try to test locally first, then I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-365925258:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-365925258,1,['test'],['test']
Testability,"Ok, that seems more complex than the current logic :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10268#issuecomment-1082737758:45,log,logic,45,https://root.cern,https://github.com/root-project/root/pull/10268#issuecomment-1082737758,1,['log'],['logic']
Testability,"Ok, the installed went wrong. I re-did it and i see `qhelpgenerator` now.; I will test on a subset of the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-902733651:82,test,test,82,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-902733651,1,['test'],['test']
Testability,"Ok, the solution that we suggest is that the test support library will only be built if gtest is found on the system or `builtin_gtest` is switched on. Like this, we don't force a dependency on `gtest`, but if you want the test support library from ROOT without building all tests with `testing=ON`, then you can get it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396408609:45,test,test,45,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396408609,4,['test'],"['test', 'testing', 'tests']"
Testability,"Ok, then we should not assert failure from in test case. Let's just print out the information for reference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286571830:23,assert,assert,23,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286571830,2,"['assert', 'test']","['assert', 'test']"
Testability,"Ok, this fixed a few hundred tests that previously failed due to the redefinition of the macro.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/938#issuecomment-327142821:29,test,tests,29,https://root.cern,https://github.com/root-project/root/pull/938#issuecomment-327142821,1,['test'],['tests']
Testability,"Ok, this is tmva hitting the testing phase. The changes work as expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1712727473:29,test,testing,29,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1712727473,1,['test'],['testing']
Testability,"Ok, this seems to reproduce it for me: [pairdict.tar.gz](https://github.com/root-project/root/files/6392968/pairdict.tar.gz). ```; sh make.sh ; root [0] ; Attaching file test.root as _file0...; Warning in <TClass::Init>: no dictionary for class pair<int,MyClass::MyEnum> is available; (TFile *) 0x61800003d880; root [1]; ```. Let me know what I did wrong :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-828547023:170,test,test,170,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-828547023,1,['test'],['test']
Testability,"Ok, two things:. 1. Commit c680b3f adds some modifications that somehow got lost in my rebasing; this now makes everything pass on my laptop again.; 2. ... however, this was still based on master from 40620e494ec. After rebasing on 70f96ca797b, tests now fail on my laptop as well. So, it seems that something else in RooFit changed in the meantime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966#issuecomment-1185461213:245,test,tests,245,https://root.cern,https://github.com/root-project/root/pull/10966#issuecomment-1185461213,1,['test'],['tests']
Testability,"Ok, we reached the first milestone: the upgrade builds on all platforms :tada: . The next step is to investigate the failures in ROOT's tests (but please don't look at the last test report from the new CI, it's incomplete because I messed up the paths when uploading the results; it was done properly in https://github.com/root-project/root/pull/13310). We have a couple of failures across all platforms, and the easiest to understand is that LLVM 16 prepends `class` or `struct` less often for C++ class types. Eventually this comes down to (on `master`):; ```; root [0] struct A { A f(); };; root [1] A a; (A &) @0x7f8a3ca38000; root [2] struct A b; (struct A &) @0x7f8a33db2000; ```; whereas LLVM 16 now prints; ```; root [0] struct A { A f(); };; root [1] A a; (A &) @0x7f025c5a6000; root [2] struct A b; (A &) @0x7f025c5a0000; ```. Similarly the following used to output (on `master`):; ```; root [0] struct A { A f(); };; root [1] .Class A; ===========================================================================; struct A; SIZE: 1 FILE: ROOT_prompt_0 LINE: 1; List of member variables: -------------------------------------------------; List of member functions: -------------------------------------------------; filename line:size busy function type and name; (compiled) (NA):(NA) 0 public: struct A f();; ```; while with LLVM 16 we get; ```; (compiled) (NA):(NA) 0 public: A f();; ```; (funnily enough, `struct A { struct A f(); };` still outputs `public: struct A f();` for LLVM 16). This affects a couple of Cling tests and 3 ROOT tests: `roottest-cling-operator-runEqualTest`, `roottest-cling-template-separateDict-make`, and `roottest-cling-template-separateDictNamespace-make`. I propose we just update the expected reference output and be done with it. Is this fine with everyone? @pcanal @vgvassilev . edit: It's also the underlying reason for `roottest-cling-array-runarray1`, even though that test's `array1test_convert.sh` is really questionable to begin with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1649415992:136,test,tests,136,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1649415992,5,['test'],"['test', 'tests']"
Testability,"Ok. ; - Hard to say why the executable is not running on your mac. Could you, prease, also remove from the home folder files like .zevis-bla-bla-root ? Maybe that is the reason.; - Menawhile I've added to CI a test that runs the executable in batch mode. ; - Works fine for CentOS7 and CentOS8. But not for Newest mac on CI. And not on my old mac.; In both cases there are FPEs:; ```; + export CNDATAPREFIX=/Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/; + CNDATAPREFIX=/Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/; ++ pwd; ++ pwd; + /Users/runner/work/zevis/zevis/build/../some/install/dir/bin/zevis -b /Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_examples/45783_10.txt someout png; OSTYPE=darwin19; Variable ZARCH_TYPE is not set, looking for zevis.exe in the same directory; Warning in <TInterpreter::ReadRootmapFile>: class ZWebInfo found in libZevLib.dylib is already in libZCNClient.dylib ; Warning in <TClassTable::Add>: class ZWebInfo already in TClassTable; Using ZEVISDIR=/Users/runner/work/zevis/zevis/some/install/dir/share/zevis; Using CNDATAPREFIX=/Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/; Warning: fgets returned 0; Event list prepared, it is OK and contains 1 entries; Opening /Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/z/ntup/03/v08b/data/root/data_03_45783_45790_01.root; Error in <TStreamerInfo::Build>: TPolyLine3D, discarding: float* fP, illegal [3*fN] Array of 3-D coordinates (x,y,z). Error in <TStreamerInfo::Build>: ZPolygon2D, discarding: float* fP, illegal [3*fN] Points in world coordinates. *** Break *** floating point exception; Opening /Users/runner/work/zevis/zevis/build/../ZCNClient/eventlist_rootfiles/z/ntup/03/v08b/data/root/data_03_45783_45790_01.root; Entry 1: runnr=45783, eventnr=10, inputtree=orange, cnversion=v08b, scan=1 took 0.48 seconds ......... OK; It took 0 seconds, average time per event 0.48; [/usr/lib/system/libsystem_platf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-694162214:210,test,test,210,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-694162214,1,['test'],['test']
Testability,Ok. It looks ok for me also.; Let see what if the tests will pass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4151#issuecomment-524286663:50,test,tests,50,https://root.cern,https://github.com/root-project/root/pull/4151#issuecomment-524286663,1,['test'],['tests']
Testability,"Ok. Thanks to the prompt intervention of @andresailer (thanks!), we were even able to test this fix in the context of LCG builds, which are much more sophisticated than the ones of ROOT alone. This test was successful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1740403725:86,test,test,86,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1740403725,2,['test'],['test']
Testability,"Okay great, thank you very much for clarifying your usecase!. I'll close this issue then after I implemented your code as a unit test in ROOT such that the normalization is not allowed to break again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760#issuecomment-1326469300:129,test,test,129,https://root.cern,https://github.com/root-project/root/issues/11760#issuecomment-1326469300,1,['test'],['test']
Testability,"Okay too late - but you must be aware that there is no point in changing tutorials without running *all* the tests, ie including the tutorials. The rootspi build-root.cmake file (which should be known to some :-) ) shows that we build R on everything but Ubuntu 14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5229#issuecomment-605621643:109,test,tests,109,https://root.cern,https://github.com/root-project/root/pull/5229#issuecomment-605621643,1,['test'],['tests']
Testability,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-825113424:253,test,tests,253,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-825113424,1,['test'],['tests']
Testability,"Okay, so now I have removed all defaults from the 'new' ctor that anyone would use directly from the outside, if they would want to enable using a logical url. Since there are no more defaults, it will not be ambiguous anymore. The new one will still be used through the old ctor with sane defaults in all other/prior ways anyway. Could you please trigger the build again?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2751#issuecomment-472080619:147,log,logical,147,https://root.cern,https://github.com/root-project/root/pull/2751#issuecomment-472080619,1,['log'],['logical']
Testability,"Okay, something is weird here: The test now fails down to 6.22, maybe even more since I didn't test 6.20. But differently, here's a backtrace from 6.22:; ```; 2018: #0 0x00007f983e185eca llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x2693eca) ; 2018: #1 0x00007f983c03b341 (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x549341) ; 2018: #2 0x00007f983c03b7af (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x5497af) ; 2018: #3 0x00007f983c61b3cc clang::ASTReader::PassInterestingDeclsToConsumer() (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0xb293cc) ; 2018: #4 0x00007f983c5f2336 clang::ASTReader::FinishedDeserializing() (.part.2293) ASTReader.cpp:0:0 ; 2018: #5 0x00007f983c6ed089 clang::MultiplexExternalSemaSource::FinishedDeserializing() (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0xbfb089) ; 2018: #6 0x00007f983dcc138f clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x21cf38f) ; 2018: #7 0x00007f983dcc1445 clang::DeclContext::decls_begin() const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x21cf445) ; 2018: #8 0x00007f983be59a41 ROOT::TMetaUtils::CheckIOConstructor(clang::CXXRecordDecl const*, char const*, clang::CXXRecordDecl const*, cling::Interpreter const&) (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x367a41) ; 2018: #9 0x00007f983bef5821 TClingClassInfo::HasDefaultConstructor(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const (.part.271) TClingClassInfo.cxx:0:0 ; 2018: #10 0x00007f983befb564 TClingClassInfo::New(void*, ROOT::TMetaUtils::TNormalizedCtxt const&) const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x409564) ; 2018: #11 0x00007f984223a62f TClass::NewObject(void*, TClass::ENewType) const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCore.so+0x28562f) ; 2018: #12 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543#issuecomment-1010259909:35,test,test,35,https://root.cern,https://github.com/root-project/root/issues/9543#issuecomment-1010259909,2,['test'],['test']
Testability,"Okay, this is mostly a configuration problem from my side: I didn't install the `libssl-dev` package, so ROOT's configuration defaulted to `builtin_openssl` because `ssl` is `ON` but it couldn't find the OpenSSL headers. On Debian Unstable and Testing, this is a serious problem because it means we effectively end up with OpenSSL 1.1.1g (from the builtin, linked statically) *and* OpenSSL 3.0.8 (from the system, linked as a shared library) in *one process*. We are rather lucky that it doesn't blow up harder... @bellenot do you think we should add a check to detect this configuration (`xrootd AND NOT builtin_xrootd AND builtin_openssl`) and emit a hard error? The tricky part is that this can end up being the automatic choice, as I witnessed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1435932572:244,Test,Testing,244,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1435932572,1,['Test'],['Testing']
Testability,"Old test said:. > one of the reason of the failure is the fact that the first	; > clones array is empty!. https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/runNestedClones.C and https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/nestedclones.root are reproducing this (before it was removed, because roottest isn't a place to keep reproducers)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8744:4,test,test,4,https://root.cern,https://github.com/root-project/root/issues/8744,1,['test'],['test']
Testability,"Olivier, can you look over the PR? ; I tried to keep logic around `nostackb` - but it is not fully clear for me.; Changes already applied to master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5898#issuecomment-647540602:53,log,logic,53,https://root.cern,https://github.com/root-project/root/pull/5898#issuecomment-647540602,1,['log'],['logic']
Testability,"On 07/07/17 23:36, marsupial wrote:; >; > I appreciate your proposed solutions but I do not really have a; > lot of bandwidth nowadays to investigate why they do not work for; > us. You will probably see what's going wrong if you build this PR; > locally.; >; > I have built locally and don't see the issue (I don't even know what ; > I'm looking for). Both you and @pcanal <https://github.com/pcanal> ; > asked me to fix this and I spent actual time trying to figure out what ; > you guys were after and implementing a solution that has little cost ; > for both of us. I too suffer from lack time, so asking me to do work ; > then walking away without even giving a single example of what is ; > broken seems a bit rude....; >; Hm, for me the issue was obvious, sorry. You need to build ROOT, start ; it and type `int i`.; >; > Seriously, can I get one test that still fails with ; > https://reviews.llvm.org/D33529 ?; >; > If that cannot be done could @pcanal <https://github.com/pcanal> or ; > @Axel-Naumann <https://github.com/axel-naumann> at least verify that ; > after applying D33529 and setting |DynamicLibrary::SearchOrder = ; > SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)| 500+ ; > tests are broken?; >; Now trying with SO_LoadedLast.; >; > I would appreciate if we can coordinate next time such breaking; > changes before asking for a llvm review and land patches in these; > particularly sensitive areas.; >; > I explicitly added you to the list of reviewers for the original ; > patch, there is little more I can do than that. And more coordination ; > is exactly what I am trying to do now. If we cannot reach a conclusion ; > may I at least be added to review whatever your solution looks like?; >; > 1. I plan to remove the NDEBUG assert; >; > Already done in D33529; >; > 2. Make the std::vector<void*> a; > std::vector<llvm::PointerIntPair<void*, 1, bool>>; >; > How can you guarantee that the platform will deliver a pointer with ; > proper alignment for that?; >;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:854,test,test,854,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['test'],['test']
Testability,"On 30/06/17 11:37, Philippe Canal wrote:; >; > maybe we could convert the nice little example you pasted above; > into a gtest.; >; > Too soon. As mentioned by Axel, this is 'just' one of the symptom of ; > the unthread-safe modification of the list.; >; Aren't test cases testing for symptoms? How this failing example doesn't ; increase the coverage in that area?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312223743:262,test,test,262,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312223743,2,['test'],"['test', 'testing']"
Testability,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:308,Test,Test,308,https://root.cern,https://github.com/root-project/root/issues/8187,1,['Test'],['Test']
Testability,"On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the; following error:. ```; Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C...; In file included from input_line_10:1:; C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'; gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");; ~~~~~~^; CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):; error code: 1; ```. Using the same trick to get the Python executable name via; `gROOT->ProcessLine` that is also used in the other TMVA tutorials like; `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10379:948,test,testReport,948,https://root.cern,https://github.com/root-project/root/pull/10379,1,['test'],['testReport']
Testability,"On Windows, the type `ROOT::Experimental::ClusterSize_t` is resolved to the underlying type `ROOT::Experimental::RClusterSize`. `ROOT::Experimental::ClusterSize_t` is already in its canonical form and `typedef` resolution should not be attempted. TL;DR, if the type is resolved to `ROOT::Experimental::RClusterSize`, the logic in `RFieldBase::Create()` falls back to creating a `RClassField` instance, which is obviously not intended. This fixes the `ntuple_packing` test on Windows. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12657:321,log,logic,321,https://root.cern,https://github.com/root-project/root/pull/12657,3,"['log', 'test']","['logic', 'test', 'tested']"
Testability,"On Windows, we currently cannot generate all modules due to crashes, so some dictionaries are generated with the option `NO_CXXMODULE`. This information needs to be propagated and taken into account when those dictionaries are, in turn, specified as dependencies. This re-implements the logic reverted in commit 2d7373d47e (see the message for details) and closes #12591.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12602:287,log,logic,287,https://root.cern,https://github.com/root-project/root/pull/12602,1,['log'],['logic']
Testability,"On a different note, the test shown by @amadio is indeed a 'stress' test of the list of cleanups and it seems that it should not be since in 'actual' use case for the following reasons. A priori the problem appears only if the creation and destruction of TMemFile overlaps ... But I suspect we do create TMemFile in the middle of the processing ... If this is the case, we can 'mitigate' the problem (if nobody wants to tackle the RW lock yet) but updating TFile/TMemFile to not add itself (in those cases) to the list of files ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312232268:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312232268,2,['test'],['test']
Testability,"On a separate note, are the tests supposed to be green?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1719036132:28,test,tests,28,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1719036132,1,['test'],['tests']
Testability,"On apple M2 chips, LLVM assertion slow down the execution of the test suite (>2k tests) by some 20%. This PR aims to check whether this is the case on the Core i7 mac, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14650:24,assert,assertion,24,https://root.cern,https://github.com/root-project/root/pull/14650,3,"['assert', 'test']","['assertion', 'test', 'tests']"
Testability,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16492:796,test,test,796,https://root.cern,https://github.com/root-project/root/pull/16492,3,"['Test', 'test']","['Test', 'test']"
Testability,On my linux workstation I see a ~10% slowdown in single-thread benchmarks (same benchmarks as #2674 ) and some speedup in IMT executions (4s instead of 6s for h1analysis with many input files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2675#issuecomment-424342385:63,benchmark,benchmarks,63,https://root.cern,https://github.com/root-project/root/pull/2675#issuecomment-424342385,2,['benchmark'],['benchmarks']
Testability,"On my machine the build with `runtime_cxxmodule` one failed with:; ```; Assertion failed: (idx < size()), function operator[], file SmallVector.h, line 304.; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x000000010d8f248c llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 88; 1 rootcling_stage1 0x000000010d8f29d0 PrintStackTraceSignalHandler(void*) + 28; 2 rootcling_stage1 0x000000010d8f0908 llvm::sys::RunSignalHandlers() + 152; 3 rootcling_stage1 0x000000010d8f3744 SignalHandler(int) + 276; 4 libsystem_platform.dylib 0x000000018f51a584 _sigtramp + 56; 5 libsystem_pthread.dylib 0x000000018f4e9c20 pthread_kill + 288; 6 libsystem_c.dylib 0x000000018f3f6a30 abort + 180; 7 libsystem_c.dylib 0x000000018f3f5d20 err + 0; 8 rootcling_stage1 0x00000001059936b8 llvm::SmallVectorTemplateCommon<unsigned long long, void>::operator[](unsigned long) + 92; ....; 1.	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h:18:2: current parser token 'include'; Subprocess aborted; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377165354:72,Assert,Assertion,72,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377165354,1,['Assert'],['Assertion']
Testability,"On my platform I see following crash; ```; rootcling_stage1: /home/linev/git/root6/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::EnumDecl; From = clang::NamedDecl]: Assertion `Val && ""isa<> used on a null pointer""' failed.; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1cbdf]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a73e]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0x2d1a9ba]; /lib64/libpthread.so.0(+0x142d0)[0x7efbff6982d0]; /lib64/libc.so.6(gsignal+0x141)[0x7efbff15ffb1]; /lib64/libc.so.6(abort+0x127)[0x7efbff14955d]; /lib64/libc.so.6(+0x25431)[0x7efbff149431]; /lib64/libc.so.6(+0x34592)[0x7efbff158592]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xf7eba3]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xfaf9f5]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb65b4]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcb9d94]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd41d76]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd42411]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd48ea2]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd06fa]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcd1133]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xcc42d1]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd488e8]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1[0xd492f9]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser13ParseInternalEN4llvm9StringRefE+0x6b6)[0x747596]; /home/linev/build/root6/core/rootcling_stage1/src/rootcling_stage1(_ZN5cling17IncrementalParser7CompileEN4llvm9StringRefERKNS_18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5004#issuecomment-586356179:260,Assert,Assertion,260,https://root.cern,https://github.com/root-project/root/pull/5004#issuecomment-586356179,1,['Assert'],['Assertion']
Testability,"On my system I get; ```; The following tests FAILED:; 1061 - tutorial-roofit-rf208_convolution-py (Failed); 1063 - tutorial-roofit-rf210_angularconv-py (Failed); 1064 - tutorial-roofit-rf211_paramconv-py (Failed); 1095 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```. The reason seems to be that I'm building without FFTW, and while the macro versions of those tests are correctly vetoed:; https://github.com/root-project/root/blob/098dfcf94a3939597488fef9ee128b3d2e1e591f/tutorials/CMakeLists.txt#L191-L198; similar action is missing for the versions written in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8245:39,test,tests,39,https://root.cern,https://github.com/root-project/root/issues/8245,2,['test'],['tests']
Testability,"On some other place IMT could be used as well:. ```diff; diff --git a/tree/dataframe/test/dataframe_vary.cxx b/tree/dataframe/test/dataframe_vary.cxx; index 92ac2c8c67..12451030af 100644; --- a/tree/dataframe/test/dataframe_vary.cxx; +++ b/tree/dataframe/test/dataframe_vary.cxx; @@ -31,7 +31,7 @@ auto SimpleVariation(); return ROOT::RVecI{-1, 2};; }; ; -TEST(RDFVary, RequireExistingColumn); +TEST_P(RDFVary, RequireExistingColumn); {; ROOT::RDataFrame df(10);; EXPECT_THROW(; @@ -45,7 +45,7 @@ TEST(RDFVary, RequireExistingColumn); std::runtime_error);; }; ; -TEST(RDFVary, VaryTwiceTheSameColumn); +TEST_P(RDFVary, VaryTwiceTheSameColumn); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; EXPECT_THROW(; @@ -75,7 +75,7 @@ TEST(RDFVary, VaryTwiceTheSameColumn); std::logic_error);; }; ; -TEST(RDFVary, RequireVariationsHaveConsistentType); +TEST_P(RDFVary, RequireVariationsHaveConsistentType); {; auto df1 = ROOT::RDataFrame(10).Define(""x"", [] { return 1.f; });; // x is float, variation expression cannot return RVec<int>, must be RVec<float>; @@ -125,7 +125,7 @@ TEST(RDFVary, RequireVariationsHaveConsistentType); // throwing exceptions from jitted code cause problems on windows and MacOS+M1; #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS); #if !(defined(R__MACOSX) && defined(__arm64__)); -TEST(RDFVary, RequireVariationsHaveConsistentTypeJitted); +TEST_P(RDFVary, RequireVariationsHaveConsistentTypeJitted); {; // non-jitted Define, jitted Vary with incompatible type; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1.f; });; @@ -196,7 +196,7 @@ TEST(RDFVary, RequireVariationsHaveConsistentTypeJitted); #endif; #endif; ; -TEST(RDFVary, RequireReturnTypeIsRVec); +TEST_P(RDFVary, RequireReturnTypeIsRVec); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; EXPECT_THROW(; @@ -209,7 +209,7 @@ TEST(RDFVary, RequireReturnTypeIsRVec); std::runtime_error);; }; ; -TEST(RDFVary, RequireNVariationsIsConsistent); +TEST_P(RDFVary, RequireNVari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:85,test,test,85,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,9,"['TEST', 'test']","['TEST', 'test']"
Testability,On some platforms first start of web browser takes longer than 15 s.; Make it now 70 s. Most often happens on `mac1015` platform like this one:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147815/testReport/projectroot.gui.webdisplay/test/test_webgui_ping/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10800:225,test,testReport,225,https://root.cern,https://github.com/root-project/root/pull/10800,2,['test'],"['test', 'testReport']"
Testability,On some platforms there is a HZ macro defined that makes the test fail. This pull request undefines the HZ macro if it is defined allowing the test to succeed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/309:61,test,test,61,https://root.cern,https://github.com/root-project/root/pull/309,2,['test'],['test']
Testability,"On some platforms, there are streamer info warnings due to schema evolution without increments of the class version.; One should check if it's possible to make root recognise that it's the same class, or increment the class version. 1. Revert d91509e24fe00844bf102fd7d20c22decda8f3ff; 2. Fix all warnings in google tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9353:315,test,tests,315,https://root.cern,https://github.com/root-project/root/issues/9353,1,['test'],['tests']
Testability,"On some systems (CentOS 8) latest chrome not allows to run HTML files,; which are situated in /tmp directory. Only if such situation detected,; try to place HTML files into home directory and run headless chrome from such file. Fixes problem like this:; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/2435/testReport/projectroot/runtutorials/tutorial_v7_line_cxx/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5403:370,test,testReport,370,https://root.cern,https://github.com/root-project/root/pull/5403,1,['test'],['testReport']
Testability,On the MacOS same unix sockets cannot be opened twice for listening - ; when using with `netcat` or `socat`; Therefore start `nc -k -l -U $socketfile > $socketfile.log` to redirect; socket output into the plain file permanently. ; And then monitor this file content - line by line. Use `trap` command to cleanup all temporary files afterwards. And from ROOT side need to send `\n` to ensure new lines in produced log file. This changes required to be able use `rootssh` from the MacOS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16819:164,log,log,164,https://root.cern,https://github.com/root-project/root/pull/16819,2,['log'],['log']
Testability,"On the Snap build of ROOT, the parameters were assumed to be int, double. Errors from build log, running Ubuntu 20.04 GCC9 C++17. ```; /root/parts/root/src/roofit/xroofit/src/xRooNode.cxx:5778:105: note: deduced conflicting types for parameter ‘const _Tp’ (‘int’ and ‘double’); 5778 | : (h->GetBinContent(1) + std::max(abs(h->GetBinContent(1) * 0.1), 50.)));; ```; ; This doesn't appear to occur in normal builds, but the guard code seems trivial enough to include and this may prevent compilation errors in other scenarios. ## Checklist:. - [Y] tested changes locally; - [Y] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11984:92,log,log,92,https://root.cern,https://github.com/root-project/root/pull/11984,2,"['log', 'test']","['log', 'tested']"
Testability,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):; ```; {; gROOT->ProcessLine("".L loadcode.C+"");; ...; TTree *t; _file0->GetObject(""t"",t);; }; ```; The use of TTree means that before executing the script libTree is laoded.; During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) .; And in this case the result is:; ```; loadcode_C.so libTree.6.21.01.so libTree.so; ```; which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library?. 2) When should gSystem->Load automatically reload a library, if ever?. @Axel-Naumann @vgvassilev opinions?. PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618042721:104,test,test,104,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618042721,2,['test'],['test']
Testability,"On the one hand I agree with @bluehood, on the other hand I hate writing to stdout or stderr without any logging mechanism ... But I agree that it could fall back to the generic impl and shoot down your MT scenario silently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-480271507:105,log,logging,105,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-480271507,1,['log'],['logging']
Testability,On this log https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/96/consoleFull I search the string `qhelpgenerator ` but it does not appear. Should it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1010870706:8,log,log,8,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010870706,1,['log'],['log']
Testability,"On top of what we have already and a bit more of pyroot testing, I need to figure out what to do with the signatures. The fact that the size of bins is an integer and not a size_t is a problem for initialiser lists. Now one would do in Python:; ``` py; v = ROOT.std.vector('double')(); for i in [0,1,2,3,4,5]: v.push_back(i); tdf.Histo1D(('myhisto', 'myhisto', int(v.size()), v.data()),""mycol""); ```; that cast is bad. What would be desirable would be:; ``` py; tdf.Histo1D(('myhisto', 'myhisto', v.size(), v.data()),""mycol""); ```; or even; ``` py; tdf.Histo1D(('myhisto', 'myhisto', v),""mycol""); ```; The last but one line involves a change in the interface (which makes it incompatible with the one of TH*) while the last one also a change in PyROOT for implicit conversions to array_view<T>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1294#issuecomment-342848318:56,test,testing,56,https://root.cern,https://github.com/root-project/root/pull/1294#issuecomment-342848318,1,['test'],['testing']
Testability,"On weak GPUs, tests might take very long when they all run in parallel.; This can be avoided with a resource lock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16803:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/16803,1,['test'],['tests']
Testability,"On which Linux, @dpiparo? For me on Arch Linux it works with ROOT `master`. I have created a unit test for ROOT test, like this we can maybe see on which platforms it still fails:; https://github.com/root-project/roottest/pull/1052",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11411#issuecomment-1926604951:98,test,test,98,https://root.cern,https://github.com/root-project/root/issues/11411#issuecomment-1926604951,2,['test'],['test']
Testability,"On windows:; ```; 11:06:03 MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; 11:06:03 ParallelTest.cxx; 11:06:03 Creating library C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.lib and object C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.exp; 11:06:03 PaulTest.cxx; 11:06:03 REveTreeTools.cxx; 11:06:03 C:\build\workspace\root-pullrequests-build\build\core\base\test\Release\CoreBaseTests.exe : fatal error LNK1169: one or more multiply defined symbols found [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780824959:272,test,test,272,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780824959,5,['test'],['test']
Testability,"On x86_64, for zlib 101, 106 is ~30% - ~40% and for 109 it is 4 times better, making it very close to 106!; For aarch64 and aarch64+crc32 we have significant improvement ~ arriving close to lz4 rates. Replacement or PR #956 (tested on x86_64, Aarch64, Aarch64+crc32)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527:225,test,tested,225,https://root.cern,https://github.com/root-project/root/pull/1527,1,['test'],['tested']
Testability,"Once #13370 is merged, the only remaining thing to do for this PR would be to disable the windows tests, as it is unclear why windows corrupts the tree name strings as seen in the failed tests:; ```; Error in <TChain::LoadTree>: Cannot find tree with name áÐ-[NON-XML-CHAR-0xF]d╩~ in file C:\build\workspace\root-pullrequests-build\build\tutorials/tmva/RBatchGenerator_filters_vectors_hvector.root; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1665795587:98,test,tests,98,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1665795587,2,['test'],['tests']
Testability,"Once tested with the previous push to master, this backports the fix for ROOT-9025: a memory leak when accessing a branch of a TTree in Python, that branch being of type array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1555:5,test,tested,5,https://root.cern,https://github.com/root-project/root/pull/1555,1,['test'],['tested']
Testability,"Once tests pass, I think this should be merged. Here are measurements in VTune of how things change:; ![screenshot](https://user-images.githubusercontent.com/249404/42828119-4b1244b6-89e8-11e8-80e5-f1b4a0138045.png). ![screenshot2](https://user-images.githubusercontent.com/249404/42828144-599592d6-89e8-11e8-9534-715dbc7ac85b.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405627757:5,test,tests,5,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405627757,1,['test'],['tests']
Testability,"One addition w.r.t. to the previous comment that may also be relevant. If I try the modified example where each thread calls `CompileMacro` on a separate library without the patch of this PR, I still get this kind of stacktrace; ```; #14 0x00007fb2d4d9322f in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/vpadulan/programs/rootproject/rootinstall/add-locks-testing/lib/libCling.so; #15 0x00007fb2d4d7b230 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/vpadulan/programs/rootproject/rootinstall/add-locks-testing/lib/libCling.so; #16 0x00007fb2d4a6d17a in HandleInterpreterException (metaProcessor=0x2929eb0, input_line=0x7fb2b8019840 "".L load_unload_helpers_0_cpp.so"", compRes=; 0x7fb2bd9f975c: cling::Interpreter::kSuccess, result=0x0) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2436; #17 0x00007fb2d4a814c6 in TCling::LoadFile (this=0x1afbf90, path=0x7fb2b8000bd0 ""load_unload_helpers_0_cpp.so"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:7432; #18 0x0000000000406686 in load_unload (n=0) at repro_onelibperthread.cpp:41; ```. That shows the data race in `TCling::LoadFile`, so that is always present even when each thread works on its library. Attaching the full stack traces from all threads to this comment ; [repro_onelibperthread_stacktraces.txt](https://github.com/root-project/root/files/12218151/repro_onelibperthread_stacktraces.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13348#issuecomment-1658937784:402,test,testing,402,https://root.cern,https://github.com/root-project/root/pull/13348#issuecomment-1658937784,2,['test'],['testing']
Testability,One extra newline was missing from the test. Follow-up of https://github.com/root-project/root/pull/13165,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13263:39,test,test,39,https://root.cern,https://github.com/root-project/root/pull/13263,1,['test'],['test']
Testability,"One of the RBatchGenerator possible implementations. From the eye test should be faster, but needs measuring",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15647:66,test,test,66,https://root.cern,https://github.com/root-project/root/pull/15647,2,['test'],['test']
Testability,"One of the parts/elements of the behavior is that:; ```; cling::utils::Lookup::Tag(&fInterpreter->getSema(), name, dc);; ```; with; ```; name == ""E"" and dc == decl_for(""B""); ```; and with `B`:; ```; NamespaceDecl 0x156e8b600 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:2:1, col:27> col:11 B; |-UsingDecl 0x156e8b6b0 <col:15, col:24> col:24 A::E; `-UsingShadowDecl 0x156e8b708 <col:24> col:24 implicit Enum 0x156e8b4c8 'E'; `-EnumType 0x156e8b590 'A::E'; `-Enum 0x156e8b4c8 'E'; ```; returns the E decl (i.e. ignores the `UsingShadowDecl`):; ```; (lldb) p R.getFoundDecl()->dump(); EnumDecl 0x156e8b4c8 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:1:15, col:29> col:20 E; `-EnumConstantDecl 0x156e8b5b0 <col:24> col:24 kOne 'A::E'; ```. later in the `TEnum::Get` process:; ```; * frame #0: 0x000000011858a084 libCling.so`TCling::ClassInfo_Contains(this=0x0000000155f063e0, info=0x0000600000540e10, declid=0x0000000156e8b4c8) const at TCling.cxx:8147:11; frame #1: 0x000000010114ba64 libCore.so`TListOfEnums::Get(this=0x0000600000b5bac0, id=0x0000000156e8b4c8, name=""E"") at TListOfEnums.cxx:240:26; frame #2: 0x000000010114b8d8 libCore.so`TListOfEnums::FindObject(this=0x0000600000b5bac0, name=""E"") const at TListOfEnums.cxx:196:60; ```. ```TCling::ClassInfo_Contains``` rejects the enum since:; ```; return declDC->Equals(ctxt);; ```; is false since `declDC` point to `A` (the actual declaration context of the enum) and `ctxt` is `B` (the namespace we started the search in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15406#issuecomment-2091449777:253,test,test,253,https://root.cern,https://github.com/root-project/root/issues/15406#issuecomment-2091449777,2,['test'],['test']
Testability,One restriction I realized when adding a test is that the jitted version of Book will only work if the helper class is registered with the Root type system (because of the ```TClass::GetClass``` call at https://github.com/root-project/root/blob/d03407e19eaea7b02021d9d65ec6bc864bdcab6b/tree/dataframe/src/RDFInterfaceUtils.cxx#L680 ). Open to suggestions how to remove this restriction (demangling the name with ```abi::_cxa_demangle``` maybe?) Otherwise I can add a comment about this to the documentation for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805575727:41,test,test,41,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805575727,1,['test'],['test']
Testability,One should test with `runtime_cxxmodules=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15749#issuecomment-2148970218:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/15749#issuecomment-2148970218,1,['test'],['test']
Testability,One should use . outputs/bin/zevis; not; outputs/bin/zevis.exe. outputs/bin/zevis is a script that sets the paths. Andrii. P.S. Thanks for the log!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693382075:143,log,log,143,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693382075,1,['log'],['log']
Testability,One unrelated test failed on fedora28/native. Windows testing stalled due to problems on the machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2826#issuecomment-432219339:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/2826#issuecomment-432219339,2,['test'],"['test', 'testing']"
Testability,"Only a rebase, checking that the failure in `gtest-hist-histdrawv7-test-histhistdrawv7testUnit` is still there for all platforms (it is in my Linux setup). Also there seems to be a new failure in `roottest-root-meta-tuple-exec_configtype_unload-auto`, let's see how many platforms that affects...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1492106592:67,test,test-,67,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1492106592,1,['test'],['test-']
Testability,Only add dataframe python tests if pyroot is ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5088:26,test,tests,26,https://root.cern,https://github.com/root-project/root/pull/5088,1,['test'],['tests']
Testability,Only builds using LLVM 9 source works right now (using `--with-binary-llvm` and `--with-llvm-tar` flags will cause a build error). A single test fails. Reproducer - `cat <path to cling source dir>/test/Lookup/template.C | cling --nologo -I<path to build dir>/tools/clang/include -Xclang -verify -fno-rtti 2>&1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7760:140,test,test,140,https://root.cern,https://github.com/root-project/root/pull/7760,2,['test'],['test']
Testability,Only download test data if running the test that needs them,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/402:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/402,2,['test'],['test']
Testability,"Only git fetch failed in Jenkins, tests/formatting are actually passing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332951057:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332951057,1,['test'],['tests']
Testability,"Only git fetch failed, tests are actually passing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1072#issuecomment-332950587:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/1072#issuecomment-332950587,1,['test'],['tests']
Testability,"Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15061:534,test,test,534,https://root.cern,https://github.com/root-project/root/pull/15061,1,['test'],['test']
Testability,Oops! I forgot to add the unit tests!; Added.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286#issuecomment-967738075:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-967738075,1,['test'],['tests']
Testability,"Oops, the above wasn't enough for the ""revert"", I also had to replace the calling site (in `flexibleInterp`) with. ```; // return total * std::exp(interpolate6thDegree(x, std::log(low), std::log(high), std::log(nominal), boundary));; return total * interpolate6thDegree(x, low, high, nominal, boundary);; ```. This (together with using the old code as commented out above) indeed gets rid of the `nan`!. **I think the crucial part is that the old code checks for `high <= 0` and also `low <= 0`.**. Indeed, I traced the `nan` there: the sequence of events in this failing example is that `high` is zero, so that `std::log(high)` is `-inf`. Then `eps_plus` is also `-inf` and so `S` and `A` too, so you `-inf` times something negative (`t` happens to be negative in this example) so the term becomes `+inf` and eventually you get a `-inf + inf` and that equals `nan`. So, there's at least two options to fix this, both will need some conditionals added in again. 1. Going back to the original algorithm. If I understand the commit message of that change correctly, it was mostly removed because it required cached variables. As I rewrote the algorithm above, no more cached variables are necessary. Of course, it does involve more temporary values than the new algorithm, so perhaps this is another reason to pick the new algorithm.; 2. Adding similar `<= 0` checks to the new algorithm. I think this should take place at the call site, because it doesn't make sense for the other `interpolate6thDegree` usecase where no weird values are expected from logarithms. By the way, why is the interpolation taking place in logarithmic space instead of regular linear space and then transformed back into linear space after interpolation? Doesn't this also mean that the two interpolation schemes (FlexibleInterpVar and PiecewiseInterpolation) are again inconsistent? If the logarithm can be eliminated, I think we can do without introducing conditionals, no? That is, assuming the high and low vectors are fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749#issuecomment-1746494427:176,log,log,176,https://root.cern,https://github.com/root-project/root/issues/13749#issuecomment-1746494427,4,['log'],['log']
Testability,"Option parsing in `hadd` demands a space between `-n` and the value. The value is passed on to `TFileMerger::SetMaxOpenedFiles()` which in turn sets it to a minimum value of `fMaxOpenedFiles = 2`. From my tests, it appears that `TFileMerger` merges the first `fMaxOpenedFiles - 1` input files, which is probably not the desired behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9022#issuecomment-934339688:205,test,tests,205,https://root.cern,https://github.com/root-project/root/issues/9022#issuecomment-934339688,1,['test'],['tests']
Testability,"Or test what can be used. The `master.c++17` seems OK so far, at least on Windows (it's building right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731#issuecomment-1737072196:3,test,test,3,https://root.cern,https://github.com/root-project/root/issues/13731#issuecomment-1737072196,1,['test'],['test']
Testability,"OrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #54 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #55 0x00000000044ae43b clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729:12; #56 0x00000000044adce3 clang::Parser::ParseFirstTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:601:8; #57 0x00000000043aeb42 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:157:15; #58 0x000000000419c5ec clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:1060:1; #59 0x000000000419c01c clang::FrontendAction::Execute() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:955:7; #60 0x00000000040de3f6 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:974:23; #61 0x00000000040e52dd compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:39750,test,test-products,39750,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['test'],['test-products']
Testability,"OrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #89 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #90 0x00000000044ae43b clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729:12; #91 0x00000000044adce3 clang::Parser::ParseFirstTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:601:8; #92 0x00000000043aeb42 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:157:15; #93 0x000000000419c5ec clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:1060:1; #94 0x000000000419c01c clang::FrontendAction::Execute() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:955:7; #95 0x00000000040de3f6 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:974:23; #96 0x00000000040e52dd compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:48981,test,test-products,48981,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['test'],['test-products']
Testability,Oracle is not tested on jenkins nodes - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9674#issuecomment-1020243224:14,test,tested,14,https://root.cern,https://github.com/root-project/root/pull/9674#issuecomment-1020243224,1,['test'],['tested']
Testability,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5178:41,log,logic,41,https://root.cern,https://github.com/root-project/root/pull/5178,1,['log'],['logic']
Testability,"Original message of upstream commit by Richard Smith, https://github.com/llvm/llvm-project/commit/61c7a9140b:; ```; Commit to a primary definition for a class when we load its first; member. Previously, we wouldn't do this if the first member loaded is within a; definition that's added to a class via an update record, which happens; when template instantiation adds a class definition to a declaration; that was imported from an AST file. This would lead to classes having member functions whose getParent; returned a class declaration that wasn't the primary definition, which; in turn caused the vtable builder to build broken vtables. I don't yet have a reduced testcase for the wrong-code bug here, because; the setup required to get us into the broken state is very subtle, but; have confirmed that this fixes it.; ```. This fixes an assertion in `CodeGenFunction::EmitCXXDestructorCall()`:; ```; Assertion `ThisTy->getAsCXXRecordDecl() == DtorDecl->getParent() && ""Pointer/Object mixup""' failed.; ```; which was already seen during the upgrade to LLVM 13 in one tutorial on CentOS 8 and ""solved"" by commit ffe867985b (""Relax assertion on generating destructor call""). Due to the nature of this problem, the assertion failure went away with unrelated changes so I reverted the change in 2b997add1d. Now the problem comes back with the upgrade to LLVM 16 and also in master when trying to enable the RBatchGenerator tutorials in https://github.com/root-project/root/pull/13302, both on macOS this time. Luckily, the underlying cause was properly fixed in upstream LLVM just last week, so backport that commit. FYI @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13370:667,test,testcase,667,https://root.cern,https://github.com/root-project/root/pull/13370,5,"['Assert', 'assert', 'test']","['Assertion', 'assertion', 'testcase']"
Testability,"Original report, it also contains a test: https://root-forum.cern.ch/t/nan-values-in-one-column-break-histogram-of-another-column/37091 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9561:36,test,test,36,https://root.cern,https://github.com/root-project/root/issues/9561,1,['test'],['test']
Testability,"Other general comments:. 1. I know we discussed this already, but I can't remember the full discussion, sorry: why is it better to create column reader prototypes upfront rather than doing so on-demand? in particular, what is the expensive operation that we perform less times?. 2. Given that the last commits change the logic of the previous ones drastically, this PR might be a good candidate for a squash on merge or at least some of the commits are good candidates to be squashed together.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6700#issuecomment-797501291:321,log,logic,321,https://root.cern,https://github.com/root-project/root/pull/6700#issuecomment-797501291,1,['log'],['logic']
Testability,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6121:10,test,tests,10,https://root.cern,https://github.com/root-project/root/pull/6121,3,['test'],['tests']
Testability,"Otherwise they are emitted as internal and we get double-construction and -destruction on the same memory address due to the way we promote internal declarations in KeepLocalGVPass. According to upstream tests, the de-duplication doesn't work on Windows (yet), but I think this problem is severe enough to fix it on the other platforms sooner rather than later. Fixes #13429",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13614:204,test,tests,204,https://root.cern,https://github.com/root-project/root/pull/13614,1,['test'],['tests']
Testability,"Otherwise they are emitted as internal and we get double-construction and -destruction on the same memory address due to the way we promote internal declarations in KeepLocalGVPass. According to upstream tests, the de-duplication doesn't work on Windows (yet), but I think this problem is severe enough to fix it on the other platforms sooner rather than later. Fixes #13429, backport of https://github.com/root-project/root/pull/13614",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13795:204,test,tests,204,https://root.cern,https://github.com/root-project/root/pull/13795,1,['test'],['tests']
Testability,Our jenkins infrastructure is no longer ready for v5.34 testing. I ran a local test which was successful so I am merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089#issuecomment-767083952:56,test,testing,56,https://root.cern,https://github.com/root-project/root/pull/7089#issuecomment-767083952,2,['test'],"['test', 'testing']"
Testability,Out-of-bounds vector access in roofit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15730:38,test,test,38,https://root.cern,https://github.com/root-project/root/issues/15730,1,['test'],['test']
Testability,"Output lines are in wrong order when running CTest on Windows x64, as shown below:; ```; 1397: -- BEGIN TEST OUTPUT --; 1397:; 1397: Processing C:/Users/bellenot/git/roottest/root/meta/runInterpreterValue.C...; 1397: WithDtor(): 1; 1397: Ident: IAmWithDtor!; 1397: Now deleting TInterpreterValue; 1397: ~WithDtor() 0; 1397: Now all WithDor should be gone; we have 0 left; 1397: About to return a WithDtor; 1397:; 1397: -- END TEST OUTPUT --; 1397: -- BEGIN OUTDIFF OUTPUT --; 1397: --- C:/Users/bellenot/git/roottest/root/meta/InterpreterValue.ref Tue Jul 13 10:19:19 2021; 1397: +++ C:/Users/bellenot/build/x64/release/roottest/root/meta/roottest-root-meta-runInterpreterValue-auto.log Mon Feb 21 15:23:36 2022; 1397: @@ -1,7 +1,7 @@; 1397:; 1397: WithDtor():1; 1397: -AbouttoreturnaWithDtor; 1397: Ident:IAmWithDtor!; 1397: NowdeletingTInterpreterValue; 1397: ~WithDtor()0; 1397: NowallWithDorshouldbegone;wehave0left; 1397: +AbouttoreturnaWithDtor; 1397:; 1397: -- END OUTDIFF OUTPUT --; 1397: CMake Error at C:/Users/bellenot/build/x64/release/RootTestDriver.cmake:254 (message):; 1397: compare 'stdout' error: 1; 1397:; 1397:; 1/1 Test #1397: roottest-root-meta-runInterpreterValue-auto ...***Failed 0.56 sec; ```; The output is correct, but the line order is wrong (i.e. `AbouttoreturnaWithDtor` is at the wrong position).; This is related to the issue #9809, and is due to the `-O1` optimization flag in Cling (`clingArgsStorage.push_back(""-O1"");` in `TCling.cxx`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9944:104,TEST,TEST,104,https://root.cern,https://github.com/root-project/root/issues/9944,4,"['TEST', 'Test', 'log']","['TEST', 'Test', 'log']"
Testability,Output/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36154/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411095087:1686,test,testReport,1686,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411095087,1,['test'],['testReport']
Testability,Output/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36208/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411294337:1686,test,testReport,1686,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411294337,1,['test'],['testReport']
Testability,Output/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:4179,test,testReport,4179,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability,Output/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36214/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411276947:1691,test,testReport,1691,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411276947,1,['test'],['testReport']
Testability,"Over the years we have a pathological issue with cling when it calls directly; compiler API. Most of the API assume they are called from code residing in a; text file. This code has valid source locations which can be used for; comparisons and things like point of instantiation for template instantiations. This means that whenever a clang API requires a valid source location, cling; should have an interface which gives a pseudo-valid, commonly-rooted unique; source location. We are bitten by this fact when preloading modules as if we have diagnostics; they cannot be ordered due to the fact that the compared decls from two; different modules do not have a common includer. This patch avoids using an API and relies on a textual form which does not have; this problem at the cost of synthesizing an extra string. This should fix the roottest python stl-stl test failure in the incremental builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4339:863,test,test,863,https://root.cern,https://github.com/root-project/root/pull/4339,1,['test'],['test']
Testability,P. S. @rdschaffer : thanks for running the test!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-748198026:43,test,test,43,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-748198026,1,['test'],['test']
Testability,"PC failed; result=18, HTTP code = 200 ; - ERROR: Error fetching remote repo 'origin' ; - ERROR: Timeout after 30 minutes ; - ERROR: Error fetching remote repo 'origin' ; - stderr: error: RPC failed; result=18, HTTP code = 200 ; - ERROR: Error fetching remote repo 'origin' . ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407863627:1246,test,testReport,1246,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407863627,1,['test'],['testReport']
Testability,"PL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-conda-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from root.exe...; (gdb) set auto-load safe-path /; (gdb) break CXXABICtxSwapper::SwapCtx; Function ""CXXABICtxSwapper::SwapCtx"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (CXXABICtxSwapper::SwapCtx) pending.; (gdb) run; Starting program: /home/cburr/mambaforge/envs/root-debug/bin/root.exe -l -b -q -x test.cpp++; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after fork from child process 151706]; [Detaching after fork from child process 151708]; [Detaching after fork from child process 151713]; [Detaching after fork from child process 151715]; [Detaching after fork from child process 151803]; [Detaching after fork from child process 151807]. Breakpoint 1, (anonymous namespace)::CXXABICtxSwapper::SwapCtx (other=..., this=0x55555600d260) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:35; 35	/usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp: No such file or directory.; (gdb) set substitute-path /usr/local/src/conda/clang_packages-9.0.1/ /home/cburr/clang/; (gdb) l; 30	using namespace CodeGen;; 31; 32	namespace {; 33	 struct CXXABICtxSwapper: clang::CodeGen::CGCXXABI {; 34	 void SwapCtx(clang::CodeGen::CGCXXABI &other) {; 35	 std::swap(MangleCtx, ((CXXABICtxSwa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021571360:1461,test,test,1461,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021571360,1,['test'],['test']
Testability,PLocation/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_dataframe_df029_SQlitePlatformDistribution](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot/runtutorials/tutorial_dataframe_df029_SQlitePlatformDistribution/); - [projectroot.runtutorials.tutorial_dataframe_df030_SQliteVersionsOfROOT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot/runtutorials/tutorial_dataframe_df030_SQliteVersionsOfROOT/); - [projectroot.runtutorials.tutorial_graphs_timeSeriesFromCSV_TDF](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot/runtutorials/tutorial_graphs_timeSeriesFromCSV_TDF/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150755/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1200317053:1999,test,test,1999,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1200317053,1,['test'],['test']
Testability,PLocation/); - [projectroot.runtutorials.tutorial_dataframe_df029_SQlitePlatformDistribution](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot/runtutorials/tutorial_dataframe_df029_SQlitePlatformDistribution/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_dataframe_df030_SQliteVersionsOfROOT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot/runtutorials/tutorial_dataframe_df030_SQliteVersionsOfROOT/); - [projectroot.runtutorials.tutorial_graphs_timeSeriesFromCSV_TDF](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot/runtutorials/tutorial_graphs_timeSeriesFromCSV_TDF/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151901/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1215249702:1999,test,test,1999,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1215249702,1,['test'],['test']
Testability,PLocation/); - [projectroot.runtutorials.tutorial_dataframe_df030_SQliteVersionsOfROOT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot/runtutorials/tutorial_dataframe_df030_SQliteVersionsOfROOT/); - [projectroot.runtutorials.tutorial_dataframe_df029_SQlitePlatformDistribution](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot/runtutorials/tutorial_dataframe_df029_SQlitePlatformDistribution/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_graphs_timeSeriesFromCSV_TDF](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot/runtutorials/tutorial_graphs_timeSeriesFromCSV_TDF/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150671/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1196711784:1999,test,test,1999,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1196711784,1,['test'],['test']
Testability,PR #486 is not how we do Google test these days. Check https://github.com/root-project/root/commit/a5ca72d36bb5ba77e015f497858d623ef3f4bdd7 and e.g. https://github.com/root-project/root/blob/master/tree/treeplayer/test/array.cxx instead.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/515#issuecomment-299872031:32,test,test,32,https://root.cern,https://github.com/root-project/root/pull/515#issuecomment-299872031,2,['test'],['test']
Testability,PR #75 in roottest adds a test for this case.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/920:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/920,1,['test'],['test']
Testability,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5509#issuecomment-621728604:45,test,tested,45,https://root.cern,https://github.com/root-project/root/pull/5509#issuecomment-621728604,1,['test'],['tested']
Testability,"PR has been rebased on master, so it can now be merged, if Jenkins does not complain. I will make a PR out of the test fix commit (https://github.com/roofit-dev/root/commit/c3ebf5d499ea018241b6b8b0ece92b341e6917bf) after this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881323120:114,test,test,114,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881323120,1,['test'],['test']
Testability,PR https://github.com/root-project/root/pull/13723 shows the failing test without the patches applied in this PR. @pcanal could you give another review?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13692#issuecomment-1735633755:69,test,test,69,https://root.cern,https://github.com/root-project/root/pull/13692#issuecomment-1735633755,1,['test'],['test']
Testability,"PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++; #include ""RooRealVar.h""; #include ""RooSimultaneous.h""; #include ""RooCategory.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(); {; using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool.; std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");; RooJSONFactoryWSTool::loadExportKeys(; rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");; RooJSONFactoryWSTool::loadFactoryExpressions(; rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json""; );. // Create a test model: RooSimultaneous with Gaussian in one component, and; // product of two Gaussians in the other.; RooRealVar x(""x"", ""x"", -8, 8);; RooRealVar mean(""mean"", ""mean"", 0, -8, 8);; RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma);; RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));; RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});; RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);; RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);; simPdf.addPdf(model, ""physics"");; simPdf.addPdf(model_ctl, ""control"");. // Export to JSON; {; RooWorkspace ws{""workspace""};; ws.import(simPdf);; RooJSONFactoryWSTool tool{ws};; tool.exportJSON(""simPdf.json"");; // Output can be pretty-printed with `python -m json.tool simPdf.json`; }. // Import JSON; RooWorkspace ws{""workspace""};; RooJSONFactoryWSTool tool{ws};; tool.importJSON(""simPdf.json"");; // At the moment this will fail, because the Gaussians in the product are; // missing in the JSON dump!; }; ```. The JSON dump will look like this:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9372:862,test,test,862,https://root.cern,https://github.com/root-project/root/issues/9372,1,['test'],['test']
Testability,PR is tested locally on a system containing the protobuf library required to build the sofie parser of Onnx files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8782#issuecomment-892651226:6,test,tested,6,https://root.cern,https://github.com/root-project/root/pull/8782#issuecomment-892651226,1,['test'],['tested']
Testability,PR updated to also address. 	346 - gtest-tree-tree-test-testBulkApiMultiple (Timeout),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10886#issuecomment-1318278945:51,test,test-testBulkApiMultiple,51,https://root.cern,https://github.com/root-project/root/pull/10886#issuecomment-1318278945,1,['test'],['test-testBulkApiMultiple']
Testability,PR-5094-ROOT-performance-centos7-multicore-default&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/console).; ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooGaussian](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooGaussian/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooPoisson](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooPoisson/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooBernstein](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooBernstein/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooExponential/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooWrapperPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooWrapperPdf/); - [projectroot.roofit.roostats.test.gtest_roofit_roostats_test_testSPlot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.roofit.roostats/test/gtest_roofit_roostats_test_testSPlot/); - [projectroot.test.fit.test_fit_testFitPerf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82114/testReport/projectroot.test/fi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-628645404:1267,test,testReport,1267,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-628645404,1,['test'],['testReport']
Testability,PR-5094-ROOT-performance-centos7-multicore-default&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/console).; ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooGaussian](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooGaussian/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooPoisson](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooPoisson/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooBernstein](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooBernstein/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooExponential/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooWrapperPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooWrapperPdf/); - [projectroot.roofit.roostats.test.gtest_roofit_roostats_test_testSPlot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.roofit.roostats/test/gtest_roofit_roostats_test_testSPlot/); - [projectroot.test.fit.test_fit_testFitPerf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82123/testReport/projectroot.test/fi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-628681066:1267,test,testReport,1267,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-628681066,1,['test'],['testReport']
Testability,PR-5094-ROOT-performance-centos7-multicore-default&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/console).; ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooGaussian](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooGaussian/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooPoisson](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooPoisson/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooBernstein](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooBernstein/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooExponential/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooWrapperPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooWrapperPdf/); - [projectroot.roofit.roostats.test.gtest_roofit_roostats_test_testSPlot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.roofit.roostats/test/gtest_roofit_roostats_test_testSPlot/); - [projectroot.test.fit.test_fit_testFitPerf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82155/testReport/projectroot.test/fi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-628760983:1267,test,testReport,1267,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-628760983,1,['test'],['testReport']
Testability,PR-5094-ROOT-performance-centos7-multicore-default&date=2020-05-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/console).; ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooGaussian](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooGaussian/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooPoisson](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooPoisson/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooBernstein](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooBernstein/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooExponential/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooWrapperPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooWrapperPdf/); - [projectroot.roofit.roostats.test.gtest_roofit_roostats_test_testSPlot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.roofit.roostats/test/gtest_roofit_roostats_test_testSPlot/); - [projectroot.test.fit.test_fit_testFitPerf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82536/testReport/projectroot.test/fi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-629746588:1267,test,testReport,1267,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-629746588,1,['test'],['testReport']
Testability,PR-5591-ROOT-performance-centos7-multicore-default&date=2020-05-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/console).; ### Failing tests:; - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTHn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTHn/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82967/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-631345536:1267,test,testReport,1267,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-631345536,1,['test'],['testReport']
Testability,PR-5806-ROOT-ubuntu16-nortcxxmod&date=2020-06-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/console).; ### Failing tests:; - [projectroot.test.test_stressvector_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot/test/test_stressvector_interpreted/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.test.test_stressvector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot/test/test_stressvector/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_GenVector_Vc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot/test/test_GenVector_Vc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85578/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://lcgapp-servic,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5806#issuecomment-639824717:1233,test,test,1233,https://root.cern,https://github.com/root-project/root/pull/5806#issuecomment-639824717,1,['test'],['test']
Testability,PR-5814-ROOT-ubuntu16-nortcxxmod&date=2020-06-07).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/console).; ### Failing tests:; - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_assertROOT8445_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_assertROOT8445_auto/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.bytecode.roottest_cling_bytecode_runcomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/bytecode/roottest_cling_bytecode_runcomplex/); - [projectroot.roottest.cling.bytecode.roottest_cling_bytecode_runhenry](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/bytecode/roottest_cling_bytecode_runhenry/); - [projectroot.roottest.cling.const.roottest_cling_const_run1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/const/roottest_cling_const_run1/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85733/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5814#issuecomment-640258602:1249,test,testReport,1249,https://root.cern,https://github.com/root-project/root/pull/5814#issuecomment-640258602,1,['test'],['testReport']
Testability,PR-6161-ROOT-fedora31-noimt&date=2020-08-12).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.test.test_stresstmva_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot/test/test_stresstmva_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_take](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_take/); - [projectroot.roottest.python.pickle.roottest_python_pickle_read](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_read/); - [projectroot.roottest.python.ttree.roottest_python_ttree_ttree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.roottest.python/ttree/roottest_python_ttree_ttree/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92498/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6161#issuecomment-672972306:1257,test,testReport,1257,https://root.cern,https://github.com/root-project/root/pull/6161#issuecomment-672972306,1,['test'],['testReport']
Testability,PR-6377-ROOT-performance-centos7-multicore-default&date=2020-09-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot/test/test_stressmathcore/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.double32.roottest_root_io_double32_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot.roottest.root.io/double32/roottest_root_io_double32_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execOptionList_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot.roottest.root/meta/roottest_root_meta_execOptionList_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runGetMissingDictionaries_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot.roottest.root/meta/roottest_root_meta_runGetMissingDictionaries_auto/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96136/testReport/projectroot.roottest.root.meta/di,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6377#issuecomment-694391098:1239,test,testReport,1239,https://root.cern,https://github.com/root-project/root/pull/6377#issuecomment-694391098,2,['test'],"['test', 'testReport']"
Testability,"PS : the configure log just doesn't find xrootd, or at least doesn't mention it does, unlike with the previous builds. Which is also weird because we have fail-on-missing enabled, so it should have failed at configure time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1740438099:19,log,log,19,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1740438099,1,['log'],['log']
Testability,"PS: Explanation why nobody saw this:; The test only run if IMT is on. Presumably, centos7, gcc4.8 runs with IMT off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7278#issuecomment-784997433:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/7278#issuecomment-784997433,1,['test'],['test']
Testability,PS:; Maybe this test is more representative of how a test for a Pythonisation would look like:; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:; https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-786710435:16,test,test,16,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-786710435,3,['test'],['test']
Testability,"PageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3349,Test,Test,3349,https://root.cern,https://github.com/root-project/root/issues/12427,2,"['Test', 'test']","['Test', 'test-ntuple-extended']"
Testability,"Part of the RooFit code modernization, avoiding the use of unnecessary; wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10115:169,test,tested,169,https://root.cern,https://github.com/root-project/root/pull/10115,1,['test'],['tested']
Testability,"Part of the RooProdPdf modernization with the intention of eventually; deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs; is implemented in the `LinkDef.h`. The schma evolution is tested by; the stressRooFit tests, which are reading some RooProdPdfs from the; reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8595:206,test,test,206,https://root.cern,https://github.com/root-project/root/pull/8595,3,['test'],"['test', 'tested', 'tests']"
Testability,Part of the plan of work 2024. The first two commits are final bugfixes to get all-green tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14742:89,test,tests,89,https://root.cern,https://github.com/root-project/root/pull/14742,1,['test'],['tests']
Testability,"Partial backport of, mostly to get the compatibility with the newest `sklearn`:. * https://github.com/root-project/root/pull/13634. With all the backports I made in the last days, the difference between the `tmva/` subdirectory in ROOT 6.28 and ROOT master is a relatively short list of commits, which might help us in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:742,Log,Log,742,https://root.cern,https://github.com/root-project/root/pull/13783,1,['Log'],['Log']
Testability,"PartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837. #5 0x00007fffe3d4911d in getPatternForClassTemplateSpecialization (S=..., PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2500. #6 0x00007fffe3d492c6 in clang::Sema::InstantiateClassTemplateSpecialization (this=0x7da020, PointOfInstantiation=..., ClassTemplateSpec=0x7e8b810, TSK=clang::TSK_ImplicitInstantiation, Complain=true). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:2538. #7 0x00007fffe3e0b218 in clang::Sema::RequireCompleteTypeImpl (this=0x7da020, Loc=..., T=..., Diagnoser=0x7fffffff53a0). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #8 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #9 0x00007fffe3e0b5cb in clang::Sema::RequireCompleteType (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:2210,test,test-products,2210,https://root.cern,https://github.com/root-project/root/pull/5462,1,['test'],['test-products']
Testability,Passed 6.93 sec; Start 394: gtest-tree-dataframe-test-dataframe-concurrency; 417/1231 Test #379: gtest-tree-dataframe-test-dataframe-snapshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:6141,Test,Test,6141,https://root.cern,https://github.com/root-project/root/pull/10300,1,['Test'],['Test']
Testability,Passed the regular tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/827#issuecomment-319453507:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/827#issuecomment-319453507,1,['test'],['tests']
Testability,"Passes `test_snapshot.C` on my computer. However, I believe there are problems elsewhere when more than one cluster exists in the generated trees (i.e. when ForeachSlot actually has more than one slot). We need to make sure to test TDataFrame with trees with multiple slots in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/562:227,test,test,227,https://root.cern,https://github.com/root-project/root/pull/562,1,['test'],['test']
Testability,Passes all default tests! Let's see the vectorized ones,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/699#issuecomment-312850234:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/699#issuecomment-312850234,1,['test'],['tests']
Testability,Passes all the tests. Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11704#issuecomment-1347568526:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/11704#issuecomment-1347568526,1,['test'],['tests']
Testability,Passes cling test and roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/82:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/82,1,['test'],['test']
Testability,"Passing an out-of-range bin to `TH1::AddBinContent` leads to undefined behavior. # This Pull request:. ## Changes or fixes:; Comment added to documentation: `TH1::AddBinContent` do not check bin boundaries, passing an out-of-range bin leads to undefined behavior. The boundary check is not needed because this method should be used only internally, despite being public. ## Checklist:. - [ ] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes # ; https://github.com/root-project/root/issues/14575",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14674:392,test,tested,392,https://root.cern,https://github.com/root-project/root/pull/14674,1,['test'],['tested']
Testability,Passing tests; * [ubu22](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.tmva.pymva/test/gtest_tmva_pymva_test_TestRModelParserPyTorch/); * [ubu20](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184278/testReport/projectroot.tmva.pymva/test/gtest_tmva_pymva_test_TestRModelParserPyTorch/). This should fix the visible errors in the Jenkins builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13613#issuecomment-1708257157:8,test,tests,8,https://root.cern,https://github.com/root-project/root/pull/13613#issuecomment-1708257157,5,['test'],"['test', 'testReport', 'tests']"
Testability,PassingText](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot.roottest.cling.stl/string/roottest_cling_stl_string_stringPassingText/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.test.test_stressroofit_batchmode_cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot/test/test_stressroofit_batchmode_cpu/); - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressHistFactory_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.roottest.cling.other.roottest_cling_other_assertRedirect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertRedirect/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_assertManipulators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174717/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_assertManipulators/). And 47 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1550967575:1633,test,test,1633,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1550967575,8,['test'],"['test', 'testReport']"
Testability,Patch removed; failure remains. Could you provide details of the ROOT source and build configuration you used in the Docker environment to test the `export std_config` removal?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398624677:139,test,test,139,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398624677,1,['test'],['test']
Testability,"Patch to handle template instantiation error recovery:; The current class SavePendingInstantiationsRAII ([L8109 -L8125](https://github.com/root-project/root/blob/a402af862ace9573193500bcccaa8b4d56cc6632/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h#L8109)) in clang/Sema.h which is called from cling/InterpreterParser.cpp [L920](https://github.com/root-project/root/blob/a402af862ace9573193500bcccaa8b4d56cc6632/interpreter/cling/lib/Interpreter/IncrementalParser.cpp#L920) can be replaced with the following patch in Sema.h; ```class PerformPendingInstantiationsRAII {; Sema &S;; public:; PerformPendingInstantiationsRAII(Sema &S): S(S) {} ;. ~PerformPendingInstantiationsRAII() {; S.PerformPendingInstantiations();; assert(S.PendingInstantiations.empty() &&; ""there shouldn't be any pending instantiations"");; }; };; ```; ; Change in InterpreterParser.cpp L902:; ```Sema::PerformPendingInstantiationsRAII PerformPendingInstantiations(S);```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145689988:731,assert,assert,731,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145689988,1,['assert'],['assert']
Testability,"Patches for compile on Debian 12 with Python 3.11 libraries. # This Pull request:. ## Changes or fixes:; Permit to compile with Python's libraries 3.11, too; I've tested locally on Debian 12 (bookworm). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13974:163,test,tested,163,https://root.cern,https://github.com/root-project/root/pull/13974,2,['test'],['tested']
Testability,Pdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooProdPdf/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooAbsReal](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooAbsReal/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooDataSet](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooDataSet/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testTestStatistics](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatistics/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodSerial](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodSerial/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooSimultaneous/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooAbsL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooAbsL/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooRealL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181065/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooRealL/). And 9 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341#issuecomment-1656749963:1963,test,testReport,1963,https://root.cern,https://github.com/root-project/root/pull/13341#issuecomment-1656749963,11,['test'],"['test', 'testReport']"
Testability,"Per #12676, all storage backends should be able to populate the page zero from `kTypePageZero` locators. This pull request adds the missing pieces in the DAOS backend. ## Changes or fixes:; - Add the `RPageStorage::PrepareLoadCluster()` helper which can be used in the implementation of `LoadClusters()` in derived classes to prepare the read of page ranges. This function takes care of filling zero pages in the given `ROnDiskPageMap`.; - Add the missing pieces in `RPageSourceDaos`. ## Checklist:; - [x] tested changes locally. This PR fixes #12960.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13388:506,test,tested,506,https://root.cern,https://github.com/root-project/root/pull/13388,1,['test'],['tested']
Testability,"Per the last ROOT I/O meeting (where the correct use of iterators to array-backed collections, e.g. `std::vector<T>`): an iterator on an array-backed container is just a pointer; thus, it can be directly stored in `*xyz_arena`, saving one dereference (see [here](https://github.com/root-project/root/blob/master/io/io/inc/TVirtualCollectionIterators.h#L34)). This pull request, fixes both the implementation of `RCollectionIterableOnce` and the unit test. As a result, this PR should fix the use case in PR #12948. Given that this behavior was not documented at all, a follow-up PR will update the documentation for `TVirtualCollectionProxy`. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13306:450,test,test,450,https://root.cern,https://github.com/root-project/root/pull/13306,2,['test'],"['test', 'tested']"
Testability,Perfect @JavierCVilla . Can you add a couple of tests with different types?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3505#issuecomment-470247872:48,test,tests,48,https://root.cern,https://github.com/root-project/root/pull/3505#issuecomment-470247872,1,['test'],['tests']
Testability,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:260,test,tested,260,https://root.cern,https://github.com/root-project/root/pull/8880,2,"['log', 'test']","['log', 'tested']"
Testability,"Perhaps if ROOT people contributes the PR, I could review and test it works (half the work). As a ROOT user I would enter into the development chain, at least I find it more natural. If I write to the root-forum, I am pointed towards GitHub issues, then towards creating myself the PR. Then, next time I will think twice about writing to the root-forum. This is I believe the natural average user thought. Of course, I understand the developer perspective too :) .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14173#issuecomment-1852167078:62,test,test,62,https://root.cern,https://github.com/root-project/root/issues/14173#issuecomment-1852167078,1,['test'],['test']
Testability,Perhaps using CP_UTF8 on Vista or above is a better solution?; https://stackoverflow.com/questions/10882277/properly-print-utf8-characters-in-windows-console; What is the output that is failing? Is it a properly encoded UTF-8 string?. I'm really only interested in Windows Terminal Output for testing which I won't have time for until next week (if at all).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1397#issuecomment-348551648:293,test,testing,293,https://root.cern,https://github.com/root-project/root/pull/1397#issuecomment-348551648,1,['test'],['testing']
Testability,"Phew, thanks, @smuzaffar But I have bad news: I needed to revisit the PR #7752 / #7767 . I will have to ask for your favor to test another PR replacing those, sorry about that! (But at least we now know what the baseline is - the comparison is good!) I'll be back...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811961157:126,test,test,126,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811961157,1,['test'],['test']
Testability,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp; #include <iostream>; #include <string>; #include <thread>; #include <vector>; #include ""TH1F.h""; #include ""TMemFile.h""; #include ""TROOT.h"". void test(int i); {; std::string name = ""test-"" + std::to_string(i);; TMemFile f(name.c_str(), ""create"");; TH1F h(""a"",""a"",60,0,10);; h.FillRandom(""gaus"");; f.Write();; }. int main(); {; auto nthreads = 100;; ROOT::EnableThreadSafety();; std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i); threads.emplace_back(test, i);. for (auto& thread : threads); thread.join();. return 0;; }; ```. I compile and run with; ```bash; $ g++ $(root-config --cflags --libs) test.cc; $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done; ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312199140:341,test,test,341,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312199140,4,['test'],['test']
Testability,"Ping @Axel-Naumann. Clearly I have nothing to do with these test failures, so what should I do next?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4688#issuecomment-565079915:60,test,test,60,https://root.cern,https://github.com/root-project/root/pull/4688#issuecomment-565079915,1,['test'],['test']
Testability,"Playing around I have made an observation which is the order of the ROOT and Vc includes makes a difference w.r.t. whether or not `std::sqrt(x)` works with Vc types or not. Previously I was asked in the test application to list the includes first the ROOT ones, then Vc and finally STL. With this order `std::sqrt` does not work with Vc types when used in the GenVector classes. If though I invert the order, and place the Vc includes before the GenVector ones, then the std::sqrt (and I presume others, I have not tested yet though) work with Vc types. Does anyone know if this is intentional or not ? I have not found any documentation for Vc that says anything about its use of the `std::` name space that would explain this. Or perhaps its some feature of the ROOT includes ?. I need to run some more tests to see if it really fixes all the issues with the gcc builds, but if so I guess its a possible workaround, although I confess I don't really like situations where the order of includes makes a difference. It shouldn't really matter, ideally.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286399961:203,test,test,203,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286399961,3,['test'],"['test', 'tested', 'tests']"
Testability,Please also consider adding the reproducer as a test in roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11028#issuecomment-1192651244:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/11028#issuecomment-1192651244,1,['test'],['test']
Testability,Please consider adding a copy/paste of the warning message in the commit log and/or explicit what the warning was about.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16630#issuecomment-2400952330:73,log,log,73,https://root.cern,https://github.com/root-project/root/pull/16630#issuecomment-2400952330,1,['log'],['log']
Testability,"Please do give it a try too, @eguiraud! Both profiling and debugging. You can test on `root.exe -l hsimple.C`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10685#issuecomment-1143539753:78,test,test,78,https://root.cern,https://github.com/root-project/root/pull/10685#issuecomment-1143539753,1,['test'],['test']
Testability,Please do not merge until I have benchmarks :smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060#issuecomment-332454279:33,benchmark,benchmarks,33,https://root.cern,https://github.com/root-project/root/pull/1060#issuecomment-332454279,1,['benchmark'],['benchmarks']
Testability,"Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit?; ##############; Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3694:321,test,test,321,https://root.cern,https://github.com/root-project/root/pull/3694,1,['test'],['test']
Testability,"Please note that this function template specialization seems to be unused during all RooFit tests - i.e. I can add `assert(0)` and all of `ctest -R roofit` passes. This is worrying, to say the least!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12767#issuecomment-1535964760:92,test,tests,92,https://root.cern,https://github.com/root-project/root/pull/12767#issuecomment-1535964760,2,"['assert', 'test']","['assert', 'tests']"
Testability,Please rebase so we can test and merge. Now the PR builds should be fine. Sorry for this taking so long!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-322408051:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-322408051,1,['test'],['test']
Testability,Please see commit messages for full explanation of the changes. Failing test: http://cdash.cern.ch/testDetails.php?test=24129853&build=345069,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/512:72,test,test,72,https://root.cern,https://github.com/root-project/root/pull/512,3,['test'],"['test', 'testDetails']"
Testability,"Please take a look. Although the tests pass, this is not supposed to be merged yet, as I have yet to understand why it's so slow when we pass a positive auto-flush value to snapshot the tree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/595:33,test,tests,33,https://root.cern,https://github.com/root-project/root/pull/595,1,['test'],['tests']
Testability,Please test changing options in CMake that change the values of the variables that you now set in the cache. I suspect that calling cmake later to change options (i.e. enabling/disabling root7 after initial configuration) might not work after these changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3409#issuecomment-475464110:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/3409#issuecomment-475464110,1,['test'],['test']
Testability,Please test if this also works with C++11 and CUDA enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598#issuecomment-627463835:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/5598#issuecomment-627463835,1,['test'],['test']
Testability,Please test it locally with flag -Dr=ON (you need also to have R preinstalled) and check root test suite results.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3635#issuecomment-480166742:7,test,test,7,https://root.cern,https://github.com/root-project/root/pull/3635#issuecomment-480166742,2,['test'],['test']
Testability,Plus fix two leaks in tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4935:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/4935,1,['test'],['tests']
Testability,Pointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36301/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/). And 31 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411341399:1775,test,testReport,1775,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411341399,6,['test'],"['test', 'testReport']"
Testability,Pointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94591/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6292#issuecomment-685808186:1910,test,testReport,1910,https://root.cern,https://github.com/root-project/root/pull/6292#issuecomment-685808186,1,['test'],['testReport']
Testability,Pointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77723/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/). And 316 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-617352611:1904,test,testReport,1904,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-617352611,5,['test'],['testReport']
Testability,Pointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77725/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/). And 316 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-617357668:1916,test,testReport,1916,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-617357668,5,['test'],['testReport']
Testability,Pointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runoutoforder_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runoutoforder_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94439/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [project,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6217#issuecomment-684861200:1941,test,testReport,1941,https://root.cern,https://github.com/root-project/root/pull/6217#issuecomment-684861200,1,['test'],['testReport']
Testability,Port a couple of tests and tutorials to Win64 (replace Long_t by Long…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9239:17,test,tests,17,https://root.cern,https://github.com/root-project/root/pull/9239,1,['test'],['tests']
Testability,"Port from old PyROOT. Prevent issues seen here:; http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=772393. where two JupyROOT tests that use ""%%cpp -a"" seem to step on; each other and generate the same library name. The change in behaviour also requires the corresponding; modifications to the doctests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4681:129,test,tests,129,https://root.cern,https://github.com/root-project/root/pull/4681,1,['test'],['tests']
Testability,"Ported from Cppyy patch by @wlav :`; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff. Adds an iterator for using declarations to `TClingMethodInfo`. it should make redundant the pythonisations that add the method overloads from a base class to the derived class that uses them:; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/PyROOT/src/PyzPythonHelpers.cxx#L113. Instead of relying on pythonisations for specific classes, this PR adds the necessary logic to have this functionality solved in a generic way in the bindings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3640:516,log,logic,516,https://root.cern,https://github.com/root-project/root/pull/3640,1,['log'],['logic']
Testability,Possible fix to error and warning when using ROOT in pytest tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:60,test,tests,60,https://root.cern,https://github.com/root-project/root/pull/3595,1,['test'],['tests']
Testability,Possible solution in a provate branch. Plan to create PR after some additional local tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14557#issuecomment-1943782071:85,test,tests,85,https://root.cern,https://github.com/root-project/root/issues/14557#issuecomment-1943782071,1,['test'],['tests']
Testability,"Potentially related failure on macbeta: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/3525/testReport/junit/projectroot.roottest.python/stl/roottest_python_stl_stl/. ```; ../../../../roottest/python/stl/PyROOT_stltests.py .....Fatal Python error: Segmentation fault. Current thread 0x00007ff851579c80 (most recent call first):; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/python.py"", line 1789 in runtest; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 167 in pytest_runtest_call; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_callers.py"", line 39 in _multicall; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_manager.py"", line 80 in _hookexec; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_hooks.py"", line 265 in __call__; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 260 in <lambda>; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 339 in from_call; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 259 in call_runtest_hook; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 220 in call_and_report; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 131 in runtestprotocol; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 112 in pytest_runtest_protocol; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_callers.py"", line 39 in _multicall; File ""/Library/Frameworks/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874#issuecomment-1590689514:148,test,testReport,148,https://root.cern,https://github.com/root-project/root/issues/12874#issuecomment-1590689514,1,['test'],['testReport']
Testability,"Preloading ""GenVector"", ""MultiProc"", ""TreePlayer"", ""Hist"", ""TreePlayer"" and excluding TFormula test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2010:95,test,test,95,https://root.cern,https://github.com/root-project/root/pull/2010,1,['test'],['test']
Testability,PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301721597:3632,test,testReport,3632,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301721597,1,['test'],['testReport']
Testability,PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301721597:3360,test,testReport,3360,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301721597,1,['test'],['testReport']
Testability,PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/1454/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/638#issuecomment-308045785:1589,test,testReport,1589,https://root.cern,https://github.com/root-project/root/pull/638#issuecomment-308045785,1,['test'],['testReport']
Testability,Prevent functions from crashing due to Python 3.12 assert,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13903:51,assert,assert,51,https://root.cern,https://github.com/root-project/root/pull/13903,1,['assert'],['assert']
Testability,"Prevent issues seen here:; http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=772393. where two JupyROOT tests that use ""%%cpp -a"" seem to step on; each other and generate the same library name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4666:107,test,tests,107,https://root.cern,https://github.com/root-project/root/pull/4666,1,['test'],['tests']
Testability,Prevent roottest_python_JupyROOT_cppcompleter_doctest from failing when OpenGL is disabled. . Suggestions for TProfile should be constant in all builds and they will serve the same purpose: test the tab completion mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1583:190,test,test,190,https://root.cern,https://github.com/root-project/root/pull/1583,1,['test'],['test']
Testability,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13742:20,test,tests,20,https://root.cern,https://github.com/root-project/root/pull/13742,3,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,"Prevent the following error when running the test with VS 2022 v17.9.0:; ```; 779: Processing C:/root-dev/git/master/tutorials/multicore/mt201_parallelHistoFill.C...; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { ?_Swap@?$_Ptr_base@VTH1F@@@std@@IEAAXAEAV12@@Z,; [...]; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-9 }) }; 779: cling JIT session error: Failed to materialize symbols: { (main, { ?mt201_parallelHistoFill@@YAHXZ }) }; 779: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 779: error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14783:45,test,test,45,https://root.cern,https://github.com/root-project/root/pull/14783,1,['test'],['test']
Testability,Prevent the parallel builds of tests from roottest to trigger rebuilding of rootcling_stage1.exe on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10451:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/10451,1,['test'],['tests']
Testability,"Previous changes were tested with Qt 5.12, which is very new and very rare up to now.; Plus there are new functions, which were not exists before",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3795:22,test,tested,22,https://root.cern,https://github.com/root-project/root/pull/3795,1,['test'],['tested']
Testability,"Previous failures were expected (could not find Davix 0.6.4, because externals has version 0.6.2 only, which fails tests).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1766#issuecomment-374956840:115,test,tests,115,https://root.cern,https://github.com/root-project/root/pull/1766#issuecomment-374956840,1,['test'],['tests']
Testability,Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the TClass for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869. backport of https://github.com/root-project/root/pull/10416,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10475:157,test,tests,157,https://root.cern,https://github.com/root-project/root/pull/10475,4,['test'],"['test', 'tests']"
Testability,Previously it was reused it just 'happened' to have the expected size. (This applies only for the treatment of the `TClass` for an std::pair) and help fix the tests on 32 bits platforms. See test: https://github.com/root-project/roottest/pull/869,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10416:159,test,tests,159,https://root.cern,https://github.com/root-project/root/pull/10416,2,['test'],"['test', 'tests']"
Testability,Previously these build options where hidden behind a define and the; only way to test them is to manually add this to the CXX/CC flags; by hand. This patch turns this into a proper (but experimental) build setting; to better document the effort to have proper memory deallocation in; ROOT. It also fixes some of the broken code that was hidden behind; this define.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/794:81,test,test,81,https://root.cern,https://github.com/root-project/root/pull/794,1,['test'],['test']
Testability,"Previously, CMake would ignore the path on Mac nodes since Mac enables the flag macos_native which ignores paths under `/sw`, `/opt/local`, and `/usr/local` when calling `find_program`. Providing the path as a hint makes it find ccache. ; Tested on macitois13.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/428:239,Test,Tested,239,https://root.cern,https://github.com/root-project/root/pull/428,1,['Test'],['Tested']
Testability,"Previously, ROOT7 histograms used different local bin coordinate conventions for GetBinIndex and GetBin(From|Center|To), as discussed in https://sft.its.cern.ch/jira/browse/ROOT-10445 . This PR brings order to that chaos, following the resolution proposed in https://sft.its.cern.ch/jira/browse/ROOT-10446 , and adds some tests which assert that the two binning conventions will remain in sync in the future. While I was looking through the RHistImpl code, investigating further binning logic inconsistencies, I also spotted a few mistakes in the (currently unused) axis growth logic of GetBinIndex. So I corrected those along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4688:322,test,tests,322,https://root.cern,https://github.com/root-project/root/pull/4688,4,"['assert', 'log', 'test']","['assert', 'logic', 'tests']"
Testability,"Previously, it tried to use the clear method which does not exist. Corresponding unit tests are available on this branch:. https://github.com/bbockelm/roottest/tree/makeproject_bitset. @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61:86,test,tests,86,https://root.cern,https://github.com/root-project/root/pull/61,1,['test'],['tests']
Testability,"Previously, the Exec method of the FillTGraphHelper was ambiguous.; Currently, Exec properly handles container and non-container types.; Corresponding tests added.; Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9790:151,test,tests,151,https://root.cern,https://github.com/root-project/root/pull/9790,2,['test'],"['tested', 'tests']"
Testability,"Print info before inserting a value in the vector (therefore invalidating the iterator). This fixes a debug assertion failure ""can't dereference invalidated vector iterator"", as explained [in the standard](https://en.cppreference.com/w/cpp/container/vector/insert):; > Causes reallocation if the new size() is greater than the old capacity(). If the new size() is greater than capacity(), all iterators and references are invalidated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13328:108,assert,assertion,108,https://root.cern,https://github.com/root-project/root/pull/13328,1,['assert'],['assertion']
Testability,"Print warning if eve element does not have a dictionary. The commit 264404b also fixes the crash on streaming to client when element's dictionary is not existing and does not need non-REveElement remote method invocation. . The other 3 commits contains minor corrections to the problems located in testing of CMS event display (table view layout, debug prints, background color setting at connect time).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15092:298,test,testing,298,https://root.cern,https://github.com/root-project/root/pull/15092,1,['test'],['testing']
Testability,"Probably one easy way to assert that is to diff the modulemap files before and after this patch. They work with the headers to be installed, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/767#issuecomment-316925113:25,assert,assert,25,https://root.cern,https://github.com/root-project/root/pull/767#issuecomment-316925113,1,['assert'],['assert']
Testability,"Probably this is just a style preference, but given that we might want to implement similar approaches for other tests, wouldn't it be cleaner to specify the dependency on the xml target from the `ROOT_ADD_TEST` call? imho it looks more sustainable with the perspective of wanting to disable tests that need specific targets of the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16675#issuecomment-2411268091:113,test,tests,113,https://root.cern,https://github.com/root-project/root/pull/16675#issuecomment-2411268091,2,['test'],['tests']
Testability,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct?. Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-823026323:505,assert,asserts,505,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-823026323,1,['assert'],['asserts']
Testability,"Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3704:113,test,tests,113,https://root.cern,https://github.com/root-project/root/pull/3704,1,['test'],['tests']
Testability,"Problem with JupyROOT tests found! ; One need to cleanup a lot of temporary files in roottest/python/JupyROOT directory; This was same code as #5577, therefore closing it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5584#issuecomment-626347463:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/5584#issuecomment-626347463,1,['test'],['tests']
Testability,"Problem: When creating the separate factory for per-fold output, the silent flag was given. This suppresses all TMVA logging output (touches global state). Solution: The silent flag is not passed to the per-fold factory automatically anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4224:117,log,logging,117,https://root.cern,https://github.com/root-project/root/pull/4224,1,['log'],['logging']
Testability,"ProcessID0;1 ""005ae54c-f2ae-1732-8001-96a78a89beef"" ; TTree Nov 08 12:27 2007 T;1 ""An example of a ROOT tree"" ; vpadulan@fedorathinkpad-T550 [~]: rootls -l https://root.cern/files/ATLAS/atlas_aod_mc1613TeVttbar.root; TTree Apr 22 16:55 2017 ##Links;1 ""##Links"" ; TTree Apr 22 16:55 2017 ##Params;1 ""##Params"" ; TTree Apr 22 16:55 2017 ##Shapes;1 ""##Shapes"" ; TTree Apr 22 16:55 2017 CollectionTree;1 ""CollectionTree"" ; TTree Apr 22 16:55 2017 MetaData;1 ""MetaData"" ; TTree Apr 22 16:55 2017 MetaDataHdr;1 ""MetaDataHdr"" ; TTree Apr 22 16:55 2017 MetaDataHdrForm;1 ""MetaDataHdrForm"" ; TTree Apr 22 16:55 2017 POOLCollectionTree;1 ""POOLCollectionTree"" ; TTree Apr 22 16:55 2017 POOLContainer;1 ""POOLContainer"" ; TTree Apr 22 16:55 2017 POOLContainerForm;1 ""POOLContainerForm""; ```; And these with backup cycles; ```; vpadulan@fedorathinkpad-T550 [~]: rootls -l https://root.cern/files/ttree_read_imt.root; TTree Mar 13 17:17 2019 TreeIMT;2 ""TTree for IMT test"" [current cycle]; TTree Mar 13 17:17 2019 TreeIMT;1 ""TTree for IMT test"" [backup cycle]; vpadulan@fedorathinkpad-T550 [~]: rootls -l https://root.cern/files/rootbench/Run2012BC_DoubleMuParked_Muons.root; TTree May 20 06:17 2019 Events;75 ""Events"" [current cycle]; TTree May 20 06:17 2019 Events;74 ""Events"" [backup cycle]; vpadulan@fedorathinkpad-T550 [~]: rootls -l https://root.cern/files/atlas20.root; TTree Sep 22 10:21 2009 CollectionTree;224 ""CollectionTree"" [current cycle]; TTree Sep 22 10:21 2009 CollectionTree;223 ""CollectionTree"" [backup cycle]; vpadulan@fedorathinkpad-T550 [~]: rootls -l https://root.cern/files/RNTuple/treeref/gg_data~zstd.root; TTree May 15 09:53 2020 mini;55 ""mini"" [current cycle]; TTree May 15 09:53 2020 mini;54 ""mini"" [backup cycle]; ```. And this is an example with `hsimple.root` copied three times into the same file to generate three cycles per key:; ```; vpadulan@fedorathinkpad-T550 [~]: rootls -l hsimple.root; TProfile Apr 14 17:47 2021 hprof;1 ""Profile of pz versus px"" ; TH1F Apr 14 17:47 2021 h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7878#issuecomment-821785613:1867,test,test,1867,https://root.cern,https://github.com/root-project/root/pull/7878#issuecomment-821785613,2,['test'],['test']
Testability,"Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of; columns. Columns are divided into pages with a fixed size, e.g. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634:20,benchmark,benchmarks,20,https://root.cern,https://github.com/root-project/root/pull/8634,1,['benchmark'],['benchmarks']
Testability,Project.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_index](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_index/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_deepClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73676/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_deepClass/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605036005:1563,test,testReport,1563,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605036005,4,['test'],['testReport']
Testability,Project.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_deepClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_deepClass/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_index](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73678/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_index/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605063515:1363,test,testReport,1363,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605063515,4,['test'],['testReport']
Testability,Project.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_deepClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_deepClass/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_index](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_index/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/73680/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-604963635:1361,test,testReport,1361,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-604963635,4,['test'],['testReport']
Testability,Project_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.dict.ROOT-9112.roottest_cling_dict_ROOT_9112_ROOT9112](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.cling.dict/ROOT-9112/roottest_cling_dict_ROOT_9112_ROOT9112/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.roottest_root_meta_assertVarOffset_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97918/testReport/projectroot.roottest.root/meta/roottest_root_meta_assertVarOffset_auto/). And 8 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-703233641:3781,test,testReport,3781,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-703233641,4,['test'],['testReport']
Testability,"Projected fields are fields that use existing columns to create alternative type representations of the data. Projected fields are linked to alias columns. We currently support a limited set of projections, namely only for leafs, collections, and records with a matching structure. The first application is for importing leaf count branches. The branches are physically stored in untyped collections and the projected as RVecs to their original names. E.g., _collection0.jet_pt [`float`] --> jet_pt [`RVec<float>`]. On the descriptor level, the PR introduces the separation between physical and logical column IDs. A follow-up PR will take care of projecting a collection offset column to the the count leaf branch (e.g., `njets`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11973:595,log,logical,595,https://root.cern,https://github.com/root-project/root/pull/11973,1,['log'],['logical']
Testability,Projections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.hist/operator/roottest_root_hist_operator_runProjections/); - [projectroot.roottest.root.hist.operator.roottest_root_hist_operator_runsparse](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.hist/operator/roottest_root_hist_operator_runsparse/); - [projectroot.roottest.root.tree.branches.roottest_root_tree_branches_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/); - [projectroot.roottest.root.tree.entrylist.roottest_root_tree_entrylist_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/entrylist/roottest_root_tree_entrylist_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.leaves.roottest_root_tree_leaves_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/leaves/roottest_root_tree_leaves_make/); - [projectroot.roottest.root.tree.query.roottest_root_tree_query_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/query/roottest_root_tree_query_make/); - [projectroot.roottest.root.tree.readfile.roottest_root_tree_readfile_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/readfile/roottest_root_tree_readfile_make/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/27827/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/). And 17 m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-392292012:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-392292012,1,['test'],['testReport']
Testability,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5364:567,test,tests,567,https://root.cern,https://github.com/root-project/root/pull/5364,2,"['benchmark', 'test']","['benchmarking', 'tests']"
Testability,Proof.dir/stressProof.cxx.o; 2023-08-30T18:30:54.7290088Z FAILED: test/CMakeFiles/stressProof.dir/stressProof.cxx.o ; 2023-08-30T18:30:54.7394177Z /usr/bin/c++ -I/github/home/ROOT-CI/build/include -I/github/home/ROOT-CI/src/proof/proof/inc -I/github/home/ROOT-CI/src/math/mathcore/v7/inc -I/github/home/ROOT-CI/src/math/mathcore/inc -I/github/home/ROOT-CI/build/ginclude -I/github/home/ROOT-CI/src/core/base/inc -I/github/home/ROOT-CI/src/core/base/v7/inc -I/github/home/ROOT-CI/src/core/clib/inc -I/github/home/ROOT-CI/src/core/clingutils/inc -I/github/home/ROOT-CI/src/core/clingutils/res -I/github/home/ROOT-CI/src/core/cont/inc -I/github/home/ROOT-CI/src/core/foundation/inc -I/github/home/ROOT-CI/src/core/foundation/v7/inc -I/github/home/ROOT-CI/src/core/gui/inc -I/github/home/ROOT-CI/src/core/meta/inc -I/github/home/ROOT-CI/src/core/textinput/inc -I/github/home/ROOT-CI/src/core/thread/inc -I/github/home/ROOT-CI/src/core/zip/inc -I/github/home/ROOT-CI/src/core/lzma/inc -I/github/home/ROOT-CI/src/core/lz4/inc -I/github/home/ROOT-CI/src/core/zstd/inc -I/github/home/ROOT-CI/src/builtins/zstd -I/github/home/ROOT-CI/src/core/imt/inc -I/github/home/ROOT-CI/src/core/multiproc/inc -I/github/home/ROOT-CI/src/net/net/inc -I/github/home/ROOT-CI/src/io/io/v7/inc -I/github/home/ROOT-CI/src/io/io/inc -I/github/home/ROOT-CI/src/tree/tree/inc -I/github/home/ROOT-CI/src/proof/proofplayer/inc -I/github/home/ROOT-CI/src/hist/hist/inc -I/github/home/ROOT-CI/src/math/matrix/inc -I/github/home/ROOT-CI/src/tree/treeplayer/inc -I/github/home/ROOT-CI/src/graf2d/gpad/inc -I/github/home/ROOT-CI/src/graf2d/graf/inc -I/github/home/ROOT-CI/src/graf3d/g3d/inc -fdiagnostics-color=always -std=c++20 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DDNNCPU -g -std=c++20 -MD -MT test/CMakeFiles/stressProof.dir/stressProof.cxx.o -MF test/CMakeFiles/stressProof.dir/stressProof.cxx.o.d -o test/CMakeFiles/stressProof.dir/stressProof.cxx.o -c /git,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1700410866:2062,test,test,2062,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1700410866,1,['test'],['test']
Testability,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408:62,test,test,62,https://root.cern,https://github.com/root-project/root/pull/5408,2,['test'],['test']
Testability,Proposal to unify logging in Minuit2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:18,log,logging,18,https://root.cern,https://github.com/root-project/root/issues/6421,1,['log'],['logging']
Testability,"ProtoType*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:309:11: warning: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair&lt;void*, long unsigned int&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 222 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_Minimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34938/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_Minimization_Cpu/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34938/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_Names/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2414#issuecomment-409856268:3753,test,tests,3753,https://root.cern,https://github.com/root-project/root/pull/2414#issuecomment-409856268,5,['test'],"['test', 'testReport', 'tests']"
Testability,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7811:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/7811,1,['test'],['test']
Testability,"Provides an implentation for the `DefinitionShadowed()` interpreter callback, that invalidates TCling cached information about a former declaration (that has been shadowed). This PR also includes a minor fix for test 'cling/test/CodeUnloading/DeclShadowing.C'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446:212,test,test,212,https://root.cern,https://github.com/root-project/root/pull/4446,2,['test'],['test']
Testability,PtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_crossReadPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_crossReadPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_crossReadUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_crossReadUniqPtrColls/); - [projectroot.roofit.histfactory.test.gtest_roofit_histfactory_test_testHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roofit.histfactory/test/gtest_roofit_histfactory_test_testHistFactory/); - [projectroot.roottest.root.io.bigevent.roottest_root_io_bigevent_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142796/testReport/projectroot.roottest.root.io/bigevent/roottest_root_io_bigevent_make/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://lcgap,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10416#issuecomment-1103267080:1544,test,testReport,1544,https://root.cern,https://github.com/root-project/root/pull/10416#issuecomment-1103267080,1,['test'],['testReport']
Testability,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13657:169,benchmark,benchmark,169,https://root.cern,https://github.com/root-project/root/pull/13657,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Pull request #11731 introduced internal support for per field post-read callbacks. This follow-up pull request registers a callback for each `#pragma read` rule on user-defined classes.; Currently, `#pragma read` rules referencing non-transient members as a `target` are intentionally disallowed -- a warning is logged in that case. Only target class version is checked, i.e. checksum is ignored. Raw read rules are not (and will likely not be) supported, as they take a `TBuffer &`. ## Changes or fixes:; - Introduce `RFieldBase::AddReadCallbacksFromIORules()`. This function registers a post-read callback for each of the given `ROOT::TSchemaRule`s.; - `RFieldBase::ConnectPageSource()`: cache C++ type version as stored in the RNTupleDescriptor. This information can be accessed via `GetOnDiskTypeVersion()`.; `RFieldBase::RegisterReadCallbacks()` is called as part of `ConnectPageSource()`. This function can be overridden; in particular, derived classes can make use of the on-disk type version to enable/disable read rules.; - RClassField: register a post-read callback for each of the custom I/O rules associated with the target class version.; - I/O customization rules referencing non-transient members are ignored for now. Such rules shall trigger a warning, e.g.; ```; 210: Warning in <[ROOT.NTuple] Warning /home/jalopezg/CERN/repos/root/tree/ntuple/v7/src/RField.cxx:931 in ; ROOT::Experimental::RClassField::RClassField(std::string_view, std::string_view, TClass*)::<lambda(const ; ROOT::TSchemaRule*)>>: ignoring I/O customization rule with non-transient member: a; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR partially takes care of #10019.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944:312,log,logged,312,https://root.cern,https://github.com/root-project/root/pull/11944,2,"['log', 'test']","['logged', 'tested']"
Testability,Put the fix before the test so that we don't have a broken commit on master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-578143930:23,test,test,23,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-578143930,1,['test'],['test']
Testability,Putting back 'do not merge label' as some tests failed on my computer. I will investigate.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332588681:42,test,tests,42,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332588681,1,['test'],['tests']
Testability,PyTorch test/tutorials are (likely) using the same model files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719:8,test,test,8,https://root.cern,https://github.com/root-project/root/issues/16719,1,['test'],['test']
Testability,QlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-24T14:46:56.903Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.61 sec ; - [2022-08-24T14:47:07.739Z] 969/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 2 more. ### Warnings:; - [2022-08-24T14:38:02.485Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1185:26: warning: unused variable ‘NSD’ [-Wunused-variable] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df014_CSVDataSource](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152748/testReport/projectroot/runtutorials/tutorial_dataframe_df014_CSVDataSource/); - [projectroot.runtutorials.tutorial_dataframe_df010_trivialDataSource](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152748/testReport/projectroot/runtutorials/tutorial_dataframe_df010_trivialDataSource/); - [projectroot.runtutorials.tutorial_dataframe_df018_customActions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152748/testReport/projectroot/runtutorials/tutorial_dataframe_df018_customActions/); - [projectroot.runtutorials.tutorial_dataframe_df022_useKahan](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152748/testReport/projectroot/runtutorials/tutorial_dataframe_df022_useKahan/); - [projectroot.runtutorials.tutorial_dataframe_df025_RNode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152748/testReport/projectroot/runtutorials/tutorial_dataframe_df025_RNode/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQli,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1225844891:2912,test,testReport,2912,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1225844891,1,['test'],['testReport']
Testability,QliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.95 sec . And 11 more. ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1185681094:3349,test,test,3349,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1185681094,1,['test'],['test']
Testability,"Quality-of-life improvement for getting typed objects from a TDirectoryFile. Essentially `GetObject` but with return value. Allows; ```; root -l tutorials/tmva/data/toy_sigbkg_categ_offset.root; root [0] _file0->Get(""TreeS""); (TObject *) 0x7f86f7d078f0; root [1] _file0->Get<TTree>(""TreeS""); (TTree *) 0x7f86f7d078f0; root [2] _file0->Get<TBranch>(""TreeS""); (TBranch *) nullptr; root [3] _file0->Get<TObject>(""TreeS""); (TObject *) 0x7f86f7d078f0; ```. Question for tests, how should these be added? I found no examples for testing GetObject. For the documentation maybe the suggested usage should be changed to `MyClass * obj = file->Get<MyClass>(""key"");` to be explicit that a pointer is returned. It currently is `auto obj = file->Get<MyClass>(""key"");`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3501:465,test,tests,465,https://root.cern,https://github.com/root-project/root/pull/3501,2,['test'],"['testing', 'tests']"
Testability,Quiet mode is not working on DoFitSlices because options in `TH2::DoFitSlices` are changed to lowercase on line 811 of TH2.cxx and comparisons are case sensitive. This was not tested locally and (AFAIK) not reported elsewhere .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9481:176,test,tested,176,https://root.cern,https://github.com/root-project/root/pull/9481,1,['test'],['tested']
Testability,QuotesreadTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_escapedQuotesreadTree/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_ioreadrulesfailonwarning/); - [projectroot.roottest.root.meta.genreflex.ROOT-5626.roottest_root_meta_genreflex_ROOT_5626_5626](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta.genreflex/ROOT-5626/roottest_root_meta_genreflex_ROOT_5626_5626/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_8](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_8/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_15](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_15/); - [projectroot.roottest.root.meta.genreflex.iorules.roottest_root_meta_genreflex_iorules_DataModelV2genreflex_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta.genreflex/iorules/roottest_root_meta_genreflex_iorules_DataModelV2genreflex_libgen_build/); - [projectroot.roottest.root.meta.genreflex.iorules.roottest_root_meta_genreflex_iorules_DataModelV2genreflex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195364/testReport/projectroot.roottest.root.meta.genreflex/iorules/roottest_root_meta_genreflex_iorules_DataModelV2genreflex/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14700#issuecomment-1943045902:2122,test,testReport,2122,https://root.cern,https://github.com/root-project/root/pull/14700#issuecomment-1943045902,3,['test'],['testReport']
Testability,R-5806-mac1014-python3&date=2020-06-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/console).; ### Failing tests:; - [projectroot.test.test_stressvector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot/test/test_stressvector/); - [projectroot.test.test_stressshapes](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot/test/test_stressshapes/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_GenVector_Vc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot/test/test_GenVector_Vc/); - [projectroot.net.davix.test.gtest_net_davix_test_RRawFileDavix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot.net.davix/test/gtest_net_davix_test_RRawFileDavix/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85579/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5806#issuecomment-639818844:1237,test,testReport,1237,https://root.cern,https://github.com/root-project/root/pull/5806#issuecomment-639818844,1,['test'],['testReport']
Testability,R-5884-ROOT-fedora31-noimt&date=2020-07-09).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/console).; ### Errors:; - [2020-07-09T10:51:41.539Z] 941/1997 Test #644: tutorial-math-quasirandom .........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.40 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_math_quasirandom](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.runtutorials.tutorial_math_tStudent_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot/runtutorials/tutorial_math_tStudent_py/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_testIMT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89391/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_testIMT/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runcloneCh,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-656062319:1221,test,test,1221,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-656062319,1,['test'],['test']
Testability,RAdoptAllocator.hxx:128:24: warning: 'destroy' is deprecated [-Wdeprecated-declarations] . And 1453 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis_py/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis_py/); - [projectroot.runtutorials.tutorial_dataframe_df104_HiggsToTwoPhotons_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot/runtutorials/tutorial_dataframe_df104_HiggsToTwoPhotons_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116151/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041#issuecomment-829440230:3270,test,testReport,3270,https://root.cern,https://github.com/root-project/root/pull/8041#issuecomment-829440230,1,['test'],['testReport']
Testability,RBox TCling tests vs ROOT7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8620:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/8620,1,['test'],['tests']
Testability,RBrowser - change logic with top and current element,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4635:18,log,logic,18,https://root.cern,https://github.com/root-project/root/pull/4635,1,['log'],['logic']
Testability,"RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5184,test,test-ntuple-extended,5184,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test-ntuple-extended']
Testability,"RD says it is line 1244 that causes a sigsegv. https://gitlab.cern.ch/HZZ/HZZSoftware/HZZAnalRun2Code/-/blob/changes-for-v25-fJVT/H4lAnalysisRun2/Root/H4lAnalRun2Init.cxx. At least nothing of the ATH_MSG_ERROR in the subsequent lines makes it into; the log. I`m not sure how close I can get to that in my test. Cheers,; Rod. On Wed, 16 Dec 2020 at 16:50, Attila Krasznahorkay <notifications@github.com>; wrote:. > Hmm... That in principle looks fine... So okay, your test job *is*; > relevant.; >; > Unfortunately I'm running out of ideas. The XRootD build in; > AnalysisBaseExternals does depend on a couple of libraries from the OS.; > But these should only be things that are part of HEP_OSlibs. So the worker; > nodes should not really have different versions of them...; >; > [bash][lxplus730]:~ > ldd -r /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*.so | grep "" /lib"" | sed ""s/\(.*\) (0x.*)/\1/g"" | sort | uniq; > 	libc.so.6 => /lib64/libc.so.6; > 	libcom_err.so.2 => /lib64/libcom_err.so.2; > 	libcrypt.so.1 => /lib64/libcrypt.so.1; > 	libcrypto.so.10 => /lib64/libcrypto.so.10; > 	libcurl.so.4 => /lib64/libcurl.so.4; > 	libdl.so.2 => /lib64/libdl.so.2; > 	libfreebl3.so => /lib64/libfreebl3.so; > 	libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2; > 	libidn.so.11 => /lib64/libidn.so.11; > 	libk5crypto.so.3 => /lib64/libk5crypto.so.3; > 	libkeyutils.so.1 => /lib64/libkeyutils.so.1; > 	libkrb5.so.3 => /lib64/libkrb5.so.3; > 	libkrb5support.so.0 => /lib64/libkrb5support.so.0; > 	liblber-2.4.so.2 => /lib64/liblber-2.4.so.2; > 	libldap-2.4.so.2 => /lib64/libldap-2.4.so.2; > 	libm.so.6 => /lib64/libm.so.6; > 	libnspr4.so => /lib64/libnspr4.so; > 	libnss3.so => /lib64/libnss3.so; > 	libnssutil3.so => /lib64/libnssutil3.so; > 	libpcre.so.1 => /lib64/libpcre.so.1; > 	libplc4.so => /lib64/libplc4.so; > 	libplds4.so => /lib64/libplds4.so; > 	libpthread.so.0 => /lib64/libpthread.so.0; > 	libresolv.so.2 => /lib64/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746590859:253,log,log,253,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746590859,3,"['log', 'test']","['log', 'test']"
Testability,REFIX=1 ROOT_HIST=0 /scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/bin/root.exe -l -q -b -n -x hsimple.C -e return; Disabling gnu++: clang has no __float128 support on this target!. Processing hsimple.C...; /bin/sh: line 1: 39009 Segmentation fault (core dumped) LD_LIBRARY_PATH=/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-0d11bea31b2c034ddd6b4c7737d8a373/build/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/tbb/v2021.4.0-651a6efca0c94b3c25e36a8faa72480b/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/py3-numpy/1.21.2-c4261ffefd3ca80b00d8cb08e36b5a67/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib64:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/xrootd/5.3.1-848af73ee6ad63bfef156b440c4c5634/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/freetype/2.10.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/libtiff/4.0.10-llifpc/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/dcap/2.47.12/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/gsl/2.6-6f412e4ca4fc2624839dd060c826bd58/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/giflib/5.2.0/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/lz4/1.9.2-ae34c1107fd5df43981b899e3cffb041/lib:/scratch/cmsbuild/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc9/external/fftw3/3.3.8-eac7240065652d3603e8301d2cecf032/lib:/scratch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-986200537:6555,test,tests,6555,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-986200537,2,['test'],"['testBuildDir', 'tests']"
Testability,"RMiniFile only knows how to write into proper ROOT files. ; I went with the blacklist approach because there are a bunch of valid cases that are not just TFiles that we want to support (e.g. TMemFile, TBufferMergerFile, ...). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16825:247,test,tested,247,https://root.cern,https://github.com/root-project/root/pull/16825,1,['test'],['tested']
Testability,"RNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3 (no more will be printed); ../roofit/roofitcore/test/testNaNPacker.cxx:228: Failure; Warning in <ROOT::Math::Fitter::CalculateHessErrors>: Error when calculating Hessian; Value of: a1Final.getVal() < 0. || a1Final.getVal() > 1. || a2Final.getVal() < 0. || a2Final.getVal() > 1.; Actual: false; Expected: true; Recovery strength=0; ```. RooFit stress tests give the following output:. ```; /Users/pbos/projects/apcocsm/roofit-dev/root/cmake-build-debug/test/stressRooFit. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. ******************************************************************; * RooFit - S T R E S S suite *; ******************************************************************; ******************************************************************; * Starting S T R E S S basic suite *; ******************************************************************; Test 1 : Fitting,plotting & event generation of basic p.d.f.....OK; Test 2 : Data import methods....................................OK; Test 3 : Interpreted expression p.d.f...........................OK; Test 4 : C++ function binding operator p.d.f....................OK; Test 5 : Non-standard binning in counting and asymmetr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:1739,test,tests,1739,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,1,['test'],['tests']
Testability,"RNTuple.PageSize (25 ms); [ RUN ] RNTuple.EmptyString; [ OK ] RNTuple.EmptyString (0 ms); [ RUN ] RNTuple.NullSafety; Warning in <[ROOT.NTuple] Warning C:\root-dev\git\debug\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning C:\root-dev\git\debug\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning C:\root-dev\git\debug\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; [ OK ] RNTuple.NullSafety (40 ms); [ RUN ] RNTuple.ModelId; [ OK ] RNTuple.ModelId (0 ms); [ RUN ] RNTuple.Entry; Warning in <[ROOT.NTuple] Warning C:\root-dev\git\debug\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(50) : Assertion failed: can't dereference value-initialized vector iterator. C:\root-dev\build\x86\debug_test\tree\ntuple\v7\test>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13452#issuecomment-1678063438:9183,Assert,Assertion,9183,https://root.cern,https://github.com/root-project/root/pull/13452#issuecomment-1678063438,2,"['Assert', 'test']","['Assertion', 'test']"
Testability,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:11440,test,test,11440,https://root.cern,https://github.com/root-project/root/issues/12427,16,"['Test', 'test']","['Test', 'TestInfo', 'TestSuite', 'test', 'testing']"
Testability,"ROOT ""swallows"" `std::`, and we need to figure out how to handle the namespaces; `std::foo` vs `::foo`. Until we do that, avoid the issue by renaming the only; known ""clash"", using `std::__ROOT` as in several other backport cases. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9093:296,test,tested,296,https://root.cern,https://github.com/root-project/root/pull/9093,1,['test'],['tested']
Testability,ROOT Assertion During Dictionary Loading (2021.06.30.),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:5,Assert,Assertion,5,https://root.cern,https://github.com/root-project/root/issues/8578,1,['Assert'],['Assertion']
Testability,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload TMVA/TreePlayer; to fix all failing tests that are related to this feature/bug with; modules enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1355:282,test,tests,282,https://root.cern,https://github.com/root-project/root/pull/1355,1,['test'],['tests']
Testability,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. 1. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. 2. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup. This PR depends on #1394",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1396:287,test,tests,287,https://root.cern,https://github.com/root-project/root/pull/1396,1,['test'],['tests']
Testability,"ROOT failed to build for aarch64, the build error is; ```; Processing hsimple.C...; cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }; ninja: build stopped: subcommand failed.; error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build); ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2326544365:311,test,tests,311,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2326544365,4,"['log', 'test']","['log', 'testBuildDir', 'tests']"
Testability,"ROOT introduced a build flag in 6.26.00 that allowed you to build it using the `ryml` library instead of nlohmann-json as the backend for the JSON IO. But that was not particularly great. The `ryml` backend code is at risk of rotting, because to try and test it one needs a special ROOT build. It would be much better to just build both backends if `ryml` is installed on the system, and have a mechanism for developers to try this other backend. This is implemented in this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12221:254,test,test,254,https://root.cern,https://github.com/root-project/root/pull/12221,1,['test'],['test']
Testability,ROOT master based CMSSW releases also show the same resulsts:; - https://github.com/cms-sw/cmsdist/pull/6778#issuecomment-811474459 without #7752 . There is no hanging at build time but we see runtime crashes (https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-46d8cb/13898/runTheMatrix-results/1001.0_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5/step3_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5.log); - https://github.com/cms-sw/root/pull/152#issuecomment-811584967 with #7752 . No build or runtime errors but there are comparison differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811655818:586,log,log,586,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811655818,1,['log'],['log']
Testability,ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora30-cxx14&date=2020-04-23).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVAMultipleBackgroundExample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMultipleBackgroundExample/); - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlass/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.test.test_stresstmva_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot/test/test_stresstmva_interpreted/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlassApplication](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlassApplication/); - [projectroot.runtutorials.tutorial_tmva_tmva002_RDataFrameAsTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/projectroot/runtutorials/tutorial_tmva_tmva002_RDataFrameAsTensor/); - [projectroot.runtutorials.tutorial_tmva_tmva003_RReader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78229/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-618648438:1164,test,test,1164,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-618648438,1,['test'],['test']
Testability,"ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), flags=flags; entry=0x7ffc080e6778, arena=arena; entry=0x7faec0ee5910) at Python/pythonrun.c:1242; #18 0x00007faec09ad9e3 in pyrun_file (flags=0x7ffc080e6778, closeit=<optimized out>, locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py') at remote 0x7faec0f08c10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:34510,test,test,34510,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['test'],['test']
Testability,"ROOT's backport of std::index_sequence has O(logN) instantiation; depth, versus StaticSeq's O(N). This guarantees that very large; sequences can be instantiated without exceeding default template; instantiation depths (900 for gcc, 1024 for clang).; std::index_sequence has also noticeably faster compile times. To be merged after #1823",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1825:45,log,logN,45,https://root.cern,https://github.com/root-project/root/pull/1825,1,['log'],['logN']
Testability,ROOT-10254: FoldFileOutput breaks output log,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4224:41,log,log,41,https://root.cern,https://github.com/root-project/root/pull/4224,1,['log'],['log']
Testability,ROOT-9216: Move mathcore tests that depend on RooFit into test/roofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2016:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/2016,2,['test'],"['test', 'tests']"
Testability,ROOT-debian10-i386/cxx14.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/console).; ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124955/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8884#issuecomment-903625903:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/8884#issuecomment-903625903,1,['test'],['testReport']
Testability,ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/console).; ### Failing tests:; - [projectroot.test.test_periodic_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot/test/test_periodic_build/); - [projectroot.core.dictgen.test.gtest_core_dictgen_test_dictgen_base](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.core.dictgen/test/gtest_core_dictgen_test_dictgen_base/); - [projectroot.core.meta.test.gtest_core_meta_test_testTClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.core.meta/test/gtest_core_meta_test_testTClass/); - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153375/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232939819:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232939819,1,['test'],['testReport']
Testability,ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/console).; ### Failing tests:; - [projectroot.test.test_periodic_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot/test/test_periodic_build/); - [projectroot.core.dictgen.test.gtest_core_dictgen_test_dictgen_base](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.core.dictgen/test/gtest_core_dictgen_test_dictgen_base/); - [projectroot.core.meta.test.gtest_core_meta_test_testTClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.core.meta/test/gtest_core_meta_test_testTClass/); - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153908/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1241503929:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1241503929,1,['test'],['testReport']
Testability,ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/console).; ### Failing tests:; - [projectroot.test.test_periodic_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot/test/test_periodic_build/); - [projectroot.core.dictgen.test.gtest_core_dictgen_test_dictgen_base](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.core.dictgen/test/gtest_core_dictgen_test_dictgen_base/); - [projectroot.core.meta.test.gtest_core_meta_test_testTClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.core.meta/test/gtest_core_meta_test_testTClass/); - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154314/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1246639742:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1246639742,1,['test'],['testReport']
Testability,ROOT-fedora27/noimt.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/console).; ### Errors:; - 779/1867 Test #670: tutorial-roostats-StandardFrequentistDiscovery ....................................................***Failed Error regular expression found in output. Regex=[: error:] 17.22 sec . ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_ROOT_kernel_notebook](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_thread_local_notebook/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_roostats_StandardFrequentistDiscovery](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot/runtutorials/tutorial_roostats_StandardFrequentistDiscovery/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/76638/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_roofit_rf511_wsfactory_basic_py](https://epsft-jenkins.cern.ch/job/root-pu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-579640619:1023,test,testReport,1023,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-579640619,1,['test'],['testReport']
Testability,ROOT-fedora29-python3&date=2020-05-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/console).; ### Failing tests:; - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Envelope](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Envelope/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTHn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTHn/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82968/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-631476319:1252,test,testReport,1252,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-631476319,1,['test'],['testReport']
Testability,ROOT-fedora30/cxx14.; Running on root-fedora30-1.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5443-ROOT-fedora30-cxx14&date=2020-04-24).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVAMultipleBackgroundExample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMultipleBackgroundExample/); - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlass/); - [projectroot.runtutorials.tutorial_tmva_TMVAMulticlassApplication](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/runtutorials/tutorial_tmva_TMVAMulticlassApplication/); - [projectroot.runtutorials.tutorial_tmva_tmva002_RDataFrameAsTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/runtutorials/tutorial_tmva_tmva002_RDataFrameAsTensor/); - [projectroot.runtutorials.tutorial_tmva_tmva003_RReader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/runtutorials/tutorial_tmva_tmva003_RReader/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.test.test_stresstmva_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78533/testReport/projectroot/test/test_stresstmva_interpreted/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-servi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-619045777:994,test,testReport,994,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-619045777,1,['test'],['testReport']
Testability,ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/console).; ### Failing tests:; - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList_libgen_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writeClassWithComplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writeClassWithComplex/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_examples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_examples/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_readClassWithComplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102610/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_readClassWithComplex/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProjec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6852#issuecomment-732752694:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/6852#issuecomment-732752694,1,['test'],['testReport']
Testability,ROOT-fedora31/noimt. has an odd error:; ```; 12:03:08 1220/1286 Test #1269: roottest-root-tree-cache-TestCache ................................................................***Failed 3.75 sec; 12:03:08 Start 1277: roottest-root-tree-cloning-treeCloneTest; 12:03:09 1221/1286 Test #1271: roottest-root-tree-cache-TooSmall ................................................................. Passed 3.05 sec; 12:03:09 Start 1278: roottest-root-tree-cloning-runtreeCloneTest2; 12:04:16 1222/1286 Test #1278: roottest-root-tree-cloning-runtreeCloneTest2 ............fatal: No rebase in progress?; 12:04:16 From http://root.cern/git/root; 12:04:16 * branch master -> FETCH_HEAD; 12:04:16 Switched to branch 'master'; 12:04:16 Cannot find file: /build/workspace/root-pullrequests-build/build/Testing/20200916-1638/Test.xml; 12:04:16 Problems when submitting via HTTP; ```; i.e. it seems like another build was started before the end of this one and wrote to the same log file !?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-693542821:64,Test,Test,64,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-693542821,7,"['Test', 'log']","['Test', 'TestCache', 'Testing', 'log']"
Testability,ROOT-fedora31/noimt.; Running on root-fedora-31-1.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-fedora31-noimt&date=2020-06-03).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/console).; ### Warnings:; - [2020-06-03T15:03:14.906Z] /build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:1151:36: warning: unused variable ‘FE’ [-Wunused-variable] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_display](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_display/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.roottest.root.hist.roottest_root_hist_assertSparseToTHn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/testReport/projectroot.roottest.root/hist/roottest_root_hist_assertSparseToTHn/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/84916/testReport/projectroot.roottest.root/meta/roottest_r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-638262213:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-638262213,1,['test'],['testReport']
Testability,ROOT-fedora31/noimt.; Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/console).; ### Failing tests:; - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_lzma_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_lzma_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_datagen_hadd_mzfile12](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_datagen_hadd_mzfile12/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_datagen_hadd_mzlibfile12](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_datagen_hadd_mzlibfile12/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_datagen_hadd_mlz4file34](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118369/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_datagen_hadd_mlz4file34/); - [projectroot.roottest.root.io.fi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8228#issuecomment-846066467:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/8228#issuecomment-846066467,1,['test'],['testReport']
Testability,ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5296-ROOT-performance-centos7-multicore-default&date=2020-04-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/console).; ### Failing tests:; - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_unorderedMap](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_unorderedMap/); - [projectroot.runtutorials.tutorial_foam_foam_demopers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testReport/projectroot/runtutorials/tutorial_foam_foam_demopers/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.references.roottest_root_io_references_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testReport/projectroot.roottest.root.io/references/roottest_root_io_references_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.io.rootcint.roottest_root_io_rootcint_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testReport/projectroot.roottest.root.io/rootcint/roottest_root_io_rootcint_make/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75140/testRepor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609408155:1030,test,testReport,1030,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609408155,1,['test'],['testReport']
Testability,ROOT-performance-centos7-multicore/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/console).; ### Failing tests:; - [projectroot.test.test_stressroofit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/test/test_stressroofit/); - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.test.test_stressroostats](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/test/test_stressroostats/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooJohnson](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooJohnson/); - [projectroot.test.test_stressroofit_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.test.test_stressroostats_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/test/test_stressroostats_interpreted/); - [projectroot.runtutorials.tutorial_roofit_rf101_basics](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/runtutorials/tutorial_roofit_rf101_basics/); - [projectroot.runtutorials.tutorial_roofit_rf111_derivatives](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/78453/testReport/projectroot/runtutorials/tutorial_roofit_rf111_derivatives/). And 98 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5003#issuecomment-586353239:1025,test,test,1025,https://root.cern,https://github.com/root-project/root/pull/5003#issuecomment-586353239,12,['test'],"['test', 'testReport']"
Testability,"ROOT-performance-centos7-multicore/default: build and test succeeded, upload failed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6351#issuecomment-693476024:54,test,test,54,https://root.cern,https://github.com/root-project/root/pull/6351#issuecomment-693476024,1,['test'],['test']
Testability,ROOT-performance-centos8-multicore/soversion.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187560/console).; ### Errors:; - [2023-10-19T23:38:38.739Z] 1496/2456 Test #1219: tutorial-roofit-rf105_funcbinding-py ..............................................................***Failed Error regular expression found in output. Regex=[: error:] 4.14 sec ; - [2023-10-19T23:38:50.115Z] 1575/2456 Test #1284: tutorial-roofit-rf607_fitresult-py ................................................................***Failed Error regular expression found in output. Regex=[: error:] 5.06 sec ; - [2023-10-19T23:38:55.735Z] 1657/2456 Test #1310: tutorial-roostats-FourBinInstructional-py .........................................................***Failed Error regular expression found in output. Regex=[: error:] 6.57 sec ; - [2023-10-19T23:38:56.000Z] 1667/2456 Test #1312: tutorial-roostats-MultivariateGaussianTest-py .....................................................***Failed Error regular expression found in output. Regex=[: error:] 6.76 sec ; - [2023-10-19T23:39:15.276Z] 1856/2456 Test #1314: tutorial-roostats-rs101_limitexample-py ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 25.67 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf105_funcbinding_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187560/testReport/projectroot/runtutorials/tutorial_roofit_rf105_funcbinding_py/); - [projectroot.runtutorials.tutorial_roofit_rf607_fitresult_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187560/testReport/projectroot/runtutorials/tutorial_roofit_rf607_fitresult_py/); - [projectroot.runtutorials.tutorial_roostats_FourBinInstructional_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13900#issuecomment-1771851532:995,Test,Test,995,https://root.cern,https://github.com/root-project/root/pull/13900#issuecomment-1771851532,1,['Test'],['Test']
Testability,ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/console).; ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_TBufferMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.io.io/test/gtest_io_io_test_TBufferMerger/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot_manytasks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot_manytasks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118370/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8228#issuecomment-846080719:1014,test,test,1014,https://root.cern,https://github.com/root-project/root/pull/8228#issuecomment-846080719,1,['test'],['test']
Testability,ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-3.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_roofit_rooabscollection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_roofit_rooabscollection/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_string_view_backport](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_string_view_backport/); - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180932/testReport/projectroot.roottest.cling/typedef_globa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341#issuecomment-1653822283:991,test,test,991,https://root.cern,https://github.com/root-project/root/pull/13341#issuecomment-1653822283,1,['test'],['test']
Testability,ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] . And 38 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55025/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55025/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55025/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55025/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3492#issuecomment-471527739:1148,test,tests,1148,https://root.cern,https://github.com/root-project/root/pull/3492#issuecomment-471527739,1,['test'],['tests']
Testability,ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] . And 38 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54808/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54808/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3492#issuecomment-470186134:1148,test,tests,1148,https://root.cern,https://github.com/root-project/root/pull/3492#issuecomment-470186134,1,['test'],['tests']
Testability,ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] ; - include/ROOT/RAdoptAllocator.hxx:109:22: warning: unused parameter 'buf' [-Wunused-parameter] . And 38 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54820/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54820/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54820/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54820/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3492#issuecomment-470253795:1148,test,tests,1148,https://root.cern,https://github.com/root-project/root/pull/3492#issuecomment-470253795,1,['test'],['tests']
Testability,"ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_descriptor.vcxproj] ; - [2020-10-09T14:05:30.761Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\ntuple_test.hxx(23,10): fatal error C1083: Cannot open include file: 'ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_show.vcxproj] ; - [2020-10-09T14:05:30.761Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\ntuple_test.hxx(23,10): fatal error C1083: Cannot open include file: 'ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_extended.vcxproj] ; - [2020-10-09T14:05:30.761Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\ntuple_test.hxx(23,10): fatal error C1083: Cannot open include file: 'ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_metrics.vcxproj] ; - [2020-10-09T14:05:30.761Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\ntuple_test.hxx(23,10): fatal error C1083: Cannot open include file: 'ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_packing.vcxproj] ; - [2020-10-09T14:05:30.761Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\ntuple_test.hxx(23,10): fatal error C1083: Cannot open include file: 'ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_pages.vcxproj] ; - [2020-10-09T14:05:30.761Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\ntuple_test.hxx(23,10): fatal error C1083: Cannot open include file: 'ROOT/RRawFile.hxx': No such file or directory [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_print.vcxproj] ; - [2020-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-706203507:1424,test,test,1424,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-706203507,1,['test'],['test']
Testability,"ROOT/RVec.hxx(2062,16):. warning C4805: '==': unsafe mix of type 'const T' and type 'bool'; in operation [C:\Soft\root_64\math\vecops\test\vecops_rvec.vcxproj]; with; [; T=int; ]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9812:134,test,test,134,https://root.cern,https://github.com/root-project/root/pull/9812,1,['test'],['test']
Testability,"ROOT/build-clang-asan/lib/libCore.so+0x44c1a6); 418: #3 0x7f4f0c80cb9f in THashList::Delete(char const*) (/home/jhahnfel/ROOT/build-clang-asan/lib/libCore.so+0x433b9f); 418: #4 0x7f4f0d640e30 in TDirectoryFile::Close(char const*) (/home/jhahnfel/ROOT/build-clang-asan/lib/libRIO.so+0x285e30); 418: #5 0x7f4f0d678f08 in TFile::Close(char const*) (/home/jhahnfel/ROOT/build-clang-asan/lib/libRIO.so+0x2bdf08); 418: #6 0x7f4f0d678050 in TFile::~TFile() (/home/jhahnfel/ROOT/build-clang-asan/lib/libRIO.so+0x2bd050); 418: #7 0x7f4f0d67898d in TFile::~TFile() (/home/jhahnfel/ROOT/build-clang-asan/lib/libRIO.so+0x2bd98d); 418: #8 0x52289f in BulkApiVariableTest_stdRead_Test::TestBody() (/home/jhahnfel/ROOT/build-clang-asan/tree/tree/test/testBulkApiVarLength+0x52289f). [...]. 418: previously allocated by thread T0 here:; 418: #0 0x51ea88 in operator new(unsigned long) (/home/jhahnfel/ROOT/build-clang-asan/tree/tree/test/testBulkApiVarLength+0x51ea88); 418: #1 0x7f4f0c71e9ce in TStorage::ObjectAlloc(unsigned long) (/home/jhahnfel/ROOT/build-clang-asan/lib/libCore.so+0x3459ce); 418: #2 0x7f4f10a65df5 in ROOT::new_TTree(void*) G__Tree.cxx; 418: #3 0x7f4f0c9094d2 in TClass::NewObject(TClass::ENewType, bool) const (/home/jhahnfel/ROOT/build-clang-asan/lib/libCore.so+0x5304d2); 418: #4 0x7f4f0c90943e in TClass::New(TClass::ENewType, bool) const (/home/jhahnfel/ROOT/build-clang-asan/lib/libCore.so+0x53043e); 418: #5 0x7f4f0d765626 in TKey::ReadObjectAny(TClass const*) (/home/jhahnfel/ROOT/build-clang-asan/lib/libRIO.so+0x3aa626); 418: #6 0x7f4f0d645eb0 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) (/home/jhahnfel/ROOT/build-clang-asan/lib/libRIO.so+0x28aeb0); 418: #7 0x7f4f110c884e in TTreeReader::TTreeReader(char const*, TDirectory*, TEntryList*) (/home/jhahnfel/ROOT/build-clang-asan/lib/libTreePlayer.so+0x21284e); 418: #8 0x521e1d in BulkApiVariableTest_stdRead_Test::TestBody() (/home/jhahnfel/ROOT/build-clang-asan/tree/tree/test/testBulkApiVarLength+0x521e1d); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10096:2920,Test,TestBody,2920,https://root.cern,https://github.com/root-project/root/issues/10096,3,"['Test', 'test']","['TestBody', 'test', 'testBulkApiVarLength']"
Testability,ROOT/roottest_python_JupyROOT_utils_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72821/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675#issuecomment-562985347:1523,test,testReport,1523,https://root.cern,https://github.com/root-project/root/pull/4675#issuecomment-562985347,1,['test'],['testReport']
Testability,ROOT9975](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_ROOT9975/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readShip](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readShip/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_chainZombieFile_WILL_FAIL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_chainZombieFile_WILL_FAIL/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches_WILL_FAIL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches_WILL_FAIL/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_testIMT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_testIMT/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140997/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10276#issuecomment-1083478960:1894,test,testReport,1894,https://root.cern,https://github.com/root-project/root/pull/10276#issuecomment-1083478960,4,['test'],['testReport']
Testability,"ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8801,Test,Test,8801,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Test'],['Test']
Testability,"ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11736,test,test,11736,https://root.cern,https://github.com/root-project/root/issues/12426,1,['test'],['test']
Testability,ROOT::Math::IMultiGenFunctionTempl&lt;double&gt;’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: conflicting declaration ‘typedef using IBaseFunctionMultiDim = class ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt; ROOT::Math::IMultiGenFunction’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:24:7: error: conflicting declaration ‘struct RooMinimizer’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:1431,Test,TestStatistics,1431,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['Test'],['TestStatistics']
Testability,"ROOT::RDF' ; - [2022-12-12T11:05:01.955Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_sqlite.cxx:38:26: error: no member named 'FromSQLite' in namespace 'ROOT::RDF' ; - [2022-12-12T11:05:01.955Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_sqlite.cxx:69:4: error: unknown type name 'RSqliteDS' ; - [2022-12-12T11:05:01.955Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_sqlite.cxx:97:4: error: unknown type name 'RSqliteDS' ; - [2022-12-12T11:05:01.955Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_sqlite.cxx:109:4: error: unknown type name 'RSqliteDS' ; - [2022-12-12T11:05:01.955Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_sqlite.cxx:125:4: error: unknown type name 'RSqliteDS' ; - [2022-12-12T11:05:01.955Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_sqlite.cxx:145:4: error: unknown type name 'RSqliteDS' . And 4 more. ### Warnings:; - [2022-12-12T11:02:53.797Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:14:2: warning: ""RSqliteDS.hxx was renamed to RSQLiteDS.hxx. Please change your includes accordingly."" [-W#warnings] ; - [2022-12-12T11:02:53.797Z] &lt;&lt;&lt; cling interactive line includer &gt;&gt;&gt;:55:10: warning: non-portable path to file '""ROOT/RSqliteDS.hxx""'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - [2022-12-12T11:02:53.797Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:14:2: warning: ""RSqliteDS.hxx was renamed to RSQLiteDS.hxx. Please change your includes accordingly."" [-W#warnings] ; - [2022-12-12T11:02:53.797Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/RSQLiteDS.hxx:15:10: warning: non-portable path to file '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11125#issuecomment-1346283094:1988,test,test,1988,https://root.cern,https://github.com/root-project/root/pull/11125#issuecomment-1346283094,1,['test'],['test']
Testability,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2746,test,test,2746,https://root.cern,https://github.com/root-project/root/pull/11153,5,['test'],['test']
Testability,"ROOT::TThreadExecutor::Map(F,unsigned int)': could not deduce template argument for 'Cond' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: [ [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: _Ty=std::result_of&lt;F(void)&gt;::type [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: ] [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: 'std::vector&lt;std::result_of&lt;F(INTEGER)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TExecutor&lt;ROOT::TThreadExecutor&gt;::Map(F,std::initializer_list&lt;T&gt;)': could not deduce template argument for 'std::initializer_list&lt;T&gt;' from 'int' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] . And 7 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682883281:2666,test,test,2666,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682883281,6,['test'],['test']
Testability,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12469:6,Test,TestSupport,6,https://root.cern,https://github.com/root-project/root/pull/12469,15,"['Test', 'test']","['TestSupport', 'test', 'tests', 'testsupport']"
Testability,ROOT_8096_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tclass_dynamiccast/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectory_attrsyntax](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectory_attrsyntax/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_constructor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94127/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_constructor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682578278:2138,test,test,2138,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682578278,1,['test'],['test']
Testability,ROOT_ADD_PYUNITTEST and ROOT_ADD_GTEST are naming test inconsitently.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16647:50,test,test,50,https://root.cern,https://github.com/root-project/root/issues/16647,1,['test'],['test']
Testability,ROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_W,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:3646,Test,Test,3646,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Test'],['Test']
Testability,"RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked.; This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13022:579,test,test,579,https://root.cern,https://github.com/root-project/root/pull/13022,2,['test'],"['test', 'tested']"
Testability,"RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11690,test,tests,11690,https://root.cern,https://github.com/root-project/root/issues/12426,2,['test'],"['test', 'tests']"
Testability,"RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16037:171,test,tested,171,https://root.cern,https://github.com/root-project/root/pull/16037,1,['test'],['tested']
Testability,RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.62 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_dataframe_df018_customActions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_dataframe_df018_customActions/); - [projectroot.runtutorials.tutorial_dataframe_df022_useKahan](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_dataframe_df022_useKahan/); - [projectroot.runtutorials.tutorial_dataframe_df025_RNode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_dataframe_df025_RNode/); - [projectroot.runtutorials.tutorial_legacy_tasks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_legacy_tasks/); - [projectroot.runtutorials.tutorial_foam_foam_demopers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_foam_foam_demopers/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153909/testReport/projectroot/runtutorials/tutorial_multicore_mp105_processEntryList/); - [projectroot.runtutorials.tutorial_roofit_rf512_wsfactory_oper](https://lcgapp-services.cern.ch/root-jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1241502882:2231,test,testReport,2231,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1241502882,1,['test'],['testReport']
Testability,RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.96 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory/); - [projectroot.runtutorials.tutorial_dataframe_df018_customActions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_dataframe_df018_customActions/); - [projectroot.runtutorials.tutorial_dataframe_df022_useKahan](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_dataframe_df022_useKahan/); - [projectroot.runtutorials.tutorial_dataframe_df025_RNode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_dataframe_df025_RNode/); - [projectroot.runtutorials.tutorial_legacy_tasks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_legacy_tasks/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_multicore_mp105_processEntryList/); - [projectroot.runtutorials.tutorial_roofit_rf512_wsfactory_oper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153913/testReport/projectroot/runtutorials/tutorial_roofit_rf512_wsfactory_oper/); - [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification](https://lcgapp-servic,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1241553083:2216,test,testReport,2216,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1241553083,1,['test'],['testReport']
Testability,"RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RealWorld1 (9118 ms); [ RUN ] RNTuple.RandomAccess; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3716,test,tests,3716,https://root.cern,https://github.com/root-project/root/issues/12427,2,['test'],"['test', 'tests']"
Testability,"RSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; ```. LXPLUS7:; ```; ROOT Version: 6.24/08; Built for linuxx8664gcc on Sep 29 2022, 13:04:57; From tags/v6-24-08@v6-24-08; ```. LXPLUS8:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. LXPLUS9:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. <!--; 1. ROOT version; 2. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:2613,sandbox,sandbox,2613,https://root.cern,https://github.com/root-project/root/issues/11977,1,['sandbox'],['sandbox']
Testability,RStringView.hxx:17:31: warning: extra tokens at end of #ifdef directive ; - [2021-05-06T13:26:08.578Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RStringView.hxx:58:42: warning: extra tokens at end of #ifndef directive . And 4420 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108#issuecomment-833537392:2848,test,testReport,2848,https://root.cern,https://github.com/root-project/root/pull/8108#issuecomment-833537392,1,['test'],['testReport']
Testability,RStringView.hxx:17:31: warning: extra tokens at end of #ifdef directive ; - [2021-05-06T13:28:07.687Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RStringView.hxx:58:42: warning: extra tokens at end of #ifndef directive . And 4701 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116958/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116958/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116958/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116958/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116958/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116958/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108#issuecomment-833559103:2795,test,testReport,2795,https://root.cern,https://github.com/root-project/root/pull/8108#issuecomment-833559103,1,['test'],['testReport']
Testability,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:2552,test,tested,2552,https://root.cern,https://github.com/root-project/root/issues/8281,1,['test'],['tested']
Testability,"RY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:2328,TEST,TEST,2328,https://root.cern,https://github.com/root-project/root/issues/6597,1,['TEST'],['TEST']
Testability,"Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13762:29,test,testing,29,https://root.cern,https://github.com/root-project/root/pull/13762,2,['test'],"['tested', 'testing']"
Testability,"Rather than non-const reference. This has two advantages:; - passing fundamental types by value is slightly more efficient; - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code?. - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526:297,test,test,297,https://root.cern,https://github.com/root-project/root/pull/6526,1,['test'],['test']
Testability,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15968:391,test,tested,391,https://root.cern,https://github.com/root-project/root/pull/15968,1,['test'],['tested']
Testability,"Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ?; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15969:391,test,tested,391,https://root.cern,https://github.com/root-project/root/pull/15969,1,['test'],['tested']
Testability,"Re the question ""do we need to set env or not"":; `$ ctest -V -R mathcore-testSpecFuncErf` does; ```; 17: Test command: /mnt/a/build/local/cmake/cmake-3.7.1-Linux-x86_64/bin/cmake ""-DCMD=/home/axel/build/root/github/cmake-reldeb/math/mathcore/test/testSpecFuncErf"" ""-DSYS=/home/axel/build/root/github/cmake-reldeb"" ""-P"" ""/home/axel/build/root/github/src/cmake/modules/RootTestDriver.cmake""; ```. That in turn sets; ```; if(SYS); if(WIN32); file(TO_NATIVE_PATH ${SYS}/bin _path); set(ENV{PATH} ""${_path};$ENV{PATH}""); elseif(APPLE); set(ENV{PATH} ${SYS}/bin:$ENV{PATH}); set(ENV{DYLD_LIBRARY_PATH} ${SYS}/lib:$ENV{DYLD_LIBRARY_PATH}); else(); set(ENV{PATH} ${SYS}/bin:$ENV{PATH}); set(ENV{LD_LIBRARY_PATH} ${SYS}/lib:$ENV{LD_LIBRARY_PATH}); endif(); endif(); ```. So as long as these tests run through RootTestDriver.cmake we should be good. Do they?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/451#issuecomment-292104564:73,test,testSpecFuncErf,73,https://root.cern,https://github.com/root-project/root/pull/451#issuecomment-292104564,5,"['Test', 'test']","['Test', 'test', 'testSpecFuncErf', 'tests']"
Testability,Re your questions about how this affects more benchmarks: I think we have to either run all rootbench with/without this change and compare (which is annoyingly manual) or merge and check the impact in grafana.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9342#issuecomment-979869782:46,benchmark,benchmarks,46,https://root.cern,https://github.com/root-project/root/pull/9342#issuecomment-979869782,1,['benchmark'],['benchmarks']
Testability,Re-add tmva DNN tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4522:16,test,tests,16,https://root.cern,https://github.com/root-project/root/pull/4522,1,['test'],['tests']
Testability,Re-add tmva test directories were removed by mistake in a previous commit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4522:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/4522,1,['test'],['test']
Testability,Re-enable `testRooFuncWrapper` with recent versions of Visual Studio,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15026:11,test,testRooFuncWrapper,11,https://root.cern,https://github.com/root-project/root/pull/15026,1,['test'],['testRooFuncWrapper']
Testability,"Re-enable many tests on Windows, depending on the c++ standard (14/17) and the architecture (x86/x64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10406:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/10406,1,['test'],['tests']
Testability,Re-enable several tests and tutorials on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10406:18,test,tests,18,https://root.cern,https://github.com/root-project/root/pull/10406,1,['test'],['tests']
Testability,Re-enable the `SmallClusters` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14312:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/14312,1,['test'],['test']
Testability,"Re-requesting review from @pcanal after applying suggestions. The RBatchGenerator tutorials are passing on Linux and mac nodes, other failing TMVA tests are being handled separately and are not related to this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1705127640:147,test,tests,147,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1705127640,1,['test'],['tests']
Testability,"Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6559:72,benchmark,benchmark,72,https://root.cern,https://github.com/root-project/root/pull/6559,1,['benchmark'],['benchmark']
Testability,Read only one column from the remote file to speed up the test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16307:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/16307,1,['test'],['test']
Testability,ReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_21](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_21/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_22](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_22/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_31](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16071/testReport/projectroot.roottest.root.io/std,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573#issuecomment-362170283:1229,test,testReport,1229,https://root.cern,https://github.com/root-project/root/pull/1573#issuecomment-362170283,1,['test'],['testReport']
Testability,"ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1965,Test,TestProdPdf,1965,https://root.cern,https://github.com/root-project/root/issues/12430,1,['Test'],['TestProdPdf']
Testability,"Reading `RVecs` with `RNTuple` incurs in an off-by-one-byte error, because all `RVec<T>` are deserialized as `std::vector<char>`, but the position of the data buffer is different for `RVecs`:. ```; >>> p ((ROOT::VecOps::RVec<int>*)0x5555596c72a0)->data(); $983 = (int *) 0x5555581b2918; >>> p ((std::vector<char, std::allocator<char> > *)0x5555596c72a0)->data(); $984 = 0x5555581b2910; ```. I think the problematic logic is [here](https://github.com/root-project/root/blob/8d5b55f51ad8449d83fc0db8f49217e556c34036/tree/ntuple/v7/src/RField.cxx#L660). A second issue related to RVecs is that at RField.cxx:638 we use RVectorField for reading RVecs, but this means that the parent RField will have type name `std::vector<...>` even if it should (probably?) be `RVec<...>`. #6336 contains a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347:415,log,logic,415,https://root.cern,https://github.com/root-project/root/issues/6347,1,['log'],['logic']
Testability,"Reading the console output of jenkins it seems, that always 100% of the tests successfully pass, but it fails copying a certain file afterwards. Is this a bug from my side? If so, any suggestions on how to fix it? :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-367308051:72,test,tests,72,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-367308051,1,['test'],['tests']
Testability,"Reading the log, it seems like the moment we feared arrived and `tbb::task_arena` is not an alias of `tbb::interface7::task_arena` anymore but of `tbb::detail::d1::task_arena`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933#issuecomment-762273176:12,log,log,12,https://root.cern,https://github.com/root-project/root/issues/6933#issuecomment-762273176,1,['log'],['log']
Testability,"ReadsStd17 (1073 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesTL; 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms); 76: [----------] 88 tests from RWLock (169985 ms total); 76: ; 76: [----------] 10 tests from TThreadedObject; 76: [ RUN ] TThreadedObject.CreateAndDestroy; 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms); 76: [ RUN ] TThreadedObject.Get; 76: [ OK ] TThreadedObject.Get (8 ms); 76: [ RUN ] TThreadedObject.GetAtSlot; 76: [ OK ] TThreadedObject.GetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked; 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotRaw; 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms); 76: [ RUN ] TThreadedObject.SetAtSlot; 76: [ OK ] TThreadedObject.SetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.Merge; 76: [ OK ] TThreadedObject.Merge (128 ms); 76: [ RUN ] TThreadedObject.SnapshotMerge; 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms); 76: [ RUN ] TThreadedObject.GrowSlots; 76: [ OK ] TThreadedObject.GrowSlots (1 ms); 76: [ RUN ] TThreadedObject.GetNSlots; 76: [ OK ] TThreadedObject.GetNSlots (1 ms); 76: [----------] 10 tests from TThreadedObject (139 ms total); 76: ; 76: [----------] Global test environment tear-down; 76: [==========] 104 tests from 3 test suites ran. (170981 ms total); 76: [ PASSED ] 104 tests.; 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:; gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:11958,test,tests,11958,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,12,"['Test', 'test']","['Test', 'test', 'test-corethreadtestUnit', 'tests']"
Testability,Real time on Mac 10.14:. test | master | this PR; ----|-----|----; stressGraphics | 32 | 31; df102_NanoAODDimuonAnalysis.C | 232 | 152. OK so merging. Thanks @bluehood for the Linux data!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2675#issuecomment-424649053:25,test,test,25,https://root.cern,https://github.com/root-project/root/pull/2675#issuecomment-424649053,1,['test'],['test']
Testability,"Rebase PR #1396. Original PR comment:; ""ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697:327,test,tests,327,https://root.cern,https://github.com/root-project/root/pull/1697,1,['test'],['tests']
Testability,Rebased & test added 🚀,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16540#issuecomment-2378456099:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/16540#issuecomment-2378456099,1,['test'],['test']
Testability,"Rebased on `master` to trigger the CI tests. When the CI is green, I think this can be merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13014#issuecomment-1881721751:38,test,tests,38,https://root.cern,https://github.com/root-project/root/pull/13014#issuecomment-1881721751,1,['test'],['tests']
Testability,Rebased on current master and squashed fixes into corresponding commits. If tests pass I will merge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9941#issuecomment-1047890442:76,test,tests,76,https://root.cern,https://github.com/root-project/root/pull/9941#issuecomment-1047890442,1,['test'],['tests']
Testability,Rebased on master now that #1046 has been merged. Tests are expected to be green now (although more testing of the callback registration has to be added).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331853646:50,Test,Tests,50,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331853646,2,"['Test', 'test']","['Tests', 'testing']"
Testability,Rebased on master to fix conflicts.; I will definitely add more multi-thread tests but I think this can be safely merged if jenkins returns green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-333239205:77,test,tests,77,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-333239205,1,['test'],['tests']
Testability,"Rebased on master to roll back some of the changes and instead follow Axel's suggestions:. - `fSize` and `fCapacity` are now signed integers; - `fCapacity == -1` signals we are in ""memory adoption"" mode; - `assert`s changed into `throw`s where possible; - added a `ARCHITECTURE.md` document that summarizes the design and purpose of the VecOps library. I am having some issues with adding the small buffer size as a template parameter of `RVec`: templated helper functions would need to change signature and I/O needs patching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-861702251:207,assert,assert,207,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-861702251,1,['assert'],['assert']
Testability,Rebased on master to trigger new tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12146#issuecomment-1829455225:33,test,tests,33,https://root.cern,https://github.com/root-project/root/pull/12146#issuecomment-1829455225,1,['test'],['tests']
Testability,"Rebased on top of recently merged #10565 , will merge if tests pass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10560#issuecomment-1132938004:57,test,tests,57,https://root.cern,https://github.com/root-project/root/pull/10560#issuecomment-1132938004,1,['test'],['tests']
Testability,Rebased to hopefully avoid the previously remaining test failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631#issuecomment-1480146242:52,test,test,52,https://root.cern,https://github.com/root-project/root/pull/11631#issuecomment-1480146242,1,['test'],['test']
Testability,Rebased to master with PR #1872 and addressed the comments. Tested locally with py2 and py3.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1889#issuecomment-383898115:60,Test,Tested,60,https://root.cern,https://github.com/root-project/root/pull/1889#issuecomment-383898115,1,['Test'],['Tested']
Testability,"Rebased, so that the tests run against the latest version. Maybe it''s getting better?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2147918552:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2147918552,1,['test'],['tests']
Testability,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3898#issuecomment-498800284:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/3898#issuecomment-498800284,1,['test'],['test']
Testability,Rebuilding because the jenkins logs are gone,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8170#issuecomment-1106144920:31,log,logs,31,https://root.cern,https://github.com/root-project/root/pull/8170#issuecomment-1106144920,1,['log'],['logs']
Testability,"Received unexpected diagnostic of severity 3000 at 'TChain::SetBranchAddress' reading 'unknown branch -> i'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::SetBranchAddress' reading 'unknown branch -> g'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 13; [ FAILED ] TRootTDS.FromARDFMT (9 ms); [ RUN ] TRootTDS.FromARDFWithJittingMT; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::LoadTree' reading 'Cannot find tree with name t in file C:/build/workspace/root-pullrequests-build/build/tree/dataframe/test/specTestDescribe3.root'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::LoadTree' reading 'Cannot find tree with name t in file C:/build/workspace/root-pullrequests-build/build/tree/dataframe/test/testDescribeDataset3.root'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(186): error: Expected equality of these values:; 5.; Which is: 5; *max; Which is: 0; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(187): error: Expected equality of these values:; 5.; Which is: 5; *min; Which is: 7; [ FAILED ] TRootTDS.FromARDFWithJittingMT (587 ms); ```; These dataframes are constructed from a `RRootDS` with `fileGlob = ""TRootTDS_input_*.root""` - *why* do `RCsvDS_test_headers.cs` (note the missing `v`!), `specTestDescribe3.root` and `testDescribeDataset3.root` ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13460#issuecomment-1681726222:2019,Test,TestSupport,2019,https://root.cern,https://github.com/root-project/root/pull/13460#issuecomment-1681726222,1,['Test'],['TestSupport']
Testability,"Recent change to master fixed some tests which were excluded previously, so I reverted ""excluding tests"" patches and excluded three tests which were failing in current master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2040:35,test,tests,35,https://root.cern,https://github.com/root-project/root/pull/2040,3,['test'],['tests']
Testability,"Recent changes in Snapshot broke the edge case of a compiled Snapshot; call with no selected columns, i.e. `Snapshot<>(""tree"", ""f.root"", {})`.; This commit adds support for this case in the CreateAction machinery; that Snapshot now makes use of, re-enabling this usecase. We have a ""test"" for this usecase in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6620:283,test,test,283,https://root.cern,https://github.com/root-project/root/pull/6620,1,['test'],['test']
Testability,"Recent commits have introduced the ability to read TBranchObjects into TTreeReader and RDF.; Writing of TBranchObjects, however, was still not working correctly. This PR fixes the writing part of ROOT-10022 and adds the corresponding tests. @pcanal can you think of other cases we should be testing? Should we also propagate the value of `TBranch::GetMakeClass` from input branch to output branch? Do `TBranchElements` require similar special-casing (it doesn't seem so from our tests)?. EDIT: I also ran these tests through valgrind, all is well",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6094:234,test,tests,234,https://root.cern,https://github.com/root-project/root/pull/6094,4,['test'],"['testing', 'tests']"
Testability,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/12561,1,['test'],['test']
Testability,"Recently, I have seen some use of the `RooBifurGauss` in the wild, so this commit is completing its implementation for the newest RooFit features:. 1. Support code generation of evaluation and analytical integral; 2. Unit test for fitting with AD; 3. Unit test for analytical integral, cross-checking with RooGaussian; 4. Code formatting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14243:222,test,test,222,https://root.cern,https://github.com/root-project/root/pull/14243,2,['test'],['test']
Testability,"Recently, in commit https://github.com/root-project/root/commit/47c250898f3d3a1bb1718c73b84014a70809ffdf, the algorithm to figure out the value; and shape servers of integrals was rewritten. However, the new; implementation analyzed the computation graph by pointer, which caused a; wrong list of servers if one passed clones of the integration variables; to the integral constructor. This commit fixes that, and also implements a unit test for this case. Closes https://github.com/root-project/root/issues/11637, as the issue was caused by the integration variable; wrongly being registered as a value server of the integral. This made; the reproducer code in the issue thread very slow, because the integral; was reevaluated for each event.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11662:436,test,test,436,https://root.cern,https://github.com/root-project/root/pull/11662,1,['test'],['test']
Testability,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741508230:250,test,test,250,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741508230,1,['test'],['test']
Testability,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13621:27,test,tests,27,https://root.cern,https://github.com/root-project/root/pull/13621,3,['test'],"['tested', 'tests']"
Testability,"Reducing further we get to a minimal reproducer: `root.exe -l -b -q -e 'void f() { TString configfeatures = gROOT->GetConfigFeatures(); bool c = configfeatures.Contains(""davix"");} f()'`. It is still unclear if the problem is in the relocations or incorrect lowering. The current stack is:. ```; #0 0x00003fffb79d271c in TString::TString (this=0x1, ; cs=0x1005ae50 ""cxx14 asserts builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml""...) at /scratch/cmsbuild/vvasilev/root/core/base/src/TString.cxx:103; #1 0x00003fffa9c10074 in ?? (); #2 0x00003fffa9c10144 in ?? (); #3 0x00003fffac394f90 in cling::IncrementalExecutor::executeWrapper (this=0x3fffb7ee42e0 <ROOT::Internal::GetROOT1()::alloc>, function=..., ; returnValue=0x3fffffffad90) at /scratch/cmsbuild/vvasilev/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:380; Backtrace stopped: previous frame inner to this frame (corrupt stack?); ```. Here the this pointer of `TString` seems incorrect. The _ZN7TStringC1EPKc (TString::TString(char const*)). The relevant llvm ir:. ```; define dso_local void @_ZN11__cling_N501fEv() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {; %1 = alloca %class.TString, align 8; %2 = alloca i8, align 1; %3 = alloca i8*; %4 = alloca i32; %5 = call %class.TROOT* @_ZN4ROOT7GetROOTEv(); %6 = bitcast %class.TROOT* %5 to i8*; %7 = call i8* @cling_runtime_internal_throwIfInvalidPointer(i8* inttoptr (i64 269245360 to i8*), i8* inttoptr (i64 282929752 to i8*), i8* %6); %8 = bitcast i8* %7 to %class.TROOT*; %9 = call i8* @_ZNK5TROOT17GetConfigFeaturesEv(%class.TROOT* %8); call void @_ZN7TStringC1EPKc(%class.TString* %1, i8* %9); ```. Here, %9 is already wrong. The ir for `GetConfigFeatures`:. ```; define linkonce_odr dso_local i8* @_ZNK5TROOT17GetConfigFeaturesEv(%class.TROOT*) #0 comdat align 2 {; %2 = alloca %class.TROOT*, align 8; store %c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-985890171:371,assert,asserts,371,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-985890171,1,['assert'],['asserts']
Testability,Ref: https://reviews.llvm.org/D128319. # This Pull request:. This reverts commit 71e133dd0391deac1cf3761d2c5c253b3cb247ff. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10826:166,test,tested,166,https://root.cern,https://github.com/root-project/root/pull/10826,1,['test'],['tested']
Testability,Refactor common testing code out to a new header file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297:16,test,testing,16,https://root.cern,https://github.com/root-project/root/pull/5297,1,['test'],['testing']
Testability,Refactor of test/stressMathCore.cxx to use Google Test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/594:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/594,2,"['Test', 'test']","['Test', 'test']"
Testability,Reference guide version changer. first try. Needs more test and tuning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5863:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/5863,1,['test'],['test']
Testability,"Regarding `roottest-python-pickle-read`:. ```; Start 1437: roottest-python-pickle-read; 14/20 Test #1437: roottest-python-pickle-read ........................***Failed 1.36 sec; -- TEST COMMAND -- ; cd /srv/root/build/roottest/python/pickle; /usr/bin/timeout -s USR2 270s /usr/bin/python /srv/root/src/roottest/python/pickle/PyROOT_readtests.py --fixcling; -- BEGIN TEST OUTPUT --; Test reference counting of pickled object ... ok; Test that a TBufferFile can be pickled ... ok; Test serialization of the ROOT Python module. ... ERROR; Test reading of a histogram from a pickle file ... ok; Test reading of an std::vector<double> from a pickle file ... ok; Test reading of a user-defined object from a pickle file ... ok; Test reading of a ROOT object in a namespace from a pickle file ... ok; Test reading PyROOT custom types ... ok; [ROOT-10810] Test reading a RooDataSet with weights ... ok. ======================================================================; ERROR: Test serialization of the ROOT Python module.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/roottest/python/pickle/PyROOT_readtests.py"", line 177, in test3PickleFacadeCheck; facade = pickle.loads(pickle.dumps(get_root_facade())); TypeError: cannot pickle 'ROOTFacade' object; ```. This piece of the pickle test was added by @vepadulano yesterday, it must have failed because your ROOT installation was not updated with the corresponding fix in PyROOT (also merged by @vepadulano yesterday).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823938499:94,Test,Test,94,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823938499,14,"['TEST', 'Test', 'test']","['TEST', 'Test', 'test']"
Testability,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-285711074:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-285711074,8,['test'],"['test', 'tests']"
Testability,"Regarding points 2. and 3.: When creating a target machine, LLVM 9 now has a parameter `bool JIT`. This should do the right thing and it does for AArch64 (automatically selecting `CodeModel::Large`), but not for PPC :cry: We need that for the reasons mentioned in the comment around the assert (really, any JIT needs it on these architectures). So I think manually setting the model as done in https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d is the right approach (while we might think about making upstream LLVM do the right thing in the long term). @ellert could you provide some details on the segmentation fault that you see with that commit? Is it maybe crashing during instruction selection or JIT relocation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-843822156:287,assert,assert,287,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-843822156,1,['assert'],['assert']
Testability,Regarding that test failure: I think this is due to #7395.; @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-793653127:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-793653127,1,['test'],['test']
Testability,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x372cc00; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00026606600; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/; [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x3c458b0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024825600; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x2b9a7d0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re; solution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00027867100; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949#issuecomment-1361867780:64,benchmark,benchmark,64,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780,2,['benchmark'],['benchmark']
Testability,Regarding the failing test on mac: mac just imports stuff ... i'll track down whether it's us or pulled in by the system.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5285#issuecomment-608328080:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/5285#issuecomment-608328080,1,['test'],['test']
Testability,"Regarding the titular issue, I have been thinking about it for a bit and I don't think we can do much better than what @pieterdavid already implemented. Solutions considered:. 1. Implicitly converting `TClonesArrays` to `RVecs` would be a) backward-incompatible and b) a silent perf degradation, as it requires a copy. Moreover, if we did this I don't see a migration path that doesn't require that users revise all their TClonesArrays-related logic; 2. Adding a `TClonesArrays2RVec` helper function: it would require a copy (or it would have to return a clunky `RVec<T*>`). It is also trivial to implement for users that need it and don't mind the downsides.; 3. Adding a RDF toggle to tweak ""read TClonesArrays as RVecs"" or not: requires adding a bunch of extra logic to the column-reading mechanism for a feature that might end up being mostly unused (modern data models don't use TClonesArrays), and it would require the extra copy (i.e. silent performance degradation). The best seems to be 3, but feature toggles complicate internals and are typically not easy to discover (might end up mostly unused). It seems simpler to ask users to explicitly do the conversion in a `Redefine` if they need/want to. Sorry I could not come up with something nice :confused: . I will close this in a few days unless people have something against it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644#issuecomment-883552286:444,log,logic,444,https://root.cern,https://github.com/root-project/root/issues/8644#issuecomment-883552286,2,['log'],['logic']
Testability,Regex=[: error:] 0.37 sec ; - [2022-08-22T14:42:24.421Z] 1280/2403 Test #1008: tutorial-tmva-tmva001_RTensor .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.42 sec ; - [2022-08-22T14:42:24.421Z] 1282/2403 Test #1009: tutorial-tmva-tmva002_RDataFrameAsTensor ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.44 sec ; - [2022-08-22T14:42:24.421Z] 1284/2403 Test #1011: tutorial-tmva-tmva004_RStandardScaler .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.33 sec ; - [2022-08-22T14:42:24.679Z] 1288/2403 Test #1012: tutorial-tmva-tmva103_Application .................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec ; - [2022-08-22T14:42:24.936Z] 1289/2403 Test #1010: tutorial-tmva-tmva003_RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.80 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive/); - [projectroot.runtutorials.tutorial_roostats_Zbi_Zgamma](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_roostats_Zbi_Zgamma/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1222475215:2138,Test,Test,2138,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1222475215,1,['Test'],['Test']
Testability,Regex=[: error:] 0.41 sec ; - [2022-08-19T16:56:02.676Z] 1286/2403 Test #1008: tutorial-tmva-tmva001_RTensor .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-08-19T16:56:02.676Z] 1287/2403 Test #1011: tutorial-tmva-tmva004_RStandardScaler .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.30 sec ; - [2022-08-19T16:56:02.676Z] 1288/2403 Test #1009: tutorial-tmva-tmva002_RDataFrameAsTensor ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec ; - [2022-08-19T16:56:02.676Z] 1289/2403 Test #1012: tutorial-tmva-tmva103_Application .................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.43 sec ; - [2022-08-19T16:56:03.210Z] 1293/2403 Test #1010: tutorial-tmva-tmva003_RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.76 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_roostats_Zbi_Zgamma](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_roostats_Zbi_Zgamma/); - [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1220900279:2138,Test,Test,2138,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1220900279,1,['Test'],['Test']
Testability,Regex=[: error:] 0.57 sec ; - [2022-08-19T18:44:48.427Z] 1034/2345 Test #924: tutorial-roostats-Zbi_Zgamma ......................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec ; - [2022-08-19T18:45:20.411Z] 1090/2345 Test #986: tutorial-tmva-TMVA_Higgs_Classification ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.57 sec ; - [2022-08-19T18:45:21.327Z] 1093/2345 Test #989: tutorial-tmva-tmva001_RTensor .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.65 sec ; - [2022-08-19T18:45:21.649Z] 1095/2345 Test #990: tutorial-tmva-tmva002_RDataFrameAsTensor ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.62 sec ; - [2022-08-19T18:45:21.977Z] 1096/2345 Test #992: tutorial-tmva-tmva004_RStandardScaler .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-08-19T18:45:22.267Z] 1097/2345 Test #991: tutorial-tmva-tmva003_RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.89 sec ; - [2022-08-19T18:45:22.567Z] 1098/2345 Test #993: tutorial-tmva-tmva103_Application .................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.71 sec . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152483/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1221024313:1661,Test,Test,1661,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1221024313,1,['Test'],['Test']
Testability,Regex=[: error:] 0.58 sec ; - [2022-08-22T15:11:25.587Z] 1034/2345 Test #924: tutorial-roostats-Zbi_Zgamma ......................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.61 sec ; - [2022-08-22T15:12:02.375Z] 1090/2345 Test #986: tutorial-tmva-TMVA_Higgs_Classification ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.62 sec ; - [2022-08-22T15:12:03.768Z] 1093/2345 Test #989: tutorial-tmva-tmva001_RTensor .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.65 sec ; - [2022-08-22T15:12:03.768Z] 1094/2345 Test #990: tutorial-tmva-tmva002_RDataFrameAsTensor ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.63 sec ; - [2022-08-22T15:12:04.390Z] 1095/2345 Test #992: tutorial-tmva-tmva004_RStandardScaler .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.58 sec ; - [2022-08-22T15:12:04.668Z] 1096/2345 Test #991: tutorial-tmva-tmva003_RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.96 sec ; - [2022-08-22T15:12:05.184Z] 1098/2345 Test #993: tutorial-tmva-tmva103_Application .................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.84 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152610/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1222537438:1661,Test,Test,1661,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1222537438,1,['Test'],['Test']
Testability,Regex=[: error:] 0.59 sec ; - [2022-08-23T09:33:19.373Z] 1095/2345 Test #991: tutorial-tmva-tmva003_RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.05 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/); - [projectroot.runtutorials.tutorial_tmva_tmva003_RReader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot/runtutorials/tutorial_tmva_tmva003_RReader/); - [projectroot.runtutorials.tutorial_dataframe_df010_trivialDataSource_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot/runtutorials/tutorial_dataframe_df010_trivialDataSource_py/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152645/testReport/projectroot.bindings.experiment,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1223847091:1448,test,test,1448,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1223847091,1,['test'],['test']
Testability,Regex=[: error:] 0.62 sec ; - [2022-08-19T18:45:21.977Z] 1096/2345 Test #992: tutorial-tmva-tmva004_RStandardScaler .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-08-19T18:45:22.267Z] 1097/2345 Test #991: tutorial-tmva-tmva003_RReader .....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.89 sec ; - [2022-08-19T18:45:22.567Z] 1098/2345 Test #993: tutorial-tmva-tmva103_Application .................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.71 sec . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152483/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152483/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152483/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152483/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1221024313:2562,test,test,2562,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1221024313,1,['test'],['test']
Testability,Regex=[: error:] 0.76 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_roostats_Zbi_Zgamma](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_roostats_Zbi_Zgamma/); - [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/); - [projectroot.runtutorials.tutorial_tmva_tmva001_RTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_tmva_tmva001_RTensor/); - [projectroot.runtutorials.tutorial_tmva_tmva004_RStandardScaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_tmva_tmva004_RStandardScaler/); - [projectroot.runtutorials.tutorial_tmva_tmva002_RDataFrameAsTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_tmva_tmva002_RDataFrameAsTensor/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_tmva_tmva003_RReader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152479/testReport/projectroot/runtutorials/tutorial_tmva_tmva003_RReader/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1220900279:3356,test,testReport,3356,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1220900279,5,['test'],['testReport']
Testability,Regex=[: error:] 0.80 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf509_wsinteractive](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_roofit_rf509_wsinteractive/); - [projectroot.runtutorials.tutorial_roostats_Zbi_Zgamma](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_roostats_Zbi_Zgamma/); - [projectroot.runtutorials.tutorial_roostats_TestNonCentral](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_roostats_TestNonCentral/); - [projectroot.runtutorials.tutorial_tmva_TMVA_Higgs_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/); - [projectroot.runtutorials.tutorial_tmva_tmva001_RTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_tmva_tmva001_RTensor/); - [projectroot.runtutorials.tutorial_tmva_tmva002_RDataFrameAsTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_tmva_tmva002_RDataFrameAsTensor/); - [projectroot.runtutorials.tutorial_tmva_tmva004_RStandardScaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_tmva_tmva004_RStandardScaler/); - [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/); - [projectroot.runtutorials.tutorial_tmva_tmva003_RReader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/152606/testReport/projectroot/runtutorials/tutorial_tmva_tmva003_RReader/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1222475215:3356,test,testReport,3356,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1222475215,5,['test'],['testReport']
Testability,Regex=[: error:] 0.98 sec ; - [2023-05-17T07:53:24.619Z] 919/2381 Test #795: tutorial-math-principal ...........................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.59 sec ; - [2023-05-17T07:54:19.465Z] 1032/2381 Test #918: tutorial-roofit-rf901_numintconfig ................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.23 sec ; - [2023-05-17T07:55:05.831Z] 1109/2381 Test #1009: tutorial-tree-basic ...............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.76 sec ; - [2023-05-17T07:55:35.504Z] 1154/2381 Test #1059: tutorial-xml-DOMParsePerson .......................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.73 sec ; - [2023-05-17T07:56:51.940Z] 1241/2381 Test #1147: tutorial-roofit-rf102_dataimport-py ...............................................................***Failed Error regular expression found in output. Regex=[: error:] 8.52 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df025_RNode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174719/testReport/projectroot/runtutorials/tutorial_dataframe_df025_RNode/); - [projectroot.runtutorials.tutorial_dataframe_df028_SQliteIPLocation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174719/testReport/projectroot/runtutorials/tutorial_dataframe_df028_SQliteIPLocation/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174719/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_dataframe_df029_SQlitePlatformDistribution](https://lcgapp-services.cern.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1551028011:2117,Test,Test,2117,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1551028011,1,['Test'],['Test']
Testability,Regex=[: error:] 1.89 sec ; - [2020-06-10T22:20:37.348Z] 652/1992 Test #344: tutorial-dataframe-df021_createTGraph .............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.76 sec ; - [2020-06-10T22:20:39.777Z] 656/1992 Test #349: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.51 sec ; - [2020-06-10T22:20:40.053Z] 657/1992 Test #351: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.16 sec ; - [2020-06-10T22:20:40.981Z] 660/1992 Test #352: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.30 sec ; - [2020-06-10T22:20:42.149Z] 665/1992 Test #355: tutorial-dataframe-df102_NanoAODDimuonAnalysis ....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.39 sec . And 3 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-642302168:2490,Test,Test,2490,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-642302168,1,['Test'],['Test']
Testability,Reloading sparsehist.C triggers an assert in LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14012:35,assert,assert,35,https://root.cern,https://github.com/root-project/root/issues/14012,1,['assert'],['assert']
Testability,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5845:37,test,tested,37,https://root.cern,https://github.com/root-project/root/pull/5845,1,['test'],['tested']
Testability,Remember to fix-up the `rfield_vector.cxx` unit test once this has been addressed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9069#issuecomment-942106576:48,test,test,48,https://root.cern,https://github.com/root-project/root/issues/9069#issuecomment-942106576,1,['test'],['test']
Testability,Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of; web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8586:151,test,test,151,https://root.cern,https://github.com/root-project/root/pull/8586,1,['test'],['test']
Testability,Remove a obsolete Win32 specific code (whose logic was wrong anyway),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6088:45,log,logic,45,https://root.cern,https://github.com/root-project/root/pull/6088,1,['log'],['logic']
Testability,Remove an assert in TMVA/DNN that is not needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5468:10,assert,assert,10,https://root.cern,https://github.com/root-project/root/pull/5468,1,['assert'],['assert']
Testability,Remove concurrent usage of TClass::TestBit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15113:35,Test,TestBit,35,https://root.cern,https://github.com/root-project/root/pull/15113,1,['Test'],['TestBit']
Testability,Remove extra `class` and `struct` prefixes in demangled name and fix related tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5703:77,test,tests,77,https://root.cern,https://github.com/root-project/root/pull/5703,1,['test'],['tests']
Testability,Remove not used test files and makefiles,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3270:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/3270,1,['test'],['test']
Testability,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900:230,test,tests,230,https://root.cern,https://github.com/root-project/root/pull/15900,7,['test'],"['test', 'test-', 'test-CladDerivatorTests', 'test-testHistFactory', 'test-testRooFuncWrapper', 'tests']"
Testability,Remove sysroot arg when writing modules to fix assertion failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/519:47,assert,assertion,47,https://root.cern,https://github.com/root-project/root/pull/519,1,['assert'],['assertion']
Testability,Remove unused Python modules from PyROOT/cppyy tests by backporting commit from cppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14293:47,test,tests,47,https://root.cern,https://github.com/root-project/root/pull/14293,1,['test'],['tests']
Testability,Remove unused includes in math sources and tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5751:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/5751,1,['test'],['tests']
Testability,Removed commented out header used in testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5610#issuecomment-628028733:37,test,testing,37,https://root.cern,https://github.com/root-project/root/pull/5610#issuecomment-628028733,1,['test'],['testing']
Testability,"Removed explicitly loading pythia8 in pythia8 tutorials. On e.g. Docker, this test fails since the path to pythia8 is not under $PYTHIA8/lib/: http://cdash.cern.ch/testDetails.php?test=28516933&build=390221",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/903:78,test,test,78,https://root.cern,https://github.com/root-project/root/pull/903,3,['test'],"['test', 'testDetails']"
Testability,Removing my request to review for now. Feel free to add me back in when the PR is in a state where the CI tests pass!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10301#issuecomment-1114356637:106,test,tests,106,https://root.cern,https://github.com/root-project/root/pull/10301#issuecomment-1114356637,1,['test'],['tests']
Testability,"Removing this patch will produce a problem with this macro:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; // comment or uncomment the following line to get diffrent plot; // mg->GetXaxis()->CenterTitle(true);; mg->Draw(""AL"");; }; ```; Without this patch you get a different X range depending if you center the X title or not. I guess we should keep the patch and understand why in log scale it crashes (it should be protected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011#issuecomment-957818254:827,log,log,827,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957818254,1,['log'],['log']
Testability,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616#issuecomment-2215375377:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/15616#issuecomment-2215375377,2,['test'],['test']
Testability,Reopening until the test is ready.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9136#issuecomment-1026393060:20,test,test,20,https://root.cern,https://github.com/root-project/root/issues/9136#issuecomment-1026393060,1,['test'],['test']
Testability,"Reopening, because weights should be tested (and supported). What's needed:; - [x] Creating and filling bare dataset / datahist; - [ ] A way to select the a weight column in RDataFrame, and tell the RooDataHist/RooDataSet instances about what's the weight.; - [ ] Passing of the weight in the `add` call.; - [ ] Test of weighted filling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7223#issuecomment-791238897:37,test,tested,37,https://root.cern,https://github.com/root-project/root/issues/7223#issuecomment-791238897,2,"['Test', 'test']","['Test', 'tested']"
Testability,"Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %.; The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3380:637,test,test,637,https://root.cern,https://github.com/root-project/root/pull/3380,2,['test'],['test']
Testability,"Replying to two different comments:. ### 1. > they are automatically inline and should not need the definition out-of-line. My standardese is poor, but reading https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0386r2.pdf : ; Line starting with `n 9.2.3.2p3, change:`; > An inline static data member can be defined in the class definition and may specify; a brace or equal initializer. If the member is declared with the constexpr specifier, it may be; redeclared in namespace scope with no initializer (this usage is deprecated; see D.X). So it says that the usage is deprecated, but it *may* still be used. I couldn't find any specific document on whether the main compiler vendors actually implement this change, since it is not strictly enforced maybe it's just not there?. ### 2. > Would be interesting to know how inline const behaves... So with the patch; ```; diff --git a/core/base/inc/TString.h b/core/base/inc/TString.h; index 58b47530fd..b74fe29e5c 100644; --- a/core/base/inc/TString.h; +++ b/core/base/inc/TString.h; @@ -277,7 +277,7 @@ private:; public:; enum EStripType { kLeading = 0x1, kTrailing = 0x2, kBoth = 0x3 };; enum ECaseCompare { kExact, kIgnoreCase };; - static const Ssiz_t kNPOS = ::kNPOS;; + static inline const Ssiz_t kNPOS = ::kNPOS;; ; TString(); // Null string; explicit TString(Ssiz_t ic); // Suggested capacity; ```. Then we get the same situation as initially, i.e.; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 0; $: strace -z -f -o run.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel)'; -1; $: grep openat run.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; 2579; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860598180:1502,log,log,1502,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860598180,2,['log'],['log']
Testability,Report/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_ranges/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_string_view](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_string_view/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_rdf_filter_pyz](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_rdf_filter_pyz/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_rdf_define_pyz](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/194288/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1920662465:1441,test,test,1441,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1920662465,1,['test'],['test']
Testability,Report/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_sqlite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.net.davix.test.gtest_net_davix_test_RRawFileDavix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/projectroot.net.davix/test/gtest_net_davix_test_RRawFileDavix/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/150199/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10896#issuecomment-1190319504:1401,test,test,1401,https://root.cern,https://github.com/root-project/root/pull/10896#issuecomment-1190319504,1,['test'],['test']
Testability,Report/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_graph_caching](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_graph_caching/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_dist/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rvec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rvec/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rvec_asrvec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180341/testReport/projectroot.bindings.pyroot.pythonization,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13297#issuecomment-1645620121:1711,test,test,1711,https://root.cern,https://github.com/root-project/root/pull/13297#issuecomment-1645620121,1,['test'],['test']
Testability,Report/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTFormula](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTFormula/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTKDE](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTKDE/); - [projectroot.test.test_delaunay](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot/test/test_delaunay/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTClassRehash](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTClassRehash/); - [projectroot.roottest.cling.template.roottest_cling_template_runusingtemplate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.roottest.cling/template/roottest_cling_template_runusingtemplate/); - [projectroot.roottest.cling.template.roottest_cling_template_templateSingleton](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.roottest.cling/template/roottest_cling_template_templateSingleton/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.cling.template.roottest_cling_template_longlong](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53918/testReport/projectroot.roottest.cling/template/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-464108169:1299,test,testReport,1299,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-464108169,1,['test'],['testReport']
Testability,Report/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81354/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/jo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5582#issuecomment-625876354:1580,test,testReport,1580,https://root.cern,https://github.com/root-project/root/pull/5582#issuecomment-625876354,1,['test'],['testReport']
Testability,Report/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatisticsPlot/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198031/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pairEnumEvo_2_0_1_0/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1988106159:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1988106159,1,['test'],['testReport']
Testability,Report/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatisticsPlot/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198056/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pairEnumEvo_2_0_1_0/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1988350994:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1988350994,1,['test'],['testReport']
Testability,Report/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatisticsPlot/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198071/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pairEnumEvo_2_0_1_1/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1988637213:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1988637213,1,['test'],['testReport']
Testability,Report/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatisticsPlot/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198116/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pairEnumEvo_2_0_1_0/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1989274681:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1989274681,1,['test'],['testReport']
Testability,Report/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatisticsPlot/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198156/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pairEnumEvo_2_0_1_0/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pairEnumEvo_2_0_1_1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1989663951:1462,test,testReport,1462,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1989663951,1,['test'],['testReport']
Testability,Report/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_conflictingSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_conflictingSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_equivalentSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_equivalentSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_selectionDuplicate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_selectionDuplicate/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_privateClassXMLSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_privateClassXMLSelection/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_0](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3662/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_0/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_1](https://epsft-jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/788#issuecomment-318776564:1597,test,testReport,1597,https://root.cern,https://github.com/root-project/root/pull/788#issuecomment-318776564,1,['test'],['testReport']
Testability,Report/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_conflictingSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_conflictingSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_equivalentSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_equivalentSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_selectionDuplicate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_selectionDuplicate/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_privateClassXMLSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_privateClassXMLSelection/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_1/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_0](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4066/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_0/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genrefle,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-321295838:1300,test,testReport,1300,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-321295838,1,['test'],['testReport']
Testability,Report/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_conflictingSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_conflictingSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_equivalentSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_equivalentSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_selectionDuplicate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_selectionDuplicate/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_privateClassXMLSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_privateClassXMLSelection/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_2/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/4067/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_1/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genrefle,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-321291494:1300,test,testReport,1300,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-321291494,1,['test'],['testReport']
Testability,Report/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.cling.staticConstTreatment.roottest_cling_staticConstTreatment_myClass_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/staticConstTreatment/roottest_cling_staticConstTreatment_myClass_libgen_build/); - [projectroot.roottest.cling.other.roottest_cling_other_testCompile_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/other/roottest_cling_other_testCompile_build/); - [projectroot.roottest.cling.stl.default.roottest_cling_stl_default_dict_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/default/roottest_cling_stl_default_dict_build/); - [projectroot.roottest.cling.staticConstTreatment.roottest_cling_staticConstTreatment_Odin_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling/staticConstTreatment/roottest_cling_staticConstTreatment_Odin_libgen_build/); - [projectroot.roottest.cling.stl.map.roottest_cling_stl_map_MyClass_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/map/roottest_cling_stl_map_MyClass_build/); - [projectroot.roottest.cling.stl.map.roottest_cling_stl_map_stringMapLoad_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/map/roottest_cling_stl_map_stringMapLoad_build/); - [projectroot.roottest.cling.stl.map.roottest_cling_stl_map_MyOpClass_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl/map/roottest_cling_stl_map_MyOpClass_build/); - [projectroot.roottest.cling.stl.string.roottest_cling_stl_string_t01_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/77447/testReport/projectroot.roottest.cling.stl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4939#issuecomment-582518323:1314,test,testReport,1314,https://root.cern,https://github.com/root-project/root/pull/4939#issuecomment-582518323,1,['test'],['testReport']
Testability,Report/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5PrepareInput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175938/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5/). And 18 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12929#issuecomment-1572031094:2026,test,testReport,2026,https://root.cern,https://github.com/root-project/root/pull/12929#issuecomment-1572031094,4,['test'],['testReport']
Testability,Report/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls2/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2Clean](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1Clean](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3Clean](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2Clean](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1Clean](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2Clean](https://phsft-jenkins.cern.ch/job/root-pullrequests-build/750/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1Clean](https://phsf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577#issuecomment-301721597:17409,test,testReport,17409,https://root.cern,https://github.com/root-project/root/pull/577#issuecomment-301721597,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data4_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data4_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data3_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data3_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data5_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testRepor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3183#issuecomment-447950115:1315,test,testReport,1315,https://root.cern,https://github.com/root-project/root/pull/3183#issuecomment-447950115,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.io.io.test.gtest_io_io_test_TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.io.io/test/gtest_io_io_test_TFile/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.math.mathmore.test.gtest_math_mathmore_test_stressMathMoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot.math.mathmore/test/gtest_math_mathmore_test_stressMathMoreUnit/); - [projectroot.test.test_stressvector_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot/test/test_stressvector_interpreted/); - [projectroot.test.test_stressroostats_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot/test/test_stressroostats_interpreted/); - [projectroot.test.test_stressfit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174044/testReport/projectroot/test/test_stressfit_interpreted/). And 44 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1536314226:2459,test,testReport,2459,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1536314226,14,['test'],"['test', 'testReport']"
Testability,Report/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_arrow/); - [projectroot.roottest.cling.stack.roottest_cling_stack_tbox](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.roottest.cling/stack/roottest_cling_stack_tbox/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_53410_v2/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36205/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_datafra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411202954:1273,test,test,1273,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411202954,1,['test'],['test']
Testability,Report/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91265/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://lcgapp-services.cern.ch/root-jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6110#issuecomment-668147785:1576,test,testReport,1576,https://root.cern,https://github.com/root-project/root/pull/6110#issuecomment-668147785,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24449/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1967#issuecomment-386284833:1555,test,testReport,1555,https://root.cern,https://github.com/root-project/root/pull/1967#issuecomment-386284833,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24454/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/). And 276 m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1967#issuecomment-386287607:1556,test,testReport,1556,https://root.cern,https://github.com/root-project/root/pull/1967#issuecomment-386287607,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.scripts.roottest_scripts_utils](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest/scripts/roottest_scripts_utils/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24455/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1967#issuecomment-386286059:1555,test,testReport,1555,https://root.cern,https://github.com/root-project/root/pull/1967#issuecomment-386286059,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_chainZombieFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_chainZombieFile/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/72977/testReport/pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5207#issuecomment-603168070:1620,test,testReport,1620,https://root.cern,https://github.com/root-project/root/pull/5207#issuecomment-603168070,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runoutoforder_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runoutoforder_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93667/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/). And 919 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-679046316:2558,test,testReport,2558,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-679046316,6,['test'],"['test', 'testReport']"
Testability,Report/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tf_pycallables](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tf_pycallables/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rooabscollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rooabscollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_roodatahist_ploton](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_roodatahist_ploton/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rooworkspace](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rooworkspace/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_string_view_backport](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89711/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_string_view_backport/). And 859 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-658347004:2182,test,testReport,2182,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-658347004,11,['test'],"['test', 'testReport']"
Testability,Report/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot_manytasks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_concurrency/); - [projectroot.io.io.test.gtest_io_io_test_TBufferMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.io.io/test/gtest_io_io_test_TBufferMerger/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118379/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_lzma_compr_level9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8229#issuecomment-846090024:1697,test,testReport,1697,https://root.cern,https://github.com/root-project/root/pull/8229#issuecomment-846090024,1,['test'],['testReport']
Testability,Report/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_merge2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/198208/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.autoloading.headerParsingOnDemand.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1991404977:1440,test,testReport,1440,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1991404977,1,['test'],['testReport']
Testability,Report/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_colnames/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_ranges/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57110/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-481979391:1278,test,test,1278,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-481979391,1,['test'],['test']
Testability,Report/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_colnames/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_ranges/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57117/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-482005910:1278,test,test,1278,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-482005910,1,['test'],['test']
Testability,Report/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_colnames/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_ranges/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.runtutorials.tutorial_dataframe_df012_DefinesAndFiltersAsStrings](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot/runtutorials/tutorial_dataframe_df012_DefinesAndFiltersAsStrings/); - [projectroot.runtutorials.tutorial_dataframe_df020_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot/runtutorials/tutorial_dataframe_df020_helpers/); - [projectroot.runtutorials.tutorial_dataframe_df023_aggregate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57122/testReport/projectroot/runtutorials/tutorial_dataframe_df023_aggregate/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://epsft-jenkins.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-482026406:2296,test,test,2296,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-482026406,1,['test'],['test']
Testability,Report/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_colnames/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_ranges/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.runtutorials.tutorial_dataframe_df012_DefinesAndFiltersAsStrings](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot/runtutorials/tutorial_dataframe_df012_DefinesAndFiltersAsStrings/); - [projectroot.runtutorials.tutorial_dataframe_df020_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot/runtutorials/tutorial_dataframe_df020_helpers/); - [projectroot.runtutorials.tutorial_dataframe_df023_aggregate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57369/testReport/projectroot/runtutorials/tutorial_dataframe_df023_aggregate/); - [projectroot.runtutorials.tutorial_dataframe_df021_createTGraph](https://epsft-jenkins.cern.ch/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-482683564:2296,test,test,2296,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-482683564,1,['test'],['test']
Testability,Report/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_colnames/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_ranges/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.runtutorials.tutorial_dataframe_df012_DefinesAndFiltersAsStrings](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot/runtutorials/tutorial_dataframe_df012_DefinesAndFiltersAsStrings/); - [projectroot.runtutorials.tutorial_dataframe_df020_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot/runtutorials/tutorial_dataframe_df020_helpers/); - [projectroot.runtutorials.tutorial_dataframe_df023_aggregate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57578/testReport/projectroot/runtutorials/tutorial_dataframe_df023_aggregate/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://epsft-jenkins.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-483845921:2296,test,test,2296,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-483845921,1,['test'],['test']
Testability,Report/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_colnames/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_ranges](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_ranges/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_leaves/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.runtutorials.tutorial_dataframe_df012_DefinesAndFiltersAsStrings](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot/runtutorials/tutorial_dataframe_df012_DefinesAndFiltersAsStrings/); - [projectroot.runtutorials.tutorial_dataframe_df020_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot/runtutorials/tutorial_dataframe_df020_helpers/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57585/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_dataframe_df023_aggregate](https,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043#issuecomment-483943558:2296,test,test,2296,https://root.cern,https://github.com/root-project/root/pull/3043#issuecomment-483943558,1,['test'],['test']
Testability,Report/projectroot/runtutorials/tutorial_dataframe_df029_SQlitePlatformDistribution/); - [projectroot.runtutorials.tutorial_dataframe_df028_SQliteIPLocation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_dataframe_df028_SQliteIPLocation/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_dataframe_df030_SQliteVersionsOfROOT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_dataframe_df030_SQliteVersionsOfROOT/); - [projectroot.runtutorials.tutorial_fit_fitcont](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_fit_fitcont/); - [projectroot.runtutorials.tutorial_geom_RadioNuclides](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_geom_RadioNuclides/); - [projectroot.runtutorials.tutorial_geom_csgdemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_geom_csgdemo/); - [projectroot.runtutorials.tutorial_geom_parallel_world](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_geom_parallel_world/); - [projectroot.runtutorials.tutorial_geom_rootgeom](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_geom_rootgeom/); - [projectroot.runtutorials.tutorial_geom_shapes](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146357/testReport/projectroot/runtutorials/tutorial_geom_shapes/). And 32 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1142624570:2087,test,testReport,2087,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1142624570,5,['test'],['testReport']
Testability,Report/projectroot/runtutorials/tutorial_dataframe_df029_SQlitePlatformDistribution/); - [projectroot.runtutorials.tutorial_dataframe_df028_SQliteIPLocation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_dataframe_df028_SQliteIPLocation/); - [projectroot.runtutorials.tutorial_dataframe_df027_SQliteDependencyOverVersion](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_dataframe_df027_SQliteDependencyOverVersion/); - [projectroot.runtutorials.tutorial_dataframe_df030_SQliteVersionsOfROOT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_dataframe_df030_SQliteVersionsOfROOT/); - [projectroot.runtutorials.tutorial_fit_fitcont](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_fit_fitcont/); - [projectroot.runtutorials.tutorial_geom_RadioNuclides](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_geom_RadioNuclides/); - [projectroot.runtutorials.tutorial_geom_csgdemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_geom_csgdemo/); - [projectroot.runtutorials.tutorial_geom_rootgeom](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_geom_rootgeom/); - [projectroot.runtutorials.tutorial_geom_parallel_world](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_geom_parallel_world/); - [projectroot.runtutorials.tutorial_geom_shapes](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146679/testReport/projectroot/runtutorials/tutorial_geom_shapes/). And 28 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145284142:2087,test,testReport,2087,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145284142,5,['test'],['testReport']
Testability,Report/projectroot/runtutorials/tutorial_roostats_StandardFeldmanCousinsDemo/); - [projectroot.runtutorials.tutorial_roostats_OneSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_OneSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_StandardFrequentistDiscovery](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_StandardFrequentistDiscovery/); - [projectroot.runtutorials.tutorial_roostats_StandardBayesianMCMCDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_StandardBayesianMCMCDemo/); - [projectroot.runtutorials.tutorial_roostats_StandardBayesianNumericalDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_StandardBayesianNumericalDemo/); - [projectroot.runtutorials.tutorial_roostats_StandardHistFactoryPlotsWithCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_StandardHistFactoryPlotsWithCategories/); - [projectroot.runtutorials.tutorial_roostats_StandardProfileInspectorDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_StandardProfileInspectorDemo/); - [projectroot.runtutorials.tutorial_roostats_StandardHypoTestDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostats_StandardHypoTestDemo/); - [projectroot.runtutorials.tutorial_roostats_StandardProfileLikelihoodDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139351/testReport/projectroot/runtutorials/tutorial_roostat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10104#issuecomment-1066851429:1404,test,testReport,1404,https://root.cern,https://github.com/root-project/root/pull/10104#issuecomment-1066851429,1,['test'],['testReport']
Testability,Report/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82565/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](htt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-629992409:1569,test,testReport,1569,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-629992409,1,['test'],['testReport']
Testability,Report/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83489/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_thread_local_notebook](htt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-633684855:1569,test,testReport,1569,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-633684855,1,['test'],['testReport']
Testability,Report: http://cdash.cern.ch/testDetails.php?test=2452507&build=13930,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6160#issuecomment-671978741:29,test,testDetails,29,https://root.cern,https://github.com/root-project/root/pull/6160#issuecomment-671978741,2,['test'],"['test', 'testDetails']"
Testability,"Reproduce #5069 again - something went wrong when I want to merge it. Simple search for following includes were done:. * `TSystem.h`; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5071:323,test,tests,323,https://root.cern,https://github.com/root-project/root/pull/5071,1,['test'],['tests']
Testability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; ROOT::RDataFrame(10); .Define(""x"", [] { return 42; }); .Snapshot<int>(""t"", ""thefile"", {""x""});; std::cout << ""done writing\n"";. ROOT::EnableImplicitMT();; ROOT::RDataFrame(""t"", ""thefile"").Max<int>(""x"").GetValue();. return 0;; }. ```. prints. ```; done writing; Error in <TFile::TFile>: file /tmp/thefile/t does not exist; Warning in <TTreeReader::SetEntryBase()>: There was an issue opening the last file associated to the TChain being processed.; ```. This is likely due to logic in `TChain::AddFile` that expects a `.root` extension to be present in order to distinguish `/path/to/file.root/treename` from just `/path/to/file.root` (over the network or via xrootd it's difficult/expensive to figure out which case we are in otherwise). ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/getting-value-from-tbranch-is-extremely-slow/45950",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8739:562,log,logic,562,https://root.cern,https://github.com/root-project/root/issues/8739,1,['log'],['logic']
Testability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";; ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);; auto *td = f->Get<TTree>(""testd/testt"");; auto rdftd = ROOT::RDataFrame(*td);; auto htd = rdftd.Histo1D<ULong64_t>(""e"");; std::cout << htd->GetMean() << '\n';; }; ```; yields:. ```; terminate called after throwing an instance of 'std::runtime_error'; what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root""; ```; i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10216:188,test,test,188,https://root.cern,https://github.com/root-project/root/issues/10216,9,['test'],"['test', 'testd', 'testt']"
Testability,"Reproducer:; ```; cd; mkfifo TEST; tail +1f /var/log/syslog >> TEST; ```; and let it sit. Then, in a different terminal:; ```; cd; root; root [0] TH1F h;; ```; and it hangs. PR coming up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7010#issuecomment-801168432:29,TEST,TEST,29,https://root.cern,https://github.com/root-project/root/issues/7010#issuecomment-801168432,3,"['TEST', 'log']","['TEST', 'log']"
Testability,"RequireReturnTypeIsRVec); +TEST_P(RDFVary, RequireReturnTypeIsRVec); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; EXPECT_THROW(; @@ -209,7 +209,7 @@ TEST(RDFVary, RequireReturnTypeIsRVec); std::runtime_error);; }; ; -TEST(RDFVary, RequireNVariationsIsConsistent); +TEST_P(RDFVary, RequireNVariationsIsConsistent); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; auto s = df.Vary(""x"", SimpleVariation, {}, /*wrong=*/3).Sum<int>(""x"");; @@ -231,10 +231,14 @@ TEST(RDFVary, RequireNVariationsIsConsistent); std::runtime_error);; ; std::cerr.rdbuf(oldCerrStreamBuf);; - EXPECT_EQ(strCerr.str(), ""RDataFrame::Run: event loop was interrupted\n"");; + std::string msg;; + const auto nRepetitions = GetParam() ? std::min(4u, std::thread::hardware_concurrency()) : 1u;; + for (auto i = 0u; i < nRepetitions; ++i); + msg += ""RDataFrame::Run: event loop was interrupted\n"";; + EXPECT_EQ(strCerr.str(), msg);; }; ; -TEST(RDFVary, VariationsForDoesNotTriggerRun); +TEST_P(RDFVary, VariationsForDoesNotTriggerRun); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -242,7 +246,7 @@ TEST(RDFVary, VariationsForDoesNotTriggerRun); EXPECT_EQ(df.GetNRuns(), 0);; }; ; -TEST(RDFVary, VariationsForWithNoVariations); +TEST_P(RDFVary, VariationsForWithNoVariations); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -250,7 +254,7 @@ TEST(RDFVary, VariationsForWithNoVariations); EXPECT_EQ(hs.GetKeys(), std::vector<std::string>{""nominal""});; }; ; -TEST(RDFVary, GetVariations); +TEST_P(RDFVary, GetVariations); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Define(""y"", [] { return 10; });; auto df2 = df.Vary(""x"", SimpleVariation, {}, 2); @@ -269,7 +273,7 @@ TEST(RDFVary, GetVariations); ""Variations {x:0, x:1} affect column x\nVariations {xy:0, xy:1} affect columns {x, y}\n"");; }; ; -TEST(RDataFrameInterface, VaryFriend); +TEST(RDFVary, VaryFriend); {; int x = 0;; TTree ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:2628,TEST,TEST,2628,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['TEST'],['TEST']
Testability,Required for tutorials like `triangle.cxx` where dictionary must be generated for the class. `skip-ci` while doxygen is not tested by CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16758:124,test,tested,124,https://root.cern,https://github.com/root-project/root/pull/16758,1,['test'],['tested']
Testability,"Reserves the ""sharded cluster"" flag in the cluster summary but removes any additional s11n logic. Extends the cluster summary flags field to 8bits so that it can be handled with a standard C++ type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16511:91,log,logic,91,https://root.cern,https://github.com/root-project/root/pull/16511,1,['log'],['logic']
Testability,Resolve oustanding roottest issues (with full testing),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7274:46,test,testing,46,https://root.cern,https://github.com/root-project/root/pull/7274,1,['test'],['testing']
Testability,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13633:18,test,tests,18,https://root.cern,https://github.com/root-project/root/pull/13633,5,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,Restarted all tests to see how we are performing...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8661#issuecomment-2187241060:14,test,tests,14,https://root.cern,https://github.com/root-project/root/pull/8661#issuecomment-2187241060,1,['test'],['tests']
Testability,"Result from `git-bisect` on LLVM/Clang between current `release/13.x` and `llvmorg-13-init`:; ```; git bisect start; # bad: [9d9efb1f67ff70e996b1cb7fa00e24b9121be226] [lld][CMake] Add LLD_DEFAULT_NOSTART_STOP_GC; git bisect bad 9d9efb1f67ff70e996b1cb7fa00e24b9121be226; # good: [5369517d20dd362a178a1b2d6c398d8898ee4620] Bump the trunk major version to 13; git bisect good 5369517d20dd362a178a1b2d6c398d8898ee4620; # bad: [711a473cd9e3c8e63ad3460d49fdab1545634dd2] Update testcase for D101333.; git bisect bad 711a473cd9e3c8e63ad3460d49fdab1545634dd2; # bad: [11b70b9e3a7458b5b78c30020b56e8ca563a4801] Revert ""[NPM][CGSCC] FunctionAnalysisManagerCGSCCProxy: do not clear immutable function passes""; git bisect bad 11b70b9e3a7458b5b78c30020b56e8ca563a4801; # good: [97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65] [Coverage] Store compilation dir separately in coverage mapping; git bisect good 97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65; # bad: [4096ae06f47af9db2c2550a2c34979edfbd91b8d] [lldb] Support DWARF-5 DW_FORM_line_strp (used by GCC); git bisect bad 4096ae06f47af9db2c2550a2c34979edfbd91b8d; # bad: [d65ddca83ff85c7345fe9a0f5a15750f01e38420] [ValueTracking] ComputeKnownBits - minimum leading/trailing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011201311:472,test,testcase,472,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311,1,['test'],['testcase']
Testability,"Results of today's investigations: The reason is that `LinkageComputer::getLVForNamespaceScopeDecl` assigns internal linkage to `const` qualified variables without external storage class, which then our `KeepLocalGVPass` changes to a weak symbol. If that happens in multiple transactions, the JIT infrastructure (?) merges the symbols into one memory location but constructors and destructors run multiple times on the same object (see above). We cannot disable `KeepLocalGVPass` because it also takes care of `static` variables in functions that are lazily initialized. Additionally, not merging the constant variables would mean that they have different addresses which could also cause problems (FWIW this is what you get upstream in `clang-repl`). Fun fact: it works by accident in the upgrade to LLVM 16 because I backported https://reviews.llvm.org/D156537, but not https://reviews.llvm.org/D156897 so if a variable `MustBeEmitted` it is actually not re-emitted and `KeepLocalGVPass` works correctly. Conclusion: What I think we should really do here is patch `LinkageComputer::getLVForNamespaceScopeDecl` to not assign internal linkage to `const` qualified variables under `IncrementalExtensions`. This seems to work in a few quick tests, but I need to investigate and think more on this...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1690181013:1239,test,tests,1239,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1690181013,1,['test'],['tests']
Testability,"Results verified! The PR is ready for merging. However, in testing it was discovered that there is a difference in output between `TMVApplication` and stand-alone execution of the BDT's. This is due to a difference in the `GoesRight` function. `TMVA::DecisionTree` cuts on `>=` while the stand-alone cuts on `>`. @biemster If you could include the fix to `GoesRight()` here, that would be terrific.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3028#issuecomment-456100099:59,test,testing,59,https://root.cern,https://github.com/root-project/root/pull/3028#issuecomment-456100099,1,['test'],['testing']
Testability,"Retreiving weights from a RooDataHist can be sped up signifcantly if it; is assumed that parameters passed to `RooDataHist::weight` are aligned; with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes; this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2); * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7859:315,benchmark,benchmarked,315,https://root.cern,https://github.com/root-project/root/pull/7859,1,['benchmark'],['benchmarked']
Testability,"Revamp the tests.; Adding in the loop @aaronj0 and @guitargeek , since this is a patch to Cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11412#issuecomment-2309563916:11,test,tests,11,https://root.cern,https://github.com/root-project/root/pull/11412#issuecomment-2309563916,1,['test'],['tests']
Testability,Reversed graphs were not working in log scale. As explained here:; https://github.com/root-project/root/issues/11938,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12235:36,log,log,36,https://root.cern,https://github.com/root-project/root/pull/12235,1,['log'],['log']
Testability,"Revert ""Add google benchmark""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1064:19,benchmark,benchmark,19,https://root.cern,https://github.com/root-project/root/pull/1064,1,['benchmark'],['benchmark']
Testability,"Revert ""Commented multithreaded execution policy test.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/628:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/628,1,['test'],['test']
Testability,"Revert ""Fix NO_CXXMODULE handling logic for dependencies""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6153:34,log,logic,34,https://root.cern,https://github.com/root-project/root/pull/6153,1,['log'],['logic']
Testability,"Revert ""Fix logic of handling dependencies when NO_CXXMODULE is specified""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5883:12,log,logic,12,https://root.cern,https://github.com/root-project/root/pull/5883,1,['log'],['logic']
Testability,"Revert ""[RDF] Fix a dependency issue for an RDF test.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5730:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/5730,1,['test'],['test']
Testability,"Revert ""[TO REVERT] Never run TMVA GNN tests and tutorials as unit tests""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15596:39,test,tests,39,https://root.cern,https://github.com/root-project/root/pull/15596,2,['test'],['tests']
Testability,"Revert ""[clang] Relax assertion on generating destructor call""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13099:22,assert,assertion,22,https://root.cern,https://github.com/root-project/root/pull/13099,1,['assert'],['assertion']
Testability,"Revert ""[cmake] Make test building serial on Windows""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16306:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/16306,1,['test'],['test']
Testability,"Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to; the actual std::tuple implementation to be attempted (and failing) to be used; for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3982:380,test,testReport,380,https://root.cern,https://github.com/root-project/root/pull/3982,1,['test'],['testReport']
Testability,Revert assertion check in Declbase.cpp,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10644:7,assert,assertion,7,https://root.cern,https://github.com/root-project/root/pull/10644,1,['assert'],['assertion']
Testability,"Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15926:200,log,logic,200,https://root.cern,https://github.com/root-project/root/pull/15926,1,['log'],['logic']
Testability,"Reverts root-project/root#627. Note: do not merge it until the failing 'projectroot.math.mathcore.test.mathcore_testLogLExecPolicy' on some platforms is resolved. @xvallspl, @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/628:98,test,test,98,https://root.cern,https://github.com/root-project/root/pull/628,1,['test'],['test']
Testability,Revise Long Running Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3426:20,Test,Tests,20,https://root.cern,https://github.com/root-project/root/pull/3426,1,['Test'],['Tests']
Testability,Rewrite the RDataFrame JIT logic to avoid controlled leaks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15520:27,log,logic,27,https://root.cern,https://github.com/root-project/root/issues/15520,1,['log'],['logic']
Testability,"Right - @smuzaffar was quite clear that we should separate build failures from test failures. But we now fail for build failures, too, so maybe including test failures in the failed state makes sense? Anyway, just pinging @smuzaffar for his recommendation + arguments before we decide what to do here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542423864:79,test,test,79,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542423864,2,['test'],['test']
Testability,Right - it's not just a test that is failing - Athena DAOD files created with ROOT 6.31 can not be read back because information is missing and that stops our RNTuple developments too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-2023075354:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-2023075354,1,['test'],['test']
Testability,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/614#issuecomment-307013529:311,test,test,311,https://root.cern,https://github.com/root-project/root/pull/614#issuecomment-307013529,1,['test'],['test']
Testability,"Right now we only generate modulemaps for the ROOT libraries which; are exposed to the user. But we also have generate dictionary; calls for dictionaries that are not exposed to the user and should; only be private (such as TBench, TMathCoreUnitDict etc.). Right now we fail when compiling root on those dictionaries as we; don't have a modulemap for those dictionaries and we don't generate; one. This will also break tests that use the generate dictionary; call as those also don't have a modulemap now. This patch reuses the existing CMake code for generating modulemaps; and also uses it in those cases to provide a dictionary that; rootcling can use to generate a C++ module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1091:419,test,tests,419,https://root.cern,https://github.com/root-project/root/pull/1091,1,['test'],['tests']
Testability,"Right, but it seems to be related to runtime modules: I created a local build with `runtime_cxxmodules=OFF` on Linux and that indeed fails the test. It seems the warning is not emitted in that configuration - @devajithvs can you figure out why?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1985450955:143,test,test,143,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1985450955,1,['test'],['test']
Testability,"Right, it says:; ```; /.../root/math/mathmore/src/GSLMultiRootFinder.cxx:161:42: note: declared here; return (fSolver != 0) ? fSolver->Name().c_str() : """";; ```. (And why can I not link to a warning in CDash?). It was actually fixed today by; ```; commit c9f996a7bd13f955eab41760c9839ffe697e750e; Author: moneta <lorenzo.moneta@cern.ch>; AuthorDate: Tue Jun 6 12:05:47 2017 +0200; Commit: moneta <lorenzo.moneta@cern.ch>; CommitDate: Wed Jun 7 15:17:33 2017 +0200. Add test for multi root solver and test Name() method. ```; (Yes, the log didn't really help in finding that commit...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/613#issuecomment-306797224:469,test,test,469,https://root.cern,https://github.com/root-project/root/pull/613#issuecomment-306797224,3,"['log', 'test']","['log', 'test']"
Testability,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11650#issuecomment-1330379864:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864,4,['test'],"['test', 'testLikelihoodGradientJob', 'tests']"
Testability,"Right, that's also what I was scratching my head. By putting an `assert(0)`, I found that `AlternateTuple` is called from a `rootcling` invocation, and the member that triggers the `tuple` is a `unique_ptr<filesystem::path::_List::_Impl,filesystem::path::_List::_Impl_deleter>`. ie the underlying cause is the same as https://github.com/root-project/root/issues/13361",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574#issuecomment-1757850643:65,assert,assert,65,https://root.cern,https://github.com/root-project/root/issues/13574#issuecomment-1757850643,1,['assert'],['assert']
Testability,"Rint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -lm -ldl -rdynamic -lGeom -o stressGeometry; stressGeometry done; c++ -O2 -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -c stressLinear.cxx; c++ -O2 -m64 stressLinear.o -L/usr/lib64/root -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -lm -ldl -rdynamic -o stressLinear; stressLinear done; c++ -O2 -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -c stressGraphics.cxx; c++ -O2 -m64 stressGraphics.o -L/usr/lib64/root -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -lm -ldl -rdynamic -o stressGraphics; stressGraphics done; c++ -O2 -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -c testbits.cxx; c++ -O2 -m64 testbits.o -L/usr/lib64/root -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -lm -ldl -rdynamic -o testbits; testbits done; c++ -O2 -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -c ctorture.cxx; c++ -O2 -m64 ctorture.o -L/usr/lib64/root -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -pthread -lm -ldl -rdynamic -o ctorture; ctorture done; c++ -O2 -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -c QpRandomDriver.cxx; QpRandomDriver.cxx:4:10: fatal error: TQpDataDens.h: No such file or directory; #include ""TQpDataDens.h""; ^~~~~~~~~~~~~~~; compilation terminated.; make: *** [Makefile:805: QpRandomDriver.o] Error 1; ```. ```console; [yuehshun@lxplus8s12 test]$ . ../bin/thisroot.sh; [yuehshun@lxplus8s12 test]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1059973386:8018,test,testbits,8018,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1059973386,1,['test'],['testbits']
Testability,"RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...).; Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```; [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision; ```; You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/352:486,test,test,486,https://root.cern,https://github.com/root-project/root/pull/352,1,['test'],['test']
Testability,"RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3083:324,test,tests,324,https://root.cern,https://github.com/root-project/root/pull/3083,1,['test'],['tests']
Testability,RooFit MultiProcess and TestStatistics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:24,Test,TestStatistics,24,https://root.cern,https://github.com/root-project/root/pull/8294,1,['Test'],['TestStatistics']
Testability,"RooFit currently includes the `RooCBShape` and `RooDSCBShape` to; represent the family of crystal ball distributions. The `RooCBShape`; only has a left tail, and `RooDSCBShape` has two independently; parametrized tails. Some users also want a crystal ball where the width of the Gaussian; core is different on the left and the right side (see e.g. Jira ticket; [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case; of an asymmetric Gaussian core, this commit implements a new; `RooCrystalBall` class that should cover all classes of crystal ball; shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not; necessary anymore. The new features of the `RooCrystalBall` class that make it different; from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian; core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core; (to replace `RooDSCBShape`), only left tail (to replace; `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values; with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare; values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration; ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7257:1179,test,tested,1179,https://root.cern,https://github.com/root-project/root/pull/7257,7,['test'],"['test', 'testRooCrystalBal', 'tested']"
Testability,RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8369,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 2 redo: RooFitZMQ & MultiProcess,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/9078,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 2: ZeroMQ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8385,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 2b: MultiProcess,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8412:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8412,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 3: Minuit2::NumericalDerivator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8567,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 4: RooMinimizerFcn refactoring,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8569,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 5: RooGradMinimizerFcn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8596,1,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8694:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8694,2,"['Test', 'test']","['TestStatistics', 'test']"
Testability,RooFit::MultiProcess & TestStatistics part 6: add RooFit::TestStatistics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/8700,2,['Test'],['TestStatistics']
Testability,RooFit::MultiProcess & TestStatistics part 7: MultiProcess based TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:23,Test,TestStatistics,23,https://root.cern,https://github.com/root-project/root/pull/9349,2,['Test'],['TestStatistics']
Testability,RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-07-19T15:07:53.261Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-07-19T15:07:53.804Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-19T15:07:53.804Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-19T15:07:53.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-19T15:07:53.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-19T15:07:53.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-19T15:07:53.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-19T15:07:53.805Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:58:11: warning: ‘return_value’ may be used uninitialized in this function [-Wmaybe-uninitialized],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-882626354:8545,Test,TestStatistics,8545,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-882626354,8,['Test'],['TestStatistics']
Testability,RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-07-22T15:12:08.350Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-07-22T15:12:10.265Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.265Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-07-22T15:12:10.266Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:58:11: warning: ‘return_value’ may be used uninitialized in this function [-Wmaybe-uninitialized],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-884992866:8545,Test,TestStatistics,8545,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-884992866,8,['Test'],['TestStatistics']
Testability,RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-02T11:39:10.397Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:25:91: warning: declaration of ‘likelihood’ shadows a member of ‘RooFit::TestStatistics::LikelihoodGradientWrapper’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:63:83: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:79:109: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_components’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:88:35: warning: declaration of ‘N_events’ shadows a member of ‘RooFit::TestStatistics::RooAbsL’ [-Wshadow] ; - [2021-09-02T11:39:11.738Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:58:11: warning: ‘return_value’ may be used uninitialized in this function [-Wmaybe-uninitialized],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-911573431:5220,Test,TestStatistics,5220,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-911573431,8,['Test'],['TestStatistics']
Testability,RooFitCore.dir/src/RooVectorDataStore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooWorkspace.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooXYChi2Var.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooHelpers.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooWrapperPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooBinSamplingPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooBinWidthFunction.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooFitLegacy/RooCatTypeLegacy.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooFitLegacy/RooHashTable.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooFitLegacy/RooMinuit.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooFitLegacy/RooMultiCatIter.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooFitLegacy/RooNameSet.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooFitLegacy/RooSetPair.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/ConstantTermsOptimizer.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/LikelihoodGradientWrapper.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/LikelihoodWrapper.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/LikelihoodSerial.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/MinuitFcnGrad.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooAbsL.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooBinnedL.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooSubsidiaryL.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooSumL.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooRealL.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooUnbinnedL.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/optional_parameter_types.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-984085924:15392,Test,TestStatistics,15392,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-984085924,1,['Test'],['TestStatistics']
Testability,"RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This class is used in the RooRealMPFE event-based parallelization method that was present already before I started. `RooGaussMinimizerFcn` and `RooTaskSpec` were also part of our proof-of-concept exploration work.; - Similarly, there is some left-over code from benchmarks that is probabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:5788,test,tests,5788,https://root.cern,https://github.com/root-project/root/pull/8294,1,['test'],['tests']
Testability,RooFit_MultiProcess_ProcessTimer.dir/test_ProcessTimer.cxx.o ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:21:23: error: using declaration cannot refer to a namespace ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:56:12: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:56:31: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:59:23: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:59:45: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:64:18: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:64:40: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:68:12: error: use of undeclared identifier 'chrono'; did you mean 'std::chrono'? ; - [2024-03-16T02:36:58.358Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/multiprocess/test/test_ProcessTimer.cxx:68:31: error: use of undeclared identifier 'chrono'; did you ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14986#issuecomment-2001236844:1351,test,test,1351,https://root.cern,https://github.com/root-project/root/pull/14986#issuecomment-2001236844,1,['test'],['test']
Testability,"RooFormulaVar.h:73:19: warning: by ‘virtual RooSpan&lt;double&gt; RooFormulaVar::evaluateBatch(BatchHelpers::RunContext&, const RooArgSet*) const’ [-Woverloaded-virtual] ; - [2020-10-07T12:19:38.399Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:111:33: warning: ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*) const’ was hidden [-Woverloaded-virtual] ; - [2020-10-07T12:19:38.399Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooConstVar.h:40:25: warning: by ‘virtual RooSpan&lt;const double&gt; RooConstVar::getValBatch(BatchHelpers::RunContext&, const RooArgSet*) const’ [-Woverloaded-virtual] . And 556 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_SGD_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_SGD_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adam_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adam_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adagrad_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adagrad_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_RMSProp_Optimization_Cpu](https://lcgapp-servi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6484#issuecomment-704917683:3276,test,test,3276,https://root.cern,https://github.com/root-project/root/pull/6484#issuecomment-704917683,1,['test'],['test']
Testability,"Roofit was using TInterpreter::Next, which was actually calling; TClingTypedefInfo::InternalNext. This function is iterating each decls; and is not efficient. Measured performance of this patch on stressRooFit; testcase and it didn't have a significant different but not making roofit; slower as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1713:211,test,testcase,211,https://root.cern,https://github.com/root-project/root/pull/1713,2,['test'],['testcase']
Testability,"Root has two different ways to configure the build - the traditional configure script and cmake. The builds generated by the two systems are similar, but far from equivalent. Historically the configure script has been more feature complete and some things that the configure script is able to do are either missing or broken in the cmake build. However, new features are often only added to the cmake build. This has resulted in that today neither of the two is able to build root with a complete set of features. The cmake build is more standard and behaves in a more predictive way, e.g. it understands CFLAGS, LDFLAGS and friends which the configure script never did. It also integrates the test suite in the build and allows for running ""make test"", a feature that the configure script is missing. So the cmake build is in many ways better, if it wasn't for those missing and broken things mentioned earlier. This pull request is an attempt to address those missing and broken issues (though it fixes a few things for the configure script as well). Also contains a fix for ROOT-7326.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/153:694,test,test,694,https://root.cern,https://github.com/root-project/root/pull/153,2,['test'],['test']
Testability,"RootTestDriver.cmake""; 338: Environment variables: ; 338: ROOT_HIST=0; 338: Test timeout computed to be: 1500; 338: ****************************************************************************; 338: * Starting stress INTERPRETER *; 338: ****************************************************************************; 338: FuncCall ................................................................ OK; 338: STLDict ................................................................. OK; 338: Reflection .............................................................. OK; 338: NestedStatements ........................................................ OK; 338: ****************************************************************************; 338: stressInterpreter: Real Time = 0.74 seconds Cpu Time = 0.74 seconds; 338: ****************************************************************************; 338: * ROOTMARKS =12973.0 * Root6.31/01 20231010/0; 338: ****************************************************************************; 338: (bool) false; 1/1 Test #338: test-stressinterpreter ........... Passed 1.71 sec. The following tests passed:; test-stressinterpreter. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 1.97 sec; ```. New pass manager:; ```bash; dvalapar@emmanouil:~/work/root/newpassmanager (dev.newpassmanager)$ ctest -R test-stressinterpreter* --verbose; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Parse Config file:/home/dvalapar/work/root/newpassmanager/DartConfiguration.tcl; Test project /home/dvalapar/work/root/newpassmanager; Constructing a list of tests; Ignore test: test-stressproof; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fix",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1915174574:2338,Test,Test,2338,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1915174574,2,"['Test', 'test']","['Test', 'test-stressinterpreter']"
Testability,"Root_x86 failed to run ""roottest-cling-exception-nullderef-e test on release and debug configuration with MSVC on windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742:61,test,test,61,https://root.cern,https://github.com/root-project/root/issues/9742,1,['test'],['test']
Testability,RootmapGen/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoload/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writeClassWithComplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writeClassWithComplex/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50424/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/). And 374 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-447851508:1812,test,testReport,1812,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-447851508,4,['test'],['testReport']
Testability,Rootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16509/testReport/projectroot.bindings.pyroot/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1595#issuecomment-363870416:1405,test,testReport,1405,https://root.cern,https://github.com/root-project/root/pull/1595#issuecomment-363870416,1,['test'],['testReport']
Testability,Rootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17360/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-366090413:1402,test,testReport,1402,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-366090413,1,['test'],['testReport']
Testability,Rootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17364/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-366101261:1407,test,testReport,1407,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-366101261,1,['test'],['testReport']
Testability,Rootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17562/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-366547389:1406,test,testReport,1406,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-366547389,1,['test'],['testReport']
Testability,Run GL tests also in batch mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/556:7,test,tests,7,https://root.cern,https://github.com/root-project/root/pull/556,1,['test'],['tests']
Testability,"Run a first round of CI for the new RooFit feature. As it is an opt-in feature, the first round should mainly test that it doesn't break anything.; Several tests where batch evaluations are switched on are coming soon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/4283,2,['test'],"['test', 'tests']"
Testability,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11832:26,log,log,26,https://root.cern,https://github.com/root-project/root/pull/11832,5,['log'],"['log', 'logging', 'logs']"
Testability,"Runaway comment: I'm not sure whether it's the case here, but I remember seeing some usages of `R__ASSERT` in RNTuple that should have just been `assert`s (because they check for implementation bugs, not for well-formed inputs or similar). Might have been addressed already. If so, sorry for the noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13487#issuecomment-1683989376:146,assert,assert,146,https://root.cern,https://github.com/root-project/root/pull/13487#issuecomment-1683989376,1,['assert'],['assert']
Testability,Running on macitois17.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6377-mac1015-cxx17&date=2020-09-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/console).; ### Failing tests:; - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.double32.roottest_root_io_double32_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot.roottest.root.io/double32/roottest_root_io_double32_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execOptionList_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot.roottest.root/meta/roottest_root_meta_execOptionList_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runGetMissingDictionaries_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96141/testReport/projectroot.roottest.root/meta/roottest_root_meta_runGetMissingDictionaries_auto/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6377#issuecomment-694455084:1018,test,testReport,1018,https://root.cern,https://github.com/root-project/root/pull/6377#issuecomment-694455084,2,['test'],"['test', 'testReport']"
Testability,Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6301-mac1015-cxx17&date=2020-09-03).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_multicore_mt101_fillNtuples/); - [projectroot.runtutorials.tutorial_dataframe_df018_customActions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_dataframe_df018_customActions/); - [projectroot.runtutorials.tutorial_dataframe_df021_createTGraph](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_dataframe_df021_createTGraph/); - [projectroot.runtutorials.tutorial_dataframe_df022_useKahan](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_dataframe_df022_useKahan/); - [projectroot.runtutorials.tutorial_dataframe_df023_aggregate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_dataframe_df023_aggregate/); - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); - [projectroot.runtutorials.tutorial_multicore_mt001_fillHistos](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94728/testReport/projectroot/runtutorials/tutorial_multicore_mt001_fillHistos/); - [projectroot.runtutorials.tutorial_multicore_mt301_TTaskGroupSimple](htt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-686712265:1011,test,testReport,1011,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-686712265,1,['test'],['testReport']
Testability,Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/console).; ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_ntuple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_ntuple/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_basics](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_basics/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_descriptor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_descriptor/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_rdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_rdf/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_view](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_view/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_rfield_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_rfield_class/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_rfield_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121164/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_rfield_vector/); - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_show](htt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8552#issuecomment-869882116:1030,test,test,1030,https://root.cern,https://github.com/root-project/root/pull/8552#issuecomment-869882116,1,['test'],['test']
Testability,Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/console).; ### Failing tests:; - [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot/runtutorials/test_import_pandas/); - [projectroot.runtutorials.test_import_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot/runtutorials/test_import_numba/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.test_import_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot.bindings.pyroot.pythonizations/test/test_import_numba/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_handlers_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_handlers_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97283/testReport/projectroot.roottest.python/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6499#issuecomment-700735110:1019,test,test,1019,https://root.cern,https://github.com/root-project/root/pull/6499#issuecomment-700735110,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159438/testReport/projectroot.bindings.pyroot.pythonization,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319705338:1032,test,test,1032,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319705338,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159445/testReport/projectroot.bindings.pyroot.pythonization,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1319836077:1032,test,test,1032,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1319836077,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/console).; ### Failing tests:; - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_branchlessForest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_branchlessForest/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rbdt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rbdt/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.test.test_stressentrylist_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot.core.thread/test/gtest_core_thread_test_testInterpreterLock/); - [projectroot.test.test_stressroostats_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroot/test/test_stressroostats_interpreted/); - [projectroot.test.test_stressgraphics_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159841/testReport/projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326698032:1012,test,test,1012,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326698032,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/console).; ### Failing tests:; - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_branchlessForest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_branchlessForest/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rbdt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rbdt/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot.core.thread/test/gtest_core_thread_test_testInterpreterLock/); - [projectroot.test.test_stressentrylist_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.test.test_stressroostats_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroot/test/test_stressroostats_interpreted/); - [projectroot.test.test_stressgraphics_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159862/testReport/projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326902289:1012,test,test,1012,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326902289,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_listmethods](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164999/testReport/projectroot.bindings.pyroot.pythonization,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1398594352:1032,test,test,1032,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1398594352,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165028/testReport/projectroot.bindings.pyroot.pythonizations/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1398860483:1032,test,test,1032,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1398860483,1,['test'],['test']
Testability,Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/console).; ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_stl_vector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_stl_vector/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_len](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tcollection_len/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tcollection_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165183/testReport/projectroot.bindings.pyroot.pythonizations/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1399242784:1032,test,test,1032,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1399242784,1,['test'],['test']
Testability,Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_legacy_thread_threadsh1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot/runtutorials/tutorial_legacy_thread_threadsh1/); - [projectroot.runtutorials.tutorial_io_testMergeCont](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot/runtutorials/tutorial_io_testMergeCont/); - [projectroot.roottest.root.meta.roottest_root_meta_runInterpreterValue_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot.roottest.root/meta/roottest_root_meta_runInterpreterValue_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot.roottest.root.io/customCollection/roottest_root_io_customCollection_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_runsimpleFunc_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_runsimpleFunc_auto/); - [projectroot.roottest.root.treeformula.clones.roottest_root_treeformula_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148599/testReport/projectroot.roottest.root.treeformula/clones/roottest_root_treeformula_clones_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://lcgapp-serv,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10850#issuecomment-1169810403:1073,test,testReport,1073,https://root.cern,https://github.com/root-project/root/pull/10850#issuecomment-1169810403,1,['test'],['testReport']
Testability,Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/console).; ### Failing tests:; - [projectroot.test.test_event](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot/test/test_event/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.gui.webdisplay.test.test_webgui_ping](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot.gui.webdisplay/test/test_webgui_ping/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.ttree.roottest_python_ttree_ttree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121336/testReport/projectroot.roottest.python/ttree/roottest_python_ttree_ttree/); - [projectro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8429#issuecomment-871096740:1057,test,testReport,1057,https://root.cern,https://github.com/root-project/root/pull/8429#issuecomment-871096740,1,['test'],['testReport']
Testability,Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/console).; ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rvec_asrvec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rvec_asrvec/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_roofit_roojsonfactorywstool](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_roofit_roojsonfactorywstool/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_handlers_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_handlers_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156280/testReport/projectroot.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443#issuecomment-1266755250:1020,test,test,1020,https://root.cern,https://github.com/root-project/root/pull/11443#issuecomment-1266755250,1,['test'],['test']
Testability,Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5521-ROOT-fedora30-cxx14&date=2020-05-09).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/console).; ### Failing tests:; - [projectroot.test.test_check_nullptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_check_nullptr/); - [projectroot.test.test_check_invalidptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_check_invalidptr/); - [projectroot.test.test_minexam](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_minexam/); - [projectroot.test.test_tcollex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_tcollex/); - [projectroot.test.test_event](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_event/); - [projectroot.test.test_vvector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_vvector/); - [projectroot.test.test_vmatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_vmatrix/); - [projectroot.test.test_stressshapes_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_stressshapes_interpreted/); - [projectroot.test.test_stressgraphics_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81467/testReport/projectroot/test/test_stressgraphics_interpreted/); - [projectroot.test.test_stressshapes](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5521#issuecomment-626232545:1034,test,testReport,1034,https://root.cern,https://github.com/root-project/root/pull/5521#issuecomment-626232545,2,['test'],"['test', 'testReport']"
Testability,Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/console).; ### Failing tests:; - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_default_compr_level9_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_default_compr_level9_datageneration/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lzma_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lzma_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lz4_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/113614/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969#issuecomment-816959413:1052,test,testReport,1052,https://root.cern,https://github.com/root-project/root/pull/6969#issuecomment-816959413,1,['test'],['testReport']
Testability,Running on sft-ubuntu-1604-4.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5922-ROOT-ubuntu16-nortcxxmod&date=2020-06-26).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/console).; ### Warnings:; - [2020-06-26T13:26:22.008Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/test/TErrorTests.cxx:51:40: warning: format not a string literal and no format arguments [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.tree.tree.test.gtest_tree_tree_test_testTBasket](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTBasket/); - [projectroot.roottest.root.io.fakeClass.roottest_root_io_fakeClass_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.io/fakeClass/roottest_root_io_fakeClass_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_checkWarn0](https://lcgapp-services.cern.ch/root-jenkins/jo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5922#issuecomment-650198966:1057,test,testReport,1057,https://root.cern,https://github.com/root-project/root/pull/5922#issuecomment-650198966,1,['test'],['testReport']
Testability,"Running the tests I saw the same deadlock that we had after the changes to cling that allowed not jitting `gROOTMutex->UnLock()` (due to a lock being recursively taken in a signal handler after cling crashed). I believe this is due to a ""dirty"" incremental. I'll test again after building ROOT from scratch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/972#issuecomment-328812590:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/972#issuecomment-328812590,2,['test'],"['test', 'tests']"
Testability,"Running tree/ntuple/v7/test/ntuple_extended sometimes fails (at least on MacOS 11) at tear down. The crash happens at:. ```; (lldb) bt; * thread #13, stop reason = EXC_BAD_ACCESS (code=1, address=0x0); * frame #0: 0x000000010095d80f libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSourceFile::UnzipClusterImpl(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorageFile.cxx:652:26; frame #1: 0x0000000100944934 libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSource::UnzipCluster(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorage.cxx:101:7; frame #2: 0x0000000100897a53 libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RClusterPool::ExecUnzipClusters(this=0x00000001479040b0) at RClusterPool.cxx:102:22; frame #3: 0x00000001008a9817 libROOTNTuple.6.23.so`decltype(__f=0x00000001479042d8, __a0=0x00000001479042e8)).*fp()) std::__1::__invoke<void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*, void>(void (ROOT::Experimental::Detail::RClusterPool::*&&)(), ROOT::Experimental::Detail::RClusterPool*&&) at type_traits:3486:1; frame #4: 0x00000001008a971e libROOTNTuple.6.23.so`void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*, 2ul>(__t=size=3, (null)=__tuple_indices<2> @ 0x0000700008c5df58)(), ROOT::Experimental::Detail::RClusterPool*>&, std::__1::__tuple_indices<2ul>) at thread:273:5; frame #5: 0x00000001008a8ed6 libROOTNTuple.6.23.so`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*> >(__vp=0x00000001479042d0) at thread:284:5; frame #6: 0x00007fff2032f950 libsystem_pthread.dylib`_pthread_start + 224; frame #7: 0x00007fff2032b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:23,test,test,23,https://root.cern,https://github.com/root-project/root/issues/7076,1,['test'],['test']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-03-09T14:48:12.377Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:608:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-03-09T14:48:12.377Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-03-09T14:48:12.377Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 166 more. ### Failing tests:; - [projectroot.roottest.python.distrdf.common.roottest_python_distrdf_common_common_test_rungraphs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139053/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_common_test_rungraphs/); - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_dask_test_backend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139053/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_dask_test_backend/); - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_dask_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139053/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_dask_test_inv_mass/); - [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_dask_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10084#issuecomment-1063021596:3224,test,tests,3224,https://root.cern,https://github.com/root-project/root/pull/10084#issuecomment-1063021596,1,['test'],['tests']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-12-21T16:09:00.282Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-12-21T16:09:00.282Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-12-21T16:09:00.282Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 417 more. ### Failing tests:; - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163000/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1361628059:3316,test,tests,3316,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1361628059,1,['test'],['tests']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-10T17:58:35.397Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-10T17:58:35.397Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-10T17:58:35.398Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 181 more. ### Failing tests:; - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163804/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163804/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163804/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_readcomplex/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163804/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11997#issuecomment-1377672853:3316,test,tests,3316,https://root.cern,https://github.com/root-project/root/pull/11997#issuecomment-1377672853,1,['test'],['tests']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-02-06T20:25:37.356Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-02-06T20:25:37.356Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-02-06T20:25:37.356Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 190 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167170/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167170/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.test.test_stressgraphics_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167170/testReport/projectroot/test/test_stressgraphics_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/167170/testReport/projectroot.tree.dataframe/test/gtest_tree_datafra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1419729540:3318,test,tests,3318,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1419729540,1,['test'],['tests']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-04-03T06:36:20.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-04-03T06:36:20.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-04-03T06:36:20.986Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 122 more. ### Failing tests:; - [projectroot.hist.histdrawv7.test.gtest_hist_histdrawv7_test_histhistdrawv7testUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171956/testReport/projectroot.hist.histdrawv7/test/gtest_hist_histdrawv7_test_histhistdrawv7testUnit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171956/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171956/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171956/testReport/projectroot.roottest.pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1493774996:3316,test,tests,3316,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1493774996,1,['test'],['tests']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-04-03T07:17:57.866Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-04-03T07:17:57.866Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-04-03T07:17:57.866Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 122 more. ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFuncWrapper](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171954/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFuncWrapper/); - [projectroot.hist.histdrawv7.test.gtest_hist_histdrawv7_test_histhistdrawv7testUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171954/testReport/projectroot.hist.histdrawv7/test/gtest_hist_histdrawv7_test_histhistdrawv7testUnit/); - [projectroot.roottest.root.meta.tuple.roottest_root_meta_tuple_exec_configtype_unload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171954/testReport/projectroot.roottest.root.meta/tuple/roottest_root_meta_tuple_exec_configtype_unload_auto/); - [projectroot.gui.webdisplay.test.test_webgui_ping](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/171954/testReport/projectroot.gui.webdisplay/test/test_webgui_pin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1493832033:3316,test,tests,3316,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1493832033,1,['test'],['tests']
Testability,S 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-09-14T15:09:14.313Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-09-14T15:09:14.313Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-09-14T15:09:14.314Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 113 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_pyroot_fillrandom_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184831/testReport/projectroot/runtutorials/tutorial_pyroot_fillrandom_py/); - [projectroot.runtutorials.tutorial_pyroot_geometry_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184831/testReport/projectroot/runtutorials/tutorial_pyroot_geometry_py/); - [projectroot.runtutorials.tutorial_pyroot_hsimple_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184831/testReport/projectroot/runtutorials/tutorial_pyroot_hsimple_py/); - [projectroot.runtutorials.tutorial_roofit_rf502_wspacewrite_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184831/testReport/projectroot/runtutorials/tutorial_roofit_rf502_wspacewrite_py/); - [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184831/testReport/proje,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1719759685:3316,test,tests,3316,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1719759685,1,['test'],['tests']
Testability,"S::AddBinContent’ [-Woverloaded-virtual] ; - [2024-02-29T18:10:54.142Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/hist/inc/TH1.h:195:21: warning: ‘virtual void TH1::AddBinContent(Int_t, Int_t)’ was hidden [-Woverloaded-virtual] ; - [2024-02-29T18:10:54.142Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/hist/inc/TH3.h:207:22: warning: by ‘TH3S::AddBinContent’ [-Woverloaded-virtual] ; - [2024-02-29T18:10:54.142Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/hist/inc/TH1.h:196:21: warning: ‘virtual void TH1::AddBinContent(Int_t, Int_t, Double_t)’ was hidden [-Woverloaded-virtual] ; - [2024-02-29T18:10:54.142Z] /home/sftnight/build/workspace/root-pullrequests-build/root/hist/hist/inc/TH3.h:245:22: warning: by ‘TH3I::AddBinContent’ [-Woverloaded-virtual] . And 2534 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197151/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/197151/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14154#issuecomment-1971749393:2412,test,testReport,2412,https://root.cern,https://github.com/root-project/root/pull/14154#issuecomment-1971749393,1,['test'],['testReport']
Testability,"SBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 4. mkdir build_amd64 && cd build_amd64; 5. pip install pytest; 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON ..; 6. cmake --build . --config Release. ### Setup; 1. Operating system: Windows 10; 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2989,test,test,2989,https://root.cern,https://github.com/root-project/root/issues/9487,2,['test'],['test']
Testability,"SMatrix<double,3,3,> addition 		................ OK; SMatrix<double,3,3,> write 		................ OK; SMatrix<double,3,3,> read 		................ OK; SMatrix<double,3,3,> after read 		................ OK; SMatrix<Double32_t,3,3,> write 		................ OK; SMatrix<Double32_t,3,3,> read 		................ OK; SMatrix<Double32_t,3,3,> after read 		................ OK; SMatrix<double,5,5,MatRepSym> creation 		................ OK; SMatrix<double,5,5,MatRepSym> addition 		................ OK; SMatrix<double,5,5,MatRepSym> write 		................ OK; SMatrix<double,5,5,MatRepSym> read 		................ OK; SMatrix<double,5,5,MatRepSym> after read		................ OK; SMatrix<Double32_t,5,5,MatRepSym> write 		................ OK; SMatrix<Double32_t,5,5,MatRepSym> read 		................ OK; SMatrix<Double32_t,5,5,MatRepSym> after read		................ OK; ******************************************************************************; 	Test of a Composite Object (containing Vector's and Matrices); ******************************************************************************; Test Using CINT library; TrackD creation 		................ OK; TrackD addition 		................ OK; TrackD write 		................ OK; TrackD read 		................ OK; TrackD after read 		................ OK; TrackD32 creation 		................ OK; TrackD32 addition 		................ OK; TrackD32 write 		................ OK; TrackD32 read 		................ OK; TrackD32 after read 		................ OK; TrackD32 Double32 test 		................ OK; TrackErrD creation 		................ OK; TrackErrD addition 		................ OK; TrackErrD write 		................ OK; TrackErrD read 		................ OK; TrackErrD after read 		................ OK; TrackErrD32 creation 		................ OK; TrackErrD32 addition 		................ OK; TrackErrD32 write 		................ OK; TrackErrD32 read 		................ OK; TrackErrD32 after read 		................ OK; TrackErrD32 Double32 test 	",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:9510,Test,Test,9510,https://root.cern,https://github.com/root-project/root/pull/401,2,['Test'],['Test']
Testability,SMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2021-02-25T18:25:08.919Z] include/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2021-02-25T18:25:08.919Z] include/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 192 more. ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.test_import_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107919/testReport/projectroot.bindings.pyroot.pythonizations/test/test_import_numba/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107919/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107919/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_spark/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107919/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/107919/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.test.test_stressiterators_interpreted](https://lcgapp-services.cern.ch/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7287#issuecomment-786119686:3066,test,testReport,3066,https://root.cern,https://github.com/root-project/root/pull/7287#issuecomment-786119686,1,['test'],['testReport']
Testability,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4103,Assert,Assertion,4103,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,2,"['Assert', 'test']","['Assertion', 'tests']"
Testability,ST PASSED Fe vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Mat_Fe_TGeo vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_1_Fe_TGeo vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_Fe_TGeo vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_3_Fe_TGeo vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED U vs. Mat_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED Mat_U_TGeo vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_1_U_TGeo vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_U_TGeo vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_3_U_TGeo vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % . TEST PASSED Hurray!!!! 0 failures detected.; ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9212397/test_material_un,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198355345:4364,TEST,TEST,4364,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345,1,['TEST'],['TEST']
Testability,"ST_P(RDFVary, RequireNVariationsIsConsistent); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; auto s = df.Vary(""x"", SimpleVariation, {}, /*wrong=*/3).Sum<int>(""x"");; @@ -231,10 +231,14 @@ TEST(RDFVary, RequireNVariationsIsConsistent); std::runtime_error);; ; std::cerr.rdbuf(oldCerrStreamBuf);; - EXPECT_EQ(strCerr.str(), ""RDataFrame::Run: event loop was interrupted\n"");; + std::string msg;; + const auto nRepetitions = GetParam() ? std::min(4u, std::thread::hardware_concurrency()) : 1u;; + for (auto i = 0u; i < nRepetitions; ++i); + msg += ""RDataFrame::Run: event loop was interrupted\n"";; + EXPECT_EQ(strCerr.str(), msg);; }; ; -TEST(RDFVary, VariationsForDoesNotTriggerRun); +TEST_P(RDFVary, VariationsForDoesNotTriggerRun); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -242,7 +246,7 @@ TEST(RDFVary, VariationsForDoesNotTriggerRun); EXPECT_EQ(df.GetNRuns(), 0);; }; ; -TEST(RDFVary, VariationsForWithNoVariations); +TEST_P(RDFVary, VariationsForWithNoVariations); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -250,7 +254,7 @@ TEST(RDFVary, VariationsForWithNoVariations); EXPECT_EQ(hs.GetKeys(), std::vector<std::string>{""nominal""});; }; ; -TEST(RDFVary, GetVariations); +TEST_P(RDFVary, GetVariations); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Define(""y"", [] { return 10; });; auto df2 = df.Vary(""x"", SimpleVariation, {}, 2); @@ -269,7 +273,7 @@ TEST(RDFVary, GetVariations); ""Variations {x:0, x:1} affect column x\nVariations {xy:0, xy:1} affect columns {x, y}\n"");; }; ; -TEST(RDataFrameInterface, VaryFriend); +TEST(RDFVary, VaryFriend); {; int x = 0;; TTree main(""main"", ""main"");; @@ -295,7 +299,7 @@ TEST(RDataFrameInterface, VaryFriend); EXPECT_EQ(sum2vars[""var:0""], 43);; }; ; -TEST(RDFVary, ResultMapIteration); +TEST_P(RDFVary, ResultMapIteration); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Vary(""x"", SimpleVariation, {}, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:2919,TEST,TEST,2919,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['TEST'],['TEST']
Testability,S_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:49.129Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:49.129Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:49.130Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T11:31:55.284Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 366 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162922/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11825#issuecomment-1361219289:2400,test,testReport,2400,https://root.cern,https://github.com/root-project/root/pull/11825#issuecomment-1361219289,1,['test'],['testReport']
Testability,S_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:44.378Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:04:50.318Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 366 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162929/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908#issuecomment-1361250252:2400,test,testReport,2400,https://root.cern,https://github.com/root-project/root/pull/11908#issuecomment-1361250252,1,['test'],['testReport']
Testability,S_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.707Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.707Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:96:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:29.707Z] /data/sftnight/workspace/root-pullrequests-build/build/include/ROOT/RNTupleDS.hxx:98:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T12:37:35.112Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RConfig.hxx:495:73: warning: ‘REMOVE_THIS_NOW’ attribute directive ignored [-Wattributes] . And 367 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/162936/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945#issuecomment-1361304018:2400,test,testReport,2400,https://root.cern,https://github.com/root-project/root/pull/11945#issuecomment-1361304018,1,['test'],['testReport']
Testability,"Sadly slc6/gcc48 don't want to pick up right branch for tests; ```; 15:33:19 First, rewinding head to replay your work on top of it...; 15:33:19 Applying: Revert ""Final update to use LZ4 as a default for ROOT""; 15:33:19 Applying: Revert ""Changing default from ZLIB to LZ4 in case of illegal algorithm usage in ROOT""; 15:33:19 Applying: Changing CMake settings back to default zlib; 15:33:19 Applying: Fix doxygen syntax for RSnapshotOptions; 15:33:20 From https://github.com/oshadura/roottest; 15:33:20 ! [rejected] back-2-zlib -> oshadura-back-2-zlib (non-fast-forward); ```; I saw this behaviour in other PRs (like Brian's https://github.com/root-project/root/pull/2775)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2889#issuecomment-434726884:56,test,tests,56,https://root.cern,https://github.com/root-project/root/pull/2889#issuecomment-434726884,1,['test'],['tests']
Testability,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15660:307,test,tested,307,https://root.cern,https://github.com/root-project/root/pull/15660,1,['test'],['tested']
Testability,Same comments of this PR https://github.com/root-project/root/pull/16372 apply here. The graphics tests have to be updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16348#issuecomment-2336631603:98,test,tests,98,https://root.cern,https://github.com/root-project/root/pull/16348#issuecomment-2336631603,1,['test'],['tests']
Testability,"Same for the `RDataFrame`:. ```python; >>> f = ROOT.TFile(""test.root"", ""RECREATE""); >>> tree = ROOT.TTree(""foo"", ""bar""); >>> [do sth with the tree ...]; >>> df = ROOT.RDataFrame(""foo"", ""test.root""); >>> print(df); A data frame built on top of the foo dataset.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392511449:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392511449,2,['test'],['test']
Testability,Same test failure (`roottest-python-regression-regression`) as fedora 38 :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13761#issuecomment-1742877857:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/13761#issuecomment-1742877857,1,['test'],['test']
Testability,"Sandro, thank you for the PR !. Yes, It would be great to have also a unit test in the math/genvector/test/testGenVector.cxx test program. Best. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/464#issuecomment-289663101:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/464#issuecomment-289663101,4,['test'],"['test', 'testGenVector']"
Testability,"SaveGraph mainly relied on static structures. Removed static maps, which were used to check if a define/filter/range node were already on the computation graph.; Solution is to pass a (non-static) map, which is created at each call of SaveGraph. Get rid of the static id initializer.; The size of the map of visited nodes is used to assign unique ids.; Now, also the action nodes are in the visited map.; The visited map is now only one and has signature std::unordered_map<void *, std::shared_ptr<GraphNode>> - in this manner, different type of nodes can use the same map. Tests were adapted accordingly. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9536:574,Test,Tests,574,https://root.cern,https://github.com/root-project/root/pull/9536,2,"['Test', 'test']","['Tests', 'tested']"
Testability,"Science Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:5482,Benchmark,Benchmarking,5482,https://root.cern,https://github.com/root-project/root/pull/8294,1,['Benchmark'],['Benchmarking']
Testability,"Second fix after #2361 with same test program. Valgrind output before fix (but with fix of #2361):. ```; ==22182== LEAK SUMMARY:; ==22182== definitely lost: 6,424 bytes in 202 blocks; ==22182== indirectly lost: 23,936 bytes in 200 blocks; ==22182== possibly lost: 61,230 bytes in 610 blocks; ==22182== still reachable: 74,911,268 bytes in 100,857 blocks; ==22182== of which reachable via heuristic:; ==22182== newarray : 25,424 bytes in 49 blocks; ==22182== multipleinheritance: 928 bytes in 2 blocks; ==22182== suppressed: 6,374,775 bytes in 65,619 blocks; ```. Valgrind output after fix:. ```; ==5872== LEAK SUMMARY:; ==5872== definitely lost: 24 bytes in 2 blocks; ==5872== indirectly lost: 56 bytes in 1 blocks; ==5872== possibly lost: 60,990 bytes in 608 blocks; ==5872== still reachable: 74,909,841 bytes in 100,876 blocks; ==5872== of which reachable via heuristic:; ==5872== newarray : 25,424 bytes in 49 blocks; ==5872== multipleinheritance: 2,136 bytes in 3 blocks; ==5872== suppressed: 6,378,087 bytes in 65,619 blocks; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2362:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/2362,1,['test'],['test']
Testability,Second iteration of the distributed RunGraphs function. The logic is greatly simplified now.; * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle; * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9344:60,log,logic,60,https://root.cern,https://github.com/root-project/root/pull/9344,1,['log'],['logic']
Testability,"Second round of testing with `./tree/dataframe/test/dataframe_cache --gtest_filter=Cache.Ambiguity`, the result with `git-bisect` is:; ```; 99701af2bae25872aa0795fa08c6337232ff2f3c is the first bad commit; commit 99701af2bae25872aa0795fa08c6337232ff2f3c; Author: Enrico Guiraud <enrico.guiraud@cern.ch>; Date: Tue Oct 26 10:28:14 2021 +0200. [DF] Avoid calling InitSlot/FinaliseSlot multiple times on RDefines. Before this commit, each action and filter was calling InitSlot on all; the defines it knew about. As a consequence, RDefine had to keep track; of whether InitSlot was already called on it for a given task and a; given slot. We can avoid the multiple InitSlot calls on the same objects and the; book-keeping of whether the call already happened or not by having; RLoopManager call InitSlot on every defined column once per task and per; slot. To this end, we need to register RDefine objects with the; RLoopManager when they are created and deregister them when they are; destroyed. tree/dataframe/inc/ROOT/RDF/RAction.hxx | 14 +++++++-------; tree/dataframe/inc/ROOT/RDF/RBookedDefines.hxx | 5 +++++; tree/dataframe/inc/ROOT/RDF/RDefine.hxx | 20 ++++++--------------; tree/dataframe/inc/ROOT/RDF/RDefineBase.hxx | 1 -; tree/dataframe/inc/ROOT/RDF/RFilter.hxx | 14 ++++++--------; tree/dataframe/inc/ROOT/RDF/RInterface.hxx | 8 +++++---; tree/dataframe/inc/ROOT/RDF/RJittedDefine.hxx | 1 +; tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx | 4 ++++; tree/dataframe/src/RDFBookedDefines.cxx | 5 +++++; tree/dataframe/src/RDefineBase.cxx | 10 ++++------; tree/dataframe/src/RJittedDefine.cxx | 6 ++++++; tree/dataframe/src/RLoopManager.cxx | 15 +++++++++++++++; 12 files changed, 64 insertions(+), 39 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007#issuecomment-1057004565:16,test,testing,16,https://root.cern,https://github.com/root-project/root/issues/10007#issuecomment-1057004565,2,['test'],"['test', 'testing']"
Testability,SectionID: 4 Offset: 112; 		RelType: 38 Addend: 8 TargetName: .rodata.cst4; 		This is section symbol; 		SectionID: 4 Offset: 120; 		RelType: 38 Addend: 0 TargetName: .str.12; 		SectionID: 4 Offset: 128; 		RelType: 38 Addend: 0 TargetName: .str.13; 		SectionID: 4 Offset: 136; 		RelType: 38 Addend: 0 TargetName: .str.14; 		SectionID: 4 Offset: 144; 		RelType: 38 Addend: 0 TargetName: .str.15; 		SectionID: 4 Offset: 152; 		RelType: 38 Addend: 0 TargetName: .str.16; 		SectionID: 4 Offset: 160; 		RelType: 38 Addend: 0 TargetName: gBenchmark; 		SectionID: 4 Offset: 168; 		RelType: 38 Addend: 0 TargetName: .str.17; 		SectionID: 4 Offset: 176; 		RelType: 38 Addend: 0 TargetName: .str.18; 		SectionID: 4 Offset: 184; 		RelType: 38 Addend: 0 TargetName: .str.19; 		SectionID: 4 Offset: 192; 	SectionID: 2; 		RelType: 38 Addend: 0 TargetName: __gxx_personality_v0; 		SectionID: 2 Offset: 0; emitSection SectionID: 6 Name: .eh_frame obj addr: 0x10022a6ec00 new addr: 0x3fff8d1e0268 DataSize: 124 StubBufSize: 132 Allocate: 256; 	SectionID: 6; 		RelType: 44 Addend: 0 TargetName: DW.ref.__gxx_personality_v0; 		SectionID: 6 Offset: 19; 		RelType: 44 Addend: 8 TargetName: .text; 		This is section symbol; 		SectionID: 6 Offset: 40; 		RelType: 44 Addend: 0 TargetName: .gcc_except_table; 		This is section symbol; 		SectionID: 6 Offset: 57; ----- Contents of section .gcc_except_table before relocations -----; 0x00003fff8d1e0070: ff ff 01 9a 01 00 84 01 00 00 84 01 20 ec 16 00; 0x00003fff8d1e0080: a4 01 18 e0 16 00 c4 01 14 c8 16 00 e4 01 f0 01; 0x00003fff8d1e0090: fc 16 00 88 04 88 02 f8 16 00 94 06 2c cc 16 00; 0x00003fff8d1e00a0: c0 06 08 e8 16 00 cc 06 40 b4 16 00 90 07 3c e8; 0x00003fff8d1e00b0: 16 00 cc 07 08 b0 16 00 d8 07 34 9c 16 00 8c 08; 0x00003fff8d1e00c0: 08 98 16 00 98 08 44 84 16 00 dc 08 08 e4 16 00; 0x00003fff8d1e00d0: e8 08 28 f0 15 00 9c 09 40 e4 16 00 dc 09 0c 90; 0x00003fff8d1e00e0: 17 00 ec 09 2c dc 15 00 9c 0a 98 03 90 17 00 b4; 0x00003fff8d1e00f0: 0d 10 d8 15 00 f4 0d 1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:24556,Stub,StubBufSize,24556,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['Stub'],['StubBufSize']
Testability,"See PR #6418 's `core/metacling/test/TClingMethodInfoTests.cxx`, in `TEST(TClingMethodInfo, TemplateFun)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6482:32,test,test,32,https://root.cern,https://github.com/root-project/root/issues/6482,2,"['TEST', 'test']","['TEST', 'test']"
Testability,See also https://chris.beams.io/posts/git-commit for the usual conventions around git commit messages. To play nice with `git --oneline` or other ways to visualize git logs it should look something like this:. ```; [DF] Use FromSpec in df106_HiggstoFourLeptons.py tutorial. Now one RDF is used instead of a number of individual ones; and users can see what a dataset specification file looks like; and how to access the metadata information.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12929#issuecomment-1573963050:168,log,logs,168,https://root.cern,https://github.com/root-project/root/pull/12929#issuecomment-1573963050,1,['log'],['logs']
Testability,See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5884-mac1014-python3&date=2020-07-16).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/console).; ### Failing tests:; - [projectroot.test.test_stresstmva](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/test/test_stresstmva/); - [projectroot.test.test_stressentrylist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/test/test_stressentrylist/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.test.test_check_invalidptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/test/test_check_invalidptr/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis_py/); - [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis_py/); - [projectroot.runtutorials.tutorial_dataframe_df104_HiggsToTwoPhotons_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/90003/testReport/projectroot/runtutorials/tutorial_dataframe_df104_HiggsToTwoPhotons_py/); - [projectroot.runtutorials.tu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-659512744:1101,test,testReport,1101,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-659512744,2,['test'],"['test', 'testReport']"
Testability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/console).; ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_53410_v2/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execNamingMatches_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execNamingMatches_auto/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.io.io.test.gtest_io_io_test_TFileMerger](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.io.io/test/gtest_io_io_test_TFileMerger/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35972/testReport/projectroot.roottest.root.meta/evolution/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410971759:1041,test,testReport,1041,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410971759,1,['test'],['testReport']
Testability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/console).; ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.math.minuit2.test.minuit2_Quad8FMain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_Quad8FMain/); - [projectroot.math.minuit2.test.minuit2_Quad12FMain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_Quad12FMain/); - [projectroot.math.minuit2.test.minuit2_DemoGaussSim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_DemoGaussSim/); - [projectroot.math.minuit2.test.minuit2_DemoFumili](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_DemoFumili/); - [projectroot.math.minuit2.test.minuit2_PaulTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_PaulTest/); - [projectroot.math.minuit2.test.minuit2_PaulTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_PaulTest2/); - [projectroot.math.minuit2.test.minuit2_PaulTest3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_PaulTest3/); - [projectroot.math.minuit2.test.minuit2_PaulTest4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_PaulTest4/); - [projectroot.math.minuit2.test.minuit2_ReneTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37824/testReport/projectroot.math.minuit2/test/minuit2_ReneTest/). And 76 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414959560:1075,test,testReport,1075,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414959560,17,['test'],"['test', 'testReport']"
Testability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_conflictingSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_conflictingSelections/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_selectionDuplicate](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_selectionDuplicate/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_privateClassXMLSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_privateClassXMLSelection/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_equivalentSelections](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_equivalentSelections/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3861/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_1/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-319973381:1037,test,testReport,1037,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-319973381,1,['test'],['testReport']
Testability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52800/console).; ### Warnings:; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPMethod.cxx:149:6: warning: unused parameter ‘ctxt’ [-Wunused-parameter] ; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/Converters.cxx:407:6: warning: unused parameter ‘ctxt’ [-Wunused-parameter] ; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPDataMember.cxx:28:18: warning: unused parameter ‘kls’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52800/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52800/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52800/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52800/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1Clean_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52800/testReport/projectroot.roottest.python,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3356#issuecomment-459375366:1060,test,test,1060,https://root.cern,https://github.com/root-project/root/pull/3356#issuecomment-459375366,1,['test'],['test']
Testability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52813/console).; ### Warnings:; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPMethod.cxx:149:6: warning: unused parameter ‘ctxt’ [-Wunused-parameter] ; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/Converters.cxx:407:6: warning: unused parameter ‘ctxt’ [-Wunused-parameter] ; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPDataMember.cxx:28:18: warning: unused parameter ‘kls’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52813/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52813/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52813/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2Clean_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52813/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52813/testReport/projectroot.roottest.python/cmdLineUtil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3356#issuecomment-459418538:1060,test,test,1060,https://root.cern,https://github.com/root-project/root/pull/3356#issuecomment-459418538,1,['test'],['test']
Testability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/console).; ### Warnings:; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/Converters.cxx:407:6: warning: unused parameter ‘ctxt’ [-Wunused-parameter] ; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPDataMember.cxx:28:18: warning: unused parameter ‘kls’ [-Wunused-parameter] ; - /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPMethod.cxx:149:6: warning: unused parameter ‘ctxt’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot_experimental.PyROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.runtutorials.tutorial_pyroot_DynamicSlice_py_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot/runtutorials/tutorial_pyroot_DynamicSlice_py_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRoo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3410#issuecomment-462308840:1060,test,test,1060,https://root.cern,https://github.com/root-project/root/pull/3410#issuecomment-462308840,1,['test'],['test']
Testability,"See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80394/console).; ### Errors:; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -Iinclude -Icore/thread/test -Igoogletest-prefix/src/googletest/googletest/include -Igoogletest-prefix/src/googletest/googlemock/include -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/matrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++11 -MD -MT core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o -MF core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o.d -o core/thread/test/CMakeFiles/testTThreadedObject.dir/testTThreadedObject.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/thread/test/testTThreadedObject.cxx ; - include/ROOT/TThreadedObject.hxx:324:13: error: ‘lock_guard’ is not a member of ‘std’ ; - include/ROOT/TThreadedObject.hxx:324:45: error: expected primary-expression before ‘&gt;’ token ; - include/ROOT/TThreadedObject.hxx:324:65: error: there are no arguments to ‘lg’ that depend on a template parameter, so a declaration of ‘lg’ must be available [-fpermissive] ; - include/ROOT/TThreadedObject.hxx:324:49: error: ‘lg’ was not declared in this scope ; - FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -Iinclude -Icore/thread/test -Igoogletest-prefix/src/googletest/googletest/include -Igoogletest-prefix/src/googletest/googlemock/include -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/hist/hist/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049#issuecomment-595748340:1035,test,test,1035,https://root.cern,https://github.com/root-project/root/pull/5049#issuecomment-595748340,2,['test'],"['test', 'testTThreadedObject']"
Testability,See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/console).; ### Failing tests:; - [projectroot.net.davix.test.gtest_net_davix_test_RRawFileDavix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot.net.davix/test/gtest_net_davix_test_RRawFileDavix/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_SGD_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_SGD_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adam_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adam_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adagrad_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adagrad_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_RMSProp_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_RMSProp_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adadelta_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102258/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adadelta_Optimization_Cpu/); - [projectroot.tmva.tmva.test.envelope.gtest_tmv,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6844#issuecomment-730371317:1120,test,test,1120,https://root.cern,https://github.com/root-project/root/pull/6844#issuecomment-730371317,1,['test'],['test']
Testability,See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/console).; ### Failing tests:; - [projectroot.math.genetic.test.genetic_GAMinTutorial](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.math.genetic/test/genetic_GAMinTutorial/); - [projectroot.math.mathcore.test.mathcore_testFit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.math.mathcore/test/mathcore_testFit/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testGraphFit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.math.mathcore/test/mathcore_testGraphFit/); - [projectroot.math.minuit2.test.minuit2_testMinimizer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.math.minuit2/test/minuit2_testMinimizer/); - [projectroot.test.test_stressHistFactory_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.roottest.root.roofitstats.gtesttest_root_roofitstats_stabilityTests](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102985/testReport/projectroot.roottest.root/roofitstats/gtesttest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-735847861:1114,test,test,1114,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-735847861,1,['test'],['test']
Testability,See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/console).; ### Failing tests:; - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_friend_trees](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_friend_trees/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_inv_mass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_inv_mass/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_reducer_merge](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_reducer_merge/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_include_headers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_include_headers/); - [projectroot.bindings.experimental.distrdf.tests.integration.spark.pyunittests_distrdf_integration_spark_test_histo_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/105995/testReport/projectroot.bindings.experimental.distrdf.tests.integration/spark/pyunittests_distrdf_integration_spark_test_histo_write/); - [projectroot.bindings.experimental.distrdf.tests.unit.backend.pyunittests_distrdf_unit_backend_test_spark](https://lcgapp-services.cern.ch/root-jenkins/job/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774106349:1145,test,testReport,1145,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774106349,1,['test'],['testReport']
Testability,See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df008_createDataSetFromScratch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df008_createDataSetFromScratch/); - [projectroot.runtutorials.tutorial_dataframe_df009_FromScratchVSTTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df009_FromScratchVSTTree/); - [projectroot.runtutorials.tutorial_dataframe_df003_profiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df003_profiles/); - [projectroot.runtutorials.tutorial_dataframe_df004_cutFlowReport](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df004_cutFlowReport/); - [projectroot.runtutorials.tutorial_dataframe_df005_fillAnyObject](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df005_fillAnyObject/); - [projectroot.runtutorials.tutorial_dataframe_df006_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df006_ranges/); - [projectroot.runtutorials.tutorial_dataframe_df002_dataModel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df002_dataModel/); - [projectroot.runtutorials.tutorial_dataframe_df007_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146973/testReport/projectroot/runtutorials/tutorial_dataframe_df007_snapshot/); - [projectroot.runtutorials.tutorial_dataframe_df001_introduction](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10729#issuecomment-1151664985:1119,test,testReport,1119,https://root.cern,https://github.com/root-project/root/pull/10729#issuecomment-1151664985,1,['test'],['testReport']
Testability,See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df008_createDataSetFromScratch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df008_createDataSetFromScratch/); - [projectroot.runtutorials.tutorial_dataframe_df009_FromScratchVSTTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df009_FromScratchVSTTree/); - [projectroot.runtutorials.tutorial_dataframe_df003_profiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df003_profiles/); - [projectroot.runtutorials.tutorial_dataframe_df004_cutFlowReport](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df004_cutFlowReport/); - [projectroot.runtutorials.tutorial_dataframe_df006_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df006_ranges/); - [projectroot.runtutorials.tutorial_dataframe_df005_fillAnyObject](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df005_fillAnyObject/); - [projectroot.runtutorials.tutorial_dataframe_df007_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df007_snapshot/); - [projectroot.runtutorials.tutorial_dataframe_df002_dataModel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177994/testReport/projectroot/runtutorials/tutorial_dataframe_df002_dataModel/); - [projectroot.runtutorials.tutorial_dataframe_df001_introduction](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1604497201:1117,test,testReport,1117,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1604497201,1,['test'],['testReport']
Testability,See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/console).; ### Failing tests:; - [projectroot.test.test_TFormulaTests](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_th1_operators](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_th1_operators/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tf_pycallables](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tf_pycallables/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_roofit_roodataset_numpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_roofit_roodataset_numpy/); - [projectroot.core.thread.test.gtest_core_thread_test_testTThreadedObject](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.core.thread/test/gtest_core_thread_test_testTThreadedObject/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.core.thread/test/gtest_core_thread_test_corethreadtestUnit/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTFormula](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTFormula/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191628/testReport/projectroot.hist.hist/test/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1860934326:1111,test,testReport,1111,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1860934326,1,['test'],['testReport']
Testability,See https://github.com/root-project/root/issues/16553. The following 3 tests fails consistently with missing BLAS symbols; ```; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 353-gtest-tmva-pymva-TestRModelParserKeras; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720:71,test,tests,71,https://root.cern,https://github.com/root-project/root/issues/16720,2,"['Test', 'test']","['TestRModelParserKeras', 'tests']"
Testability,See https://github.com/root-project/roottest/pull/591 for additional tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6258#issuecomment-689762503:69,test,tests,69,https://root.cern,https://github.com/root-project/root/pull/6258#issuecomment-689762503,1,['test'],['tests']
Testability,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16412:125,test,tests,125,https://root.cern,https://github.com/root-project/root/pull/16412,2,['test'],"['tested', 'tests']"
Testability,"See old [PR#3414](https://github.com/root-project/root/pull/3414) for initial discussion. This PR cleans of the code a bit and adds tests. @josephmckenna Creating the testing code was slightly involved, hence the new PR and not asking you to submit a fix. I think the idea is a nice and natural improvement on the functionality that was already implemented. Motivation from original submitter:; > To explore the performance of a range of settings for BDTs, we often find a 0.1% background level most interesting for our physics applications for us in the ALPHA collaboration. Instead of adding one additional use case, I have added a general form such that users could set:; > // factory->OptimizeAllMethods(""SigEffAtBkgEff0001"",""Scan"");",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493:132,test,tests,132,https://root.cern,https://github.com/root-project/root/pull/3493,2,['test'],"['testing', 'tests']"
Testability,See roottest PR https://github.com/root-project/roottest/pull/1001 for the test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13478#issuecomment-1682434483:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/13478#issuecomment-1682434483,1,['test'],['test']
Testability,"See the discussion at https://root-forum.cern.ch/t/rootcint-cannot-create-dictionary-in-a-vm/48580 . In short, in certain situations in which the platform is Linux but the working directory belongs to a Windows file system, [this call to std::rename](https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2956-L2958) fails because ""Windows"" does not allow renaming files that are currently in use. Something like the logic that we already apply for Windows at https://github.com/root-project/root/blob/7a2612dc7ae62832c7683081020e190c49b75569/core/dictgen/src/rootcling_impl.cxx#L2944-L2955 might be needed on Linux as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9730:483,log,logic,483,https://root.cern,https://github.com/root-project/root/issues/9730,1,['log'],['logic']
Testability,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:; ```; /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; #include ""encoder.hxx""; ^~~~~~~~~~~~~; ```; and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2408535597:151,test,test,151,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2408535597,1,['test'],['test']
Testability,"Seems it saves O(10MB) of RSS. Good, but not the solution to the large memory increase in cmssw jobs. > On Jul 11, 2022, at 7:59 PM, Vassil Vassilev ***@***.***> wrote:; > ; > ; > @vgvassilev - I added this patch for tonight's cmssw modules IB for a test...; > ; > Thanks!; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1274359558:250,test,test,250,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1274359558,1,['test'],['test']
Testability,Seems like the failing test was just a fluke. I also don't see that failure on my machine and I don't think it's related at all anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11113#issuecomment-1206860724:23,test,test,23,https://root.cern,https://github.com/root-project/root/pull/11113#issuecomment-1206860724,1,['test'],['test']
Testability,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git; ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection; -- The C compiler identification is GNU 8.3.1; -- The CXX compiler identification is GNU 8.3.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.27.0""); ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867613908:152,test,test,152,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867613908,2,['test'],['test']
Testability,Seems to be headless usage of Firefox not yet tested there,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16641:46,test,tested,46,https://root.cern,https://github.com/root-project/root/pull/16641,1,['test'],['tested']
Testability,"Seems to be, compilation on mac is working - I see failure only in some roofit tests.; One could merge this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2584#issuecomment-418626222:79,test,tests,79,https://root.cern,https://github.com/root-project/root/pull/2584#issuecomment-418626222,1,['test'],['tests']
Testability,Seems to have passed the tests :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-824323682:25,test,tests,25,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-824323682,1,['test'],['tests']
Testability,"Seems to pass testing on Windows, what do you think @bellenot @vgvassilev?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16222#issuecomment-2285977347:14,test,testing,14,https://root.cern,https://github.com/root-project/root/pull/16222#issuecomment-2285977347,1,['test'],['testing']
Testability,"Seems to work, all tests pass --> ready for review :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16039#issuecomment-2242568940:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/16039#issuecomment-2242568940,1,['test'],['tests']
Testability,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16445:119,test,testing-asan,119,https://root.cern,https://github.com/root-project/root/pull/16445,1,['test'],['testing-asan']
Testability,Selective/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot_manytasks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot_manytasks/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_datagen_hadd_mzlibfile12](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_datagen_hadd_mzlibfile12/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_datagen_hadd_mzfile12](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_datagen_hadd_mzfile12/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_datagen_hadd_mzfile34](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118367/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_datagen_hadd_mzfile34/); - [projectroot.roottest.root.io.f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8228#issuecomment-846103760:1732,test,testReport,1732,https://root.cern,https://github.com/root-project/root/pull/8228#issuecomment-846103760,1,['test'],['testReport']
Testability,"Self-contained compilable reproducer:; ```cpp; ROOT::RDataFrame(10).Define(""x"", [] { return ROOT::RVec<bool>{true, false}; }).Histo1D<ROOT::RVec<bool>>(""x""); ```. It's probably enough to change those `for(auto &x0: x0s)` to `for(auto &&x0: x0s)` or also `for(const auto &x0 : x0s)`. Pretty bad that we don't test filling of histograms with vectors of bools.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675#issuecomment-712810645:308,test,test,308,https://root.cern,https://github.com/root-project/root/issues/6675#issuecomment-712810645,1,['test'],['test']
Testability,"SetRootSys is overwriting ROOTSYS every time:; ```; [yuka@yuka-arch normalroot]$ source bin/thisroot.sh; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /home/yuka/normalroot; [yuka@yuka-arch normalroot]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch normalroot]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot""; root [1] .q; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; ```. This is the right behavior as users can choose different ROOT binary in; cvmfs enviroment. However, as SetROOTSYS is reading the binary header; which stores the information of where the binary was built, ROOTSYS is; messed up when you relocate build directory (Without this patch):; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot"" // It should be ""/home/yuka/test""!; ```. ROOTSYS can be overwritten, but it should point to the actual binary; location. With this patch, ROOTSYS can point to the correct binary location:; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/test"" // Which is correct; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366:806,test,test,806,https://root.cern,https://github.com/root-project/root/pull/2366,12,['test'],['test']
Testability,SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12497:61,log,logarithmic,61,https://root.cern,https://github.com/root-project/root/issues/12497,1,['log'],['logarithmic']
Testability,"Setting the flag must be protected by a lock. This is a recently-introduced test, and I think this bug caused the test to hang indefinitely in rare cases as in here (note the timeout): http://cdash.cern.ch/testDetails.php?test=85891275&build=874661. The stacktrace of the threads when the test was hanging was the following:. ```; Thread 2 (Thread 0xa2784b40 (LWP 4590)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab9462 in futex_wait_cancelable (private=0, expected=0, futex_word=0xbf9af3e4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #2 __pthread_cond_wait_common (abstime=0x0, mutex=0xbf9af424, cond=0xbf9af3bc) at pthread_cond_wait.c:502; #3 __pthread_cond_wait (cond=0xbf9af3bc, mutex=0xbf9af424) at pthread_cond_wait.c:655; #4 0xb69c905e in std::condition_variable::wait(std::unique_lock<std::mutex>&) () from /lib/i386-linux-gnu/libstdc++.so.6; #5 0x0047e8d7 in std::condition_variable::wait<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()>::<lambda()> >(std::unique_lock<std::mutex> &, TThreadedObject_GetNSlots_Test::<lambda()>::<lambda()>) (this=0xbf9af3bc, __lock=..., __p=...) at /usr/include/c++/8/condition_variable:99; #6 0x0047e11a in TThreadedObject_GetNSlots_Test::<lambda()>::operator()(void) const (__closure=0xa1e00674); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:167; #7 0x0047f5fc in std::__invoke_impl<void, TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x004809",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5596:76,test,test,76,https://root.cern,https://github.com/root-project/root/pull/5596,6,"['Test', 'test']","['TestBody', 'test', 'testDetails']"
Testability,Several fixes to meta-data handling that grew quadratic in the number of fields. The RNTuple limits tests is adjusted from 10k to 40k fields (30s --> 2s). Finding pages in the RPagePool is a remaining contributor to a noticeable slowdown with a growing number of fields. That will be addressed in a follow-up PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15249:100,test,tests,100,https://root.cern,https://github.com/root-project/root/pull/15249,1,['test'],['tests']
Testability,Several new test failures on ppc64le with 6.22.06 due to:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6887:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/6887,1,['test'],['test']
Testability,"Several of us were surprised to discover that calling `TTree::FlushBaskets()` does not actually create a new event cluster in terms of the TTree metadata -- even though it effectively creates an event cluster in terms of the physical disk layout!. There may be cases where the user has special knowledge of the file where using the internally-calculated auto-flush intervals result in poor choices; CMS's NanoAOD is one such case. However, when CMS switched to calling `FlushBaskets` explicitly and disabling `AutoFlush`, this triggered unexpected behavior in `RDataFrame` as the file did not appear to have any proper event clusters. This change causes the `FlushBaskets` method to create an explicit event cluster. As we used the old behavior in some ROOT unit tests, the prior behavior is now accessible through a flag passed to the method. Fixes: ROOT-9442",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412:763,test,tests,763,https://root.cern,https://github.com/root-project/root/pull/2412,1,['test'],['tests']
Testability,"Short summary from our quick chat: We will go ahead and disable that pass (patch above) as it wasn't run before and it's causing issues. We need to investigate what causes that and report upstream or find a patch that fixes it. Fun fact: We also understood why the `printf` ""solved"" the problem; a comment in the pass says ""If lookup table has more than one user, do not generate a relative lookup table."" So basically *any* second usage of `states[i]` would have cured the problem, for example just calling `p->Fill(states[i], pop[i]);` twice :facepalm: (yes, I tested)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598#issuecomment-1932402494:563,test,tested,563,https://root.cern,https://github.com/root-project/root/issues/14598#issuecomment-1932402494,1,['test'],['tested']
Testability,"Shortly after the branching of LLVM 16 (that we just upgraded to) early this year, upstream enabled the new JITLink linker by default for AArch64 and x86_64 on Linux: https://github.com/llvm/llvm-project/commit/6747fc07d1aa94e22622e278e5a02ba70675ac9b and https://github.com/llvm/llvm-project/commit/85c649bc02a6605f541b09b33a200a78275ed90f. We have our own version of this logic; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp#L351-L365; so we can already follow that move, and IMHO we should do so to give it a maximum of testing, benefit from the improvements, and decouple it from future upgrades.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14209:374,log,logic,374,https://root.cern,https://github.com/root-project/root/issues/14209,2,"['log', 'test']","['logic', 'testing']"
Testability,Should I revert the std::log changes so the compiler doesn't run out of heap space?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-824881340:25,log,log,25,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-824881340,1,['log'],['log']
Testability,Should be fixed now. The ND histogram test was using a huge number of bins by mistake.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-995902372:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-995902372,1,['test'],['test']
Testability,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/366#issuecomment-282574311:63,log,logic,63,https://root.cern,https://github.com/root-project/root/pull/366#issuecomment-282574311,4,"['log', 'test']","['logic', 'test', 'testing', 'tests']"
Testability,Should decrease the number of failures and retries when running the tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16273:68,test,tests,68,https://root.cern,https://github.com/root-project/root/pull/16273,1,['test'],['tests']
Testability,Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5234:45,test,test,45,https://root.cern,https://github.com/root-project/root/pull/5234,1,['test'],['test']
Testability,Should fix; ```; WARNING:discardable_shared_memory_manager.cc(197)] Less than 64MB of free space in temporary directory for shared memory files: 62; ```; and similar errors with headless chromium.; See https://stackoverflow.com/a/56941767. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466:305,test,tested,305,https://root.cern,https://github.com/root-project/root/pull/13466,1,['test'],['tested']
Testability,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9272#issuecomment-2058224144:73,test,test,73,https://root.cern,https://github.com/root-project/root/pull/9272#issuecomment-2058224144,1,['test'],['test']
Testability,"Should probably merge after we get some ""before"" rootbench data for the benchmark in https://github.com/root-project/rootbench/pull/218",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651#issuecomment-808113881:72,benchmark,benchmark,72,https://root.cern,https://github.com/root-project/root/pull/7651#issuecomment-808113881,1,['benchmark'],['benchmark']
Testability,Should the git commit log be expanded with more detail on why this is the desired behavior?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6002#issuecomment-655769315:22,log,log,22,https://root.cern,https://github.com/root-project/root/pull/6002#issuecomment-655769315,1,['log'],['log']
Testability,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6842#issuecomment-729921680:230,test,test,230,https://root.cern,https://github.com/root-project/root/pull/6842#issuecomment-729921680,1,['test'],['test']
Testability,"Should we get issues related to token auth in the future which are not caught by DAVIX or experiments, we can still add our own testing & diagnosis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8216#issuecomment-1925313606:128,test,testing,128,https://root.cern,https://github.com/root-project/root/issues/8216#issuecomment-1925313606,1,['test'],['testing']
Testability,Should we update the commit log? It seems to no longer correspond to the code/patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395733254:28,log,log,28,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395733254,1,['log'],['log']
Testability,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-507959360:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-507959360,4,['test'],"['test', 'tests']"
Testability,Shouldn't have rebased on current master...; ```; Processing /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/cling/other/runfileClose.C...; input_line_29:1:1: error: source file is not valid UTF-8; <D6><U+007F>; ^; input_line_29:1:2: error: expected unqualified-id; <D6><U+007F>; ^; ```; It does pass all tests when I run `ctest -V -R tree` (108 tests more or less).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332883841:319,test,tests,319,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332883841,2,['test'],['tests']
Testability,Shouldn't we do that in jenkins instead? I.e. This does not check if the oracle library found has been compiled with one library or the other (so once/when there is a oracle library using libcxx this test will be wrong).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/563#issuecomment-300499703:200,test,test,200,https://root.cern,https://github.com/root-project/root/pull/563#issuecomment-300499703,1,['test'],['test']
Testability,"Sibling PR in roottest shows fixed tests, this can be reviewed now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7878#issuecomment-822237804:35,test,tests,35,https://root.cern,https://github.com/root-project/root/pull/7878#issuecomment-822237804,1,['test'],['tests']
Testability,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-875135587:502,log,log-file,502,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-875135587,2,['log'],"['log', 'log-file']"
Testability,"Side note: there are about 50 notebooks failing in total, but I guess it might be related to argparse in only two cases, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/job/root-makedoc-master/2655/parsed_console/log.html. ![image](https://user-images.githubusercontent.com/10653970/164553066-0be620a7-ad2a-4340-a9fd-926512d77770.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430#issuecomment-1105774942:273,log,log,273,https://root.cern,https://github.com/root-project/root/issues/10430#issuecomment-1105774942,1,['log'],['log']
Testability,"Signals.cpp:97:5; #3 0x0000000009108505 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007ff5834a3630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3975 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3929 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e38e5 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1925 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004638fb9 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2501:38; #10 0x00000000046bdc47 clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:364:27; #11 0x00000000046c3071 clang::ASTDeclWriter::VisitLinkageSpecDecl(clang::LinkageSpecDecl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:1265:3; #12 0x00000000046caf39 clang::declvisitor::Base<std::__2::add_pointer, clang::ASTDeclWriter, void>::Visit(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:27077,test,test-products,27077,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['test'],['test-products']
Testability,"Significant revamp of FillBuffer. The new scheme insures a much more stable and efficient behavior in case of low; memory given by the user compared to the size of the buffer or 'odd' basket; layout. The basket collection is now done in 4 phases:. 1. One basket per branch, basket must contains the request entry and is not yet loaded or used,; 2. Even out by adding baskets so that all branches reach the same entry (or close); 3. Add the remaining branches from the current cluster.; 4. Add the basket from the begining of the clsuter to the current entry (if any). then repeat the 4 steps for the next cluster. The iteration is stopped as soon as the cache is 'full' as defined by these; rules:. - During step 1 of the first cluster, continue up to 4 times the user requested; cache size; - During steps 2 to 4 of the first cluster, continue up to 2 times the user; requested cache sizep; - During steps 2 to 4, the 'first' basket of a branch is accepted up to 4 times; the user requested cache size (i.e as if it had been selected during the 1st; step); - During the other clusters, continue up to the user requested cache size. A basket if rejected/skipped if its individual size is larger than the user; requested cache size. In addition, upon seeing a cache miss, FillBuffer now detects if all the basket; in the cache have already been used (read from the cache) in which case we can\; discard them and load the next set of baskets. As a side effect, we now keep a record of which baskets are in the cache and; which of those baskets have been used. The TTreePerfStats now keep a complete; log of all the basket that are:; - loaded in the main cache (and how many times); - loaded in the 'misss' cache (and how many times); - used; - read directly (complete cache miss); This will be helpful in understanding situation of over-read or slow operations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1960:1598,log,log,1598,https://root.cern,https://github.com/root-project/root/pull/1960,1,['log'],['log']
Testability,"Simple notebook test times out when root7=on, webgui=Off",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:16,test,test,16,https://root.cern,https://github.com/root-project/root/issues/16689,1,['test'],['test']
Testability,"Simple search for following includes were done:. * `TSystem.h`, ; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5069:255,test,tests,255,https://root.cern,https://github.com/root-project/root/pull/5069,1,['test'],['tests']
Testability,SimpleRootcp2Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4Clean/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35971/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/). And 58 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410971888:1827,test,testReport,1827,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410971888,4,['test'],['testReport']
Testability,SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:3889,test,testReport,3889,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:4161,test,testReport,4161,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,SimpleRootrm1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput_WILL_FAIL/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2Clean_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53556/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2Clean_WILL_FAIL/). And 13 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3410#issuecomment-462308840:2864,test,testReport,2864,https://root.cern,https://github.com/root-project/root/pull/3410#issuecomment-462308840,3,['test'],['testReport']
Testability,Simplifies script and allows to capture (and log) essential config values. Some more drive-by code fixes. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13488:45,log,log,45,https://root.cern,https://github.com/root-project/root/pull/13488,2,"['log', 'test']","['log', 'tested']"
Testability,"Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9352:129,test,tested,129,https://root.cern,https://github.com/root-project/root/pull/9352,1,['test'],['tested']
Testability,Simplify memory regulation logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16837:27,log,logic,27,https://root.cern,https://github.com/root-project/root/pull/16837,1,['log'],['logic']
Testability,"Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3021:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/3021,4,['test'],['test']
Testability,Simplify the test for std::make_unique,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1210:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/1210,1,['test'],['test']
Testability,"Since Axel is a bit busy, lets do it without MPI. Last thing, can you please make more compact changes in graf3d/gl/CMakeLists.txt and graf3d/fgl/CMakeLists.txt (change separate target_include_directories in the single where it is possible) and we will test with full test suite and lets merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5269#issuecomment-608383404:253,test,test,253,https://root.cern,https://github.com/root-project/root/pull/5269#issuecomment-608383404,2,['test'],['test']
Testability,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13912:103,assert,assert,103,https://root.cern,https://github.com/root-project/root/pull/13912,4,['assert'],"['assert', 'assert-free']"
Testability,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. This is in general not strictly necessary nor true, since the passed argument may be a free function. Prevent this assert from breaking the flow by preemptively catching such situations and creating the Python instance method anyway. Fixes #13864",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13903:103,assert,assert,103,https://root.cern,https://github.com/root-project/root/pull/13903,3,['assert'],['assert']
Testability,"Since RNT is warning that it's a beta, extra suppressions for diagnostics in google test had to be added. Remove those once RNT doesn't issue the warning. Revert 44f9863aaf0391f4e9867dcdbd6eab2ad9028e0c.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9355:84,test,test,84,https://root.cern,https://github.com/root-project/root/issues/9355,1,['test'],['test']
Testability,"Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:; ```; import ROOT; ws = ROOT.RooWorkspace(""ws""); # seg fault; ROOT.RooFit.ConditionalObservables(ws.set("""")); ```; Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge); Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10232:272,Test,Tested,272,https://root.cern,https://github.com/root-project/root/issues/10232,2,['Test'],['Tested']
Testability,"Since a few weeks, having pdfs with the same name in a RooSimultaneous fit with BatchMode didn't work anymore. This was because when setting up the computation graph for a given normalization set, all pdfs are cloned and redirected with `RooAbsArg::redirectServers()`, which doesn't work if servers have the same name. This commit suggests to instead delete the pdf servers and proxies and then recreate them by hand. Also, the logic of `RooSimultaneous::compileForNormSet()` was updated to iterate directly over the pdfs instead of iterating over the index categories and then getting the pdfs. The unit tests in `testAbsPdf` are now also parametrized to cover both BatchMode on and off, such that the case of the `RooSimultaneous` with one pdf in used in two channels is also covered buy the tests for BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12236:428,log,logic,428,https://root.cern,https://github.com/root-project/root/pull/12236,4,"['log', 'test']","['logic', 'testAbsPdf', 'tests']"
Testability,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6280:289,test,tests,289,https://root.cern,https://github.com/root-project/root/pull/6280,1,['test'],['tests']
Testability,"Since the LLVM upgrade, the following four tests:; ```; projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend; projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex; projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex; projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names; ```; fail with; ```; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: error: 'std::__is_same_uncvref<char [6], std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' has different definitions in different modules; first difference is defined here found 0 base classes; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: note: but in 'std.type_traits' found 1 base class; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12003:43,test,tests,43,https://root.cern,https://github.com/root-project/root/issues/12003,1,['test'],['tests']
Testability,"Since the ROOT-ubuntu16 tests passed already in the previous round on a machine where it worked, we have now all the tested configurations passing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8609#issuecomment-874769716:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/8609#issuecomment-874769716,2,['test'],"['tested', 'tests']"
Testability,"Since the beginning when 0 ranges were specified by Save method, ; half a bin was add to coordinate. But wrong number of bins was stored and ; therefore produced buffer was not able to use. Error was from very beginning - ; already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13949:515,test,tests,515,https://root.cern,https://github.com/root-project/root/pull/13949,1,['test'],['tests']
Testability,"Since the failing test (roottest-root-aclic-misc-runrelpath) is related to include path directive (and how they reach ACLiC), it is plausible that the failure is related. Could you verify whether or not it is?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352082562:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352082562,1,['test'],['test']
Testability,"Since the new Pythonization of the RooSimultaneous constructor that takes a Python dictionary is used in the `rf501_simultaneouspdf.py` tutorial, the unit test corresponding to the tutorial fails on the Windows nightlies. The tutorial unit test is therefore disabled on Windows by this commit. See:; * https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/#showFailuresLink; * https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows64,SPEC=default,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11532:155,test,test,155,https://root.cern,https://github.com/root-project/root/pull/11532,2,['test'],['test']
Testability,"Since the potential for conflicts is small, I just formatted the whole test file. I hope that's ok.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521#issuecomment-296584258:71,test,test,71,https://root.cern,https://github.com/root-project/root/pull/521#issuecomment-296584258,1,['test'],['test']
Testability,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12455:43,test,tests,43,https://root.cern,https://github.com/root-project/root/issues/12455,1,['test'],['tests']
Testability,"Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with; ```; cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13; #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18; #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50); #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf); #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5); #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79); #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426); #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4); #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14; #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37; #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28; #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3; #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12457:40,test,test,40,https://root.cern,https://github.com/root-project/root/issues/12457,2,"['Assert', 'test']","['Assertion', 'test']"
Testability,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12456:182,test,test,182,https://root.cern,https://github.com/root-project/root/pull/12456,1,['test'],['test']
Testability,"Since there are no tests, it's quite risky ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3869#issuecomment-496547077:19,test,tests,19,https://root.cern,https://github.com/root-project/root/pull/3869#issuecomment-496547077,1,['test'],['tests']
Testability,"Since this PR was submitted there has been 1 commit to the stressGraphics.ref file in master. That commit changed the numbers for test number 27. This PR changes the results for test number 32, 33, 38 and 40. This is sufficiently far away from 27 that the PR can still be merged without conflicts, so there is no need to rebase. The PR was created to address issues found when building root 6.12, but the same results apply also for root 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2120#issuecomment-401331630:130,test,test,130,https://root.cern,https://github.com/root-project/root/pull/2120#issuecomment-401331630,2,['test'],['test']
Testability,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8892:116,test,tests,116,https://root.cern,https://github.com/root-project/root/issues/8892,2,['test'],['tests']
Testability,"Since this is a very central part for fitting, you should see lots of test failures if you get it wrong.; Not, though, if you get it only slightly wrong, so keep thinking about tests. :-D. Good luck with your new project, there are lots of things to do! 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7126#issuecomment-773114579:70,test,test,70,https://root.cern,https://github.com/root-project/root/pull/7126#issuecomment-773114579,2,['test'],"['test', 'tests']"
Testability,"Since we don't have tests for the GUI, I would like to have some people trying it locally. I don't know how I can run GUI applications on the build nodes :/; @etejedor Have you tried the fix?; @couet Could you please try since you have a mac?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6057#issuecomment-662283746:20,test,tests,20,https://root.cern,https://github.com/root-project/root/pull/6057#issuecomment-662283746,1,['test'],['tests']
Testability,"Since we removed the Ninja build on Windows, the issue we need to solve right now is how to fix the failing Cling tests on Windows - https://github.com/reikdas/cling-1/runs/1353774432?check_suite_focus=true#step:7:9589. I tried to fix it via https://github.com/root-project/root/pull/6750/commits/21ffc04f200086da7c6127cccac3b4e18081eff0 but that did not work :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6750#issuecomment-721893429:114,test,tests,114,https://root.cern,https://github.com/root-project/root/pull/6750#issuecomment-721893429,1,['test'],['tests']
Testability,"Size);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true; while (len_left > fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body; while (len_left > fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter; memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]; memcpy(fBlockSeek->fBuffer, buf, len_left);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'; return SysWriteImpl(fd,buf,len);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch; if (fExternalData) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false; if (fBlockList.fBuffer == 0) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch; if (fBlockList.fBuffer == 0) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false; if (fBlockOffset+len <= fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch; if (fBlockOffset+len <= fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true; if (!fBlockSeek->fNext) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch; if (!fBlockSeek->fNext) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'; fBlockSeek->CreateNext(fDefaultBlockSize);; ^; /home/performance-test/src_master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:8498,test,test,8498,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['test'],['test']
Testability,"Size);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'; fNext = new TMemBlock(size,this);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'; fPrevious(previous), fNext(0), fBuffer(0), fSize(0); ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false; if (size != -1) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch; if (size != -1) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'; fNext = new TMemBlock(size,this);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'; fBlockSeek->CreateNext(fDefaultBlockSize);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true; while (len_left > fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body; while (len_left > fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter; memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]; memcpy(fBlockSeek->fBuffer, buf, len_left);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'; return SysWriteImpl(fd,buf,len);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch; if (fExternalData) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false; if (fBlockList.fBuffer == 0) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:7650,test,test,7650,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['test'],['test']
Testability,"Skip CI for the moment, i need to test it a bit more. Naming is probably not ideal. Introduce a new R__NEW_TBB macro to address the change in interface in TBB 2021 and adapt the forward declaration of task_arena accordingly. Deals with the problem @mrodozov reported in issue https://github.com/root-project/root/issues/6933 and by @krasznaa in PR https://github.com/root-project/root/pull/6174 (in whose conversation I first noticed the problem and then immediately forgot about what the real issue was and focused on the code, apologies for that). *Note*: This does not solve the ideal situation in which we can live not forward declaring `tbb::task_arena` and keep tbb hidden from the public interfaces, but patches ROOT to work with the new OneAPI and TBB versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7059:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/7059,1,['test'],['test']
Testability,Skip ci test 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14610:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/14610,1,['test'],['test']
Testability,"Skip registration of TFile UUIDs in the global list when using the """"""READ_WITHOUT_GLOBALREGISTRATION"""""" option with TFile (used by default in TTreeProcessorMT). This avoids the final use of the global write lock during typical RDataFrame event loops, significantly improving multi-threaded performance for cases with many files and many threads. This follows up on https://github.com/root-project/root/pull/9486 and mostly finishes addressing https://github.com/root-project/root/issues/7710. Skipping the UUID registration breaks the particular case where a TRef points to the TFile object, but as per the discussion in this PR, this use case has thread-safety problems for TFile objects being managed by TTreeProcessorMT anyways. A test case is below. Produce the test dataset:. ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. Test event loop:. ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""); ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318:735,test,test,735,https://root.cern,https://github.com/root-project/root/pull/10318,4,"['Test', 'test']","['Test', 'test', 'testwrite']"
Testability,Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3196:208,test,test-bench,208,https://root.cern,https://github.com/root-project/root/pull/3196,1,['test'],['test-bench']
Testability,"Small AClick test to verify that radiation length and nuclear interaction length are computed correctly when ROOT uses in G4 units. To invoke:; ```; $> root.exe material_test.C\(\""ROOT\""\); or; $> root.exe material_test.C\(\""G4\""\); ```; [material_test.C.txt](https://github.com/root-project/root/files/9197879/material_test.C.txt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1196591677:13,test,test,13,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1196591677,1,['test'],['test']
Testability,"Small quality of life improvement, non-functional change. ; This helps the test suite fail fast.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5807:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/5807,1,['test'],['test']
Testability,Small typo in a test :smile: should be good now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8637#issuecomment-878237626:16,test,test,16,https://root.cern,https://github.com/root-project/root/pull/8637#issuecomment-878237626,1,['test'],['test']
Testability,"So @bluehood , about the cases you described, my comments:; This is the situation as I understand it:. - horrible template errors in instantiating a RVec: fixed and tested -> YES; - reading vector<bool> in RDataFrame:; - with jitting: fixed and tested -> YES; - in compiled code: not tested but works..? -> YES; - reading bool[n] branches: now impossible..? -> YES; - writing a bool[n] with RDataFrame: now impossible..? -> YES; - writing vector<bool> with RDataFrame:; - with jitting: not tested but works..? -> YES; - in compiled code: tested and works -> YES. I agree that increasing the test coverage is necessary for the cases ""not tested but works"" given that if something is not tested, it does not work :) (even if we not testing that is independent from this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2186#issuecomment-396541538:165,test,tested,165,https://root.cern,https://github.com/root-project/root/pull/2186#issuecomment-396541538,9,['test'],"['test', 'tested', 'testing']"
Testability,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1923740442:100,test,test,100,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1923740442,1,['test'],['test']
Testability,"So I ""found"" that the `sgemm` is explicitly meant to come from a BLAS implementation and some test seem to rely on it and still run (eventhough `CMakeCache.txt` knows `BLAS` was not found. The following 3 tests fails consistent with missing `BLAS` symbols; ```; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; but strangely more test fails with missing `BLAS` symbols when run in parallels:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; ```. The second part is now followed in https://github.com/root-project/root/issues/16719. The first past is now followed by https://github.com/root-project/root/issues/16720. Fixing #16720 will likely hides the problem described in #16719",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2407951900:94,test,test,94,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2407951900,5,['test'],"['test', 'test-TestRModelParserKeras', 'test-TestRModelParserPyTorch', 'tests']"
Testability,So I can see it built successfully on Ubuntu 22 and on a private test on macos 13 arm cherry-picking on top of master. Let's wait for all builds to complete and then we can discuss how to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1736989431:65,test,test,65,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1736989431,1,['test'],['test']
Testability,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:; ```; set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; ```; Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445; I'm now trying with the same variables to see if it fails the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2077012452:77,log,log,77,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2077012452,1,['log'],['log']
Testability,"So I compared root with this patch and the root in the mainline. Here're some results.; I'm using `/usr/bin/time -v root.exe -l -b -q ${test_name}` and the results are `Maximum resident set size (kbytes)`. | test name | with my patch | main line |; | :-----------------------------------: | :-----------: | :-------: |; | `hsimple.C` | 156756 | 161204 |; | `dataframe/df018_customActions.C` | 228800 | 265468 |; | `dataframe/df010_trivialDataSource.C` | 229428 | 229920 |; | `tmva/tmva003_RReader.C` | 286044 | 279764 |; | `tmva/tmva002_RDataFrameAsTensor.C` | 217628 | 243740 |; | `multicore/mp001_fillHistos.C` | 149196 | 180392 |; | `fit/multidimfit.C` | 137932 | 159296 |. So the result shows that the patch improves memory usage a little bit, which is excellent! ; Cheers! 🍺",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423#issuecomment-1264655264:208,test,test,208,https://root.cern,https://github.com/root-project/root/pull/11423#issuecomment-1264655264,1,['test'],['test']
Testability,"So I created a PR that should fix this issue. It compiles and runs fine with VS 2022 (v17.0.4) and pytest 6.2.5:; ```; C:\Users\sftnight\build\release>pytest --version; pytest 6.2.5. C:\Users\sftnight\build\release>ctest -C Release -R ""pytorch|PyTorch""; Test project C:/Users/sftnight/build/release; Start 889: tutorial-tmva-TMVA_SOFIE_PyTorch; 1/7 Test #889: tutorial-tmva-TMVA_SOFIE_PyTorch ............................ Passed 6.68 sec; Start 1109: test-import-torch; 2/7 Test #1109: test-import-torch ........................................... Passed 1.98 sec; Start 1111: tutorial-tmva-pytorch-ClassificationPyTorch-py; 3/7 Test #1111: tutorial-tmva-pytorch-ClassificationPyTorch-py .............. Passed 12.76 sec; Start 1108: tutorial-tmva-pytorch-ApplicationClassificationPyTorch-py; 4/7 Test #1108: tutorial-tmva-pytorch-ApplicationClassificationPyTorch-py ... Passed 6.30 sec; Start 1113: tutorial-tmva-pytorch-RegressionPyTorch-py; 5/7 Test #1113: tutorial-tmva-pytorch-RegressionPyTorch-py .................. Passed 26.83 sec; Start 1110: tutorial-tmva-pytorch-ApplicationRegressionPyTorch-py; 6/7 Test #1110: tutorial-tmva-pytorch-ApplicationRegressionPyTorch-py ....... Passed 5.79 sec; Start 1112: tutorial-tmva-pytorch-MulticlassPyTorch-py; 7/7 Test #1112: tutorial-tmva-pytorch-MulticlassPyTorch-py .................. Passed 9.45 sec. 100% tests passed, 0 tests failed out of 7. Label Time Summary:; python_runtime_deps = 61.12 sec*proc (5 tests); tutorial = 67.80 sec*proc (6 tests). Total Test time (real) = 71.37 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487#issuecomment-1010018200:254,Test,Test,254,https://root.cern,https://github.com/root-project/root/issues/9487#issuecomment-1010018200,15,"['Test', 'test']","['Test', 'test-import-torch', 'tests']"
Testability,"So I finally managed to get back to this and try a few things and as a result in my tests I managed to go from 82 MB of overhead to 62 MB. See https://github.com/root-project/root/pull/13641 for the actual code. While there is still a few things to cleanup, I think what I have is fairly general and quite self contained change, so I would appreciate feedback and if people like it, instructions on how to proceed to make sure this ends up upstream. The solution is based on a newly introduced `PagedVector<T>` which allows registering callbacks which get invoked whenever the associated range is accessed the first time. At such point, the range is actually allocated and each element of the range is passed to the callback. Initially I developed a mechanism to be general enough to do complex initialisations of the elements, however I later realised this is not actually needed. In order to optimise the issue with the large vectors `TypesLoaded` and `DeclsLoaded` one only needs to have something which does the default construction of their elements for ranges which are small enough to avoid to large upfront allocations. The code which is currently there in root / clang is already smart enough to lazily initialise only the elements which are actually needed, so the whole issue is to find a good tradeoff between number of ranges and sparse enough ones. A few caveats:. - `PagedVector` is a bad name, I agree. Suggestions are welcome.; - At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test.; - In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc.; - There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. Comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1715921216:84,test,tests,84,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1715921216,2,['test'],"['test', 'tests']"
Testability,"So I think what we agreed on on Mattermost: We want the thingy, but no checks at configure time (because it's not a build time dependency). We still have to iterate how exactly we want to check at test time the dependencies, but I think at a first shot, the current impl is good enough. Feel free to argue :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-618263073:197,test,test,197,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-618263073,1,['test'],['test']
Testability,"So I've created a test program that shows that the use of another arena does cause 'cross activity' contamination. The program is. ```C++; #include ""oneapi/tbb/task_arena.h""; #include ""oneapi/tbb/task_group.h""; #include <iostream>; #include <thread>; #include <atomic>; #include <array>. //#define OTHER ; #if defined(OTHER_ISOLATE) and !defined(OTHER); #define OTHER; #endif; namespace {; int activity_group(int i) {; static thread_local int v=0;; if (i != 0) {; v = i;; } if ( i == 100) {; v=0;; }; return v;; }. std::atomic<int> activityID{0};; std::atomic<int> waitingToStart{2};. std::array<std::atomic<bool>, 2> otherThreadStarted ={false, false};; }. int main() {; #if defined(OTHER); std::cout <<""built with OTHER""<<std::endl;; #endif; #if defined(OTHER_ISOLATE); std::cout <<""built with OTHER_ISOLATE""<<std::endl;; #endif; #if defined(NO_ISOLATE); std::cout <<""built with NO_ISOLATE""<<std::endl;; #endif; oneapi::tbb::task_arena main_arena(4);. oneapi::tbb::task_arena other_arena(4);. oneapi::tbb::task_group other_group;; main_arena.execute([&other_arena, &other_group](); {; oneapi::tbb::task_group group;. auto activity = [&other_arena](); {; auto id = activity_group( ++activityID );; --waitingToStart;; while(waitingToStart.load() > 0);. #if !defined(NO_ISOLATE); oneapi::tbb::this_task_arena::isolate([id, &other_arena](); #endif; {; #if defined(OTHER); other_arena.execute([id]() {; #endif; #if defined(OTHER_ISOLATE); oneapi::tbb::this_task_arena::isolate([id](){; #endif; oneapi::tbb::task_group group;; for( int i = 0; i < 10; ++i) {; group.run([id](); {; auto thread_id = activity_group(0);; if(thread_id == 0 or thread_id != id) {; otherThreadStarted[id-1]=true;; }; if (thread_id != 0 and thread_id != id) {; std::cout <<""WRONG THREAD""<<std::endl;; }; if (thread_id !=0 and thread_id == id) {; std::cout <<""on starting thread""<< id <<std::endl;; while( not otherThreadStarted[id-1]);; return;; }; using namespace std::chrono_literals;; std::cout <<""start sleep ""<<id<< std::endl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1971612644:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1971612644,1,['test'],['test']
Testability,"So depending on #6148 #6079 and this all seems to work:; ```; $ env CTEST_OUTPUT_ON_FAILURE=1 ctest -R TMVA; Test project /build/root/src/build-cuda; ...; 100% tests passed, 0 tests failed out of 71. Label Time Summary:; tutorial = 132.26 sec*proc (18 tests). Total Test time (real) = 287.13 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-671365564:109,Test,Test,109,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-671365564,5,"['Test', 'test']","['Test', 'tests']"
Testability,"So far we just hard-coded the default definitions that LLVM uses to; the CLING_CXXFLAGS. This means that once LLVM actually changes; its compile defintions, code that uses the CLING_CXXFLAGS is no; longer in sync and starts reading invalid memory and so on. This patch extracts these flags from LLVM now and properly adds; them to the CLING_CXXFLAGS instead of hardcoding them. This fixes the failing roottest-root-aclic-misc-assertROOT7027 test. Thanks to Axel for debugging this!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/967:441,test,test,441,https://root.cern,https://github.com/root-project/root/pull/967,1,['test'],['test']
Testability,So far we only trigger an assertion in LLVM when we can't find the; modulemap file which is not very user-friendly. With this patch; we actually prints an error message in this situation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/527:26,assert,assertion,26,https://root.cern,https://github.com/root-project/root/pull/527,1,['assert'],['assertion']
Testability,"So far, a `RooKeysPdf` produced wrong kernel estimations for weighted; datasets, as sometimes the number of entries was used in place of the; sum of weights. This is fixed now. Also, the normalization by the sum of; weights is moved from the private `RooKeysPdf::g()` function that is; called for each event to the global normalization constant. A new unit test that checks if weighted datasets are correctly handled; by both the RooKeysPdf and the RooNDKeysPdf is also implemented.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10956:357,test,test,357,https://root.cern,https://github.com/root-project/root/pull/10956,1,['test'],['test']
Testability,"So far, the RooMultiVarGaussian required a TMatrixDSym as an input for the covariance matrix, but it would be more convenient to accept the TMatrixDBase class such that questions like on this forum post don't even come up:. https://root-forum.cern.ch/t/multivariate-gaussian-object-creation/55721. The only logic that needs to be added is if the input matrix is symmetric, and an exception will be thrown if it is not. This change doesn't break backwards compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13266:307,log,logic,307,https://root.cern,https://github.com/root-project/root/pull/13266,1,['log'],['logic']
Testability,"So far, the `ParamHistFunc` BatchMode implementation was still; sub-uptimal because it used the non-vectorized interface of the; RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up; multiple bin indices at once, the implementaiton can be improved and; sped. In the three-dimensional many-bin case, the new implementation is a bit; more than three times faster than the old one. This should benefit; HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the; results of a ParamHistFunc both with and without the batch mode,; comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11170:465,test,testParamHistFunc,465,https://root.cern,https://github.com/root-project/root/pull/11170,2,['test'],"['test', 'testParamHistFunc']"
Testability,"So far, the a constructorr match was reported for; `RooWorkspace::factory` when the number of constructor args was larger; than the number of args passed to `factory`. Obviously, this lead to false positives, and it should actually check if; the number of passed args (plus 2 for name and title) is somewhere; between the number of minimum and maximum arguments that the constructor; can take. In other works, instead of assuming there is an arbitrary; number of default arguments one should do the check with their exact; number. A unit test to check that this works now is also implemented. Closes #7965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10772:538,test,test,538,https://root.cern,https://github.com/root-project/root/pull/10772,1,['test'],['test']
Testability,"So far, the projection coefficient for coefficients in RooAddPdfs was missing in `RooAddPdf::expectedEvents()`. However, this is important to include in conditional fits where the normalization set of `expectedEvents()` is different from the normalization set for coefficient determination. This PR includes this missing factor. A unit test that covers both the case where the expected events are taken from the coefs and the one where they are taken from the pdfs is included.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12954:336,test,test,336,https://root.cern,https://github.com/root-project/root/pull/12954,1,['test'],['test']
Testability,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1985243411:84,test,test,84,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1985243411,2,['test'],"['test', 'test-TClingTest']"
Testability,"So here are the changes that I needed to make from the comments of the last pull request and some other changes:; 1) I've added the name for a enum constant because I realised when declaring kMyConstant = 42 that I didn't save the name.; 2) I've added some checks in the TCling to see if the TEnum and TEnumConstants are actually created, because when I run the test:; // MyEnumComment; enum EMyEnum {; kMyEnumConstant = 42 // enumConstantComment; };. int assertTEnum(); {. ```; if (!(TEnum*)gROOT->GetListOfEnums()->FindObject(""EMyEnum"")) {; Error (""TEnum"", ""Constructor of TEnum failure."");; return -1;; ```. }; It does return and Error. I tried that on the root[0] promp as well and the address of GetListOfEnum is not NULL(because the HashTable is created), but the address of FindObject is 0x0. ; Now I don't get the Errors of TEnum and TEnumConstant are not created..I wanted to check whether they are added to the fEnums and fGlobals, but Add() for TCollection is a void function. My best guess is that they are not added to the lists, maybe you can see why...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2:362,test,test,362,https://root.cern,https://github.com/root-project/root/pull/2,2,"['assert', 'test']","['assertTEnum', 'test']"
Testability,"So in fact there is already a problem with rolling back the transaction even when just using ```TInterpreter::Declare```:. test.h; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug3/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug3/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; /home/b/bendavid/pyrootdebug3/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; /home/b/bendavid/pyrootdebug3/test.h:18:10: error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; return helper();; ^~~~~~; input_line_55:1:22: note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);; ^; ret False; ```. So again the error message is dif",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1464946488:123,test,test,123,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1464946488,4,['test'],"['test', 'testdeclare']"
Testability,"So indeed this other test does not work; ```python; import ROOT. ROOT.gInterpreter.Declare(r'''; struct A{; int mA{42};; A() {}; A(const A&) = delete;; template<typename T = int>; A(A &&) {}; };; int foo(A a = A{}) { return a.mA; }; '''). print(ROOT.foo()); ```; ```; input_line_36:18:45: error: call to deleted constructor of 'A'; new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));; ^~~~~~~~~~~~; input_line_35:5:5: note: 'A' has been explicitly marked deleted here; A(const A&) = delete;; ^; ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1917903939:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1917903939,1,['test'],['test']
Testability,So it builds just fine and and 100% tests passed (0 tests failed out of 2069),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117#issuecomment-1406260361:36,test,tests,36,https://root.cern,https://github.com/root-project/root/pull/12117#issuecomment-1406260361,2,['test'],['tests']
Testability,So my understanding is that we need to:. 1. Continue having the new CI run all tests :); 2. Do something about either `CPPYY`'s use of std::regexp or TMVA's use of PyTorch (This could be removing support for PyTorch or temporarily disabling the tutorials until the (newly created and/or this) Issue noting the conflict CPPYY/PyTorch is resolved (for example if the early load mentioned early works).; 3. Update one of the Ubuntu configuration to have PyTorch installed (**if and only if** we continue supporting PyTorch ; as we can see here if we don't test it we should assume it does not work :) ]. Am I missing something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2052236813:79,test,tests,79,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2052236813,2,['test'],"['test', 'tests']"
Testability,"So sorry, but we cannot fix the `/std:c++latest` issue, since it is not supported by our version of LLVM & Clang (`/std:c++20` is not supported either). You'll have to wait for the upgrade.; >Although our team are testing MSVC compiler, we also need to test the compiler under the behavior of '/permissive-' and '/std:c++latest'. Well, if it's only for testing the compiler, I suppose we cannot consider that as a ROOT bug, or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607#issuecomment-1016268801:214,test,testing,214,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016268801,3,['test'],"['test', 'testing']"
Testability,"So the current error handling is a bit messed up. What happens for my current test case is as follows:; -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628; this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument.; -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:; https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280; (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr); -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814; But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1456059333:78,test,test,78,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1456059333,1,['test'],['test']
Testability,So we could specialize on the level of the `FillHelper` or retain the `IsContainer` logic in addition to the `IsDataContainer` trait.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-589680379:84,log,logic,84,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-589680379,1,['log'],['logic']
Testability,"So where should I add the test? BTW, it is more than primitive.; ```c++; ROOT::TThreadExecutor{}.Map([](int) { return make_unique<TList>(); }, { 1, 2, 3 });; ```; shall compile (not try to invoke the `delete`d `unique_ptr` copy constructor).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3558#issuecomment-474260747:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/3558#issuecomment-474260747,1,['test'],['test']
Testability,"So with and without this PR, same result with VS 2022 v17.5.4 (x64):; ```; C:\Users\bellenot\build\x64\release>ctest -VV -C Release -R tutorial-v7-ntuple-ntpl007_mtFill; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Add coverage exclude regular expressions.; UpdateCTestConfiguration from :C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Parse Config file:C:/Users/bellenot/build/x64/release/DartConfiguration.tcl; Test project C:/Users/bellenot/build/x64/release; Constructing a list of tests; Ignore test: test-tcollex; Ignore test: roottest-cling-parsing-semicolon; Ignore test: roottest-root-rint-TabCom; Ignore test: roottest-root-rint-BackslashNewline; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 910; Start 910: tutorial-v7-ntuple-ntpl007_mtFill. 910: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Users/bellenot/build/x64/release/bin/root.exe^-b^-l^-q^C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C"" ""-DSYS=C:/Users/bellenot/build/x64/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/x64/release#PYTHONPATH=C:/Users/bellenot/build/x64/release/bin#PYTHIA8=C:/libs/x64/pythia8/8.3.03#PYTHIA8DATA=C:/libs/x64/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/x64/release/RootTestDriver.cmake""; 910: Environment variables:; 910: ROOT_HIST=0; 910: Test timeout computed to be: 1200; 910:; 910: Processing C:/Users/bellenot/git/master/tutorials/v7/ntuple/ntpl007_mtFill.C...; 910: Warning in <[ROOT.NTuple] Warning C:\Users\bellenot\git\master\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOption",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13264#issuecomment-1649597994:547,Test,Test,547,https://root.cern,https://github.com/root-project/root/pull/13264#issuecomment-1649597994,13,"['Test', 'test']","['Test', 'test', 'test-tcollex', 'tests']"
Testability,"So, I ran my new benchmark that uses more branches and more structure, and the difference between current master (already with my last PR merged in) and this PR (labeled unmanaged in the figure) is shown below:; ![screenshot](https://user-images.githubusercontent.com/249404/41915833-f3bef020-7956-11e8-9c7c-e8b79dba0ad0.png); There seems to be a problem that the number of wait counts increases quite a lot. This is because the lock that we are removing in the constructor was turning many other lock regions into a no-op, since the lock was already taken. However, after the change, they become visible, with a big effect on performance. You can see in the screenshot that the number of waits on `TList::MakeIterator`, for example, jumps from 62 to 3302, and all that locking/unlocking has a cost... The wait count increases by roughly 3x for the 3 lines I highlighted. So it's probably better to leave things as they are for the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2248#issuecomment-400313875:17,benchmark,benchmark,17,https://root.cern,https://github.com/root-project/root/pull/2248#issuecomment-400313875,1,['benchmark'],['benchmark']
Testability,"So, now it's done. Even added some tests for the `ValueType` thingy because it has so many corner cases :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-590733301:35,test,tests,35,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-590733301,1,['test'],['tests']
Testability,"So, since `ASSERT_FLOAT_EQ` does not return anything, I guess I'd have to fully convert the file to a set of Google tests to use it. I'd rather fix what is broken now and do that in a subsequent PR. What does everyone think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/498#issuecomment-293294008:116,test,tests,116,https://root.cern,https://github.com/root-project/root/pull/498#issuecomment-293294008,1,['test'],['tests']
Testability,"So, there were some developments: it seems that trying to catch an exception lead to no proper return for GetEntry.; Removing the try/except i have now a proper `-1` result on GetEntry and i do have this:; ```; ALIBUILD##[Monday 25.10.21 19:18] adrian@hal : ~/work/jalien-cache-manager (master) $; ./tfile_check.py parse broken_AO2D.root step 100000; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:0, badread=1, nerrors=1, basketnumber=0; DF_2913970966704988325/O2track::Entry(0) -> result: -1; ALIBUILD##[Monday 25.10.21 19:18] adrian@hal : ~/work/jalien-cache-manager (master) $; echo $?; 5; ```; The file unfortunately is quite big: https://cernbox.cern.ch/index.php/s/YM3ONVhEVa72KNX; and for reference the code that i use for testing is: https://github.com/adriansev/AO2Dproto/blob/0eff5a37fd0622767ee01b2b3da84b29e996a1ef/tfile_check.py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-951092615:996,test,testing,996,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951092615,1,['test'],['testing']
Testability,"So, we just removed the assert that makes us aware that we need to; rethink this flag. I don't see a clear solution at the moment, but; this PR at least makes us aware that we need to solve this issue. For now I just removed it and we see what exactly Jenkins complains; about when it runs the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1049:24,assert,assert,24,https://root.cern,https://github.com/root-project/root/pull/1049,2,"['assert', 'test']","['assert', 'tests']"
Testability,Solve warnings in tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12829:18,test,tests,18,https://root.cern,https://github.com/root-project/root/pull/12829,1,['test'],['tests']
Testability,Solves a bug in the TFITSIO code when reading a FITS binary table that; contained a column of type LOGICAL. The code in TFISTIO:LoadHDU only; had tests for column types of strings or numeric so it was failing with the error. “bad binary table datatype”,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1590:99,LOG,LOGICAL,99,https://root.cern,https://github.com/root-project/root/pull/1590,2,"['LOG', 'test']","['LOGICAL', 'tests']"
Testability,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11226:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/11226,2,['test'],"['test', 'tests']"
Testability,"Some RooFit functions, in particular the ones related to; multiprocessing, created many files directly in the `/tmp` directory.; Some users and @hageboeck found that this was unnessecarily polluting; the `/tmp` directory and the files should rather go into a subdirectory. This commit suggests to use the subdirectory `/tmp/roofit` for add; temporary RooFit files that get created during multiprocessing and; testing. The path for temporary RooFit files can now be retrieved with a new; `RooFit::tmpPath()` function that is not exposted by the user but only; meant to be used by the RooFit implementations. The first time; `RooFit::tmpPath()` is called, it will check if the directory exists and; create it if it doesn't. This new function goes into a new package; `roofit/common` that is meant to be at the base of the RooFit dependency; graph, meaning all of `roofitcore`, `multiprocess`, and `roofitZMQ` can; depend on the `common` package to get the temporary files path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9504:409,test,testing,409,https://root.cern,https://github.com/root-project/root/pull/9504,1,['test'],['testing']
Testability,"Some [tests failed on SLC6](https://phsft-jenkins.cern.ch/job/root-pullrequests/189/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/), but are not related to this pull request:; ```; projectroot.roottest.python.JsMVA.roottest_python_JsMVA_EnableJsMVA; projectroot.roottest.python.JsMVA.roottest_python_JsMVA_UserInterface; projectroot.roottest.python.JsMVA.roottest_python_JsMVA_NewMethods; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/393#issuecomment-287811838:6,test,tests,6,https://root.cern,https://github.com/root-project/root/pull/393#issuecomment-287811838,1,['test'],['tests']
Testability,"Some boost histogram utility functions have trouble being called from PyROOT. I've traced this back to what looks like a name normalization problem. Unfortunately I did not manage to put together a standalone example without the boost histogram dependency. Consider the following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include <iostream>; #include <boost/histogram.hpp>. int test() {; auto ns = TClass::GetClass(""boost::histogram"");; auto meth = ns->GetMethodWithPrototype(""make_histogram"", ""boost::histogram::axis::regular<>&&"");. std::cout << ""meth->GetReturnTypeName(): "" << meth->GetReturnTypeName() << std::endl;; std::cout << ""meth->GetReturnTypeNormalizedName(): "" << meth->GetReturnTypeNormalizedName() << std::endl;. auto cl = TClass::GetClass(meth->GetReturnTypeNormalizedName().c_str());; std::cout << ""cl: "" << cl << std::endl;. return 0;; }; ```. output:; ```; meth->GetReturnTypeName(): boost::histogram::histogram<tuple<boost::histogram::axis::regular<double,boost::use_default,boost::use_default,boost::use_default> >,boost::histogram::unlimited_storage<allocator<char> > >; meth->GetReturnTypeNormalizedName(): boost::histogram::histogram<tuple<regular<double,use_default,use_default,use_default> >,unlimited_storage<allocator<char> > >; cl: 0; (int) 0; ```. So note that the normalized return type is missing the ```boost::histogram``` namespace for the template arguments of the std::tuple. (and then obviously trying to lookup the type again fails). This prevents properly calling this function and other similar ones from PyROOT because the normalized return type is used e.g. here https://github.com/root-project/root/blob/4483b01b7f4bad47332f98d773dbd9b8c7f36b9d/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1515",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12548:280,test,test,280,https://root.cern,https://github.com/root-project/root/issues/12548,3,['test'],['test']
Testability,"Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12980:320,test,tests,320,https://root.cern,https://github.com/root-project/root/pull/12980,2,['test'],"['tested', 'tests']"
Testability,"Some debug symbols seem to be missing so we don't have line number information, but this log is already enough to confirm my hypothesis above: 2.9 GB come from std::vector allocations performed by `RDF::FillHelper::Exec<ROOT::VecOps::RVec<float>, 0>`. The simplest workaround is to specify a binning for the histograms. I am not sure whether this is a common enough problem to warrant a fix in RDF if the fix involves thread synchronization or other potential performance pessimizations. Alternatively, if we can come up with a mutex-free algorithm to automatically select binnings that are compatible among threads that might be the best option -- some related discussion on this topic is [here](https://sft.its.cern.ch/jira/browse/ROOT-8883). Moving this to priority ""default"" since there is a workaround. EDIT: another workaround is to run on fewer events, which might be reasonable since this kind of usecase is typically part of an exploratory phase of the analysis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716447711:89,log,log,89,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716447711,1,['log'],['log']
Testability,"Some further debugging (but really just dumping notes from some experiments):; * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; ```; root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Even simpler, just trying to create an object of that template instantiation fails:; ```; root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1419006181:464,Assert,Assertion,464,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419006181,2,['Assert'],['Assertion']
Testability,Some hack I have to build the test unoptimised was mistakenly added to the commit. I removed it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371633763:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371633763,1,['test'],['test']
Testability,"Some libraries are layered can depend on other libraries on a private paths. That is, libA can depend on libB which is neither on the LD_LIBRARY_PATH nor on a known system path. The posix linker injects ""variables"" such as @rpath which is expanded at link time to resolve the libraries on a relative path. Prior to this patch, cling's Dyld-based symbol resolution could not trace down such cases causing failures in symbol resolution when a symbol is only defined in libB (a private library). This patch implements the basic posix linker substitutions allowing cling's Dyld-based symbol resolution implementation to follow more closely the linker rules. ## Performance. |platform|test|master|PRv1|PRv2| mem master|mem PRv2|; |:--------|:---|:---------:|:-----------:|:-----------:|:-----------:|:-----------:|; |ubu20|roottest-python-pythonizations|6.5|6.55|6.65|342076|347168|; |ubu20|roottest-cling|112.8|114.53|181.26|411048|416036|; |ubu20|roottest-python|148.5|136.26|144.72|394292|397120|; |ubu20|roottest-root-hist|16.78|17.35|15.45|465156|235084|; |ubu20|roottest-root-math|28.28|27.89|27.40|424072|371256|; |ubu20|roottest-root-tree|462.84|510.59|465.79|796512|797992|; |ubu20|roottest-root-treeformula|117.53|129.16|114.44|261184|260168|; |ubu20|root-io-stdarray|66.90|67.89|65.71|263424|255120|; |ubu20|roottest-root-treeformula|117.55|129.10|; |osx 10.15|roottest-python-pythonizations|17.25|16.06|; |osx 10.15|roottest-cling|346.06|343.46|; |osx 10.15|roottest-root-hist|36.06|36.22|; |osx 10.15|roottest-root-math|49.78|52.42|; |osx 10.15|root-io-stdarray|119.32|118.73|. That PR should reduce the number of `stat` calls improving #7774. Kudos Alexander Penev (@alexander-penev).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969:680,test,test,680,https://root.cern,https://github.com/root-project/root/pull/6969,1,['test'],['test']
Testability,"Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697; This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/362:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/362,6,['test'],"['test', 'testDetails', 'tests']"
Testability,Some packages that we use in some unit tests and tutorials don't support Python 3.13 yet. They should be listed conditionally on the Python version to make the environment resolve. This is required for building the Fedora 41 CI images. Tested with Python 3.13 on Arch Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16743:39,test,tests,39,https://root.cern,https://github.com/root-project/root/pull/16743,2,"['Test', 'test']","['Tested', 'tests']"
Testability,"Some platforms already show green tests, merging this for now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9230#issuecomment-959566498:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/9230#issuecomment-959566498,1,['test'],['tests']
Testability,"Some random comments:. This might behave differently in the llvm13 branch. But until we really know how llvm13 deals with symbols (i.e. until all tests currently failing with missing symbols are fixed) I find it courageous to do a change like this one, unless we know **why** this facility is not needed anymore. Here the reason seemed mostly heuristic, iiuc?. I'd propose to shelves this, and get back to it once llvm13 is merged. IURC, this facility here is used in the case where a symbol gets emittedv and then unloaded. If the symbol was actually defined _before_ the unloaded transaction (because it was determined to be a deferred symbol) then we need to remember that we _could_ emit it again, we need to put it back into ""deferred, might want to emit later"" state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10696#issuecomment-1145807240:146,test,tests,146,https://root.cern,https://github.com/root-project/root/pull/10696#issuecomment-1145807240,1,['test'],['tests']
Testability,"Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10671:64,test,tests,64,https://root.cern,https://github.com/root-project/root/pull/10671,2,['test'],"['tested', 'tests']"
Testability,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2401817859:5,test,tests,5,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2401817859,1,['test'],['tests']
Testability,"Some tests are failing with modules such with redefinition errors; (for example `roottest-cling-parsing-scopeDict-build`). The reason for this is that we include all headers that form; the C++ module again to make sure the module is complete (some; rootcling invocations don't have all headers of the module as; arguments, most notably the Core module). The first inclusion; of these headers happens from the normal rootcling code. This patch changes this behavior that we only include the; *missing* headers that are necessary to make the C++ module; complete and not all headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1335:5,test,tests,5,https://root.cern,https://github.com/root-project/root/pull/1335,1,['test'],['tests']
Testability,Some tests not run on my machine may fail. This PR is to get those fixed too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4250#issuecomment-523367253:5,test,tests,5,https://root.cern,https://github.com/root-project/root/pull/4250#issuecomment-523367253,1,['test'],['tests']
Testability,"Somebody should give me a hint to how that `test_periodic_build` test is set up. Since I can't really fix a test for which I have no clue how it's being executed. (I tried to look for that name in the main repository, in `roottest` and `jenkins-pipelines`. But I now give up.). But in general, if that test tries to use `ROOTConfig.cmake` out of the build directory **before** the ROOT build would've been done, then yes, that should fail. As that would be a bad test to have. :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1342279478:65,test,test,65,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1342279478,4,['test'],['test']
Testability,Something funny is happening with the payload injected in cling. All but one test pass. I am debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3033#issuecomment-441320544:77,test,test,77,https://root.cern,https://github.com/root-project/root/pull/3033#issuecomment-441320544,1,['test'],['test']
Testability,"Something went wrong, it looks like you merged the master branch into your feature branch. We need to have one (or more) commit of yours on top of the master branch, like this:. ![image](https://user-images.githubusercontent.com/10999034/150794127-6b77d3bf-9a8d-4d8e-b697-134e1c51c426.png). Instead the current situation is:. ![image](https://user-images.githubusercontent.com/10999034/150794245-1d6abf5e-2011-43fa-b598-8bb4a55c4f35.png). Usually I use `git rebase --interactive` from the command line to fix these kind of issues, see e.g. https://www.sitepoint.com/git-interactive-rebase-guide/ . To display the state of the repository I use a custom git log command that basically runs `git log --graph --decorate --oneline --abbrev-commit`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9650#issuecomment-1020120699:656,log,log,656,https://root.cern,https://github.com/root-project/root/pull/9650#issuecomment-1020120699,2,['log'],['log']
Testability,"Sometime ROOT wrongly assign kIsOnHeap bit to object, making json-based tests failing.; While these bits must be on after object reading, there is no sense preserve them.; Making JSON code more compact. Instead of:. ""fBits"": 50331649,. one will get:. ""fBits"": 1,. Should solve sporadic problems with roottest.; roottest has to be modified after that PR",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4182:72,test,tests,72,https://root.cern,https://github.com/root-project/root/pull/4182,1,['test'],['tests']
Testability,"Sorry @marsupial, I overlooked at the log, I just saw the same tests failing before and after...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/745#issuecomment-313418650:38,log,log,38,https://root.cern,https://github.com/root-project/root/pull/745#issuecomment-313418650,2,"['log', 'test']","['log', 'tests']"
Testability,Sorry Javi!. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9831:78,test,tested,78,https://root.cern,https://github.com/root-project/root/pull/9831,2,['test'],['tested']
Testability,"Sorry Olivier, I missed your reply. The loop was just to see if the offset of 4 pixels appeared always, or only if the canvas was big enough. Or also to see if the offset was proportional to canvas size or not. I am not creating PNGs in the snippet above, but rather looking at the graphics are size without borders, which is what the PNG should become later. I took the logic out of the ROOT documentation:. ```; To define precisely the graphics area size of a canvas in the interactive mode, the following four lines of code should be used:; {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }. and in the batch mode simply do:; c->SetCanvasSize(w,h);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11004#issuecomment-1618360139:371,log,logic,371,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1618360139,1,['log'],['logic']
Testability,"Sorry about that, we were missing a backport after applying other fixes: https://github.com/root-project/root/pull/12901. P.S.; > sorry about the bad formatted post - I did not intend any font change. You can disable formatting of pasted logs by surrounding them with three backticks on individual lines. I've edited the original issue summary accordingly :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12897#issuecomment-1568537975:238,log,logs,238,https://root.cern,https://github.com/root-project/root/issues/12897#issuecomment-1568537975,1,['log'],['logs']
Testability,"Sorry for killing the mac-beta build. We know already it would fail w/o the fix, which needs to be tested on mac-beta...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14934#issuecomment-1991006139:99,test,tested,99,https://root.cern,https://github.com/root-project/root/pull/14934#issuecomment-1991006139,1,['test'],['tested']
Testability,"Sorry for not addressing this issue earlier. Although I don't remember the reasoning, I believe it was concluded that the CI should not be red on test errors. If this is to be changed all there is to it is changing [this line](https://github.com/root-project/root/blob/aae1cd064679f440ad80f39e4ee56bb0c1d9d396/.github/workflows/root-ci-config/build_root.py#LL252C22-L252C22):. ```diff. 251 if result != 0:; - 252 print_warning(""Some tests failed""); + 252 die(result, ""Some tests failed"", shell_log); ```. Would like @Axel-Naumann's input before closing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542341565:146,test,test,146,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542341565,3,['test'],"['test', 'tests']"
Testability,"Sorry for taking so long to test this. The fix seems to work for the Alice O2 Simulation (to be precise, I still have some problems, but they are independent from the symbol collision here.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180#issuecomment-851502651:28,test,test,28,https://root.cern,https://github.com/root-project/root/issues/8180#issuecomment-851502651,1,['test'],['test']
Testability,Sorry for the delay. I believe this should be behaving exactly the same as the previous version. But let's see what the full suite of tests say.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1625#issuecomment-371543275:134,test,tests,134,https://root.cern,https://github.com/root-project/root/pull/1625#issuecomment-371543275,1,['test'],['tests']
Testability,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:; - gcc-c++-6.1.1-2.fc25.i686.rpm; - glibc-2.23.90-23.fc25.i686. The following tests FAILED:; 45 - mathmore-testSpecFunc (Failed); 82 - test-stressgraphics (Failed); 83 - test-stressgraphics-interpreted (Failed); 115 - test-TFormulaTests (Failed). Details:; - mathmore-testSpecFunc. ```; laguerre(4, 1.) : FAILED; Discrepancy in laguerre(4, 1.) () :; -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16); ```; - test-stressgraphics; Failed subtests - 5 9 13 15 37 39 41; - test-stressgraphics-interpreted; Failed subtests - 5 9 13 15 37 39 41; - test-TFormulaTests; failed tests are : 18 19 23 28. For Fedora 23 i686; - gcc-c++-5.3.1-6.fc23.i686; - glibc-2.22-17.fc23.i686. The following tests FAILED:; 45 - mathmore-testSpecFunc (Failed); 82 - test-stressgraphics (Failed); 83 - test-stressgraphics-interpreted (Failed); 94 - test-stressmathcore (Failed); 115 - test-TFormulaTests (Failed). Details:; - mathmore-testSpecFunc. ```; laguerre(4, 1.) : FAILED ; Discrepancy in laguerre(4, 1.) () :; -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16); ```; - test-stressgraphics; Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41; - test-stressgraphics-interpreted; Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41; - test-stressmathcore. ```; PtEtaPhiMVector operations ; Discrepancy in PtEtaPhiMVector operations() :; 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07); ............ FAILED . PxPyPzMVector operations ; Discrepancy in PxPyPzMVector operations() :; 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07); ............ FAILED ; ```; - test-TFormulaTests; failed tests are : 18 19 23 27 28. Regarding test/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-227808782:129,test,tests,129,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-227808782,11,['test'],"['test-TFormulaTests', 'test-stressgraphics', 'test-stressgraphics-interpreted', 'testSpecFunc', 'tests']"
Testability,"Sorry for the late reply!. I would like to understand why exactly the tests fail. We're dealing with summation errors like these all the time in RooFit. Imho, we need to understand as exactly as possible where they come from and then document that. If we cannot do that, then we should treat them as errors, until we understand the fundamental limits, e.g. from hardware summation implementations. I can well imagine that that is the root cause here, but I would like to see some hard confirmation of that. The reason I'm so insistent on this is that I've spent the past year trying to unravel subtle bugs involving multiple summations that may either fail because of implementation issues (like e.g. was the case for KahanSum) or because of fundamental limits in algorithms (Kahan summation also still has errors) or because of fundamental hardware limits or single vs double vs long double precision, etcetera. Trying to pin down exactly what is going on is a huge pain. Those are my 2 cents here, sorry for being a pain in the ass :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1505061910:70,test,tests,70,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1505061910,1,['test'],['tests']
Testability,Sorry for the late reply. ; There is nothing special to setup. The way you did it should be fine:; Go into `$ROOTSYS/test` then type `make` and you execute `./stressGraphics`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1088337229:117,test,test,117,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1088337229,1,['test'],['test']
Testability,"Sorry! We should have not made the rapidyaml backend for RooFit JSON available in the release. It is not tested and only there for dev purposes. This PR will fix this:; https://github.com/root-project/root/pull/15247. I'll backport it to ROOT 6.32, 6.30 and 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15118#issuecomment-2061524144:105,test,tested,105,https://root.cern,https://github.com/root-project/root/issues/15118#issuecomment-2061524144,1,['test'],['tested']
Testability,"Sorry, @pcanal - that's way too terse for me. Can you expand what a seemingly broken test design has to do with these issues? (Other than the fact that this is all about dictionaries.) Would a call help, between @hahnjo you and me?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1755728280:85,test,test,85,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1755728280,1,['test'],['test']
Testability,"Sorry, I confused this file with a different RooFit test file, all good!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9456#issuecomment-996846060:52,test,test,52,https://root.cern,https://github.com/root-project/root/pull/9456#issuecomment-996846060,1,['test'],['test']
Testability,"Sorry, I don't get this ... what I'm supposed to fix here? :) The logs don't seem to contain anything useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566#issuecomment-300821684:66,log,logs,66,https://root.cern,https://github.com/root-project/root/pull/566#issuecomment-300821684,1,['log'],['logs']
Testability,"Sorry, I meant test vector size 10^7.; ```; std::vector<int> vect(10000000);; auto json = TBufferJSON::ToJSON(&vect);; ```; Here real inline-ing should save a lot of function calls",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13894#issuecomment-1768555435:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/13894#issuecomment-1768555435,1,['test'],['test']
Testability,"Sorry, I missed this before, please ping me in the issue description or add me as assignee next time to ensure I see it. Gentoo has `-fPIE` enabled by default in GCC, and I've had to make changes in ROOT already because of some tests failing due to that. If the patch fixes it for Arch, it should fix it for Gentoo. I can pick up the patch in 6.24.06, but I think this is important enough that a new patch release would be nice to make sure the fix hits as many people as possible. If there's a quick way to test this, let me know, I can test and report on the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-992271250:228,test,tests,228,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-992271250,3,['test'],"['test', 'tests']"
Testability,"Sorry, my mistake again. I think i was a little confused as to why my try with the 'second' option failed. It was the same reason as before, a stupid second brace... Indeed once I fix that it does seem to work (I want to test it out on gcc first to be sure, but clang on OSX is OK). Sorry for the noise on this. . If things look OK on gcc as well I will make the other changes elsewhere and push another update...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286498120:221,test,test,221,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286498120,1,['test'],['test']
Testability,"Sorry, please read: I assert that it works. We had LLVM_ON_UNIX since very long time in the codebase. That codebase worked for external clang builds since very long. By deduction one more LLVM_ON_UNIX where is needed will not break this. EDIT: Another empirical evidence:; ```; grep LLVM_ON /usr/lib/llvm-5.0/lib/cmake/llvm/LLVMConfig.cmake; set(LLVM_ON_UNIX 1); set(LLVM_ON_WIN32 0); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5929#issuecomment-650996641:22,assert,assert,22,https://root.cern,https://github.com/root-project/root/pull/5929#issuecomment-650996641,1,['assert'],['assert']
Testability,Sounds good!. If we're happy with the approach now and have a corresponding test ... are we ready to get this merged? @pcanal - any unaddressed issues in the ticket history?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-174811202:76,test,test,76,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-174811202,1,['test'],['test']
Testability,"Sounds good, thanks for looking into it!. Should I extend the reproducer into a full test case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705#issuecomment-312050112:85,test,test,85,https://root.cern,https://github.com/root-project/root/pull/705#issuecomment-312050112,1,['test'],['test']
Testability,"Sounds reasonable to me. I checked previously that there were no ZeroMQ symbols in RooFitZMQ, so I'm surprised they are back. Indeed, adding a unit test seems ideal to make sure they stay out. On CI, we can still enable `roofit_multiprocessing`, though, right? That way, at least the code won't rot until we can fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981995182:148,test,test,148,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981995182,1,['test'],['test']
Testability,"Span&lt;double&gt; RooAbsReal::evaluateBatch(std::size_t, std::size_t) const’ was hidden [-Woverloaded-virtual] ; - [2020-10-07T12:19:38.399Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFormulaVar.h:73:19: warning: by ‘virtual RooSpan&lt;double&gt; RooFormulaVar::evaluateBatch(BatchHelpers::RunContext&, const RooArgSet*) const’ [-Woverloaded-virtual] ; - [2020-10-07T12:19:38.399Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooAbsReal.h:111:33: warning: ‘virtual RooSpan&lt;const double&gt; RooAbsReal::getValBatch(std::size_t, std::size_t, const RooArgSet*) const’ was hidden [-Woverloaded-virtual] ; - [2020-10-07T12:19:38.399Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooConstVar.h:40:25: warning: by ‘virtual RooSpan&lt;const double&gt; RooConstVar::getValBatch(BatchHelpers::RunContext&, const RooArgSet*) const’ [-Woverloaded-virtual] . And 556 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rreader/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_SGD_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_SGD_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adam_Optimization_Cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98317/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Adam_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adagrad_Optimization_Cpu](https://lcgapp-services.cern.ch/root-je",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6484#issuecomment-704917683:3048,test,tests,3048,https://root.cern,https://github.com/root-project/root/pull/6484#issuecomment-704917683,1,['test'],['tests']
Testability,"Special builds are those builds that test particular configurations, which are not meant to be considered for binaries of releases. Besides the new category, two special builds are introduced:; - The ""march=native"" build, that fixes #12291; - The ""runtime modules off"" build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15412:37,test,test,37,https://root.cern,https://github.com/root-project/root/pull/15412,1,['test'],['test']
Testability,Specificity would help...this is reporting Jenkins CI build passed and the majority of tests pass here as well (I've never successfully had them all pass).; Perhaps you are not picking up the full history of changes (as you said there were conflicts)?; Maybe apply the changes to LLVM and then overwrite the ROOT versions?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313732585:87,test,tests,87,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313732585,1,['test'],['tests']
Testability,Speedup TOffsetGeneration and bench test. (v616),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3200:36,test,test,36,https://root.cern,https://github.com/root-project/root/pull/3200,1,['test'],['test']
Testability,"Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12978:676,benchmark,benchmarks,676,https://root.cern,https://github.com/root-project/root/pull/12978,1,['benchmark'],['benchmarks']
Testability,"Spoke too early: reopening this since we still see a similar issue:. ```; [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6; [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6; [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174; [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186; [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location; [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-913117485:416,sandbox,sandbox,416,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-913117485,6,['sandbox'],['sandbox']
Testability,"Sporadic test failures are caused by the randomness of the test input.; (For some inputs the training does not converge). This patch ""fixes""; this by removing the randomness from the input to the tests. One source of randomness still remains, the dataloader shuffles the; batches internally, relying on a source of randomness that is not; reachable from the outside. However, the variability in test output is _significantly_ reduced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/2251,4,['test'],"['test', 'tests']"
Testability,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5985:981,Test,TestMoveOnly,981,https://root.cern,https://github.com/root-project/root/pull/5985,2,['Test'],['TestMoveOnly']
Testability,Spurious change to enable testing jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760:26,test,testing,26,https://root.cern,https://github.com/root-project/root/pull/3760,1,['test'],['testing']
Testability,Spurrious change to enable testing CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15562:27,test,testing,27,https://root.cern,https://github.com/root-project/root/pull/15562,1,['test'],['testing']
Testability,Spurrious change to enable testing jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2917:27,test,testing,27,https://root.cern,https://github.com/root-project/root/pull/2917,3,['test'],['testing']
Testability,"Standalone C++ class generation was not implemented for multiclass BDTG. This change uses the logic of TMVA::MethodBDT::GetMulticlassValues() and uses it in a new function ReadBDTG::GetMulticlassValues() when the multiclass training is used.; Tested on multiclass BDTG and binary BDTG training, in both cases a compiling and functioning standalone class is generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3028:94,log,logic,94,https://root.cern,https://github.com/root-project/root/pull/3028,2,"['Test', 'log']","['Tested', 'logic']"
Testability,Start 2230: roottest-root-treeformula-retobj-make; 14/19 Test #2230: roottest-root-treeformula-retobj-make ............ Passed 6.26 sec; Start 2231: roottest-root-treeformula-scan-make; 15/19 Test #2231: roottest-root-treeformula-scan-make .............. Passed 1.08 sec; Start 2232: roottest-root-treeformula-schemaEvolution-make; 16/19 Test #2232: roottest-root-treeformula-schemaEvolution-make ... Passed 7.45 sec; Start 2233: roottest-root-treeformula-stl-make; 17/19 Test #2233: roottest-root-treeformula-stl-make ............... Passed 8.17 sec; Start 2234: roottest-root-treeformula-string-make; 18/19 Test #2234: roottest-root-treeformula-string-make ............ Passed 8.24 sec; Start 2235: roottest-root-treeformula-sync-make; 19/19 Test #2235: roottest-root-treeformula-sync-make ..............***Failed 4.12 sec; ```; </details>. <summary>This PR Release Mode </summary>; <details>. ```; ctest -R .*treefor.* ; Test project /build/vvassilev/root-release-master; Start 2217: roottest-root-treeformula-array-make; 1/19 Test #2217: roottest-root-treeformula-array-make ............. Passed 26.23 sec; Start 2218: roottest-root-treeformula-casting-make; 2/19 Test #2218: roottest-root-treeformula-casting-make ........... Passed 2.86 sec; Start 2219: roottest-root-treeformula-clones-make; 3/19 Test #2219: roottest-root-treeformula-clones-make ............ Passed 0.79 sec; Start 2220: roottest-root-treeformula-depth-make; 4/19 Test #2220: roottest-root-treeformula-depth-make ............. Passed 0.23 sec; Start 2221: roottest-root-treeformula-event-make; 5/19 Test #2221: roottest-root-treeformula-event-make ............. Passed 3.84 sec; Start 2222: roottest-root-treeformula-evolution-make; 6/19 Test #2222: roottest-root-treeformula-evolution-make ......... Passed 5.07 sec; Start 2223: roottest-root-treeformula-formulaio-make; 7/19 Test #2223: roottest-root-treeformula-formulaio-make ......... Passed 0.47 sec; Start 2224: roottest-root-treeformula-function-make; 8/19 Test #2224,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252919323:6309,Test,Test,6309,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252919323,2,['Test'],['Test']
Testability,Start 393: gtest-tree-dataframe-test-datasource-csv; 416/1231 Test #388: gtest-tree-dataframe-test-dataframe-vary ............................ Passed 6.93 sec; Start 394: gtest-tree-dataframe-test-dataframe-concurrency; 417/1231 Test #379: gtest-tree-dataframe-test-dataframe-snapshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:5986,Test,Test,5986,https://root.cern,https://github.com/root-project/root/pull/10300,2,"['Test', 'test']","['Test', 'test-datasource-sqlite']"
Testability,"Starting from ROOT 6.24.00 we support WLCG Bearer Tokens [1] through Davix, but we still are missing infrastructure for testing them.; [1] https://root.cern/releases/release-62400/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8216:120,test,testing,120,https://root.cern,https://github.com/root-project/root/issues/8216,1,['test'],['testing']
Testability,"Starting from the `debian:sid` Docker image, create the following environment:; ```; apt update && apt dist-upgrade; apt install cmake gcc g++ git libxrootd-client-dev ninja-build python3; ```; Then clone `root.git` and configure + build with; ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -Dx11=OFF ../root/; ninja; ```; Afterwards try executing `./bin/root.exe tutorials/dataframe/df103_NanoAODHiggsAnalysis.C`. It will hang and setting `XRD_LOGLEVEL=Debug` reveals:; ```; [2023-02-06 12:00:28.136048 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Sending authentication data; [2023-02-06 12:00:28.137346 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using krb5; [2023-02-06 12:00:28.137406 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol krb5: Seckrb5: No or invalid credentials; No credentials cache found (p=xrootd/eospublic.cern.ch@CERN.CH).; [2023-02-06 12:00:28.137968 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using gsi; [2023-02-06 12:00:32.761097 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol gsi: Secgsi: ErrParseBuffer: unknown CA: cannot verify server certificate: kXGS_init; ```. Instead, installing the `xrootd-client` package and running; ```; xrdcp root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod_skimmed/SMHiggsToZZTo4L.root .; ```; works just fine - the `Debug` log shows that it proceeds with `Trying to authenticate using uni` (after `Cannot get credentials for protocol gsi` was also signaled kind of immediately).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231:1489,log,log,1489,https://root.cern,https://github.com/root-project/root/issues/12231,1,['log'],['log']
Testability,"Starting from your commit, I added a test case in order to check in ROOT's battery of tests also the output when a lazy snapshot is triggered in MT mode. This was missing, only the case which was there was the one when a lazy snapshot was not triggered in MT mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16550#issuecomment-2381315685:37,test,test,37,https://root.cern,https://github.com/root-project/root/pull/16550#issuecomment-2381315685,2,['test'],"['test', 'tests']"
Testability,Still fails for me in `master` - probably because of my last commit to make the tests pass on macOS :neutral_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970#issuecomment-1853606958:80,test,tests,80,https://root.cern,https://github.com/root-project/root/issues/7970#issuecomment-1853606958,1,['test'],['tests']
Testability,Still fails to compile `core/imt/test/testTBBGlobalControl.cxx` on my CentOS 8.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7057#issuecomment-762145381:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/7057#issuecomment-762145381,2,['test'],"['test', 'testTBBGlobalControl']"
Testability,Still need to find a way to disable `source_location` test for <=C++17 builds of Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14218#issuecomment-1857515083:54,test,test,54,https://root.cern,https://github.com/root-project/root/pull/14218#issuecomment-1857515083,1,['test'],['test']
Testability,Still there; with debug information I get some more details where the memory is accessed:; ```; #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55; #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20; #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15; #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1; ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10096#issuecomment-1214891002:490,Test,TestBody,490,https://root.cern,https://github.com/root-project/root/issues/10096#issuecomment-1214891002,2,"['Test', 'test']","['TestBody', 'test']"
Testability,Stopping the CI builds as the last run was green and I only changed the commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11691#issuecomment-1312242684:79,log,log,79,https://root.cern,https://github.com/root-project/root/pull/11691#issuecomment-1312242684,1,['log'],['log']
Testability,Streamline expression of Python unit tests and test TDF histogramming in python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1031:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/1031,2,['test'],"['test', 'tests']"
Testability,Stress histogram refactor to use Google Test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/843:40,Test,Test,40,https://root.cern,https://github.com/root-project/root/pull/843,1,['Test'],['Test']
Testability,"StringRef, bool, bool) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:0:7; #13 0x000000000382e2c2 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/GeneratePCH.cpp:63:14; #14 0x00000000033cf873 clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Frontend/MultiplexConsumer.cpp:291:23; #15 0x0000000003542e96 clang::ParseAST(clang::Sema&, bool, bool) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:178:12; #16 0x000000000336cc4c clang::ASTFrontendAction::ExecuteAction() /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:1043:1; #17 0x000000000336c68c clang::FrontendAction::Execute() /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:938:7; #18 0x0000000003310825 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:944:23; #19 0x000000000331779d compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_3::operator()() const /scratch/greenc/test-products/root/v6_26_04b/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1129:7; ```; Please lmk if you have any indication what could cause this. @chissg thanks a lot, that's super helpful (and very unexpected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1192995322:17286,test,test-products,17286,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1192995322,3,['test'],['test-products']
Testability,"StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>)::$_4>(long) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:177:5; #98 0x00000000043d3c19 llvm::function_ref<void ()>::operator()() const /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:200:5; #99 0x0000000008fddacb llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:426:3; #100 0x0000000008fdde5f RunSafelyOnThread_Dispatch(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:498:29; #101 0x0000000008fddeb5 llvm::thread::thread<void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*>(llvm::Optional<unsigned int>, void (&)(void*), (anonymous namespace)::RunSafelyOnThreadInfo*&&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/include/llvm/Support/thread.h:232:3; #102 0x0000000008fdddca llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/CrashRecoveryContext.cpp:508:10; #103 0x00000000040e39d6 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1164:7; #104 0x00000000040e46c6 compileModule(clang::CompilerInstance&, clang::SourceLocation, clang::Module*, llvm::StringRef) /scratch/greenc/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:51439,test,test-products,51439,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['test'],['test-products']
Testability,Strips the RNTuple unit test utility header and the unit test library dependencies from unnecessary baggage. Follow-up from https://github.com/root-project/root/pull/13342#discussion_r1277816509,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13351:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/13351,2,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:23.745Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.286Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.286Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13916#issuecomment-1774806077:1533,test,test,1533,https://root.cern,https://github.com/root-project/root/pull/13916#issuecomment-1774806077,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.286Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:24.705Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:25.132Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:37:25.132Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13916#issuecomment-1774806077:2204,test,test,2204,https://root.cern,https://github.com/root-project/root/pull/13916#issuecomment-1774806077,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.275Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.275Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13914#issuecomment-1774839901:1533,test,test,1533,https://root.cern,https://github.com/root-project/root/pull/13914#issuecomment-1774839901,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.620Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T09:58:31.930Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13914#issuecomment-1774839901:2204,test,test,2204,https://root.cern,https://github.com/root-project/root/pull/13914#issuecomment-1774839901,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:20.996Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.284Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1775205003:1533,test,test,1533,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1775205003,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.618Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-23T13:30:21.910Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1775205003:2204,test,test,2204,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1775205003,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776802744:1533,test,test,1533,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776802744,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T08:55:21.666Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776802744:2204,test,test,2204,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776802744,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.338Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matchin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776988707:1533,test,test,1533,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776988707,1,['test'],['test']
Testability,"Struct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.337Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,1): error C2440: '&lt;function-style-cast&gt;': cannot convert from 'initializer list' to 'CustomStruct' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.338Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'std::vector&lt;CustomStruct,std::allocator&lt;CustomStruct&gt;&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(26,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(27,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\rfield_vector.vcxproj] ; - [2023-10-24T11:00:30.683Z] C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\test\rfield_vector.cxx(32,17): error C2672: 'ROOT::Detail::VecOps::RVecImpl&lt;T&gt;::emplace_back': no matching overloaded functi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604#issuecomment-1776988707:2204,test,test,2204,https://root.cern,https://github.com/root-project/root/pull/13604#issuecomment-1776988707,1,['test'],['test']
Testability,Substitute #defines and repeated #includes of the same code snippets; with fixtures and googletest's value parametrized tests.; No functional change is intended.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1474:120,test,tests,120,https://root.cern,https://github.com/root-project/root/pull/1474,1,['test'],['tests']
Testability,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560#issuecomment-704331072:206,log,logic,206,https://root.cern,https://github.com/root-project/root/pull/6560#issuecomment-704331072,3,"['assert', 'log']","['asserts', 'logic']"
Testability,"Such data can be used with JSROOT for testing only client side without running of C++; Of course, client is not fully-functional, but many aspects can be tested much-much easier",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3154:38,test,testing,38,https://root.cern,https://github.com/root-project/root/pull/3154,2,['test'],"['tested', 'testing']"
Testability,"Summary of the state of this PR:. The changes that this PR makes to RooAbsArg causes unexpected warnings in testProxiesAndCategories. The issue is explained in more detail in GitHub issue https://github.com/root-project/root/issues/8791. Once the problem with the unexpected warning is solved, we can proceed with this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8764#issuecomment-891832583:108,test,testProxiesAndCategories,108,https://root.cern,https://github.com/root-project/root/pull/8764#issuecomment-891832583,1,['test'],['testProxiesAndCategories']
Testability,"Summary on mac x86-64 Core i7:; - With LLVM asserts: 1955 s; - Without LLVM asserts: 1656 s; It's 15% less, 5 minutes in absolute terms. For comparison, a full build takes about 40 minutes (w/o ccache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14650#issuecomment-1937085917:44,assert,asserts,44,https://root.cern,https://github.com/root-project/root/pull/14650#issuecomment-1937085917,2,['assert'],['asserts']
Testability,"Summary:; * This appears because stripping `std::` allows 2 entities to have the same normalized name; ~~* This can also appears in case of inline namespace (but does not seem to cause the same problem)~~; * In ~~both~~ the `std` scenario we ends up a (delayed diagnosed :( ) ambiguous symbol.; * The UpdateClassInfo machinery ~~somehow~~ only fails in the std case.; * The error handling could be improved by tweaking in `TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alias)`:; ```; if (!oldDef || (def && def != oldDef)) {; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; // It's a tag decl, not a namespace decl.; cci->Init(*cci->GetType());; ```; to detect that even though old and new (`def` and `oldDef`) decl are different they are still a namespace and issue an error rather than calling `cci->Init` which (even if we passed the right type) would still semantically do the 'wrong' thing (technically updating the `TClass` for the first namespace to now look at the second namespace). For completeness, result with a 3 week old commit 58a96e2a8e (a priori the only relevant change since is LLVM 18 which should not affect the result since the above code is 'wrong').; ```; root [0] gInterpreter->Declare(""inline namespace __inlinens__ { namespace Detail {} } ""); (bool) true; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x14e1048d0; root [2] namespace Detail {}; ```; but ; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x1497316a0; root [2] namespace Detail {}; Assertion failed: (detail::isPresent(Val) && ""dyn_cast on a non-existent value""), function dyn_cast, file Casting.h, line 663.; Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372467341:1602,Assert,Assertion,1602,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372467341,1,['Assert'],['Assertion']
Testability,"Super nice! The [report](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/130368/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTOffsetGeneration/) says ""Expected messages:"" - but it's not obvious whether ""expected"" as in ""required"" or in ""optional"". Maybe use one of the latter two words to make it obvious?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-974879979:105,test,testReport,105,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-974879979,2,['test'],"['test', 'testReport']"
Testability,Support weighted filling from RDF to RooFit in RooAbsDataHelper and also; implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16091:86,test,test,86,https://root.cern,https://github.com/root-project/root/pull/16091,1,['test'],['test']
Testability,"Suppose by default that string coded as utf-8, providing correct representation in JSON. Adding correspondent test. Solves: #6681",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8344:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/8344,1,['test'],['test']
Testability,"Suppress warnings compiling the builtin LLVM and clang. It is not; maintained by ROOT, so warnings are not necessary here. This suppresses many warnings that flood the build logs, and also; prevent us from treating warnings as errors in the CI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15483:174,log,logs,174,https://root.cern,https://github.com/root-project/root/pull/15483,1,['log'],['logs']
Testability,Sure I'll add the test too!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476#issuecomment-863914186:18,test,test,18,https://root.cern,https://github.com/root-project/root/pull/8476#issuecomment-863914186,1,['test'],['test']
Testability,"Sure! I just opened the PR already because it's easy to do in one go, and then I don't forget it later :) If the master commits get some changes because of review requests, it's easy to update the backport PR and merge once the master PRs are merged. Also, I can get 6.32 test coverage already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15486#issuecomment-2107022927:272,test,test,272,https://root.cern,https://github.com/root-project/root/pull/15486#issuecomment-2107022927,1,['test'],['test']
Testability,"Sure, I'm not saying it's impossible, just that the potentially obvious approach to pass the hash as `base_ref` doesn't work. A `git reset ${ github.sha }` might work, to be tested how it interacts with the rest of the system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061#issuecomment-1813958485:174,test,tested,174,https://root.cern,https://github.com/root-project/root/issues/14061#issuecomment-1813958485,1,['test'],['tested']
Testability,"Sure, and actually I am interested in having such kind of unit tests also in some custom pdfs I coded up and plan to push to Root if I have some free time.; I first have to get the root master compiled on my MacBook to run the unit tests or are those tests something which runs in the CI? Or are those tests something which runs as macros?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9539#issuecomment-1010257152:63,test,tests,63,https://root.cern,https://github.com/root-project/root/pull/9539#issuecomment-1010257152,4,['test'],['tests']
Testability,"Sure, but I'm testing ROOT here...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/493#issuecomment-292932089:14,test,testing,14,https://root.cern,https://github.com/root-project/root/pull/493#issuecomment-292932089,1,['test'],['testing']
Testability,"Sure, feel free to get back to me when you have a proposed fix and I'll see if it works :). I did a test locally on a clean 20.04 VM with the most minimal set of dependencies installed and the problem didn't occur there, so I'd guess it only appears with a particular configuration that I just happen to have being lucky with. If it helps, you can see the exact list of packages [here](https://github.com/MrCarroll/root-snap/blob/6925e2516007943701ce934eb5da03c7cac07fd4/snap/snapcraft.yaml#L30), which are installed on top of an LXC container of Ubuntu 20.04",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793595045:100,test,test,100,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793595045,1,['test'],['test']
Testability,Sure. [ROOT-HEAD-configure.log](https://github.com/root-project/root/files/12301180/ROOT-HEAD-configure.log). And the configuration line:; ```; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/tmp/dkonst/install/dev3cuda/ROOT/HEAD/x86_64-centos7-gcc11-opt -Dtmva-sofie=ON -Droot7=ON -Dpyroot=ON -DPYTHON_EXECUTABLE=/tmp/dkonst/install/dev3cuda/Python/3.9.12/x86_64-centos7-gcc11-opt/bin/python -Dbuiltin_lz4=ON -Dbuiltin_pcre=ON -Dbuiltin_xxhash=ON -Dbuiltin_ftgl=ON -Dbuiltin_afterimage=ON -Dbuiltin_glew=ON -Dbuiltin_unuran=ON -Dbuiltin_zstd=ON -Dcintex=ON -Dcuda=ON -Dtmva-gpu=ON -DCMAKE_CUDA_STANDARD=17 -Ddavix=ON -Dexceptions=ON -Dexplicitlink=ON -Dfftw3=ON -Dgdml=ON -Dhttp=ON -Dgenvector=ON -Dvc=ON -Dmathmore=ON -Dminuit2=ON -Dmysql=ON -Dopengl=ON -Dpgsql=OFF -Dpythia6=OFF -Dpythia8=OFF -Dreflex=ON -Dr=OFF -Droofit=ON -Dssl=ON -Dunuran=ON -Dfortran=ON -Dxft=ON -Dxml=ON -Dxrootd=ON -Dzlib=ON -DCINTMAXSTRUCT=36000 -DCINTMAXTYPEDEF=36000 -DCINTLONGLINE=4096 -Dfail-on-missing=ON;-Dfitsio=ON -Doracle=OFF -DCMAKE_CXX_STANDARD=17 -Ddcache=ON -Doracle=ON -DORACLE_HOME=/tmp/dkonst/install/dev3cuda/oracle/19.19.0.0.0/x86_64-centos7-gcc11-opt -Dbuiltin_nlohmannjson=OFF -Droofit_multiprocess=OFF /tmp/dkonst/build/projects/ROOT-HEAD/src/ROOT/HEAD; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415#issuecomment-1671081029:27,log,log,27,https://root.cern,https://github.com/root-project/root/issues/13415#issuecomment-1671081029,2,['log'],['log']
Testability,"Surely directly including the Vc headers in the GenVector headers is not really an option, as doing so would then require the headers to always be available, which may not be the case in some builds ? Or are you suggesting this just as a test ? if so, I am sure it will work, but not really sure how it would help going forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286427446:238,test,test,238,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286427446,1,['test'],['test']
Testability,Switch from heuristics discovery of a friend state change (i.e. a friend that is a TChain and move from one file to the other) to a push notification of the change (via the TFriendElement object). This increase coupling between the main and friend TTree/TChain and thus need to be thoroughly tested before being considered for backport.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4913:292,test,tested,292,https://root.cern,https://github.com/root-project/root/pull/4913,1,['test'],['tested']
Testability,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`; ```; tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz ; cd artv3_09; source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh; source setup.sh; scons -j 8; mu2e -c bug.fcl; ```; This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8428#issuecomment-875583779:130,test,tests,130,https://root.cern,https://github.com/root-project/root/issues/8428#issuecomment-875583779,1,['test'],['tests']
Testability,Syntax error leads to interpreter assert with `Must not nest within unloading transaction` when reading object,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11651:34,assert,assert,34,https://root.cern,https://github.com/root-project/root/issues/11651,1,['assert'],['assert']
Testability,System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//ApplicationServices.framework/Versions/A/ApplicationServices.tbd and library file /System/Library/Frameworks//ApplicationServices.framework/Versions/A/ApplicationServices are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//Foundation.framework/Versions/C/Foundation.tbd and library file /System/Library/Frameworks//Foundation.framework/Versions/C/Foundation are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//CoreGraphics.framework/Versions/A/CoreGraphics.tbd and library file /System/Library/Frameworks//CoreGraphics.framework/Versions/A/CoreGraphics are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//CoreText.framework/Versions/A/CoreText.tbd and library file /System/Library/Frameworks//CoreText.framework/Versions/A/CoreText are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//ImageIO.framework/Versions/A/ImageIO.tbd and library file /System/Library/Frameworks//ImageIO.framework/Versions/A/ImageIO are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS.tbd and library file /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//CoreServices.framework/Versions/A/CoreServices.tbd and library file /System/Library/Frameworks//CoreServices.framework/Versions/A/CoreSer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-425910179:1736,stub,stub,1736,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-425910179,3,['stub'],['stub']
Testability,"System::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615; #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395; #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:2720,test,tests,2720,https://root.cern,https://github.com/root-project/root/issues/12957,2,['test'],"['testBuildDir', 'tests']"
Testability,"T in debug mode. ```; gcc --version; gcc (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. ```; /sbin/ldconfig -p | grep stdc++; 	libstdc++.so.6 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libstdc++.so.6; 	libstdc++.so.6 (libc6) => /usr/lib/i386-linux-gnu/libstdc++.so.6; 	libstdc++.so.6 (libc6) => /usr/lib32/libstdc++.so.6; ```. ```; root -b /tmp/test.cpp+; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing /tmp/test.cpp+...; In file included from test_cpp_ACLiC_dict dictionary payload:8:; /tmp/test.cpp:6:29: error: use of overloaded operator '+' is ambiguous (with operand types 'TString' and 'std::__cxx11::string' (aka 'basic_string<char>')); TString tryit = other + ""h"" + std::to_string(2);; ~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~; /home/user/builds/build-root_src-Desktop-Debug/include/TString.h:49:9: note: candidate function; TString operator+(const TString &s1, const TString &s2);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TEveUtil.h:116:15: note: candidate function; TEveException operator+(const TEveException &s1, const std::string &s2);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TString.h:51:9: note: candidate function; TString operator+(const char *cs, const TString &s);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TEveUtil.h:117:15: note: candidate function; TEveException operator+(const TEveException &s1, const TString &s2);; ^; root.exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-870074605:1026,test,test,1026,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-870074605,1,['test'],['test']
Testability,"T!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2699,test,tests,2699,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['test'],"['testBuildDir', 'tests']"
Testability,T&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5516-mac1015-cxx17&date=2020-04-30).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/79744/console).; ### Warnings:; - [2020-04-30T14:59:27.381Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:38:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:56:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:74:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:94:12: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.382Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/test/datasource_root.cxx:124:41: warning: 'RRootDS' is deprecated: will be removed in ROOT v6.24: RRootDS will be removed from the public namespace. Please use standard RDataFrame constructors and interfaces instead [-Wdeprecated-declarations] ; - [2020-04-30T14:59:27.3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5516#issuecomment-621922856:1211,test,test,1211,https://root.cern,https://github.com/root-project/root/pull/5516#issuecomment-621922856,1,['test'],['test']
Testability,T&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6016-ROOT-fedora31-noimt&date=2020-07-09).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/console).; ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_branchlessForest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_branchlessForest/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rbdt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rbdt/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_readcomplex/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_readClassWithComplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_readClassWithComplex/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_unorderedSet](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89439/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_unordere,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-656265880:1156,test,test,1156,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-656265880,1,['test'],['test']
Testability,"T': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py') at remote 0x7faec0f08c10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), co=0x7faec0dc55b0, tstate=0xbea650) at Python/pythonrun.c:1221; #17 run_mod (mod=<optimized out>, filename=filename; entry='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', globals=globals; entry={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoad",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:31164,test,test,31164,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['test'],['test']
Testability,"T': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py') at remote 0x7faec0f08c10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), start=0x101, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:1140; #19 pyrun_simple_file (flags=0x7ffc080e6778, closeit=<optimized out>, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:450; #2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:35743,test,test,35743,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['test'],['test']
Testability,"T(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1834:7; #107 0x00000000040e16ad clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__2::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1888:31; #108 0x0000000008afe5da clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:2088:49; #109 0x0000000008af9c5a clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1792:17; #110 0x0000000008afa308 clang::Preprocessor::HandleDirective(clang::Token&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1094:14; #111 0x0000000008abe5f3 clang::Lexer::LexTokenInternal(clang::Token&, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:4013:7; #112 0x0000000008abac44 clang::Lexer::Lex(clang::Token&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3228:8; #113 0x0000000008b4686f clang::Preprocessor::Lex(clang::Token&) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:931:21; #114 0x000000000375b20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:53915,test,test-products,53915,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['test'],['test-products']
Testability,"T, Vc_1::VectorAbi::Scalar&gt;::reinterpretCast() const’ is deprecated: use reinterpret_components_cast instead [-Wdeprecated-declarations] ; - [2020-08-11T17:19:48.258Z] include/Vc/scalar/vector.h:218:55: warning: ‘V2 Vc_1::Vector&lt;T, Vc_1::VectorAbi::Scalar&gt;::reinterpretCast() const’ is deprecated: use reinterpret_components_cast instead [-Wdeprecated-declarations] ; - [2020-08-11T17:20:07.294Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92298/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.io.io.test.gtest_io_io_test_RIoUring](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92298/testReport/projectroot.io.io/test/gtest_io_io_test_RIoUring/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92298/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92298/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92298/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92298/testReport/projectroot.roottest.pyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-672124979:1761,test,testReport,1761,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-672124979,1,['test'],['testReport']
Testability,"T, Vc_1::VectorAbi::Scalar&gt;::reinterpretCast() const’ is deprecated: use reinterpret_components_cast instead [-Wdeprecated-declarations] ; - [2020-08-11T18:42:05.687Z] include/Vc/scalar/vector.h:218:55: warning: ‘V2 Vc_1::Vector&lt;T, Vc_1::VectorAbi::Scalar&gt;::reinterpretCast() const’ is deprecated: use reinterpret_components_cast instead [-Wdeprecated-declarations] ; - [2020-08-11T18:42:18.695Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92323/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.io.io.test.gtest_io_io_test_RIoUring](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92323/testReport/projectroot.io.io/test/gtest_io_io_test_RIoUring/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92323/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92323/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92323/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92323/testReport/projectroot.rootte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-672196779:1761,test,testReport,1761,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-672196779,1,['test'],['testReport']
Testability,T-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5427-ROOT-debian10-i386-cxx14&date=2020-04-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77833/console).; ### Warnings:; - [2020-04-22T11:28:06.020Z] /home/sftnight/build/workspace/root-pullrequests-build/root/gui/webdisplay/src/RWebWindow.cxx:571:22: warning: comparison of integer expressions of different signedness: ‘unsigned int’ and ‘Long_t’ {aka ‘long int’} [-Wsign-compare] . ### Failing tests:; - [projectroot.test.test_stressentrylist_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77833/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.core.meta.test.gtest_core_meta_test_testTEnum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77833/testReport/projectroot.core.meta/test/gtest_core_meta_test_testTEnum/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77833/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_unorderedSet](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77833/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_unorderedSet/); - [projectroot.roottest.root.math.smatrix.roottest_root_math_smatrix_testSMatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77833/testReport/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testSMatrix/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://lcgapp-services,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5427#issuecomment-617734887:1033,test,testReport,1033,https://root.cern,https://github.com/root-project/root/pull/5427#issuecomment-617734887,1,['test'],['testReport']
Testability,T-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6286-ROOT-debian10-i386-cxx14&date=2020-09-02).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94498/console).; ### Warnings:; - [2020-09-02T07:47:21.803Z] /home/sftnight/build/workspace/root-pullrequests-build/root/gui/webdisplay/src/RWebWindow.cxx:571:22: warning: comparison of integer expressions of different signedness: ‘unsigned int’ and ‘Long_t’ {aka ‘long int’} [-Wsign-compare] . ### Failing tests:; - [projectroot.test.test_stressentrylist_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94498/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.core.meta.test.gtest_core_meta_test_testTEnum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94498/testReport/projectroot.core.meta/test/gtest_core_meta_test_testTEnum/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94498/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_unorderedSet](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94498/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_unorderedSet/); - [projectroot.roottest.root.math.smatrix.roottest_root_math_smatrix_testSMatrix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94498/testReport/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testSMatrix/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://lcgapp-services,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6286#issuecomment-685426827:1033,test,testReport,1033,https://root.cern,https://github.com/root-project/root/pull/6286#issuecomment-685426827,1,['test'],['testReport']
Testability,T-fedora27/noimt.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/console).; ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_handlers_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_handlers_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_utils_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_utils_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_importROOT_notebook](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_importROOT_notebook/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_simpleCppMagic_notebook](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_simpleCppMagic_notebook/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56147/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1Prepar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616#issuecomment-478312271:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/3616#issuecomment-478312271,1,['test'],['testReport']
Testability,T-fedora30/cxx14.; Running on root-fedora30-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/console).; ### Failing tests:; - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_default_compr_level9_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_default_compr_level9_datageneration/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lz4_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_default_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lzma_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lzma_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplek_default_compr_deflevel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102376/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplek_default_compr_deflevel/); - [pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6854#issuecomment-731510243:1033,test,testReport,1033,https://root.cern,https://github.com/root-project/root/pull/6854#issuecomment-731510243,1,['test'],['testReport']
Testability,T-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111616/console).; ### Warnings:; - [2021-03-22T08:53:50.967Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter ‘nSlots’ [-Wunused-parameter] ; - [2021-03-22T08:53:50.967Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter ‘nSlots’ [-Wunused-parameter] ; - [2021-03-22T08:54:19.673Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx:274:61: warning: unused parameter ‘nSlots’ [-Wunused-parameter] . ### Failing tests:; - [projectroot.test.test_stressIOPlugins_http](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111616/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stresshistogram_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111616/testReport/projectroot/test/test_stresshistogram_interpreted/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111616/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.net.davix.test.gtest_net_davix_test_RRawFileDavix](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111616/testReport/projectroot.net.davix/test/gtest_net_davix_test_RRawFileDavix/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111616/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rreader](https://lcgapp-services.cern.ch/root-jenkins/job/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-803902120:1009,test,testReport,1009,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-803902120,2,['test'],"['test', 'testReport']"
Testability,T-performance-centos7-multicore-default&date=2020-04-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75260/console).; ### Warnings:; - [2020-04-06T10:55:55.578Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:20: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/TROOT.h:99): Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:55:55.578Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:42: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/TROOT.h:99): Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:55:55.578Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:20: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/TROOT.h:99): Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:55:55.578Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:392:42: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/TROOT.h:99): Please use ROOT::GetThreadPoolSize() instead [-Wdeprecated-declarations] ; - [2020-04-06T10:55:55.579Z] /data/sftnight/workspace/root-pullrequests-build/root/tree/treeplayer/test/treeprocmt/treeprocessormt.cxx:395:23: warning: ‘UInt_t ROOT::GetImplicitMTPoolSize()’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/build/include/TROOT.h:99): Please use ROOT::GetThreadPoolSize() instead ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5290#issuecomment-609727798:1208,test,test,1208,https://root.cern,https://github.com/root-project/root/pull/5290#issuecomment-609727798,1,['test'],['test']
Testability,T-performance-centos7-multicore/default.; Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5591-ROOT-performance-centos7-multicore-default&date=2020-06-11).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/console).; ### Failing tests:; - [projectroot.core.imt.test.gtest_core_imt_test_testImt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot.core.imt/test/gtest_core_imt_test_testImt/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTF1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTF1/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooFormula](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooFormula/); - [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86480/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-642535996:1033,test,testReport,1033,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-642535996,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_zeroentries](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_zeroentries/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_definepersample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_definepersample/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_samplecallback](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/148747/testReport/projectroot.tree.dataframe/test/pyunitte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10854#issuecomment-1171047106:987,test,test,987,https://root.cern,https://github.com/root-project/root/pull/10854#issuecomment-1171047106,1,['test'],['test']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/console).; ### Warnings:; - [2022-10-04T13:06:58.831Z] /data/sftnight/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:722:1: warning: ‘noreturn’ function does return . ### Failing tests:; - [projectroot.runtutorials.tutorial_pyroot_fillrandom_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial_pyroot_fillrandom_py/); - [projectroot.runtutorials.tutorial_pyroot_hsimple_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial_pyroot_hsimple_py/); - [projectroot.runtutorials.tutorial_roofit_rf502_wspacewrite_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial_roofit_rf502_wspacewrite_py/); - [projectroot.runtutorials.tutorial_pyroot_geometry_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial_pyroot_geometry_py/); - [projectroot.runtutorials.tutorial_.rootlogon_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial__rootlogon_py/); - [projectroot.runtutorials.tutorial_dataframe_df000_simple_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial_dataframe_df000_simple_py/); - [projectroot.runtutorials.tutorial_dataframe_df002_dataModel_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156316/testReport/projectroot/runtutorials/tutorial_dataframe_df002_dataModel_py/); - [projectroot.runtutorials.tutorial_dataframe_df001_introduction_py](https://lcgapp-services.cern.ch/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443#issuecomment-1266999054:999,test,testReport,999,https://root.cern,https://github.com/root-project/root/pull/11443#issuecomment-1266999054,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160664/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11830#issuecomment-1337503041:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11830#issuecomment-1337503041,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160671/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11825#issuecomment-1337578030:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11825#issuecomment-1337578030,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160678/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11701#issuecomment-1337618830:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11701#issuecomment-1337618830,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160685/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11828#issuecomment-1337664500:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11828#issuecomment-1337664500,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160699/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11832#issuecomment-1337728155:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11832#issuecomment-1337728155,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160720/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11835#issuecomment-1337900962:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11835#issuecomment-1337900962,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160748/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11838#issuecomment-1338148854:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11838#issuecomment-1338148854,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160755/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11828#issuecomment-1338188323:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11828#issuecomment-1338188323,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160762/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11839#issuecomment-1338225035:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11839#issuecomment-1338225035,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160776/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11840#issuecomment-1338318669:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11840#issuecomment-1338318669,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160783/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11820#issuecomment-1338906853:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11820#issuecomment-1338906853,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160825/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11842#issuecomment-1339028867:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11842#issuecomment-1339028867,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160846/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11842#issuecomment-1339142323:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11842#issuecomment-1339142323,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160853/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843#issuecomment-1339207656:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11843#issuecomment-1339207656,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160867/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11842#issuecomment-1339267658:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11842#issuecomment-1339267658,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160909/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11845#issuecomment-1339407397:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11845#issuecomment-1339407397,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160916/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339448183:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339448183,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160930/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339529480:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339529480,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160937/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843#issuecomment-1339569243:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11843#issuecomment-1339569243,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160951/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1339732950:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1339732950,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160958/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11838#issuecomment-1340193797:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11838#issuecomment-1340193797,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160972/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11400#issuecomment-1340597753:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11400#issuecomment-1340597753,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160986/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11400#issuecomment-1340736201:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11400#issuecomment-1340736201,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/160993/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526#issuecomment-1340802854:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340802854,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161014/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731#issuecomment-1340932338:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1340932338,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp104_processH1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_multicore_mp104_processH1/); - [projectroot.runtutorials.tutorial_hist_ContourList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_hist_ContourList/); - [projectroot.runtutorials.tutorial_hist_hsum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_hist_hsum/); - [projectroot.runtutorials.tutorial_hist_hsumTimer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_hist_hsumTimer/); - [projectroot.runtutorials.tutorial_hist_candleplotstack](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_hist_candleplotstack/); - [projectroot.runtutorials.tutorial_hist_statsEditing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_hist_statsEditing/); - [projectroot.runtutorials.tutorial_hist_transpad](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_hist_transpad/); - [projectroot.runtutorials.tutorial_legacy_mlp_mlpRegression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/161056/testReport/projectroot/runtutorials/tutorial_legacy_mlp_mlpRegression/); - [projectroot.runtutorials.tutorial_multicore_mp105_processEntryList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11850#issuecomment-1341580532:1006,test,testReport,1006,https://root.cern,https://github.com/root-project/root/pull/11850#issuecomment-1341580532,1,['test'],['testReport']
Testability,T-performance-centos8-multicore/default.; Running on null:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/console).; ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.test.test_stresshistofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot/test/test_stresshistofit/); - [projectroot.math.genetic.test.genetic_GAMinTutorial](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot.math.genetic/test/genetic_GAMinTutorial/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testFit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot.math.mathcore/test/mathcore_testFit/); - [projectroot.test.test_stressHistFactory_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_fit_fitNormSum](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102984/testReport/projectroot/runtutorials/tutori,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-735859102:996,test,test,996,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-735859102,1,['test'],['test']
Testability,T-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122324/console).; ### Warnings:; - [2021-07-09T19:33:05.938Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooMinimizer.cxx:827:1: warning: control reaches end of non-void function [-Wreturn-type] ; - [2021-07-09T19:33:05.938Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooMinimizer.cxx:849:1: warning: control reaches end of non-void function [-Wreturn-type] ; - [2021-07-09T19:33:06.516Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooMinimizer.cxx:282:11: warning: ‘ret’ may be used uninitialized in this function [-Wmaybe-uninitialized] . ### Failing tests:; - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122324/testReport/projectroot/test/test_stressroofit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooGradMinimizer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122324/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooGradMinimizer/); - [projectroot.test.test_stressroofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122324/testReport/projectroot/test/test_stressroofit_interpreted/); - [projectroot.runtutorials.tutorial_roofit_rf601_intminuit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122324/testReport/projectroot/runtutorials/tutorial_roofit_rf601_intminuit/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testNaNPacker](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/122324/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testNaNPacker/); - [projectroot.runtutorials.tuto,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-877418615:1013,test,testReport,1013,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-877418615,2,['test'],"['test', 'testReport']"
Testability,T-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/console).; ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_buildranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_buildranges/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_node](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_node/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/114329/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_dist](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-819468701:987,test,test,987,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-819468701,1,['test'],['test']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.hist.operator.roottest_root_hist_operator_runcopy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/testReport/projectroot.roottest.root.hist/operator/roottest_root_hist_operator_runcopy/); - [projectroot.roottest.root.hist.misc.roottest_root_hist_misc_runownership](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62173/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-506506886:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-506506886,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62294/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-507062396:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-507062396,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62300/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-507065198:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-507065198,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.hist.operator.roottest_root_hist_operator_runcopy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/testReport/projectroot.roottest.root.hist/operator/roottest_root_hist_operator_runcopy/); - [projectroot.roottest.root.hist.misc.roottest_root_hist_misc_runownership](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62612/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-508581275:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-508581275,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.hist.formula.roottest_root_hist_formula_runconstargs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62661/testReport/projectroot.roottest.root.hist/formula/roottest_root_hist_formula_runconstargs/); - [projectroot.roottest.root.hist.operator.roottest_root_hist_operator_runcopy](https://epsft-jenkins.cern.ch/job/root-pullrequests-buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-508694751:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-508694751,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.hist.operator.roottest_root_hist_operator_runcopy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62686/testReport/projectroot.roottest.root.hist/operator/roottest_root_hist_operator_runcopy/); - [projectroot.roottest.root.hist.formula.roottest_root_hist_formula_runconstargs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-508957872:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-508957872,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62698/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.root.hist.operator.roottest_root_hist_operator_runcopy](https://epsft-jenkins.cern.ch/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4005#issuecomment-509027055:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4005#issuecomment-509027055,1,['test'],['testReport']
Testability,T-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/console).; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:863 (message): . ### Failing tests:; - [projectroot.test.test_stressvector_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot/test/test_stressvector_interpreted/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execReadOldCSC](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execReadOldCSC/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64514/testReport/projectroot.roottest.root.meta/loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4156#issuecomment-519206987:1026,test,testReport,1026,https://root.cern,https://github.com/root-project/root/pull/4156#issuecomment-519206987,1,['test'],['testReport']
Testability,T-ubuntu2204/nortcxxmod.; Running on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.experimental.distrdf.test.backend.pyunittests_distrdf_unit_backend_test_common](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot.bindings.experimental.distrdf.test/backend/pyunittests_distrdf_unit_backend_test_common/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_roofit_rooabscollection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_roofit_rooabscollection/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_string_view_backport](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_string_view_backport/); - [projectroot.core.metacling.test.gtest_core_metacling_test_TClingTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_TClingTest/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/180931/testReport/projectroot.roottest.cling/typedef_globa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341#issuecomment-1653781939:994,test,test,994,https://root.cern,https://github.com/root-project/root/pull/13341#issuecomment-1653781939,1,['test'],['test']
Testability,T.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:2941,test,testReport,2941,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['testReport']
Testability,"T/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:14.704Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:14.704Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:14.704Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_callbacks.dir/dataframe_callbacks.cxx.o ; - [2022-02-15T17:12:16.080Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" ; - [2022-02-15T17:12:16.081Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_regression.dir/dataframe_regression.cxx.o ; - [2022-02-15T17:12:17.981Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:489:7: error: static_assert failed due to requirement '1UL &lt; 0' ""When filling an object with RDataFrame (e.g. via a Fill action) the number or types of the columns passed did not match the signature of the object's `Fill` method."" . And 2 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895#issuecomment-1040547919:2025,test,test,2025,https://root.cern,https://github.com/root-project/root/pull/9895#issuecomment-1040547919,2,['test'],['test']
Testability,T/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] ; - [2022-12-21T18:27:14.377Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDataSource.hxx:213:11: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes] . And 54 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_datasetspec/); - [projectroot.runtutorials.tutorial_roostats_FourBinInstructional](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot/runtutorials/tutorial_roostats_FourBinInstructional/); - [projectroot.runtutorials.tutorial_roostats_IntervalExamples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot/runtutorials/tutorial_roostats_IntervalExamples/); - [projectroot.runtutorials.tutorial_roostats_OneSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot/runtutorials/tutorial_roostats_OneSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_StandardFeldmanCousinsDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot/runtutorials/tutorial_roostats_StandardFeldmanCousinsDemo/); - [projectroot.runtutorials.tutorial_roostats_TwoSidedFrequentistUpperLimitWithBands](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot/runtutorials/tutorial_roostats_TwoSidedFrequentistUpperLimitWithBands/); - [projectroot.runtutorials.tutorial_roostats_rs101_limitexample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163013/testReport/projectroot/runtutorials/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361990206:4643,test,testReport,4643,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361990206,1,['test'],['testReport']
Testability,T/RStringView.hxx:58:42: warning: extra tokens at end of #ifndef directive ; - [2021-05-06T13:26:08.285Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RStringView.hxx:17:31: warning: extra tokens at end of #ifdef directive ; - [2021-05-06T13:26:08.578Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RStringView.hxx:58:42: warning: extra tokens at end of #ifndef directive ; - [2021-05-06T13:26:08.578Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RStringView.hxx:17:31: warning: extra tokens at end of #ifdef directive ; - [2021-05-06T13:26:08.578Z] /data/sftnight/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RStringView.hxx:58:42: warning: extra tokens at end of #ifndef directive . And 4420 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116955/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXML,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108#issuecomment-833537392:2298,test,testReport,2298,https://root.cern,https://github.com/root-project/root/pull/8108#issuecomment-833537392,1,['test'],['testReport']
Testability,T08:23:47.891Z] /home/sftnight/build/workspace/root-pullrequests-build/build/math/mathcore/G__MathCore.cxx:458:123: warning: integer constant is so large that it is unsigned ; - [2020-10-01T08:23:47.891Z] /home/sftnight/build/workspace/root-pullrequests-build/build/math/mathcore/G__MathCore.cxx:458:193: warning: integer constant is so large that it is unsigned ; - [2020-10-01T08:23:47.891Z] /home/sftnight/build/workspace/root-pullrequests-build/build/math/mathcore/G__MathCore.cxx:461:80: warning: integer constant is so large that it is unsigned . And 81 more. ### Failing tests:; - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_examples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97601/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_examples/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97601/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97601/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97601/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.runtutorials.tutorial_math_Bessel](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97601/testReport/projectroot/runtutorials/tutorial_math_Bessel/); - [projectroot.runtutorials.tutorial_math_Legendre](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97601/testReport/projectroot/runtutorials/tutorial_math_Legendre/); - [projectroot.runtutorials.tutorial_math_LegendreAssoc](https://lcgapp-services.ce,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-701988900:2710,test,testReport,2710,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-701988900,1,['test'],['testReport']
Testability,T08:50:44.654Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:67:52: warning: unused typedef 'DeclLink_t' [-Wunused-local-typedef] . ### Failing tests:; - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_asnumpy/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic03](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclic03/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclic01](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106390/testReport/projectroot.roottest.root.io/stdarra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777317351:2301,test,test,2301,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777317351,1,['test'],['test']
Testability,"T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/projectroot.roottest.cling/other/roottest_cling_other_runsprintfselect/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/testReport/p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1273169240:2562,test,testReport,2562,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1273169240,1,['test'],['testReport']
Testability,T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-21T11:46:16.274Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_multicore_mp101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/); - [projectroot.runtutorials.tutorial_multicore_mt101_fillNtuples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot/runtutorials/tutorial_multicore_mt101_fillNtuples/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154836/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/);,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253647669:3564,test,tests,3564,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253647669,1,['test'],['tests']
Testability,T17:29:39.351Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T17:29:39.351Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T17:29:39.351Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T17:29:39.351Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df010_trivialDataSource_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154773/testReport/projectroot/runtutorials/tutorial_dataframe_df010_trivialDataSource_py/); - [projectroot.runtutorials.tutorial_dataframe_distrdf001_spark_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154773/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf001_spark_connection_py/); - [projectroot.runtutorials.tutorial_dataframe_distrdf002_dask_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154773/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf002_dask_connection_py/); - [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154773/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification_py/); - [projectroot.runtutorials.tutor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11393#issuecomment-1252746563:1259,test,tests,1259,https://root.cern,https://github.com/root-project/root/pull/11393#issuecomment-1252746563,1,['test'],['tests']
Testability,T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:18:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:19:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:27:21: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:29:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:1843,test,test,1843,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,1,['test'],['test']
Testability,T17:58:54.398Z] /home/sftnight/build/workspace/root-pullrequests-build/build/math/mathcore/G__MathCore.cxx:458:123: warning: integer constant is so large that it is unsigned ; - [2020-11-03T17:58:54.398Z] /home/sftnight/build/workspace/root-pullrequests-build/build/math/mathcore/G__MathCore.cxx:458:193: warning: integer constant is so large that it is unsigned ; - [2020-11-03T17:58:54.398Z] /home/sftnight/build/workspace/root-pullrequests-build/build/math/mathcore/G__MathCore.cxx:461:80: warning: integer constant is so large that it is unsigned . And 81 more. ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100896/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100896/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100896/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100896/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100896/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/10089,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-721293583:2678,test,test,2678,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-721293583,1,['test'],['test']
Testability,T18:37:55.379Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:99:21: warning: 'construct' is deprecated [-Wdeprecated-declarations] ; - [2021-05-04T18:37:55.379Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:99:21: warning: 'construct&lt;unsigned long&gt;' is deprecated [-Wdeprecated-declarations] ; - [2021-05-04T18:37:55.379Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:140:54: warning: 'max_size' is deprecated [-Wdeprecated-declarations] ; - [2021-05-04T18:37:55.380Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/vecops/inc/ROOT/RAdoptAllocator.hxx:128:24: warning: 'destroy' is deprecated [-Wdeprecated-declarations] . And 1512 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_trainCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116803/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_trainCache/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116803/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116803/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/116803/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8094#issuecomment-832191120:2542,test,testReport,2542,https://root.cern,https://github.com/root-project/root/pull/8094#issuecomment-832191120,1,['test'],['testReport']
Testability,T19:26:26.091Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T19:26:26.091Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T19:26:26.091Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T19:26:26.091Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154787/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154787/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154787/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252865772:1259,test,tests,1259,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252865772,1,['test'],['tests']
Testability,T20:36:35.738Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T20:36:35.738Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T20:36:35.738Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T20:36:35.738Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df010_trivialDataSource_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154794/testReport/projectroot/runtutorials/tutorial_dataframe_df010_trivialDataSource_py/); - [projectroot.runtutorials.tutorial_dataframe_distrdf001_spark_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154794/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf001_spark_connection_py/); - [projectroot.runtutorials.tutorial_dataframe_distrdf002_dask_connection_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154794/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf002_dask_connection_py/); - [projectroot.runtutorials.tutorial_tmva_TMVA_CNN_Classification_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154794/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_CNN_Classification_py/); - [projectroot.runtutorials.tutor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11334#issuecomment-1252936297:1259,test,tests,1259,https://root.cern,https://github.com/root-project/root/pull/11334#issuecomment-1252936297,1,['test'],['tests']
Testability,T21:29:44.876Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:655:65: warning: unused parameter 'eyl' [-Wunused-parameter] ; - [2022-01-31T21:29:44.876Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:655:74: warning: unused parameter 'eyh' [-Wunused-parameter] ; - [2022-01-31T21:29:47.319Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:655:27: warning: unused parameter 'slot' [-Wunused-parameter] ; - [2022-01-31T21:29:47.320Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:655:35: warning: unused parameter 'x' [-Wunused-parameter] ; - [2022-01-31T21:29:47.320Z] /Volumes/HDD2/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:655:40: warning: unused parameter 'y' [-Wunused-parameter] . And 340 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/135958/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/135958/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/135958/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_ctors](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/135958/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_ctors/); - [projectroot.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9760#issuecomment-1026274638:2245,test,tests,2245,https://root.cern,https://github.com/root-project/root/pull/9760#issuecomment-1026274638,1,['test'],['tests']
Testability,T22:05:49.384Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T22:05:49.385Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'N' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T22:05:49.385Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever 'if' condition is false [-Wsometimes-uninitialized] ; - [2022-09-20T22:05:49.385Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/tmva/sofie/inc/TMVA/ROperator_Softmax.hxx:97:21: warning: variable 'iStride' is used uninitialized whenever '&&' condition is false [-Wsometimes-uninitialized] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154801/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154801/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154801/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252999958:1259,test,tests,1259,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252999958,1,['test'],['tests']
Testability,"T; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib64/libopenblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabled; -- libcxxabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Could NOT find Python module pygments; -- Could NOT find Python module pygments.lexers.c_cpp; -- Could NOT find Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3.8 (found suitable version ""3.8.17"", minimum required is ""3.0"") found components: Interpreter; -- Linker detection: GNU ld; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:8293,test,tests,8293,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,1,['test'],['tests']
Testability,TBranchProxy: Improve logic of fBranchCount/fLeafCount,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13277:22,log,logic,22,https://root.cern,https://github.com/root-project/root/pull/13277,1,['log'],['logic']
Testability,"TChainParsing test error isn't related to what I'm doing here. It looks like someone tried to compare filesystem paths via string comparisons, which isn't a good idea:. ```; /build/workspace/root-pullrequests-build/root/tree/tree/test/TChainParsing.cxx:26: Failure; Expected: files->At(4)->GetTitle(); Which is: ""root://some.domain/path/to/file.root""; To be equal to: ""root://some.domain/path//to/file.root""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591452192:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591452192,2,['test'],['test']
Testability,"TClass.cxx:886; #36 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0xb2a9130, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957; #37 0x0000150891e9baef in TClass::CallShowMembers (this=0xb2a9130, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225; #38 0x0000150891e9afe7 in TClass::BuildRealData (this=0xb2a9130, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2080; #39 0x0000150891e949e5 in TBuildRealData::Inspect (this=0x7ffeced6e680, cl=0xb2a78e0, pname=0xb10ac90 """", mname=0x7ffeced6e2b0 ""data_"", add=0x28, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:886; #40 0x0000150892fedfa8 in TCling::InspectMembers (this=0x18e4a50, insp=..., obj=0x0, cl=0xb2a78e0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/metacling/src/TCling.cxx:2957; #41 0x0000150891e9baef in TClass::CallShowMembers (this=0xb2a78e0, obj=0x0, insp=..., isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:2225; #42 0x0000150891e9afe7 in TClass::BuildRealData (this=0xb2a78e0, pointer=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2331366418:15778,test,tests,15778,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2331366418,2,['test'],"['testBuildDir', 'tests']"
Testability,"TClass::GetClass(""""); would **not** lead to this; assert.  One really has to try creating a TClass with a null string.; (i.e call new TClass("""" ...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1175#issuecomment-335871662:50,assert,assert,50,https://root.cern,https://github.com/root-project/root/pull/1175#issuecomment-335871662,1,['assert'],['assert']
Testability,TCling.cxx:1270:29: warning: lambda capture 'EnvPathDelimiter' is not required to be captured for this use [-Wunused-lambda-capture] . ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.newstl.roottest_root_io_newstl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root.io/newstl/roottest_root_io_newstl_make/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_8](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_8/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_9](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_9/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_10](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_10/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_11](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_11/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_meta_genreflex_XMLParsing_12](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/70056/testReport/projectroot.roottest.root.meta.genreflex/XMLParsing/roottest_root_meta_genreflex_XMLParsing_12/); - [projectroot.roottest.root.meta.genreflex.XMLParsing.roottest_root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-541457030:1225,test,testReport,1225,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-541457030,1,['test'],['testReport']
Testability,TClingDataMemberInfo.Offset test fails on s390x,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:28,test,test,28,https://root.cern,https://github.com/root-project/root/issues/14512,1,['test'],['test']
Testability,"TClingTest.vcxproj] ; - [2022-03-15T12:18:02.642Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(49,21): error C2039: 'ReportDiagnosticsToErrorHandler': is not a member of 'TInterpreter' [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2022-03-15T12:18:02.642Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(46,21): error C2039: 'ReportDiagnosticsToErrorHandler': is not a member of 'TInterpreter' [C:\build\workspace\root-pullrequests-build\build\io\io\test\TFileMerger.vcxproj] ; - [2022-03-15T12:18:02.642Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(49,21): error C2039: 'ReportDiagnosticsToErrorHandler': is not a member of 'TInterpreter' [C:\build\workspace\root-pullrequests-build\build\io\io\test\TFileMerger.vcxproj] ; - [2022-03-15T12:18:03.888Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(46,21): error C2039: 'ReportDiagnosticsToErrorHandler': is not a member of 'TInterpreter' [C:\build\workspace\root-pullrequests-build\build\hist\hist\test\TFormulaGradientTests.vcxproj] ; - [2022-03-15T12:18:03.888Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(49,21): error C2039: 'ReportDiagnosticsToErrorHandler': is not a member of 'TInterpreter' [C:\build\workspace\root-pullrequests-build\build\hist\hist\test\TFormulaGradientTests.vcxproj] ; - [2022-03-15T12:18:06.635Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(46,21): error C2039: 'ReportDiagnosticsToErrorHandler': is not a member of 'TInterpreter' [C:\build\workspace\root-pullrequests-build\build\core\metacling\test\TClingTest.vcxproj] ; - [2022-03-15T12:18:06.635Z] C:\build\workspace\root-pullrequests-build\root\test\unit_testing_support\ROOTUnitTestSupport.h(49,21): error C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10120#issuecomment-1067924356:2118,test,test,2118,https://root.cern,https://github.com/root-project/root/pull/10120#issuecomment-1067924356,1,['test'],['test']
Testability,"TD.cxx:85:68: warning: integer constant is so large that it is unsigned ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:46:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:47:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:49:85: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] . ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66950/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-527247537:1448,test,test,1448,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-527247537,1,['test'],['test']
Testability,"TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12001#issuecomment-1377325038:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12001#issuecomment-1377325038,1,['test'],['testReport']
Testability,"TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999#issuecomment-1377492323:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/11999#issuecomment-1377492323,1,['test'],['testReport']
Testability,"TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044#issuecomment-1398340124:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12044#issuecomment-1398340124,1,['test'],['testReport']
Testability,"TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12026#issuecomment-1398383009:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12026#issuecomment-1398383009,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1398504617:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1398504617,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12075#issuecomment-1398618181:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12075#issuecomment-1398618181,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12070#issuecomment-1398698790:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12070#issuecomment-1398698790,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1398727440:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1398727440,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044#issuecomment-1398968394:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12044#issuecomment-1398968394,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1399178291:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1399178291,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079#issuecomment-1399642656:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12079#issuecomment-1399642656,1,['test'],['testReport']
Testability,"TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12085#issuecomment-1399969974:1385,test,testReport,1385,https://root.cern,https://github.com/root-project/root/pull/12085#issuecomment-1399969974,1,['test'],['testReport']
Testability,TEST COMMENT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6834#issuecomment-729584204:0,TEST,TEST,0,https://root.cern,https://github.com/root-project/root/pull/6834#issuecomment-729584204,1,['TEST'],['TEST']
Testability,TEST Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5130#issuecomment-597565135:0,TEST,TEST,0,https://root.cern,https://github.com/root-project/root/pull/5130#issuecomment-597565135,1,['TEST'],['TEST']
Testability,TEST PASSED Fe vs. Mix_3_Fe_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Mat_Fe_TGeo vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_1_Fe_TGeo vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_Fe_TGeo vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_3_Fe_TGeo vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED U vs. Mat_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED Mat_U_TGeo vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_1_U_TGeo vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_U_TGeo vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_3_U_TGeo vs. Mix_3_U_G4 Units: G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198355345:4168,TEST,TEST,4168,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345,1,['TEST'],['TEST']
Testability,"TExecutor tests are currently in here https://github.com/root-project/roottest/blob/master/root/multicore/, but I agree that it would be much nicer to move them to gtest and have them in root :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3558#issuecomment-474257513:10,test,tests,10,https://root.cern,https://github.com/root-project/root/pull/3558#issuecomment-474257513,1,['test'],['tests']
Testability,TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root/m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:3283,test,testReport,3283,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['testReport']
Testability,TGraph does not always have a list of functions.; fixes: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173815/testReport/projectroot/runtutorials/tutorial_graphics_AtlasExample/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12757:137,test,testReport,137,https://root.cern,https://github.com/root-project/root/pull/12757,1,['test'],['testReport']
Testability,TH=/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib:/scratch/greenc/test-products/xrootd/v5_4_3b/Linux64bit+3.10-2.17-c14-p3913-debug/lib:/scratch/greenc/test-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib64:/scratch/greenc/test-products/gcc/v12_1_0/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/lib:/scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/lib:/scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/lib:/scratch/greenc/test-products/python/v3_9_13/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/sqlite/v3_39_02_00/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/libxml2/v2_9_12/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/gsl/v2_7/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib:/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/lib/x86_64-unknown-linux-gnu:/scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/lib: /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/core/rootcling_stage1/src/rootcling_stage1 -v4 -f G__Core.cxx -cxxmodule -s /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/lib/libCore.so -excludePath /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99 -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/ginclude -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/externals -excludePath /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__CORREC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:1569,test,test-products,1569,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['test'],['test-products']
Testability,THIS IS TEST PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2875:8,TEST,TEST,8,https://root.cern,https://github.com/root-project/root/pull/2875,1,['TEST'],['TEST']
Testability,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:10600,test,testing,10600,https://root.cern,https://github.com/root-project/root/issues/12428,8,"['Test', 'test']","['Test', 'TestInfo', 'TestSuite', 'testing']"
Testability,"TL;DR: all benchmarks benefit from the patch, no other change in behavior observed. Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (4 physical cores); All times in seconds. ### `TTree::AsMatrix` benchmark (see [ROOT-9377](https://sft.its.cern.ch/jira/browse/ROOT-9377)); #### Master (no patch); ``` ; total interpreted: 5.23 ; loop interpreted: 4.1 ; compile -O3: 3.2 ; execute loop: 0.14; ````; These timings are consistent with the latest that were performed on this benchmark. ; ; #### With patch; ``` ; total interpreted: 1.5; loop interpreted: 0.37 ; compilation and loop execution: same as above (master no patch); ```; Interpreted loop takes the same time as with a non-optimized g++ compilation. ### Fons' benchmark (PROOF vs RDF, see [ROOT-9538](https://sft.its.cern.ch/jira/browse/ROOT-9538)); #### Master (no patch); ```; ---- run_dataframe.C ----; interpreted loop: 8; compile O3: 5; compiled loop: 5. --- run_dataframe_imt.C (4 threads) ---; interpreted loop: 6; compile O3: 5; compiled loop: 3; ```; #### With patch; ```; --- run_dataframe.C ---; interpreted: 5; compile -O3: 5; loop: 5. --- run_dataframe_imt.C (4 threads) ---; interpreted: 3; compile -O3: 5; loop: 3; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2674#issuecomment-424317989:11,benchmark,benchmarks,11,https://root.cern,https://github.com/root-project/root/pull/2674#issuecomment-424317989,4,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10626:1712,test,tested,1712,https://root.cern,https://github.com/root-project/root/pull/10626,1,['test'],['tested']
Testability,"TLDR: `TTree* TMVA::DataSet::GetTree` is missing a call to `tree->ResetBranchAddresses()` at the end. The interesting bit is that `TBufferFile::ReadInt` is being used even-though all the variables in the example (and indeed all their corresponding branches) are floats. So the issue is that the address of the Int branch:; ```; *Br 0 :classID : classID/I *; ```; is still set to an address that uses to be on the stack (according to valgrind). How can it be possible, you may ask. Well ... looking at the result of `fOutputFile->ls("""")` we notice:; ```; ....; OBJ: TTree TestTree TestTree : 0 at: 0x5555555eae70; ```; **even before** the call to `fOutputFile.Get(""dataset/TestTree"");`. This means that at point the `TTree` is already in memory (and already setup) and this prior loading is the likely place of the setting of the address to a local variable. It turns out that the `TTree` is created in `TTree* TMVA::DataSet::GetTree` at `DataSet.cxx:628` and later we have:; ```; UInt_t cls;; ...; tree->Branch( ""classID"", &cls, ""classID/I"" );; ...; return tree;; }; ```; At which point the `tree` is returns pointing to a bunch of now invalid memory location.; Using:; ```; tree->ResetBranchAddresses();; return tree;; }; ```; solves the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010#issuecomment-2080153300:571,Test,TestTree,571,https://root.cern,https://github.com/root-project/root/issues/10010#issuecomment-2080153300,3,['Test'],['TestTree']
Testability,"TLDR; for reference, the issue is described below. Implicit instantiation of a function template calls `DeclCollector::HandleCXXImplicitFunctionInstantiation()`, which appends the FunctionDecl to the transaction. According to the [docs](https://clang.llvm.org/doxygen/classclang_1_1ASTConsumer.html#a880e9a2fd04c8abd5cd218e0a4ed2e56), the body of the function has not yet been instantiated. `HandleTopLevelDecl()` will be called again for this decl at the end of the TU, which will append it again to the transaction -same `Decl *`, different DCI. This is by design. However, unloading of decls in the transaction should _not_ process the same `Decl *` twice. In the reported case, traversing the AST for a second time triggers an assertion failure in `clang::CXXRecordDecl::getLambdaCallOperator()`, as part of the members of the underlying CXXRecordDecl (of a lambda) are not there anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1057247466:731,assert,assertion,731,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1057247466,1,['assert'],['assertion']
Testability,TLeaf::ReadBasket invalid write in TMVA test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010:40,test,test,40,https://root.cern,https://github.com/root-project/root/issues/10010,1,['test'],['test']
Testability,TMVA TestCrossValidationSerialise memory handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1568:5,Test,TestCrossValidationSerialise,5,https://root.cern,https://github.com/root-project/root/pull/1568,1,['Test'],['TestCrossValidationSerialise']
Testability,"TMVA failures are gone and current failures are due to this branch not containing [this commit](https://github.com/root-project/root/commit/b378a57ebb9ae88002b4b152e6484f01b7dec00f), the weird part is that on some platforms the latest changes in roottest are picked up (so the `hadd-compression-settings` test is run), while on others they are not picked up. That's out of scope for this PR though, merging now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14859#issuecomment-1977444231:305,test,test,305,https://root.cern,https://github.com/root-project/root/pull/14859#issuecomment-1977444231,1,['test'],['test']
Testability,"TMVA new developments. * improvements for class TMVA::Envelope; * Added class TMVA::Classification to perform two class Classification; * Support to Train/Test multiple booked ml methods in parallel with MultiProc, calling the method Evaluate; * Documentation with Doxygen; * Test with Google Tests; * Example in Tutorials. Cheers,; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1316:155,Test,Test,155,https://root.cern,https://github.com/root-project/root/pull/1316,3,['Test'],"['Test', 'Tests']"
Testability,"TMVA new developments; * improvements for class TMVA::Envelope; * Added class TMVA::Classification to perform two class Classification; * Support to Train/Test multiple booked ml methods in parallel with MultiProc, calling the method Evaluate; * Documentation with Doxygen; * Test with Google Tests; * Example in Tutorials.; Cheers,; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1315:155,Test,Test,155,https://root.cern,https://github.com/root-project/root/pull/1315,3,['Test'],"['Test', 'Tests']"
Testability,"TMVA test failure is totally unrelated to this PR, so I will merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2722#issuecomment-426627082:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/2722#issuecomment-426627082,1,['test'],['test']
Testability,TMVA: fixes in testsuite,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/129:15,test,testsuite,15,https://root.cern,https://github.com/root-project/root/pull/129,1,['test'],['testsuite']
Testability,TMVAMultipleBackgroundExample/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.test.test_stresstmva_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot/test/test_stresstmva_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_tmva_tmva003_RReader](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot/runtutorials/tutorial_tmva_tmva003_RReader/); - [projectroot.runtutorials.tutorial_tmva_tmva002_RDataFrameAsTensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot/runtutorials/tutorial_tmva_tmva002_RDataFrameAsTensor/); - [projectroot.roottest.python.pickle.roottest_python_pickle_read](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_read/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.python.ttree.roottest_python_ttree_ttree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot.roottest.python/ttree/roottest_python_ttree_ttree/); - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89676/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyROOT_cppcompleter_doctest/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-658258990:1618,test,testReport,1618,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-658258990,5,['test'],['testReport']
Testability,TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175198/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560656733:5234,test,tests,5234,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560656733,4,['test'],"['test', 'testReport', 'tests']"
Testability,TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175204/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560787612:5234,test,tests,5234,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560787612,4,['test'],"['test', 'testReport', 'tests']"
Testability,TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177181/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1592568988:5234,test,tests,5234,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1592568988,4,['test'],"['test', 'testReport', 'tests']"
Testability,TMatrixTSparse&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:2610:6: warning: explicitly assigning value of variable of type 'TMatrixDSparse' (aka 'TMatrixTSparse&lt;double&gt;') to itself [-Wself-assign] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/test/stressLinear.cxx:3447:6: warning: explicitly assigning value of variable of type 'TVectorD' (aka 'TVectorT&lt;double&gt;') to itself [-Wself-assign] . And 4 more. ### Failing tests:; - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/test/test_periodic_build/); - [projectroot.runtutorials.tutorial_dataframe_tdf002_dataModel](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/runtutorials/tutorial_dataframe_tdf002_dataModel/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_tdf017_vecOpsHEP](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/runtutorials/tutorial_dataframe_tdf017_vecOpsHEP/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.runtutorials.tutorial_multicore_mtbb201_parallelHistoFill](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/testReport/projectroot/runtutorials/tutorial_multicore_mtbb201_parallelHistoFill/); - [projectroot.runtutorials.tutorial_roostats_Zbi_Zgamma](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/21977/test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1861#issuecomment-381665481:4340,test,testReport,4340,https://root.cern,https://github.com/root-project/root/pull/1861#issuecomment-381665481,1,['test'],['testReport']
Testability,TMultiGraph wrong scale with logarithmic axes : regession introduced in 6.22,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011:29,log,logarithmic,29,https://root.cern,https://github.com/root-project/root/issues/9011,1,['log'],['logarithmic']
Testability,TP code = 200 ; - ERROR: Error fetching remote repo 'origin' . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTProfile2Poly](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTProfile2Poly/); - [projectroot.hist.hist.test.gtest_hist_hist_test_testTHn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28994/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_testTHn/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394779175:1270,test,testReport,1270,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394779175,1,['test'],['testReport']
Testability,"TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. ## Expected behavior; no FPE. ## To Reproduce. Code; ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:1991,test,test,1991,https://root.cern,https://github.com/root-project/root/issues/6449,1,['test'],['test']
Testability,"TRandomMixMax should be include in one of the existing tests. Once this is done, we can close this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1594#issuecomment-458603825:55,test,tests,55,https://root.cern,https://github.com/root-project/root/pull/1594#issuecomment-458603825,1,['test'],['tests']
Testability,"TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:2668,test,test,2668,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,"TTree*, double, TMVA::Types::ETreeType) (DataLoader.cxx:373); ==290973== by 0x4F9573B: ???; ==290973== by 0x4F9107E: ???; ==290973== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F36428: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F45003: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F468D4: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6F2EF9F: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6C20B67: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2438); ==290973== by 0x6C215B6: TCling::ProcessLine(char",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:2310,test,testing,2310,https://root.cern,https://github.com/root-project/root/issues/14433,1,['test'],['testing']
Testability,TTree::Draw expression was mail-formed in some case. Use TWebCanvas by default in RBrowser. Update JSROOT to support more kind of log scale,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12312:130,log,log,130,https://root.cern,https://github.com/root-project/root/pull/12312,1,['log'],['log']
Testability,TTreeProcessorMT should call `friend->BuildIndex` in each multi-thread task but doesn't. The test we have is single-thread only. First reported at https://root-forum.cern.ch/t/reading-friend-trees-using-rdataframe-in-multithread-mode-or-spark-cluster/53513 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12260:93,test,test,93,https://root.cern,https://github.com/root-project/root/issues/12260,1,['test'],['test']
Testability,TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3260,test,testReport,3260,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['testReport']
Testability,"T_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -DPROJECT_NAME=\""CMSSW\"" -DPROJECT_VERSION=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -Isrc -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/pcre/8.43-e34796d17981e9b6d174328c69446455/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-7ac88d918a6883d593abc133ee0eb2e9/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/bz2lib/1.0.6-d065ccd79984efc6d4660f410e4c81de/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/libuuid/2.34-27ce4c3579b5b1de2808ea9c4cd8ed29/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-a252d5032aa4f9a2fc7dcaab3fac8b9f/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/tbb/v2021.9.0-2391c941213c757dc9a1835b31681235/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/zlib/1.2.11-1a082fc322b0051b504cc023f21df178/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/fmt/10.2.1-deba157dd76fed17ac8b42adc60ff53f/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/md5/1.0.0-5b594b264e04ae51e893b1d69a797ec6/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/tinyxml2/6.2.0-68d511689c5dbd9a0d296bbb795fa052/include -DCMSSW_REFLEX_DICT src/DataFormats/Histograms/src/classes.h src/DataFormats/Histograms/src/classes_def.xml. *** Break *** segmentation violation. ======================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2329311081:2243,test,tests,2243,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2329311081,2,['test'],"['testBuildDir', 'tests']"
Testability,TabComTests/); - [projectroot.io.io.test.gtest_io_io_test_RRawFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot.io.io/test/gtest_io_io_test_RRawFile/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot/runtutorials/tutorial_math_quasirandom/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.runtutorials.tutorial_math_tStudent_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot/runtutorials/tutorial_math_tStudent_py/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_testIMT](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_testIMT/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runcloneChain](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runcloneChain/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89537/testReport/projectroot.roottest.root.tree/reader/roottest_root_tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-656698551:1851,test,testReport,1851,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-656698551,1,['test'],['testReport']
Testability,"Talking again about the proposed interface:; ```c++; auto graph = new TGraph({0, 1, 2}, {1, 2, 3);; ```; I mean it looks nice and is probably useful for unit tests, but is it really helping our users?. If you have data that you want to plot, when do you hardcode it in initializer lists instead of reading it from files or getting it programmatically as the output of your analysis?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7151#issuecomment-2080462521:158,test,tests,158,https://root.cern,https://github.com/root-project/root/issues/7151#issuecomment-2080462521,1,['test'],['tests']
Testability,TargetName: _ZN7TCanvasC1EPKcS1_iiii; 		SectionID: 3 Offset: 1304; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1344; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1404; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1460; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1520; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1576; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1636; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1692; Stub function found; 		RelType: 10 Addend: 0 TargetName: _ZN8TRandom3C1Ej; 		SectionID: 3 Offset: 1732; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN7TRandom6RannorERfS0_; 		SectionID: 3 Offset: 1808; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: _ZN8TRandom34RndmEv; 		SectionID: 3 Offset: 1828; Create a new stub function; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1864; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1908; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 1956; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 2016; Stub function found; 		RelType: 10 Addend: 0 TargetName: cling_runtime_internal_throwIfInvalidPointer; 		SectionID: 3 Offset: 2168;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:18722,Stub,Stub,18722,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['Stub'],['Stub']
Testability,Temporary change to debug assertion failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7297:26,assert,assertion,26,https://root.cern,https://github.com/root-project/root/pull/7297,1,['assert'],['assertion']
Testability,Temporary disable Bulk I/O tests on 32b machines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3704:27,test,tests,27,https://root.cern,https://github.com/root-project/root/pull/3704,1,['test'],['tests']
Testability,Test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14623:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/14623,1,['Test'],['Test']
Testability,Test #2233: roottest-root-treeformula-stl-make ............... Passed 9.25 sec; Start 2234: roottest-root-treeformula-string-make; 18/19 Test #2234: roottest-root-treeformula-string-make ............ Passed 8.42 sec; Start 2235: roottest-root-treeformula-sync-make; 19/19 Test #2235: roottest-root-treeformula-sync-make ..............***Failed 52.53 sec; ```. </details>. <summary>This PR</summary>. <details>. ```; ctest -R .*callfunc.* ; Test project /build/vvassilev/root-release-master; Start 1825: roottest-root-meta-callfunc-assertUnload-auto; 1/5 Test #1825: roottest-root-meta-callfunc-assertUnload-auto ......... Passed 0.30 sec; Start 1826: roottest-root-meta-callfunc-assertUnloadHelper-auto; 2/5 Test #1826: roottest-root-meta-callfunc-assertUnloadHelper-auto ... Passed 0.18 sec; Start 1827: roottest-root-meta-callfunc-execResolveAt-auto; 3/5 Test #1827: roottest-root-meta-callfunc-execResolveAt-auto ........ Passed 0.41 sec; Start 1828: roottest-root-meta-callfunc-runmemberFunc-auto; 4/5 Test #1828: roottest-root-meta-callfunc-runmemberFunc-auto ........ Passed 0.38 sec; Start 1829: roottest-root-meta-callfunc-runsimpleFunc-auto; 5/5 Test #1829: roottest-root-meta-callfunc-runsimpleFunc-auto ........ Passed 0.43 sec. ctest -R .*treefor.* ; Test project /build/vvassilev/root-release-master; Start 2216: roottest-root-treeformula-array-make; 1/19 Test #2216: roottest-root-treeformula-array-make ............. Passed 29.43 sec; Start 2217: roottest-root-treeformula-casting-make; 2/19 Test #2217: roottest-root-treeformula-casting-make ........... Passed 3.40 sec; Start 2218: roottest-root-treeformula-clones-make; 3/19 Test #2218: roottest-root-treeformula-clones-make ............ Passed 0.95 sec; Start 2219: roottest-root-treeformula-depth-make; 4/19 Test #2219: roottest-root-treeformula-depth-make ............. Passed 0.28 sec; Start 2220: roottest-root-treeformula-event-make; 5/19 Test #2220: roottest-root-treeformula-event-make ............. Passed 4.29 sec; Start 2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252723800:4735,Test,Test,4735,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252723800,1,['Test'],['Test']
Testability,Test #477: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-07-15T15:26:49.700Z] 603/2331 Test #478: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.98 sec ; - [2022-07-15T15:26:50.266Z] 604/2331 Test #479: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.95 sec . And 11 more. ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_friendinfo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_friendinfo/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_callable_generator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_callable_generator/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_headnode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_headnode/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_ranges](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149979/testReport/projectroot.bindings.experimental.dis,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1185681094:2881,test,test,2881,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1185681094,1,['test'],['test']
Testability,Test #491: tutorial-multicore-mtbb201_parallelHistoFill ......................................................***Failed Error regular expression found in output. Regex=[: error:] 2.99 sec ; - 702/1675 Test #610: tutorial-roostats-Zbi_Zgamma ......................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.15 sec ; - 714/1675 Test #622: tutorial-roostats-rs_numbercountingutils ..........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.23 sec ; - 796/1675 Test #715: tutorial-dataframe-tdf002_dataModel-py ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.92 sec . ### Failing tests:; - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20889/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20889/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_dataframe_nodes/); - [projectroot.runtutorials.tutorial_dataframe_tdf002_dataModel](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20889/testReport/projectroot/runtutorials/tutorial_dataframe_tdf002_dataModel/); - [projectroot.runtutorials.tutorial_dataframe_tdf013_InspectAnalysis](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20889/testReport/projectroot/runtutorials/tutorial_dataframe_tdf013_InspectAnalysis/); - [projectroot.runtutorials.tutorial_dataframe_tdf017_vecOpsHEP](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20889/testReport/projectroot/runtutorials/tutorial_dataframe_tdf017_vecOpsHEP/); - [projectroot.runtutorials.tutorial_math_quasirandom](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/20889/testReport/projectroot/runtutorials/tutorial_math_quasira,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-378399783:1951,test,test,1951,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-378399783,1,['test'],['test']
Testability,Test 25 had a minor difference in size compared to the reference value stored; in the reference file. This is a simple ratio plot example. All the other formats are; ok. A pdf comparison with a previous version shows that the two pdf files are the; same. So we give a bit more error margin.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12343:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/12343,2,['Test'],['Test']
Testability,Test 628 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15123:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/15123,1,['Test'],['Test']
Testability,Test Issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6489:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/6489,1,['Test'],['Test']
Testability,Test PR for 6.14 builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4595:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4595,1,['Test'],['Test']
Testability,Test PR for R__COMPLETE_MEM_TERMINATION,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/787:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/787,1,['Test'],['Test']
Testability,Test PR to check build issues and incompatibilities with current test suite.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/983:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/983,2,"['Test', 'test']","['Test', 'test']"
Testability,Test PR to trigger jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/945:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/945,1,['Test'],['Test']
Testability,"Test PR, do not merge please.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/908:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/908,1,['Test'],['Test']
Testability,"Test PR, do not merge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/856:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/856,1,['Test'],['Test']
Testability,"Test PR, ignore please",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/962:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/962,1,['Test'],['Test']
Testability,Test SIGTERM vs ~TFile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13300:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/13300,1,['Test'],['Test']
Testability,Test `tutorial-roostats-CreateExampleFile` fails for me with GCC 7.3.0 and C++17=ON.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1704:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1704,1,['Test'],['Test']
Testability,"Test added and merged, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/352#issuecomment-280688274:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/352#issuecomment-280688274,1,['Test'],['Test']
Testability,Test added in https://github.com/root-project/roottest/pull/225,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2732#issuecomment-426944905:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2732#issuecomment-426944905,1,['Test'],['Test']
Testability,Test added in roottest https://github.com/root-project/roottest/pull/1085,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14960#issuecomment-1996767431:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/14960#issuecomment-1996767431,1,['Test'],['Test']
Testability,Test and linked issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15819#issuecomment-2162329202:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/15819#issuecomment-2162329202,1,['Test'],['Test']
Testability,Test at https://github.com/root-project/roottest/pull/1066,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14773#issuecomment-1954606028:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/14773#issuecomment-1954606028,1,['Test'],['Test']
Testability,Test at: https://github.com/root-project/roottest/pull/701,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8033#issuecomment-833016404:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/8033#issuecomment-833016404,1,['Test'],['Test']
Testability,Test backport action v2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15132:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/15132,1,['Test'],['Test']
Testability,Test build of Eve7 components - DO NOT MERGE!!!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2705:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2705,1,['Test'],['Test']
Testability,"Test can't be ""tiny"", it requires rootcling invocation. Anyway, it is already here: https://github.com/root-project/roottest/pull/585/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6252#issuecomment-680945766:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6252#issuecomment-680945766,1,['Test'],['Test']
Testability,Test clingtest-check-cling fails (language mismatch),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10693:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/10693,1,['Test'],['Test']
Testability,Test coming in separate PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6768#issuecomment-723315213:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6768#issuecomment-723315213,1,['Test'],['Test']
Testability,Test comment 2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6834#issuecomment-729599599:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6834#issuecomment-729599599,1,['Test'],['Test']
Testability,Test commit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1322:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1322,1,['Test'],['Test']
Testability,Test coverage compilation flag,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/474:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/474,1,['Test'],['Test']
Testability,Test crash with GCC 13 and C++20,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13851:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/13851,1,['Test'],['Test']
Testability,Test depending on histfactory are run even if histfactory is not build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6911:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/6911,1,['Test'],['Test']
Testability,"Test directories should be added using ROOT_ADD_TEST_SUBDIRECTORY. If add_subdirectory is used the test binaries get installed during ""make install"". if(testing) is redundant - it is already part of the ROOT_ADD_TEST_SUBDIRECTORY macro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2247:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2247,3,"['Test', 'test']","['Test', 'test', 'testing']"
Testability,Test error/warning/info messages in RDF tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5845:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/5845,2,"['Test', 'test']","['Test', 'tests']"
Testability,Test errors has nothing to do with PR - merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4551#issuecomment-542327560:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4551#issuecomment-542327560,1,['Test'],['Test']
Testability,Test evaluation of gradient of multidimensional functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/887:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/887,1,['Test'],['Test']
Testability,"Test failed due to failure of uploading test results to cdash, it seems:; ```; 05:58:48 100% tests passed, 0 tests failed out of 1038; ```. Two minutes later:. ```; 06:00:58 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 06:00:58 Problems when submitting via HTTP; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-365151906:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-365151906,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,Test failed due to network issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1425#issuecomment-349623268:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1425#issuecomment-349623268,1,['Test'],['Test']
Testability,"Test fails on aarch64 and ppc64le on Fedora 30 and Fedora rawhide:; Test 3 : Purge, Reuse of gaps in TFile......................... FAILED; File size= 52010 (expected 51886 +/- 100); Comp Fact= 2.00 (expected 2.1 +/- 0.3)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4025:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4025,2,['Test'],['Test']
Testability,Test failues on `mac13` and `mac14` are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16100#issuecomment-2247855053:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/16100#issuecomment-2247855053,1,['Test'],['Test']
Testability,"Test failure are unrelated, thanks for catching problem!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5160#issuecomment-599420748:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/5160#issuecomment-599420748,1,['Test'],['Test']
Testability,Test failure are unrelated/preexisting,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2775#issuecomment-435186866:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2775#issuecomment-435186866,1,['Test'],['Test']
Testability,Test failure fixed by push to https://github.com/root-project/roottest/pull/374 (builds are ok there).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264#issuecomment-523910296:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4264#issuecomment-523910296,1,['Test'],['Test']
Testability,Test failure in RNTuple: RNTuple.TClassEBO fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/12428,1,['Test'],['Test']
Testability,Test failure in `alma9-clang` unrelated:; ```txt; TEST FAILURES:; 470:gtest-tree-dataframe-test-dataframe-simple; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16385#issuecomment-2337861300:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/16385#issuecomment-2337861300,3,"['TEST', 'Test', 'test']","['TEST', 'Test', 'test-dataframe-simple']"
Testability,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7232#issuecomment-791407965:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/7232#issuecomment-791407965,1,['Test'],['Test']
Testability,Test failure is unrelated (according to @eguiraud ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9278#issuecomment-967192523:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/9278#issuecomment-967192523,1,['Test'],['Test']
Testability,Test failure is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4365#issuecomment-529523948:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4365#issuecomment-529523948,1,['Test'],['Test']
Testability,"Test failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2732#issuecomment-601307887:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2732#issuecomment-601307887,1,['Test'],['Test']
Testability,Test failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4372#issuecomment-529960260:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4372#issuecomment-529960260,2,['Test'],['Test']
Testability,Test failure seems spurious / unrelated; I'm merging to progress with v6.28 (I'll open a backport PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12737#issuecomment-1528735927:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/12737#issuecomment-1528735927,1,['Test'],['Test']
Testability,Test failure seems unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212#issuecomment-1414322868:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/12212#issuecomment-1414322868,1,['Test'],['Test']
Testability,Test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3598#issuecomment-476810908:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/3598#issuecomment-476810908,1,['Test'],['Test']
Testability,Test failure with `nbconvert-7.14`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14303:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/14303,1,['Test'],['Test']
Testability,Test failures are all timeouts in jupyter notebooks. I don't think that is related...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974#issuecomment-586911454:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4974#issuecomment-586911454,1,['Test'],['Test']
Testability,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6580#issuecomment-705370618:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6580#issuecomment-705370618,1,['Test'],['Test']
Testability,Test failures are infrastructure related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1441#issuecomment-350560539:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1441#issuecomment-350560539,1,['Test'],['Test']
Testability,Test failures are sort of random... Any clue why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-489601150:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-489601150,1,['Test'],['Test']
Testability,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6585#issuecomment-705458123:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6585#issuecomment-705458123,1,['Test'],['Test']
Testability,"Test failures are unrelated to these changes, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8257#issuecomment-850370356:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/8257#issuecomment-850370356,1,['Test'],['Test']
Testability,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7455#issuecomment-796560062:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/7455#issuecomment-796560062,1,['Test'],['Test']
Testability,"Test failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11355#issuecomment-1247990727:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/11355#issuecomment-1247990727,4,['Test'],['Test']
Testability,"Test failures are unrelated, we can safely merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5307#issuecomment-610209307:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/5307#issuecomment-610209307,1,['Test'],['Test']
Testability,Test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6729#issuecomment-720574606:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6729#issuecomment-720574606,1,['Test'],['Test']
Testability,Test failures because `pyspark` module is needed in the testing environment,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-774109566:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-774109566,2,"['Test', 'test']","['Test', 'testing']"
Testability,Test failures do not seem related at first glance. Might need a separate investigation. Rerunning the CI for now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12256#issuecomment-1423961755:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/12256#issuecomment-1423961755,1,['Test'],['Test']
Testability,Test failures in RNTuple: 32 bit specific,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/12427,1,['Test'],['Test']
Testability,Test failures in root7 tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/8073,2,"['Test', 'test']","['Test', 'tests']"
Testability,Test failures in tutorial-roofit when building without FFTW,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8245:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/8245,1,['Test'],['Test']
Testability,Test failures on MacOS with Xcode 12,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/6563,1,['Test'],['Test']
Testability,"Test failures on centos7 are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6050#issuecomment-660169852:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6050#issuecomment-660169852,1,['Test'],['Test']
Testability,Test failures on s390x,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/10409,1,['Test'],['Test']
Testability,Test failures seem unrelated. @vepadulano @pcanal is there anything else before this can be merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14822#issuecomment-1993812602:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/14822#issuecomment-1993812602,1,['Test'],['Test']
Testability,"Test failures unrelated, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9344#issuecomment-983393550:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/9344#issuecomment-983393550,1,['Test'],['Test']
Testability,Test failures unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15942#issuecomment-2194560152:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/15942#issuecomment-2194560152,1,['Test'],['Test']
Testability,"Test failures were due to a dirty build directory. I logged into the node, ran `cmake .`, and the headers were then found. If the headers are not found in other builds, please clear the build directory of the affected node(s), so that the roottest targets get recreated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/851#issuecomment-321595336:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/851#issuecomment-321595336,2,"['Test', 'log']","['Test', 'logged']"
Testability,"Test failures with C++17, but without `runtime_cxxmodules`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13058:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/13058,1,['Test'],['Test']
Testability,Test failures with Python 3.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15430:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/15430,1,['Test'],['Test']
Testability,Test failures with ROOT master on Gentoo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/7936,1,['Test'],['Test']
Testability,Test file: `math/smatrix/test/testSMatrix.cxx`. Failing test on CDash:; http://cdash.cern.ch/testDetails.php?test=24128678&build=345047,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/511:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/511,6,"['Test', 'test']","['Test', 'test', 'testDetails', 'testSMatrix']"
Testability,Test fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/155,2,['Test'],['Test']
Testability,Test fixes for mac13arm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12784:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/12784,1,['Test'],['Test']
Testability,Test for Jenkins CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/338:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/338,2,['Test'],['Test']
Testability,Test for not function in the stdlib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3413:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/3413,1,['Test'],['Test']
Testability,"Test for snapshot failed, is that reproducible locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2197#issuecomment-397578256:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2197#issuecomment-397578256,1,['Test'],['Test']
Testability,Test glitches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14112:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/14112,1,['Test'],['Test']
Testability,Test here:; https://github.com/root-project/roottest/pull/270,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3237#issuecomment-453138401:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/3237#issuecomment-453138401,1,['Test'],['Test']
Testability,"Test https://its.cern.ch/jira/browse/ROOT-10021 in the new CI, to see the status of this issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15918:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/15918,1,['Test'],['Test']
Testability,Test if json_fwd.hpp exists,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8345:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/8345,1,['Test'],['Test']
Testability,"Test if root install has roofit, if yes add the roofit and other libraries to rootlibs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1002:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1002,1,['Test'],['Test']
Testability,Test in cling/dict/ROOT-9110/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1329#issuecomment-344893750:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1329#issuecomment-344893750,1,['Test'],['Test']
Testability,Test in roottest/cling/dict/ROOT-9185,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2021#issuecomment-389784080:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2021#issuecomment-389784080,1,['Test'],['Test']
Testability,Test inlining of TVec<(unsigned) long long> ad their autoloading does not work on ubu 16.04 gcc 5.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1944:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1944,1,['Test'],['Test']
Testability,Test install,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/329:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/329,1,['Test'],['Test']
Testability,Test just to make sure...,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13654:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/13654,1,['Test'],['Test']
Testability,Test mentioned in the title was enabled. This was done by changing the way we call the method Take() of the RDF objects. In new Cppyy the type of a templated method needs to be put in square brackets.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4123:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/4123,1,['Test'],['Test']
Testability,Test new nodes with a dummy file - NOT FOR REVIEW,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14631:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/14631,1,['Test'],['Test']
Testability,"Test on SL6 looks good, so LGTM from me as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5248#issuecomment-606043295:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/5248#issuecomment-606043295,1,['Test'],['Test']
Testability,Test possible fix for regex in build dir,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13733:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/13733,1,['Test'],['Test']
Testability,Test pyunittests-pyroot-pyz-ttree-branch-attr fails on Intel 32 bit Linux,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/6813,1,['Test'],['Test']
Testability,Test reenable rootmap,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1139:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/1139,1,['Test'],['Test']
Testability,Test state of v614 branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2183:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/2183,1,['Test'],['Test']
Testability,Test test in roottest PR https://github.com/root-project/roottest/pull/1197,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16545:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/16545,2,"['Test', 'test']","['Test', 'test']"
Testability,Test the files existence before using them,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10471:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/10471,1,['Test'],['Test']
Testability,Test to follow (when completed :) ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5721#issuecomment-637214941:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/5721#issuecomment-637214941,1,['Test'],['Test']
Testability,Test will be in an upcoming roottest PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6729#issuecomment-719110071:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/6729#issuecomment-719110071,1,['Test'],['Test']
Testability,Test: https://github.com/root-project/roottest/pull/722,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476#issuecomment-864070285:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/pull/8476#issuecomment-864070285,1,['Test'],['Test']
Testability,Test: https://github.com/root-project/roottest/pull/723,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8499#issuecomment-865962012:0,Test,Test,0,https://root.cern,https://github.com/root-project/root/issues/8499#issuecomment-865962012,1,['Test'],['Test']
Testability,"TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for ... ; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; ----------------------------------------------------------------------; Ran 6 tests in 1.621s; FAILED (failures=1); ~~~. ### Expected behavior. No failure. This test did not fail with numpy 1.23.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:1408,Test,TestRooDataSetNumpy,1408,https://root.cern,https://github.com/root-project/root/issues/12162,1,['Test'],['TestRooDataSetNumpy']
Testability,TestStatistics](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testTestStatistics/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooAbsReal](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooAbsReal/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooAbsL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooAbsL/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooSimultaneous/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodSerial](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodSerial/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooRealL](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooRealL/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testInterface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testInterface/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testSumW2Error](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/181063/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testSumW2Error/); - [pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341#issuecomment-1656749661:1594,test,test,1594,https://root.cern,https://github.com/root-project/root/pull/13341#issuecomment-1656749661,1,['test'],['test']
Testability,Test](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_MultivariateGaussianTest/); - [projectroot.runtutorials.tutorial_roostats_StandardBayesianMCMCDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_StandardBayesianMCMCDemo/); - [projectroot.runtutorials.tutorial_roostats_IntervalExamples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_IntervalExamples/); - [projectroot.runtutorials.tutorial_roostats_rs101_limitexample](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_rs101_limitexample/); - [projectroot.runtutorials.tutorial_roofit_rf515_hfJSON_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roofit_rf515_hfJSON_py/); - [projectroot.runtutorials.tutorial_roostats_MultivariateGaussianTest_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_MultivariateGaussianTest_py/); - [projectroot.runtutorials.tutorial_roostats_rs101_limitexample_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_rs101_limitexample_py/); - [projectroot.runtutorials.tutorial_roostats_IntervalExamples_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/runtutorials/tutorial_roostats_IntervalExamples_py/); - [projectroot.test.test_stressroostats](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/170080/testReport/projectroot/test/test_stressroostats/); - [projectroot.test.test_stressroostats_minuit2](https://lcgapp-services.cern.ch/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12459#issuecomment-1461522976:1305,test,testReport,1305,https://root.cern,https://github.com/root-project/root/pull/12459#issuecomment-1461522976,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11280/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343327652:1435,test,testReport,1435,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343327652,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11281/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343327255:3990,test,testReport,3990,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343327255,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11282/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343327622:1432,test,testReport,1432,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343327622,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11283/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343327378:1432,test,testReport,1432,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343327378,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11284/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343324796:1432,test,testReport,1432,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343324796,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11285/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343331141:1437,test,testReport,1437,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343331141,1,['test'],['testReport']
Testability,Test_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.array.roottest_root_tree_array_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root.tree/array/roottest_root_tree_array_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.treeformula.function.roottest_root_treeformula_function_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root.treeformula/function/roottest_root_treeformula_function_make/); - [projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11286/testReport/projectroot.roottest.root.treeformula/schemaEvolution/roottest_root_treeformula_schemaEvolution_make/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343325696:1437,test,testReport,1437,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343325696,1,['test'],['testReport']
Testability,"Tested for fun with `builtin_llvm=OFF`. It seems that `llvm-config-16` does not have the `--src-root` option anymore, so building fails at CMake configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1658880460:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1658880460,1,['Test'],['Tested']
Testability,Tested in roottest to enable both references for buitin_lz4 and external lz4 (PR #289),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3400:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/3400,1,['Test'],['Tested']
Testability,"Tested locally with CMake 3.8 and 3.10, since there is no MPI in the externals, and no OpenMP on Macs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699#issuecomment-370391251:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/1699#issuecomment-370391251,1,['Test'],['Tested']
Testability,"Tested on lxplus today, with `devswan`, `dev3` and `dev4`. All work correctly, so we can close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904#issuecomment-1986703593:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/issues/14904#issuecomment-1986703593,1,['Test'],['Tested']
Testability,Tested on the 32bit node. Let's check the PR build for the 64bit architecture.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1925#issuecomment-384572595:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/1925#issuecomment-384572595,1,['Test'],['Tested']
Testability,Tested with 6.16/00,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3570:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/3570,1,['Test'],['Tested']
Testability,Tested with TH1 and NTuple as file content.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-523431267:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-523431267,1,['Test'],['Tested']
Testability,"Tested with slightly edited script from Wile's (https://root-forum.cern.ch/t/reading-and-writing-thnsparse-to-file-with-variable-bin-size/15365):. ```; #include ""TCanvas.h""; #include ""TFile.h""; #include ""THnSparse.h""; #include ""TH1.h"". #include <iostream>. using std::cout, std::endl;. void writeSparse(bool useVarBins=false, bool draw=false); {; std::cout << ""... writeSparse ..."" << std::endl;; // Define the fixed bins for initialization; const int nDim = 3;; // Int_t nBins[nDim] = {10, 4, 4};; Int_t nBins[nDim] = {5, 2, 2};; Double_t min[nDim] = {0., 0., 0.};; Double_t max[nDim] = {5., 2., 2.};. TFile* f = new TFile(""testSparse.root"", ""recreate"");; THnSparseF* h = new THnSparseF(""sparseHist"", ""sparseHist"", nDim, nBins, min, max);. // Set variable bins; if(useVarBins){; const int nVarBins0 = 5; // 5; Double_t varBins0[nVarBins0+1] = {0., 1., 2., 3., 4., 5.};//, 6, 7, 8, 9, 10};; h->GetAxis(0)->Set(nVarBins0, varBins0);. const int nVarBins1 = 2; // 2; Double_t varBins1[nVarBins1+1] = {0., 0.5, 2.};//, 3, 4};; h->GetAxis(1)->Set(nVarBins1, varBins1);. const int nVarBins2 = 2; // 2; Double_t varBins2[nVarBins2+1] = {0., 1.5, 2.};//, 3, 4};; h->GetAxis(2)->Set(nVarBins2, varBins2);; }. // Fill 2 bins; Double_t val1[nDim] = {0, 1, 0};; Double_t val2[nDim] = {3, 0, 1};; h->Fill(val2);; h->Fill(val2);; h->Fill(val1);. cout << ""printing entries with no options:"" << endl;; h->PrintEntries();; cout << ""printing entries with '0':"" << endl;; h->PrintEntries(0, -1, ""0"");; cout << ""printing entries with 'x':"" << endl;; h->PrintEntries(0, -1, ""x"");; cout << ""printing entries with 'x0':"" << endl;; h->PrintEntries(0, -1, ""0x"");. // Draw projections; if(draw){; TCanvas* c0 = new TCanvas(""c0"", ""c0"", 500, 500);; h->Projection(0)->Draw();. TCanvas* c1 = new TCanvas(""c1"", ""c1"", 500, 500);; h->Projection(1)->Draw();. TCanvas* c2 = new TCanvas(""c2"", ""c2"", 500, 500);; h->Projection(2)->Draw();; }. h->Write();; if (!draw) delete f;; }. void readSparse(bool draw=false); {; std::cout << ""... rea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14957#issuecomment-1994747384:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/14957#issuecomment-1994747384,2,"['Test', 'test']","['Tested', 'testSparse']"
Testability,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10648:0,Test,Tested,0,https://root.cern,https://github.com/root-project/root/pull/10648,4,"['Test', 'mock']","['Test', 'Tested', 'mock']"
Testability,Testing PR build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2387:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/2387,5,['Test'],['Testing']
Testability,"Testing `./tree/dataframe/test/dataframe_simple --gtest_filter=Seq/RDFSimpleTests.FillWithCustomClassJitted/0`, the result with `git-bisect` is:; ```; 7fa32c7a727b0a24fdbd90304b4f7ab3460b2b94 is the first bad commit; commit 7fa32c7a727b0a24fdbd90304b4f7ab3460b2b94; Author: Enrico Guiraud <enrico.guiraud@cern.ch>; Date: Mon Jan 24 18:42:07 2022 +0100. [DF] Fix jitted actions that depend on systematic variations. For this to work we need RJittedAction to propagate dependencies; on systematic variations to VariationsFor. tree/dataframe/inc/ROOT/RDF/RInterface.hxx | 3 ++-; tree/dataframe/inc/ROOT/RDF/RJittedAction.hxx | 3 ++-; tree/dataframe/src/RJittedAction.cxx | 7 ++++++-; tree/dataframe/test/dataframe_vary.cxx | 12 ++++++++++++; 4 files changed, 22 insertions(+), 3 deletions(-); ```. Indeed, commit 7fa32c7a727b0a24fdbd90304b4f7ab3460b2b94 crashes while the parent a2f0788202cca41393bcb68f58970428fd7e18da works. Edit: I think I have a patch...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007#issuecomment-1056810851:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/issues/10007#issuecomment-1056810851,3,"['Test', 'test']","['Testing', 'test']"
Testability,Testing a fix for cxxmodules build in #2809.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802#issuecomment-430531525:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/2802#issuecomment-430531525,1,['Test'],['Testing']
Testability,Testing at https://github.com/cms-sw/cmsdist/pull/8320,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1434377762:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1434377762,1,['Test'],['Testing']
Testability,Testing before submitting this patch to clang upstream!. This gives 20 MB memory improvement :D :D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2903:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/2903,1,['Test'],['Testing']
Testability,Testing clang-format infrastructure again...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-285863486:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-285863486,1,['Test'],['Testing']
Testability,Testing clang-format infrastructure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-285862497:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-285862497,1,['Test'],['Testing']
Testability,"Testing clang-tidy, sorry for the noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521#issuecomment-296596287:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/521#issuecomment-296596287,1,['Test'],['Testing']
Testability,Testing cmake infrastructure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5584:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/5584,1,['Test'],['Testing']
Testability,Testing current build infrastructure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5155:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/5155,1,['Test'],['Testing']
Testability,Testing evil comment:; ```; Errors:. FAILED: interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/IncrementalParser.cpp.o; c++: fatal error: Killed signal terminated program cc1plus; FAILED: interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/Interpreter.cpp.o; c++: fatal error: Killed signal terminated program cc1plus; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5130#issuecomment-597685166:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/5130#issuecomment-597685166,1,['Test'],['Testing']
Testability,Testing failure are because of networks timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15931#issuecomment-2191492754:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/15931#issuecomment-2191492754,1,['Test'],['Testing']
Testability,Testing in #945 if this actually also fixed some tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/938#issuecomment-327096755:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/938#issuecomment-327096755,2,"['Test', 'test']","['Testing', 'tests']"
Testability,Testing infrastructure [WIP].,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5130:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/5130,1,['Test'],['Testing']
Testability,Testing it on SLC6....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/188#issuecomment-230311293:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/188#issuecomment-230311293,1,['Test'],['Testing']
Testability,Testing jenkings state.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2173:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/2173,1,['Test'],['Testing']
Testability,Testing jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2154:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/2154,1,['Test'],['Testing']
Testability,Testing less_includes features,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5154:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/5154,1,['Test'],['Testing']
Testability,"Testing locally, it seems like `roottest/root/dataframe/test_snapshot.C` deadlocks again after this change, so the unlocking is still required.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/941#issuecomment-326996117:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/941#issuecomment-326996117,1,['Test'],['Testing']
Testability,Testing the actual problem configuration...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1988#issuecomment-387403843:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/1988#issuecomment-387403843,1,['Test'],['Testing']
Testability,Testing the addition of the new github issue template form https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12888:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/12888,1,['Test'],['Testing']
Testability,Testing whether bot actually comments on PRs of users that are not in the admin list of the bot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/340:0,Test,Testing,0,https://root.cern,https://github.com/root-project/root/pull/340,1,['Test'],['Testing']
Testability,Tests actually succeeded ... jenkins failed to upload the result.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5844#issuecomment-642119082:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/5844#issuecomment-642119082,1,['Test'],['Tests']
Testability,Tests al OK despite of the failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/529#issuecomment-297988694:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/529#issuecomment-297988694,1,['Test'],['Tests']
Testability,"Tests and documentation for the converttonotebook script are improved. Also, the new ratioplot tutorials were converted to notebooks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/233:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/233,1,['Test'],['Tests']
Testability,Tests are coming: https://github.com/root-project/root/pull/1711,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1707#issuecomment-371483134:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/1707#issuecomment-371483134,1,['Test'],['Tests']
Testability,Tests are expected to be failed: references will be updated after https://github.com/root-project/root/pull/750 will land in the master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-369939135:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-369939135,1,['Test'],['Tests']
Testability,Tests are fixed in https://github.com/root-project/roottest/pull/135,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/750#issuecomment-369938747:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/750#issuecomment-369938747,1,['Test'],['Tests']
Testability,"Tests are green (at least on my machine, let's see if jenkins agrees) but valgrind is still not happy, to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488#issuecomment-621344462:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/5488#issuecomment-621344462,1,['Test'],['Tests']
Testability,"Tests are green, I'm merging. Thanks a lot for your help @etejedor @eguiraud :smile: !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-900452845:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-900452845,1,['Test'],['Tests']
Testability,Tests are in roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6173#issuecomment-673369563:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/6173#issuecomment-673369563,1,['Test'],['Tests']
Testability,"Tests are labeled `longtest` if they run longer than 1 minute, based on this build: http://cdash.cern.ch/viewTest.php?onlypassed&buildid=329399; This is to be able to skip tests that runs for longer time, when for example during building of PRs when extensive testing may not be needed. Will make another PR in https://github.com/root-project/roottest as well that has the other tests labeled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/408:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/408,4,"['Test', 'test']","['Tests', 'testing', 'tests']"
Testability,Tests are still failing https://github.com/root-project/root/actions/runs/8383591892,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15033:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/15033,1,['Test'],['Tests']
Testability,Tests are then fixed in https://github.com/root-project/roottest/pull/183,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2055#issuecomment-390975269:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/2055#issuecomment-390975269,1,['Test'],['Tests']
Testability,Tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7247#issuecomment-781287267:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/7247#issuecomment-781287267,2,"['Test', 'test']","['Tests', 'test']"
Testability,Tests fail in case of `-march=native` so we ought to test that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12291:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/issues/12291,2,"['Test', 'test']","['Tests', 'test']"
Testability,Tests failures are unrelated to this patch ... and fix the 32bits build :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158#issuecomment-395430135:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/2158#issuecomment-395430135,1,['Test'],['Tests']
Testability,Tests failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725#issuecomment-426031295:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/2725#issuecomment-426031295,1,['Test'],['Tests']
Testability,"Tests has been augmented and refactored to avoid code duplication. There's one issue that I'm not sure how to solve: random access iterators are required to support the forms `it + n` as well as `n + it` (where `n` in our case is of type `std::ptrdiff_t`. The second form requires the definition of a free-standing `operator+`, which I implemented this way:. ```c++; template <typename T>; auto operator+(std::ptrdiff_t n, const typename TTreeReaderArray<T>::iterator &it); -> decltype(it + n); {; return it + n;; }; ```. Problem: in the definition above `T` cannot be deduced from the dependent type `iterator`, so this overload is never considered. Any idea how to work around this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-343112197:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-343112197,1,['Test'],['Tests']
Testability,"Tests have been fixed, let's try again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3838#issuecomment-494714717:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/3838#issuecomment-494714717,1,['Test'],['Tests']
Testability,Tests just finished successfully. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1435050675:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1435050675,1,['Test'],['Tests']
Testability,Tests not yet included. ; I create separate PR for fixing `THStack` functionality. And will add several tests there.; For graphics testing we need to activate Adrian testsuite,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15928#issuecomment-2190811516:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/15928#issuecomment-2190811516,4,"['Test', 'test']","['Tests', 'testing', 'tests', 'testsuite']"
Testability,"Tests pass [here](https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/9691/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_definepersample/) and [here](https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/9690/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_definepersample/), merging this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9074#issuecomment-937586148:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/9074#issuecomment-937586148,3,"['Test', 'test']","['Tests', 'testReport']"
Testability,"Tests pass on Windows, so the PR does what it should.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16596#issuecomment-2391938385:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/16596#issuecomment-2391938385,1,['Test'],['Tests']
Testability,"Tests passed errored with ""Problems when submitting via HTTP""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5447#issuecomment-618842403:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/5447#issuecomment-618842403,1,['Test'],['Tests']
Testability,"Tests passed, but another build was triggered after the merge, and it cannot find the now deleted branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845#issuecomment-381955118:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/1845#issuecomment-381955118,1,['Test'],['Tests']
Testability,"Tests passed, failure is an infrastructure problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/772#issuecomment-315617393:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/772#issuecomment-315617393,1,['Test'],['Tests']
Testability,Tests passed. Errors here are due to the fact I had to rebase again before the final merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/958#issuecomment-328371104:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/958#issuecomment-328371104,1,['Test'],['Tests']
Testability,"Tests suite now covers all possible combination of vectors both with; `swap` and `std::swap`. Previously, some special cases were omitted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10343:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/10343,1,['Test'],['Tests']
Testability,"Tests went ok, Jenkins just failed to update the status.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4837#issuecomment-577517849:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/4837#issuecomment-577517849,1,['Test'],['Tests']
Testability,Tests were failing due to network or were already failing before my change.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2641#issuecomment-422841558:0,Test,Tests,0,https://root.cern,https://github.com/root-project/root/pull/2641#issuecomment-422841558,1,['Test'],['Tests']
Testability,"Tests.cxx.o.d -o core/metacling/test/CMakeFiles/TClingTest.dir/TClingMethodInfoTests.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:621:53: error: ‘std::unordered_map’ has not been declared ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:621:66: error: expected ‘,’ or ‘...’ before ‘&lt;’ token ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:630:27: error: ‘funcPar0’ was not declared in this scope ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:637:6: error: ‘funcPar0’ was not declared in this scope ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:645:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [17], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:654:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [17], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:662:34: error: no match for call to ‘(TClingMethodInfo_NonDependentMemberTypes_Test::TestBody()::&lt;lambda(const char*, int)&gt;) (const char [14], &lt;brace-enclosed initializer list&gt;)’ ; - [2021-05-07T16:35:09.073Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834603179:2989,test,test,2989,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834603179,1,['test'],['test']
Testability,"Testsuit was actually looking at '""' for match, comparing literal 21; should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2773:0,Test,Testsuit,0,https://root.cern,https://github.com/root-project/root/pull/2773,1,['Test'],['Testsuit']
Testability,Thank you ! I will do another test and eventually merge it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1102#issuecomment-333663427:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/1102#issuecomment-333663427,1,['test'],['test']
Testability,"Thank you @ellert for reporting this issue. ; Is the test TestCustomModelsFromONNX having the same issue ? ; You can also easily check if the tensor value stored in the file Linear_16_FromONNX.dat are the same of those stored in Linear_16_FromROOT.hxx. If in both cases there wrong values and nan, then the problem is in the ONNX parser or in Protobuf, otherwise it is only in the ROOT I/O storage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10146#issuecomment-1070745027:53,test,test,53,https://root.cern,https://github.com/root-project/root/issues/10146#issuecomment-1070745027,2,"['Test', 'test']","['TestCustomModelsFromONNX', 'test']"
Testability,Thank you @j-mathe ! The failure in the `dataframe_misc` test in roottest looks real. Before/after this patch the output of the test is:. ```; -Sum b2 init: 2471; -Sum dv init: 1491; +Sum b2 init: 2470; +Sum dv init: 1490; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1222078558:57,test,test,57,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1222078558,2,['test'],['test']
Testability,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480#issuecomment-1312341311:124,test,testing,124,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311,1,['test'],['testing']
Testability,"Thank you @vepadulano !. I'm happy to do another pass, but I'd rather do so after the tests are added: it takes me around half a day of work to go through a PR this size, I'd like to reduce the amount of passes... :sweat_smile: . (the warnings are real and the test failure is because of an expected error message that needs to be updated in the test -- or the new message needs to match the old one)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1581188983:86,test,tests,86,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1581188983,3,['test'],"['test', 'tests']"
Testability,"Thank you @yamaguchi1024 for this fix for 3.3, do the tests still pass with 3.3 and you get rid of the deprecation warnings you had?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2633#issuecomment-422356444:54,test,tests,54,https://root.cern,https://github.com/root-project/root/pull/2633#issuecomment-422356444,1,['test'],['tests']
Testability,"Thank you Axel for the review comments ! I will include them.; The test is around 1 second, less on my machine. We need to train first the BDT in order to create the XML file. It is true we could create the model externally, store in a file on GitHub, but for self-consistency it is better to have the full procedure, since the time to create and train the model is fast.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9513#issuecomment-1027795555:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/9513#issuecomment-1027795555,1,['test'],['test']
Testability,"Thank you Guilherme, afaik it's enough to run `ctest -j8` to test this, see your comment at https://github.com/root-project/root/issues/7936#issuecomment-825672249",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-992318502:61,test,test,61,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-992318502,1,['test'],['test']
Testability,"Thank you Jonas. ; In my feeling this part of log proves somehow that memory is not freed at least for the first toy (index toy = 1) :. just before generate; res memory=314.93 Mbytes; vir memory=402.078 Mbytes; just after generate; res memory=334.656 Mbytes; vir memory=423.648 Mbytes. We see that after generate, the memory has increased (which is normal), but afterwards, even when deleting the generated dataset, we no more get back to the level of memory memory that was before the generate, even though we delete the generated dataset.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1396069230:46,log,log,46,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1396069230,1,['log'],['log']
Testability,Thank you Monica for adding a test. . Just a comment on the PR title : [smatrix] --> [matrix] ; The PR is in the matrix package and not smatrix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14420#issuecomment-1910664635:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/14420#issuecomment-1910664635,1,['test'],['test']
Testability,Thank you Patrick for the update. I am testing it now again with all tests and tutorials,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-918976455:39,test,testing,39,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-918976455,2,['test'],"['testing', 'tests']"
Testability,Thank you a lot!! Is it worth to also test the friends-of-friends case?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1310#issuecomment-343487459:38,test,test,38,https://root.cern,https://github.com/root-project/root/pull/1310#issuecomment-343487459,1,['test'],['test']
Testability,Thank you again for reporting @AlkaidCheng . This is fixed in the master branch (which you can test out via the [nightly builds](https://root.cern/install/nightlies/)) and the fix will be available in the upcoming v6.26.02 patch release. Let us know if you encounter any further issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233#issuecomment-1090006206:95,test,test,95,https://root.cern,https://github.com/root-project/root/issues/10233#issuecomment-1090006206,1,['test'],['test']
Testability,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:664,Test,Test,664,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['Test'],['Test']
Testability,"Thank you for adding the TThreadExecutor and the test ; I had only a small comment for the test program, otherwise we are ready to merge this PR. Thank you for the contribution",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-409864423:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-409864423,2,['test'],['test']
Testability,Thank you for completing this. Looks good to me. I have tested on cudnn 7 and it works fine. Unfortunately I cannot test now on cudnn 8. ; @kgzidov Can you please verify if running all TMVA tests on cudnn 8 works ? ; You should configure cmake with` -Dtesting=On` and then run the TMVA tests with ; `ctest -R TMVA`; If all tests pass I will merge it ; Thank you ; Lorenzo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663532879:56,test,tested,56,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663532879,5,['test'],"['test', 'tested', 'tests']"
Testability,"Thank you for creating the issue, there are a few higher-priority items I'd like to get done before releasing 6.24, then I will look at this. I.e. I totally agree we want this, let's see if I make it for this release or not. In case someone feels like giving this a shot: the relevant logic is at the following line, `GetTopLevelBranchNames` should also return the names of friend branches:. https://github.com/root-project/root/blob/0399cde3718b2571ad4a4d2285bbc563c9b9453e/tree/dataframe/inc/ROOT/RDF/RInterface.hxx#L521",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7181#issuecomment-778091611:285,log,logic,285,https://root.cern,https://github.com/root-project/root/issues/7181#issuecomment-778091611,1,['log'],['logic']
Testability,Thank you for looking into this! ; Are you saying this is a first step due to the missing tests or because more work is needed after the PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1282312272:90,test,tests,90,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1282312272,1,['test'],['tests']
Testability,"Thank you for the PR! I will try it as soon as it is in master. . However, I was looking at the test and I'm not sure if it can work: there is not pdf for ""c22"" in s2, yet it is requested in the prototype (the second event is {c12;c22} if I read correctly). I'm not sure about the behaviour of `RooSimGenContext` in this case, but I suspect it would crash (it does on a single level `RooSimultaneous` if one of the label is missing). About the backport, I do not think it's needed, but I will let you know if there are unforeseen issues that stop me from using the master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020#issuecomment-1381048003:96,test,test,96,https://root.cern,https://github.com/root-project/root/issues/12020#issuecomment-1381048003,1,['test'],['test']
Testability,"Thank you for the changes. They look good now. ; It would be nice to add also a test for the new DeltaRapidityPhi function, for example adding few lines of code in ; https://github.com/root-project/root/blob/master/tutorials/math/mathcoreGenVector.C#L424. If you don't have time doing this, I can do it later, after merging this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087#issuecomment-773208683:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/7087#issuecomment-773208683,1,['test'],['test']
Testability,"Thank you for the contribution, looks good to me. I will try to include also a test for this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1160126772:79,test,test,79,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1160126772,1,['test'],['test']
Testability,Thank you for the patch. This looks perfect. I will try to test it today,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-64172411:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-64172411,1,['test'],['test']
Testability,"Thank you for the report @vlisovsk , I will take a look as soon as possible. It looks like we do not have test coverage for this case unfortunately, so thank you for providing a self-contained reproducer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920#issuecomment-1177368577:106,test,test,106,https://root.cern,https://github.com/root-project/root/issues/10920#issuecomment-1177368577,1,['test'],['test']
Testability,"Thank you for the report Josh! This seems to be a problem in upstream cppyy as well:. ```bash; (cppyy-env) /t/cppyy-test python -c 'import cppyy; print(cppyy.__version__)'; 2.4.1; (cppyy-env) /t/cppyy-test bat test.h test.py; ───────┬───────────────────────────────────────────────────────────────────────────────────────; │ File: test.h; ───────┼───────────────────────────────────────────────────────────────────────────────────────; 1 │ template <typename T>; 2 │ class Helper {; 3 │; 4 │ public:; 5 │; 6 │ Helper() {}; 7 │; 8 │ std::size_t operator() () const {; 9 │ const std::size_t res = 0;; 10 │ res = T{0, 0}.size();; 11 │ return res;; 12 │ }; 13 │; 14 │ };; 15 │; 16 │ template <typename H>; 17 │ std::size_t call_helper(const H &helper) {; 18 │ return helper();; 19 │ }; ───────┴───────────────────────────────────────────────────────────────────────────────────────; ───────┬───────────────────────────────────────────────────────────────────────────────────────; │ File: test.py; ───────┼───────────────────────────────────────────────────────────────────────────────────────; 1 │ import cppyy; 2 │; 3 │ ret = cppyy.include('test.h'); 4 │; 5 │ print(""declare ret"", ret); 6 │; 7 │ print(""creating helper""); 8 │ helper = cppyy.gbl.Helper[cppyy.gbl.std.vector[""double""]](); 9 │; 10 │ res = cppyy.gbl.call_helper(helper); 11 │ print(res); ───────┴───────────────────────────────────────────────────────────────────────────────────────; (cppyy-env) /t/cppyy-test python test.py; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_5'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1346625044:116,test,test,116,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1346625044,9,['test'],['test']
Testability,Thank you for the workaround. . But with this we ignore all warnings. As this geometry warning is anticipated shouldn't their messages console log level be reduced to info or debug?. ```js; js/modules/gpad/RPadPainter.mjs:410: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);; js/modules/gpad/TPadPainter.mjs:601: console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14300#issuecomment-1878315618:143,log,log,143,https://root.cern,https://github.com/root-project/root/issues/14300#issuecomment-1878315618,1,['log'],['log']
Testability,Thank you for this PR. I assume everything changed here is tested already with the current testRocWeights.cxx unit test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/969#issuecomment-332138895:59,test,tested,59,https://root.cern,https://github.com/root-project/root/pull/969#issuecomment-332138895,3,['test'],"['test', 'testRocWeights', 'tested']"
Testability,Thank you for update! ; I will test and if the result is good I will merge it in the master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926#issuecomment-1154836032:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/9926#issuecomment-1154836032,1,['test'],['test']
Testability,"Thank you for your quick response, @bellenot. . The version of VS we use is not important, we just need to test the compiler MSVC inside VS, the compiler version is the latest, not release or preview. it's development version. And the correct MSVC_VERSION as below. Microsoft (R) C/C++ Optimizing Compiler Version **19.41.34007.96** for x64; Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336#issuecomment-2154250511:107,test,test,107,https://root.cern,https://github.com/root-project/root/issues/15336#issuecomment-2154250511,1,['test'],['test']
Testability,"Thank you so much @eguiraud for the comments! I have addressed all of them and updated the commits accordingly, also splitting them in smaller commits to make intentions clearer. New tests are still missing, but I would appreciate if you could take another look. In particular, these changes hopefully streamline the code a bit:; * `rdf_uuid`: this was previously not well named, since we need something that contains both an identifier for the current RDataFrame instance and also one for the current (distributed) execution of that RDataFrame (e.g. to separate to consecutive triggers of the computation graph). I have added the type `ExecutionIdentifier` that holds both. This class is now used everywhere (in Ranges.py, HeadNode.py) and should improve readability.; * I merged `CloneResultPtr` and `CloneResultMap` into `CloneResultAndAction`. This helps making the logic in DistRDF more simple (i.e. is what allows the usage of `singledispatch` to distinguish different ways of cloning actions of the distributed computation graph).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1581162133:183,test,tests,183,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1581162133,2,"['log', 'test']","['logic', 'tests']"
Testability,"Thank you so much @vepadulano for installing the packages on the mac nodes!. The existing RBDT tests are failing, which is good to see so that means they are executed. It's probably the first time ever they get run with XGBoost 2.0 on any CI. I will add a commit that fixes the tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183#issuecomment-2046088024:95,test,tests,95,https://root.cern,https://github.com/root-project/root/pull/15183#issuecomment-2046088024,2,['test'],['tests']
Testability,"Thank you to report this problem and the test to reproduce. The problem is to be not in the bin content and error of the resulting histograms but in the sum of all bin contents and errors, e.g. `h->GetWeightSum()`.; I will provide soon a PR fixing this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333#issuecomment-1253617725:41,test,test,41,https://root.cern,https://github.com/root-project/root/issues/11333#issuecomment-1253617725,1,['test'],['test']
Testability,"Thank you very much @langenbruch for the tutorial and the PR updates! I will take it from here, integrating the tutorial and maybe writing some tests, and then I'll merge the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14751#issuecomment-1986092078:144,test,tests,144,https://root.cern,https://github.com/root-project/root/pull/14751#issuecomment-1986092078,1,['test'],['tests']
Testability,"Thank you very much Bertrand for the explanation. I tried with this one-liner in my code, and now it works perfectly:. `Gl_histinit(gEnv->GetValue(""Rint.History"", gSystem->HomeDirectory()));`. The problem I see if it is not introduced in the plugin is that the SetHistAdd() function has no effect. To avoid confusion, I would suggest to add the following in the documentation:. ```; // The function SetHistAdd() is needed for a standalone TApplication to log the TGCommandPlugin commands into a ROOT history file.; // However, this function has no effect if the user does not explictly set on his standalone application the name of the ROOT history file.; // To log into the default ROOT history file, call this on the user-side of the code:; // Gl_histinit(gEnv->GetValue(""Rint.History"", gSystem->HomeDirectory()));; // Otherwise, replace the argument of Gl_histinit with a text file name you want to use for application-specific logging.; ```. After that addition, it looks great and ready to merge in my opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-780881584:455,log,log,455,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-780881584,3,['log'],"['log', 'logging']"
Testability,"Thank you very much for reporting this, it's great that you are testing the new BatchMode like this and report on this feature regression!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11332#issuecomment-1241652663:64,test,testing,64,https://root.cern,https://github.com/root-project/root/issues/11332#issuecomment-1241652663,1,['test'],['testing']
Testability,"Thank you very much for this PR!. No, if you already have a fix, it's completely fine to create a PR without a corresponding issue. And It's also not necessary to write a test for that. I also added this PR to the list of bugfix PRs that I want to backport to the next 6.26 patch release:; https://github.com/root-project/root/issues/11059",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11507#issuecomment-1271304750:171,test,test,171,https://root.cern,https://github.com/root-project/root/pull/11507#issuecomment-1271304750,1,['test'],['test']
Testability,"Thank you very much, @scott-snyder - both for this excellent analysis of the problem and the your quick turnaround testing!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-812703868:115,test,testing,115,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-812703868,1,['test'],['testing']
Testability,Thank you! Should I test from your fork or just wait until the PR goes through?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310#issuecomment-1059331838:20,test,test,20,https://root.cern,https://github.com/root-project/root/issues/9310#issuecomment-1059331838,1,['test'],['test']
Testability,"Thank you! That's great you also addressed the comment with the redundant verbosity flag. Let's test this once with multiprocess off, and then afterwards once with multiprocess on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577#issuecomment-1282338633:96,test,test,96,https://root.cern,https://github.com/root-project/root/pull/11577#issuecomment-1282338633,1,['test'],['test']
Testability,"Thank you, @ferdymercury -- somehow I missed those previous issues... sorry about that. Just to share here, I also tried with v6-22-08 from source and received the same XROOTD build error (but fewer warnings):; [XROOTD-build-out.log](https://github.com/root-project/root/files/8621472/XROOTD-build-out.log); [XROOTD-build-err.log](https://github.com/root-project/root/files/8621473/XROOTD-build-err.log). I then tried; ```; $ cd ~; $ git clone https://github.com/root-project/root.git; $ mkdir root_build; $ cd root_build; $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=$(which gcc) -DCMAKE_CXX_COMPILER=$(which g++) -DCMAKE_Fortran_COMPILER=$(which gfortran) -S ../root -B ./; $ cmake --build .; ```; and XROOTD seems to have built successfully, but there seems to be some other errors. The configure step said that the ROOT version is 6-27-01.; [build_out.log](https://github.com/root-project/root/files/8626646/build.log); [build_err.log](https://github.com/root-project/root/files/8626647/build_err.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1117767710:229,log,log,229,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1117767710,8,['log'],['log']
Testability,"Thank you, I am glad. Looking at the output from your side is appreciated. I did checks of the logging output with iminuit, whether it looks good, but I haven't tried this with the TError logging backend. I am looking forward to use this patch in iminuit. Being able to turn on debugging output at runtime is going to be incredibly useful and it already helped me to understand much better what is called where and when in Minuit. I plan to work on other improvements and this going to be very helpful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-720460321:95,log,logging,95,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-720460321,2,['log'],['logging']
Testability,"Thanks @Axel-Naumann and @lmoneta! I have updated the PR, I'll merge it without tests as it only affects the release notes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9833#issuecomment-1032612095:80,test,tests,80,https://root.cern,https://github.com/root-project/root/pull/9833#issuecomment-1032612095,1,['test'],['tests']
Testability,"Thanks @Axel-Naumann. I'm afraid I still see the issue even if I ask for an existing type, e.g. `std::vector<int>::value_type`. I just tested the following snippet:. ```; import ROOT. while True:; ROOT.TClass.GetClass(""std::vector<int>::value_type""); ```. on:. ```; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Sep 02 2021, 14:20:23; From tags/v6-24-06@v6-24-06; ```. Admittedly, we were also making some non-optimal calls to `TClass::GetClass()` and the most reliable way to avoid the issue is to avoid these calls altogether. However, finding the offending calls is a bit of a challenge at the moment. Is there a more targeted way to warn about auto-parsing apart from setting `ROOTDEBUG=1`, which of course prints a lot more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9029#issuecomment-1110614505:135,test,tested,135,https://root.cern,https://github.com/root-project/root/issues/9029#issuecomment-1110614505,1,['test'],['tested']
Testability,"Thanks @Dr15Jones for this excellent report and reproducer; here's the test case updated for ROOT `master` APIs:; ```c++; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>; #include <ROOT/RNTuple.hxx>. #include <vector>. int main() {; auto model = ROOT::Experimental::RNTupleModel::Create();; model->AddField( ROOT::Experimental::RFieldBase::Create(""ints"",""std::vector<int>"").Unwrap());; model->AddField( ROOT::Experimental::RFieldBase::Create(""floats"",""std::vector<float>"").Unwrap());; auto writeOptions = ROOT::Experimental::RNTupleWriteOptions();; writeOptions.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kLZMA, 4);. auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(model), ""Events"", ""dummy.root"", writeOptions);. std::vector<int> ints ={1,2,3};; void* pInts = &ints;; void** ppInts = &pInts;; std::vector<float> floats = {2.0, 4.0, 6.0};; void* pFloats = &floats;; void** ppFloats = &pFloats;; {; auto entry = writer->CreateEntry();; entry->BindRawPtr(""ints"", *ppInts);; entry->BindRawPtr(""floats"", *ppFloats);; writer->Fill(*entry);; }; writer.reset();. return 0;; }; ```. I see the problem, we are hitting the exact case where the buffer size minus the compression header (which is not properly accounted for!) is not sufficient to hold the compressed content. I have a fix, PR will come soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14508#issuecomment-1923338441:71,test,test,71,https://root.cern,https://github.com/root-project/root/issues/14508#issuecomment-1923338441,1,['test'],['test']
Testability,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense?. But yes *please* contribute! You could start with imlpementing; ```c++; static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",; const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,; Int_t netopt = 0);; ```; internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958#issuecomment-1782934211:185,test,test,185,https://root.cern,https://github.com/root-project/root/issues/13958#issuecomment-1782934211,1,['test'],['test']
Testability,"Thanks @bellenot ! I don't know what happened to [the PR build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81795/console), but I did not notice these failures, sorry about that. Can you please reduce the amount of ifdef'd code to:. ```cpp; #ifdef _WIN32; const std::string type = ""struct `private: virtual void __thiscall RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)'::`2'::SimpleType"";; #else; const std::string type = ""RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody()::SimpleType"";; #endif; ```. and then simply use `type` in the error strings that we check?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5612#issuecomment-628129578:403,Test,TestBody,403,https://root.cern,https://github.com/root-project/root/pull/5612#issuecomment-628129578,2,['Test'],['TestBody']
Testability,Thanks @cburgard . I started the tests and leave the review in the hands of @guitargeek,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16349#issuecomment-2322788288:33,test,tests,33,https://root.cern,https://github.com/root-project/root/pull/16349#issuecomment-2322788288,1,['test'],['tests']
Testability,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):; - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above.; - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702613964:149,test,tests,149,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702613964,1,['test'],['tests']
Testability,"Thanks @dpiparo! Yes, we do have a test for it, which I noticed because I made a typo when first opening this PR. It is this one:; https://github.com/root-project/roottest/blob/master/python/ttree/PyROOT_ttreetests.py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14465#issuecomment-1913369142:35,test,test,35,https://root.cern,https://github.com/root-project/root/pull/14465#issuecomment-1913369142,1,['test'],['test']
Testability,"Thanks @etejedor and @bluehood . The latest push force takes into account the decisions we took yesterday, and it seems to be working with the files Enric provided me. I was wondering if it is proper to add these files in roottest and create some tests over them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2443#issuecomment-411308650:247,test,tests,247,https://root.cern,https://github.com/root-project/root/pull/2443#issuecomment-411308650,1,['test'],['tests']
Testability,"Thanks @guitargeek!. > * [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/186635/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/). FWIW this was a missing backport in roottest, now done in https://github.com/root-project/roottest/pull/1022",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783#issuecomment-1746652496:163,test,testReport,163,https://root.cern,https://github.com/root-project/root/pull/13783#issuecomment-1746652496,1,['test'],['testReport']
Testability,Thanks @hageboeck ! There is actually a test for it: https://github.com/root-project/roottest/pull/562 :smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6024#issuecomment-660167224:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/6024#issuecomment-660167224,1,['test'],['test']
Testability,Thanks @linev ; Applying this patch makes the dd4hep tests pass again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16272#issuecomment-2298752276:53,test,tests,53,https://root.cern,https://github.com/root-project/root/pull/16272#issuecomment-2298752276,1,['test'],['tests']
Testability,Thanks @mkrzewic! We kicked off testing to make sure it doesn't break other platforms. I will take a closer look tomorrow :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12996#issuecomment-1587588350:32,test,testing,32,https://root.cern,https://github.com/root-project/root/pull/12996#issuecomment-1587588350,1,['test'],['testing']
Testability,Thanks @pcanal for addressing the issue from https://root-forum.cern.ch/t/copying-trefs-and-accessing-tref-data-from-multiple-threads/29417/10. This indeed greatly improves the situation:. With your patch:. ```; $ ./root-test 1; Using 1 thread(s).; Run finished in 5.17034ms; $ ./root-test 2; Using 2 thread(s).; Run finished in 5.21786ms; $ ./root-test 4; Using 4 thread(s).; Run finished in 9.2026ms; $ ./root-test 8; Using 8 thread(s).; Run finished in 21.4157ms; $ ./root-test 16; Using 16 thread(s).; Run finished in 36.0558ms; $ ./root-test 32; Using 32 thread(s).; Run finished in 73.1081ms; ```. Without your patch:. ```; $ ./root-test 1; Using 1 thread(s).; Run finished in 11.3427ms; $ ./root-test 2; Using 2 thread(s).; Run finished in 89.8777ms; $ ./root-test 4; Using 4 thread(s).; Run finished in 419.919ms; $ ./root-test 8; Using 8 thread(s).; Run finished in 2541.3ms; $ ./root-test 16; Using 16 thread(s).; Run finished in 7807.43ms; ```. @Tmplt Could you confirm that this also resolves the issue in our framework?. @pcanal Assuming this would be merged - in which ROOT version would this fix land? Would it be possible to backport it to a currently released stable version via its `-patches` branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408667428:221,test,test,221,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408667428,11,['test'],['test']
Testability,"Thanks @saisoma123 for all your wonderful PRs! Could you, in the future:; - set @vgvassilev (our cpt expert) as reviewer?; - assign cpt PRs to @vgvassilev ?; - add to the title of the PR `[skip-ci]` (because ROOT doesn't have tests for cpt there's no need to run ROOT's continuous integration suite); - use a tag in the commit title that signals *where* the change is happening, e.g. `[cling-cpt] Edited verbose output flag` or similar?. Thanks, much appreciated!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10738#issuecomment-1153519304:226,test,tests,226,https://root.cern,https://github.com/root-project/root/pull/10738#issuecomment-1153519304,1,['test'],['tests']
Testability,Thanks @sawenzel . What could be a good way to test this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16426#issuecomment-2350110937:47,test,test,47,https://root.cern,https://github.com/root-project/root/pull/16426#issuecomment-2350110937,1,['test'],['test']
Testability,"Thanks @stwunsch ! About the tests, yes, I will add tests for this and https://github.com/root-project/root/pull/7072",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7071#issuecomment-766856450:29,test,tests,29,https://root.cern,https://github.com/root-project/root/pull/7071#issuecomment-766856450,2,['test'],['tests']
Testability,"Thanks @vepadulano for you review! I'm in the process of addressing your comments, I only have one comment that I can't act on:. > * We need a test that checks attributes of the imported submodules. For example `from ROOT import RDF`, we should check that 1. the module has all the atttributes as defined at https://docs.python.org/3/library/importlib.html#importlib.abc.Loader.load_module and that it also has the correct pythonizations and they work. Why is it exactly important to have all these attributes set? For the ROOT facade itself, it's easy to do (my PR does it in fact), but for arbitrary submodules I wouldn't know what to do. Often, the submodules are represented by C++ namespaces, so all these Python-module related dunder attributes are pretty meaningless. What exactly is your suggestion here?. Thanks again!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1860573175:143,test,test,143,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1860573175,1,['test'],['test']
Testability,"Thanks @vepadulano for your wise comments. I propose I elaborate a tests and add it to this PR and if/once merged, I open an issue to remind us to re-evaluate the pythonization once rebasing to the new cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876#issuecomment-1767965635:67,test,tests,67,https://root.cern,https://github.com/root-project/root/pull/13876#issuecomment-1767965635,1,['test'],['tests']
Testability,"Thanks Danilo, I added all the tests I deem necessary now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2515#issuecomment-415746941:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/2515#issuecomment-415746941,1,['test'],['tests']
Testability,"Thanks Josh! Unfortunately the test failures above seem to be caused by the changes in this PR but I have no idea why or how to fix them (yet). Anyway it's on us. These changes are ok, it's on my to do list to debug the pyroot failures, given my current bandwidth it will probably have to be after Easter :/ sorry",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805874981:31,test,test,31,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805874981,1,['test'],['test']
Testability,"Thanks Philippe - I shall try that; ________________________________; From: Philippe Canal ***@***.***; Sent: 27 February 2023 18:50; To: root-project/root; Cc: Sunanda Banerjee; Mention; Subject: Re: [root-project/root] Getting a crash while reading a Root Tree (Issue #12370). Alternatively you can run valgrind to get more information on this kind of failure:. valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp --log-file=val.01.log myexecutable myargs. —; Reply to this email directly, view it on GitHub<https://github.com/root-project/root/issues/12370#issuecomment-1446778005>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABGMZOSBSY5NDNIO7K6JZEDWZTSPBANCNFSM6AAAAAAVFHT3OU>.; You are receiving this because you were mentioned.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12370#issuecomment-1447781427:422,log,log-file,422,https://root.cern,https://github.com/root-project/root/issues/12370#issuecomment-1447781427,2,['log'],"['log', 'log-file']"
Testability,Thanks a lot @ferdymercury for the fix and the test! ; I am sure this bug fix will be very useful and will save a lot of headache to several analyses in the future :) !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15059#issuecomment-2023112521:47,test,test,47,https://root.cern,https://github.com/root-project/root/pull/15059#issuecomment-2023112521,1,['test'],['test']
Testability,"Thanks a lot @pcanal for this improvement: experiments will appreciate. Given that we still run, with somewhat lower frequency than others, 6.26 builds and tests, would a simple test for 6.26 be of help in roottest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15006#issuecomment-2010652089:156,test,tests,156,https://root.cern,https://github.com/root-project/root/pull/15006#issuecomment-2010652089,2,['test'],"['test', 'tests']"
Testability,"Thanks a lot @wlav. I really meant the `cppyy` included in ROOT. Running your example against `tags/v6-28-12`, the last assertion fails, where the `last` RSS reads `2.39 GB` and the `current` reads `4.31 GB`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15703#issuecomment-2145808119:120,assert,assertion,120,https://root.cern,https://github.com/root-project/root/issues/15703#issuecomment-2145808119,1,['assert'],['assertion']
Testability,"Thanks a lot again @jblomer, @hahnjo. As we discussed at the meeting today, I adopted the suggestions, added a unit test that merges `RNTuple` through `TFileMerger`, and rebased the branched on top of `master`. I think this PR is good to go. Therefore, I'm marking it ready. Please let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398#issuecomment-1961630927:116,test,test,116,https://root.cern,https://github.com/root-project/root/pull/14398#issuecomment-1961630927,1,['test'],['test']
Testability,"Thanks a lot everyone!. Let me comment on the ATLAS question anyways. At this point we do all our reading/writing tests within consistent ROOT versions. So, breaking backward/forward compatibility wouldn't be an issue for us just yet (i.e. until we start writing official data, which is some ways ahead).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16136#issuecomment-2258535414:114,test,tests,114,https://root.cern,https://github.com/root-project/root/pull/16136#issuecomment-2258535414,1,['test'],['tests']
Testability,"Thanks a lot for opening the PR, @devajithvs!. I have measured the runtime of all PyROOT tests without and with this PR, and there is no significant difference (see results at the end of this post). Given that the CI is also green, I would suggest you polish up the implementation a little bit and open a PR upstream:; https://github.com/wlav/CPyCppyy. ```txt; Test name Before After; pyunittests-pyroot-root-module 0.57 s 0.57 s; pyunittests-pyroot-pyz-decorator 0.47 s 0.48 s; pyunittests-pyroot-pyz-pretty-printing 0.81 s 0.81 s; test-import-numpy 0.10 s 0.10 s; pyunittests-pyroot-pyz-array-interface 1.06 s 1.05 s; pyunittests-pyroot-pyz-stl-vector 0.79 s 0.77 s; pyunittests-pyroot-pyz-stl-set 0.81 s 0.82 s; pyunittests-pyroot-pyz-tobject-contains 0.49 s 0.49 s; pyunittests-pyroot-pyz-tobject-comparisonops 0.50 s 0.49 s; pyunittests-pyroot-pyz-tclass-dynamiccast 0.49 s 0.48 s; pyunittests-pyroot-pyz-tcontext-contextmanager 0.53 s 0.52 s; pyunittests-pyroot-pyz-tdirectory-attrsyntax 0.52 s 0.52 s; pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get 0.54 s 0.52 s; pyunittests-pyroot-pyz-tfile-attrsyntax-get-writeobject-open 0.63 s 0.62 s; pyunittests-pyroot-pyz-tfile-constructor 0.49 s 0.49 s; pyunittests-pyroot-pyz-tfile-context-manager 0.58 s 0.59 s; pyunittests-pyroot-pyz-ttree-branch-attr 0.80 s 0.80 s; pyunittests-pyroot-pyz-ttree-iterable 0.75 s 0.75 s; pyunittests-pyroot-pyz-ttree-setbranchaddress 0.86 s 0.85 s; pyunittests-pyroot-pyz-ttree-branch 0.79 s 0.78 s; pyunittests-pyroot-pyz-th1-operators 0.56 s 0.56 s; pyunittests-pyroot-pyz-th2 0.50 s 0.50 s; pyunittests-pyroot-pyz-tgraph-getters 0.68 s 0.67 s; pyunittests-pyroot-pyz-tcollection-len 0.50 s 0.50 s; pyunittests-pyroot-pyz-tcollection-listmethods 0.50 s 0.50 s; pyunittests-pyroot-pyz-tcollection-operators 0.50 s 0.50 s; pyunittests-pyroot-pyz-tcollection-iterable 0.49 s 0.50 s; pyunittests-pyroot-pyz-tseqcollection-itemaccess 0.51 s 0.51 s; pyunittests-pyroot-pyz-tseqcollection-listmethods 0.52 s 0.52 s; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16000#issuecomment-2215185086:89,test,tests,89,https://root.cern,https://github.com/root-project/root/pull/16000#issuecomment-2215185086,3,"['Test', 'test']","['Test', 'test-import-numpy', 'tests']"
Testability,"Thanks a lot for the quick review @vepadulano. I applied all the changes. When removing `#include <ROOT/TestSupport.hxx>`, I realized it was mainly used in the test for ranges. I removed this test. In fact, valid ranges are now tested inside of the test for Friends, e.g. `TEST_P(RDatasetSpecTest, Friends)`. Invalid ranges are not tested now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11046#issuecomment-1194539733:104,Test,TestSupport,104,https://root.cern,https://github.com/root-project/root/pull/11046#issuecomment-1194539733,6,"['Test', 'test']","['TestSupport', 'test', 'tested']"
Testability,"Thanks a lot for the review and the questions!. > * Are we sure it's not possible to avoid the extra call to the interpreter? That is not done in the current status (there is the `eval` but I don't think it calls directly into cling every time). That's true, but probably `eval` is even worse. It's the `gInterpreter` of Python, which is ""many orders of magnitude slower for smaller expressions/objects than plain ol’ Python"": https://pandas.pydata.org/pandas-docs/version/0.20/enhancingperf.html#expression-evaluation-via-eval-experimental. Also, it's more flexible. Since in Python, you have to do `ROOT.kRed`, while gInterpreter can just take `kRed`, there was this hack of adding ""ROOT."" to the string passed to eval, which reduced flexibility and would result in unexpected errors for example when the user does `""1+kRed""` instead of `""kRed+1""`. > * What happens after this change to keyword arguments? Is this tested somewhere? For instance, can I call the same Python function with a random order of the keyword arguments even after these changes?. It is tested in all RooFit tutorials that do plots, and it works just fine. And yes, the keyword argument pythonization still works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16707#issuecomment-2443867878:916,test,tested,916,https://root.cern,https://github.com/root-project/root/pull/16707#issuecomment-2443867878,2,['test'],['tested']
Testability,"Thanks a lot for this PR, that results from very intense debugging sessions initially enabled by @silverweed . Once the tests are green, I think these changes should be merged asap. There is no point in keeping around a fully jitted RDF+TTreeCache if it won't be used any more. After the aforementioned step is completed, we might perhaps think about what can go wrong with used memory and what we can do about it. For example, suppose a workflow with N dataframes. For some reason we do not control (e.g. some Dask internals or something imposed by the infrastructure) the scheduling is such that all of them are alive until the end of the processing. Can we cap the memory used by the caches? For example we could just keep 1 buffer and assign it to the tree cache of the chain associated to the RDF pulled from the worker's rdfs cache before using that RDF to process data (effectively using 1 single cache). De facto this means assuming N RDFs in flight but one TTreeCache buffer per worker. Apologies if I am missing something in the distrdf logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2246372940:120,test,tests,120,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2246372940,2,"['log', 'test']","['logic', 'tests']"
Testability,Thanks a lot for your patch! Let us triple check that the primitives are actually drawn in a test notebook.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1191#issuecomment-336918799:93,test,test,93,https://root.cern,https://github.com/root-project/root/pull/1191#issuecomment-336918799,1,['test'],['test']
Testability,Thanks a lot! Can you still take a look at the logging please? I made a suggestion on how to avoid adding the inheritance from TObject: https://github.com/root-project/root/pull/9482#pullrequestreview-858288936,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1017621798:47,log,logging,47,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1017621798,1,['log'],['logging']
Testability,"Thanks a lot! From my side, there is no urgency to have a release for Ubuntu 22 and 24: for our tests we switched to a RHEL9 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16774#issuecomment-2446120296:96,test,tests,96,https://root.cern,https://github.com/root-project/root/issues/16774#issuecomment-2446120296,1,['test'],['tests']
Testability,"Thanks a lot, @andriish !. > so the people who will use that event display will avoid building ROOT and related issues. One last question (likely!) to understand the context: do you run the GUI with fp exceptions on in production, or is this for testing / development only?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713661081:246,test,testing,246,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713661081,1,['test'],['testing']
Testability,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567#issuecomment-301234996:169,test,tests,169,https://root.cern,https://github.com/root-project/root/pull/567#issuecomment-301234996,1,['test'],['tests']
Testability,Thanks again for the contributions! I implemented a unit test in this PR: https://github.com/root-project/root/pull/8179.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8177#issuecomment-841887499:57,test,test,57,https://root.cern,https://github.com/root-project/root/pull/8177#issuecomment-841887499,1,['test'],['test']
Testability,"Thanks for bringing my attention to this MemPool business. For https://github.com/root-project/root/pull/7907, I benchmarked an example fit with toys from CMS, and the MemPoolForRooSets related functions actually took a lot of time there. Maybe it's just my build environment, but it would be interesting to see how the performance is without the mem pool enabled. Adding a unique ID to the RooArgSets as you suggest in the documentation easy, but I guess finding all the pointer comparisons that would need to be replaced is hard :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7904#issuecomment-821570564:113,benchmark,benchmarked,113,https://root.cern,https://github.com/root-project/root/pull/7904#issuecomment-821570564,1,['benchmark'],['benchmarked']
Testability,"Thanks for checking!. Hmm that is surprising, maybe the Pythonizations don't get correctly reinstalled when you reinstall ROOT. But probably I made a mistake... But how do you run this test Python test correctly? When I try:; ```; ctest --output-on-failure -R ""tutorial-roofit-rf110_normintegration-py"" .; ```; I get a failure at an earlier stack:; ```; ERROR: ld.so: object 'libclang_rt.asan-x86_64.so' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.; =================================================================; ==561461==ERROR: AddressSanitizer: use-after-poison on address 0x555b05d51920 at pc 0x7fb562864119 bp 0x7ffd502cd720 sp 0x7ffd502cd710; READ of size 8 at 0x555b05d51920 thread T0; #0 0x7fb562864118 in void std::__insertion_sort<llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter>(llvm::Attribute*, llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.0] (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c64118); #1 0x7fb56286a08f in llvm::AttributeSetNode::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Attribute>) (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c6a08f); #2 0x7fb56286ca42 in llvm::AttributeSetNode::get(llvm::LLVMContext&, llvm::AttrBuilder const&) (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c6ca42); #3 0x7fb5628944b3 in llvm::AttributeList::addAttributes(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&) const (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c944b3); #4 0x7fb5628958f1 in llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const (/home/rembserj/spaces/master-asan/root/src/build/lib/libCling.so+0x14c958f1); ....; ```; Probably it's related to this `ERROR`. You have an idea how I could fix it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221#issuecomment-1222092962:185,test,test,185,https://root.cern,https://github.com/root-project/root/issues/11221#issuecomment-1222092962,2,['test'],['test']
Testability,"Thanks for checking. It doesn't fail for Linux on your end? Doesn't the command exit ROOT without any message?. On Ubuntu 22.04 and ROOT 6.30.04, `.Class` silently crashes. (It exits ROOT, you are no longer in the prompt, but no crash is shown with the binary release). If I compile in debug mode, then I get with 6.31.01 the same as you:; ```; struct std::_Head_base<_Idx, _Head, true>; SIZE: (NA) FILE: tuple LINE: -1; List of member variables: -------------------------------------------------; root.exe: /home/user/build/build-root-Desktop-Debug/interpreter/llvm-project/llvm/tools/clang/include/clang/AST/TypeNodes.inc:73: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140#issuecomment-1929000488:706,Assert,Assertion,706,https://root.cern,https://github.com/root-project/root/issues/10140#issuecomment-1929000488,1,['Assert'],['Assertion']
Testability,"Thanks for checking. My second use case was a combobox selection leading to a tgtextbutton change. I tried it with your example, but it is not working. Do you get a similar crash on Windows?; ```; #include ""TGFrame.h""; #include ""TGButton.h""; #include ""TGComboBox.h"". void testSignalSlot(); {; TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);; TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);; mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));; TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");; myTGComboBox->AddEntry(""test1"", 0);; myTGComboBox->AddEntry(""test2"", 1);; mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));; TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");; mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));; myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; mainframe->MapSubwindows();; mainframe->Layout();; mainframe->MapWindow();; }; ```; ```. root -l testSignalSlot.cpp+; root [0] ; Processing testSignalSlot.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so; root [1] ; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc; entry=0x7ffe8def7918, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f49a1662eb5 in T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779128525:272,test,testSignalSlot,272,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779128525,1,['test'],['testSignalSlot']
Testability,Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002; ```; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:227,log,log,227,https://root.cern,https://github.com/root-project/root/issues/9424,6,"['log', 'test']","['log', 'testBuildDir', 'tests']"
Testability,"Thanks for letting us know, but I'm not sure if we want to link another implementation from ROOT's documentation - @lmoneta?. A few comments on the repository:; * There doesn't seem to be a function to extract numbers from the state. `ranluxpp-test.c` suggests to use 64 bit numbers, which is neither the 52 bits in Sibidanov's implementation nor the 48 bits that ROOT returns since the latest update to retain the connection to the theoretical properties.; * AFAICT the generator is based on the older version that didn't convert the LCG state back to RANLUX numbers. Please see Section 2.3 of our paper for possible issues regarding a bias in the bits from the LCG state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8504#issuecomment-866067797:244,test,test,244,https://root.cern,https://github.com/root-project/root/issues/8504#issuecomment-866067797,1,['test'],['test']
Testability,"Thanks for looking at it! Right now there is no unit test, but I will add one before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10397#issuecomment-1098813380:53,test,test,53,https://root.cern,https://github.com/root-project/root/pull/10397#issuecomment-1098813380,1,['test'],['test']
Testability,"Thanks for looking at my pull request. I initially only tested a few root files that all had the same histograms. Now, when I try to hadd files with histograms with different names, it crashes with:; `Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting bla3.root) has been deleted (likely due to a TTree larger than 100Gb)`. I will return when I have fiddled some more with it. Unfortunately for this request, I have solved the issue that prompted this work by chaining `rootcp` for the specific folders to temp. files and `hadd`ing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4615#issuecomment-549914327:56,test,tested,56,https://root.cern,https://github.com/root-project/root/pull/4615#issuecomment-549914327,1,['test'],['tested']
Testability,"Thanks for merging this, @pcanal. @dpiparo I will add the test as soon as I come back from vacation. The chunking introduces partial reduction of the results (one per chunk). This reduces memory allocation in the Map stage. The propagated error in these partial results will differ with the number of data elements processed per chunk. As a consequence, the final reduction step will be carried out with differing implicit errors when specifying different numbers of chunks. This is normal and expected. Would you have it otherwise? I could see to apply the reduction step with a compensated sum if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-392248316:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-392248316,1,['test'],['test']
Testability,"Thanks for noticing this! I have opened a PR to update the docs. However, I kept the logic of forwarding to the fit options for backwards compatibility.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15405#issuecomment-2139231593:85,log,logic,85,https://root.cern,https://github.com/root-project/root/issues/15405#issuecomment-2139231593,1,['log'],['logic']
Testability,"Thanks for revisiting this!. > So I think the argument that Windows uses `%PATH` is in support of having `ROOT_LIBRARY_PATH` also for Windows. @ChristianTackeGSI would you be able to help us with that, to get this merged for 6.24?. 1. So the choosing of the name `ROOT_LIBRARY_PATH` is okayed by everyone? Just to make sure, I got it.; 2. So my priority (re-)ordering is also fine?; 3. I can create a patch ""suggestion"" for Windows. But I can't test it in any way. If that is, what you'd like me to do, I can do that, yes. Disclaimer: I can't even compile test, so it might end up not being compile-able for Windows.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-800467082:445,test,test,445,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-800467082,2,['test'],['test']
Testability,"Thanks for testing! One question:; In your image, does root/lib/libvdt.so exist and are the headers stored in include/vdt, as well as cmake/modules/FindVdt.cmake ?; If yes, then installing libvdt-dev is just a ""hacky workaround"", and the problem is in RootConfig.cmake logic not finding it, which should be fixed in the next patch release.; If not, then your solution is the way to go and it should be added also to the ROOT website.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038#issuecomment-2242546766:11,test,testing,11,https://root.cern,https://github.com/root-project/root/issues/16038#issuecomment-2242546766,2,"['log', 'test']","['logic', 'testing']"
Testability,"Thanks for the PR! I want to test the code soon (tensorboard is awesome!), but here already two issues you should address:; 1. Squash your commits into a single one (run `rebase -i HEAD~<number of commits` and squash them); 2. Fix the `clang-format` diff, go to the travis build (see below) and have a look at the job output. There should be a diff, which you can apply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-346792164:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-346792164,1,['test'],['test']
Testability,Thanks for the PR. Is this code tested anywhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15790#issuecomment-2158983805:32,test,tested,32,https://root.cern,https://github.com/root-project/root/pull/15790#issuecomment-2158983805,1,['test'],['tested']
Testability,"Thanks for the comment @marsupial ! I'll make more tests with CP_UTF8; And the problem is appearing when deleting characters in the prompt (via backspace or del), the remaining of the line is filled with empty squares; So the issue is that ROOT is mixing unicode and non-unicode charaters. We will have to fix it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1397#issuecomment-348891703:51,test,tests,51,https://root.cern,https://github.com/root-project/root/pull/1397#issuecomment-348891703,1,['test'],['tests']
Testability,"Thanks for the comment. At this point this issue seems to conflate two things: ; 1. The dependencies of python tests. This should have been addressed by #16555 ; 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2384870116:111,test,tests,111,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2384870116,1,['test'],['tests']
Testability,Thanks for the contribution!. There is now a slightly cleaned up version of this ([PR#3493](https://github.com/root-project/root/pull/3493)). (Your commits are still part of that PR ;). The main reason for creating a new PR was that the required testing code was a bit involved in getting right. Let's continue the discussion there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3414#issuecomment-468750269:246,test,testing,246,https://root.cern,https://github.com/root-project/root/pull/3414#issuecomment-468750269,1,['test'],['testing']
Testability,Thanks for the feedback Philippe and Danilo!; will modify it and send the corresponding tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-322990975:88,test,tests,88,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-322990975,1,['test'],['tests']
Testability,"Thanks for the fix!. I imported the patch on top of v6.20/02, recompiled and to my surprise in my case the libpng still points to the system one:; `libpng15.so.15 => /lib64/libpng15.so.15 (0x00007f99416d0000)`. Log: https://jgrosseo.web.cern.ch/jgrosseo/tmp/log; CMakeCache.txt: https://jgrosseo.web.cern.ch/jgrosseo/tmp/CMakeCache.txt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5717#issuecomment-635155488:211,Log,Log,211,https://root.cern,https://github.com/root-project/root/pull/5717#issuecomment-635155488,2,"['Log', 'log']","['Log', 'log']"
Testability,"Thanks for the great comments @guitargeek! All the ones I didn't comment on I agree with, so will implement those soon. I agree that it has become quite a complex class. It would be nice if things could be refactored at some time. However, part of it is also inevitable, I fear, because `RooMinimizer` has to bridge between two rather different frameworks, that of Minuit2 and RooFit, and now due to all the parallel processing work will have to deal with even more stuff than before. By the way, just as a historical aside: at some point I had turned `RooMinimizer` into a fully templated class, which made it even more horrible to maintain and time consuming to develop (since the header had to be recompiled on every change). I managed to trim the template horror down to just the constructor by introducing `RooAbsMinimizerFcn`. That introduced its own complexity here and there, as we discussed above :) But it was better in the end, I think. Note that the sole reason the template parameter is still necessary in the constructor is that the `MinimizerFcn` needs the proper constructor inside the `RooMinimizer` constructor. I like your suggestion of also using the template class argument instead of the `dynamic_cast` using `std::is_same`, but this is not strictly necessary like using the proper constructor is. By the way, note also that in the upcoming TestStatistics PR, there will be yet another `RooMinimizer` constructor, also with template arguments, but different ones, namely the concrete calculator classes for the likelihood and gradient. Maybe it would be better to discuss this design aspect further in that PR, because then we have the full picture.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879703750:1363,Test,TestStatistics,1363,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879703750,1,['Test'],['TestStatistics']
Testability,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:; > ; > ; > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or unsubscribe.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-783982063:44,test,tests,44,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-783982063,2,"['log', 'test']","['log', 'tests']"
Testability,Thanks for the hint @pcanal ! I actually like the idea of an overload to `WriteObject` much more. Having this extra condition in the TKey constructor that accepts a void pointer is a kind of side-effect that I don't like. I'll close this PR in favor of the new logic,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8879#issuecomment-908335592:261,log,logic,261,https://root.cern,https://github.com/root-project/root/pull/8879#issuecomment-908335592,1,['log'],['logic']
Testability,"Thanks for the hint, I tested the following two cases and did not see a problem:; - Test example, identical outcome as our quick and dirty fix, as I expected; - Replacing the fix in the FairRoot class by this and re-running their test-suite, this ran through successfully (so it does not break any other tested behavior of them). So I would think that your proposal would be perfect for us, as I had anyway introduced a `RefreshPhysicalNodes` just before adding the call to our fix. @fuhlig1 Do you think I should also do the full test with the original error report? (= removing the fix in FairRoot + replacing the fix in Cbmroot by this block + re-running the mCBM macro) ; Or would what I already checked be enough from our side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1433310934:23,test,tested,23,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1433310934,5,"['Test', 'test']","['Test', 'test', 'test-suite', 'tested']"
Testability,"Thanks for the insight! I should have checked to commit log, I just assumed it has always been like this for a random choice. We can also keep it an object library for now! My usecase would also be covered with that, since I build everything with `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16568#issuecomment-2386596877:56,log,log,56,https://root.cern,https://github.com/root-project/root/pull/16568#issuecomment-2386596877,1,['log'],['log']
Testability,"Thanks for the insight. > for the memory leak, do you have a semi-standalone program that shows the growing memory usage on 6.28, but not on 6.26?. Not really. > Does it involve TChains, as reported in https://github.com/root-project/root/issues/13130?. It might indirectly. I never dealt with the part of our application interacting with ROOT but after a quick look, we mostly directly use `TTree`. However, we link to and use [HepMC](https://ep-dep-sft.web.cern.ch/project/hepmc), which makes heavier use of ROOT. . Now, I just realised that many (if not most) of our unit tests do not use ROOT, but _only link_ to its libraries. In particular, I tried to add a trivial unit test file; ```cpp; #include ""vir/test.h"" // This include has to be first. TEST(){ std::cout << ""Hello world\n""; }; ```; and compiling as the other ones, i.e. linking it to; ```console; $ ldd trivial_tests | grep -i 'root'; 	libGui.so => /SMASH/root_install/lib/libGui.so (0x00007f21967ee000); 	libCore.so => /SMASH/root_install/lib/libCore.so (0x00007f2195e98000); 	libImt.so => /SMASH/root_install/lib/libImt.so (0x00007f2195e74000); 	libRIO.so => /SMASH/root_install/lib/libRIO.so (0x00007f219541f000); 	libNet.so => /SMASH/root_install/lib/libNet.so (0x00007f2195280000); 	libHist.so => /SMASH/root_install/lib/libHist.so (0x00007f21949cb000); 	libGraf.so => /SMASH/root_install/lib/libGraf.so (0x00007f21946ea000); 	libGraf3d.so => /SMASH/root_install/lib/libGraf3d.so (0x00007f21945ab000); 	libGpad.so => /SMASH/root_install/lib/libGpad.so (0x00007f2194408000); 	libROOTVecOps.so => /SMASH/root_install/lib/libROOTVecOps.so (0x00007f21941b1000); 	libTree.so => /SMASH/root_install/lib/libTree.so (0x00007f2193e65000); 	libTreePlayer.so => /SMASH/root_install/lib/libTreePlayer.so (0x00007f2193b41000); 	libRint.so => /SMASH/root_install/lib/libRint.so (0x00007f2193ae4000); 	libPostscript.so => /SMASH/root_install/lib/libPostscript.so (0x00007f2193953000); 	libMatrix.so => /SMASH/root_install/lib/libMatrix.so (0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1816003128:575,test,tests,575,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1816003128,4,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,Thanks for the logfile. It seems your storage space is full: did you try to free some space to see if there is another issue which is related to ROOT we can help with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12497#issuecomment-1932000418:15,log,logfile,15,https://root.cern,https://github.com/root-project/root/issues/12497#issuecomment-1932000418,1,['log'],['logfile']
Testability,"Thanks for the patch, Advait!. My thoughts: If the function is added to ROOT as is, I'd implement it in the header and simply `return a==b`. The C/C++ cast from `bool` to `int` is effectively a Kronecker Delta. That said, I'm not sure if the function as such does in practice what users expect. Floating point values are hardly ever exactly equal, but usually one tests for them to be equal within +/ epsilon. I'll assign to @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8719#issuecomment-886443983:364,test,tests,364,https://root.cern,https://github.com/root-project/root/pull/8719#issuecomment-886443983,1,['test'],['tests']
Testability,"Thanks for the pointers, that makes sense! There are two things that still confuse me, however:; 1. When the `std::set` fields PR was merged these errors were not yet present in the CI, even though the test includes a `std::set<pair<int, CustomStruct>>`. In fact, if I go back to the commit right before the maps were added (https://github.com/root-project/root/commit/cddecc1d576df235c38a90295a9fa29a28a8a6b4), this test passes without having to have the dictionary entry for the pair. I cannot pinpoint anything that got added alongside the maps that might change this, but perhaps these additions change the internal build machinery just enough for it to also break without modules enabled.; 2. There are no `std::pair` dictionaries in `core/clingutils/src/*LinkDef.h`. There are a few defined in other places, but none with the numerical types mentioned here. In any case, I will add the above suggestion to make sure that at least we can fail more gracefully (I have not checked with `RTupleField` but I imagine this will also be problematic, so probably this change should be added to `RRecordField`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084#issuecomment-1822503869:202,test,test,202,https://root.cern,https://github.com/root-project/root/issues/14084#issuecomment-1822503869,2,['test'],['test']
Testability,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992593304:247,log,logging,247,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304,3,['log'],['logging']
Testability,"Thanks for the reply. Yes, it is still an issue because the problem is in TList itself not being (completely) thread-safe even if UseRWLock is called. In particular, there is a suspicious `std::make_shared< link >` that might be giving problems when 'sharing it'. Find attached the complete log.; [helgrindlog.txt](https://github.com/root-project/root/files/6773132/helgrindlog.txt). The issue is that when a timer is added, it calls FindObject:; https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L617. but at the same time, a new object might have been added in the meanwhile by the other thread:; https://github.com/root-project/root/blob/master/core/cont/src/TList.cxx#L738. Maybe a mutex should be added inside the TList class to handle this?. Here the XML version (lower part of it):; ![image](https://user-images.githubusercontent.com/10653970/124675469-04769e80-debd-11eb-95d0-595f613c4689.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-875132812:291,log,log,291,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-875132812,1,['log'],['log']
Testability,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error?. On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using?. Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608#issuecomment-709037423:37,test,test,37,https://root.cern,https://github.com/root-project/root/issues/6608#issuecomment-709037423,1,['test'],['test']
Testability,"Thanks for the response. The reason I've noticed this PR is because in my instance it appears that it aborted CMake due lack of Java in the build environment. I don't believe the `fail-on-missing` option is turned on (although my CMake knowledge isn't excellent, so perhaps I'm being naive here), so at least in the current HEAD it appears to me to be a mandatory component. If you'd like, you can take a look at the build log here, ; https://github.com/MrCarroll/root-snap/runs/2059798478?check_suite_focus=true#step:3:3399. I've no technical reason against including Java in the snap to enable this functionality, but I don't believe it's functionality the users of the snap would likely expect it to have, it's primarily targetted to users who aren't likely to have access to a cluster to use. You can treat the snap as effectively being an instance of Ubuntu 20.04; if you'd like I can try see if I have the same problem in the normal Ubuntu environment to see if it reproduces there. Otherwise I'll likely pass the explicit flag to turn this off in my instance if it does appear to be a problem specific to the snap build. Thanks again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793527779:423,log,log,423,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793527779,1,['log'],['log']
Testability,"Thanks for the review @Axel-Naumann!; > ```; > extern { enum {k; }; };; > struct { enum {k; }; };; > namespace { enum {k; }; }; > inline namespace N { enum {k; }; }; > ```; This change only applies to DeclExtractor; as per the current implementation, `extern ...` and `namespace { ... }` decls are not wrapped (thus, not decl-extracted). However, `struct { enum { ... } } foo` is. In this case, lookup works as usual if the `CXXRecordDecl` is moved out of the wrapper (as it is a `DeclContext` itself).; For completeness, I have added a test case for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9789#issuecomment-1028300025:537,test,test,537,https://root.cern,https://github.com/root-project/root/pull/9789#issuecomment-1028300025,1,['test'],['test']
Testability,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094750476:71,log,logic,71,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476,1,['log'],['logic']
Testability,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:; ```; Note that the code also had no obvious memory leak before. where it was; using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy; API. If similar problems appear, this function might have to be; investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic; into the Python layer is better anyway.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608#issuecomment-2125603196:442,log,logic,442,https://root.cern,https://github.com/root-project/root/pull/15608#issuecomment-2125603196,1,['log'],['logic']
Testability,"Thanks for the review! I'm aware of the missing `SaveGraph` tests, and I'll also add `Cache` and `Snapshot` tests (they also have `InterpreterDefine` calls).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682080893:60,test,tests,60,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682080893,2,['test'],['tests']
Testability,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10909#issuecomment-1181836400:44,test,test,44,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400,4,['test'],"['test', 'tested']"
Testability,"Thanks for the review!. > Are all RooStats tutorials dependent on XML ? I think some of them, not using the HIstFactory to create the input workspace, could work without XML. Anyway for simplicity is probably better excluding all if XML is not present. No, not all of them. In the past, I think Windows was built without XML, so it was more important to be pedantic with the vetos there to have at least some test coverage of RooStats on Windows. Nowadays, no test configuration has `xml=OFF` anyway. > Thanks for simplifying the rs401d to use the RooGenericPdf. In the past it was too slow to use with CINT the generic PDF, now with Cling should not be a problem. Yes, I measured the timing, and there was no slowdown from using `RooGenericPdf` in this particular case!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14074#issuecomment-1818475645:409,test,test,409,https://root.cern,https://github.com/root-project/root/pull/14074#issuecomment-1818475645,2,['test'],['test']
Testability,"Thanks for the review, especially for looking also at the trivial changes and giving suggestions to improve the logic!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11820#issuecomment-1338881837:112,log,logic,112,https://root.cern,https://github.com/root-project/root/pull/11820#issuecomment-1338881837,1,['log'],['logic']
Testability,"Thanks for the suggestion. I tested it and it works as well. Since in the names the c++ typenames were used instead of the ROOT typedefs, I assumed the class would always expext the c++ typename which is the same for Float_t and Float16_t as well as Double_t and Double32_t. I will also add a small test using the TTreeReader soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-921229385:29,test,tested,29,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-921229385,2,['test'],"['test', 'tested']"
Testability,"Thanks for the suggestions @lmoneta! I have applied them all, plus one extra, namely `GetFValue()`, which I think should just be `GetValue()` (I probably just verbatim copied the `f` from the ROOT-style named `fVal`). I also removed the `set_step_tolerance` etc functions, they were duplicates of already existing `SetStepTolerance` in the correct coding style, I must have overlooked those. Finally, I deleted the empty virtual destructor, I don't think that had any use, so now the class is not virtual anymore, which may give some micro-performance gain. A unit test would be good, indeed. However, #8596 does provide test coverage of the class, since RooGradMinimizerFcn uses NumericalDerivator. I hope that this is sufficient for the time being and we can indeed add unit tests in a later PR, as you suggest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-877633636:565,test,test,565,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-877633636,3,['test'],"['test', 'tests']"
Testability,"Thanks for the tip! Adding `-fno-rtti` to cling works, but only in the case where the function is defined inline in the header. When the function is defined in a separate TU which is linked into the host application, cling fails to find the symbol. I've updated the test case here: https://github.com/jeaye/cling-linkage-error-test-case. Basically just moved `test::integer::to_string` into its own cpp file, which then brings the linker errors back when trying to call it from cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193155383:266,test,test,266,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193155383,3,['test'],"['test', 'test-case']"
Testability,"Thanks for the updates again! The jenkins tests passed, so I think you can merge it now, @hageboeck. Note that there are some remaining Travis CI failures, but as far as I can tell they are not related to the changes in this PR, right? They relate to the `checkLimits()` call in `RooBinIntegrator`, which has already been there before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8167#issuecomment-858071426:42,test,tests,42,https://root.cern,https://github.com/root-project/root/pull/8167#issuecomment-858071426,1,['test'],['tests']
Testability,"Thanks for these changes. I apologise for coming back to them so late. ; I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):; - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing?; - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages?; - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813#issuecomment-2038169206:393,test,test,393,https://root.cern,https://github.com/root-project/root/pull/14813#issuecomment-2038169206,4,['test'],"['test', 'tests']"
Testability,Thanks for this Jonas. It looks good but before merging we need too undrrstand the test failures,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9458#issuecomment-996737995:83,test,test,83,https://root.cern,https://github.com/root-project/root/pull/9458#issuecomment-996737995,1,['test'],['test']
Testability,"Thanks for this code. Could you please add in the description of the PR why you are doing this, and especially what problem you are solving? A good way to tackle this would be to try to convince the reader that thanks to the code, ROOT will be like before (e.g. nothing breaks for the experiments, users, in the development process of ROOT iteself) but better (e.g. there is a reduction in the cost of maintenance, development, testing, or an increase of runtime performance).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105#issuecomment-2031929972:428,test,testing,428,https://root.cern,https://github.com/root-project/root/pull/15105#issuecomment-2031929972,1,['test'],['testing']
Testability,Thanks for this code.; Could you also provide a test that highlights the problem being solved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14968#issuecomment-1997765489:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/14968#issuecomment-1997765489,1,['test'],['test']
Testability,Thanks for this contribution. Can you also add tests for this (new) feature? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4615#issuecomment-549871052:47,test,tests,47,https://root.cern,https://github.com/root-project/root/pull/4615#issuecomment-549871052,1,['test'],['tests']
Testability,Thanks for this effort. Are tests included in the forthcoming json/svg testing battery?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15928#issuecomment-2190800873:28,test,tests,28,https://root.cern,https://github.com/root-project/root/pull/15928#issuecomment-2190800873,2,['test'],"['testing', 'tests']"
Testability,"Thanks for this improvement. I propose the following way forward, if you agree:; 1. A small unit test is added for this fix; 2. We wait for @pcanal to approve (with a test, I would be ready to approve and to pick up the rest of the fixing, but I prefer to have his opinion on this); 3. We promote the old JIRA item as a new GH issue specific to the residual issue. Does it make sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15929#issuecomment-2190819434:97,test,test,97,https://root.cern,https://github.com/root-project/root/pull/15929#issuecomment-2190819434,2,['test'],['test']
Testability,Thanks for this nice PR! We try to avoid merge commits: could you please remove it? After that we can start the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15811#issuecomment-2158975448:112,test,tests,112,https://root.cern,https://github.com/root-project/root/pull/15811#issuecomment-2158975448,1,['test'],['tests']
Testability,"Thanks for this report. A reproducer is:; ```; {; THStack *hs = new THStack(""hs"",""test stacked histograms"");. TH1F *h1 = new TH1F(""h1"",""test hstack"",100,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);; TH1F *h2 = new TH1F(""h2"",""test hstack"",100,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);; TH1F *h3 = new TH1F(""h3"",""test hstack"",100,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. TCanvas *c1 = new TCanvas(""c1"",""stacked hists"",10,10,1000,800);; hs->Draw();; hs->SetMinimum(200.);; hs->SetMaximum(600.);; }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6642#issuecomment-708506278:82,test,test,82,https://root.cern,https://github.com/root-project/root/issues/6642#issuecomment-708506278,4,['test'],['test']
Testability,Thanks for working on this. There are a few things we can improve in this PR:; * Could you add more meaningful commit messages?; * Please update the Copyright information as in the other files in ROOT.; * Please migrate the tests to use gtest. It is much easier to understand what exactly you are testing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/689#issuecomment-310905317:224,test,tests,224,https://root.cern,https://github.com/root-project/root/pull/689#issuecomment-310905317,2,['test'],"['testing', 'tests']"
Testability,"Thanks for you reply @couet, I see your point that it's not ideal to define an attribute that is only used by approximatly half of all available styles. The main reason I wanted to have this feature is that I realized that lines with a width of 1 can become badly visible in presentations or on posters which is why I prefer to use line width 2 as default everywhere. For the implementation via the marker styles as you propose I see basically 2 ways to implement this:; 1. At the moment we have marker styles up to 49. One could just start to redefine all existing marker styles where a linewidth makes sense from 50 upwards with a linewidth of 1, 2, 3 ...; However, I think this might become confusing if further styles are added in the future, because then there will be no logic behind the numbers and the corresponding markers, although there is not much logic behind the style numbers right now too.; 2. One could define it in a way that adding 100 to the marker style corresponds to an increase of the linewidth of 1. As an example the regular + marker with linewidth 1 would be 2, with linewidth 2 it would be 102, with linewidth 3 202 ...; I know this would be rather equal to defining a standalone linewidth attribute, but it would allow us to add up to 50 additional marker styles in the future without breaking the logic and I doubt we will have more than 100 different marker styles one day. Since you are the responsible coordinator for the graphics part of ROOT, I think this decision should be up to you. ----------------------------------------------------------------------------------------------------. Could you also comment on the differences in the drawing of markers 3, 5 (and 31) between classes inheriting from TVirtualX and classes inheriting from TVirtualPS? The following picture shows the difference for marker style 3:; ![temp](https://user-images.githubusercontent.com/5320187/72247392-11cb0980-35f5-11ea-941b-b1ef892442e6.jpg); I think the different implementations sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-573591881:777,log,logic,777,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-573591881,2,['log'],['logic']
Testability,Thanks for your PR ! ; The documentation is automatically generated based on the comments on top of the function implementation. No need to modify anything extra.; You have to follow the Doxygen format.; So please use things like the \param \return keywords. ```; /**; * a normal member taking two arguments and returning an integer value.; * \param a an integer argument.; * \param s a constant character pointer.; * \see Javadoc_Test(); * \return The test results; */; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15097#issuecomment-2031644334:453,test,test,453,https://root.cern,https://github.com/root-project/root/pull/15097#issuecomment-2031644334,1,['test'],['test']
Testability,"Thanks for your PR! Can you add a test or maybe just post a few lines of python code that are fixed by this PR, so we can add it to our python test suite ourselves?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1005#issuecomment-330175780:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/1005#issuecomment-330175780,2,['test'],['test']
Testability,"Thanks for your comment, Sergey - this is exactly what we were after and why we do it already now for 6.18!. We are not aware of current users of the ODBC interfaces. The post you mentioned seems more of a test balloon - it would be interesting to hear whether it's actually used. We can either ""undeprecate"" it and add tests (!) or remove it - it has been deprecated for one release now. And IIRC even *building* the ODBC part is becoming increasingly tricky with current distros...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-452745969:206,test,test,206,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-452745969,2,['test'],"['test', 'tests']"
Testability,"Thanks for your comments!. See https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RDirectory.html#a2b7aa4839c1a3bdd44cf80f72aa3cf51 for `RDirectory::Create`: it returns a `shared_ptr`. I don't understand your argument:. > Subroutines leaving global objects lying around still seems funny. versus your. > unique_ptr<TH1> test; . or similar - global or namespace-scope objects of static storage duration. I do not see the advantage. Can you explain?. I also don't understand. > I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. What does ""handled explicitly by the caller"" mean?. > I'm using standard C++ that even works fine right now in root 6. Well, at the cost of having to code multiple lines. Of course one can always write everything oneself, but the beauty of a library is that it can provide core functionality that's easy to pick up. Next thing I don't understand:. > If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. How does that solve the storage duration? Suppose I run `script1.C` and `script2.C`, both create histograms, and I want to compare them. What do I do in your hypothetical ""some kind of empty non-displayed initial state"" case?. > I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. For cling, input is growing the same translation unit. That's how; ```; root [0] int i = 23l; root [1] int j = ++i;; ```; works, for instance. You example creates a global, just as `Heap::Create` does. Only yours needs some coding - for every global I need to find back I had to code; ```; namespace root_global { ; display my_display;; }; ```; anew. That doesn't scale well IMO.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-790002575:330,test,test,330,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-790002575,1,['test'],['test']
Testability,"Thanks for your quick evaluation. It does now compile properly, after I added the #pragma statement. The test program results seem to match the v5 results, so there is hope. My only raised brow comes with this warning:; ```; In file included from CytStatInfo_dict.C:38:; CytStatInfo.cpp:56: warning: ignoring #pragma link C [-Wunknown-pragmas]; #pragma link C++ class CytStatInfo+;; ```. I'm struck to how different the _dict files are, though, so I'll have to do more testing on it. Would it be better for me to evolve the code towards the new TStreamInfo? Is there a tutorial or some doc that shows the process? Thanks!. Emanuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1535139851:105,test,test,105,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1535139851,2,['test'],"['test', 'testing']"
Testability,"Thanks for your review @HadrienG2! I am still working on how to include tests of the different specific functions of both `RHistConcurrentFill` and `RHistBBufferedFill`, but I wanted to make sure I was on the right track until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4958#issuecomment-584183072:72,test,tests,72,https://root.cern,https://github.com/root-project/root/pull/4958#issuecomment-584183072,1,['test'],['tests']
Testability,"Thanks for your testing.; I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4.; For your suggested steps; `jupyter kernelspec list` ; says; ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same; ```; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++; /p' -e '}'; Results was:; With exit code 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608#issuecomment-709429204:16,test,testing,16,https://root.cern,https://github.com/root-project/root/issues/6608#issuecomment-709429204,1,['test'],['testing']
Testability,Thanks for your work @vgvassilev ! Do you think it's possible to add a high level test of the code to check the original report of Alice is addressed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14853#issuecomment-1971070629:82,test,test,82,https://root.cern,https://github.com/root-project/root/pull/14853#issuecomment-1971070629,1,['test'],['test']
Testability,"Thanks to @bellenot for providing the Windows part. I have squashed it into the main commit and added a `Co-Authored-By: Bertrand Bellenot @bellenot` line (hope, that's the best way to give credit?). > BTW, do we have any specific test for this?. If I should write tests (sounds like everything else is fine), I could need a small bit of guidance (could you point me at a test, that I could learn from / extend?). Also rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-801033691:231,test,test,231,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-801033691,3,['test'],"['test', 'tests']"
Testability,"Thanks to @dpiparo suggestion, I wrote a script automatically removing unnecessary includes under a directory. In; this patch I removed unnecessary includes in roofit/roofitcore/src/ for test, but; you can use this script to any directories. Script:; https://gist.github.com/yamaguchi1024/d95843a5e549fcc6ba0e6e23da5c132a. How to use:; python3 iwyu.py /path/to/directory/you/want/. Limitations:; include-what-you-use is not complete, it sometimes remove *necessary*; includes. So you must compile and modify diff or checkout files if necessary include was; removed. I reccomend to use this script in a directory where you're; familiar with, because you anyway have to check the diff.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1748:187,test,test,187,https://root.cern,https://github.com/root-project/root/pull/1748,1,['test'],['test']
Testability,Thanks very much for the patches. Tests passes successfully for SLC6.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/188#issuecomment-230346513:34,Test,Tests,34,https://root.cern,https://github.com/root-project/root/pull/188#issuecomment-230346513,1,['Test'],['Tests']
Testability,Thanks you for providing the patch.; The proposed change looks OK to me (removal of those two header files).; The test failures do not seem related to this patch.; I'll make a few additional cross checks and then I'll merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1861#issuecomment-381672320:114,test,test,114,https://root.cern,https://github.com/root-project/root/pull/1861#issuecomment-381672320,1,['test'],['test']
Testability,"Thanks! For the other tests that failed, they are unrelated to this PR. I'll have to take care of this somewhere else. . Let's ask the bot to test again and hope it works now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-794107186:22,test,tests,22,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-794107186,2,['test'],"['test', 'tests']"
Testability,Thanks! I restarted the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194#issuecomment-2286202151:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/16194#issuecomment-2286202151,1,['test'],['tests']
Testability,Thanks! I will test the night build tomorrow.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374#issuecomment-696791196:15,test,test,15,https://root.cern,https://github.com/root-project/root/issues/6374#issuecomment-696791196,1,['test'],['test']
Testability,"Thanks! No, a backport is not needed, the workspaces I got from Carsten (produced with ROOT 5.32) still read fine with the latest 6.26. In master there are still some other remining read errors which I hope to fix in a next PR. Unfortunately we can't do a unit test with this workspace because it's ATLAS internal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10796#issuecomment-1162739243:261,test,test,261,https://root.cern,https://github.com/root-project/root/pull/10796#issuecomment-1162739243,1,['test'],['test']
Testability,Thanks! The reference of the failing tests also needs to be updated :) then we are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14726#issuecomment-1948042757:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/14726#issuecomment-1948042757,1,['test'],['tests']
Testability,"Thanks! We are testing it in our own tag. Since it applies easily there and we have other changes in any case, no need to speedtrack the backport, if it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14853#issuecomment-1971230761:15,test,testing,15,https://root.cern,https://github.com/root-project/root/pull/14853#issuecomment-1971230761,1,['test'],['testing']
Testability,Thanks!. FYI apart from some weird Jenkins errors [we get](https://github.com/root-project/root/pull/13571/files#annotation_13775791970):; ```; 2023-08-30T18:30:54.7170667Z [2871/3458] Building CXX object test/CMakeFiles/stressProof.dir/stressProof.cxx.o; 2023-08-30T18:30:54.7290088Z FAILED: test/CMakeFiles/stressProof.dir/stressProof.cxx.o ; 2023-08-30T18:30:54.7394177Z /usr/bin/c++ -I/github/home/ROOT-CI/build/include -I/github/home/ROOT-CI/src/proof/proof/inc -I/github/home/ROOT-CI/src/math/mathcore/v7/inc -I/github/home/ROOT-CI/src/math/mathcore/inc -I/github/home/ROOT-CI/build/ginclude -I/github/home/ROOT-CI/src/core/base/inc -I/github/home/ROOT-CI/src/core/base/v7/inc -I/github/home/ROOT-CI/src/core/clib/inc -I/github/home/ROOT-CI/src/core/clingutils/inc -I/github/home/ROOT-CI/src/core/clingutils/res -I/github/home/ROOT-CI/src/core/cont/inc -I/github/home/ROOT-CI/src/core/foundation/inc -I/github/home/ROOT-CI/src/core/foundation/v7/inc -I/github/home/ROOT-CI/src/core/gui/inc -I/github/home/ROOT-CI/src/core/meta/inc -I/github/home/ROOT-CI/src/core/textinput/inc -I/github/home/ROOT-CI/src/core/thread/inc -I/github/home/ROOT-CI/src/core/zip/inc -I/github/home/ROOT-CI/src/core/lzma/inc -I/github/home/ROOT-CI/src/core/lz4/inc -I/github/home/ROOT-CI/src/core/zstd/inc -I/github/home/ROOT-CI/src/builtins/zstd -I/github/home/ROOT-CI/src/core/imt/inc -I/github/home/ROOT-CI/src/core/multiproc/inc -I/github/home/ROOT-CI/src/net/net/inc -I/github/home/ROOT-CI/src/io/io/v7/inc -I/github/home/ROOT-CI/src/io/io/inc -I/github/home/ROOT-CI/src/tree/tree/inc -I/github/home/ROOT-CI/src/proof/proofplayer/inc -I/github/home/ROOT-CI/src/hist/hist/inc -I/github/home/ROOT-CI/src/math/matrix/inc -I/github/home/ROOT-CI/src/tree/treeplayer/inc -I/github/home/ROOT-CI/src/graf2d/gpad/inc -I/github/home/ROOT-CI/src/graf2d/graf/inc -I/github/home/ROOT-CI/src/graf3d/g3d/inc -fdiagnostics-color=always -std=c++20 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-v,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1700410866:205,test,test,205,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1700410866,2,['test'],['test']
Testability,Thanks!. It seems we are getting now a different kind of error on the jenkins master log:; ```; PatchinError in line 1: Premature end of document.; error: failed to run qhelpgenerator on index.qhp; g output file 29883/29885; Patching output file 29884/29885; Patching output file 29885/29885; Running qhelpgenerator...; lookup cache used 484195/1048576 hits=9429473 misses=518740; finished...; ```. Could you share the index.qhp file to take a closer look? Maybe it's a multithreading issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1018306859:85,log,log,85,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1018306859,1,['log'],['log']
Testability,"Thanks, @ellert! The warning should not be ignored because it indicates an unexpected behavior in uring on that platform. It could be either a bug in uring or it may be an issue in how we use uring that is not triggered on other platforms. Which kernel version are you using? Would it be possible for me to get access to the node?. If you'd like to proceed with green unit tests, you can disable uring support at compile time with `cmake -During=off`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1117087754:373,test,tests,373,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1117087754,1,['test'],['tests']
Testability,"Thanks, @pcanal. I will move the code. Hopefully after that we can merge. I also had a request to test this “across the ocean”, so if you could try to compare before/after by running something simple using data at CERN (or let me know of a file publicly avaiable via XRootD in Fermilab or other location in the US), I would appreciate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1308989870:98,test,test,98,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308989870,1,['test'],['test']
Testability,"Thanks, @reikdas ! Did you take these from somewhere or did you create them from scratch? If the former, please reference the original at least in the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7815#issuecomment-819358632:158,log,log,158,https://root.cern,https://github.com/root-project/root/pull/7815#issuecomment-819358632,1,['log'],['log']
Testability,"Thanks, @will-cern ! Last thing - could you drop the commit / revert pair in this branch so I can apply this with rebase? If you prefer I can do that for you :-). (And never mind the Windows test failure - it's a bug in our infra that forces people to clone https://github.com/root-project/roottest or else that build fails...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7988#issuecomment-827411117:191,test,test,191,https://root.cern,https://github.com/root-project/root/pull/7988#issuecomment-827411117,1,['test'],['test']
Testability,"Thanks, I have fixed the comment in TRint. See the test failure for why this change cannot go in. Close?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1430#issuecomment-350257384:51,test,test,51,https://root.cern,https://github.com/root-project/root/pull/1430#issuecomment-350257384,1,['test'],['test']
Testability,"Thanks, good point! I will add a test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8757#issuecomment-888374279:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/8757#issuecomment-888374279,1,['test'],['test']
Testability,"Thanks, merged! Do you think we should have a test for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/246#issuecomment-246921483:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/246#issuecomment-246921483,1,['test'],['test']
Testability,"Thanks, please note you could add in-tree google tests if you need to.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/452#issuecomment-292251457:49,test,tests,49,https://root.cern,https://github.com/root-project/root/pull/452#issuecomment-292251457,1,['test'],['tests']
Testability,"Thanks, that's indeed correct, and that is why for example there is no trace of this in RDataFrame usages/tests. We'll figure this out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16249#issuecomment-2291359372:106,test,tests,106,https://root.cern,https://github.com/root-project/root/issues/16249#issuecomment-2291359372,1,['test'],['tests']
Testability,"Thanks. I do no find the .cxx, just the .pcm as a binary ; [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.23/01 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |; | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)...; Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so; In file included from /opt/root_bld/include/RConfig.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’; # define _NAME3_(name1,name2,name3) name1##name2##name3; ^~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:216,log,log,216,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['log'],['log']
Testability,Thanks. I have taken you comment and also added it to the test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14107#issuecomment-1828025619:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/14107#issuecomment-1828025619,1,['test'],['test']
Testability,Thanks. I will test it in a few days. Apologizes for the delay.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1405599279:15,test,test,15,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1405599279,1,['test'],['test']
Testability,Thanks. Tests started!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14915#issuecomment-1985830942:8,Test,Tests,8,https://root.cern,https://github.com/root-project/root/pull/14915#issuecomment-1985830942,1,['Test'],['Tests']
Testability,"Thanks. We have slightly different systems and configs; ```; System: Darwin-24.1.0; ROOT Platform: macosx; ROOT Architecture: macosxarm64; Processor: 8 core Apple M2 (arm64); Build type: Release; Install path: /install/; Compiler: AppleClang 16.0.0.16000026; C++ standard: 20; Compiler flags:; -- ; - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread; - C (build type specific): -O3 -DNDEBUG; - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++; - C++ (build type specific): -O3 -DNDEBUG; -- Linker flags:; - Executable: -mmacosx-version-min=15.1; - Module: ; - Shared: ; ```. For the moment, I cannot yet reproduce the issue on our devel/build nodes. As you saw, I added in the loop our Apple and graphics expert in the loop. Do you manage to start a browser when starting root in batch mode, i.e. `root -b` (as a test, of course it's not overly useful for the user experience)?; I can propose a temporary workaround to unblock you: could you try to boot root enabling web graphics (still experimental): `root --web`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350896986:1106,test,test,1106,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350896986,1,['test'],['test']
Testability,That I mean - that happens if user tries to compile with older OPENSSL 1.x?; I need to test it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16749#issuecomment-2440701154:87,test,test,87,https://root.cern,https://github.com/root-project/root/pull/16749#issuecomment-2440701154,1,['test'],['test']
Testability,That PR represents the current state with the tests -- they failed on osx which was known. We need to put some more work to make them pass there but so far we have no bandwidth. This PR documents the current state and lgtm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16258#issuecomment-2298430690:46,test,tests,46,https://root.cern,https://github.com/root-project/root/pull/16258#issuecomment-2298430690,1,['test'],['tests']
Testability,That Windows error is just the log parser having a grep hit within the commit log :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8223#issuecomment-845923159:31,log,log,31,https://root.cern,https://github.com/root-project/root/pull/8223#issuecomment-845923159,2,['log'],['log']
Testability,"That [snip] has the long backtrace as for the previously failing builds, e.g. http://cdash.cern.ch/upload/64f9603657cd87891976d4c73ec65af77ebebe9b/ROOT-HEAD-build.log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9765#issuecomment-1026920746:163,log,log,163,https://root.cern,https://github.com/root-project/root/pull/9765#issuecomment-1026920746,1,['log'],['log']
Testability,"That breakpoint indeed never trips, but it's definitely injecting null ptr checks from somewhere:; (see the presence of ```cling_runtime_internal_throwIfInvalidPointer ()``` in the stack trace). And also confirmed that my real use case runs much slower (boost histogram template instantiations from pyroot). ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""). import time. ROOT.gInterpreter.Declare(""""""; template <typename T>; double templateTest() {; double *d = nullptr;; return *d;; }; """"""). print(""sleep""); time.sleep(5); # I stop here manually and insert the breakpoint; print(""instantiating template""). ROOT.templateTest[""double""](); ```. ```; (wmassdevrolling) [bendavid@lxplus8s10 wmassdev]$ python testnullptr.py ; sleep; instantiating template. Thread 2 (Thread 0x7f23282e3640 (LWP 13939) ""python""):; #0 0x00007f2343ecc8ca in __futex_abstimed_wait_common64 () from /usr/lib/libpthread.so.0; #1 0x00007f2343ec6574 in pthread_cond_timedwait. GLIBC_2.3.2 () from /usr/lib/libpthread.so.0; #2 0x00007f23441ba0d3 in ?? () from /usr/lib/libpython3.10.so.1.0; #3 0x00007f23441d85a2 in PyEval_RestoreThread () from /usr/lib/libpython3.10.so.1.0; #4 0x00007f23442f7cfd in ?? () from /usr/lib/libpython3.10.so.1.0; #5 0x00007f23441e8b23 in ?? () from /usr/lib/libpython3.10.so.1.0; #6 0x00007f23441de55f in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #7 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #8 0x00007f23441dc328 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #9 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #10 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #11 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #12 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #13 0x00007f23441f4cc5 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007f23442da4f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:717,test,testnullptr,717,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,1,['test'],['testnullptr']
Testability,That depends on when it's in a mergable state. Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant (IIRC @vepadulano had fixed this in the past?); @eguiraud confirmed that the rdf override / overwrite tests are already fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790683439:144,test,testReport,144,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790683439,3,['test'],"['test', 'testReport', 'tests']"
Testability,"That did not help. Even with the default set to ON, the CI tests are run with -Dbuiltin_gtest=Off, so they ignore the default.; It seems that the test definition must be changed too. Where are the tests defined? rootspi?; So for this to work in the CI testing it must be accompanied by a change in the definition of the CI tests to either call with -Dbuiltin_gtest=On (or at least not with an explicit -Dbuiltin_gtest=Off), or install the gtest-devel and gmock-devel packages in the test environment. Can someone give some pointers or help with the changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10301#issuecomment-1091234294:59,test,tests,59,https://root.cern,https://github.com/root-project/root/pull/10301#issuecomment-1091234294,6,['test'],"['test', 'testing', 'tests']"
Testability,"That is not quite surprising as the problem is likely to do with some type of schema evolution (particularly sensitive to this set of change are map/multimap where the key or value is an enum). In addition to having a simpler example, you could consider trying out https://github.com/root-project/root/pull/10230 which contains all the fixes I have been making (and is currently passing all but one of the tests I have/examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1086030662:406,test,tests,406,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1086030662,1,['test'],['tests']
Testability,"That is the reduced version:. ```c++; cat ../root/tutorials/hsimple.C . #include <TFile.h>; #include <TNtuple.h>; #include <TH2.h>; #include <TProfile.h>; #include <TCanvas.h>; #include <TFrame.h>; #include <TROOT.h>; #include <TSystem.h>; #include <TRandom3.h>; #include <TBenchmark.h>; #include <TInterpreter.h>. TFile *hsimple(Int_t getFile=0); {; if (!gSystem->AccessPathName("""",kFileExists)) {; }; return 0;; }; ```. I got it down to `root.exe -l -b -e 'gSystem->AccessPathName("""",kFileExists)'`. and we get:. ```; ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ root.exe -l -b -q tutorials/hsimple.C ; Disabling gnu++: clang has no __float128 support on this target!; Parse symbols:; emitSection SectionID: 0 Name: .data obj addr: 0x1002151e4f8 new addr: 0x3fff8d1d0000 DataSize: 16 StubBufSize: 0 Allocate: 16; 	Type: 1 Name: _ZN5cling7runtime10gClingOptsE SID: 0 Offset: 0x8 flags: 66; 	Type: 1 Name: _ZN5cling7runtime6gClingE SID: 0 Offset: (nil) flags: 66; emitSection SectionID: 1 Name: .text obj addr: 0x1002151e440 new addr: 0x3fff8d1f0000 DataSize: 180 StubBufSize: 176 Allocate: 356; 	Type: 4 Name: at_quick_exit SID: 1 Offset: 0x68 flags: 66; 	Type: 4 Name: atexit SID: 1 Offset: 0x8 flags: 66; Parse relocations:; 	SectionID: 1; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 1 Offset: 0; 		RelType: 10 Addend: 0 TargetName: __cxa_atexit; 		SectionID: 1 Offset: 48; Create a new stub function; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 1 Offset: 96; 		RelType: 10 Addend: 0 TargetName: __cxa_atexit; 		SectionID: 1 Offset: 144; Stub function found; ----- Contents of section .data before relocations -----; 0x00003fff8d1d0000: b0 46 b9 20 00 01 00 00 44 48 b9 20 00 01 00 00; ----- Contents of section .text before relocations -----; 0x00003fff8d1f0000: 00 00 00 00 00 00 00 00 f8 ff 4c e8 14 62 42 7c; 0x00003fff8d1f0010: a6 02 08 7c 10 00 01 f8 e1 ff 21 f8 00 01 80 38; 0x00003fff8d1f0020: c6 07 84 78 b9 20 84 64 b0 46 85 60 00 00 80 38; 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:803,Stub,StubBufSize,803,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['Stub'],['StubBufSize']
Testability,That looks right to me. Is there a test written for this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-169778082:35,test,test,35,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-169778082,1,['test'],['test']
Testability,That probably cured the symptoms not the underlying issue. If you stop with a debugger at the assert you will see the same thing being initialized twice I believe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1659208287:94,assert,assert,94,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1659208287,1,['assert'],['assert']
Testability,That reminds me: we don't test the Fortran features on the new CI! :warning:; https://github.com/root-project/root/blob/master/.github/workflows/root-ci-config/buildconfig/global.txt#L54,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155#issuecomment-2046018686:26,test,test,26,https://root.cern,https://github.com/root-project/root/issues/14155#issuecomment-2046018686,1,['test'],['test']
Testability,"That sounds correct, but I'm surprised that the tests are strict enough to catch such differences. I need some time to have a detailed look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5477#issuecomment-620694995:48,test,tests,48,https://root.cern,https://github.com/root-project/root/pull/5477#issuecomment-620694995,1,['test'],['tests']
Testability,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags; 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests; 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`; 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396463790:76,test,testsupport,76,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396463790,2,['test'],"['tests', 'testsupport']"
Testability,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14003#issuecomment-1887947521:143,test,tests,143,https://root.cern,https://github.com/root-project/root/pull/14003#issuecomment-1887947521,1,['test'],['tests']
Testability,"That's all there is, which is confusing! here are 2 zip files with all the log files in the builds; [ROOT_v6-28-12-XROOT-error.zip](https://github.com/root-project/root/files/14137175/ROOT_v6-28-12-XROOT-error.zip); [ROOT-v6-26-10-TBB-error.zip](https://github.com/root-project/root/files/14137176/ROOT-v6-26-10-TBB-error.zip)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520#issuecomment-1923295193:75,log,log,75,https://root.cern,https://github.com/root-project/root/issues/14520#issuecomment-1923295193,1,['log'],['log']
Testability,"That's an option. Inevitably, we will need some common infrastructure which is ROOT-specific for the root.git test and we will have to solve this sooner or later. For the particular tests we are refactoring, I'd like to keep them in root.git for the usual reasons such as they run fast and are part of the commit history which makes changes a lot clearer. In that case I will have to keep the code duplication or drop the checks for diagnostics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-615066525:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-615066525,2,['test'],"['test', 'tests']"
Testability,"That's great! Yes indeed the main purpose of the new test was to check that unknown arguments are kept by default and accessible to you. The case where unknown arguments are not accepted already calls `Terminate()` internally and we check that by looking at what's printed in `stderr`. The other case that needed calling `app.Run` then injecting something like `.q` it's unfeasible right now, but I take your confirmation that everything works well as a green light to close this issue. Thanks again for reporting and all your help, I will also make sure to backport the fixes so that you can benefit from them already in the next patch release :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1068891196:53,test,test,53,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1068891196,1,['test'],['test']
Testability,"That's interesting. I thought some of objective-C syntax was too modern for some outdated version of macOS you're testing on, but it's ... 10.15 and C++17. Since I do not have an access to the build logs, please let me know what was wrong, I'll provide a fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5291#issuecomment-609371360:114,test,testing,114,https://root.cern,https://github.com/root-project/root/pull/5291#issuecomment-609371360,2,"['log', 'test']","['logs', 'testing']"
Testability,"That's my point. We should not allow any special character, or we have to properly handle them through the whole CMake build system, also with the tests and roottest...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731#issuecomment-1737066605:147,test,tests,147,https://root.cern,https://github.com/root-project/root/issues/13731#issuecomment-1737066605,1,['test'],['tests']
Testability,"That's really terrible news that you cannot reproduce it :-(. https://bugs.chromium.org/p/chromium/issues/detail?id=842679 might be related?. Rather than a shot in the dark maybe try to increase the log level and see whether it's related to something the world knows about already, so we know what to follow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1682205832:199,log,log,199,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1682205832,1,['log'],['log']
Testability,"That's true, the logo is nice! But wow, I just took a quick look, and this logo feature is not lightweight at all! It even adds a X11 / cocoa dependency for the ROOT interpreter that would be gone otherwise. Then there are also workarounds for cxxmodules, some `ifdefs`, etc. I'm checking in a PR what the implications for removing it would be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14819#issuecomment-2018796159:17,log,logo,17,https://root.cern,https://github.com/root-project/root/issues/14819#issuecomment-2018796159,2,['log'],['logo']
Testability,"That's true, we need to think how we can reuse the benchmarks from `rootbench` as tests without causing too much duplication",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750#issuecomment-2441166335:51,benchmark,benchmarks,51,https://root.cern,https://github.com/root-project/root/pull/16750#issuecomment-2441166335,2,"['benchmark', 'test']","['benchmarks', 'tests']"
Testability,"The ""continuous-integration/travis-ci/pr"" test worked now. Are the Jenkins tests expected to work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159#issuecomment-628618973:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/5159#issuecomment-628618973,2,['test'],"['test', 'tests']"
Testability,"The #undef here (line 46):. https://github.com/root-project/root/blob/b7e70bbaabf318d5ab5c0accd6d9b6d2e7305591/graf2d/asimage/src/libAfterImage/export.c#L44-L55. means that the #include here (line 72) is ignored. https://github.com/root-project/root/blob/b7e70bbaabf318d5ab5c0accd6d9b6d2e7305591/graf2d/asimage/src/libAfterImage/export.c#L68-L76. There is a similar issue in the import.c file. The #undef here (line 54):; (Also the comment on line 77 should say ""jpg library"" not ""png library"".). https://github.com/root-project/root/blob/b7e70bbaabf318d5ab5c0accd6d9b6d2e7305591/graf2d/asimage/src/libAfterImage/import.c#L52-L63. would mean that the #include here (line 78) would be ignored, if it had been properly inside a #ifndef here:. https://github.com/root-project/root/blob/b7e70bbaabf318d5ab5c0accd6d9b6d2e7305591/graf2d/asimage/src/libAfterImage/import.c#L75-L81. The proposed fix for export.c to remove the #undef seems to be a more logical fix than removing the #ifndef as in import.c. But for consistency the two files should use the same logic. Could the import.c be changed to use the same logic as the export.c will use (remove the #undef and add the #ifndef / #endif around the #include <stdlib.h>?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044#issuecomment-2064002454:945,log,logical,945,https://root.cern,https://github.com/root-project/root/pull/15044#issuecomment-2064002454,3,['log'],"['logic', 'logical']"
Testability,"The 'succeed' job seems to get to:. ```; [2020-12-18 14:29:25.905501 +0000][Debug ][XRootDTransport ] [xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request, username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&xrd.info=&xrd.hostname=tatls002-2188754.0-lcg2453.gridpp.rl.ac.uk&xrd.rn=v4.10.0, dual-stack: false, private IPv4: true, private IPv6: false; ```. but the failed ends before this point. I can upload the files of these two logs, if it would help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-749432504:462,log,logs,462,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-749432504,1,['log'],['logs']
Testability,The 2nd one seems more tricky as your y scale has negative values which is always tricky with log scale. I will first make a PR for the first one and once merged I will tackle the 2nd issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070#issuecomment-2245145922:94,log,log,94,https://root.cern,https://github.com/root-project/root/issues/16070#issuecomment-2245145922,1,['log'],['log']
Testability,The 32bit projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec failure looks real?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-879707415:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-879707415,1,['test'],['test']
Testability,"The ATLAS test that was failing is not suitable for use as a ROOT test. The test in question was testing functionality to pick selected events from a larger file.; The test consists of two Athena jobs, the first of which does the picking and writes an ATLAS POOL file and the second which reads it to verify the results. POOL has a metadata TTree (##Shapes) containing schema information, stored as strings. Most of these strings were around 220 characters long, but there was one which was about 270 characters. When the second job attempted to read the POOL file, the long string was read as a null string, which resulted in a segfault within the POOL code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-1981135863:10,test,test,10,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-1981135863,5,['test'],"['test', 'testing']"
Testability,"The AddressSanitizer also loads the LeakSanitizer flags and even though the documentation suggests that `exitcode` can be set per sanitizer, this doesn't appear to be the case and our tests exit with code 0 after the AddressSanitizer found a problem. After this change, around 100 tests will fail due to several issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005:184,test,tests,184,https://root.cern,https://github.com/root-project/root/pull/10005,2,['test'],['tests']
Testability,"The CI build error detection logic is not very clever.; I quoted the error the PR is fixing in the git commit message.; The CI build puts the commit message from the PR in the CI build log.; Then scans the log for errors and tags the quoted error in the commit message as a failure...; The log actually says: 100% tests passed, 0 tests failed out of 1120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856589322:29,log,logic,29,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856589322,6,"['log', 'test']","['log', 'logic', 'tests']"
Testability,"The CI is confirming a suspect I had, that is in our tests using friend trees we have cases of entries not being found. Those will have to be investigated to understand if it's intended or if it's a bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641#issuecomment-2130007754:53,test,tests,53,https://root.cern,https://github.com/root-project/root/pull/15641#issuecomment-2130007754,1,['test'],['tests']
Testability,"The CI pages are hanging when I try to check what went wrong, @Axel-Naumann are the errors seen above expected? I don't think my change is causing them. I could see the error on a Windows build:; ```; The following tests FAILED:; 19998; 	274 - test-stressmathmore-interpreted (Failed); ```. Other Windows build:; ```; The following tests FAILED:; 19541; 	276 - test-stressmathmore-interpreted (Failed); 19542; 	403 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12528#issuecomment-1547499633:215,test,tests,215,https://root.cern,https://github.com/root-project/root/pull/12528#issuecomment-1547499633,5,['test'],"['test-ntuple-extended', 'test-stressmathmore-interpreted', 'tests']"
Testability,"The CI tests should pass once again, the force push was just a rebase to fix the conflicts in `test/stressRooFit_ref.root` after https://github.com/root-project/root/pull/9134 was merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9150#issuecomment-948677306:7,test,tests,7,https://root.cern,https://github.com/root-project/root/pull/9150#issuecomment-948677306,2,['test'],"['test', 'tests']"
Testability,"The CMake build is now much more heavily integrated with the folder structure. This has the positive side that less copying is going on, and the downside that it has to fill in the source directory with the items it needs from ROOT (they are ignored and easy to clean with `make purge`, though). Like before, you can build in place or make a redistributable source package. Only added one `.gitignore`. Haven't really touched the ROOT Minuit2 build system, though some fixes would be good there too, but that's a later PR. (Instructions have not been updated to new version yet, and not as well tested yet). I can revert to the old system if that's better. The original reason for using CMake to do the copy also was because that avoided having to write a `.sh` file, and was more portable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369603935:595,test,tested,595,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369603935,1,['test'],['tested']
Testability,"The CMake build system is broken with genvector=OFF (does not really disable genvector, and tests fail if that is fixed). Therefore, it was decided that it's better to just make this always ON and remove the option for disabling it altogether. See #2155 for more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2326:92,test,tests,92,https://root.cern,https://github.com/root-project/root/pull/2326,1,['test'],['tests']
Testability,"The Doxyfile in master uses:. ```; EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*; MACRO_EXPANSION = NO; EXPAND_ONLY_PREDEF = NO; PREDEFINED = ; ```. The Doxyfile in the PR uses. ```; EXCLUDE_SYMBOLS =; MACRO_EXPANSION = YES; EXPAND_ONLY_PREDEF = YES; PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```; $ grep ""Found ';' while"" bad.txt | wc -l; 89; $ grep ""Illegal member name found"" bad.txt | wc -l; 138; $ grep ""no matching file member found for"" bad.txt | wc -l; 92; $ grep ""was not declared or defined"" bad.txt | wc -l; 185; $ grep ""Found ';' while"" good.txt | wc -l; 1; $ grep ""Illegal member name found"" good.txt | wc -l; 0; $ grep ""no matching file member found for"" good.txt | wc -l; 43; $ grep ""was not declared or defined"" good.txt | wc -l; 41; ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/161#issuecomment-227994967:559,log,logs,559,https://root.cern,https://github.com/root-project/root/pull/161#issuecomment-227994967,1,['log'],['logs']
Testability,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11329:172,test,testReport,172,https://root.cern,https://github.com/root-project/root/issues/11329,2,"['log', 'test']","['log', 'testReport']"
Testability,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010:822,test,tested,822,https://root.cern,https://github.com/root-project/root/pull/9010,1,['test'],['tested']
Testability,"The GitHub interface strips GPG signatures from the commits. I usually merge on my laptop and push, and that way it's as if I pressed merge, but I can keep the GPG signatures. As for the commit, if you look at the date, you'll see it's from a while ago, when I was working on I/O optimizations. I was just trying to improve readability and test range for with ROOT containers. Yes, it works :-) So, I guess we should be trying to use this more than the usual while loop. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/908#issuecomment-326009755:340,test,test,340,https://root.cern,https://github.com/root-project/root/pull/908#issuecomment-326009755,1,['test'],['test']
Testability,"The I/O for STL collection containing directly an std::array is not yet supported. ; Workaround:; ```; struct StringArray : public std::array<std::string, 2>; {};; class TestClass : public TObject {; ...; private:; std::map<StringArray, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268#issuecomment-849779999:170,Test,TestClass,170,https://root.cern,https://github.com/root-project/root/issues/8268#issuecomment-849779999,2,['Test'],['TestClass']
Testability,The IMT tests were both registered with ROOT_ADD_GTEST and; ROOT_ADD_UNITTEST_DIR. The latter was removed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6192:8,test,tests,8,https://root.cern,https://github.com/root-project/root/pull/6192,1,['test'],['tests']
Testability,"The IO for the tests statistics never worked anyway, not even for a simple Gaussian likelihood. It is better to exclude the old test statistics classes complete from IO. Like this, the users don't even attempt to do IO with them, and to developers it's clear that IO backwards compatibility is not necessary, taking away some maintenance burden. Here are some simple scripts to show that storing test statistics doesn't work anyway. Create a NLL object, write it of file and minimize it:; ```c++; void write(); {; using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. auto *data = gauss.generateBinned(x, 10000);. auto nll = gauss.createNLL(*data);. RooWorkspace ws(""ws"");; ws.import(*nll);. ws.Print();. ws.writeToFile(""ws.root"");. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. Attempt to read the NLL and minimize it again:; ```c++; void open() {. auto f = TFile::Open(""ws.root"");. auto ws = f->Get<RooWorkspace>(""ws"");. ws->Print();. ws->function(""nll_gauss_genData"")->Print();. auto nll = static_cast<RooNLLVar*>(ws->function(""nll_gauss_genData""));. auto& pdf = nll->function();; auto& data = nll->data();. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. The result is completely off this time. It was also confirmed with Wouter in one of the RooFit meetings that IO of the old test statistics never really worked and was also not intended to be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11909:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/11909,4,['test'],"['test', 'tests']"
Testability,"The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula.; This has negative impact on speed and the precision for integrals, because these can only be done numerically.; Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3851:390,test,tests,390,https://root.cern,https://github.com/root-project/root/pull/3851,1,['test'],['tests']
Testability,"The LoopManager now tracks the actions that have already run. This commit is needed by the Graph drawing PR. This can't be directly tested as the LM is not exposed. To test it I used the following code, not commited. RInterface has a Test() method that just call GetAllActions() on the RLoopManager. ```; TEST_P(RDFSimpleTests, Action); {; RDataFrame rd1(8);; EXPECT_EQ(rd1.Test().size(), 0);; auto a1 = rd1.StdDev<ULong64_t>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 1);; auto a2 = rd1.Mean<>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 2);; auto a3 = rd1.Count();. EXPECT_EQ(rd1.Test().size(), 3);; *a1;; EXPECT_EQ(rd1.Test().size(), 3);; {; auto a4 = rd1.StdDev<ULong64_t>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 4);; }; EXPECT_EQ(rd1.Test().size(), 3);; {; auto a4 = rd1.StdDev<ULong64_t>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 4);; *a4;; }; EXPECT_EQ(rd1.Test().size(), 3);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2470:132,test,tested,132,https://root.cern,https://github.com/root-project/root/pull/2470,12,"['Test', 'test']","['Test', 'test', 'tested']"
Testability,"The PR basically includes:; - building changes for including CMA-ES; - the CMA-ES optimizer via libcmaes; - test samples. Not sure how to split it. I'll provide a rebase, and you guys may be able to move forward from there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-292467092:108,test,test,108,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-292467092,1,['test'],['test']
Testability,The PR changes TDF's source code as well as the tutorials. A related PR that changes the tests is open in roottest. I also added an extra commit with a minor fix to TDF's user guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/703:89,test,tests,89,https://root.cern,https://github.com/root-project/root/pull/703,1,['test'],['tests']
Testability,"The PR contains a test that demonstrates that user code can produce empty variants, which the I/O system needs to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534#issuecomment-2123251569:18,test,test,18,https://root.cern,https://github.com/root-project/root/issues/15534#issuecomment-2123251569,1,['test'],['test']
Testability,The PR has been completely overhauled. It is still a test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15466#issuecomment-2112791481:53,test,test,53,https://root.cern,https://github.com/root-project/root/pull/15466#issuecomment-2112791481,1,['test'],['test']
Testability,"The PR looks good to me, and it is nice to move to use unique_ptr. I have tested the PR with the code used to reproduce #7890 and unfortunately the memory leak is still there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7904#issuecomment-822255874:74,test,tested,74,https://root.cern,https://github.com/root-project/root/pull/7904#issuecomment-822255874,1,['test'],['tested']
Testability,The PR looks good to me. It would be nice however to have a test that the code result is correct.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3254#issuecomment-461753848:60,test,test,60,https://root.cern,https://github.com/root-project/root/pull/3254#issuecomment-461753848,1,['test'],['test']
Testability,"The PR looks good, thanks a lot! The windows failures are unrelated. I will merge after adding corresponding tests to roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5272#issuecomment-607223231:109,test,tests,109,https://root.cern,https://github.com/root-project/root/pull/5272#issuecomment-607223231,1,['test'],['tests']
Testability,"The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`; data member. It can be replaced with a `std::vector<int>` where the; previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data; member is made non-persistent because it can be computed from other; persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):; * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old); * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new); * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7838:503,benchmark,benchmarked,503,https://root.cern,https://github.com/root-project/root/pull/7838,1,['benchmark'],['benchmarked']
Testability,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15543:588,test,testHistFactory,588,https://root.cern,https://github.com/root-project/root/pull/15543,2,['test'],"['test', 'testHistFactory']"
Testability,"The RCutFlowReport class could benefit of a Merge method since it would ease the implementation of the Report RDataFrame operation in a distributed environment.; In a situation where two chunks of a dataset have been processed separately, a report for each chunk would only contain filtering information of that chunk. In this case, merging the two reports together should provide general information on the cut flow of the entire dataset. Right now, the Merge function works as follows:; It takes another RCutFlowReport as argument (passed by reference).; The fCutInfos member of the current RCutFlowReport is stored in a temporary variable and then cleared.; For each TCutInfo, another TCutInfo with the same name is searched in the other report.; The information on all the entries and the passed entries is then summed up between the two objects.; Finally a new TCutInfo with the resulting information is added to the initial RCutFlowReport. The clearing of fCutInfos is needed since the fPass and fAll members of TCutInfo are const.; If seen appropriate, the const keyword can be removed, then the fCutInfos could be just updated each time. A very simple test has been added. TODO:; - [ ] Add more thorough tests.; - [ ] Decide on the return type of the Merge function (now is void).; - [ ] Possibly overload the function with RCutFlowReport* as argument.; - [ ] Finally add documentation when everything is set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4174:1160,test,test,1160,https://root.cern,https://github.com/root-project/root/pull/4174,2,['test'],"['test', 'tests']"
Testability,The RDF dependencies were cleaned up in commit 8d7fa5f87c and commit f215692b3d removed the RDF unit test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16292:101,test,test,101,https://root.cern,https://github.com/root-project/root/pull/16292,1,['test'],['test']
Testability,"The RDataFrameHelper should be consistent with creating a RooDataSet; from a TTree, meaning out-of-range events should be skipped. This is; implemented in this commit, borrowing the logic from; `RooTreeDataStore::loadValues()`. A unit test is also implemented. The previous logic of just taking just all values to fill the dataset; was very dangerous, because these values then clipped to the RooRealVar; limits and biased the number of events observed at the boundaries. Closes https://github.com/root-project/root/issues/11017.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11018:182,log,logic,182,https://root.cern,https://github.com/root-project/root/pull/11018,3,"['log', 'test']","['logic', 'test']"
Testability,"The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning.; Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:; - Fix feature flags bitmap serialization. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9418:879,test,tested,879,https://root.cern,https://github.com/root-project/root/pull/9418,1,['test'],['tested']
Testability,"The RNTupleCompresser::Zip overload with a specified output buffer (`Zip(const void *from, std::size_t nbytes, int compression, void *to)`) always overwrites the first block in the output buffer when compressing large files that consist of multiple blocks (i.e., when input size > 16MB). # This Pull request:. ## Changes or fixes:; - RNTupleCompresser::Zip now correctly writes the result to the provided output buffer when compressing multiple blocks; - Added a test case that tests this Zip overload with data containing multiple blocks. ## Checklist:. - [x] tested changes locally. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13202:463,test,test,463,https://root.cern,https://github.com/root-project/root/pull/13202,3,['test'],"['test', 'tested', 'tests']"
Testability,"The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11753:134,stub,stub,134,https://root.cern,https://github.com/root-project/root/pull/11753,1,['stub'],['stub']
Testability,"The ROOT binaries don't come with `fft3` enabled because of licensing incompatibilities (GPL). However, it is not necessary to recompile all of ROOT to get the `fftw3` functionality. That's because the `math/fftw` library is not used directly, but nicely abstacted away with ROOTs plugin system via `TVirtualFFT`. Therefore, it would be very convenient for users if `math/fftw` could be built standalone, such that an existing ROOT installation can pick up these plugins. This was tested by building ROOT without `fftw3`, then also building and installing `math/fftw` standalone. I was running the RooFit convolution unit tests before and after installing `math/fftw` standalone. Indeed, the unit tests fail before installing it and pass after, showing that the standaline installation of the plugin works. This commit would address the question on the ROOT forum:. https://root-forum.cern.ch/t/how-to-add-optional-libraries-by-homebrew",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13774:481,test,tested,481,https://root.cern,https://github.com/root-project/root/pull/13774,3,['test'],"['tested', 'tests']"
Testability,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Backport of https://github.com/root-project/root/pull/15247.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15260:198,test,tested,198,https://root.cern,https://github.com/root-project/root/pull/15260,3,['test'],['tested']
Testability,"The RapidYAML of the RooFit JSON interface is now always disabled because it doesn't work anymore for RooFitHS3. The `nlohmann_json` interface is always used and works well, hence rapidyaml was not tested anymore and the code was rotting until it didn't work. The relevant code is still left in the CMakeLists.txt in case someone wants to revive the RapilYAML backend. Closes #15118. Should be backported up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15247:198,test,tested,198,https://root.cern,https://github.com/root-project/root/pull/15247,1,['test'],['tested']
Testability,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11093:238,log,logging,238,https://root.cern,https://github.com/root-project/root/pull/11093,2,['log'],"['logged', 'logging']"
Testability,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14015:590,test,tested,590,https://root.cern,https://github.com/root-project/root/pull/14015,1,['test'],['tested']
Testability,The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:; added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates.; package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14082:626,test,tested,626,https://root.cern,https://github.com/root-project/root/pull/14082,1,['test'],['tested']
Testability,"The RooFit test statistic classes give wrong results if they are; constructed from multiple comma-separated ranges. This can cause errors,; such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated; ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7827:11,test,test,11,https://root.cern,https://github.com/root-project/root/pull/7827,1,['test'],['test']
Testability,"The RooFit, RooStats and HistFactory stress tests all seem to work still.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3024#issuecomment-440729378:44,test,tests,44,https://root.cern,https://github.com/root-project/root/pull/3024#issuecomment-440729378,1,['test'],['tests']
Testability,"The RooIntegrator1D class is refactored such that it is a wrapper around a free function with only STL dependencies that does the Romberg integration. This is very useful for R & D projects, because the integration code can be reused standalone outside of RooFit. This can serve as a reference when implementing and benchmarking new integration methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13336:316,benchmark,benchmarking,316,https://root.cern,https://github.com/root-project/root/pull/13336,1,['benchmark'],['benchmarking']
Testability,"The RooList was deprecated in the previous v626 release, and is now; removed. A RooList was just a `TList` with added member functions for; convenience, so it was never necessary to have this as a separate class; supported in IO. The RooList was still used in two RooFit classes until now: `RooPlot`; and `SamplingDistPlot`. This commit also removes this remaining usage. In the case of `SamplingDistPlot`, none of the special member functions were; used: the `RooList` could be replaced trivially with a `TList`. In `RooPlot`, the `RooList` was replaced with a; `std::vector<std::pair<TObject*,std::string>>`, for which it was easy to; reimplement the algorithms that were covered by the former `RooList`; member functions. The backwards compatibility with existing RooPlot is tests by; `stressRooFit`, as the reference file stores RooPlots with the; `RooList`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9851:778,test,tests,778,https://root.cern,https://github.com/root-project/root/pull/9851,1,['test'],['tests']
Testability,"The RooPoisson is implemented with TMath::Poisson, which is normalized; if x covers the full definition range of the Poisson distribution, which; is zero to infinity. By correctly reporting this self-normalization in; that case, the creation of a dummy integral object that returns one is; avoided. The reduced overhead results in a significant speedup of; HistFactory fits with gamma constraints between 10 and 15 % in the hf001; tutorial example. To show that the integral object would only be a dummy integral, here is the relevant line of code: https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L103. To confirm the speedup, here is the `benchHistFactory` output before this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.109 ms 0.110 ms 6391; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.915 ms 0.917 ms 762; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.075 ms 0.076 ms 9156; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.66 ms 1.66 ms 423; ```. and after this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.102 ms 0.103 ms 6744; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.892 ms 0.894 ms 786; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.064 ms 0.065 ms 10835; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.61 ms 1.61 ms 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10836:817,Benchmark,Benchmark,817,https://root.cern,https://github.com/root-project/root/pull/10836,2,['Benchmark'],['Benchmark']
Testability,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11400:1359,Test,TestProdPdf,1359,https://root.cern,https://github.com/root-project/root/pull/11400,2,"['Test', 'test']","['TestProdPdf', 'test']"
Testability,"The RooRealAnalytic class, and implementation detail of the RooRealIntegral, was not really necessary. You can get the same functionality when creating the corresponding analytic integral just with `createIntegral()`, and then wrapping the integral in a RooRealBinding. There are many unit tests that cover such hybrid integrals, but a simple code snippet to quickly test it is this one:. ```c++; RooWorkspace ws;; ws.factory(""Gaussian::gauss(x[-10, 10], mu[0, -10, 10], sigma[0.1, 3, 10])"");; RooArgSet iset{*ws.var(""x""), *ws.var(""sigma"")};. std::unique_ptr<RooAbsReal> integral{ws.pdf(""gauss"")->createIntegral(iset)};; integral->Print(""v"");; std::cout << integral->getVal() << std::endl;; ```. This commit is the first of a new effort to make the RooFit integral code simpler, in order to make it easier to eventually implement numerical integrals on the GPU.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13334:290,test,tests,290,https://root.cern,https://github.com/root-project/root/pull/13334,2,['test'],"['test', 'tests']"
Testability,"The RooStringVar class is planned to get deprecated soon, hence RooFit; code that is still using it is getting migrated away from it. In the RooCmdConfig case, one can use simple configuration structs; insread of RooStringVar. This change is tested by many unit tests in RooFit, as the; `RooCmdConfig` is used in many places, for example `RooAbsPdf::fitTo`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10106:242,test,tested,242,https://root.cern,https://github.com/root-project/root/pull/10106,2,['test'],"['tested', 'tests']"
Testability,"The TEfficiency constructors for fixed or variable bin size are not appended to the current directory. The description of TEfficiency mentions that this should only happen for the constructor using two histograms (passed and total). The following code does not save the TEfficiency object to the file in version 6.24; ```; TFile* file = new TFile(""test.root"", ""RECREATE"");; TEfficiency* eff = new TEfficiency(""eff"", ""eff"", 1, 0, 1);; eff->Fill(true, 0);; file->Write();; ```; Executing in version 6.18 (latest I have installed other than 6.24) does produce the expected behaviour. After adding `eff->Write();` the TEfficiency will also be written in v6.24. I think the problem is the use of; `TDirectory::TContext ctx(nullptr);`; in TEfficiency.cxx (e. g. line 733), which was, as far as I see, implemented in version 6.24. I think in the scope after TContext the current directory is `nullptr` which is also passed to `Build(name, title);` as well. ### Setup:; ROOT v6.24 built from source; OS: Ubuntu 20.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9189:348,test,test,348,https://root.cern,https://github.com/root-project/root/issues/9189,1,['test'],['test']
Testability,"The TFile objects need to be closed before the ROOT files can be; deleted. Otherwise, we get errors such as these on Windows 10:. ```; Traceback (most recent call last):; File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>; os.remove(""pyroot006_file_{}.root"".format(i)); PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'; CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):; error code: 1; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10378:765,test,testReport,765,https://root.cern,https://github.com/root-project/root/pull/10378,1,['test'],['testReport']
Testability,"The THistRange class define a generic bin range region which can be used to efficiently iterate over bins.; It is used to create a THBinIterator class which can used to iterate over bins; without using for loops over axis or simple global bin iterations.; Example for computing histogram integral in a given range: . ```; auto hist = new TH1D(""h1"",""h1"",100,-5,5);; hist->FillRandom(""gaus""); ; hist->GetXaxis()->SetRange(40,60); ; THistRange r(hist); ; double integral = 0; ; for (auto & bin : r) { integral += hist->GetBinContent(bin); }; std::cout << ""integral "" << integral << std::endl;; ```. Add also a test program which measures the ieration time. When iterating over a multi-dimensional histogram (e.g. 3 d) the new iteration can be up to 10 times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6795:607,test,test,607,https://root.cern,https://github.com/root-project/root/pull/6795,1,['test'],['test']
Testability,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/14135,2,"['assert', 'test']","['assert', 'test']"
Testability,The TStatistic class now includes computation of minimum and maximum values; of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class; correctly computes min and max values.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3815:194,test,testTStatistic,194,https://root.cern,https://github.com/root-project/root/pull/3815,2,['test'],"['test', 'testTStatistic']"
Testability,"The TestData target is currently declared ALL, which means it is always executed during the build.; However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/402:4,Test,TestData,4,https://root.cern,https://github.com/root-project/root/pull/402,6,"['Test', 'test']","['TestData', 'test', 'test-stressproof']"
Testability,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16528:262,test,test,262,https://root.cern,https://github.com/root-project/root/pull/16528,1,['test'],['test']
Testability,"The Vavilov test fails on 32 bit ix86 in Fedora 29. Testing Cdf and Cdf_c; kappa = 0.01; Max abs diff: 1.2e-07, max rel diff: 1.9e-05, max diff cdf+cdf_c-1: 6.2e-15, pass=0; kappa = 0.04; Max abs diff: 1.4e-07, max rel diff: 1.9e-05, max diff cdf+cdf_c-1: 1.1e-15, pass=1; kappa = 0.07; Max abs diff: 2.5e-06, max rel diff: 0.061, max diff cdf+cdf_c-1: 1.6e-15, pass=1; kappa = 0.1; Max abs diff: 6.1e-06, max rel diff: 0.038, max diff cdf+cdf_c-1: 6.7e-16, pass=1; kappa = 0.4; Max abs diff: 1.7e-06, max rel diff: 0.018, max diff cdf+cdf_c-1: 2.2e-16, pass=1; kappa = 0.7; Max abs diff: 2.5e-06, max rel diff: 0.0092, max diff cdf+cdf_c-1: 2.2e-16, pass=1; kappa = 1; Max abs diff: 1.9e-06, max rel diff: 0.0072, max diff cdf+cdf_c-1: 4.4e-16, pass=1; kappa = 4; Max abs diff: 2e-06, max rel diff: 0.15, max diff cdf+cdf_c-1: 2.2e-16, pass=1; kappa = 7; Max abs diff: 1.7e-06, max rel diff: 0.026, max diff cdf+cdf_c-1: 4.4e-16, pass=1; kappa = 10; Max abs diff: 2.2e-06, max rel diff: 0.033, max diff cdf+cdf_c-1: 2.2e-16, pass=1; Number of failed tests: 1. This PR changes the allowed error from 5e-15 to 7e-15, allowing the 6.2e-15 result to pass. The test does not fail on Fedora 28 which uses the same compiler (gcc 8.1.1). The default compiler flags for ix86 have changed between Fedora 28 and 29 though, and the following flags were added: -msse2 -mfpmath=sse -mstackrealign. The -msse2 flag is my guess for the cause of the difference.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2273:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/2273,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"The Windows ""failure"" seems spurious:; ```; 18:21:16 Build failed because:; [Pipeline] echo; 18:21:16 hudson.AbortException: script returned exit code -1; ```; even though all tests have passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12045#issuecomment-1396537983:176,test,tests,176,https://root.cern,https://github.com/root-project/root/pull/12045#issuecomment-1396537983,1,['test'],['tests']
Testability,"The [documentation](https://cmake.org/cmake/help/latest/command/enable_language.html) says:. > Enable a language (CXX/C/Fortran/etc); >; >**enable_language(<lang> [OPTIONAL] )**; >This command enables support for the named language in CMake. This is the same as the; >project command but does not create any of the extra variables that are created by the; >project command. Example languages are CXX, C, Fortran.; >; >This command must be called in file scope, not in a function call. Furthermore, **it must; >be called in the highest directory common to all targets using the named language**; >directly for compiling sources or indirectly through link dependencies. It is simplest to; >enable all needed languages in the top-level directory of a project.; >; >The **OPTIONAL** keyword is a placeholder for future implementation and **does not currently work**. So, should we just add this logic directly into the top `CMakeLists.txt` file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891#issuecomment-325334622:891,log,logic,891,https://root.cern,https://github.com/root-project/root/pull/891#issuecomment-325334622,1,['log'],['logic']
Testability,"The [mac13 llvm assert](https://github.com/root-project/root/actions/runs/4628401453/jobs/8187431201?pr=12629#step:3:8563) (module source Loc overflow?) is a real issue that we probably need to address before merging. ```; Assertion failed: ((Val & ~(~0U >> (32-NumBits))) == 0 && ""High bits set!""), function Emit, file BitstreamWriter.h, line 205.; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x00000001052ba9c4 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 rootcling_stage1 0x00000001052b96f0 llvm::sys::RunSignalHandlers() + 64; 2 rootcling_stage1 0x00000001052bb094 SignalHandler(int) + 344; 3 libsystem_platform.dylib 0x000000018a46ea84 _sigtramp + 56; 4 libsystem_pthread.dylib 0x000000018a43fc28 pthread_kill + 288; 5 libsystem_c.dylib 0x000000018a34dae8 abort + 180; 6 libsystem_c.dylib 0x000000018a34ce44 err + 0; 7 rootcling_stage1 0x00000001054ee31c clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) (.cold.1) + 0; 8 rootcling_stage1 0x0000000102bdbcd4 llvm::BitstreamWriter::Emit(unsigned int, unsigned int) + 228; 9 rootcling_stage1 0x0000000102bf3ee4 void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long long>(unsigned int, llvm::ArrayRef<unsigned long long>, llvm::StringRef, llvm::Optional<unsigned int>) + 676; 10 rootcling_stage1 0x0000000102bd0fb4 clang::ASTRecordWriter::Emit(unsigned int, unsigned int) + 228; 11 rootcling_stage1 0x0000000102c1be0c clang::ASTWriter::WriteDecl(clang::ASTContext&, clang::Decl*) + 416; 12 rootcling_stage1 0x0000000102bdeb38 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, clang::Module*) + 11872; 13 rootcling_stage1 0x0000000102bdbb3c clang::ASTWriter::WriteAST(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12629#issuecomment-1499102403:16,assert,assert,16,https://root.cern,https://github.com/root-project/root/pull/12629#issuecomment-1499102403,2,"['Assert', 'assert']","['Assertion', 'assert']"
Testability,The [test_webgui_ping](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/158835/testReport/projectroot.gui.webdisplay/test/test_webgui_ping/) failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687#issuecomment-1312241541:103,test,testReport,103,https://root.cern,https://github.com/root-project/root/pull/11687#issuecomment-1312241541,2,['test'],"['test', 'testReport']"
Testability,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15464:89,test,tests,89,https://root.cern,https://github.com/root-project/root/pull/15464,4,['test'],['tests']
Testability,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13751:419,test,test,419,https://root.cern,https://github.com/root-project/root/pull/13751,2,['test'],['test']
Testability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16314:477,test,tests,477,https://root.cern,https://github.com/root-project/root/pull/16314,1,['test'],['tests']
Testability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16318:477,test,tests,477,https://root.cern,https://github.com/root-project/root/pull/16318,1,['test'],['tests']
Testability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16319:477,test,tests,477,https://root.cern,https://github.com/root-project/root/pull/16319,1,['test'],['tests']
Testability,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16387:477,test,tests,477,https://root.cern,https://github.com/root-project/root/pull/16387,1,['test'],['tests']
Testability,"The `Constrain()` and `GlobalObservables()` arguments were wrong in a; unit test in `testLikelihoodGradientJob`: a global observable was added; as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and; `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11804:76,test,test,76,https://root.cern,https://github.com/root-project/root/pull/11804,2,['test'],"['test', 'testLikelihoodGradientJob']"
Testability,"The `DataFormats/Histograms` dictionary generation fails with assertion failure; ```; rootcling: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/cling/lib/Utils/AST.cpp:1561: clang::NestedNameSpecifier* cling::utils::CreateNestedNameSpecifierForScopeOf(const clang::ASTContext&, const clang::Decl*, bool, const clang::ClassTemplateSpecializationDecl*): Assertion `Spec && ""Cannot determine type's scope""' failed.; #0 0x00001529359d3acc llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:567:22; #1 0x00001529359d3ec6 PrintStackTraceSignalHandler(void*) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:641:1; #2 0x00001529359d19bd llvm::sys::RunSignalHandlers() /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Signals.cpp:104:20; #3 0x00001529359d34fb SignalHandler(int) /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/interpreter/llvm-project/llvm/lib/Support/Unix/Signals.inc:412:1; #4 0x000015292dff2d20 __restore_rt (/lib64/libpthread.so.0+0x12d20); #5 0x000015292ccf652f raise (/lib64/libc.so.6+0x4e52f); #6 0x000015292ccc9e65 abort (/lib64/libc.so.6+0x21e65); #7 0x000015292ccc9d39 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d39); #8 0x000015292cceee86 (/lib64/libc.so.6+0x46e86); #9 0x000015292f2f3d10 cling::utils::CreateNestedNameSpecifierForScopeOf(clang::ASTContext const&, clang::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2332005936:62,assert,assertion,62,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2332005936,8,"['Assert', 'assert', 'test']","['Assertion', 'assertion', 'testBuildDir', 'tests']"
Testability,"The `IOTests` test has run on my machine for 10000 times without crashing, so this may be safe to remove now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1426:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/1426,1,['test'],['test']
Testability,"The `IsCTypesArrayOrPointer` gives false positives in Python 3.13, resulting the void pointer converter to take the wrong code path and crash. See:; https://github.com/wlav/cppyy/issues/272. This code path is used for implicit conversion from other `ctypes` pointer types to `void*`, which is not strictly required. One can always do an explicit cast: `ctypes.cast(my_ptr, ctypes.c_void_p )`. Given that this a niche feature that broke Python 3.13 support for functions taking `void*`, which is quite common, it can be argued that it's better to remove this implicit conversion. This commit fixes the following tests under Python 3.13:. ```; roottest-python-basic-datatype; roottest-python-cpp-cpp; ```. This reverts the following commit from upstream:; https://github.com/wlav/CPyCppyy/commit/80a0205f590394b88a583a296704356a9740606f. See also the Fedora 41 CI PR:; https://github.com/root-project/root/pull/16748",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16816:611,test,tests,611,https://root.cern,https://github.com/root-project/root/pull/16816,1,['test'],['tests']
Testability,"The `Minimization` topic appears a lot in RooFit logs, so it would be nice to fix this typo.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8138:49,log,logs,49,https://root.cern,https://github.com/root-project/root/pull/8138,1,['log'],['logs']
Testability,"The `PrintMatrix` was declared in the global namespace which means that if you define your own PrintMatrix macro you can have a name clash. This PR ""qualifies"" the name using the prefix `TMVA_DNN_`. Verified to be working as intended with compiled code both with `DEBUG_TMVA_TCPUMATRIX` defined and not using code; ```; TMVA::DNN::TCpuMatrix<double> t{3, 3};; t.Print();; TMVA_DNN_PrintTCpuMatrix(t, ""Test"");; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2579:401,Test,Test,401,https://root.cern,https://github.com/root-project/root/pull/2579,1,['Test'],['Test']
Testability,"The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:; ```python; import ROOT; ROOT.PyConfig.IgnoreCommandLineOptions = True; ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:; ```python; import ROOT; ROOT.gROOT.SetBatch(True); ```; or in the command line:; ```bash; > python my_script.py -b; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3731:610,log,logic,610,https://root.cern,https://github.com/root-project/root/pull/3731,2,['log'],['logic']
Testability,The `Require*` tests are testing that we correctly check for error conditions -- that should not depend on ST vs MT (but as you saw it might happen that if we check in each thread we get the error message printed N times),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1152086743:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1152086743,2,['test'],"['testing', 'tests']"
Testability,"The `RooAbsBinning` interface for bin index lookups was changed to; enable vectorized implementations. Instead of having the override; `RooAbsBinning::binNumber()`, the binning implementations now have to; override the `RooAbsBinning::binNumbers()` function to evaluate the bin; indices of multiple values in one function call. The interface of `RooAbsBinning::binNumbers()` is designed to facilitate; the accregation of bin indices over multiple dimensions, and it uses a; `double` ouput vector such that the caller can reuse the output buffer; for other computations. The former `RooAbsBinning::binNumber()` method is now implement in terms; of the vectorized version, such that we automatically get wide test; coverage. It was verified that this doesn't come with a performance; overhead. This will greatly facilitate the vectorization of the RooHistPdf and; RooHistFunc later. A second commit in this PR applies some other improvements to the `RooBinning` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11151:707,test,test,707,https://root.cern,https://github.com/root-project/root/pull/11151,1,['test'],['test']
Testability,"The `RooAbsPdf::_normSet` member should be not used, because it can; happen in many situations that the RooArgSet it points to gets out of; scope and then you get a crash. There were several cases reported on the; forum where this happened with a RooAddPdf recently, becaues with ROOT; 6.26 some logic of the RooAddPdf got changed to better deal with empty; normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf; directly, instead of `evaluate()`. This way, it has access to the actual; normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to; `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it; falls back to using `_copyOfLastNormSet`, which is guaranteed to still; be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10550:296,log,logic,296,https://root.cern,https://github.com/root-project/root/pull/10550,1,['log'],['logic']
Testability,"The `RooAbsReal::getValues` has already been established as the entry; point for evaluating RooFit objects with the batch mode and it should; not be broken. In 6.26, the `getValues` function was broken to fall back on the scalar; mode all the time, because the `evaluateSpan` funtions it used got; replaced by `computeBatch`. In this commit, the desired behavior of; using the BatchMode is restored by using the RooFitDriver. To that end, a; new constructor has been added to the RooFitDriver that takes a; `RooBatchCompute::RunContext` directly. The override of `getValues` in RooAbsPdf was also removed now, because; it's the job of the RooFitDriver to treat pdfs correctly. This PR fixes the performance regression that was observed in the vectorized pdf tests in `roottest`. To fix the performance regression completely, this PR also includes a commit to avoid some overhead in the pure CPU batch mode with RooFitDriver. This bugfix should also be backported to 6.26 as a bugfix for the patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9986:758,test,tests,758,https://root.cern,https://github.com/root-project/root/pull/9986,1,['test'],['tests']
Testability,"The `RooEffProd` class contains some caching logic to always provide a; normalization set to the integrated pdf. However, this should better not; be done, because as the the former documentation sais it ""breaks the; default RooAbsPdf normalization handling"". It is also inconsistent,; because, other RooFit classes like `RooProduct` don't do that. Also, it is not the task of the RooEffProd to protect pdfs from being; evaluated without normalization set if their shape depends on it. The; concerned pdfs (like RooAddPdf) already do that themselves. The reason why this is removed now it that the caching of normalization; integrals doesn't work with the new RooFit batch mode. This commit is tested by the `stressRooFit` unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10100:45,log,logic,45,https://root.cern,https://github.com/root-project/root/pull/10100,3,"['log', 'test']","['logic', 'test', 'tested']"
Testability,"The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10465:1073,test,test,1073,https://root.cern,https://github.com/root-project/root/pull/10465,3,['test'],"['test', 'testRooAbsPdf']"
Testability,"The `RooParametricStepFunction` is not used much, but still there is an; issue requesting to explain its usage better that needs to be closed. I don't think it's worth it to have a tutorial for it, but nothing; speaks about having a little complete usage example script in the; reference guide instead of the code stub that is there right now. This change to the documentation goes together with some gentle code; modernization in this commit. Closes #7748.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10798:314,stub,stub,314,https://root.cern,https://github.com/root-project/root/pull/10798,1,['stub'],['stub']
Testability,"The `RooRealIntegral` class is smart enough to figure out which; variables the function the integrated function doesn't depend on and; trivially integrates them itself by multiplying with the variable; definition range. However, if the integration range is a subrange of the variable range,; this was not considered. This resulted in wrong results. for integrals; like `pdf.createIntegral(x, ""subrange"")`, where the pdf doesn't depend; on x. These kind of integrals can occur in the projections that the; RooAddPdf does, so it's important that they work, and fixing this; partially addresses https://github.com/root-project/root/issues/11486. This change also fixes a so-far unknown bug in the `RooXYChi2Var`, which; also used these kind of integrals. Without this fix, the `Integrate()`; feature for `chi2FitTo()` was completely broken, which can be seen in; the output of the `rf609` tutorial with any previous ROOT version. The; tutorial looks okay by chance, because the function is dominted by the; quadratic term in `x` that is constant in the fit. But if one makes this; a floating parameter, the problem gets obvious. Probably that was the reason why the main model parameter was set; constant to begin with, to sweep the bug under the rug. Now, the; tutorials are updated to have the quadratic coefficient floating too.; And also `stressRooFit`, since the reference file has to be updated; anyway. To demonstrate that things work correctly now, a new unit test was; implemented that does the closure check of the `integrate()` feature of; the `RooXYChi2Var` with a linear fit function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12011:1465,test,test,1465,https://root.cern,https://github.com/root-project/root/pull/12011,1,['test'],['test']
Testability,"The `RooSTLRefCountList` is used in the `RooAbsArg` client server ; interface, which is why speeding up lookup operations is very important ; for large models. ; ; With this commit: ; ; The `RooSTLRefCountList` is used in the `RooAbsArg` client server; interface, which is why speeding up lookup operations is very important; for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the; ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the; collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and; determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some; increased memory usage. The order of the elements is still the same, so; no user code should be affected.; ; As far as I can tell, this change has now drawbacks other than some ; increased memory usage. The order of the elements is still the same, so ; no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):; ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```; Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):; ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9403:682,test,test,682,https://root.cern,https://github.com/root-project/root/pull/9403,5,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11477:894,test,test,894,https://root.cern,https://github.com/root-project/root/pull/11477,1,['test'],['test']
Testability,"The `TApplication` default constructor uses `*argc=nullptr` and `**argv=nullptr` as default values, and ignores the args if that is passed in.; For symmetry and by principle of least surprise, ensure that this also works with `TRint`, which can also be used as base class (or helper class) in existing applications. see #10090. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10094:349,test,tested,349,https://root.cern,https://github.com/root-project/root/pull/10094,1,['test'],['tested']
Testability,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8590:5,Test,TestGauss,5,https://root.cern,https://github.com/root-project/root/pull/8590,2,"['Test', 'test']","['TestGauss', 'tests']"
Testability,"The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15180:400,log,logic,400,https://root.cern,https://github.com/root-project/root/pull/15180,1,['log'],['logic']
Testability,The `colWiseRead` tests are fixed by [this PR in roottest](https://github.com/root-project/roottest/pull/102).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-340819596:18,test,tests,18,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-340819596,1,['test'],['tests']
Testability,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11117:273,assert,assertions,273,https://root.cern,https://github.com/root-project/root/pull/11117,4,"['assert', 'test']","['assertion', 'assertions', 'tested']"
Testability,"The `if (_normSet)` did not behave as intended, because the `RooAbsPdf::_normSet` member is a TString, and not a `char*`. And TStrings always convert to `true` booleans, even if they are empty. This commit fixes the empty normalization range check by using `TString::IsNull()` instead. This fix helps to benchmark RooAddPdfs with the new `codegen` backend, because it avoids the creation of unnecessary normalization integrals that codegen can't handle. This is a follow-up to 74e3099.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13518:304,benchmark,benchmark,304,https://root.cern,https://github.com/root-project/root/pull/13518,1,['benchmark'],['benchmark']
Testability,"The `math/mlp` library is very small and has no dependencies outside the minimal ROOT:; https://github.com/root-project/root/blob/master/math/mlp/CMakeLists.txt. Therefore, I think it's not worth it to have an extra build option to disable this component. Removing build options helps in reducing the test matrix and user confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13862:301,test,test,301,https://root.cern,https://github.com/root-project/root/pull/13862,1,['test'],['test']
Testability,"The `max template recursion depth reached` error is due to the; implementation of std::tuple's move constructor in some STL; implementations (notably, gcc). The logic has been modified to avoid copying large tuples:; - the number of slots is now fixed for each node at construction time; - all the logic that was implemented by the `CreateSlot` methods has; been moved to the corresponding nodes' constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/740:161,log,logic,161,https://root.cern,https://github.com/root-project/root/pull/740,2,['log'],['logic']
Testability,"The `max template recursion depth reached` error is due to the; implementation of std::tuple's move constructor in some STL; implementations (notably, gcc). The logic has been modified to avoid copying large tuples:; - the number of slots is now fixed for each node at construction time; - all the logic that was implemented by the `CreateSlot` methods has; been moved to the corresponding nodes' constructors. Cherry-pick conflicts:; 	tree/treeplayer/inc/ROOT/TDFNodes.hxx; 	tree/treeplayer/src/TDFNodes.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/743:161,log,logic,161,https://root.cern,https://github.com/root-project/root/pull/743,2,['log'],['logic']
Testability,"The `n_in_range` reference value in the unit test; `roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range` apparently doesn't get computed right on some 32 platforms. I can't reproduce the problem, but I'm sure it will be fixed by avoiding the use of the operators `&` and `|` with numpy arrays. Just doing a manual loop in Python should be more platform independent. Closes #12162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13612:45,test,test,45,https://root.cern,https://github.com/root-project/root/pull/13612,2,"['Test', 'test']","['TestRooDataSetNumpy', 'test']"
Testability,"The `pyobj`'s `tp_flags` can have a number of other bits set, for example `Py_TPFLAGS_HEAPTYPE` and `Py_TPFLAGS_BASETYPE`. Only forward the two bits for `Py_TPFLAGS_HAVE_GC` and (since Python 3.11) `Py_TPFLAGS_MANAGED_DICT`. This fixes test failures seen with a Debug build on Fedora 38, but likely affecting all builds against Python 3.11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12857:236,test,test,236,https://root.cern,https://github.com/root-project/root/pull/12857,1,['test'],['test']
Testability,"The `report` attribute is not present in all types of errors, as seen in e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13617:158,test,testReport,158,https://root.cern,https://github.com/root-project/root/pull/13617,2,['test'],"['test', 'testReport']"
Testability,"The `target` attribute in a rule specification is mandatory, but the list can be empty, in which case `TSchemaRule::GetTarget()` returns `nullptr`. In particular, @Nowakus reported the following error for read rules associated with class `ElementLinkBase`, which happens to have an empty `target` list; ```; Fatal: rule->GetTarget() != nullptr violated at line 1006 of; `/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx'; aborting; ```; Therefore, in principle we should also allow these rules for now. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12049:590,test,tested,590,https://root.cern,https://github.com/root-project/root/pull/12049,1,['test'],['tested']
Testability,"The `test.cmake` script is meant to automate some of the standard configure, build, test, install cycle during development, but also for continuous integration. The script can be generically called as; ```sh; ctest -VV -S test.cmake; ```; from the top directory of the repository. There are several options to customize the build, the main ones are:. | Option | Description |; |----------------------|-------------|; | -DCOVERAGE=1 | Enables test coverage analysis with gcov; | -DMEMCHECK=1 | Enables memory checking with valgrind; | -DSTATIC_ANALYSIS=1 | Enables static analysis with clang-tidy; | -DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/14999,4,['test'],['test']
Testability,The `testRooPolyFunc` was broken before on Windows because the; `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9447:5,test,testRooPolyFunc,5,https://root.cern,https://github.com/root-project/root/pull/9447,1,['test'],['testRooPolyFunc']
Testability,"The `valgrind` log of a `Debug` build is much more interesting because it also shows where the invalid write occurs, not only where the memory was originally allocated:; ```; ==1850998== Invalid write of size 8; ==1850998== at 0x4E72A70: std::_Rb_tree_header::_M_reset() (stl_tree.h:209); ==1850998== by 0x4E72A4F: std::_Rb_tree_header::_Rb_tree_header() (stl_tree.h:176); ==1850998== by 0x421C238: ???; ==1850998== by 0x9C8969F: TClingClassInfo::New(void*, ROOT::TMetaUtils::TNormalizedCtxt const&) const (TClingClassInfo.cxx:1244); ==1850998== by 0x9B3B91F: TCling::ClassInfo_New(ClassInfo_t*, void*) const (TCling.cxx:8365); ==1850998== by 0x545101B: TClass::NewObject(void*, TClass::ENewType) const (TClass.cxx:5126); ==1850998== by 0x5450DEA: TClass::New(void*, TClass::ENewType) const (TClass.cxx:5086); ==1850998== by 0x88FD8F2: TStreamerInfo::New(void*) (TStreamerInfo.cxx:4814); ==1850998== by 0x5450C48: TClass::NewObject(TClass::ENewType, bool) const (TClass.cxx:5058); ==1850998== by 0x54506F8: TClass::New(TClass::ENewType, bool) const (TClass.cxx:4973); ==1850998== by 0x23D5B04D: TBranchElement::SetAddressImpl(void*, bool) (TBranchElement.cxx:5394); ==1850998== by 0x23D58DF5: TBranchElement::SetAddress(void*) (TBranchElement.cxx:4897); ==1850998== Address 0x14a50860 is 0 bytes after a block of size 32 alloc'd; ==1850998== at 0x4C36B6F: operator new[](unsigned long) (vg_replace_malloc.c:640); ==1850998== by 0x88FD490: TStreamerInfo::New(void*) (TStreamerInfo.cxx:4712); ==1850998== by 0x5450C48: TClass::NewObject(TClass::ENewType, bool) const (TClass.cxx:5058); ==1850998== by 0x54506F8: TClass::New(TClass::ENewType, bool) const (TClass.cxx:4973); ==1850998== by 0x23D5B04D: TBranchElement::SetAddressImpl(void*, bool) (TBranchElement.cxx:5394); ==1850998== by 0x23D58DF5: TBranchElement::SetAddress(void*) (TBranchElement.cxx:4897); ==1850998== by 0x23D5CE53: TBranchElement::SetupAddressesImpl() (TBranchElement.cxx:5889); ==1850998== by 0x23D5CCAD: TBranchElement::SetupAddre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543#issuecomment-1012145403:15,log,log,15,https://root.cern,https://github.com/root-project/root/issues/9543#issuecomment-1012145403,1,['log'],['log']
Testability,"The addition of this function is in anticipation for horizontal joining of RNTuples, which will be handled in the context of the `RNTupleProcessor` that is currently under development (see also #15084). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15279:224,test,tested,224,https://root.cern,https://github.com/root-project/root/pull/15279,1,['test'],['tested']
Testability,The alias was deprecated with `numpy-1.20` and now expired in `numpy-1.24`:; https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; https://numpy.org/devdocs/release/1.24.0-notes.html#expired-deprecations. This change also works with older versions (tested with `numpy-1.19`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12827:261,test,tested,261,https://root.cern,https://github.com/root-project/root/pull/12827,1,['test'],['tested']
Testability,"The analytical integral code of the `RooTruthModel` was making the wrong assumption that if one uses the single-sided bases, the minimum x value is always at zero (or the maximum value at zero, for the case of the flipped bases). This resulted in wrong integral values when integrating over a subrange, as reported here on the forum:. https://root-forum.cern.ch/t/possible-bug-in-integration-of-roobdecay-and-rooabsanaconvpdf/56968. This commit rewrites the RooTruthModel analytical integral code to also consider these cases. To avoid that with the additional code branches the code becomes too verbose, the code was refactored to use a helper function for evaluating indefinite integrals of symmetric or asymmetric basis functions. The refactored code is tested by the integration tests in `stressRooFit`, and the problem that was reported on the forum is covered by a new unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14021:757,test,tested,757,https://root.cern,https://github.com/root-project/root/pull/14021,3,['test'],"['test', 'tested', 'tests']"
Testability,"The analytical integral of RooGaussian was using erf() to compute the; integrals. Starting from x>5*sigma, this always yields 1 because of limited; precision, integrals over a range in the high tails would therefore always be zero. Now, erfc() is used, which is much more accurate in the upper tail.; To obtain the same precision in the low tails, all ranges are mapped; onto the upper tail of the Gaussian before calling erfc(). A unit test for various Gaussian integrals has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3325:437,test,test,437,https://root.cern,https://github.com/root-project/root/pull/3325,1,['test'],['test']
Testability,"The argument -Xclang -triple=... completely bypasses Clang's Driver; logic and only sets the triple in CC1. This suffices for most code; generation tasks, but the Driver cannot compute the correct ABI and; sets the generic AArch64 ""aapcs"" instead of the specific ""darwinpcs"".; In turn, this causes integer arguments with less than 32 bits not; being sign-extended but being passed directly, which for example; manifests as (short)-1 being read as 65535 on the callee side. The new argument --target=arm64-apple-darwin20.3.0 matches what; Apple's and LLVM main's clang return for --print-target-triple. Fixes #7090. (cherry picked from commit f75a7c464b8b3f49b4ad1ae0e536d139235863d2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7792:69,log,logic,69,https://root.cern,https://github.com/root-project/root/pull/7792,2,['log'],['logic']
Testability,"The argument `-Xclang -triple=...` completely bypasses Clang's Driver logic and only sets the triple in CC1. This suffices for most code generation tasks, but the Driver cannot compute the correct ABI and sets the generic AArch64 `aapcs` instead of the specific `darwinpcs`. In turn, this causes integer arguments with less than 32 bits not being sign-extended but being passed directly, which for example manifests as `(short)-1` being read as `65535` on the callee side. The new argument `--target=arm64-apple-darwin20.3.0` matches what Apple's and LLVM main's clang return for `--print-target-triple`. Fixes #7090",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7787:70,log,logic,70,https://root.cern,https://github.com/root-project/root/pull/7787,1,['log'],['logic']
Testability,"The argument parsing in rootcling has become quite hard (if not impossible) to maintain. This PR replaces the handmade argument parsing with the [LLVM's CommandLine](https://github.com/root-project/root/blob/master/interpreter/llvm/src/docs/CommandLine.rst) framework.; Use the llvm command line option parser and phase out the hand crafted one. It uses declarative-style option specification, improves type-safety and most importantly moves out from rootcling the cumbersome argument parsing logic. One of the major advantages is that help messages are automatically generated:; ```; OVERVIEW: rootcling; USAGE: rootcling [options] <output dictionary file> <list of dictionary header files> <LinkDef file>; ; OPTIONS:; ; Generic Options:; ; -help - Display available options (-help-hidden for more); -help-list - Display list of available options (-help-list-hidden for more); -version - Display the version of this program; ; rootcling common options:; ; -D=<string> - Specify defined macros.; -I=<string> - Specify an include path.; -W=<string> - Specify compiler diagnostics options.; -c - Deprecated, legacy flag which is ignored.; -cxxmodule - Generate a C++ module.; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Sp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:493,log,logic,493,https://root.cern,https://github.com/root-project/root/pull/4171,1,['log'],['logic']
Testability,"The array interface now inferes the size of the data-type with `sizeof` by itself. This fixes [this](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/1703/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6-i686/testReport/junit/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/) failure for `long` types on 32bit sytems not being 8 bytes long.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1925:217,test,testReport,217,https://root.cern,https://github.com/root-project/root/pull/1925,2,['test'],"['test', 'testReport']"
Testability,"The assert is in TCling::AutoLoad:; ```; if (!IsClassAutoLoadingEnabled()) {; ...; }. assert(IsClassAutoLoadingEnabled() && ""Calling when AutoLoading is off!"");; ```. which does indicate that the state changed between the `if statement` and the `assert`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093#issuecomment-767065209:4,assert,assert,4,https://root.cern,https://github.com/root-project/root/issues/7093#issuecomment-767065209,3,['assert'],['assert']
Testability,"The assert is not needed and it could also fail, if for some random number generated value==2*sigma. This could explain some failure observed in TMVA CNN tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5468:4,assert,assert,4,https://root.cern,https://github.com/root-project/root/pull/5468,1,['assert'],['assert']
Testability,"The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13099:4,assert,assertion,4,https://root.cern,https://github.com/root-project/root/pull/13099,1,['assert'],['assertion']
Testability,"The attempt to fix the following test that was failing:; roottest-python-basic-operator; led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. ; Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo.; The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3963:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/3963,2,['test'],['test']
Testability,"The automatic conversion of ordinary obejcts to smart pointers is disabled for PyROOT because it can cause trouble with overload resolution. If a function has overloads for both ordinary objects and smart pointers, then the implicit conversion to smart pointers can result in the smart pointer overload being hit, even though there would be an overload for the regular object. Since PyROOT didn't have this feature before 6.32 anyway, disabling it was the safest option. Closes #15117. A regression test with the reproducer from the GitHub issue was added to roottest:; https://github.com/root-project/roottest/pull/1102",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15125:499,test,test,499,https://root.cern,https://github.com/root-project/root/pull/15125,1,['test'],['test']
Testability,The bare file container is only used for testing and therefore should not be part of the public interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14761:41,test,testing,41,https://root.cern,https://github.com/root-project/root/pull/14761,1,['test'],['testing']
Testability,"The behavior seems to have indeed changed, yet I still see the same amount of RSS being allocated in the same codepath. See attached log. [log.txt.gz](https://github.com/root-project/root/files/11757238/log.txt.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1592920018:133,log,log,133,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1592920018,3,['log'],['log']
Testability,"The behavior shown in the failing test is not what we need, because the old `TGlobal` object claims it's valid but finding it by name returns a new one. I would not mind discussing whether returning a new `TGlobal` object from `GetListOfGlobals()->FindObject()` is a worthwhile backward incompatible change, but then the old `TGlobal` object must be told that it has been invalidated. Do you want to update the old `TGlobal` object and start that discussion? Or do you have a plan B?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1416#issuecomment-349098068:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/1416#issuecomment-349098068,1,['test'],['test']
Testability,The benchmark is happy with these changes:. ![image](https://user-images.githubusercontent.com/10999034/113843943-4e53c980-9794-11eb-983b-e3beb3ed94b4.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651#issuecomment-814763350:4,benchmark,benchmark,4,https://root.cern,https://github.com/root-project/root/pull/7651#issuecomment-814763350,1,['benchmark'],['benchmark']
Testability,The benchmark is running and integrated in the dashboard here: https://rootbnch-grafana-test.cern.ch/d/G2qrd2SWk/rdataframe?orgId=1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651#issuecomment-810068200:4,benchmark,benchmark,4,https://root.cern,https://github.com/root-project/root/pull/7651#issuecomment-810068200,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11646:65,test,tests,65,https://root.cern,https://github.com/root-project/root/pull/11646,3,"['Test', 'test']","['Test', 'tests']"
Testability,"The bonjour support in xrootd (XrdOuc/XrdOucBonjour.hh) was dropped in xrootd 3.2.0, which is now a long time ago. The code in root that requires this header is therefore now dead code since a long time. The test in configure to enable it newer worked anyway. The attached patch removes the dead code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/91:208,test,test,208,https://root.cern,https://github.com/root-project/root/pull/91,1,['test'],['test']
Testability,"The buffer tests for histograms have slightly different rounding errors between buffered/not buffered histograms which exceed a few epsilons, so the test fails if the tolerances are too strict. *Note:* This test doesn't fail on Jenkins, but *does* fail on my machine without this patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138:11,test,tests,11,https://root.cern,https://github.com/root-project/root/pull/2138,3,['test'],"['test', 'tests']"
Testability,The bug was discovered by running runarray1 test in runtime_cxxmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2762:44,test,test,44,https://root.cern,https://github.com/root-project/root/pull/2762,1,['test'],['test']
Testability,The build fails on [fedora37 LLVM_ENABLE_ASSERTIONS=On](https://github.com/root-project/root/actions/runs/7425862030/job/20208382406?pr=14180#logs); ```; In file included from /github/home/ROOT-CI/build/net/netxng/G__NetxNG.cxx:38:; Error: /github/home/ROOT-CI/src/net/netxng/inc/TNetXNGFile.h:27:10: fatal error: XrdCl/XrdClFileSystem.hh: No such file or directory; 27 | #include <XrdCl/XrdClFileSystem.hh>; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; gmake[2]: *** [net/netxng/CMakeFiles/G__NetxNG.dir/build.make:97: net/netxng/CMakeFiles/G__NetxNG.dir/G__NetxNG.cxx.o] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:50605: net/netxng/CMakeFiles/G__NetxNG.dir/all] Error 2; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14180#issuecomment-1880687658:142,log,logs,142,https://root.cern,https://github.com/root-project/root/pull/14180#issuecomment-1880687658,1,['log'],['logs']
Testability,"The build finished, but the link to the qch file is somehow still broken. Could you check the build log?. I tried the changes locally, and when I go to root_src/documentation/doxygen and call:; `doxygen`; it correctly creates the file ROOT.qch in the subfolder html. ```; /opt/root_src/documentation/doxygen$ ls html/*.qch -l; -rw-r--r-- 1 77799424 ene 11 16:48 html/ROOT.qch; ```. Maybe the synch script is not copying correctly this created html file from the root source repository to ~/rootdoc ? Or maybe ROOT.tag is directly created in ~/rootdoc/html, whereas ROOT.qch is created in root_src/documentation/doxygen/html ?. Thanks again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1010829114:100,log,log,100,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010829114,1,['log'],['log']
Testability,"The build on ROOT-fedora30/cxx14 fails for no reason, all test have passed but the build is declared UNSTABLE for some unknown reason. @Axel-Naumann any idea? I've seen this message on other builds in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4835#issuecomment-578726534:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/4835#issuecomment-578726534,1,['test'],['test']
Testability,The build on Windows didn't fail. This stupid Jenkins is taking the `error C2664: ...` in the commit log as real errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789#issuecomment-891812150:101,log,log,101,https://root.cern,https://github.com/root-project/root/pull/8789#issuecomment-891812150,1,['log'],['log']
Testability,"The case @smuzaffar quoted above is actually CPU-only code (even if it uses Alpaka), so the problem is not specific to CUDA/ROCm. The full build log shows a crash also in DataFormats/Histograms package, that is completely independent from GPUs or Alpaka, and that the dictionary generation succeeds for many CUDA-dependent classes. https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8fe9c7/41033/build-logs/DataFormats/Histograms/log.html; ```; 0.	Program arguments: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/lcg/root/6.33.01-a252d5032aa4f9a2fc7dcaab3fac8b9f/bin/rootcling -reflex -f tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.cc -inlineInputHeader -failOnWarnings -rmf tmp/el8_amd64_gcc12/src/DataFormats/Histograms/src/DataFormatsHistograms/a/DataFormatsHistograms_xr.rootmap -rml libDataFormatsHistograms.so -m DataFormatsCommon_xr_rdict.pcm -m DataFormatsProvenance_xr_rdict.pcm -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=120301 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -DPROJECT_NAME=\""CMSSW\"" -DPROJECT_VERSION=\""CMSSW_14_1_ROOT6_X_2024-08-19-2300\"" -Isrc -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/pcre/8.43-e34796d17981e9b6d174328c69446455/include -isystem/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-7ac88d918a6883d593abc133ee0eb2e9/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/bz2lib/1.0.6-d065ccd79984efc6d4660f410e4c81de/include -I/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2329311081:145,log,log,145,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2329311081,5,"['log', 'test']","['log', 'logs', 'testBuildDir', 'tests']"
Testability,"The case of `ExprAddresses == nullptr` seems to be naturally handled in the lines below this assertion, which suggests that it is okay if the asserted predicate does not hold. Therefore, removing this assertion -as discussed with @vgvassilev in the linked issue- [see here](https://github.com/root-project/root/issues/8389#issuecomment-958105156). ## Changes or fixes:; - Remove unneded `assert()`, as discussed above. ## Checklist:; - [X] tested changes locally. This PR fixes #8389.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9245:93,assert,assertion,93,https://root.cern,https://github.com/root-project/root/pull/9245,5,"['assert', 'test']","['assert', 'asserted', 'assertion', 'tested']"
Testability,"The casting of the function to improve lookup didn't took; variadic functions into aspect, causing ABI issues when generating; the code for calling this function. This correctly appends the; annotation for a variadic function to the function type. This fixes the roottest-python-cling-cling test when compiling; with icc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/816:291,test,test,291,https://root.cern,https://github.com/root-project/root/pull/816,1,['test'],['test']
Testability,"The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12781:325,test,test,325,https://root.cern,https://github.com/root-project/root/pull/12781,2,['test'],"['test', 'tested']"
Testability,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11655:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/11655,5,"['assert', 'test']","['assertEqual', 'assertEquals', 'test', 'tests']"
Testability,The changes are backward incompatible (they break [some tutorials](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=454086)) and also change the class layout in a way that breaks the test [`root/io/filemerger`](http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=454086) in [roottest](https://github.com/root-project/roottest).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1562:187,test,test,187,https://root.cern,https://github.com/root-project/root/pull/1562,1,['test'],['test']
Testability,The changes in the commits are taken from upstream. Each commit references the upstream commit(s) that were needed to implement those changes. This should fix #13410 and hopefully not provoke other test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13821:198,test,test,198,https://root.cern,https://github.com/root-project/root/pull/13821,1,['test'],['test']
Testability,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13651:357,log,logic,357,https://root.cern,https://github.com/root-project/root/pull/13651,2,"['log', 'test']","['logic', 'test']"
Testability,"The changes of this PR cause new test failures which are related to the iteration of `std::vector`. Possibly the `value_type` and `value_size` fields are linked to the iteration too, and some additional changes are required there. Needs investigation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11623#issuecomment-1290785557:33,test,test,33,https://root.cern,https://github.com/root-project/root/pull/11623#issuecomment-1290785557,1,['test'],['test']
Testability,The changes to fix the build process with GCC6 mentioned in [ROOT-8180](https://sft.its.cern.ch/jira/browse/ROOT-8180) only apply to GCC6. The same problem occurs again using GCC7 because of the equality check to major version 6. . The commit is tested on Arch Linux 64Bit and fixes the compile errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/731:246,test,tested,246,https://root.cern,https://github.com/root-project/root/pull/731,1,['test'],['tested']
Testability,"The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location. # Additional diagnostic. To find the bug, I also add some diagnostic functions for the PTX compiler. 1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error. example; ```; - example before:; error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.; error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes. - example after:; cling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; cling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.; cling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; ```. 2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707:141,test,tests,141,https://root.cern,https://github.com/root-project/root/pull/6707,1,['test'],['tests']
Testability,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6106:439,benchmark,benchmarks,439,https://root.cern,https://github.com/root-project/root/pull/6106,1,['benchmark'],['benchmarks']
Testability,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896#issuecomment-499356709:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/3896#issuecomment-499356709,1,['test'],['test']
Testability,"The code looks fine to me. I don't think using vector::reserve is needed in this case. . It would be nice to test the performance in a complex fix which takes some time and uses heavily the cache, The tutorial are maybe too simple and the fitting is too fast. ; If you can maybe simplify your workspace and make a standalone running example would be great. ; Also, did you observe a substantial performance penalty when creating the std::vector in recalculateCache instead of having as a data member of the class ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116#issuecomment-293337111:109,test,test,109,https://root.cern,https://github.com/root-project/root/pull/116#issuecomment-293337111,1,['test'],['test']
Testability,The code looks good to me. Please test with the new cudnn version 8 if it works. ; I will try to check with cudnn version 7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-662506168:34,test,test,34,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-662506168,1,['test'],['test']
Testability,"The code seems fine. The commit logs reads:; ```; Before, it was loading the library which doesn't exists; ```; I am bit confused by the wording, what is the intent?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-396270321:32,log,logs,32,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-396270321,1,['log'],['logs']
Testability,The code was updated to replace the `MockTObject` with friendship.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11334#issuecomment-1245856220:37,Mock,MockTObject,37,https://root.cern,https://github.com/root-project/root/pull/11334#issuecomment-1245856220,1,['Mock'],['MockTObject']
Testability,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log; $ root -b -q -x -e 1+2; input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; 'at_quick_exit' not defined; <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:126,log,log,126,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['log'],['log']
Testability,"The command executed by root is:; ```; gs -quiet -dSAFER -dNOPLATFONTS -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dUseCIEColor -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dCompatibilityLevel=1.4 -dMaxSubsetPct=100 -dSubsetFonts=true -dEmbedAllFonts=true -sOutputFile=pdf_temp.pdf -f Test.pdf; ```; I tried on an other Mac with a more recent version of `gs` and I see also the error message. I am investigating. ```; root [5] c1->Print(""Test.pdf"",""EmbedFonts"");; Info in <TCanvas::Print>: EmbedFonts file Test.pdf has been created; GPL Ghostscript 9.55.0: . Use of -dUseCIEColor detected!; Since the release of version 9.11 of Ghostscript we recommend you do not set; -dUseCIEColor with the pdfwrite/ps2write device family. **** Error: Encountered 'obj' while expecting 'endobj'.; Treating this as a missing 'endobj', output may be incorrect.; **** Error: Encountered 'obj' while expecting 'endobj'.; Treating this as a missing 'endobj', output may be incorrect.; GPL Ghostscript 9.55.0: . Use of -dUseCIEColor detected!; Since the release of version 9.11 of Ghostscript we recommend you do not set; -dUseCIEColor with the pdfwrite/ps2write device family. root [6] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13560#issuecomment-1697296935:282,Test,Test,282,https://root.cern,https://github.com/root-project/root/issues/13560#issuecomment-1697296935,3,['Test'],['Test']
Testability,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16243:152,test,testing,152,https://root.cern,https://github.com/root-project/root/pull/16243,8,"['Test', 'test']","['TestSupport', 'testing', 'tests']"
Testability,The commit implements a few new unit tests and also fixes one bug related to the normalization of a RooAddPdf when the custom normalization set of its components is reset. There is also some code improvement by removing a redundant data member of the `RooAddPdf` and `RooAddModel` classes. More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11485:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/11485,1,['test'],['tests']
Testability,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-508057360:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-508057360,3,['test'],"['test', 'tests']"
Testability,The commit log and code comment seems at odd. One talks about gROOT and the other talks about libIMT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1127#issuecomment-334139810:11,log,log,11,https://root.cern,https://github.com/root-project/root/pull/1127#issuecomment-334139810,1,['log'],['log']
Testability,"The compiler flag is not available in clang, tested with clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4727:45,test,tested,45,https://root.cern,https://github.com/root-project/root/pull/4727,1,['test'],['tested']
Testability,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15840:185,test,test,185,https://root.cern,https://github.com/root-project/root/pull/15840,2,['test'],['test']
Testability,"The content of the PR description should be reproduce or summarize in the release notes (and if summary, it should be reproduced in the commit log).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065#issuecomment-333991768:143,log,log,143,https://root.cern,https://github.com/root-project/root/pull/1065#issuecomment-333991768,1,['log'],['log']
Testability,"The context is; ```; 17:06:38 [10689/11146] Running utility command for SofieCompileModels_ONNX; 17:06:38 error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; 17:06:38 fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; 17:06:38 FAILED: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.util ; ```; This didn't happen before with my changes. It looks like TMVA/Sofie is trying to build a test that needs the PCH before the PCH is created (i.e. that particular test should depend on the PCH being built and it's currently not). That is, the equivalent of. https://github.com/root-project/root/blob/master/tmva/sofie/test/CMakeLists.txt#L96-L103. is missing for `SofieCompileModels_ONNX`. Maybe @lmoneta has seen this problem before?; This test seems to have [other problems](https://mattermost.web.cern.ch/root/pl/ckkqimfxxpbefeq4rrcn3t5dpy) as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1401704523:406,test,test,406,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1401704523,5,['test'],['test']
Testability,"The corresponding leaflist letters are 'G' and 'g'.; A new class TLeafG is added -- basically a copy of TLeafL with; [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,; std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:; - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt); - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right?. ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx; - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`; - [x] update doc of class TTree; - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`; - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`; - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6600:631,test,tests,631,https://root.cern,https://github.com/root-project/root/pull/6600,3,['test'],"['test', 'tests']"
Testability,The corresponding regression test is submitted in a PR to roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/662:29,test,test,29,https://root.cern,https://github.com/root-project/root/pull/662,1,['test'],['test']
Testability,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10659:200,assert,assert,200,https://root.cern,https://github.com/root-project/root/pull/10659,2,"['Assert', 'assert']","['Assertion', 'assert']"
Testability,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16022:257,test,tested,257,https://root.cern,https://github.com/root-project/root/pull/16022,1,['test'],['tested']
Testability,The current builds fail because without a valid modulemap the setresuid test failed during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/425:72,test,test,72,https://root.cern,https://github.com/root-project/root/pull/425,1,['test'],['test']
Testability,"The current failing tests demonstrate possibly the only real blocker for this PR. The constructor now always opens the file to check the data format, and this is a backwards-incompatible change. Not a terrible one per se, but for example [test_headnode.py](https://github.com/root-project/root/blob/855f1790ab9a37637d7ddcc963b43247972f1d6e/bindings/experimental/distrdf/test/test_headnode.py#L153) test relies on the current constructor not opening the file argument. Maybe users in the wild could have a similar pattern, although this type of ""exploit"" may be also labeled as ""unwanted/unsupported"". I think we need some concrete opinions from @eguiraud , @jblomer , @Axel-Naumann , @pcanal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1650365986:20,test,tests,20,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1650365986,3,['test'],"['test', 'tests']"
Testability,"The current failure in snapshot is due to an ABI incompatibility (or so it seems) that we may have encountered before.; The failing line is:; {code:c++}; auto snapshotRDF = std::make_shared<RInterface<RLoopManager>>(std::make_shared<RLoopManager>(nullptr, validCols));; {code}; and one of the component of make_shared is the call to the following shared_ptr constructor; {code:c++}; // This constructor is non-standard, it is used by allocate_shared.; template<typename _Alloc, typename... _Args>; shared_ptr(_Sp_make_shared_tag __tag, const _Alloc& __a,; _Args&&... __args); : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:697,test,test,697,https://root.cern,https://github.com/root-project/root/pull/2158,2,['test'],['test']
Testability,"The current logic for processing TTree/TChain datasets with IMT and when a TTreeIndex is involved requires a copy of each index in each thread, since their state depends on the TTree/TChain they are attached to. Previously, the copy was done via `TObject::Clone` which inevitably makes use of I/O functions, i.e. serialising/deserialising the TTreeIndex/TChainIndex, thus making the copy more costly than necessary. This commit introduces overloads of `Clone` for TTreeIndex and TChainIndex enabling their copy in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14812:12,log,logic,12,https://root.cern,https://github.com/root-project/root/pull/14812,1,['log'],['logic']
Testability,"The current logic in `RDisplay` relies on `cling::printValue` for printing the column elements, which means we still need a lot of jitting even when the call to the `Display` action is properly templated. https://github.com/root-project/root/blob/aa513463b0b512517370cb91cca025e53a8b13a2/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L213-L216",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14511#issuecomment-1921340991:12,log,logic,12,https://root.cern,https://github.com/root-project/root/issues/14511#issuecomment-1921340991,1,['log'],['logic']
Testability,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5177:12,log,logic,12,https://root.cern,https://github.com/root-project/root/pull/5177,1,['log'],['logic']
Testability,"The current variant-based design of ROOT 7 histogram axes has a number of problems, ranging from inflexibility (users can't add new axis types) to [exponential compilation times](https://sft.its.cern.ch/jira/browse/ROOT-10532). As a first step towards resolving these problems, this PR moves RAxis closer to an inheritance-based design. Along the way, this PR also... - Completely revamps the RAxis test suite with much greater test coverage (which uncovered [ROOT-10555](https://sft.its.cern.ch/jira/browse/ROOT-10555) as a topic of future discussion).; - Reduces the amount of work needed to implement a new RAxis type.; - Resolves [ROOT-10401](https://sft.its.cern.ch/jira/browse/ROOT-10401), [ROOT-10402](https://sft.its.cern.ch/jira/browse/ROOT-10402), [ROOT-10404](https://sft.its.cern.ch/jira/browse/ROOT-10404), [ROOT-10405](https://sft.its.cern.ch/jira/browse/ROOT-10405), [ROOT-10554](https://sft.its.cern.ch/jira/browse/ROOT-10554), and many more minor issues uncovered during testing for which I didn't bother creating a Jira ticket.; - Is a step towards resolving [ROOT-10532](https://sft.its.cern.ch/jira/browse/ROOT-10532). Due to the amount of changes, I would advise using a commit-wise review approach. While the PR's history is not 100% perfect, it is sufficiently well squashed to lend itself to such an approach.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4933:399,test,test,399,https://root.cern,https://github.com/root-project/root/pull/4933,3,['test'],"['test', 'testing']"
Testability,"The data resetting should work seamlessly with the new NLL evaluation backend, so as far as I can tell there is nothing to be done to address #15763. However, it is good to add a unit test for it, so that we can also easily add tests for potentially problematic corner cases in the future. Possibly closes #15763, if there are no corner cases where data resetting doesn't work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16353:184,test,test,184,https://root.cern,https://github.com/root-project/root/pull/16353,2,['test'],"['test', 'tests']"
Testability,"The dataframe test failure is expected and fixed by a PR in roottest, as far as I'm concerned this PR is good to go :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/924#issuecomment-326728883:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/924#issuecomment-326728883,1,['test'],['test']
Testability,The dataframe_ranges.cxx substitutes the old test in roottest and; the test cases that were present in dataframe_regressions_tests.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1652:45,test,test,45,https://root.cern,https://github.com/root-project/root/pull/1652,2,['test'],['test']
Testability,"The default setting has been determined to be near the optimal; value from tests runs on a 4 core machine (up to 8 threads), by; creating up to 1GB of data with lightweight calculations both to; tmpfs, and to ext4 filesystem on an SSD drive.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/587:75,test,tests,75,https://root.cern,https://github.com/root-project/root/pull/587,1,['test'],['tests']
Testability,The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13686:196,test,tested,196,https://root.cern,https://github.com/root-project/root/pull/13686,1,['test'],['tested']
Testability,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11789:731,test,tested,731,https://root.cern,https://github.com/root-project/root/pull/11789,1,['test'],['tested']
Testability,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-508014052:108,test,test,108,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-508014052,3,['test'],"['test', 'tests']"
Testability,The direct creation of RooFit test statistics instances is discouraged; because the more configurable `createNLL` and `createChi2` should be; prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10610:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/10610,1,['test'],['test']
Testability,"The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations.; But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node.; If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one.; This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7841:998,test,tests,998,https://root.cern,https://github.com/root-project/root/pull/7841,1,['test'],['tests']
Testability,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11439:37,test,tests,37,https://root.cern,https://github.com/root-project/root/pull/11439,4,['test'],"['test', 'tests']"
Testability,The distribution is at its EOL. [I tried to resubmit the PR and test automatic backporting],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15389:64,test,test,64,https://root.cern,https://github.com/root-project/root/pull/15389,1,['test'],['test']
Testability,The documentation generation hangs and one of the tests in the test suite times out. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/322:50,test,tests,50,https://root.cern,https://github.com/root-project/root/pull/322,2,['test'],"['test', 'tests']"
Testability,"The enums inside `RCompressionSetting` are now enum classes rather than struct-wrapped enums. This means that converting between them and `int` requires an explicit cast. ## Remarks; While for old code I believe it's best to leave everything as-is (casts aside), it would be nice to review the root 7 code to assess where and why we still use `int` as the type for compression and see case-by-case if it would be best replaced by the strong enum type.; Of course this would be in one or more separate PRs. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #8444",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15714:527,test,tested,527,https://root.cern,https://github.com/root-project/root/pull/15714,1,['test'],['tested']
Testability,The env variable ROOTTEST_IGNORE_NUMBA is set in; rootspi/jenkins/root-build.cmake and select nodes; with expected failures of the tests. This goes along with https://github.com/root-project/rootspi/pull/75.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5476:131,test,tests,131,https://root.cern,https://github.com/root-project/root/pull/5476,1,['test'],['tests']
Testability,"The error is ""real"":; ```; Warning in <THnSparse::CreateHnAny>: Unknown Type of Histogram; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments.; const int dim ( s->GetNdimensions() );; ^; ```; Could you have a look at `root -l -b test/stressHistogram.cxx`, please? That seems to fail after your change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-875590903:304,test,test,304,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-875590903,1,['test'],['test']
Testability,The error is concerning because it is in a test directly involving address calculation. The changes seems all very reasonable so it might actually be pre-existing (but have an 'arbitrary undefined' behavior). I'll take a look.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8013#issuecomment-828542735:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/8013#issuecomment-828542735,1,['test'],['test']
Testability,"The error is unrelated; ```; Error in <ROOT [WebDisplay] Log ../root/gui/webdisplay/src/RWebWindowsManager.cxx:406 in unsigned int ROOT::Experimental::RWebWindowsManager::ShowWindow(ROOT::Experimental::RWebWindow&, bool, const ROOT::Experimental::RWebDisplayArgs&)>: Cannot display window in native; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2960#issuecomment-438851351:57,Log,Log,57,https://root.cern,https://github.com/root-project/root/pull/2960#issuecomment-438851351,1,['Log'],['Log']
Testability,"The error message changed, but there is more needed, it seems:. ```console; ❯ cat reproducer.def; Bootstrap: docker; From: fedora:36. %post; dnf -y update; dnf -y install git make cmake gcc-c++ gcc binutils ninja-build patch \; libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel; dnf -y clean all. mkdir /reproducer && cd /reproducer; git clone -b master --depth 1 http://github.com/root-project/root source; git -C source log; patch -d source -p1 <<EoF; diff --git a/interpreter/cling/include/cling/std.modulemap b/interpreter/cling/include/cling/std.modulemap; index 5498b949c5..c82959a440 100644; --- a/interpreter/cling/include/cling/std.modulemap; +++ b/interpreter/cling/include/cling/std.modulemap; @@ -428,4 +428,8 @@ module ""std"" [system] {; export *; header ""bits/stl_tree.h""; }; + module ""bits/utility.h"" {; + export *; + header ""bits/utility.h""; + }; }; EoF; cmake -GNinja -S source -B build -Dxrootd=OFF; cmake --build build; ```. -->. ```; FAILED: core/G__Core.cxx lib/Core.pcm /reproducer/build/core/G__Core.cxx /reproducer/build/lib/Core.pcm; cd /reproducer/build/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/reproducer/build/lib:/.singularity.d/libs /reproducer/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /reproducer/build/lib/libCore.so -excludePath /reproducer/source -excludePath /reproducer/build/ginclude -excludePath /reproducer/build/externals -excludePath /reproducer/build/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/c++/12/x86_64-redhat-linux -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113253160:446,log,log,446,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113253160,1,['log'],['log']
Testability,"The error occurs only when `loadLibrary()` is called with the argument `resolved = false`.; The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value; type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10593:439,test,tested,439,https://root.cern,https://github.com/root-project/root/pull/10593,1,['test'],['tested']
Testability,The error on MacOS could possibly be related to the header files removed. Re-running the test to verify that it is not from something else than this PR. @phsft-bot build with flags -Dctest_test_exclude_none=on,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2755#issuecomment-437128344:89,test,test,89,https://root.cern,https://github.com/root-project/root/pull/2755#issuecomment-437128344,1,['test'],['test']
Testability,"The error on Windows is actually not an error, it picks up the errors in the commit log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035#issuecomment-927926791:84,log,log,84,https://root.cern,https://github.com/root-project/root/pull/9035#issuecomment-927926791,1,['log'],['log']
Testability,The error on Windows is not an error (it's coming from the commit log). Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9613#issuecomment-1017171613:66,log,log,66,https://root.cern,https://github.com/root-project/root/pull/9613#issuecomment-1017171613,1,['log'],['log']
Testability,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3918#issuecomment-499756232:135,test,testReport,135,https://root.cern,https://github.com/root-project/root/pull/3918#issuecomment-499756232,1,['test'],['testReport']
Testability,The errors are all legit. I need to examine them one by one and fix them (printing warnings *does* have an effect on our tests!),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16208#issuecomment-2278276832:121,test,tests,121,https://root.cern,https://github.com/root-project/root/pull/16208#issuecomment-2278276832,1,['test'],['tests']
Testability,The exact comparison [fails](http://cdash.cern.ch/testDetails.php?test=23864693&build=342450) in some architectures where rounding may occur.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/498:50,test,testDetails,50,https://root.cern,https://github.com/root-project/root/pull/498,2,['test'],"['test', 'testDetails']"
Testability,The execute_graph function logic is currently used both in ActionProxy; and in TransformationProxy when triggering the execution if an instant; action is asked. This commit moves the function at module level so that; both places can use it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9958:27,log,logic,27,https://root.cern,https://github.com/root-project/root/pull/9958,1,['log'],['logic']
Testability,"The existing `RooFit::BatchMode` command argument for `RooAbsPdf::fitTo`; only takes a `bool` argument to either switch the batch mode on or off.; In the future, we will have more options such as the batch mode with; CUDA computations. To support these new upcoming options, a new; `RooFit::BatchMode(std::string const&)` overload is introduced to; indicate the requested batch mode in a human- and; pythonization-friendliy way. This new string parameter overload is used in the `stressRooFit` tests; such that one can pass any possible BatchMode argument also after the; CUDA mode is implemented. This is a spin-off of PR https://github.com/root-project/root/pull/9004 to make the review of the changes made during the development of the new batch mode easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9324:494,test,tests,494,https://root.cern,https://github.com/root-project/root/pull/9324,1,['test'],['tests']
Testability,"The extended term needs a special correction, it should not just be; reevaluated with the squared weights replacing the weights. This is not; implemented correctly. The way how weights are handled in the batch mode was also simplified.; Previously, a dummy `RooRealVar` was created for the weight and the; squared weight each, but now the conventional name for the weight; variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:; https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10467:466,test,test,466,https://root.cern,https://github.com/root-project/root/pull/10467,1,['test'],['test']
Testability,The failed tests are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14327#issuecomment-1886559978:11,test,tests,11,https://root.cern,https://github.com/root-project/root/pull/14327#issuecomment-1886559978,1,['test'],['tests']
Testability,"The failing count include test is also failing in master, so this is not a regression: https://github.com/root-project/root/pull/962#issuecomment-328043968",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/921#issuecomment-328044241:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/921#issuecomment-328044241,1,['test'],['test']
Testability,The failing snapshot test just needs an update to the reference file. Will address Axel's comment then merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10319#issuecomment-1088357948:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/10319#issuecomment-1088357948,1,['test'],['test']
Testability,The failing test is a glitch unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1033#issuecomment-331147533:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/1033#issuecomment-331147533,1,['test'],['test']
Testability,The failing test is not related to my changes. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8576#issuecomment-871510632:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/8576#issuecomment-871510632,1,['test'],['test']
Testability,The failing test is understood (it needed to be re-disabled as it requires an evolution of PyROOT to work). I think this can be merged @bluehood,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2050#issuecomment-391446728:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/2050#issuecomment-391446728,1,['test'],['test']
Testability,"The failing test is unrelated (JupyROOT), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15264#issuecomment-2091015713:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/15264#issuecomment-2091015713,1,['test'],['test']
Testability,"The failing test seems to trigger some llvm bug:; ```; valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on unin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250106081:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250106081,2,"['assert', 'test']","['assertSparseSelection', 'test']"
Testability,The failing tests are addressed by PR #55 in roottest.; clang-format complains about markdown that I did not touch as it sometimes does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/703#issuecomment-311674637:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/703#issuecomment-311674637,1,['test'],['tests']
Testability,The failing tests are all broken because they test the wrong return code or test unintended side effects (such as that turning on fail-on-warning suddenly enables full-blown verbose mode in RScanner due to some funny side effects with `kThrowOnWarning`). I fixed all of them in this roottest PR: https://github.com/root-project/roottest/pull/71,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-325945108:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-325945108,3,['test'],"['test', 'tests']"
Testability,"The failing tests are due to a mismatch with the key in `fDatasetGroupMap` at https://github.com/root-project/root/blob/000d367906f4dbdd78a78ab26a2d81145ac10321/tree/dataframe/src/RLoopManager.cxx#L718-L720. Other than that, there are other places where `""/""` is still used, e.g. in `RDatasetGroup.cxx` and we should see whether the syntax should be changed there too",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12316#issuecomment-1430533172:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/12316#issuecomment-1430533172,1,['test'],['tests']
Testability,The failing tests are expected here because the reference results might be affected by the bug. I will investigate this further next week.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7719#issuecomment-808559474:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/7719#issuecomment-808559474,1,['test'],['tests']
Testability,The failing tests are not due to this PR. I think this should be ready to merge @guitargeek :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966#issuecomment-1195288595:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/10966#issuecomment-1195288595,1,['test'],['tests']
Testability,The failing tests are the usual v6.14 failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776#issuecomment-429139116:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/2776#issuecomment-429139116,2,['test'],"['test', 'tests']"
Testability,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286118782:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286118782,3,"['log', 'test']","['logs', 'tests']"
Testability,The failing tests on CentOS 8 are starting to be discussed here: https://github.com/root-project/root/pull/11822#issuecomment-1337446119,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11830#issuecomment-1337512218:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/11830#issuecomment-1337512218,1,['test'],['tests']
Testability,The failing tests seem to fail on other PRs as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1263606067:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1263606067,1,['test'],['tests']
Testability,"The failing tests where from roottest suit. Two fixes:; - Added ENVIRONMENT ROOTIGNOREPREFIX=1 for some additional add_test(...) in roottest sources; - Configured two root-config (one to be used from the build tree, the other to be installed in PREFIX); Merged into master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/130#issuecomment-274015927:12,test,tests,12,https://root.cern,https://github.com/root-project/root/pull/130#issuecomment-274015927,1,['test'],['tests']
Testability,The failing unit test is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12451#issuecomment-1464852865:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/12451#issuecomment-1464852865,1,['test'],['test']
Testability,The failure are unrelated (testProxies is due to the change in std::pair handling in TClass) and the other 2 are related to template instantiation within Cling.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10206#issuecomment-1076717212:27,test,testProxies,27,https://root.cern,https://github.com/root-project/root/pull/10206#issuecomment-1076717212,1,['test'],['testProxies']
Testability,"The failure in Windows is; `21:22:41 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]`; Therefore, ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3639#issuecomment-491179897:100,test,test,100,https://root.cern,https://github.com/root-project/root/pull/3639#issuecomment-491179897,2,['test'],['test']
Testability,The failure in [projectroot.roottest.python.distrdf.dask.roottest_python_distrdf_dask_test_all](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178340/testReport/projectroot.roottest.python.distrdf/dask/roottest_python_distrdf_dask_test_all/) might look suspicious but I think it's unrelated. Let's see.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13121#issuecomment-1613428881:176,test,testReport,176,https://root.cern,https://github.com/root-project/root/pull/13121#issuecomment-1613428881,1,['test'],['testReport']
Testability,The failure is [execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/195807/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/) is surprising.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1949014653:119,test,testReport,119,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1949014653,1,['test'],['testReport']
Testability,The failure is due to a flaky test TGraphMultiErrorsTests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4743#issuecomment-572503247:30,test,test,30,https://root.cern,https://github.com/root-project/root/pull/4743#issuecomment-572503247,1,['test'],['test']
Testability,The failure is independent to this PR. The test tries to open something on http and fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4430#issuecomment-535429830:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/4430#issuecomment-535429830,1,['test'],['test']
Testability,The failure is not due to this pr. This test fails for all pr I’ve looked at.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4198#issuecomment-521180922:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/4198#issuecomment-521180922,1,['test'],['test']
Testability,The failure is not related.; ```; 11:19:57 C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_nodes.cxx(97): error C3493: 'nBinsExpected' cannot be implicitly captured because no default capture mode has been specified [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_nodes.vcxproj]; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3788#issuecomment-491235778:106,test,test,106,https://root.cern,https://github.com/root-project/root/pull/3788#issuecomment-491235778,2,['test'],['test']
Testability,"The failure is unrelated to this PR ""SysError in <TFile::TFile>: could not delete C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\snapshotandshortsyntaxforcollectionsizes.root (errno: 13) Permission denied""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8275#issuecomment-850615568:146,test,test,146,https://root.cern,https://github.com/root-project/root/pull/8275#issuecomment-850615568,1,['test'],['test']
Testability,"The failure of projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot on ROOT-ubuntu16/rtcxxmod does not appear to be related **but** it also succeed consistently with just the master, so we need to understand a bit more why it fails here before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-541813601:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-541813601,1,['test'],['test']
Testability,"The failure of the snapshot test is understood, a complementary PR will come for roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1764#issuecomment-377179819:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/1764#issuecomment-377179819,1,['test'],['test']
Testability,The failures actually mean this PR is ok. The changes introduced by this PR should have had impact on how we configure. The failing tests show that we went past this phase and fail in the testing phase which is something that we probably broke long ago. LGTM!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4750#issuecomment-573601138:132,test,tests,132,https://root.cern,https://github.com/root-project/root/pull/4750#issuecomment-573601138,2,['test'],"['testing', 'tests']"
Testability,"The failures are because I merged. The build passed several times before, and I tested locally on Linux and Mac (and Windows for some cases).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1636#issuecomment-367350707:80,test,tested,80,https://root.cern,https://github.com/root-project/root/pull/1636#issuecomment-367350707,1,['test'],['tested']
Testability,The failures are unrelated. @ellert This is ready to merge once the commit log is updated :). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5944#issuecomment-663156349:75,log,log,75,https://root.cern,https://github.com/root-project/root/pull/5944#issuecomment-663156349,1,['log'],['log']
Testability,The failures in roottest_root_io_cpp11Containers_Names are unrelated (the test needs updating to match the master). So merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2054#issuecomment-391021164:74,test,test,74,https://root.cern,https://github.com/root-project/root/pull/2054#issuecomment-391021164,1,['test'],['test']
Testability,"The failures on mac, alma9 and tests are unrelated to this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442#issuecomment-2363261667:31,test,tests,31,https://root.cern,https://github.com/root-project/root/pull/16442#issuecomment-2363261667,1,['test'],['tests']
Testability,"The feature test __cpp_lib_three_way_comparison is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525. (cherry picked from commit b85231d2ad62645f0fe7291a64284f61bb8a83c2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12803:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/12803,1,['test'],['test']
Testability,"The feature test `__cpp_lib_three_way_comparison` is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12792:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/12792,1,['test'],['test']
Testability,"The figure below gives an idea of possible improvement. For more information see [ROOT-8872](https://sft.its.cern.ch/jira/browse/ROOT-8872). ![ttree-fill-ge-timediff](https://user-images.githubusercontent.com/249404/30871641-cd327d8c-a2e7-11e7-8839-4c770ea32173.png). A couple of tests don't work after this change, so I will later break this up into several commits to make it easier to test and review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058:280,test,tests,280,https://root.cern,https://github.com/root-project/root/pull/1058,2,['test'],"['test', 'tests']"
Testability,"The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message. ```; Processing temp.h... ; In file included from input_line_8:1: ; In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; static const CLID CLID_ProtoParticle = 803; ; ^ ; input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; ^ ; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; times, additional include site here ; #include ""Event/ProtoParticle.h"" ; ^ ; ...; ...SKIPPED LINES; ...; /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; class ProtoParticle final : public KeyedObject<int> { ; ^ ; input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patche",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161120817:185,test,test,185,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161120817,1,['test'],['test']
Testability,"The filename is referred to here:; ```; tutorials/CMakeLists.txt: tutorial-hist-h1draw; tutorials/CMakeLists.txt: set(pyroot-h1draw-depends tutorial-pyroot-hsimple-py); tutorials/CMakeLists.txt: tutorial-pyroot-h1draw-py; tutorials/demos.C: bar->AddButton(""h1draw"", "".x hist/h1draw.C"", ""Drawing Options for 1D Histograms"");; tutorials/legacy/benchmarks.C: summary->AddText("" hist/h1draw.C"");; tutorials/legacy/benchmarks.C: bexec(dir,""hist/h1draw.C"");; tutorials/legacy/pyroot/benchmarks.py: 'fillrandom.py','fit1.py', 'h1draw.py', 'graph.py',; tutorials/pyroot/demo.py:bar.AddButton( 'h1draw', r'TPython::Exec( ""' + to_run.format('h1draw.py') + '"" );', 'Drawing Options for 1D Histograms' ); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8699#issuecomment-885717161:342,benchmark,benchmarks,342,https://root.cern,https://github.com/root-project/root/pull/8699#issuecomment-885717161,3,['benchmark'],['benchmarks']
Testability,"The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions.; Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8402:408,test,testing,408,https://root.cern,https://github.com/root-project/root/pull/8402,1,['test'],['testing']
Testability,The first large gap (just before 4s) seems longer in the 'after'. Do we know where the other threads are stopped (and what the running thread does) both in the before and the after. Do we know where (some of) the gaps are stopped in the main regime?. > TBufferMerger random number generation test on my machine (Core i7 6700). Is that with or without the lock removed (both test are needed to get a clear view).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343556195:292,test,test,292,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343556195,2,['test'],['test']
Testability,"The first version of these changes, in PR #1737, was tried by CMS and seems to be ok for them (see [CMS and ROOT I/O](https://indico.cern.ch/event/715802/contributions/2942558/) talk from latest I/O workshop), so we applied their suggestion for not blocking when a merge is in progress, and after local testing this is ready for merge into master after further testing here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2245:303,test,testing,303,https://root.cern,https://github.com/root-project/root/pull/2245,2,['test'],['testing']
Testability,"The fix is 'simple':; ```; diff --git a/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx; index 7fe65825ea..656396ffcd 100644; --- a/core/metacling/src/TCling.cxx; +++ b/core/metacling/src/TCling.cxx; @@ -6646,9 +6646,13 @@ void TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alia; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; - // It's a tag decl, not a namespace decl.; - cci->Init(*cci->GetType());; - TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + if (cci->GetType()) {; + // It's a tag decl, not a namespace decl.; + cci->Init(*cci->GetType());; + TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + } else {; + Error(""RefreshClassInfo"", ""Should not need to update the classInfo a non type decl: %s"", oldDef->getNameAsString().c_str());; + }; }; }; } else if (!cl->TestBit(TClass::kLoading) && !cl->fHasRootPcmInfo) {; ```; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372486833:849,Test,TestBit,849,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372486833,1,['Test'],['TestBit']
Testability,"The fix is in master. @cxwx it would be great if you could test it on your usecase, e.g. by using tomorrow's nightly builds. A backport for 6.24 is up, I'll merge if the CI is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-858516997:59,test,test,59,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-858516997,1,['test'],['test']
Testability,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1232170822:36,test,test,36,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822,2,['test'],['test']
Testability,The fixes in this PR correspond to the three following cppyy issues:. https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; https://bitbucket.org/wlav/cppyy/issues/168/boundary-check-not-implemented-for-signed. The corresponding tutorials/tests are re-enabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4590:353,test,tests,353,https://root.cern,https://github.com/root-project/root/pull/4590,1,['test'],['tests']
Testability,"The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and; has the effect that the -DNDEBUG flag is **not** attached to the; CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode?. I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560:365,assert,asserts,365,https://root.cern,https://github.com/root-project/root/pull/6560,1,['assert'],['asserts']
Testability,"The following PR introduced some changes in the TCling shutdown; logic:; https://github.com/root-project/root/pull/4675. One of these changes affects clingwrapper.cxx in Cppyy, but the; functionality it relies on (TROOT::Initialize) is not yet in the; mini-ROOT of Cppyy, which is at the moment working with ROOT 6.18,; so we cannot push the clingwrapper change to upstream Cppyy now. For that reason, until Cppyy updates its ROOT to 6.20, we need to; keep this patch to modify our copy of Cppyy to invoke; TROOT::Initialize in the constructor of ApplicationStarter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4747:65,log,logic,65,https://root.cern,https://github.com/root-project/root/pull/4747,1,['log'],['logic']
Testability,"The following code:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int main() {; ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;; opts.fMode = ""update"";; ROOT::RDataFrame(""t1"", ""f.root""); .Define(""x"", ""idx*idx""); .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");; auto *tmain = f.Get<TTree>(""t1"");; auto *tfriend = f.Get<TTree>(""t2"");; tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;; }; ```; prints. ```; idx | t2.x | x | t2.idx |; 0 | 0 | 0 | 0 |; 1 | 1 | 1 | 1 |; 2 | 4 | 4 | 2 |; 3 | 9 | 9 | 3 |; 4 | 16 | 16 | 4 |; 5 | 25 | 25 | 5 |; ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8450:1084,log,logic,1084,https://root.cern,https://github.com/root-project/root/issues/8450,1,['log'],['logic']
Testability,"The following patch makes the reproducer above compile. However, one would have to test this now with all ROOT features enabled to be sure it is enough (for ROOT)...; ```diff; --- a/interpreter/cling/include/cling/std.modulemap; +++ b/interpreter/cling/include/cling/std.modulemap; @@ -428,4 +428,16 @@ module ""std"" [system] {; export *; header ""bits/stl_tree.h""; }; + module ""bits/utility.h"" {; + export *; + header ""bits/utility.h""; + }; + module ""bits/stl_algobase.h"" {; + export *; + header ""bits/stl_algobase.h""; + }; + module ""bits/stl_pair.h"" {; + export *; + header ""bits/stl_pair.h""; + }; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113382968:83,test,test,83,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113382968,1,['test'],['test']
Testability,"The following test works on my machine with the latest ROOT master; ```cpp; #include <TFile.h>; #include <TChain.h>. #include <iostream>; #include <memory>. constexpr auto netFile = ""root://eospublic.cern.ch//eos//root-eos//h1//dstarmb.root"";. void testWithFile(); {; std::unique_ptr<TFile> f{TFile::Open(netFile)};; f->ls();; }. void testWithChain(); {; TChain c{""h42""};; c.Add(netFile);; std::cout << ""Number of entries in the chain: "" << c.GetEntries() << ""\n"";; }. void testWithChainLocalName(); {; TChain c;; std::string fullpath{netFile};; fullpath += ""?#h42"";; c.Add(fullpath.c_str());; std::cout << ""Number of entries in the chain: "" << c.GetEntries() << ""\n"";; }. int main(); {; testWithFile();; testWithChain();; testWithChainLocalName();; }; ```. With output; ```; ./repro.out; TNetXNGFile**		root://eospublic.cern.ch//eos/root-eos/h1/dstarmb.root	HBOOK file: dstarmb.hbook converted to ROOT; TNetXNGFile*		root://eospublic.cern.ch//eos/root-eos/h1/dstarmb.root	HBOOK file: dstarmb.hbook converted to ROOT; KEY: TTree	h42;1	dstar; Number of entries in the chain: 21920; Number of entries in the chain: 21920; ```. I could not have access to the same file (under LHCb EOS), but I used another public EOS file and it should be equivalent. I will try to build an older version of ROOT and see if the problem was present at the time with the same file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7159#issuecomment-1941574958:14,test,test,14,https://root.cern,https://github.com/root-project/root/issues/7159#issuecomment-1941574958,7,['test'],"['test', 'testWithChain', 'testWithChainLocalName', 'testWithFile']"
Testability,The following test:. pyunittests-dataframe-histograms. was fixed by the commit mentioned in the title.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4139:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/4139,1,['test'],['test']
Testability,"The following, very particular, combination triggers a test failure:; * Fedora 39; * C++20; * ROOT built in Release mode (-O3); * The test `dataframe-vecops`, which needs to be run via ctest and using gtest infrastructure; * The test being compiled in release mode too. The failure is:; ```; 730/2406 Test #393: gtest-tree-dataframe-test-dataframe-vecops ........................................................***Failed 5.01 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RDFAndVecOps; [ RUN ] RDFAndVecOps.ReadStdVectorAsRVec; [ OK ] RDFAndVecOps.ReadStdVectorAsRVec (4678 ms); [ RUN ] RDFAndVecOps.DefineRVec; [ OK ] RDFAndVecOps.DefineRVec (0 ms); [ RUN ] RDFAndVecOps.SnapshotRVec; [ OK ] RDFAndVecOps.SnapshotRVec (6 ms); [ RUN ] RDFAndVecOps.RVecBool; double free or corruption (out); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```. And gdb says:; ```; 0 0x00007f25d4eae834 in __pthread_kill_implementation () from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/14803,9,"['Test', 'test']","['Test', 'test', 'test-dataframe-vecops', 'tests']"
Testability,"The function TLatex::DrawLatex() only copied the Text-Attributes, but not the Line-Attributes to the newly created TLatex-Object which does not seem logical to me. Please correct me if there was a purpose for not copying the Line-Attributes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9211:149,log,logical,149,https://root.cern,https://github.com/root-project/root/pull/9211,2,"['log', 'test']","['logical', 'tested']"
Testability,"The function `EnforceInitOrder()` was using `ImplicitlyDefineFunction()` as a shortcut to define a function returning an int. Future upgrades of LLVM will add an assert in that function because it is not allowed to be used when compiling C++, which Cling obviously does.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12052:162,assert,assert,162,https://root.cern,https://github.com/root-project/root/pull/12052,1,['assert'],['assert']
Testability,"The function here seems to well behave for the analytical integral only when ```z=0,beta=0, lambda <-1 strictly```; In the current master implementation some of the logics on the parameter and sigma,lambda interplay seems to be not implemented",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7254#issuecomment-781869009:165,log,logics,165,https://root.cern,https://github.com/root-project/root/issues/7254#issuecomment-781869009,1,['log'],['logics']
Testability,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:314,test,testing,314,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,1,['test'],['testing']
Testability,The git commit log was analyzed to accurately extract the names of all people that contributed to RooFit in the 6.28 development cycle.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11969:15,log,log,15,https://root.cern,https://github.com/root-project/root/pull/11969,1,['log'],['log']
Testability,The git commit log would be enhanced by adding a hint on why the previous attempt fails.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11846#issuecomment-1340044528:15,log,log,15,https://root.cern,https://github.com/root-project/root/pull/11846#issuecomment-1340044528,1,['log'],['log']
Testability,"The git log might be a little confusing (why fix a rule that is unused anyway?) -- Maybe you meant ""Fix class name spelling in class rule [that was detected by a message indicating that the misspelt version was unused]""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5871#issuecomment-644148818:8,log,log,8,https://root.cern,https://github.com/root-project/root/pull/5871#issuecomment-644148818,1,['log'],['log']
Testability,The git log should be enhanced with the new 'procedure' for version update.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620#issuecomment-1713669639:8,log,log,8,https://root.cern,https://github.com/root-project/root/pull/13620#issuecomment-1713669639,1,['log'],['log']
Testability,The github/jenkins connection seems stuck. The logs for the build started at https://github.com/root-project/root/pull/4579#issuecomment-545959752; can be found at https://epsft-jenkins.cern.ch/job/root-pullrequests-handler/11206/console,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4579#issuecomment-545962657:47,log,logs,47,https://root.cern,https://github.com/root-project/root/pull/4579#issuecomment-545962657,1,['log'],['logs']
Testability,"The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it.; ; Kudos Arpitha Raghunandan (@arpi-r)!. We still need some performance measurements but the preliminary results are promising. Performance; ===. Methodology; ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:; 1) root master without modules (modulesoff); 2) root master with modules (moduleson); 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation; ---; A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016:1528,test,test,1528,https://root.cern,https://github.com/root-project/root/pull/4016,1,['test'],['test']
Testability,The gtest can safely go on in case this test case fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2230:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/2230,1,['test'],['test']
Testability,"The guard R__USE_IMT was wrongly put around the class declaration, hence; none of the tests inside RDatasetSpecTest would compile if R__USE_IMT is; not defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10962:86,test,tests,86,https://root.cern,https://github.com/root-project/root/pull/10962,1,['test'],['tests']
Testability,The header file is not needed and causes some failure on some architecture when compiling DNN GPU tests. Fix also a warning in a test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4704:98,test,tests,98,https://root.cern,https://github.com/root-project/root/pull/4704,2,['test'],"['test', 'tests']"
Testability,"The histogram bin iterator should start at 1 and end at N + 1, not; start at 0 and end at N. (As for all iterators, the end element is the; invalid element after the last one.). Fixes an assertion in the histhistv7testUnit test. [----------] 2 tests from BinIterNBins; [ RUN ] BinIterNBins.NumBins; /usr/include/c++/10/bits/stl_vector.h:1045: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = float; _Alloc = std::allocator<float>; std::vector<_Tp, _Alloc>::reference = float&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5958:187,assert,assertion,187,https://root.cern,https://github.com/root-project/root/pull/5958,4,"['Assert', 'assert', 'test']","['Assertion', 'assertion', 'test', 'tests']"
Testability,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:; ```diff; diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; index 403b88ac3a..5e1581f098 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; @@ -131,7 +131,8 @@ protected:; ; unsigned : NumStmtBits;; ; - unsigned NumStmts : 32 - NumStmtBits;; + unsigned WasReplaced : 1;; + unsigned NumStmts : 32 - (NumStmtBits + 1);; ; /// The location of the opening ""{"".; SourceLocation LBraceLoc;; @@ -1328,6 +1329,7 @@ public:; explicit CompoundStmt(SourceLocation Loc); : Stmt(CompoundStmtClass), RBraceLoc(Loc) {; CompoundStmtBits.NumStmts = 0;; + CompoundStmtBits.WasReplaced = 0;; CompoundStmtBits.LBraceLoc = Loc;; }; ; diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; index 0a4d403106..cc8c6888b8 100644; --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,; SourceLocation RB); : Stmt(CompoundStmtClass), RBraceLoc(RB) {; CompoundStmtBits.NumStmts = Stmts.size();; + CompoundStmtBits.WasReplaced = 0;; setStmts(Stmts);; CompoundStmtBits.LBraceLoc = LB;; }; @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-797417462:391,test,test,391,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-797417462,4,['test'],"['test', 'test-CladDerivatorTests', 'test-TFormulaGradientTests', 'tests']"
Testability,"The idea is to catch branch names, which will lead to problems when using the tree with `Draw` or `MakeClass`.; This can either be the member variables (branch names and `b_`branch names) which have to keep the generated code compilable (and ensure it does what it is expected to do). And the variable names should not lead to confusion with formula evaluation in Draw (e.g. branch names which are pure numbers). The tests suggested here are:; - test if branch name is a valid c++ variable name (w/o testing keywords).; - test if branch name begins with ""b_"" (potential problem with MakeClass). on top of that, I also have a [black list](https://github.com/pseyfert/tmva-branch-adder/blob/master/src/blacklist.cpp) of unfortunate branch names: methods of TTrees, which would clash in MakeClass, c++ keywords, variable types, and things TTree::Draw can parse (though I don't see how `TTree::Draw(""cos(x)"")` would clash with `TTree::Draw(""cos"")` if there is a variable named `cos`. Because the function `cos` wouldn't work without argument, and the variable `cos` wouldn't work with argument). I only warn here and don't abort the branch initialisation, not to break third party code (variables with `.` are probably common [e.g. dynamically generated from float](http://lhcb-release-area.web.cern.ch/LHCb-release-area/DOC/davinci/latest_doxygen/d9/d80/_tuple_tool_cone_isolation_8cpp_source.html#l00204) ). Feedback request:; I'm unsure if putting the blacklist into TBranch.cxx is really the best solution to apply here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/185:417,test,tests,417,https://root.cern,https://github.com/root-project/root/pull/185,4,['test'],"['test', 'testing', 'tests']"
Testability,The idea of making the tutorials fail more gracefully than tests sounds good to me. Messages should be more user friendly (@Axel-Naumann already provided a good suggestion for this one). Also agree with the `exit(1)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616495870:59,test,tests,59,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616495870,1,['test'],['tests']
Testability,"The idea of the RooGenProdProj is that we divide two integral objects; each created with this makeIntgral() function to get the normalized; integral of a product. Therefore, we don't need to normalize the; numerater and denominator integrals themselves. Doing the normalization; would be expensive and it would cancel out anyway. However, if we don't; specify an explicit normalization integral in createIntegral(), the; last-used normalization set might be used to normalize the pdf,; resulting in redundant computations. For this reason, the normalization set of the integrated pdfs is fixed; to an empty set in this case. Note that in RooFit, a nullptr; normalization set and an empty normalization set is not equivalent. The; former implies taking the last-used normalization set, and the latter; means explicitly no normalization. This fixes the performance regression reported in https://github.com/root-project/root/issues/11814, and a new unit; test is implemented to make sure no new numeric integrals pop up in the; reproducer code to that issue. Unfortunately, this change means that there will be again warnings about; missing `RooAddPdf` normalization sets, but this is not a regression; because these warnings only got fixed in the 6.28 development cycle in; https://github.com/root-project/root/commit/290b478710a90351bd7b15130a7a81e01b461940. This PR also includes some other minor improvements explained in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12010:953,test,test,953,https://root.cern,https://github.com/root-project/root/pull/12010,1,['test'],['test']
Testability,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-865043312:377,test,testing,377,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-865043312,2,['test'],"['testing', 'tests']"
Testability,"The image produced looks a little weird and I don't know how to fix that. I could separate the plots on to 7 TCanvases but idk if that's efficient. I am also unsure if the Doxygen is ok, I couldn't find a way to test it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8613#issuecomment-874298475:212,test,test,212,https://root.cern,https://github.com/root-project/root/pull/8613#issuecomment-874298475,1,['test'],['test']
Testability,"The implementations of the virtual `RooAbsL::getParameters()` either returned an owning of a non-owning pointer, depending on the implementation class. RooSubsidiaryL returned a non-owning pointer, and the default implementation an owning pointer. The caller code of course doesn't know what to do with this, resulting in memory leaks. To fix this problem, the interface is suggested to return `std::unique_ptr<RooArgSet>`. Changing this interface now is okay because it has not been adopted by the users yet (it's from the new test statistic classes introduced in ROOT 6.26).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12595:528,test,test,528,https://root.cern,https://github.com/root-project/root/pull/12595,1,['test'],['test']
Testability,"The important commit is [[DF] Make dataset group an optional data member of RSampleInfo](https://github.com/root-project/root/commit/ad6ecd8227786f363f48be207d45b0f86d6357e5): it short-circuits some logic so that we don't construct a RDatasetGroup object if we don't have to, and we copy pointers to RDatasetGroups instead of RDatasetGroup objects. It also introduces a change in behavior: RDF now throws if a user asks for information about the dataset group but there is no group available. Before that commit it would return some arbitrary value for each of the properties (e.g. empty string, 0, ...). This should fix the performance regression seen in some Grafana benchmarks on the evening of the 15th of December.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12174:199,log,logic,199,https://root.cern,https://github.com/root-project/root/pull/12174,2,"['benchmark', 'log']","['benchmarks', 'logic']"
Testability,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:610,test,test,610,https://root.cern,https://github.com/root-project/root/issues/12761,2,['test'],['test']
Testability,"The incremental, for example: https://epsft-jenkins.cern.ch/job/root-incremental-master/LABEL=ROOT-performance-centos7-multicore,SPEC=default/8204/console; fails with:; ```; CMake Error at interpreter/cling/CMakeLists.txt:178 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; See also ""/data/sftnight/wsincrmaster/LABEL/ROOT-performance-centos7-multicore/SPEC/default/build/CMakeFiles/CMakeOutput.log"".; See also ""/data/sftnight/wsincrmaster/LABEL/ROOT-performance-centos7-multicore/SPEC/default/build/CMakeFiles/CMakeError.log"".; gmake: *** [cmake_check_build_system] Error 1; Command exited with the value: 2; ```; What is the best solution?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4618#issuecomment-551202916:495,log,log,495,https://root.cern,https://github.com/root-project/root/pull/4618#issuecomment-551202916,2,['log'],['log']
Testability,"The inner logic is the same as TEntryList::Enter(entry, treepointer); but we assume that `entry` is always a local entry, corresponding to; the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10186:10,log,logic,10,https://root.cern,https://github.com/root-project/root/pull/10186,1,['log'],['logic']
Testability,"The input attribute was not used in the correct way, but in the inverse mode.; This is not a problem when just transposing two axes, but it is not correct for >=3 axes. Update also the generated code by using contigous writes that shoould be faster and add more documentation. Add also a new utility function to compute strides from shape of a vector. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10348:417,test,tested,417,https://root.cern,https://github.com/root-project/root/pull/10348,1,['test'],['tested']
Testability,The intent of this code seemed to be avoiding a CINT issue. Now cling can handle such constructs. This fixes an issue with runtime_cxxmodules on OSX sdk where even when NDEBUG is defined the assert still checks the identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5336:191,assert,assert,191,https://root.cern,https://github.com/root-project/root/pull/5336,1,['assert'],['assert']
Testability,"The issue happens in this [function](https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1507), when trying to get the return type normalized name of the `helper_function` function in the reproducer above. This is a C++ reproducer of the problem:; ```C++; #include <utility>. template <typename T>; class MySofieFunctorHelper {; };. auto helper_function() -> MySofieFunctorHelper<std::make_index_sequence<1>>; {; return MySofieFunctorHelper<std::make_index_sequence<1>>();; }. void sofie_repro(); {; auto f = gROOT->GetGlobalFunction(""helper_function"");; auto ret_type = f->GetReturnTypeName();; cout << ret_type << endl; // prints MySofieFunctorHelper<make_index_sequence<1> > ; auto ret_type_norm = f->GetReturnTypeNormalizedName(); // breaks; }; ```; When calling `GetReturnTypeNormalizedName()` on the `TFunction` object of `helper_function`, an assertion error shows up. E.g. from lxplus:; ```; [etejedor@lxplus768 ~]$ source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-dbg/setup.sh ; [etejedor@lxplus768 ~]$ root -q sofie_repro.C ; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2022, 03:01:00 |; | From heads/master@v6-25-02-1592-ge9fa243 |; | With g++ (GCC) 11.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing sofie_repro.C...; MySofieFunctorHelper<make_index_sequence<1> >; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed.; ```. I think we need @Axel-Naumann .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684#issuecomment-1168652229:918,assert,assertion,918,https://root.cern,https://github.com/root-project/root/issues/10684#issuecomment-1168652229,2,"['Assert', 'assert']","['Assertion', 'assertion']"
Testability,"The issue is that with changing the logic of `IsContainer` excluding `std::string`, the `FillHelper` of `RDataFrame::Histo1D` does not support `std::string` anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-589680166:36,log,logic,36,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-589680166,1,['log'],['logic']
Testability,"The issue needs to be looked at from the C++ and PyROOT perspective with a programming model in mind. But let me start from the technical answers, which are easier:; 1) The memory taken by the ""entry number custom column"" is one 64 bit integer per slot, so negligible; 2) Correct: Both slot and entry number are available at the TDF level, the difficulty is to percolate them in the actual function in the define/filter. Focussing only on C++, one could think about a ""TDF::EntryNumber"" type. We could detect it if used as first argument of the function passed and pass the entry. Such type will be transparently convertible to a 64-bits integer. As a side note, also the slot could be treated similarly. The issue will be in PyROOT, with filters and defines expressed as strings which are then jitted: these types make sense only if present in the signature of the function. If we go for the custom column solution, we know exactly what to do, we tested heavily all the components involved but we have to choose a name: ""__TDF_iEntry"", ""__Entry"", ""__iEntry"" .; Certainly starting with a ""__slot"" and ""__entry"" could be very attractive since it will provide ; a. The slot and the entry if needed; b. The steps needed for the implementation are already well understood; c. There is very little overhead - custom columns' lambdas are invoked only if the column is actually used; d. Would seamlessly work in PyROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1133#issuecomment-334451301:948,test,tested,948,https://root.cern,https://github.com/root-project/root/pull/1133#issuecomment-334451301,1,['test'],['tested']
Testability,"The issue title and description are slightly wrong, the issue comes from long strings in the file, and one example is `TFile` writing the full path when creating the file. But it's not limited to that, you can easily reproduce the issue with the test I added in `tree/ntuple/v7/test/ntuple_minifile.cxx` by just appending one single character to `LongString` (which will be used as the title because that was easier to test)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14460#issuecomment-1914601852:246,test,test,246,https://root.cern,https://github.com/root-project/root/issues/14460#issuecomment-1914601852,3,['test'],['test']
Testability,The jenkins failed because the description of the PR includes a full output of the failing test and confuses the parsing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401#issuecomment-287568787:91,test,test,91,https://root.cern,https://github.com/root-project/root/pull/401#issuecomment-287568787,1,['test'],['test']
Testability,"The jenkins logs are gone, but the test failure is due to certain RDF warnings being printed out that were not printed before. I'll have to investigate why (and whether the correct behavior is warning or no warning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11232#issuecomment-1245087471:12,log,logs,12,https://root.cern,https://github.com/root-project/root/pull/11232#issuecomment-1245087471,2,"['log', 'test']","['logs', 'test']"
Testability,"The jupyter notebook test fails because of:; ```; [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'.; ```; This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:; ```; JUPYTER_ALLOW_INSECURE_WRITES=true; ```; at the price of seeing this message:; ```; WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'.; ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:; ```; 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2292474568:21,test,test,21,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2292474568,2,['test'],['test']
Testability,"The last chunk of partial results of MapReduce with std::vectors had the; size of all other chunks. This is dangerous, since the default vector; values might cause unexpected results of the Reduce function. Test added to verify the correctness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10427:207,Test,Test,207,https://root.cern,https://github.com/root-project/root/pull/10427,1,['Test'],['Test']
Testability,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15583:60,test,tests,60,https://root.cern,https://github.com/root-project/root/pull/15583,4,['test'],['tests']
Testability,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11394:49,test,test,49,https://root.cern,https://github.com/root-project/root/pull/11394,1,['test'],['test']
Testability,The last commits include the whole test suite.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7080#issuecomment-765426381:35,test,test,35,https://root.cern,https://github.com/root-project/root/pull/7080#issuecomment-765426381,1,['test'],['test']
Testability,The last push was only tested on mac11 and mac12; mac1015 seems completely broken with 300+ test failures...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11424#issuecomment-1274154636:23,test,tested,23,https://root.cern,https://github.com/root-project/root/pull/11424#issuecomment-1274154636,2,['test'],"['test', 'tested']"
Testability,"The last test failures are different to the ones this PR wanted to solve. They are related to not finding ipython, similar to what was observed in the 32 bit machine:. `sh: ipython3: command not found`. So it has nothing to do with the changes of this PR. I am therefore merging to fix the first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5478#issuecomment-620720704:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/5478#issuecomment-620720704,1,['test'],['test']
Testability,"The last three commits are for Cling's CUDA support. It still doesn't fully work on my machine, but the errors are the same as `master` with LLVM 9 (complains about not finding symbols from `libcudart.so` even though that has been loaded; could be related to the CUDA version?) *without* assertions that I see tripping on `master`. Do we know which setup used to work for these tests? Maybe I'll have to install older versions of CUDA...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1092999970:288,assert,assertions,288,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1092999970,2,"['assert', 'test']","['assertions', 'tests']"
Testability,The last two items on my to-do list have been addressed. Branch has been rebased on master to avoid failing on newly added tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/636#issuecomment-309491951:123,test,tests,123,https://root.cern,https://github.com/root-project/root/pull/636#issuecomment-309491951,1,['test'],['tests']
Testability,"The latest commit fixes the PYSPARK_PYTHON issue by setting the environment variable in the ctest invocation, tutorial is green on mac11 (the only label that runs tutorial by default and has pyspark installed at the same time) https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112683/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf001_spark_connection_py/ . I just noticed I need to change this line and this is good to go. ```suggestion; - h_poisson = df_1.Histo1D((""poisson"", ""Exponential distribution"", 50, 0, 30), ""poisson""); + h_poisson = df_1.Histo1D((""exponential"", ""Exponential distribution"", 50, 0, 30), ""exponential""); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7698#issuecomment-810830992:307,test,testReport,307,https://root.cern,https://github.com/root-project/root/pull/7698#issuecomment-810830992,1,['test'],['testReport']
Testability,"The latest commit seems to fix the behaviour across all tests: TTree, TChain, TTreeReader, RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365#issuecomment-618455318:56,test,tests,56,https://root.cern,https://github.com/root-project/root/pull/5365#issuecomment-618455318,1,['test'],['tests']
Testability,The latest commit should also fix snapshot-ing of arrays for which the title is not equal to the leaflist.; A test for this case will be added soon by @dpiparo .; I think we can merge this PR when that test is in and passes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1532#issuecomment-359386508:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/1532#issuecomment-359386508,2,['test'],['test']
Testability,"The latest force push just now implements some of the points we discussed. One thing I omitted is the change of the `evalData` parameter from a `unique_ptr` to a reference. We discussed that a pointer means that the object may be changed and this is indeed what can happen. The function, in fact, initializes the pointer if it is null. I don't know if this was intended or maybe it should be changed, but it was already like this, so I'm hesitant to change it. Remaining todos:; - [x] Add doxygen for the `GlobalObservables` etc parameters.; - [x] Fix CI issues.; - [ ] Follow @guitargeek's coming comment about how to fix the `RooFormulaVar` bug in testRooRealL.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915348183:650,test,testRooRealL,650,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915348183,1,['test'],['testRooRealL']
Testability,"The latest force push should fix build configuration on Windows, which was the only remaining failing build. The cause seems to have been the extra `m` in `LIBRARIES` in the `ROOT_ADD_GTEST` statement for `testLikelihoodSerial`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-916220665:206,test,testLikelihoodSerial,206,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-916220665,1,['test'],['testLikelihoodSerial']
Testability,"The latest linked PR attempts to fix the second part of this issue. A new test is added to check that the unknown arguments are kept and accessible. As for test 3 described above, I'm not sure how to implement it (i.e. how to call `app.Run` and then stop the application programmatically without user input).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1066552773:74,test,test,74,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1066552773,2,['test'],['test']
Testability,"The latest update of the commit removes the need for the extra swap of the internal RDF dataset with an empty one, improving on the first design. On my machine I can see the worker properly freeing up memory at the end of the execution of the analysis. It is still not ready for merging but we should now begin testing on SWAN+HTCondor to confirm the preliminary tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2250232441:311,test,testing,311,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2250232441,2,['test'],"['testing', 'tests']"
Testability,"The lgtm alert is for truncating division in case of integer arguments, which is only relevant for Python 2. This is ready for final review. Maybe some comments that might help explain better the logic here and there? With final approval I will also add a commit message",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10098#issuecomment-1082246724:196,log,logic,196,https://root.cern,https://github.com/root-project/root/pull/10098#issuecomment-1082246724,1,['log'],['logic']
Testability,The link has the solution/work around doing:; ```; CTest starts the test processes via timeout -sSIGSEGV 55s {TEST_COMMAND}); ```; which may also actually work.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15144#issuecomment-2040360135:68,test,test,68,https://root.cern,https://github.com/root-project/root/issues/15144#issuecomment-2040360135,1,['test'],['test']
Testability,"The list of cleanups should be thread-safe now (and if it's not, we want to know!). I executed the test and the tutorial in a loop for a while (on a machine with 8 logical cores) and could not see any crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6885:99,test,test,99,https://root.cern,https://github.com/root-project/root/pull/6885,2,"['log', 'test']","['logical', 'test']"
Testability,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287:158,log,logic,158,https://root.cern,https://github.com/root-project/root/pull/14287,1,['log'],['logic']
Testability,The log of the failing stressMathCore test on Fedora 26 i686 says:; ```; XYZVector operations 		..............; RhoEtaPhiVector operations ; Discrepancy in RhoEtaPhiVector operations() :; 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13); 		............ FAILED ; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-265111395:4,log,log,4,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-265111395,2,"['log', 'test']","['log', 'test']"
Testability,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7198:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/7198,2,['log'],['logic']
Testability,"The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList; for RooAbsData objects, as the namePtr mechanism allows to track; renaming and therefore avoids false negatives that result in; linear scans of the collection. In turn, this improves significantly the run-time of large workspace; imports (x2 to x4), which were dominated by embeddedData() calls.; This patch is based on the JSON tool use-case, but presumably will; significantly also improve other heavy uses of workspace import, such; as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low; price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9684:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/9684,1,['log'],['logic']
Testability,"The logic here was plain wrong, calling Count() should not modify the state of RInterface. One could probably craft an example in which this std::move leads to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5346:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/5346,1,['log'],['logic']
Testability,"The logic here was plain wrong, calling Count() should not modify; the state of RInterface. It only happened to work because RActionBase's; constructor forgot to actually move-construct its data member (also; fixed). This is a corrected version of #5346",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5347:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/5347,1,['log'],['logic']
Testability,"The logic in `RNTupleDS::PrepareNextRanges` and `RNTupleDS::GetRanges` had to be changed a bit to accommodate the new case, I think it could be streamlined but I didn't want to change too many things in the same PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15152:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/15152,1,['log'],['logic']
Testability,"The logic in `TDecompLU` where a separate `bool` was tracking if a given; pointer should be ""deleted"" caused some compiler errors warnings like:. ```; root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:; root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]; 883 | delete [] pWorkd;; | ^~~~~~; root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here; 847 | Double_t workd[kWorkMax];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10582:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/10582,1,['log'],['logic']
Testability,"The logic of `SnapshotImpl` has been refactored to move the single-thread initialization and execution inside the `SnapshotHelper` class, and the multi-thread in `SnapshotHelperMT`. This code simplification also puts `Snapshot` in line with other actions, moving most of the logic inside `TDFActionHelpers.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/692:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/692,2,['log'],['logic']
Testability,"The logic that determined the offset hiding of not was coded inside the `RooNLLVarNew` evaluation function so far. This caused trouble, because a change in the global `RooAbsReal::hideOffset()` state did not mark the NLL as dirty. Therefore, it was unpredictable if the offset was actually hidden or not. This commit suggests an improved logic:. * Reducer nodes like the NLL always register a value and an offset to the `EvalContext`. * The evaluator decides whether to subtract the offset or not. * A change in `hideOffset()` makes the evaluator wrapper set all reducer nodes to dirty. A new unit test to cover this was also implemented. FYI, @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15081:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/15081,3,"['log', 'test']","['logic', 'test']"
Testability,The logic to Paint fit parameters for TGraph was not following the; one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7854:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/7854,1,['log'],['logic']
Testability,"The logic to create the constraint sum for a given pdf is moved to the; `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also; allows for easy creation of the constraint sum outside of; `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the; constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8526:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/8526,1,['log'],['logic']
Testability,"The logic to get the typename of a TTree leaf/branch is now factored; out into its own function, has been streamlined, and support for; leafnames with multiple dots (""b1.b2.leaf"") has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1780:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/1780,1,['log'],['logic']
Testability,"The logic was such that the function overload that could see the issue; was SFINAE'd out precisely every time the pointer was null, so; we never saw a crash but still had UB there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1688:4,log,logic,4,https://root.cern,https://github.com/root-project/root/pull/1688,1,['log'],['logic']
Testability,The logo size in the footer was wrong.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12885:4,log,logo,4,https://root.cern,https://github.com/root-project/root/pull/12885,1,['log'],['logo']
Testability,The logs are reporting:. > fatal error: vdt/vdtMath.h: No such file or directory. That doesn't sound like this PR...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1946#issuecomment-385921030:4,log,logs,4,https://root.cern,https://github.com/root-project/root/pull/1946#issuecomment-385921030,1,['log'],['logs']
Testability,"The long tests requested by @lmoneta finished now. There are indeed some test failures on `ROOT-debian10-i386/default` that seem related to this PR, which I will investigate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11435#issuecomment-1259344577:9,test,tests,9,https://root.cern,https://github.com/root-project/root/pull/11435#issuecomment-1259344577,2,['test'],"['test', 'tests']"
Testability,"The machinery is a bit weird, because the github-actions comment is produced by the https://github.com/root-project/root/blob/master/.github/workflows/test-result-comment.yml action, but only if the portion of the `root-ci` action that produces the event file is actually run https://github.com/root-project/root/blob/e42d3d71483e80efecc4a045a96ae64a2ad5ff96/.github/workflows/root-ci.yml#L484 . I now need to convince `test-result-comment.yml` not to run at all if the related PR was labeled with the tag",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14613#issuecomment-1932026253:151,test,test-result-comment,151,https://root.cern,https://github.com/root-project/root/pull/14613#issuecomment-1932026253,2,['test'],['test-result-comment']
Testability,"The macos failure are unrelated and 'seem' to be due to an environment setup problem.; The error is not finding the davix library:; ```; +Error in <TInterpreter::TCling::AutoLoad>: failure loading library libRDAVIX.so for TDavixFile; +cling::DynamicLibraryManager::loadLibrary(): dlopen(/Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so, 9): Library not loaded: libdavix.0.dylib; + Referenced from: /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so; + Reason: image not found; ```; and loading on the machine running 'setup.sh' and thisroot.sh lead to inconsistent results; ```; cd /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/roottest/root/io/webfile; root.exe -b -l -q runCloseTWebFile.C; Processing runCloseTWebFile.C...; ```; succeeds whereas the jenkins builds failed this test.; Loading the library explicit also works:; ```; macitois19:build sftnight$ root.exe -b -l ; gSroot [0] gSystem->Load(""libRDAVIX.so""); (int) 0; ```; but running rootls fails; ```; macitois19:build sftnight$ /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/bin/rootls -1 http://root.cern.ch/files/pippa.root; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so, 9): Library not loaded: libdavix.0.dylib; Referenced from: /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so; Reason: image not found; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libRDAVIX.so for TDavixFile; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so, 9): Library not loaded: libdavix.0.dylib; Referenced from: /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/lib/libRDAVIX.so; Reason: image not found; WARNING: File http://root.cern.ch/files/pippa.root does not exist; ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1517#issuecomment-358462709:850,test,test,850,https://root.cern,https://github.com/root-project/root/pull/1517#issuecomment-358462709,1,['test'],['test']
Testability,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6223:547,log,logic,547,https://root.cern,https://github.com/root-project/root/pull/6223,1,['log'],['logic']
Testability,"The main motivation concerning speedup is that currently, the documentation takes between 5 and 7 hours to build, which makes it hard to debug and improve. The 'slow part' happens in 'filter.cxx' (which does some parsing that slows down doxygen), as well as when the tutorials are run. That being said, I did not benchmark if pre-compiling makes things considerably faster, so maybe this PR is not worth it, I agree...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10195#issuecomment-1075133935:313,benchmark,benchmark,313,https://root.cern,https://github.com/root-project/root/pull/10195#issuecomment-1075133935,1,['benchmark'],['benchmark']
Testability,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930:193,test,test,193,https://root.cern,https://github.com/root-project/root/pull/15930,1,['test'],['test']
Testability,"The marker size in Quartz was using fixed value 1, ignoring that the size must be scaled for retina displays. # This Pull request:; Propagates the scaled marker size to the CGContextFillRect method in charge of the actual drawing. ## Changes or fixes:; Fixes (among others) the wrong ray-tracing output mentioned in #12035. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12055:345,test,tested,345,https://root.cern,https://github.com/root-project/root/pull/12055,1,['test'],['tested']
Testability,"The marker styles 3, 5 and 31 were draw different depending on whether they were drawn by a class based on TVirtualX or based on TVirtualPS as it can be seen in this picture:; ![temp](https://user-images.githubusercontent.com/5320187/72254803-64142680-3605-11ea-8255-40dd13038c80.jpg); Furthermore, the marker styles 9-19 were treated differently (In TVirtualX classes they were treated like marker style 1 and in TVirtualPS classes they were treated like marker style 20). This patch changes the drawing of TVirtualPS based classes to the drawing of TVirtualX based classes like for example TGX11. The updated classes are TPDF, TPostscript, TImageDump and TSVG. Since this slightly changes the corresponding file output, some reference values for testing had to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4762:748,test,testing,748,https://root.cern,https://github.com/root-project/root/pull/4762,1,['test'],['testing']
Testability,"The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. ; ```; void testMemPool() {. RooRealVar x(""x"",""x"",0,10);; RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {; if (i % 100000 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;; }; auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7933:159,test,testMemPool,159,https://root.cern,https://github.com/root-project/root/issues/7933,1,['test'],['testMemPool']
Testability,"The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16067:52,test,test,52,https://root.cern,https://github.com/root-project/root/pull/16067,2,"['log', 'test']","['logging', 'test']"
Testability,"The minimizer test quite often did not converge. As a result there were; many spurious test failures. The test is tuned to converge _much_ more reliably by increasing the; learning rate (0.0001 -> 0.001), and the number of early stopping epochs; (5 -> 50). This commit also makes the `testMinimization` test the minimizer; _without_ using momentum (this code path was previously untested here). The following code was used to benchmark changes (only single precision; part of the test was tested and some aux text was commented out if you; want to reproduce):; ```; for i in `seq 100`; do tmva/tmva/test/DNN/testMinimizationCpu; done | awk '{print $6;}' | python -c 'import numpy; import fileinput; a = map(float, fileinput.input()); print(numpy.std(a), numpy.mean(a), numpy.min(a), numpy.max(a))'; ```. Results (typical values):; - Old version: 2.70*10^{-7} (std dev), 3.34*10^5 (mean), 2.27*10^{-6} (min), 0.0017 (max); - New verstion: 2.59 * 10^{-6} (std dev), 2.51*10*{-6} (mean), 1.16*10*{-7} (min), 1.37*10^{-5} (max). Time taken is roughly doubled (~1 sec -> ~2 secs). All results on local mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/1958,10,"['benchmark', 'test']","['benchmark', 'test', 'testMinimization', 'testMinimizationCpu', 'tested']"
Testability,The most common way to deal with columns containing collections in an; RDataFrame execution is through RVec. The changes in this commit allow; reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec; RField subclass is implemented with this aim. UPDATE:; Tests are present for:; 1. `std::array`; 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness; 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13040:272,Test,Tests,272,https://root.cern,https://github.com/root-project/root/pull/13040,1,['Test'],['Tests']
Testability,The multicore test failure is unrelated (and fixed by https://github.com/root-project/roottest/pull/535),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5780#issuecomment-638990942:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/5780#issuecomment-638990942,1,['test'],['test']
Testability,"The name of the most up-to-date `sonnet` packge is actually `dm-sonnet`:. https://github.com/google-deepmind/sonnet. The old `sonnet` can't be used, because it maximally supports Python 3.8. With ROOT, we want to support all Python versions starting from 3.8. Follows up on 7d83c00605c4. I tested locally that the GNN tests work in the updated Python environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15605:290,test,tested,290,https://root.cern,https://github.com/root-project/root/pull/15605,2,['test'],"['tested', 'tests']"
Testability,"The new BatchMode is adjusted such that the `testGlobalObservables` unit; test is passing when always using the BatchMode for fitting. This also; means the following adjustments had to be made:. 1. Implement resetting of data for the RooFitDriver. 2. Always clone the created constraint term, also in the new; BatchMode, because the new BatchMode mutates the computation graph; and it's not good if the original model is changed. 3. Implement the correct treatment of taking global observables from; the dataset in the BatchMode. This PR also includes a commit with some code modernization of the `RooAbsPdf`, and it also removes the low-level unit test for the RooFitDriver, which is not needed anymore now that the RooFitDriver is tested extensively by every unit tests that makes use of the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11416:45,test,testGlobalObservables,45,https://root.cern,https://github.com/root-project/root/pull/11416,5,['test'],"['test', 'testGlobalObservables', 'tested', 'tests']"
Testability,The new CI is able to trigger this kind of error in distrdf tests; ```; Error in <TROOT::WriteTObject>: The current directory (PyROOT) is not associated with a file. The object (x) has not been written.; ```. Which (hopefully) stems from the fact we open the file in the RDF constructor without a `TDirectory::TContext` to save the state of the previous directory. I'll update the code to use TContext. The real problem is that Jenkins is unable to trigger this error....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1658478151:60,test,tests,60,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1658478151,1,['test'],['tests']
Testability,"The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:; 1) Replace gROOTMutex by a TRWMutexImp; 2) Add R__READLOCKGUARD; 3) Add a TListWithRWLock and THashListWithRWLock; 4) Use those in TROOT; 5) Remove current external locks for those ROOT lists (in particular the ListOfFiles); 6) Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock.; 7) Introduce scalability test on RecursiveRemove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/676:566,test,test,566,https://root.cern,https://github.com/root-project/root/pull/676,1,['test'],['test']
Testability,The new jitted filter logic mistakingly skipped validity checks over; the filter lambda and TDataSource column Define-ition. This should fix the crashes in tutorial `tdf014_CSVDataSource`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1858:22,log,logic,22,https://root.cern,https://github.com/root-project/root/pull/1858,1,['log'],['logic']
Testability,"The new logic checks if we are in the IPython shell only via the; `builtins` module, thus eliminating the second condition check,; given that IPython can also be in `sys.modules` if it is imported; from the regular Python shell before importing ROOT. Also, using the builtins module in Py3 should be done via; ""import builtins"" instead of `__builtins__`, since as explained here:. https://docs.python.org/3/library/builtins.html#module-builtins. `__builtins__` can be either the `builtins` module or its `__dict__`,; and in the latter case it does not have `'__IPYTHON__'` as attribute,; which causes the condition check for IPython to fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4857:8,log,logic,8,https://root.cern,https://github.com/root-project/root/pull/4857,1,['log'],['logic']
Testability,"The new logic was added in the wrong place, as Philippe mentioned at https://github.com/root-project/root/pull/10656#discussion_r883014238. It should not be under `if (!fname1)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10656#issuecomment-1140811649:8,log,logic,8,https://root.cern,https://github.com/root-project/root/pull/10656#issuecomment-1140811649,1,['log'],['logic']
Testability,"The new multiprocessing test statistics were designed to be bit-by-bit compatible with the old test statistics, not the new CPU evaluation backend. Therefore, the old NLL evaluation backend has to be used for the offsetting tests (the new CPU backend is not bit-by-bit compatible with the legacy backend). This is a followup to commit 65b15d333c, which didn't apply this change to all relevant tests. Doing `EXPECT_EQ` on floats is quite fragile...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14755:24,test,test,24,https://root.cern,https://github.com/root-project/root/pull/14755,4,['test'],"['test', 'tests']"
Testability,The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5252:69,test,test,69,https://root.cern,https://github.com/root-project/root/pull/5252,1,['test'],['test']
Testability,"The new test also seems to fail on mac14arm in the new CI, can you please have a look asap? @guitargeek @lmoneta (*edit:* fix proposed in https://github.com/root-project/root/pull/14291)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6908#issuecomment-1864113450:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/6908#issuecomment-1864113450,1,['test'],['test']
Testability,"The new test statistic tests with the BatchMode were disabled for quite; some time, because they didn't support the new BatchMode with the; RooFitDriver yet. Initial support for the BatchMode in `RooUnbinnedL` is added in this; commit, such that the tests are passing again and can be enabled. To make the propagation of the batch mode option to `RooUnbinnedL` easier, the `buildLikelihood` function was refactored to use the C++ builder pattern. With this, it gets easier to manage a growing set of likelihood creation options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12835:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/12835,3,['test'],"['test', 'tests']"
Testability,"The newest ROOT version in LCG dev3 nightlies crashes in a situation where the earlier versions (<6.27) printed this message:; ```; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState: ; Missing FileEntry for TestClassPrimitives.h ; requested to autoload type TestClassPrimitives ; ```; Now I see this stack trace instead:. ```; #0 0x00007fffebc82b61 in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState(clang::Decl*, std::pair<llvm::StringRef, llvm::StringRef>)::{lambda(llvm::StringRef, bool)#1}::operator()(llvm::StringRef, bool) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #1 0x00007fffebc835ac in cling::AutoLoadingVisitor::VisitDecl(clang::Decl*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #2 0x00007fffebc970c9 in clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseCXXRecordDecl(clang::CXXRecordDecl*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #3 0x00007fffebc8274a in cling::AutoloadCallback::TransactionCommitted(cling::Transaction const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #4 0x00007fffebc64088 in cling::MultiplexInterpreterCallbacks::TransactionCommitted(cling::Transaction const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #5 0x00007fffebce26f7 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #6 0x00007fffebce5429 in cling::IncrementalP",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11933:220,Test,TestClassPrimitives,220,https://root.cern,https://github.com/root-project/root/issues/11933,2,['Test'],['TestClassPrimitives']
Testability,The newly added `std::set` test exposed a new issue: `std::set` is not working in windows PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14669#issuecomment-1943317846:27,test,test,27,https://root.cern,https://github.com/root-project/root/pull/14669#issuecomment-1943317846,1,['test'],['test']
Testability,"The newly integrated cross validation has suffered two seemingly random failures. Reported [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15871/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/) and [here](https://epsft-jenkins.cern.ch/job/root-incremental-master-noimt/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=centos7/1803/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/). The root cause is still not properly understood, but this patch addresses two issues discovered by valgrind and which may be related.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1568:162,test,testReport,162,https://root.cern,https://github.com/root-project/root/pull/1568,4,['test'],"['test', 'testReport']"
Testability,"The non-modules system iterates over all available rootmap files and adds their libraries as potential dependencies to the library which ACLiC builds. The built library relies on the explicit linking to load its dependencies when it is dlopened. This is necessary because we have no other way to resolve symbols. Fortunately, the modules dynamic linker has superior symbol resolution. We can rely on it when loading a shared library. This patch fixes failing tests on OSX when runtime_cxxmodules are on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:459,test,tests,459,https://root.cern,https://github.com/root-project/root/pull/4742,1,['test'],['tests']
Testability,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10747:781,log,logic,781,https://root.cern,https://github.com/root-project/root/pull/10747,1,['log'],['logic']
Testability,"The officially supported way to build LLVM/Clang as a shared library is via the LLVM_BUILD_LLVM_DYLIB and LLVM_LINK_LLVM_DYLIB CMake options (see: https://llvm.org/docs/BuildingADistribution.html). When built this way, the whole of Clang API is exposed as a shared library (libclang-cpp.so). * CMakeLists.txt: Query if we're in shared mode via llvm-config, and register the result as LLVM_LIB_IS_SHARED.; [LLVM_LIB_IS_SHARED] <target_link_libraries>: Use the PUBLIC interface of the LLVM shared library.; * lib/Interpreter/CMakeLists.txt [LLVM_LIB_IS_SHARED]: When defined, replace the individual Clang components by clang-cpp.; * lib/MetaProcessor/CMakeLists.txt: Likewise.; * lib/Utils/CMakeLists.txt: Likewise.; * tools/Jupyter/CMakeLists.txt: Likewise.; * tools/driver/CMakeLists.txt: Likewise.; * tools/libcling/CMakeLists.txt: Likewise. Fixes: <https://github.com/root-project/cling/issues/430>. - [x ] tested changes locally; -> Yes, using the Guix packages for building cling. This PR fixes https://github.com/root-project/cling/issues/430",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563:909,test,tested,909,https://root.cern,https://github.com/root-project/root/pull/15563,1,['test'],['tested']
Testability,"The old test statistic classes also supported enabling the offset; feature after their construction via the `RooAbsReal::enableOffsetting`; hook. This function is now also correctly overloaded in the; `RooNLLVarNew` for the BatchMode. Furthermore, the implementation of `RooAddition::enableOffsetting` is; now moved to the base class `RooAbsReal`. This implementation was only; recursively calling `enableOffsetting` for the servers, which did the; job for the old test statistics, which were only combined with; `RooAdditions`. The new BatchMode also adds the NLLs with RooAdditions,; but on top of them sits another wrapper class, the; `RooFitDriverWrapper`. It should also forward the `enableOffsetting`; calls correctly. The most general solution to this problem is probably; to forward the `enableOffsetting` call for all `RooAbsReal`-derived; classed, up to the point where the recursion ends either at an old or a; new test statistic object. This PR also includes two minor commits. One for avoiding some warnings in tests, and another one that cleans unused includes of `RooNLLVar.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11668:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/11668,4,['test'],"['test', 'tests']"
Testability,"The old test statistic headers and classes should not be used anymore,; since the test statistics should be created with the higher-level; functions `createNLL()` and `createChi2()`. This allows us more; flexibility in the implementation, and to phase out the old test; statistics classes eventually.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14179:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/14179,3,['test'],['test']
Testability,"The one failure on Fedora 39 is unrelated:; ```; Failed; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR. ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 120, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libb2; - libgomp; If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------; Ran 1 test in 1.405s. FAILED (errors=1); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1836056879:116,Test,Test,116,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1836056879,5,"['Test', 'test']","['Test', 'test']"
Testability,The one test failure is due to removal of the TString to std::string_view conversion. A small patch to roottest is ready to go.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1155#issuecomment-334969829:8,test,test,8,https://root.cern,https://github.com/root-project/root/pull/1155#issuecomment-334969829,1,['test'],['test']
Testability,The only major things left should be the extra tests required by @jblomer and support for `RPrintValueVisitor`. Let's see if jenkins agrees.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8770#issuecomment-937933010:47,test,tests,47,https://root.cern,https://github.com/root-project/root/pull/8770#issuecomment-937933010,1,['test'],['tests']
Testability,The only problems are either know (32bits and snapshot) or build related (stale test libraries),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2696#issuecomment-425221648:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/2696#issuecomment-425221648,1,['test'],['test']
Testability,"The only test failure happens for very obscure reasons only when LLVM is built in release mode. We use the linkage cache which is for some reason computed as internal. We can fix the problem by removing the `using` clause. ```cpp; #include ""ROOT/TDataFrame.hxx"" ; using namespace ROOT::Experimental; // The using clause causes the misbehavior. void test_readTotemNtuple() {; TDataFrame d(0);; auto validate_x = [](){ };; d.Foreach(validate_x);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-376315166:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-376315166,1,['test'],['test']
Testability,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3971#issuecomment-502662245:88,test,tests,88,https://root.cern,https://github.com/root-project/root/pull/3971#issuecomment-502662245,1,['test'],['tests']
Testability,"The option Standard was before a complete implementation of the dense layer using the TMatrix classes. It was mainly for testing, and as far as I know not used. ; A replacements exists now, and it is used when TMVA is built without BLAS or IMT support. But before this PR it was buggy and for this reason the no-imt nightly builds were failing. . I will apply the changes as you suggest above before merging this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5519#issuecomment-623092342:121,test,testing,121,https://root.cern,https://github.com/root-project/root/pull/5519#issuecomment-623092342,1,['test'],['testing']
Testability,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7413:194,test,tests,194,https://root.cern,https://github.com/root-project/root/pull/7413,1,['test'],['tests']
Testability,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12853:456,test,tested,456,https://root.cern,https://github.com/root-project/root/pull/12853,1,['test'],['tested']
Testability,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. This PR is a backport of https://github.com/root-project/root/pull/12853 to v6.28. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12854:539,test,tested,539,https://root.cern,https://github.com/root-project/root/pull/12854,1,['test'],['tested']
Testability,"The original `HistoToWorkspaceFactory` produced models that consisted of; a Poisson term for each bin. In this ""number counting form"" the; dataset has one row and the collumns corresponded to the number of; events for each bin. This led to severe performance problems in; statistical tools that generated pseudo-experiments and evaluated; likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`; implementation that produces a model in the ""standard form"" where the; dataset has one row for each event, and the column corresponds to the; value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to; avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10220:356,test,test,356,https://root.cern,https://github.com/root-project/root/pull/10220,1,['test'],['test']
Testability,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701717286:330,test,test,330,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701717286,1,['test'],['test']
Testability,The osx failure is because the bot could not upload the successful build & test to cdash.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5613#issuecomment-631270380:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/5613#issuecomment-631270380,1,['test'],['test']
Testability,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix; - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896#issuecomment-499486279:55,assert,assert,55,https://root.cern,https://github.com/root-project/root/pull/3896#issuecomment-499486279,1,['assert'],['assert']
Testability,"The out-of-the-box iterator provided by cppyy is not fully; applicable in the case of TTreeReader: in a given iteration, the; entry number returned by the iterator is correct, but it is; always behind the entry number of the reader itself. This commit fixes such decoupling by relying on TTreeReader::Next(); and adds a test for it. Fixes #8183",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8272:320,test,test,320,https://root.cern,https://github.com/root-project/root/pull/8272,1,['test'],['test']
Testability,"The output of the `rootbench/build/root/roofit/roofit/RooFitUnBinnedBenchmarks.cxx` benchmark is now (using 1M events):. ```; --------------------------------------------------------------------------------; Benchmark Time CPU Iterations; --------------------------------------------------------------------------------; BDecayWithMixing__BatchMode_CUDA 403 ms 129 ms 1; BDecayWithMixing__BatchMode_CPU 2086 ms 2084 ms 1; BDecayWithMixing__NumCPU_1 8412 ms 8408 ms 1; BDecayWithMixing__NumCPU_2 4739 ms 12.9 ms 1; BDecayWithMixing__NumCPU_4 2974 ms 17.0 ms 1; BDecayWithMixing__NumCPU_8 2107 ms 28.0 ms 1. BDecayGaussResolution__BatchMode_CUDA 231 ms 19.2 ms 1; BDecayGaussResolution__BatchMode_CPU 2551 ms 2550 ms 1; BDecayGaussResolution__NumCPU_1 5122 ms 5120 ms 1; BDecayGaussResolution__NumCPU_2 2867 ms 10.8 ms 1; BDecayGaussResolution__NumCPU_4 1767 ms 15.8 ms 1; BDecayGaussResolution__NumCPU_8 1224 ms 26.8 ms 1. BDecayDoubleGauss__BatchMode_CUDA 1660 ms 86.9 ms 1; BDecayDoubleGauss__BatchMode_CPU 17891 ms 17878 ms 1; BDecayDoubleGauss__NumCPU_1 48664 ms 48644 ms 1; BDecayDoubleGauss__NumCPU_2 25634 ms 25.3 ms 1; BDecayDoubleGauss__NumCPU_4 14941 ms 30.6 ms 1; BDecayDoubleGauss__NumCPU_8 10087 ms 46.2 ms 1; ```. There is a nice speedup with CUDA, so these will serve as new results for CHEP, highlighting the performance of the GPU backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12141:84,benchmark,benchmark,84,https://root.cern,https://github.com/root-project/root/pull/12141,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"The output using [this build script](https://github.com/peter-jansson/appnuc/blob/eeb736f4137591f86a2070231f3fb1e8b3d7c8a9/scripts/install-root.sh) is available [here](https://github.com/peter-jansson/appnuc/runs/5468207882?check_suite_focus=true). The log indicated more error log information in a XROOTD build log file, which is copy/pasted below. It is indeed v5.4.1 but some other error compared to before in this issue thread. Perhaps the pthread libraries shipped with Alpine Linux is missing `pthread_rwlockattr_setkind_np` et.c.?. ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] Using the user supplied version: v5.4.1; [I] src/XrdVersion.hh successfully generated; In file included from /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysE2T.cc:35:; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In constructor 'XrdSysRWLock::XrdSys; RWLock(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:357:30: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 357 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:356:22: error: 'pthread_rwlockattr_se; tkind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 356 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In member function 'void XrdSysRWLoc; k::ReInitialize(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:373:22: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 373 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1062037565:253,log,log,253,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1062037565,3,['log'],['log']
Testability,"The passing NumPy arrays with the `np.int32` dtype to cppyy overloads that take array pointers in C++ generally works well, but not on 32-bit platforms like `debian10-i386` in the nightly build matrix. To reproduce the issue, you can run this code snippet on one of the 32-bit machines like `pcepsft10`:. ```Python; import ROOT. import numpy as np. arr = np.array([0, 2], dtype=np.int32). ROOT.gInterpreter.Declare(; """"""; void myprint(Int_t * arr, std::size_t n) {; for(std::size_t i = 0; i < n; ++i) {; std::cout << arr[i] << std::endl;; }; }; """"""; ). ROOT.myprint(arr, len(arr)); ```. Fixing this PyROOT issue will make the `projectroot.runtutorials.tutorial_fit_combinedFit_py` unit test pass again (it is currently failing in the `ROOT-debian10-i386,default,master` nightly builds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9846:686,test,test,686,https://root.cern,https://github.com/root-project/root/issues/9846,1,['test'],['test']
Testability,"The patch is exactly the same, I force-pushed a new version of the test that uses a `vector<XYZTVector>` instead of the previous hack with a `std::pair`. ~~However that causes a bunch of (seemingly harmless) I/O warnings that I don't understand -- I'll see with Philippe before merging.~~ Understood, all good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11216#issuecomment-1232003317:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/11216#issuecomment-1232003317,1,['test'],['test']
Testability,"The patch is in fact working quite well and one of our users just found a case where it is needed because our original solution was too coarse. We covered it on our side (cf pinged PR on FairRoot) as our adoption of new ROOT releases is typically quite slow, but I think it would indeed be a nice feature to have it done automatically on refresh (as far as I could test it will not hurt even if for some transition period in the future we have it executed once both in ROOT and FairRoot)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1499201970:365,test,test,365,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1499201970,1,['test'],['test']
Testability,The patch landed in llvm proper. Closing this testing PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-314997997:46,test,testing,46,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-314997997,1,['test'],['testing']
Testability,"The patch now works in the default case (no libcmaes). ; I have tested as suggested to do ; cmake ../ -Dall=on -Dtesting=on -Dlibcmaes=on. It downloaded the eigen and libcaems, but apparently libcaems is not built locally. Even the include files are not copied. The error I get is . [ 41%] Generating G__cmaes.cxx, ../../lib/libcmaes_rdict.pcm, ../../lib/libcmaes.rootmap; In file included from input_line_12:12:; /home/moneta/master-build/include/CMAESMinimizer.h:33:10: fatal error: 'cmaes.h' file not found; #include ""cmaes.h""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-64232569:64,test,tested,64,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-64232569,1,['test'],['tested']
Testability,"The patch that disables the initializer list pythonization should in principle not be necessary. @aaronj0, let's see which tests were actually failing because of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338:123,test,tests,123,https://root.cern,https://github.com/root-project/root/pull/16338,1,['test'],['tests']
Testability,"The portfile has; ```; OPTIONS_RELEASE; ""-Dwinrtdebug=off""; OPTIONS_DEBUG; ""-Dwinrtdebug=on""; ```; according to the debug configure log that setting is working:; ```; System Windows-10.0.20348; Processor 16 core AMD EPYC 7763 64-Core Processor (AMD64); Build type Debug; Install path D:/packages/root_x64-windows/debug; Compiler MSVC 19.35.32217.1; Compiler flags:; C -nologo -ID:/buildtrees/root/src/4777595a60-bb02050ae7.clean/build/win -FIw32pragma.h -FIsehmap.h -MDd -EHsc- -W3 -D_WIN32 -wd4267 -D_WIN64 -DNOMINMAX -Od -Z7; C++ -nologo -ID:/buildtrees/root/src/4777595a60-bb02050ae7.clean/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -std:c++17 -MDd -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -wd4146 -wd4250 -wd4624 -D_WIN32 -wd4267 -D_WIN64 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -Od -Z7; Linker flags:; Executable /machine:x64; Module /machine:x64 -ignore:4049,4206,4217,4221 -incremental:no; Shared /machine:x64 -ignore:4049,4206,4217,4221 -incremental:no. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 builtin_unuran clad dataframe exceptions fftw3 fitsio gdml http imt mathmore mlp minuit2 odbc opengl roofit webgui root7 rpath shared tmva tmva-cpu spectrum unuran winrtdebug; ```; (I am a bit salty that root nukes `CMAKE_<LANG>_FLAGS` but that is another issue, first solve the build itself); Checking the build log only shows path to external libs which start with `installed\x64-windows\debug\lib` so linking with the wrong CRT is not the case. vcpkg also enforces consistent CRT linkage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738#issuecomment-1532932304:132,log,log,132,https://root.cern,https://github.com/root-project/root/issues/12738#issuecomment-1532932304,2,['log'],['log']
Testability,The previous assert was not only ugly but also did the inverse; check (failed when it could open the file correctly).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/539:13,assert,assert,13,https://root.cern,https://github.com/root-project/root/pull/539,1,['assert'],['assert']
Testability,"The previous change was to switch from `static` library to `object` library. Part of the reasoning was:; ```; For static libraries, the linker can decide to skip it and not include; the contained object files. This defeats the purpose of TestSupport; which registers a global; ```; (see 91d2bbc3d6840e53fd9197fc7ad709de9c90473f). The same concern 'can' happen again with shared library. Some platform now default their linker to be dropping 'unused' library (see the linker flag `--as-needed` and `--no-as-needed`). i.e. we may need to add `-Wl,--no-as-needed` as part of linking to this library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16568#issuecomment-2386585160:238,Test,TestSupport,238,https://root.cern,https://github.com/root-project/root/pull/16568#issuecomment-2386585160,1,['Test'],['TestSupport']
Testability,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11076:195,test,tested,195,https://root.cern,https://github.com/root-project/root/pull/11076,2,['test'],"['tested', 'tests']"
Testability,The previous cmake boolean expression was disabling the test on all platforms except on Mac 13+. The issue is that in cmake `NOT MACOSX_VERSION VERSION_LESS 13.00` is false if MACOSX_VERSION is not defined,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16188:56,test,test,56,https://root.cern,https://github.com/root-project/root/pull/16188,1,['test'],['test']
Testability,"The previous equation interpolated between low and high values in logarithmic space and transformed the result back with an exp. This introduced an issue with low or high values that were zero. Taking their logarithm would introduce -inf values which led to nan values from the interpolation call. Instead, we now do the interpolation without the back and forth logaritmic transformations. This gives slightly deviating values from the previous implementation. However, that implementation already was a recent change from the earlier implementation with similarly deviating values, so in the end this additional change is not very significant. See commit 466f3f689c578cb53d75ddeeb04472ec4d82e3ed for that previous reimplementation. This change can be considered a fix for that commit. Fixes #13749.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13804:66,log,logarithmic,66,https://root.cern,https://github.com/root-project/root/pull/13804,3,['log'],"['logarithm', 'logarithmic', 'logaritmic']"
Testability,The previous errors with the VM was due to incorrect setup of the Debian distro (dependency resolution failure related to a messed-up `source.list`). `Thank you for your patience!. All the tests passed after running `./stressGraphics`; ```; Create ./cernstaff.root; (TFile *) nullptr; **********************************************************************; * Starting Graphics - S T R E S S suite *; **********************************************************************; * Starting Basic Graphics - S T R E S S *; **********************************************************************; Test 1: TLine..................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 2: TMarker................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 3: TPolyLine................................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 4: Fill patterns............................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1128447944:189,test,tests,189,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1128447944,3,"['Test', 'test']","['Test', 'tests']"
Testability,The previous fix made test fail.; The return was suppressed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9604:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/9604,1,['test'],['test']
Testability,"The previous implementation required TGeoTessellated shapes to be read attached to a TGeoManager. This removes the limitation, and allows also reading geometry files containing shapes converted to VecGeom corresponding solids. # This Pull request:. ## Changes or fixes:; * Restructured the `TGeoFacet` helper class, eliminating referencing vertices stored in the associated `TGeoTessellated` object, since this required calling a specific method `TGeoTessellated::AfterStreamer` to fix all the facet objects. The new version moves all vertex operations from TGeoFacet to the TGeoTessellated class, making the latter readable from a root file even if not connected to a `TGeoManager`; * Added persistency to the class `TGeoVGShape` which interfaces `TGeoShape` to `vecgeom::VPlacedVolume`. This allows to write/read geometry files after being converted to VecGeom. Upon reading, a check is made that the current root version was also compiled with VecGeom support, and if this is not the case a `Fatal` exception is fired. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14283",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14327:1043,test,tested,1043,https://root.cern,https://github.com/root-project/root/pull/14327,1,['test'],['tested']
Testability,The previous logic assumed that different samples would belong to; files with different names.; This could potentially result in wrong data being silently read in; case subsequent samples had same or fewer entries than the first; sample processed by a given thread. This fixes #7143 . @phi-mah please let me know if this looks reasonable/if this fixes your usecase.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7149:13,log,logic,13,https://root.cern,https://github.com/root-project/root/pull/7149,1,['log'],['logic']
Testability,The previous logic was such that the warning about suppressed further; warnings never executed. This commit also improves formatting according; to the coding conventions. Fixes: https://sft.its.cern.ch/jira/browse/ROOT-8572,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/349:13,log,logic,13,https://root.cern,https://github.com/root-project/root/pull/349,1,['log'],['logic']
Testability,"The problem I see is that we can't specify ""link only here all of Vc"", but we have to specify this when we create the INTERFACE linking options. So every library that directly links against should get it, but I don't think it propagates. Maybe someone can test this manually (or I'll do when I have a few minutes). Will put a DNM until this is known.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1007#issuecomment-331103794:256,test,test,256,https://root.cern,https://github.com/root-project/root/pull/1007#issuecomment-331103794,1,['test'],['test']
Testability,The problem could be that one changes the template class and the typedef declaration in `Vector.h` but forgets to modify `Vectorfwd.h`. If that tupedef's is not tested there is an inconsistency. . We have this now https://root.cern.ch/doc/master/namespaceROOT_1_1Math.html#a39def91bfd150148b1534d8ae665b145,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8224#issuecomment-865006755:161,test,tested,161,https://root.cern,https://github.com/root-project/root/pull/8224#issuecomment-865006755,1,['test'],['tested']
Testability,"The problem is here: `java.io.FileNotFoundException: /tmp/log-parser_root-pullrequests-build_build_17889 (No space left on device)`. The node's disk space is full. It's not a problem of the PR, as far as I understand the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-367330159:58,log,log-,58,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-367330159,1,['log'],['log-']
Testability,"The problem is not in `GetLeaf()`, so we do not need to add support for this there, especially since it breaks tests. We just have to do the right name split in TDF and pass that to another overload of `GetLeaf()` that takes the already split arguments. The real problem is that once branch names with dots start being accepted by TDF, the JIT doesn't work because the string for jitting contains the branch names as is, so things like `double p.x;` show up in the code to be jitted, and that cannot be compiled, so that's what really needs fixing. ROOT-9254 is not needed and could probably just be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1700#issuecomment-371183990:111,test,tests,111,https://root.cern,https://github.com/root-project/root/pull/1700#issuecomment-371183990,1,['test'],['tests']
Testability,"The problem is that LLVM ships with zlib. Since recently, we meld the header files of the PCH in a zip in it (fa9a2eee8376a0d4c4393b8f94fa3f841455c32d). Clang uses zlib [here](https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp#L1302) and [here](https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp#L2052) when building the PCH in `-fmodules-embed-all-files` mode. IIUC, the issue is the way the JIT resolves symbols. Currently, cling's JIT gives a preference to the local content to itself, i.e. resolves symbols from libCling.so first. This would mean that even if we link another version of zlib to libCore, cling will still find the symbols from llvm's library. And that's by design, because we want to resolve the embedded in ROOT LLVM symbols first. Otherwise cling will start picking up random LLVM symbols introducing a lot of compatibility and versioning issues. I'd propose we try to solve this in two steps. First we should try disabling LLVM's zlib from `interpreter/CMakeLists.txt` instead of the current patch. I suspect that LLVM will be able to find and use the system's zlib (in that case we should make sure LLVM links to the version of zlib we expect: @oshadura has a nice test case for it). If that doesn't work we should investigate how we can configure ROOT's LLVM with a custom zlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1149#issuecomment-335419847:1315,test,test,1315,https://root.cern,https://github.com/root-project/root/pull/1149#issuecomment-335419847,1,['test'],['test']
Testability,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:77,log,logic,77,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,2,['log'],['logic']
Testability,"The problem is that one of the histogram is having all bin errors equal to zero. Is this intentional ? ; If not please add the correct errors and the test will work correctly. ; In that case the toy option (`X`) does not work and it returns a zero probability. An error should be probably produced, but this could be probably supported. I can provide a fix for this. ; Thank you for the report",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13697#issuecomment-1750792805:150,test,test,150,https://root.cern,https://github.com/root-project/root/issues/13697#issuecomment-1750792805,1,['test'],['test']
Testability,The problem reproduces on `root-fedora36-2` in `/home/sftnight/build/manual/build` with. ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h # good; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h # bad; ```. I commented out the printing of the translation unit decl at the moment; the printed translation unit decl are in : rs.bad.04.log rs.good.04.log,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11329#issuecomment-1239649534:676,log,log,676,https://root.cern,https://github.com/root-project/root/issues/11329#issuecomment-1239649534,2,['log'],['log']
Testability,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm; ```; glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries.; Repo : @System; Matched from:; Filename : /usr/include/bits/floatn.h; ```; [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64); ```; glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries.; Repo : @System; Matched from:; Filename : /usr/include/bits/floatn.h. ```; Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like ; ```diff; - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus; + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789#issuecomment-1976486042:150,assert,assertion,150,https://root.cern,https://github.com/root-project/root/issues/14789#issuecomment-1976486042,1,['assert'],['assertion']
Testability,The problem seems to be in the calculation of disc at line 151; https://root.cern/doc/master/complex__quartic_8h_source.html#l00151. If I uncomment these following lines; ```; // more numerical problems with this calculation of disc; // double CR2 = 729 * rcub * rcub;; // double CQ3 = 2916 * qcub * qcub * qcub;; // disc = (CR2 - CQ3) / 2125764.0;; ```. it seems top provide the correct result in your example. ; It would be nice to have more test points to validate the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6900#issuecomment-737326594:444,test,test,444,https://root.cern,https://github.com/root-project/root/issues/6900#issuecomment-737326594,1,['test'],['test']
Testability,"The problem was due the introduction (in commit f3f0f13) of a fast path in TClass::GetListOfDataMember which did not take in consideration the case:. c = GetClass(someclassname); c->GetState() == TClass::kForwardDeclared; c->GetListOfDataMember() -> list is now created but empty.; load and parse header file for; c->GetState() == TClass::kInterpreted; c->GetListOfDataMember() -> list is still empty but should have been filled (loaded at this point). The logic assumed incorrectly that if someclassname was indeed pointing to a class or struct and the list was created then it was loaded. To keep the fast path and correct the logic, we need to 'promote' TListOfDataMembers::fIsLoaded to be an std::atomic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6668:457,log,logic,457,https://root.cern,https://github.com/root-project/root/pull/6668,2,['log'],['logic']
Testability,"The problem was due the introduction (in commit f3f0f13) of a fast path in TClass::GetListOfDataMember which did not take in consideration the case:; ```; c = GetClass(someclassname); c->GetState() == TClass::kForwardDeclared; c->GetListOfDataMember() -> list is now created but empty.; load and parse header file for; c->GetState() == TClass::kInterpreted; c->GetListOfDataMember() -> list is still empty but should have been filled (loaded at this point).; ```; The logic assumed incorrectly that if someclassname was indeed pointing to a class or struct and the list was created then it was loaded. To keep the fast path and correct the logic, we need to 'promote' TListOfDataMembers::fIsLoaded to be an std::atomic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6669:468,log,logic,468,https://root.cern,https://github.com/root-project/root/pull/6669,2,['log'],['logic']
Testability,The problem was in the CMake files for the tests. It is now fixed by this commit: ; https://github.com/root-project/root/commit/697630162003a80570d62fdff07c29805bee84e4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3446#issuecomment-467873193:43,test,tests,43,https://root.cern,https://github.com/root-project/root/pull/3446#issuecomment-467873193,1,['test'],['tests']
Testability,"The problem was reproducible on any mac node with builtin_xrootd enabled. I think we didn't test if the problem was present with system xrootd, but I guess it should not be a problem in that case. The original PR with all the discussion is at https://github.com/root-project/root/pull/6128",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790728786:92,test,test,92,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790728786,1,['test'],['test']
Testability,"The problem with the test is that on those platforms `TDavixFile` is used, while on my laptop `TWebFile` is used instead so I only applied the fix there. Now patching `TDavixFile`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11321#issuecomment-1239548188:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/11321#issuecomment-1239548188,1,['test'],['test']
Testability,"The problem with this test is that it is comparing an analytical; solution of the derivative against the center difference formula; f'(x) = (f(x+dx) - f(x-dx))/(2*dx), and this formula is not exact.; The choice of dx was too large for the tolerance accepted for the; maximum relative error. Using a smaller dx for the center difference; calculation fixes this issue by reducing the error in the numerical; derivative calculation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/534:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/534,1,['test'],['test']
Testability,"The problems with C++17 on macOS are pre-existing (see https://github.com/root-project/root/issues/12003) and `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_datasetspec` also fails in the nightlies on macOS 12. @Axel-Naumann @vgvassilev how much do we care about `CLING_DEBUG` on macOS? If it's ok to lose this ability, I think this could be merged as-is, otherwise I have to look into it some more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11997#issuecomment-1378470412:138,test,test,138,https://root.cern,https://github.com/root-project/root/pull/11997#issuecomment-1378470412,1,['test'],['test']
Testability,"The program used for finding the leaks is as follows:. ```cpp; #include ""ROOT/RDataFrame.hxx""; #include ""TSystem.h"". bool memory() {; ProcInfo_t info;; gSystem->GetProcInfo(&info);; printf("" res memory = %g Mbytes\n"", info.fMemResident / 1024.);; return true;; }. constexpr auto file = ""small.root"";. void test() {; ROOT::EnableImplicitMT(1);; auto df = ROOT::RDataFrame(""Events"", file);; df.Filter(""Muon_pt.size()>0""); .Define(""pt"", ""Muon_pt[0]""); .Filter(memory); .Snapshot(""Events"", ""output.root"", {""pt""});; }. int main() { test(); }; ```. The valgrind output before the fix:. ```; ==20802== LEAK SUMMARY:; ==20802== definitely lost: 54,488 bytes in 222 blocks; ==20802== indirectly lost: 23,816 bytes in 199 blocks; ==20802== possibly lost: 71,130 bytes in 610 blocks; ==20802== still reachable: 74,920,340 bytes in 100,971 blocks; ==20802== of which reachable via heuristic:; ==20802== newarray : 25,424 bytes in 49 blocks; ==20802== multipleinheritance: 1,048 bytes in 3 blocks; ==20802== suppressed: 6,366,063 bytes in 65,508 blocks; ```. And the valgrind output after the fix:. ```; ==22182== LEAK SUMMARY:; ==22182== definitely lost: 6,424 bytes in 202 blocks; ==22182== indirectly lost: 23,936 bytes in 200 blocks; ==22182== possibly lost: 61,230 bytes in 610 blocks; ==22182== still reachable: 74,911,268 bytes in 100,857 blocks; ==22182== of which reachable via heuristic:; ==22182== newarray : 25,424 bytes in 49 blocks; ==22182== multipleinheritance: 928 bytes in 2 blocks; ==22182== suppressed: 6,374,775 bytes in 65,619 blocks; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2361:306,test,test,306,https://root.cern,https://github.com/root-project/root/pull/2361,2,['test'],['test']
Testability,"The pull request blur is good description of the change. Could it be added (if not already) to either a commit log, the releases notes or the documentation? [If not already done]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182#issuecomment-396386894:111,log,log,111,https://root.cern,https://github.com/root-project/root/pull/2182#issuecomment-396386894,1,['log'],['log']
Testability,"The python failure are due xrootd authentication problem. The root-meta-tclass, root-io-buffer and root-io-transient test were not run due to a build system issue (probably due to a ROOT rebuild triggered by ctest because of the ar timestamp bug)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062#issuecomment-672318996:117,test,test,117,https://root.cern,https://github.com/root-project/root/pull/6062#issuecomment-672318996,1,['test'],['test']
Testability,"The pythonization of `TTree::SetBranchAddress` was implemented in C++, hacking into CPyCppy by using implementation details like data member caches (this call: `((CPPInstance *)address)GetDatamemberCache()`). Not too surprising that it apparently breaks with the upcoming Python 3.13. It's better to implement the pythonizations in Python and also manage the lifetime of the necessary data in Python. This is done in this commit. The pythonization is extensively tested in `ttree_setbranchaddress.py`. Closes #15799.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15807:463,test,tested,463,https://root.cern,https://github.com/root-project/root/pull/15807,1,['test'],['tested']
Testability,"The range is not used in RooParamHIstFunc::analyticalIntegralWN, see https://root.cern/doc/master/RooParamHistFunc_8cxx_source.html#l00247; as reported in https://root-forum.cern.ch/t/createintegral-giving-wrong-results/43508. . Simple code to reproduce:; ```; void testParamHistFunc() { ; ; RooRealVar x(""x"",""x"",0,10); ; TH1D h1(""h1"",""h1"",20,0,10); ; TF1 f1(""f1"",""gaus""); f1.SetParameters(1,5,1); ; h1.FillRandom(""f1"",1000); ; ; RooDataHist dh(""dh"",""dh"",x,&h1); ; RooParamHistFunc phf(""phf"","""",x,dh); ; phf.Print(""t""); ; x.setRange(""R1"",0,5); ; ; auto ig1n = phf.createIntegral(x,x); ; std::cout << ig1n->getVal() << std::endl; ; auto igr1 = phf.createIntegral(x,x,""R1""); ; std::cout << igr1->getVal() << std::endl; ; ; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182:266,test,testParamHistFunc,266,https://root.cern,https://github.com/root-project/root/issues/7182,1,['test'],['testParamHistFunc']
Testability,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11445:422,test,test,422,https://root.cern,https://github.com/root-project/root/pull/11445,3,['test'],"['test', 'testRooAbsReal', 'tests']"
Testability,"The recently-introduced `RooDataSet.from_numpy()` function was clipping; out-of-range events to the variable boundaries instead of clipping them. This behavior was misleading and confusing to the users, because the; import of a TTree just skips out out-of-range events. This commit implements the skipping for `RooDataSet.from_numpy()` as; well, logging also the same warnings when that happens. A unit test that checks the skipping works correctly for categories and; real-valued variables is also implemented. Closes https://github.com/root-project/root/issues/10447. Some other things are also fixed by the two first commits, see more detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11531:346,log,logging,346,https://root.cern,https://github.com/root-project/root/pull/11531,2,"['log', 'test']","['logging', 'test']"
Testability,"The remaining test failures on MacOS are trickier than previous ones. I built with debug symbols on the CI nodes and I could get the following stack trace; ```; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TClingCallFunc::compile_wrapper(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:144; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TClingCallFunc::make_wrapper() /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1016; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TClingCallFunc::IFacePtr() /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1728; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libCling.so] TCling::CallFunc_IFacePtr(CallFunc_t*) const /Users/sftnight/vpadulan/rootproject/rootsrc/core/metacling/src/TCling.cxx:7886; [/Users/sftnight/vpadulan/rootproject/rootinstall/batch-generator-debug/lib/libcppyy_backend3_9.so] GetCallFunc(long) /Users/sftnight/vpadulan/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:734; ```. Which points to problems in `TClingCallFunc`. Now, most probably it is true that `compile_wrapper` needs a lock (as well as many other places in `TClingCallFunc`, but adding the lock did not fix the failure on the CI node unfortunately. One particularity in `TClingCallFunc` w.r.t. other files that were changed in this PR is that the locks that are currently already present use the macro `R__LOCKGUARD_CLING` instead of `R__LOCKGUARD`, so some different strategy might be needed here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1656714911:14,test,test,14,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1656714911,1,['test'],['test']
Testability,"The reproducer fails for me with a seg fault and the following valgrind report:; ```; ==2486== Invalid read of size 2; ==2486== at 0x48529E0: memmove (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==2486== by 0x10DCD2: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== Address 0x22d38604 is 6,878,660 bytes inside a block of size 6,878,661 alloc'd; ==2486== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==2486== by 0x4BB2526: TStorage::ReAllocChar(char*, unsigned long, unsigned long) (TStorage.cxx:283); ==2486== by 0x4B5B6C2: TBuffer::Expand(int, bool) (TBuffer.cxx:242); ==2486== by 0x55E1855: R__InitializeReadBasketBuffer(TBuffer*, int, TFile*) (TBasket.cxx:418); ==2486== by 0x55E21FF: TBasket::ReadBasketBuffers(long long, int, TFile*) (TBasket.cxx:585); ==2486== by 0x55F3590: TBranch::GetBasketImpl(int, TBuffer*) (TBranch.cxx:1266); ==2486== by 0x55F3D62: TBranch::GetBasketAndFirst(TBasket*&, long long&, TBuffer*) (TBranch.cxx:1388); ==2486== by 0x55F45BE: TBranch::GetEntriesSerialized(long long, TBuffer&, TBuffer*) (TBranch.cxx:1550); ==2486== by 0x10E0A6: TBranch::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== by 0x10E13F: ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized(long long, TBuffer&) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak) ; ==2486== by 0x10DC17: reproducer(TFile*) (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ==2486== by 0x10DF26: main (in /home/pcanal/root_working/test/2022-tree/bulk-leak/bulkleak); ```. which may or may not be the same issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341827725:283,test,test,283,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341827725,6,['test'],['test']
Testability,"The reproducer is the following line in the ROOT prompt:. ```cpp; ROOT::RDataFrame(""Events"", ""DYJetsToLL.root"").Histo1D(""Muon_tightId"").GetValue();; ```. The stack trace is as follows:. ```; In module 'ROOTDataFrame':; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/ActionHelpers.hxx:303:18: error: non-const lvalue reference to type 'bool' cannot bind to a temporary of type 'std::_Bit_const_iterator::const_reference' (aka 'bool'); for (auto &x0 : x0s) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillParHelper<TH1D>::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:252,test,test-jupyroot,252,https://root.cern,https://github.com/root-project/root/issues/6675,3,['test'],['test-jupyroot']
Testability,"The results deviate very slightly at the double precision level on the last digits, but this appears harmless to me as the fit results in the stress tests are the same. Also I would not be sure which one of the two versions is ""correct"" then. For numerical precision, I reckon that this PR is an improvement because there are less operations involved in the calculation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9925#issuecomment-1141921487:149,test,tests,149,https://root.cern,https://github.com/root-project/root/pull/9925#issuecomment-1141921487,1,['test'],['tests']
Testability,"The return type of `foo(int)` is `void`, which causes an assertion failure in `lib/Interpreter/Value.cpp:163`: ""Type not supported"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13282:57,assert,assertion,57,https://root.cern,https://github.com/root-project/root/pull/13282,1,['assert'],['assertion']
Testability,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8491:91,test,tests,91,https://root.cern,https://github.com/root-project/root/pull/8491,4,['test'],['tests']
Testability,The roofit/roostats/test/testHypoTestInvResult.cxx test fails on aarch64 and ppc64le,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5867:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/5867,3,['test'],"['test', 'testHypoTestInvResult']"
Testability,"The root cause of the dataframe test failures is probably the same as for https://github.com/root-project/root/issues/7366 . It is related to cling, @jalopezg-r00t was looking into it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823924036:32,test,test,32,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823924036,1,['test'],['test']
Testability,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-225528937:322,test,tests,322,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-225528937,1,['test'],['tests']
Testability,"The roottest-python-cmdLineUtils test sometimes fails with error along the line of:; ```; 16/22 Test #1217: roottest-python-cmdLineUtils-SimpleRootrm1CheckOutput .......***Failed 0.86 sec; -- TEST COMMAND --; cd /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils; /usr/bin/timeout -s USR2 270s /home/pcanal/root_working/build/master-debug/bin/rootls -1 victim1.root; -- BEGIN TEST OUTPUT --; dir; hprof; hprof; hpxpy; hpxpy; tof. -- END TEST OUTPUT --; -- BEGIN OUTDIFF OUTPUT --; --- /home/pcanal/root_working/code/root/roottest/python/cmdLineUtils/SimpleRootrm.ref Thu Dec 3 17:25:54 2020; +++ /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils/SimpleRootrm1CheckOutput.log Fri Jan 15 15:57:03 2021; @@ -1,4 +1,6 @@; dir; hprof; +hprof; +hpxpy; hpxpy; tof. -- END OUTDIFF OUTPUT --. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7054:33,test,test,33,https://root.cern,https://github.com/root-project/root/issues/7054,6,"['TEST', 'Test', 'log', 'test']","['TEST', 'Test', 'log', 'test']"
Testability,"The same symptom also appears if I try to make a field for a class with no default constructor:; ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class NoDefaultCtor {; public:; NoDefaultCtor(int x) : data1_(x) {};. private:; int data1_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:; model.MakeField[""NoDefaultCtor""](""test""); except ValueError as ex:; print(ex). # fails; model.MakeField[""std::vector<float>""](""test2""); ```. There, I even get; ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }; ```; which is very weird, why would we be making the symbol; ```; ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13910#issuecomment-1772929625:345,test,test,345,https://root.cern,https://github.com/root-project/root/issues/13910#issuecomment-1772929625,1,['test'],['test']
Testability,"The search for a candidate repository and branch for `roottest` now works as follows: ; - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync.; - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit.; - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12975:668,test,tested,668,https://root.cern,https://github.com/root-project/root/pull/12975,1,['test'],['tested']
Testability,"The second ""bigger"" problem are the `filemerger` tests on macOS AArch64 that compare the expected compressed file size of `hsimple.root`. These turn out to be caused by how LLVM 16 optimizes `pz = px*px + py*py;` in `hsimple.C`, resulting in slightly different floating point results and therefore different compression. I have no really good solution here other than updating the expected reference sizes / their tolerance. An alternative would be to check in a ""known"" `hsimple.root` and not generate it on the fly. What do you think @pcanal ?. edit: I found a better solution by disabling floating point contractions when producing `hsimple.root` for these tests, see https://github.com/root-project/roottest/pull/989.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1649423962:49,test,tests,49,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1649423962,2,['test'],['tests']
Testability,The signed and unsigned logic was reversed for long long and unsigned long long. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11388:24,log,logic,24,https://root.cern,https://github.com/root-project/root/pull/11388,1,['log'],['logic']
Testability,The single failing test is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11717#issuecomment-1329082921:19,test,test,19,https://root.cern,https://github.com/root-project/root/pull/11717#issuecomment-1329082921,1,['test'],['test']
Testability,The stacktrace logic is here https://github.com/root-project/root/blob/51f120847373b2c12c23a831003d9fe509b17337/core/unix/src/TUnixSystem.cxx#L2232. I can imagine that we can make change this function to return a string and then call it when we called the `.gh` command?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122632839:15,log,logic,15,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122632839,1,['log'],['logic']
Testability,The static vectors look like a thread safety issue in our tests.; std::array avoid memory allocation on every execution in the same way; the static vector does. NB: `#include <array>` is already present in the codegen from `MethodBase.cxx`. WIP: local building and testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3254:58,test,tests,58,https://root.cern,https://github.com/root-project/root/pull/3254,2,['test'],"['testing', 'tests']"
Testability,The stressVector test fails on ix86 due to too strict check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12390:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/12390,1,['test'],['test']
Testability,The structure looks good to me! I like the idea of having a test utility header.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5619#issuecomment-629200095:60,test,test,60,https://root.cern,https://github.com/root-project/root/pull/5619#issuecomment-629200095,1,['test'],['test']
Testability,"The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated; accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3962:288,test,test,288,https://root.cern,https://github.com/root-project/root/pull/3962,1,['test'],['test']
Testability,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec; ```; and if we immediately re-run we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec; ```; and the error is:; ```; [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719#issuecomment-2427294206:273,Test,TestRModelParserPyTorch,273,https://root.cern,https://github.com/root-project/root/issues/16719#issuecomment-2427294206,14,"['Test', 'test']","['Test', 'TestRModelParserPyTorch', 'test', 'tests']"
Testability,"The support for I/O of interpreted classes is not complete (it is missing at least support for STL collection). Even-though that some classes could be stored, we choose (for now?) to leave the message for all of them (rather than trying to test for the subset that 'works' and have a mixed up message)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997480648:240,test,test,240,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997480648,1,['test'],['test']
Testability,The sysroot flag should not be set when writing a module otherwise we; trigger an assertion in ASTWriter.cpp:1245.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/519:82,assert,assertion,82,https://root.cern,https://github.com/root-project/root/pull/519,1,['assert'],['assertion']
Testability,"The test @aadduszki wrote still fails on master:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing test_tree.cpp...; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844#issuecomment-864864854:4,test,test,4,https://root.cern,https://github.com/root-project/root/issues/7844#issuecomment-864864854,1,['test'],['test']
Testability,"The test TMVA-DNN-LSTM-BackpropagationCudnn crashes on ubuntu2404 cuda-12.6.1 with cudnn with the following stack trace:; ```; 0x00007fda7f0b5540 in <unknown> from /usr/lib64/libcuda.so.1; 0x00007fda7ed1491e in <unknown> from /usr/lib64/libcuda.so.1; 0x00007fda7f08f040 in <unknown> from /usr/lib64/libcuda.so.1; 0x00007fda7ed0ef22 in <unknown> from /usr/lib64/libcuda.so.1; 0x00007fda7eed2bae in <unknown> from /usr/lib64/libcuda.so.1; 0x00007fdaaa248b01 in <unknown> from /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcudart.so.12; 0x00007fdaaa218baa in <unknown> from /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcudart.so.12; 0x00007fdaaa270721 in cudaMemcpy + 0x211 from /usr/local/cuda-12.6/targets/x86_64-linux/lib/libcudart.so.12; 0x000055d25af29e37 in bool testLSTMBackpropagation<TMVA::DNN::TCudnn<double> >(unsigned long, unsigned long, unsigned long, unsigned long, TMVA::DNN::TCudnn<double>::Scalar_t, std::vector<bool, std::allocator<bool> >, bool) + 0x4d37 from /github/home/ROOT-CI/build/tmva/tmva/test/DNN/LSTM/testLSTMBackpropagationCudnn; ```. Disabling it now, #16790 opened to track progress.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16791:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/16791,4,['test'],"['test', 'testLSTMBackpropagation', 'testLSTMBackpropagationCudnn']"
Testability,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10693:4,test,test,4,https://root.cern,https://github.com/root-project/root/issues/10693,6,"['TEST', 'test']","['TEST', 'test']"
Testability,The test `projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooSimultaneous` has been failing on this PR and is now in all subsequent PRs!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10256#issuecomment-1081977757:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/10256#issuecomment-1081977757,2,['test'],['test']
Testability,"The test autoloads an `Outer` class that has `Inner<int>` as a member. Because we suspend autoloading, the `Inner<int>` specialization may not be complete at all times, which triggers a `static_assert` in newer versions of libstdc++. Backport of D86765, commit bf890dcb0f; original commit message:; ```; [clang] Don't emit ""no member"" diagnostic if the lookup fails on an invalid record decl. The ""no member"" diagnostic is likely bogus.; ```. (cherry picked from commit 06fd8e9e798919fdc29d8d6ec65d13d55ea30aa7, backport of PR https://github.com/root-project/root/pull/11551)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11560:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/11560,1,['test'],['test']
Testability,"The test autoloads an `Outer` class that has `Inner<int>` as a member. Because we suspend autoloading, the `Inner<int>` specialization may not be complete at all times, which triggers a `static_assert` in newer versions of libstdc++. Backport of [D86765](https://reviews.llvm.org/D86765), commit [bf890dcb0f](https://github.com/llvm/llvm-project/commit/bf890dcb0f5eb05b1a98cbd1cdd24c0c4ece8f8d); original commit message:; ```; [clang] Don't emit ""no member"" diagnostic if the lookup fails on an invalid record decl. The ""no member"" diagnostic is likely bogus.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/11551,1,['test'],['test']
Testability,The test can be found in roottest https://github.com/root-project/roottest/pull/1005,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13532#issuecomment-1691648227:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/13532#issuecomment-1691648227,1,['test'],['test']
Testability,The test can be seen in https://github.com/root-project/roottest/pull/584,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6251#issuecomment-680941892:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/6251#issuecomment-680941892,1,['test'],['test']
Testability,"The test errors are due to a bug in my implementation, will fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5667#issuecomment-631991854:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/5667#issuecomment-631991854,1,['test'],['test']
Testability,The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10127:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/10127,1,['test'],['test']
Testability,The test failure are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8932#issuecomment-917159968:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/8932#issuecomment-917159968,1,['test'],['test']
Testability,The test failure can be ignored it is due to PR #4988.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4985#issuecomment-586208971:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/4985#issuecomment-586208971,1,['test'],['test']
Testability,The test failure gtest-tree-treeplayer-test-datasource-root is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1271#issuecomment-341643407:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1271#issuecomment-341643407,2,['test'],"['test', 'test-datasource-root']"
Testability,The test failure in [fit/combinedFit.py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/135926/testReport/projectroot/runtutorials/tutorial_fit_combinedFit_py/) is unrelated see https://github.com/root-project/root/pull/3760#issuecomment-1026103150.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486#issuecomment-1026290791:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/9486#issuecomment-1026290791,2,['test'],"['test', 'testReport']"
Testability,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4987#issuecomment-586209411:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/4987#issuecomment-586209411,1,['test'],['test']
Testability,"The test failure is real, the test reference needs updating too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12875#issuecomment-1563106183:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/12875#issuecomment-1563106183,2,['test'],['test']
Testability,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-994577581:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-994577581,1,['test'],['test']
Testability,"The test failure is resolved by avoiding the `oss.str()` check https://github.com/root-project/root/pull/7879#discussion_r653468750, we will apply the same changes here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7749#issuecomment-866125500:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/7749#issuecomment-866125500,1,['test'],['test']
Testability,The test failure is unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14356#issuecomment-1895629055:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/14356#issuecomment-1895629055,1,['test'],['test']
Testability,"The test failure is unrelated (and should be fixed by https://github.com/root-project/root/pull/8352), merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8349#issuecomment-855884266:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/8349#issuecomment-855884266,1,['test'],['test']
Testability,The test failure is unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/953#issuecomment-327518536:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/953#issuecomment-327518536,1,['test'],['test']
Testability,The test failure is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7914#issuecomment-822476558:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/7914#issuecomment-822476558,1,['test'],['test']
Testability,The test failure is unrelated. Merging...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4414#issuecomment-534549047:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/4414#issuecomment-534549047,1,['test'],['test']
Testability,The test failure of centos7/gcc49 is because that platform is lacking a BLAS installation and cannot run DNN. Should I remove the DNN from the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-358025605:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-358025605,2,['test'],['test']
Testability,"The test failure on Windows is real, @ikabadzhov can you please investigate with @bellenot 's help when you are back?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10607#issuecomment-1141231952:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/10607#issuecomment-1141231952,1,['test'],['test']
Testability,The test failure on fedora28/native are unrelated (likely race condition in cmake/ctest or lack of cleanup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424830883:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424830883,1,['test'],['test']
Testability,The test failure on mac13 is not due to the changes of this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16348#issuecomment-2324674072:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/16348#issuecomment-2324674072,1,['test'],['test']
Testability,"The test failure on macOS should be https://github.com/root-project/root/pull/9314, now backporting in https://github.com/root-project/root/pull/9408. Not sure about the failure on Ubuntu, but cannot be related to this PR since the changes only touch PPC, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9407#issuecomment-990824535:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/9407#issuecomment-990824535,1,['test'],['test']
Testability,"The test failure seems related to this PR, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1125#issuecomment-334084833:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1125#issuecomment-334084833,1,['test'],['test']
Testability,The test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3550#issuecomment-473619991:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/3550#issuecomment-473619991,1,['test'],['test']
Testability,"The test failure was related to this PR, the problem was with the `PUBLIC` keyword in combination with `INSTALL_INTERFACE`. I pushed an equivalent change that does not break the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-368563308:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-368563308,2,['test'],['test']
Testability,"The test failures are all due to "" Could not resolve host: github.com""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16624#issuecomment-2398117893:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/16624#issuecomment-2398117893,1,['test'],['test']
Testability,The test failures are due to infrastructure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6043#issuecomment-660543813:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/6043#issuecomment-660543813,1,['test'],['test']
Testability,The test failures are errors that were previously silent and are there at least since the switch to lexertk. Not sure what to do about them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3407#issuecomment-462061881:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/3407#issuecomment-462061881,1,['test'],['test']
Testability,"The test failures are just due to a reference that needs updating, will do asap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10653#issuecomment-1137776625:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/10653#issuecomment-1137776625,1,['test'],['test']
Testability,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-590248656:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-590248656,1,['test'],['test']
Testability,"The test failures are related, I will look again at `ReadObjectAny` internals.; I think some of the failures are harmless (a new line added to the log, e.g. `roottest-root-io-emulated-make` ), but some are perhaps real errors because I didn't call `ReadObjectAny` with `0` as an argument e.g. `roottest-root-io-cpp11Containers-unorderedSet`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-656284583:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-656284583,2,"['log', 'test']","['log', 'test']"
Testability,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519#issuecomment-701711449:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/6519#issuecomment-701711449,2,['test'],['test']
Testability,"The test failures are unrelated, are we ready to merge this @couet or you need to make further changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3676#issuecomment-483624530:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/3676#issuecomment-483624530,1,['test'],['test']
Testability,The test failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425667017:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425667017,1,['test'],['test']
Testability,The test failures are unrelated. This can be merged,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-780143074:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-780143074,1,['test'],['test']
Testability,"The test failures look real, @ikabadzhov can you take a look at what's going on?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10040#issuecomment-1059007431:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/10040#issuecomment-1059007431,1,['test'],['test']
Testability,The test failures related to `Report` are because of the check [here](https://github.com/dpiparo/root/blob/a298979465295915a17b2ef1b7e82afa81d51660/tree/treeplayer/inc/ROOT/TDFInterface.hxx#L1403-L1404). It's not true anymore that if `!fValidColumns.empty()` then the node is the result of a `TLoopManager` + at least one `Define`. Now the condition is `fValidColumns.size() > 1`. I wonder whether we could do something better there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1133#issuecomment-334287020:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1133#issuecomment-334287020,1,['test'],['test']
Testability,"The test failures report the file created during the test does not exist, but this node ran the test fine https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124359/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_enterrange/ . Probably using the same filename for multiple tests leads to a recreation/deletion of the file that is then not usable by the new test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-895859603:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-895859603,7,['test'],"['test', 'testReport', 'tests']"
Testability,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0.; In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5477#issuecomment-620689786:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/5477#issuecomment-620689786,2,['test'],"['test', 'tests']"
Testability,The test failures seems unrelated (library compilation/loading failure),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8228#issuecomment-848055016:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/8228#issuecomment-848055016,1,['test'],['test']
Testability,"The test h2 shows how to generated animated gif from snapshots of the canvas without taking a lock (but by using the gThreadXAR mechanism ... which we probably need to (eventually) 'replace'). If there is no easy and/or clear translation of this example, I recommend we keep it until such a time where we have a clear replacement. Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1531#issuecomment-359073042:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1531#issuecomment-359073042,1,['test'],['test']
Testability,The test hit a timeout (***Timeout 3600.04 sec)... I hope it's not related to this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1352#issuecomment-346394726:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1352#issuecomment-346394726,1,['test'],['test']
Testability,"The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2832:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/2832,1,['test'],['test']
Testability,"The test is here https://github.com/root-project/roottest/pull/306 , builds are running :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3683#issuecomment-482494098:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/3683#issuecomment-482494098,1,['test'],['test']
Testability,"The test is wrong, and RDF has inferred the wrong type for columns like that since 6.18. https://github.com/root-project/roottest/pull/592 fixes the test (i.e. makes it red now, and green with this PR). Do you plan to backport these changes to v6.18/20/22? If not, I'll have to fix the type inference in those versions in some other way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6258#issuecomment-691068393:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/6258#issuecomment-691068393,2,['test'],['test']
Testability,"The test mentioned above was rewritten in order to pass in Experimental PyROOT.; What made the test passing in the current PyROOT and failing in the Experimental one is the absence in Cppyy of a converter function which works with Python objects of type NoneType and is fired in lines like the following:; `leg.AddEntry(L[0].Draw(), "" L_{0}(x)"", ""l"")`; The presence of this function basically splits the above command like the following: ; 1. the function is drawn on the canvas with the command; `L[0].Draw()`; 2. the entry is added to the legend with the command; `leg.AddEntry(None, "" L_{0}(x)"", ""l"")`; Since it's also conceptually wrong to put the Draw() method as argument of the AddEntry function, it was decided to do the two things separately with a loop over the elements of the L list.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4072:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/4072,2,['test'],['test']
Testability,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15449:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/15449,4,['test'],"['test', 'testRooCrystalBall', 'tested']"
Testability,"The test output is; ```; cd /mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc; /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"")' -e 'gROOT->SetMacroPath(""/mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/jenkins/workspace/root-pullrequests-build/build/externals//mnt/build/jenkins/workspace/root-pullrequests-build/install/include"")' -q -l -b /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/runrelpath.C; -- BEGIN TEST OUTPUT --. Processing /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/runrelpath.C...; In file included from <<< cling interactive line includer >>>:1:; /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/script.C:4:10: fatal error: 'nested_dir1.h' file not found; #include ""nested_dir1.h""; ^~~~~~~~~~~~~~~; ```. Just cd-ing there, starting ROOT and running the script might reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352393921:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352393921,2,"['TEST', 'test']","['TEST', 'test']"
Testability,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15824:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/15824,3,['test'],"['test', 'testing']"
Testability,The test roottest/root/meta/genreflex/ROOT-5768 currently include `boost` header files and thus is disable. This test the `--interpreteronly` flag of genreflex. See https://sft.its.cern.ch/jira/browse/ROOT-5768. The test needs to be trimmed down to no longer include the boost header files OR rewritten without them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11484:4,test,test,4,https://root.cern,https://github.com/root-project/root/issues/11484,3,['test'],['test']
Testability,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15286:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/15286,2,['test'],['test']
Testability,"The test should reuse the prebuilt modules in the module cache. However, due to a mismatch between the module-related flags exported by FindROOT. There is a mismatch between the -D passed by cmake. This patch make sure that the build arguments match more closely the build setup of ROOT. Thus we can reuse the already built module files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2545:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/2545,1,['test'],['test']
Testability,The test shows a regression (i.e. need fixing in the code),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11261#issuecomment-1230635674:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/11261#issuecomment-1230635674,1,['test'],['test']
Testability,The test succeeds with master (https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-handler/29326/console) and thus the failure is directly connected (however odd it looks).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863415572:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863415572,1,['test'],['test']
Testability,The test that creates the file must run before the test that modifies it,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5160:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/5160,2,['test'],['test']
Testability,The test times out. I do not see how that can be related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7494#issuecomment-797938881:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/7494#issuecomment-797938881,1,['test'],['test']
Testability,"The test used for these improvements is:. [multi.tar.gz](https://github.com/root-project/root/files/4989775/multi.tar.gz). The results below are dramatic enough to be revelant event-though they are just one 1 with 2 jobs running at the same time, one with N threads and another with 32-N threads on a 32 real core machine (so the machine is always at full capacity). before:; ```; threads: 1 items: 10 events: 40000000 time: 192.72 s; threads: 2 items: 10 events: 40000000 time: 211.41 s; threads: 3 items: 10 events: 40000000 time: 219.9 s; threads: 4 items: 10 events: 40000000 time: 212.033 s; threads: 5 items: 10 events: 40000000 time: 214.991 s; threads: 6 items: 10 events: 40000000 time: 220.459 s; threads: 7 items: 10 events: 40000000 time: 219.831 s; threads: 8 items: 10 events: 40000000 time: 236.328 s; threads: 9 items: 10 events: 40000000 time: 222.565 s; threads: 10 items: 10 events: 40000000 time: 224.154 s; threads: 11 items: 10 events: 40000000 time: 229.009 s; threads: 12 items: 10 events: 40000000 time: 232.501 s; threads: 13 items: 10 events: 40000000 time: 227.134 s; threads: 14 items: 10 events: 40000000 time: 225.087 s; threads: 15 items: 10 events: 40000000 time: 223.564 s; threads: 16 items: 10 events: 40000000 time: 270.977 s; threads: 16 items: 10 events: 40000000 time: 291.434 s; threads: 17 items: 10 events: 40000000 time: 298.618 s; threads: 18 items: 10 events: 40000000 time: 237.387 s; threads: 19 items: 10 events: 40000000 time: 434.656 s; threads: 20 items: 10 events: 40000000 time: 358.451 s; threads: 21 items: 10 events: 40000000 time: 364.873 s; threads: 22 items: 10 events: 40000000 time: 491.755 s; threads: 23 items: 10 events: 40000000 time: 404.095 s; threads: 24 items: 10 events: 40000000 time: 444.607 s; threads: 25 items: 10 events: 40000000 time: 577.3 s; threads: 26 items: 10 events: 40000000 time: 603.918 s; threads: 27 items: 10 events: 40000000 time: 349.925 s; threads: 28 items: 10 events: 40000000 time: 359.936 s; threads: 29",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/6062,1,['test'],['test']
Testability,"The test(s) (if small, self contained and leveraging googletest framework) can also go in tree/tree/test.; If in roottest, yes, it needs a separate PR (use the same branch name).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3463#issuecomment-467205403:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/3463#issuecomment-467205403,2,['test'],['test']
Testability,The testForeignDraw failure seems to be more subtil. It 'only' fails on 2 platforms. Do we understand why?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2775#issuecomment-430160653:4,test,testForeignDraw,4,https://root.cern,https://github.com/root-project/root/pull/2775#issuecomment-430160653,1,['test'],['testForeignDraw']
Testability,"The testcase in the description is actually wrong, it only reads starting from the first entry. A corrected / expanded version is:. ```C++; #include <TBufferFile.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>; #include <TKey.h>. void test() {; auto f = TFile::Open(""AO2D.root"");. for (auto&& keyAsObj : *f->GetListOfKeys()){; auto key = (TKey*) keyAsObj;; std::cout << key->GetName() << "" "" << key->GetClassName() << std::endl;; auto d = (TDirectoryFile*)f->Get(key->GetName());. if (key->GetName() == std::string(""metaData"")) {; continue;; }; std::cout << ""Reading DF "" << key->GetName() << std::endl;. char const *treeNames[] = {; ""O2trackextra_001"",; //""O2ambiguousfwdtr"",; //""O2ambiguousmfttr"",; //""O2ambiguoustrack"",; //""O2bc_001"",; //""O2calo"",; //""O2calotrigger"",; //""O2cascade_001"",; //""O2collision_001"",; //""O2cpvcluster"",; //""O2decay3body"",; //""O2fdd_001"",; //""O2ft0"",; //""O2fv0a"",; //""O2fwdtrack"",; //""O2fwdtrackcov"",; //""O2fwdtrkcl"",; //""O2hmpid_001"",; //""O2mccalolabel_001"",; //""O2mccollision"",; //""O2mccollisionlabel"",; //""O2mcfwdtracklabel"",; //""O2mcmfttracklabel"",; //""O2mcparticle_001"",; //""O2mctracklabel"",; //""O2mfttrack_001"",; //""O2origin"",; //""O2track_iu"",; //""O2trackcov_iu"",; //""O2tracked3body"",; //""O2trackedcascade"",; //""O2trackedv0"",; //""O2trackqa"",; //""O2v0_002"",; //""O2zdc_001"",; };. for (auto ti = 0; ti < sizeof(treeNames)/sizeof(void*); ti++) {; std::cout << ti << std::endl;; std::cout << "" "" << treeNames[ti] << std::endl;; auto t = (TTree*)d->Get(treeNames[ti]);; std::cout << t << std::endl;; if (t == nullptr) {; std::cout << ""Missing branch."" << treeNames[ti] << std::endl;; }; t->SetCacheSize(25000000);; t->SetClusterPrefetch(true);; auto branchList = t->GetListOfBranches();; for (size_t bi = 0; bi < branchList->GetSize(); bi++) {; t->AddBranchToCache((TBranch*)branchList->At(bi));; }; t->StopCacheLearningPhase();; static TBufferFile buf(TBuffer::EMode::kWrite, 4*1024*1024);; for (auto bi = 0; bi < branchList->GetEntries(); ++bi) {; auto b ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8962#issuecomment-2399579753:4,test,testcase,4,https://root.cern,https://github.com/root-project/root/issues/8962#issuecomment-2399579753,2,['test'],"['test', 'testcase']"
Testability,"The testing condition was wrong for 32bit builds, see last commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-879779688:4,test,testing,4,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-879779688,1,['test'],['testing']
Testability,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14648#issuecomment-1938200127:4,test,testing,4,https://root.cern,https://github.com/root-project/root/pull/14648#issuecomment-1938200127,1,['test'],['testing']
Testability,"The tests fail because of the mistake above. I am about to make this right and add everything to the PCH, including TClassEdit (as it was done before).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1042#issuecomment-331630302:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/1042#issuecomment-331630302,1,['test'],['tests']
Testability,The tests failed on fedora38 are unrelated:; ```console; The following tests FAILED:; 	106 - gtest-core-metacling-test-TClingLoadUnloadFile (Failed); 	116 - test-webgui-ping (Failed); 	1095 - tutorial-rcanvas-rline.cxx (Failed); 	1187 - tutorial-rcanvas-df104-py (Failed); 	1188 - tutorial-rcanvas-df105-py (Failed); 	1577 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13371#issuecomment-1662021455:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/13371#issuecomment-1662021455,4,['test'],"['test-TClingLoadUnloadFile', 'test-webgui-ping', 'tests']"
Testability,"The tests for TFoam ended up in the wrong location, since; add_subdirectory is not setting the required property.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5434:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/5434,1,['test'],['tests']
Testability,The tests for this pr are in PR1148 (test driven development!),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1308:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/1308,2,['test'],"['test', 'tests']"
Testability,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14003#issuecomment-1892045270:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/14003#issuecomment-1892045270,2,['test'],"['tested', 'tests']"
Testability,"The tests that are added in this PR work with Cl, but there are still failures because of this:; * https://github.com/vgvassilev/clad/issues/890. It seems the numeric-diff fallback mode doesn't get that much test coverage in Clad, because many of the issues I opened there are related to it. Is it still supported? Should I try to absolutely avoid num diff fallback in the models?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15491#issuecomment-2107150086:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/15491#issuecomment-2107150086,2,['test'],"['test', 'tests']"
Testability,"The tests that failed are all timed out as far as I can tell.; I think it's safe to merge (and if worse comes to worst, it's trivial to revert).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1654#issuecomment-367116753:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/1654#issuecomment-367116753,1,['test'],['tests']
Testability,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633#issuecomment-486678842:4,test,tests,4,https://root.cern,https://github.com/root-project/root/pull/3633#issuecomment-486678842,2,['test'],"['tested', 'tests']"
Testability,"The things we need to do before merging this PR and can probably be done by various people in parallel. Cling standalone:; - [x] Fix cling CUDA tests; - [ ] Fix the remaining test failures (6, see below); - [x] Revert the commit 'FIXME: Undo this change and debug why we have PendingInstances.'. <details>; <summary>Cling test failures</summary>. Failures in `master` on my system:; ```; Cling :: CodeUnloading/PCH/VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 56",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:144,test,tests,144,https://root.cern,https://github.com/root-project/root/pull/10294,3,['test'],"['test', 'tests']"
Testability,The three failed JupyROOT tests have nothing to do with this PR (a node configuration problem).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8528#issuecomment-867648403:26,test,tests,26,https://root.cern,https://github.com/root-project/root/pull/8528#issuecomment-867648403,1,['test'],['tests']
Testability,"The two JupyROOT test failures are not caused by this PR, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5570#issuecomment-625684626:17,test,test,17,https://root.cern,https://github.com/root-project/root/pull/5570#issuecomment-625684626,1,['test'],['test']
Testability,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8065:715,test,test,715,https://root.cern,https://github.com/root-project/root/pull/8065,1,['test'],['test']
Testability,"The two failing Jenkins tests are not related to this PR, correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-880912827:24,test,tests,24,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-880912827,1,['test'],['tests']
Testability,"The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added.; Commits that fixed the tests:; 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b; f45d07c7a0b2414159e81a957a4fe86afc63fa87; f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3980:8,test,tests,8,https://root.cern,https://github.com/root-project/root/pull/3980,2,['test'],['tests']
Testability,"The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:220,test,tested,220,https://root.cern,https://github.com/root-project/root/pull/10192,1,['test'],['tested']
Testability,"The unit test also needed updating, now done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5505#issuecomment-621732907:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/5505#issuecomment-621732907,1,['test'],['test']
Testability,The unit test breaks layering and does not test anything that is not already tested in the RDataFrame RNTuple data source unit test. Follow-up from https://github.com/root-project/root/pull/13351#pullrequestreview-1553707387,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13355:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/13355,4,['test'],"['test', 'tested']"
Testability,"The unit test for RooWorkspace tests failures when importing models into the workspace.; Since RooFit will print `ERROR` messages, it looks like there is a problem in the test.; The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3379:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/3379,3,['test'],"['test', 'tests']"
Testability,The unit test that covers [ROOT-10483](https://sft.its.cern.ch/jira/browse/ROOT-10483) is implemented in https://github.com/root-project/root/pull/11485.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11476#issuecomment-1266267921:9,test,test,9,https://root.cern,https://github.com/root-project/root/issues/11476#issuecomment-1266267921,1,['test'],['test']
Testability,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:; 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197); 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image).; 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2050606767:244,test,test,244,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2050606767,4,['test'],"['test', 'tested', 'testing']"
Testability,The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3435:145,test,test,145,https://root.cern,https://github.com/root-project/root/pull/3435,4,['test'],"['test', 'tests']"
Testability,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14276:138,test,test,138,https://root.cern,https://github.com/root-project/root/pull/14276,5,"['log', 'test']","['log', 'test']"
Testability,The warning is visible e.g. with cmake 3.11:. CMake Warning (dev) in interpreter/CMakeLists.txt:; A logical block opening on the line. /data/ssdext4/rvec2/root/interpreter/CMakeLists.txt:477 (if). closes on the line. /data/ssdext4/rvec2/root/interpreter/CMakeLists.txt:483 (endif). with mis-matching arguments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8670:100,log,logical,100,https://root.cern,https://github.com/root-project/root/pull/8670,1,['log'],['logical']
Testability,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6459#issuecomment-698982326:57,test,test,57,https://root.cern,https://github.com/root-project/root/pull/6459#issuecomment-698982326,2,"['log', 'test']","['logic', 'test']"
Testability,"The window error are about git gc's failing to run:; ```; 18:55:18 error: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/logs/HEAD.lock': File exists.; 18:55:18 ; 18:55:18 Another git process seems to be running in this repository, e.g.; 18:55:18 an editor opened by 'git commit'. Please make sure all processes; 18:55:18 are terminated then try again. If it still fails, a git process; 18:55:18 may have crashed in this repository earlier:; 18:55:18 remove the file manually to continue.; ```; which seems to already have been forseen but the work-around was not extended enough?; ```; 18:54:57 -- Cleaning up possible lock files [rm -f .git/HEAD.lock] in C:/build/workspace/root-pullrequests-build_2/root; ```. Any way ... in the end the build actually suceeded:; ```; 20:45:01 ; 20:45:01 Processing hsimple.C...; 20:45:01 hsimple : Real Time = 0.30 seconds Cpu Time = 0.22 seconds; 20:45:01 (TFile *) 0xa21a568; 20:45:01 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 20:45:01 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 20:45:02 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 20:45:02 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 20:45:03 Command exited with the value: 0; 20:45:03 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount; 20:45:03 0 Compiler errors; 20:45:03 50 or more Compiler warnings; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4239#issuecomment-522708844:147,log,logs,147,https://root.cern,https://github.com/root-project/root/pull/4239#issuecomment-522708844,1,['log'],['logs']
Testability,"The windows ""error"" is spurious, caused by the error log parser matching the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-773865371:53,log,log,53,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-773865371,2,['log'],['log']
Testability,"The windows ""failure"" isn't a failure but had just a warning, which is the usual mis-parse of the commit log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11861#issuecomment-1396534330:105,log,log,105,https://root.cern,https://github.com/root-project/root/pull/11861#issuecomment-1396534330,1,['log'],['log']
Testability,The windows error is unrelated (hang in a test that does not use http).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725#issuecomment-816056438:42,test,test,42,https://root.cern,https://github.com/root-project/root/pull/7725#issuecomment-816056438,1,['test'],['test']
Testability,The windows failures is unrelated (test output file deleted before being closed in an unrelated test),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-815001376:35,test,test,35,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-815001376,2,['test'],['test']
Testability,The windows test errors seems unusual and the actual error are not obvious. We should re-run them before merging to check if it is just a transient issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551#issuecomment-1276753455:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/11551#issuecomment-1276753455,1,['test'],['test']
Testability,The windows test failure shows up also elsewhere (@bellenot FYI maybe you have a nice idea how to work around it). The ping test failure seems unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13243#issuecomment-1669562875:12,test,test,12,https://root.cern,https://github.com/root-project/root/pull/13243#issuecomment-1669562875,2,['test'],['test']
Testability,The work @dpiparo has done has been merged into this branch:; * trivial data-source implementation: has just one column that contains the entry number; * ROOT data-source implementation: allows reading ROOT files via the data-source interface; * documentation for `TDataSource`; * google tests for both data-sources. Thanks Danilo!!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/983#issuecomment-330487106:288,test,tests,288,https://root.cern,https://github.com/root-project/root/pull/983#issuecomment-330487106,1,['test'],['tests']
Testability,"The ~~test~~ compilation failures are real (locally I was building without RooFit), work in progress :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8353#issuecomment-855807611:6,test,test,6,https://root.cern,https://github.com/root-project/root/pull/8353#issuecomment-855807611,1,['test'],['test']
Testability,"Then I vote for the explicit option :) Another reason we want an option is that we can have defaults, which are always overwritten if the build option is set explicitely. This allows you to have a debug build without asserts, if you like.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560#issuecomment-704229844:217,assert,asserts,217,https://root.cern,https://github.com/root-project/root/pull/6560#issuecomment-704229844,1,['assert'],['asserts']
Testability,There are a few errors left. Do they need an update of the test (and/or reference file) or a fix in rootlcing/genreflex?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-321348145:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-321348145,1,['test'],['test']
Testability,"There are different overloads of `RooFit::Import()` for importing different object types to RooFit dataset classes. However, they return a `RooCmdArg` that is named after the type of the imported object. That causes some inconsistencies. For example, if you import a map of `std::unique_ptr<RooDataHist>`, the name will be different than for `RooDataHist*` because there is a special overload for the latter. It is better to fixup this inconsistency, and then disentangle the different types in the functions that consume these `RooFit::Import()` command arguments. This caused some trouble when importing RooDataHists into a combined dataset, which is why this fix is coming now. These changes are covered by the tutorial tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13629:723,test,tests,723,https://root.cern,https://github.com/root-project/root/pull/13629,1,['test'],['tests']
Testability,"There are generic pythonizations to be added. I've started with the pretty printing feature. Additionally, I've added a `test` directory with the unit-tests and adjusted the build system. More generic possible pythonizations:. - `__cppname__` attribute (It vanished in the new cppyy? I could do a workaround/pythonization.); - Ideas?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2266:121,test,test,121,https://root.cern,https://github.com/root-project/root/pull/2266,2,['test'],"['test', 'tests']"
Testability,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. ; I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4041#issuecomment-508670401:203,test,tested,203,https://root.cern,https://github.com/root-project/root/pull/4041#issuecomment-508670401,1,['test'],['tested']
Testability,There are many errors in python testing - no idea if it has something to do with that PR?; I can provide separate small bugfix for TGLManager::Instance only,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423283981:32,test,testing,32,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423283981,1,['test'],['testing']
Testability,"There are three ways to get the code of latest-stable:; a) git clone as suggested by https://root.cern/install/: 1.4GiB; b) git clone with --depth=20: 673MiB; c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10238:299,test,testing,299,https://root.cern,https://github.com/root-project/root/issues/10238,1,['test'],['testing']
Testability,"There are two issues:. 1. Snapshot does not de-duplicate columns from data-sources and columns from Redefines when deciding which columns to write out; 2. the logic in Snapshot that creates output branches assumes that if there is an input branch for column ""x"", then that _must_ be what we want to write out (which was the case until `Redefine` was introduced) . 1 is easy to fix, I'm now looking into fixing 2. We definitely want these fixes in 6.26.02.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233#issuecomment-1082788182:159,log,logic,159,https://root.cern,https://github.com/root-project/root/issues/10233#issuecomment-1082788182,1,['log'],['logic']
Testability,"There are two overloads of RooAbsCollection::addClone():. - RooAbsArg *addClone(const RooAbsArg& var, bool silent=false);; - void addClone(const RooAbsCollection& list, bool silent=false);. In the case of the RooAbsArg overload, we need to tell Python that it; doesn't own the returned pointer. That's because the function name; contains ""Clone"", which makes cppyy guess that the returned pointer; points to a clone owned by the caller. In the case of the; RooAbsCollection input, the return value will be `None` and we don't; need to change any ownership flags (in fact, calling; SetOwnership(None, False) would cause a crash). The check for the `None` return value was so far not done in the; pythonization and is added with this commit. A unit test was also added to check that the RooAbsCollection overloads; both work. This commit fixes the following Jira issue for good:; [ROOT-9580](https://sft.its.cern.ch/jira/browse/ROOT-9580).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10874:747,test,test,747,https://root.cern,https://github.com/root-project/root/pull/10874,1,['test'],['test']
Testability,"There are two parts to this:; - for this PR to be correctly validated we need to have tested a setup where the build directory is not available anymore at runtime. Does CMS test this, @smuzaffar @vgvassilev ?; - we should have a dedicated test for this in ROOT (as standalone cling doesn't use modules). Do we?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1139421018:86,test,tested,86,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1139421018,3,['test'],"['test', 'tested']"
Testability,"There can be multiple attributes in the forward declaration, see the added test in [`roottest/cling/dict/enum`](https://github.com/root-project/roottest/pull/986) (reduced from a case reported by CMS in https://github.com/cms-sw/cmssw/issues/42234), so we have to look for the last closing parentheses.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13319:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/13319,1,['test'],['test']
