quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"Hi @dpiparo, Thanks for pointing me to the failure. This PR removes the DNN implementation that causes this issue from the publicly visible examples. This since we are aware of problems in this implementation. There should be a TMVA Dev meeting tomorrow where I will bring this conversation up . You can consider me as looking into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/600#issuecomment-305468209:43,failure,failure,43,https://root.cern,https://github.com/root-project/root/pull/600#issuecomment-305468209,1,['failure'],['failure']
Availability,"Hi @dpiparo, thanks for you comment! I found the problem by removing this line:; https://github.com/root-project/root/blob/master/math/mathcore/inc/Math/Types.h#L12; ```c++; #pragma GCC diagnostic ignored ""-Warray-bounds""; ```; And then building ROOT with [treating warnings like errors](https://stackoverflow.com/questions/73215417/cmake-treat-warnings-as-errors). > Is there a way to know whether we have others hiding somewhere else?. Now there is, because with this PR I also remove the `#pragma GCC diagnostic ignored ""-Warray-bounds""`. So apparently, there are no other array-bounds problem of this sort at the moment, as it compiled for me with treating errors as warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13772#issuecomment-1743513170:280,error,errors,280,https://root.cern,https://github.com/root-project/root/pull/13772#issuecomment-1743513170,3,['error'],['errors']
Availability,"Hi @dpiparo,. I was trying to see if it would be easy to contribute to the VDT source. But apparently not. 😦. As far as I could find (http://lcginfo.cern.ch/pkg/vdt/), the code is maintained on: ; https://svnweb.cern.ch/trac/vdt But that site is down at the moment. And in any case, shouldn't that code have moved to git a while ago? Unfortunately I didn't find it on gitlab.cern.ch, so at this point I'm not sure where the code sits these days... Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829#issuecomment-432232161:246,down,down,246,https://root.cern,https://github.com/root-project/root/pull/2829#issuecomment-432232161,1,['down'],['down']
Availability,"Hi @dpiparo. There was a copy-paste error for the command to run which is now corrected. But I am puzzled why you see these Tcl errors (maybe @ktf could comment). I am literally only doing `ssh lxplus7.cern.ch` + executing the above lines inside `/tmp/swenzel`. There is also nothing peculiar in my .bashrc and I checked that it even works inside `env -i bash --noprofile --norc` ... so that remains puzzling. For the record, I was on lxplus713.cern.ch for these checks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579#issuecomment-2157708032:36,error,error,36,https://root.cern,https://github.com/root-project/root/issues/15579#issuecomment-2157708032,2,['error'],"['error', 'errors']"
Availability,"Hi @edfink234, thanks for the PR and thanks to @hageboeck for reminding that these `test/rf*.cxx` files are redundant! The tutorials are already tested in unit tests in `stressRooFit`, so we don't need them again in `test`. These files are also badly out of sync, as the last non-trivial change to them was almost 10 years ago. I opened a follow-up PR with the deletion of these files:. https://github.com/root-project/root/pull/11361. This PR can hence be closed, and the translation of the tutorial will be followed up here: https://github.com/root-project/root/pull/9218",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8965#issuecomment-1246546761:108,redundant,redundant,108,https://root.cern,https://github.com/root-project/root/pull/8965#issuecomment-1246546761,1,['redundant'],['redundant']
Availability,"Hi @egpbos, thanks a lot for the updates and great that everything now passes with the CI! I can also build ROOT on my system successfully with the new `zeromq` and `cppzmq` builtins that you introduced. However, I still have problems builting without the builtins, taking zeromq from the system. I installed zeromq from the GitHub master on my system, to make sure I have `zmq_ppoll`. One problem is that the check for the `zmq_ppoll` symbol doesn't seem to work (see inline comment above), and then the configuration fails with the following error:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package):; By not providing ""Findcppzmq.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""cppzmq"", but; CMake did not find one. Could not find a package configuration file provided by ""cppzmq"" with any; of the following names:. cppzmqConfig.cmake; cppzmq-config.cmake. Add the installation prefix of ""cppzmq"" to CMAKE_PREFIX_PATH or set; ""cppzmq_DIR"" to a directory containing one of the above files. If ""cppzmq""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:1927 (find_package); CMakeLists.txt:245 (include). -- Configuring incomplete, errors occurred!; ```; Is it really reasonable to expect a `cppzmqConfig.cmake` on the system, just for this `zmq.hxx` header that is most likely in the same directory as `zmq.h` anyway?. Maybe there are some specific subtleties on my system that cause the build configuration not to work. Let's see with the CI when we disable builtins but enable roofit_multiprocess. What I would expect is that the configuration realized that an appropriate zeromq version is missing, and it switches to the builtins automatically right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-975317262:544,error,error,544,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-975317262,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Hi @egpbos, thanks for the PR! Does it makes sense for me to review already now, or you first want to fix the test failure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627#issuecomment-1291820425:115,failure,failure,115,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1291820425,1,['failure'],['failure']
Availability,"Hi @egpbos, thanks for the review! You are right, the batch mode stuff should better be tested somewhere else, so I removed some commits from this PR. What is left in this PR is the question about the constrain settings that might not make sense. Let's discuss this in the next RooFit meeting then!. What I ultimately want to achieve is that RooFit prints errors if you have constrained settings that statistically don't make sense, to reduce the potential for user error. That means we can't have ""unphysical"" fits in our tests too, otherwise they would fail eventually from these error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11804#issuecomment-1339003559:356,error,errors,356,https://root.cern,https://github.com/root-project/root/pull/11804#issuecomment-1339003559,3,['error'],"['error', 'errors']"
Availability,"Hi @eguiraud and @Axel-Naumann,. Actually, this is an instance of vexing parse. Specifically, in the context where `bool(foo)` appears, it is parsed as a variable declaration with superfluous parenthesis, i.e. same as `bool foo`. Because definition shadowing is enabled, it replaces the old definition (of type `int`) and value-initializes it to `false`, which explains your first reported result.; Moreover, using `!!bool(foo)` disambiguates the input, which is now parsed as an expression and correctly prints `true`. The behavior seen in the second report is again due to vexing parse, and `bool(foo[0])` is parsed as the declaration `bool foo[0];`. Again, switching off definition shadowing gives:; ```; ROOT_prompt_3:1:6: error: redefinition of 'foo' with a different type: 'bool ([0]' vs 'const char *'; bool(foo[0]); ^; ROOT_prompt_1:1:13: note: previous definition is here; const char *foo = ""foo"";; ```; In this case, the output `(bool ([0]) @0x55c4ba66f180` is the address of the `bool [0]` object (whose size should be `1`). > Also note that the last example is missing a closing `)` for the type... Also, as can be seen above, the diagnostic message provided by Clang has one extra `(`, which I think should not be there. Now, what can we do about this? IMHO, while I think _that_ is the correct parsing, we should be probably issuing a warning. Any opinions on this? . Cheers,; Javier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8304#issuecomment-865019504:727,error,error,727,https://root.cern,https://github.com/root-project/root/issues/8304#issuecomment-865019504,1,['error'],['error']
Availability,"Hi @eguiraud, thanks for the review and the comments! I addressed almost all of them, except for the ones related to the destructors. There are three options we have for the overriding destructors, and there are arguments against all of them:. 1. Add `override` as suggested by `clang-tidy`, which you don't like because it appears redundant; 2. Adding nothing, but then removing the base class would break downsteam inheritance; 3. Adding `virtual`, but this implies that it's the first function in the override chain. Let me know what you want me to do! Personally, I'm for doing what clang-tidy wants :). Clang tidy suggests to add `override` to the constructor if it overrides a base class,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11285#issuecomment-1264412131:332,redundant,redundant,332,https://root.cern,https://github.com/root-project/root/pull/11285#issuecomment-1264412131,2,"['down', 'redundant']","['downsteam', 'redundant']"
Availability,"Hi @eguiraud,. Yes, it's puzzling. Here is the closest I came up with to reproduce it in the prompt - I haven't run it in `pytest` yet: . ```python; >>> compiler(; ... """"""; ... struct TwoPtrs {; ... int* b;; ... int* a;; ... };; ... """"""); True; >>> df = ROOT.RDataFrame(1).Define(""x"", ""return TwoPtrs{new int(3), new int(4)}""); >>> df.Describe().Print(); Empty dataframe filling 1 row. Property Value; -------- -----; Columns in total 1; Columns from defines 1; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; x TwoPtrs Define>>> ; >>> df.Snapshot(""X"", ""xxx.root"", (""x"",)); Error in <TStreamerInfo::Build>: TwoPtrs, discarding: int* b, no [dimension]. Error in <TStreamerInfo::Build>: TwoPtrs, discarding: int* a, no [dimension]. <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7fca1e796710>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602#issuecomment-1285406448:605,Error,Error,605,https://root.cern,https://github.com/root-project/root/issues/11602#issuecomment-1285406448,2,['Error'],['Error']
Availability,"Hi @erothe , 5.34 is not supported anymore other than for critical (i.e. physics-breaking) bugs. For 6.24, configure/make is not available but cmake should let you disable what you want. You might need to pass `-Dfail-on-missing=ON` to prevent ROOT from turning things back on when it sees they are needed. Assigning to our build system expert @oshadura , but if this is about 5.34 I am not sure we can offer a solution unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424#issuecomment-861298291:129,avail,available,129,https://root.cern,https://github.com/root-project/root/issues/8424#issuecomment-861298291,1,['avail'],['available']
Availability,"Hi @etejedor , perfect. The test failures are unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1903#issuecomment-383869818:33,failure,failures,33,https://root.cern,https://github.com/root-project/root/pull/1903#issuecomment-383869818,1,['failure'],['failures']
Availability,"Hi @etejedor @dpiparo - I've implemented all your requests. Now all files should have the desired header, the `if __name__ == ""__main__"":` parts are removed, and whenever there are print statements, I've made sure that they are compatible with both python2 and 3. Remaining issues:; - Not working: 107, 109, 508; - 513 has invalid PDF; - 80X fail with `malloc: *** error for object xxx: pointer being freed was not allocated` - but work in general, it's just because of the `ROOT.gDirectory.Add(mcs)` statements at the end. I would nevertheless suggest to (squash) merge all this now so that we can actually see the generated notebooks etc.; This would make it easier for others to contribute and fix things as well. I'll create JIRA issues in the next couple of days for the problems in 107, 109, 508.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1522#issuecomment-411039902:365,error,error,365,https://root.cern,https://github.com/root-project/root/pull/1522#issuecomment-411039902,1,['error'],['error']
Availability,"Hi @etejedor, thank's for taking care of this! I lack the technical knowledge to really isolate which circumstances lead to this error, that's why I described my use case with the python unit testing. Do you need some more details on what is exactly happening? Unfortunately I don't really have time do do some research on this this week thought...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595#issuecomment-476557825:129,error,error,129,https://root.cern,https://github.com/root-project/root/pull/3595#issuecomment-476557825,1,['error'],['error']
Availability,"Hi @ethereal-space-cadet16 ,. Unfortunately without seeing the code you tried to run, your OS, Python version and ROOT version, it's hard to understand the actual cause of the crash. Let's start easy. You said you tried conda, did you explicitly try the instructions at https://root.cern/install/#conda ?. ```; $ conda config --set channel_priority strict; $ conda create -c conda-forge --name myenv root; $ conda activate myenv; ```; Then, after the command above runs succesfully, I will take the first example available from the document you link, that is:. ```python; import ROOT; print(""This is my script""); ```. If this two steps still lead to errors or crashes please report back, with your OS, Python version (the one that conda uses), the output of `echo $PYTHONPATH`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1142076274:513,avail,available,513,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1142076274,3,"['avail', 'echo', 'error']","['available', 'echo', 'errors']"
Availability,"Hi @ferdymercury , I think I have found what is causing the error. I believe that [here](https://github.com/root-project/root/blob/47ab543e812553fd5404bd7e34e27b905a66e581/main/src/hadd.cxx#L546C12-L546C17) the `argc` argument must be replaced with `filesToProcess` when an indirect file is present. I made a quick test and it worked fine, but maybe it's better if you experts could take a closer look into that",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1985500342:60,error,error,60,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1985500342,1,['error'],['error']
Availability,"Hi @gganis, can you try the current state of this PR. I am pretty sure it will fix it. However, that is a workaround and I'd like to debug it. Can you suggest how to debug such a failure with ROOT being compiled with `-DLLVM_BUILD_TYPE=Debug`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9641#issuecomment-1020240042:179,failure,failure,179,https://root.cern,https://github.com/root-project/root/pull/9641#issuecomment-1020240042,1,['failure'],['failure']
Availability,"Hi @giraudpf, sorry for the long silence on this. I can reproduce the problem and can confirm it happens in the latest `master` and GCC 13.2.0 as well. Interestingly, everything is fine once `test.cpp+` has been compiled, ie if you start a fresh `root` prompt and input `.L test.cpp+` again. The error comes from; https://github.com/root-project/root/blob/0865d47e019470bc714d8166a376706c317de4e2/core/metacling/src/TCling.cxx#L3909; declaring; ```c++; #ifndef ROOT_INTERNAL_TEmulated_TEmulatedTuplelEfilesystemcLcLpathcLcL_ListcLcL_ImplmUcOfilesystemcLcLpathcLcL_ListcLcL_Impl_deletergR ; #define ROOT_INTERNAL_TEmulated_TEmulatedTuplelEfilesystemcLcLpathcLcL_ListcLcL_ImplmUcOfilesystemcLcLpathcLcL_ListcLcL_Impl_deletergR ; namespace ROOT { namespace Internal {; template <class... Types> struct TEmulatedTuple;; template <> struct TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter> { ; filesystem::path::_List::_Impl_deleter _1;; filesystem::path::_List::_Impl* _0;; };; }}; #endif; ```. Adding @pcanal as the original author of `AtlernateTuple` - I guess we shouldn't be doing this for private members, such as of `std::filesystem::path`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574#issuecomment-1757489428:296,error,error,296,https://root.cern,https://github.com/root-project/root/issues/13574#issuecomment-1757489428,1,['error'],['error']
Availability,"Hi @goi42, thanks for opening the issue and providing the code. I could not reproduce your compilation error word-by-work in my ROOT 6.22 environment, but indeed I got an error as well. In your code, I noticed you run:; ```Python; r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""); ```; This [website about cling](https://root.cern/cling/) says that `.x` loads the file and then runs the function called `RooSDSCBShape` if it exists. I think it's better to use `.L`. That would be the constructor in this case, which you don't want to run. For me, I also get an error that functions are defined already when I load the `cxx` file. So writing this line instead works for me:; ```Python; r.gROOT.ProcessLine("".L RooSDSCBShape.h""); ```. Could you please let me know if this also works for you?. On a sidenote: your custom class `SDSCBShape` is just a crystal ball with a single non-Gaussian tail on the right, no? We are working to shipping such a release also with the next ROOT version (see https://github.com/root-project/root/issues/7258), so you might not have to go through this custom-classes hassle anymore in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782156378:103,error,error,103,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782156378,3,['error'],['error']
Availability,"Hi @goi42,; thank you for the PR! Do I understand correctly the usecase -- that you have a file with many trees/objects inside and you want to rewrite just one of them?. Namecycles are typically harmless, and the one with the highest index is the ""true"" object you get when you extract it from the file. Why don't you want namecycles? Is the problem that the data retrieved after a sequence of Snapshots like these not what you expect? Can you provide a reproducer in the form of a unit test added to dataframe's gtests (under `tree/dataframe/test`). EDIT: I'm not 100% convinced we need this PR, but a test would convince me!. It also looks like these build errors are due to the PR -- ~~it seems like the changes are not backward-compatible..?~~ Indeed adding a required argument to a constructor is not a backward-compatible change. It should at least have a default value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4965#issuecomment-585100603:659,error,errors,659,https://root.cern,https://github.com/root-project/root/pull/4965#issuecomment-585100603,1,['error'],['errors']
Availability,"Hi @guitargeek , did you have time to look into this -- or maybe one of the reviewers? I don't have access to a mac, so I can't help troubleshooting these build failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10553#issuecomment-1128524502:161,failure,failures,161,https://root.cern,https://github.com/root-project/root/pull/10553#issuecomment-1128524502,1,['failure'],['failures']
Availability,"Hi @guitargeek ,; Thanks for your response. Unfortunately as I mentioned in the description, I am also seeing a seg fault when using the RooMomentMorphFuncND class (though the error message is not the same as above related to the Grid being saved). ; I am only able to write this class to a workspace using the 1D versions - **not** the ND. . Below you can find the example code I'm using to test the RooMomentMorphFuncND class, which creates the seg fault. ; ```c++; #include <iostream>; #include <fstream>; #include<TRandom.h>. float input_lambda(float width){; 	return -6.347e-07*width*width+0.0015*width+1.835;; }. void exampleND_v2(){; auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);. 	myy->setBins(450.);. 	auto w = new RooWorkspace(""w"");. 	auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);; 	for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}; 	auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);; 	for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}; 	hist_1->Scale(1./hist_1->Integral());; 	hist_400->Scale(1./hist_400->Integral());. 	auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);; 	auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_func_1 = new RooHistFunc(""hist_func_1"", ""hist_func_1"", RooArgList(*myy), *data_sig_1);; auto hist_func_400 = new RooHistFunc(""hist_func_400"", ""hist_func_400"", RooArgList(*myy), *data_sig_400);. 	std::vector<float> Lambda_list = {1., 400.};; 	auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);. 	auto paramVec = TVectorD(2);. 	for (int j = 0; j < 2; ++j){; 		paramVec[j] = Lambda_list[j];; 	}. 	auto morph_ND = new RooMomentMorphFuncND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_func_1, *hist_func_400), paramVec, RooMomentMorphFuncND::Linear);. 	morph_ND->Print();; 	w->import(*morph_ND);; 	w->Print();; 	w->writeToF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876#issuecomment-1384255590:116,fault,fault,116,https://root.cern,https://github.com/root-project/root/issues/11876#issuecomment-1384255590,3,"['error', 'fault']","['error', 'fault']"
Availability,"Hi @guitargeek, I've included your suggested changes. Note that I've kept the default dtor in the RooMinimizer.h. Deleting that gives the error:. `unique_ptr.h:50:19: error: invalid application of 'sizeof' to an incomplete type`. The issue is explained further in the following thread, and the easiest solution seems to be to just leave the default destructor in there explicitly: https://stackoverflow.com/questions/34072862/why-is-error-invalid-application-of-sizeof-to-an-incomplete-type-using-uniqu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577#issuecomment-1281036923:138,error,error,138,https://root.cern,https://github.com/root-project/root/pull/11577#issuecomment-1281036923,3,['error'],"['error', 'error-invalid-application-of-sizeof-to-an-incomplete-type-using-uniqu']"
Availability,"Hi @guitargeek, do I need to look into these windows errors? Do we expect this to work on windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791#issuecomment-1344249449:53,error,errors,53,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1344249449,1,['error'],['errors']
Availability,"Hi @guitargeek,. Thank you very much for updating the code! Just for my understanding, do the changes also fix the seg fault in`MakeModelAndMeasurementFast`? The seg fault seem to happen only in 6.26 and not in 6.24.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10840#issuecomment-1172914098:119,fault,fault,119,https://root.cern,https://github.com/root-project/root/issues/10840#issuecomment-1172914098,2,['fault'],['fault']
Availability,"Hi @guitargeek,. Thanks for looking into this. Unfortunately, I have the same error after making the changes you suggest. ```python; import os. import ROOT as r. # declare PDF; r.gROOT.ProcessLine("".L RooSDSCBShape.h""). # manually set Decl and Impl files; cls = r.TClass.GetClass(""RooSDSCBShape""); cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0); cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace; ws = r.RooWorkspace(""ws""); ws.addClassDeclImportDir(os.getcwd()); ws.addClassImplImportDir(os.getcwd()); ws.importClassCode(cls); ws.writeToFile(""test.root""). # extract the class from the workspace; f = r.TFile.Open(""test.root""); inws = f.Get(""ws""); ```; results in; ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /Users/michael/Downloads/RooSDSCBShape.cxx and /Users/michael/Downloads/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/michael/Downloads/.wscode.4edcf1dc-72c9-11eb-94e5-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782161773:78,error,error,78,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782161773,1,['error'],['error']
Availability,"Hi @hageboeck, thanks a lot for the quick fix! About your naming problem:. > I'm not happy with the naming. The folder is `core/test_support`, the library `ROOT::ROOTTestSupport`, but the namespace and the header are historically named `ROOTUnitTestSupport`. Which one?. This would be my reasoning:; 0) Assuming that no user uses the test support library, only us in `root-project` repos so we can do namespace changes ; 1) Looking at the the other libraries in `core`, the folder names are all concatenated without any delimiter (`rootcling_stage` is the only exception).; 2) Historical names are not important anymore (at least for the git history) because the files are move anyway.; 3) If you propose to name the library `ROOT::ROOTTestSupport`, is `ROOT` not redundant?. So I would go for folder `core/testsupport`, both library and namespace `ROOT::TestSupport`, and the header file moves from `ROOTUnitTestSupport.h` to `inc/ROOT/TestSupport.hxx`. This would follow the example set by [`core/foundation`](https://github.com/root-project/root/tree/master/core/foundation), which I consider as a modern ROOT library where everything is done correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9528#issuecomment-1009850853:764,redundant,redundant,764,https://root.cern,https://github.com/root-project/root/pull/9528#issuecomment-1009850853,1,['redundant'],['redundant']
Availability,"Hi @hahnjo , I found some time to look into it and have a question since the build system around the dict generation is a bit complicated: where would be the place to add library dependencies for rootcling_stage1 ?; specifically the problem is:; `; [ 78%] Linking CXX executable src/rootcling_stage1; [ 78%] Built target Cling; ld: error: undefined symbol: procstat_open_sysctl; >>> referenced by rootcling_impl.cxx; >>> ../dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o:(GetExePath()). ld: error: undefined symbol: kinfo_getproc; >>> referenced by rootcling_impl.cxx; >>> ../dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o:(GetExePath()). ld: error: undefined symbol: procstat_getpathname; >>> referenced by rootcling_impl.cxx; >>> ../dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o:(GetExePath()); c++: error: linker command failed with exit code 1 (use -v to see invocation); gmake[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:319: core/rootcling_stage1/src/rootcling_stage1] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:43752: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1551552492:332,error,error,332,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1551552492,7,"['Error', 'error']","['Error', 'error']"
Availability,"Hi @hahnjo! How does the failure look like exactly? Are they using the builtin xrootd or not? If not, would it make sense to open an issue in https://github.com/xrootd/xrootd if our old version of the `cmake` file worked better than the upstream one in this case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14170#issuecomment-1838160062:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/14170#issuecomment-1838160062,1,['failure'],['failure']
Availability,"Hi @hahnjo,. It is new error message, which signals that chrome or firefox browser are missing to run these tests properly. I could add extra checks in the RCanvas::SaveAs method that it do nothing in such case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13097#issuecomment-1611028795:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/13097#issuecomment-1611028795,1,['error'],['error']
Availability,"Hi @kholoimov thanks for the update! I have appended some small improvements, now it's ready to merge:; * add you to the list of contributors; * remove the output file with the TGraph and the fit result, since this is redundant with the Plot and the printout of the fit result. The point of the tutorial is not to show how to save stuff in a ROOT file.; * Code format; * take the `import ROOT` out of this try-catch block",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16323#issuecomment-2322932825:218,redundant,redundant,218,https://root.cern,https://github.com/root-project/root/pull/16323#issuecomment-2322932825,1,['redundant'],['redundant']
Availability,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:41,failure,failures,41,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,1,['failure'],['failures']
Availability,"Hi @ktf, yes. It's a checkout error. Let me do one thing...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-375800294:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-375800294,1,['error'],['error']
Availability,"Hi @lhames, following the deprecation procedure for RuntimeDyld we are hitting a few test failures. Some of them have things like `cling JIT session error: In graph cling-module-315-jitted-objectbuffer, section .eh_frame: relocation target ""DW.ref.__gxx_personality_v0"" at address 0x7f8d0b32f040 is out of range of Delta32 fixup at 0x7f8c6c00d7c3 (<anonymous block> @ 0x7f8c6c00d7b0 + 0x13)`. You can find more here: https://github.com/root-project/root/runs/28400824352. I am not sure what's our way forward here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14246#issuecomment-2272696779:90,failure,failures,90,https://root.cern,https://github.com/root-project/root/pull/14246#issuecomment-2272696779,2,"['error', 'failure']","['error', 'failures']"
Availability,"Hi @linev: that was fast, congrats. For this code, @couet is of course the best reviewer. Nevertheless I wonder if:; - Doxygen doc can be embedded from the start (it is in some places and it is not in others). In addition this is *the* opportunity to comment a backend properly.; - The code can be clang-formatted; - The copyright statemets can be made uniform; - The 70 commits are the right granularity (is the code compiling for each one of them?); - The guards such as https://github.com/root-project/root/pull/2780/files#diff-6865e4d715d527b6e139711e517617baR22 can be removed since we concluded they are useless; - ClassDef and ClassImp are needed; - The globbing of headers in the CMakeLists can be replaced by the explicit list (https://github.com/root-project/root/pull/2780/files#diff-9e914a256e005f48875c44e6aa1938faR5); - We need all these dictionaries and with streamers: https://github.com/root-project/root/pull/2780/files#diff-7ddd3257f2c65c9447eeb3aa2a14bcb5R1; - The code needs yet another read (https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR169 , https://github.com/root-project/root/pull/2780/files#diff-7f91457bd372590be2853b22673fd59dR216). With my comments above, I absolutely do not want to slow you down but perhaps try and reduce the future maintenance cost with a minimal investment today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2780#issuecomment-428698916:1269,down,down,1269,https://root.cern,https://github.com/root-project/root/pull/2780#issuecomment-428698916,2,"['down', 'mainten']","['down', 'maintenance']"
Availability,"Hi @lmoneta , do you have any idea what I need to do to fix this? I can't manage to reproduce the failure to build locally (and as mentioned the thing that's failing is not something I have changed... And for some reason the thing that has failed this time is different than the thing that failed in the build before even though nothing changed). Apologies and thank you again,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10760#issuecomment-1188631188:98,failure,failure,98,https://root.cern,https://github.com/root-project/root/pull/10760#issuecomment-1188631188,1,['failure'],['failure']
Availability,"Hi @lmoneta ,. Apologies for the double ping but is there anything you know I need to do to resolve this build failure? (as mentioned I can't manage to reproduce it locally, it builds just fine, and the file it's failing on is not one I have in any way edited)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10760#issuecomment-1175264193:40,ping,ping,40,https://root.cern,https://github.com/root-project/root/pull/10760#issuecomment-1175264193,2,"['failure', 'ping']","['failure', 'ping']"
Availability,"Hi @lmoneta ,. Apologies for the double ping on this, do you know why the build is failing here? I can't manage to replicate this failure locally, it builds just fine for me and the file it is failing on is not one I have edited. Cheers,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10760#issuecomment-1169443755:40,ping,ping,40,https://root.cern,https://github.com/root-project/root/pull/10760#issuecomment-1169443755,2,"['failure', 'ping']","['failure', 'ping']"
Availability,"Hi @lmoneta ,. Thanks very much, I'm a bit confused on the build failure, I can build it locally fine and I have not edited the file it is failing on ( rs602_HLFactoryCombinationexample.C ), is there something I need to change?. Cheers,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10760#issuecomment-1160437630:65,failure,failure,65,https://root.cern,https://github.com/root-project/root/pull/10760#issuecomment-1160437630,1,['failure'],['failure']
Availability,"Hi @lmoneta ,; Sorry for that. ; To be honest I was not too happy with using regex either, but that was the only thing I found that works and I limited it to case where the rule was mistyped. ; I feel the most robust solution may be to not change the original code, but make having no whitespace between } and "" a requirement. ; Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14716#issuecomment-1949981198:210,robust,robust,210,https://root.cern,https://github.com/root-project/root/pull/14716#issuecomment-1949981198,1,['robust'],['robust']
Availability,"Hi @lmoneta, this is just a ping in case you didn't see the other message -- there is obviously no rush, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087#issuecomment-769735462:28,ping,ping,28,https://root.cern,https://github.com/root-project/root/pull/7087#issuecomment-769735462,1,['ping'],['ping']
Availability,"Hi @mkrzewic, indeed ROOT currently does not compile on FreeBSD. The crash you are seeing is because `ROOTSYS` is not set, which is a (environment) variable that should be set automatically as needed. The port has a patch for this: https://github.com/freebsd/freebsd-ports/blob/cfa050b3a4535cce59341631524e758ce6fc0ba2/devel/root/files/patch-core_dictgen_src_rootcling__impl.cxx However, applying it doesn't actually work on FreeBSD 13.2 because the method enabled by the patch relies on `/proc` which is empty - as you say, this needs to migrate to a different method (in this case for finding the path of the current executable). Unfortunately, I fear that there are currently no resources available to support FreeBSD and then maintain it. If you want to give it a shot yourself, essentially cleaning up the available patches and properly submitting them, please feel free to ping me on the pull requests :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1542308668:692,avail,available,692,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1542308668,3,"['avail', 'ping']","['available', 'ping']"
Availability,Hi @omazapa ! Can you fork also roottest? That will prevent build failure (timeout) on Windows. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6935#issuecomment-742619715:66,failure,failure,66,https://root.cern,https://github.com/root-project/root/pull/6935#issuecomment-742619715,1,['failure'],['failure']
Availability,Hi @omazapa ; There is some minor error. I am working on it. Will do it ASAP.; Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/410#issuecomment-286700453:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/410#issuecomment-286700453,1,['error'],['error']
Availability,"Hi @oshadura , thanks for the investigation! One thing I do not understand is that both on an old gcc, 4.9/4.8, and on gcc 6, *-Ofast* seems to define *__FAST_MATH__*, at least on lxplus7:; ```; $ cat a.C ; #ifdef __FAST_MATH__; aaaa; #endif; $ g++ -o a -c a.C -O2; $ g++ -o a -c a.C -Ofast; a.C:2:1: error: ‘aaaa’ does not name a type; aaaa; ^~~~; $ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/cvmfs/sft.cern.ch/lcg/external/gcc/6.2.0native/x86_64-centos7/bin/../libexec/gcc/x86_64-pc-linux-gnu/6.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../gcc-6.2.0/configure --prefix=/build/pmendez-sftnight/install-620native -with-system-zlib --disable-multilib --enable-languages=all; Thread model: posix; gcc version 6.2.0 (GCC) ; $ source /cvmfs/sft.cern.ch/lcg/external/gcc/4.9.1/x86_64-slc6/setup.sh; $ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/cvmfs/sft.cern.ch/lcg/external/gcc/4.9.1/x86_64-slc6/bin/../libexec/gcc/x86_64-unknown-linux-gnu/4.9.1/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ../gcc-4.9.1/configure --prefix=/build/hegner/gcc/gcc-install --with-mpfr=/afs/cern.ch/sw/lcg/external/mpfr/3.1.2/x86_64-slc6-gcc48-opt --with-gmp=/afs/cern.ch/sw/lcg/external/gmp/5.1.1/x86_64-slc6-gcc48-opt --with-mpc=/afs/cern.ch/sw/lcg/external/mpc/1.0.1/x86_64-slc6-gcc48-opt --enable-libstdcxx-time --enable-lto --with-isl=/build/hegner/gcc/isl/isl-install --with-cloog=/afs/cern.ch/sw/lcg/external/cloog/0.18.0/x86_64-slc6-gcc48-opt --enable-languages=c,c++,fortran,go; Thread model: posix; gcc version 4.9.1 (GCC) ; $ g++ -o a -c a.C -Ofast; a.C:2:1: error: ‘aaaa’ does not name a type; aaaa; ^; $ g++ -o a -c a.C -O2; ```; I see your fix works, I am just trying to understand all the details here since we are looking for the cause of this since a while :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-328953619:301,error,error,301,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-328953619,2,['error'],['error']
Availability,"Hi @oshadura, Can you please take a look at the failures for duplicate rules for the LZ4 library?; I think they are relevant (not to these changes, but still relevant for LZ4 integration nonetheless).; In the mean time, I will make the PR build the classic build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1063#issuecomment-332562017:48,failure,failures,48,https://root.cern,https://github.com/root-project/root/pull/1063#issuecomment-332562017,1,['failure'],['failures']
Availability,"Hi @pcanal , thanks for this report. Hopefully the solution will help also with fewer threads. ; I am not sure though that the `unresolved while linking` is due to the high thread count. Can you confirm that you do not see these errors with 8-16 threads?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2380867805:229,error,errors,229,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2380867805,1,['error'],['errors']
Availability,"Hi @pcanal , this PR was merged even though it broke `gtest_tree_treeplayer_test_dataframe_snapshot`. That test was ok on the [29th of March](http://cdash.cern.ch/testSummary.php?project=1&name=gtest-tree-treeplayer-test-dataframe-snapshot&date=2018-03-30) (except for the know failures on 32bit).; It started failing consistently in the nightlies since the [30th of March](http://cdash.cern.ch/testSummary.php?project=1&name=gtest-tree-treeplayer-test-dataframe-snapshot&date=2018-03-31). . I can reproduce the failures locally in about one out of four runs.; A quick investigation shows that reverting `6657223efb` (""Ensure TTreeCloner keep the AutoFlush history."") brings the test back to green (or at least I can't seem to make it fail anymore). Can we revert commit `6657223efb`?. EDIT: if yes, the PR is ready at #1813",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1800#issuecomment-378190743:278,failure,failures,278,https://root.cern,https://github.com/root-project/root/pull/1800#issuecomment-378190743,2,['failure'],['failures']
Availability,"Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer; ```; #include <TCanvas.h>; #include <TPad.h>; int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->cd();; delete c;; delete C;; return 0;; }; ```; Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6576#issuecomment-704919795:52,failure,failure,52,https://root.cern,https://github.com/root-project/root/pull/6576#issuecomment-704919795,1,['failure'],['failure']
Availability,"Hi @pcanal ,. yes, my fault. ``5d`` -> ``5ld``.; The others should be ok.; Hopefully haven't overlooked any other places. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740#issuecomment-736115542:22,fault,fault,22,https://root.cern,https://github.com/root-project/root/pull/6740#issuecomment-736115542,1,['fault'],['fault']
Availability,"Hi @pcanal @vepadulano . I was not able to reproduce the original error. The following piece of code does the following:; * writes 2 integers packed as a class, which is assigned to a branch of a treez; * printTree_fullclass: this function reads both integers using the same class that was used to write the tree; * printTree_splitclass: this function reads each integer separately. If I understand correctly the OP and a later comment by @pcanal in the [ROOT forum](https://root-forum.cern.ch/t/how-to-use-setbranchaddres-role-of-setmakeclass/309/2), the call `tree->SetMakeClass(1);` would be needed for the second case, however it works without it. ```; #include ""TFile.h""; #include ""TTree.h""; #include ""TBranch.h"". #include <iostream>. class myclass; {; public:; 	int x = {0};; 	int y = {0};; };. void printTree_splitclass(const char *path) {; std::cout << __FUNCTION__ << '\t';; printf(""%s:\n"", path);; std::unique_ptr<TFile> file(TFile::Open(path));; auto *tree = file->Get<TTree>(""tree"");. int x,y;; tree->SetBranchAddress( ""mybranch.x"", &x );; tree->SetBranchAddress( ""mybranch.y"", &y );; //tree->SetMakeClass(1);; for( int i =0; i< tree->GetEntries(); ++i); {; 	tree->GetEntry(i);; 	std::cout << '\t' << x << std::endl;; }; }. void printTree_fullclass(const char *path) {; std::cout << __FUNCTION__ << '\t';; printf(""%s:\n"", path);; std::unique_ptr<TFile> file(TFile::Open(path));; auto *tree = file->Get<TTree>(""tree"");; myclass * object4branch = new myclass();; tree->SetBranchAddress( ""mybranch"", &object4branch );; //tree->SetMakeClass(1);; for( int i =0; i< tree->GetEntries(); ++i); {; 	tree->GetEntry(i);; 	std::cout << '\t' << object4branch->x << std::endl;; }; }. void ROOT_1853() {; {; std::unique_ptr<TFile> file(TFile::Open(""b.root"", ""RECREATE""));; TTree *tree = new TTree(""tree"", ""title"");; myclass object4branch;; tree->Branch(""mybranch"", &object4branch);; for( int i = 0; i< 10; ++i) ; {; 	object4branch.x = i;; 	object4branch.y = -i;; 	tree->Fill();; }; tree->Write();; }. pri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14583#issuecomment-1943843960:66,error,error,66,https://root.cern,https://github.com/root-project/root/issues/14583#issuecomment-1943843960,1,['error'],['error']
Availability,"Hi @pcanal, our AddressSanitizer build reports a `heap-buffer-overflow`: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit 2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does `TMath::BinarySearch` return in case the element is not found?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650#issuecomment-1517450219:337,error,error,337,https://root.cern,https://github.com/root-project/root/pull/12650#issuecomment-1517450219,1,['error'],['error']
Availability,"Hi @pcanal, this is a quite big pull request, it may make sense to break it down in a few separate pull requests to make it easier to test/review. Also, I see revert commits included, and whitespace changes bundled together here, the reverts you should probably drop and rebase, and whitespace creates unnecessary noise for reviewing, so better split in another pull request or make all such changes in a single commit upfront before other commits.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7286#issuecomment-786648428:76,down,down,76,https://root.cern,https://github.com/root-project/root/pull/7286#issuecomment-786648428,1,['down'],['down']
Availability,"Hi @pcanal,. I have implemented the changes you requested. ; I did not understand though your instruction on ""fix""ing the windows CI. ; I downloaded and run the test suit, shall I share the output somehow?; The result is; ```bash; 74% tests passed, 240 tests failed out of 934; ```; I don't know though if the tests that failed did it for the modification introduced by my patch. How am I supposed to interpret and share the test output?. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099#issuecomment-597072613:138,down,downloaded,138,https://root.cern,https://github.com/root-project/root/pull/5099#issuecomment-597072613,1,['down'],['downloaded']
Availability,"Hi @pcanal,. The input is a list of 133 files in the format root://x509up_u<userid>@xrootd.grid.surfsara.nl//pnfs/grid.sara.nl/data/lhcb/LHCb_USER/lhcb/user/v/username/2021_08/520789/520789382/x24mu__wmomsc_a.root. The limit is in the dCache storage system (xrootd.grid.surfsara.nl), not on the client side. This limit is there for a reason: it prevents the storage pools from being overloaded with transfers and crashing. When hadd tries to open all files at once, it tries to read more files concurrently than the limit per dCache storage pool allows. The first files are served, but the rest of the transfers are queued. This means, that they remain open but zero bytes are served, until some of the other transfers finish. But hadd never finishes those because it insists on reading from all files at the same time. So it gets stuck into a deadlock situation. If hadd would detect this situation (I'm getting data for some files but zero bytes for other files), it would make sense to stop reading all files concurrently, but instead continue reading from all files that it can, close those files, and then receive data for the other files. If hadd could do that, such a deadlock would be prevented, while performance would still be the maximum available. Cheers,; Onno",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1240361937:1249,avail,available,1249,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1240361937,1,['avail'],['available']
Availability,"Hi @pcanal,. to complement the answer of @bluehood"" TString tokenises, we are using here a simple lexer.; @bluehood : the suggestion of treating names in strings to jit with a procedure similar to the one adopted for entities in files, ""dynamic scopes"", has not been forgotten.; It is not clear to me how to put it in place though. On the other hand, this step goes in the direction of integrating more cling in the handling of ""code strings"". For example, if the strategy explored in this PR demonstrates to be reliable, we could potentially imagine to hook in the lexer used by clang.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324#issuecomment-458026173:512,reliab,reliable,512,https://root.cern,https://github.com/root-project/root/pull/3324#issuecomment-458026173,1,['reliab'],['reliable']
Availability,"Hi @priyanshu1044! Sorry for the late reply, I was on vacation. First, thanks a lot for offering to work on this! Are you still available to work on that issue or did we miss that opportunity? If you confirm, I will assign the issue to you and take care of the label :). Cheers,; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-943108492:128,avail,available,128,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-943108492,1,['avail'],['available']
Availability,Hi @sawenzel . I encountered a problem reproducing:; ```; $ lsb_release --all; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core) ; Release:	7.9.2009; Codename:	Core. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 ; libgcc_s.so.1 must be installed for pthread_cancel to work; /cvmfs/alice.cern.ch/bin/alienv: line 291: 9641 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF; EOF. init.c(556):ERROR:161: Cannot initialize TCL; test 0 = 1. $ /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1; libgcc_s.so.1 must be installed for pthread_cancel to work; /cvmfs/alice.cern.ch/bin/alienv: line 291: 9795 Aborted (core dumped) tclsh > /dev/null 2>&1 <<EOF; EOF. init.c(556):ERROR:161: Cannot initialize TCL; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579#issuecomment-2156490625:477,ERROR,ERROR,477,https://root.cern,https://github.com/root-project/root/issues/15579#issuecomment-2156490625,2,['ERROR'],['ERROR']
Availability,"Hi @sawenzel, has this been merged in another PR? If not, could you please rebase and push so that we can test against the latest master? Most unrelated test failures from above have been fixed. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/650#issuecomment-317658705:158,failure,failures,158,https://root.cern,https://github.com/root-project/root/pull/650#issuecomment-317658705,1,['failure'],['failures']
Availability,"Hi @silverweed . I ping our framework and CUDA experts to have a look. By the way, do you understand why if I use ROOT that comes on lxplus, no source of ROOT environment, it shows differently than I source ROOT environment first?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955#issuecomment-2328444827:19,ping,ping,19,https://root.cern,https://github.com/root-project/root/issues/7955#issuecomment-2328444827,1,['ping'],['ping']
Availability,"Hi @stwunsch , congrats! Very nice - and delivered extremely quickly: it was not obvious. Let's start from the points you mention as ""todos"" - I would order them as follows in terms of priority:; - More tests? Corner-cases missed?; - These tests could also foresee error cases; - More error-handling?; - What about not supported datatypes? Currently implemented for float, double, int, unsigned int, long, unsigned long. This is dependent on the memory adption feature of #1777 for std.vector.; - Infere the final datatype of the numpy array in a clever way (currently double is the default). Implicit type conversion is done by the lambda passed to TDataFrame in the backend.; - Apply clang-format. For the non supported data types, I think we should error out gracefully, but I let @etejedor comment.; For the common type: can we use http://en.cppreference.com/w/cpp/types/common_type ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1856#issuecomment-381247313:265,error,error,265,https://root.cern,https://github.com/root-project/root/pull/1856#issuecomment-381247313,3,['error'],"['error', 'error-handling']"
Availability,"Hi @stwunsch , thanks for the detailed investigation!; Where do you see exactly the error in Python3, is it the line:; ```cpp; PyObject *property_obj = PyObject_CallObject(property_class, arglist);; ```; or the line:; ```cpp; PyObject_SetAttrString(pyclass, property, property_obj);; ```; As you pointed out, in the case of `Utility::AddToClass`, Python3 also adds a bound method to the class. Do you understand why in the case of `Utility::AddToClass` this is not an issue, but it is an issue in the case of `Utility::AddProperty`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-380149950:84,error,error,84,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-380149950,1,['error'],['error']
Availability,"Hi @subham73! I use Arch Linux with the same CMake configuration used for the official packages of that Linux distribution:. https://github.com/archlinux/svntogit-community/blob/packages/root/trunk/settings.cmake. What CMake errors do you get exactly? Sorry, I will probably have a hard time to help you with visual studio details, because I haven't used Windows for over a decade! Do you maybe have a computer with Linux at hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1028392428:225,error,errors,225,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1028392428,1,['error'],['errors']
Availability,"Hi @swertz,; Thanks a lot for trying it out and for the reproducer! ; The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a ; ```python; print(client.scheduler_info()); ```; call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992489655:306,avail,available,306,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992489655,2,['avail'],['available']
Availability,"Hi @theayon , pinging you directly. Thanks again for this report. As you can see from the link above, thanks to @vgvassilev, we have a solution in the master branch of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14902#issuecomment-1991912498:14,ping,pinging,14,https://root.cern,https://github.com/root-project/root/issues/14902#issuecomment-1991912498,1,['ping'],['pinging']
Availability,"Hi @thomreis ,; thank you for your report. `GetImplicitMTPoolSize` was deprecated in v6.22 and removed in v6.24, see https://root.cern/doc/v622/release-notes.html#deprecation-and-removal . During the removal, it looks like the public declaration of the method was deleted (in 4b49fbd25639367942d699f28d93253190056302 ), but the implementation was forgotten there -- unreachable because there is no corresponding declaration in the header. Thank you for noticing, I opened #10422 to remove the leftover definition. Closing this as clarified (`GetThreadPoolSize` is intentionally the only available such function).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10413#issuecomment-1104050745:587,avail,available,587,https://root.cern,https://github.com/root-project/root/issues/10413#issuecomment-1104050745,1,['avail'],['available']
Availability,"Hi @vgvassilev , ; This problem crept back into both dev3 (since Mon build) and dev4 LCG nightlies. So it's both ROOT master and 6.28-patches. It can be reproduced the same way as I reported before:. % source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/current/AtlasSetup/scripts/asetup.sh master--dev3LCG,latest,Athena; % root; root [0] new xAOD::IParticle();; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Tue/ROOT/HEAD/x86_64-centos7-gcc11-opt/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/include/c++/11.3.0/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc. *** Break *** segmentation violation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1532628939:500,error,error,500,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1532628939,1,['error'],['error']
Availability,"Hi @vgvassilev , thanks once again for this great development, which was delivered and tested on such a short timescale, basically during the end of the year break. On January 23rd, the last open pre-release of CMSSW_14_0_0 will close: after that date, no ROOT version updates will be possible (see https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1858057605).; Currently, the CMS issue has been worked around, therefore ROOT 6.30 *can* be picked up by CMS. However, it would be much better to have your fix in master and the 6.30 branch for CMS to pick up. That leaves us with a short window of opportunity, which is basically this week. . Do you think you can factor and succinctly document the changes in the way @hahnjo proposed in order to be able to merge the PR to make your fixes available to CMS? We see LHCb experiencing similar problems - they would also likely benefit from your code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1882727682:797,avail,available,797,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1882727682,1,['avail'],['available']
Availability,"Hi @vgvassilev, I think I could make it easier for you to review if I make smaller pull requests and each one corresponds to a certain flake8 error code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10862#issuecomment-1186306872:142,error,error,142,https://root.cern,https://github.com/root-project/root/pull/10862#issuecomment-1186306872,1,['error'],['error']
Availability,"Hi @vgvassilev, the header `bits/utility.h` was apparently only introduced for `libstdc++12` and is not available in older versions (8.5.0 on C8S and 11.2.0 on Arch Linux). As a result, the build currently fails in C++17 mode unless using `libc++`. What is the correct way to make the `header` entry conditional in the modulemap?. (This went unnoticed in Jenkins because we don't have a C++17 build with GCC for PRs!! FYI @Axel-Naumann)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10498#issuecomment-1117088808:104,avail,available,104,https://root.cern,https://github.com/root-project/root/pull/10498#issuecomment-1117088808,1,['avail'],['available']
Availability,"Hi @virenvarma007, thanks for reaching out to us about this issue!. Fortunately, you don't necessarily have to compile and set up ROOT yourself to work on this issue :) All you need it a working ROOT installation on your system. Which Linux distribution are you using? Most likely root is available as a package for your distribution, for example on Ubuntu you can just do `sudo apt install root` to install it. For more information on how to install ROOT also on different platforms, please take a look also at https://root.cern/install/. Once you have ROOT installed, you can download one of the roostats tutorials that you want to translate (maybe pick a shorter one in the beginning, like [rs101_limitexample](https://github.com/root-project/root/blob/master/tutorials/roostats/rs101_limitexample.C). Remember you just need the tutorial file, not the whole ROOT repository. To try out the tutorial, you can run it with the root interpreter by typing `root rs101_limitexample.C` in the command line. You will get a graph as a result. To translate the tutorial, you need to create a `rs101_limitexample.py` file where you exactly recreate the tutorial in pyROOT, such that one can run it with `python rs101_limitexample.py` and get the same graph than with the C++ version. When you have translated your first tutorial, you can make a pull request here with the new python file in the same directory as the C++ tutorials. You can find more information of ROOT and especially pyROOT for your usecase in the ROOT users manual: https://root.cern/manual/. If you have any questions that are not answered in this manual, please feel free to ask!. Good luck and thanks for your effort already!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758#issuecomment-974786394:289,avail,available,289,https://root.cern,https://github.com/root-project/root/issues/8758#issuecomment-974786394,2,"['avail', 'down']","['available', 'download']"
Availability,"Hi @wdconinc and @bellenot! It would be nice if we could fix the issue without the added complexity of an additional flag. Wouter, you're probably using the `fail-on-missing` option to build ROOT, right? The flag to make sure that the features don't get quietly disabled at configuration time. The connectivity check doesn't make sense with `fail-on-missing=ON`, because a missing dependency will cause a configuration failure either way. More on this in the description of the PR that I opened:; * https://github.com/root-project/root/pull/15467. Would that PR fix your issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603#issuecomment-2102480923:419,failure,failure,419,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102480923,1,['failure'],['failure']
Availability,"Hi @yamaguchi1024 @vgvassilev , I have a last comment. We provide in the ROOT type system an endpoint to check if the enum is available, `TEnum::GetEnum(const char*)`. It can be used as; ```; TEnum::GetEnum(""ROOT::Detail::VecOps::TAdoptAllocator<double>::EAllocType""); ```; I don't know if it can be used inside these utils but it would have an advantage wrt to the current solution, namely the ability to avoid lookups in case the enum is present in the type-system (selected by the user). This would avoid memory consumption in case of autoparsing being triggered.; The PR is a nice improvement, I am discussiong a *possible* performance improvement on top of it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1715#issuecomment-371736535:126,avail,available,126,https://root.cern,https://github.com/root-project/root/pull/1715#issuecomment-371736535,1,['avail'],['available']
Availability,"Hi @ynikitenko - we keep `THtml` for those who still need it for legacy use cases. ROOT has since several years moved to doxygen as documentation generator. https://root.cern/doc/master/classTHtml.html does not mention this and that's a bug. @couet could you fix that, please - make it visible that `THtml` is legacy code, and people should use `doxygen`?. @ynikitenko you can just download the ROOT documentation for a specific version here: https://root.cern/reference/ Is that enough for your use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787062282:382,down,download,382,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787062282,1,['down'],['download']
Availability,"Hi @ynikitenko, thanks for the request! There are several reasons for not supporting PyPy. PyROOT, which is building on top of cppyy, is very deeply connected to the CPython implementation of CPyCppyy. Just like the CPython version of cppyy, PyROOT consists of a Python module and a compiled CPython extension (`libROOTPythonization`). And you can't use CPython extensions in PyPy. So to support PyPy, we would have to rewrite [all this code](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/src), and work closely with the cppyy team to make sure it's PyPy implementation also provides the interfaces that PyROOT expects. That would be a *huge* amount of work with no usecase to justify it. And there are so many alternative of fast analysis frameworks that people are trying out right now: RDataFrame, NumPy, numba, awkward arrays, etc. And let's not forget that pypy has it's limitations! It only supports a restricted subset of Python, and it would require large efforts to port PyROOT to this. One final point: the future of PyPy development is not very clear. Right now, they don't support Python 3.11 yet, for example. Builds are only available for [Python 3.9 and Python 3.10](https://www.pypy.org/download_advanced.html). So investing in PyPy compatibility is also risky because of that. Imagine we would spend half a year trying to support it, and then PyPy would not be maintained anymore :(. I'll therefore close this issue as ""not planned"". tldr; the HEP community is gravitation towards other C++ native of jit-based Python packages to speed up analysis, and at this point investing in pypy is not worth it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-2148504771:1173,avail,available,1173,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-2148504771,1,['avail'],['available']
Availability,"Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot!. 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 3. mkdir build_amd64 && cd build_amd64; 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 ..; 5. cmake --build . --config Release. Hit below error when build:; F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9389:290,error,error,290,https://root.cern,https://github.com/root-project/root/issues/9389,3,['error'],['error']
Availability,"Hi Andrzej,; I think throwing an error is ok, we don't want to create an output where some branches have less entries than others or something like that. In the future we would like to introduce the possibility to specify something like ""if this branch is not there, use this default value instead"" but it's a bit tricky, `TChain` and `TTreeReader` (which RDF uses under the hood) are not really built for this case. A workaround of course is to do a first pass over the files and use `df.GetColumnNames()` to separate the files with all branches from the ones where some branches are missing, and process the ""weird"" files separately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7084#issuecomment-766678850:33,error,error,33,https://root.cern,https://github.com/root-project/root/issues/7084#issuecomment-766678850,1,['error'],['error']
Availability,"Hi Arif, please take a look at the errors shown above (from our Jenkins builds). We need to fix them before the code can be merged. You can ignore the NewDelete.cxx warnings and just fix the TMath errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400603841:35,error,errors,35,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400603841,2,['error'],['errors']
Availability,"Hi Axel,. on lxplus, I see a bit more than your output:. ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::36...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * CAfile: /etc/pki/tls/certs/ca-bundle.crt; CApath: none; * Server certificate:; * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; * 	start date: Apr 08 16:29:03 2021 GMT; * 	expire date: May 08 16:29:03 2022 GMT; * 	common name: dpool46.lcg.triumf.ca; * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); * Peer's Certificate issuer is not recognized.; * Closing connection 0; curl: (60) Peer's Certificate issuer is not recognized.; More details here: http://curl.haxx.se/docs/sslcerts.html. curl performs SSL certificate verification by default, using a ""bundle""; of Certificate Authority (CA) public keys (CA certs). If the default; bundle file isn't adequate, you can specify an alternate file; using the --cacert option.; If this HTTPS server uses a certificate signed by a CA represented in; the bundle, the certificate verification probably failed due to a; problem with the certificate (it might be expired, or the name might; not match the domain name in the URL).; If you'd like to turn off curl's verification of the certificate, use; the -k (or --insecure) option.; ***@***.*** t5]$ . regards,; Asoka. > On May 12, 2021, at 1:05 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > As I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://github.com/root-project/root/issues/8155> ) I tried with curl but I get; > ; > $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; > * Trying 206.12.9.197:2880...; > * TCP_NODELAY set; > * Tryin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839939902:737,error,error,737,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839939902,1,['error'],['error']
Availability,"Hi Brian,. The sub-module solution and the existing solution can not co-exist:. ```; git clone https://github.com/root-project/root.git; mkdir root-build; cd root; git checkout -b bbockelm-roottest_submodule master; git pull https://github.com/bbockelm/root.git roottest_submodule; # Intentionally *NOT* doing sub-module stuff ....; cd ../root-build/; cmake -Dtesting=ON -Droottest=ON ../root ; ..... CMake Error at CMakeLists.txt:374 (add_subdirectory):; The source directory. /var/tmp/bb/root/roottest. does not contain a CMakeLists.txt file. ```. [And indeed, you point out that migrating from an existing non sub-module with roottest checked-out to the sub-module is seamless .... but once we move to sub-module, the existing solution no longer works for new clones]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/599#issuecomment-305535938:407,Error,Error,407,https://root.cern,https://github.com/root-project/root/pull/599#issuecomment-305535938,1,['Error'],['Error']
Availability,"Hi Carsten, . The failures that there are now in stressRoofit, see : ; http://cdash.cern.ch/testDetails.php?test=44685080&build=511996. are expected ? Should I re-generate the reference file ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2033#issuecomment-391661976:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/2033#issuecomment-391661976,1,['failure'],['failures']
Availability,"Hi Carsten,. here are some answers:. > general coding style. I like the const-correctness fixes. Can you bundle them in an extra PR, and we merge them before the rest gets merged? This is a code improvement, anyway. The addition of functions such as `GetPreprocess...()` can probably added as well. > packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?. All YML/JSON-related things would best go into something that can be switched on/off based on the availability of YML/JSON. Something like `roofit/YMLFactory`?; > code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?. I didn't really check that. Maybe we do this when there's a bit less noise after splitting off the const-ness fixes and interface changes.; > build system: Is the way I encoded the optional dependency acceptable?. I don't know. @oshadura? @Axel-Naumann ?; > class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. As long as classes and function names say what these things do, you have quite some freedom. Maybe just check whether the surrounding code capitalises functions or not. > Please don't review yet:; > ; > lack of functionality - more things will be added over time; > individual violations of the style guide (e.g. missing spaces or newlines). Sure, NP. > Please specifically suggest where documenation should be added!; > Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?. It would be good if every function and class had documentation. They are best placed in the implementation like in; https://root.cern.ch/doc/master/RooAbsPdf_8cxx_source.html. Header-only functions can have small ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151#issuecomment-598765709:513,avail,availability,513,https://root.cern,https://github.com/root-project/root/pull/5151#issuecomment-598765709,1,['avail'],['availability']
Availability,"Hi Danilo,; I'm also for the ""one line solution"". As Axel said, we'll make `cling::printValue()` interface available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644#issuecomment-423149460:107,avail,available,107,https://root.cern,https://github.com/root-project/root/pull/2644#issuecomment-423149460,1,['avail'],['available']
Availability,"Hi Enric, ; Thank you very much.; How can I test the fix? ; I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552#issuecomment-712658367:76,fault,fault,76,https://root.cern,https://github.com/root-project/root/issues/6552#issuecomment-712658367,1,['fault'],['fault']
Availability,"Hi Filip, . Thank you for the update. ; I see there is an issue with the computation of the bin error of TProfile2Poly in the default case (kMEANERROR). It looks like you are computing the inverse of the error. I would strongly recommend to add in the test also a check on the computed bin errors, and maybe also bin entries and also the global statistical quantities (GetMean, GetStdDev, etc..) . For example you could reuse the following functions used in the stressHistogram test, . See https://github.com/root-project/root/blob/master/test/stressHistogram.cxx#L10594. and https://github.com/root-project/root/blob/master/test/stressHistogram.cxx#L10470. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/515#issuecomment-299865379:96,error,error,96,https://root.cern,https://github.com/root-project/root/pull/515#issuecomment-299865379,3,['error'],"['error', 'errors']"
Availability,"Hi Filip, . here are some comments. I am sorry I have no time to meet you today. . I see you are missing the implementation of TProfile2Poly:"":GetBinError. ; This is needed otherwise the wrong error from TH2Poly is used. Also I would add TProfile2Poly::GetBinEntries using the similar function definer for the bins. In the TProfile2Poly::Merge I see that the merge from overflows merge only the sum of the weights. I would addd a Merge (or Add) function in the TProfile2PolyBin class so you can re-use it for all bins of ; TProfile2Poly. . Thank you for updating your PR. Best . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/515#issuecomment-297706023:193,error,error,193,https://root.cern,https://github.com/root-project/root/pull/515#issuecomment-297706023,1,['error'],['error']
Availability,"Hi Guys,. I am getting errors in this branch compiling with cuda support, I am using cuda 8. /home/ozapatam/Projects/GSoC/rootdnn/compile/include/TMVA/DNN/Architectures/Cuda.h(396): error: identifier ""AReal"" is undefined; /home/ozapatam/Projects/GSoC/rootdnn/compile/include/TMVA/DNN/Architectures/Cuda.h(396): error: identifier ""AReal"" is undefined; /home/ozapatam/Projects/GSoC/rootdnn/tmva/tmva/src/DNN/Architectures/Cuda/Propagation.cu(143): error: declaration is incompatible with ""void TMVA::DNN::TCuda<AFloat>::Im2col(TMVA::DNN::TCudaMatrix<AFloat> &, const TMVA::DNN::TCudaMatrix<AFloat> &, size_t, size_t, size_t, size_t, size_t, size_t, size_t, size_t)""; /home/ozapatam/Projects/GSoC/rootdnn/compile/include/TMVA/DNN/Architectures/Cuda.h(287): here; /home/ozapatam/Projects/GSoC/rootdnn/tmva/tmva/src/DNN/Architectures/Cuda/Propagation.cu(254): error: declaration is incompatible with ""void TMVA::DNN::TCuda<AFloat>::Downsample(TMVA::DNN::TCudaMatrix<AFloat> &, TMVA::DNN::TCudaMatrix<AFloat> &, const TMVA::DNN::TCudaMatrix<AFloat> &, int, int, int, int, int, int)""; /home/ozapatam/Projects/GSoC/rootdnn/compile/include/TMVA/DNN/Architectures/Cuda.h(357): here; /home/ozapatam/Projects/GSoC/rootdnn/tmva/tmva/src/DNN/Architectures/Cuda/Propagation.cu(267): error: expected a declaration; /home/ozapatam/Projects/GSoC/rootdnn/tmva/tmva/src/DNN/Architectures/Cuda/Propagation.cu(333): warning: parsing restarts here after previous syntax error; /home/ozapatam/Projects/GSoC/rootdnn/tmva/tmva/src/DNN/Architectures/Cuda/RecurrentPropagation.cu(29): error: ""auto"" function requires a trailing return type; /home/ozapatam/Projects/GSoC/rootdnn/tmva/tmva/src/DNN/Architectures/Cuda/RecurrentPropagation.cu(29): error: declaration is incompatible with ""TMVA::DNN::TCuda<AFloat>::Matrix_t &TMVA::DNN::TCuda<AFloat>::RecurrentLayerBackward(TMVA::DNN::TCudaMatrix<AFloat> &, TMVA::DNN::TCudaMatrix<AFloat> &, TMVA::DNN::TCudaMatrix<AFloat> &, TMVA::DNN::TCudaMatrix<AFloat> &, TMVA::DNN::TCudaMatrix<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817#issuecomment-333781388:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/817#issuecomment-333781388,4,['error'],"['error', 'errors']"
Availability,"Hi Ivan, thank you, I have some doubts about the changes:. - I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; - the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."". Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705#issuecomment-1148383295:181,error,error,181,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148383295,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi John,. > The merge conflict was just because Pere intervened to correct a fix I had made (just a formatting > issue) but he did it directly in the main repository and in a way that left my ‘origin’ out of sync. . Yes and the way it was resolved (presumedly by the web interface) is sub-optimal. The history of master looks like:; ```; * 203703f - (71 minutes ago) coverity 61577: fix resource leak delete [] c — John Harvey; * e815eaa - (2 hours ago) coverity 61279: fix copy/paste error — John Harvey; * ed09395 - (6 days ago) resolving merge conflicts — John Harvey; |\ ; | * 6c63896 - (6 days ago) Fix for failing test (too strict tolerances for floating point values) — Guilherme Amadio; | * 9d6ac44 - (7 days ago) Data members used as array size must be static. — Philippe Canal; | * 27d58ca - (7 days ago) - Allows any number of options - Small mods in the online help - Spell check — Olivier Couet; ....; | * | | | | 7db5e8c - (8 weeks ago) Coverity 94053: fixed uninitialised class members — John Harvey; ....; * | | | | | 96fa411 - (20 hours ago) Downgrade to C++11 — Philippe Canal (origin/master, origin/HEAD); ....; * | a18c480 - (8 weeks ago) Coverity 94053: fixed uninitialised class members — John Harvey; ```. So for example the commit ""Coverity 94053: fixed uninitialised class members"" is twice in your master's history (that is because the merge/resolve conflict rather than having done a rebase). At this point the best is to do some manual intervention on your repository to 'clean-up' your master. . This would include:; * make a branch out of your master to make sure to not lose anything:; ```git branch masterApril2017 203703f```; * do a hard reset of master to match origin/master; ```git checkout master; git reset --hard origin/master```; * Re-apply the commit with a merge conflict.; ```git diff 6c63896..ed09395 math/mathmore/test/testInterpolation.cxx | patch -p1; git commit -m ""Redo: removed duplicate increment in for loop (c627ce92488abd79)""```; * cherry-pick the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/524#issuecomment-297096018:485,error,error,485,https://root.cern,https://github.com/root-project/root/pull/524#issuecomment-297096018,2,"['error', 'toler']","['error', 'tolerances']"
Availability,"Hi Jonas,; I've used this patch (explicit conversion to int) for my code and ; it is a kind of patched solution.; But it will be nice (for future) of a proper fix appear in cppyy.; (Actually location of this bug.feature was a rather tricky - ; it happens when I make parallelisation of ; my task into several processors/nodes using parallel python.; For technical reasons the output is suppressed in a very harsh way, ; therefore the final ""visible"" error report has nothing to to; with pickling on enums.. And it takes some time to identify the plroblem.; Temporary patch in my code ok, but proper long-term solution ; is better. For a time being it is OK for me. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15104#issuecomment-2032253408:450,error,error,450,https://root.cern,https://github.com/root-project/root/issues/15104#issuecomment-2032253408,1,['error'],['error']
Availability,"Hi Kim,. The failures seem to be unrelated to the PR. Can you Kim please fix the conflict so the PR can be merged ? . Thanks. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-360058712:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-360058712,1,['failure'],['failures']
Availability,"Hi Konstantin,. I modify code once again, adding parameters in `TPgSQLStatement::Process()`; I also add in all setter methods special checks for parameter index and allocated memory - old implementation was error-prone. Can you check once again?; Did you checking with both PgSQL version?. Regards,; Sergey",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-774428603:207,error,error-prone,207,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-774428603,1,['error'],['error-prone']
Availability,"Hi Mattias. Running with this PR I manage to run all tests successfully without the option gnuinstall. Running with the option I get 227 tests failed out of 1395. Basically all the failures are related to difficulties to build dictionaries or libraries because the ROOT libraries are expected in different place. ; I think I would merge the PR since we will not break existing functionality, but we need to complement with some more changes to fix the remaining failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/130#issuecomment-273292643:181,failure,failures,181,https://root.cern,https://github.com/root-project/root/pull/130#issuecomment-273292643,2,['failure'],['failures']
Availability,"Hi Oksana, I think it's better to fix all at once in a single commit, and you probably have to tweak the temporary install location to avoid the test failure. Once that's fixed, it should be ok to merge. Please also check that `root -l -e '#include <Math/CladDerivator.h>'` works after ROOT has been installed, since the tests won't catch this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3337#issuecomment-458872716:150,failure,failure,150,https://root.cern,https://github.com/root-project/root/pull/3337#issuecomment-458872716,1,['failure'],['failure']
Availability,"Hi Oksana, I was hoping to get @ktf or at least @Axel-Naumann to sign this off, since there seems to be breaking changes included in the backport (see the failures in `projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_arrow` above, before I also backported changes in that test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5505#issuecomment-622398667:155,failure,failures,155,https://root.cern,https://github.com/root-project/root/pull/5505#issuecomment-622398667,1,['failure'],['failures']
Availability,"Hi Oliver, thanks for the follow up!; I did a bit more investigation:. Here is even more reduced reproducible code in python3 with ROOT 6.26/10 on Centos7:. ```python; import ROOT. def test_function():; # comment next line and everything works; ROOT.EnableImplicitMT(2); test = ROOT.TCanvas(""test"", ""test"", 800, 800); print(""First canvas has been created""); print(""Next: Create canvas again with the same name and get the warning""); test = ROOT.TCanvas(""test"", ""test2"", 800, 800); print(""Second canvas has been created.""); print(""I should have gotten undefined behaviour at this point. E.g. Seg. fault.""). test_function(); ```; It seems to return undefined behaviour (as sometimes it works, sometimes it doesn't) somewhere during the initialisation of the second canvas...; Here is the full backtrace, when it returns the seg. fault:. ```batch; First canvas has been created; Next: Create canvas again with the same name and get the warning; Warning in <TCanvas::Constructor>: Deleting canvas with same name: test; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; 0x7faec017ddd7 <pthread_cond_timedwait. GLIBC_2.3.2+295> add rdi, 0x4; 0x7faec017dddb <pthread_cond_timedwait. GLIBC_2.3.2+299> mov eax, 0xca; 0x7faec017dde0 <pthread_cond_timedwait. GLIBC_2.3.2+304> syscall ; 0x7faec017dde5 <pthread_cond_timedwait. GLIBC_2.3.2+309> mov edi, DWORD PTR [rsp]; 0x7faec017dde8 <pthread_cond_timedwait. GLIBC_2.3.2+312> call 0x7faec01804a0 <__pthread_disable_asynccancel>; 0x7faec017dded <pthread_cond_timedwait. GLIBC_2.3.2+317> mov rdi, QWORD PTR [rsp+0x8]; 0x7faec017ddf2 <pthread_cond_timedwait. GLIBC_2.3.2+322> mov esi, 0x1; 0x7faec017ddf7 <pthread_cond_timedwait. GLIBC_2.3.2+327> xor eax, eax. Thread 2 (Thread 0x7faea81b8700 (LWP 34896) ""python3""):; #0 0x00007faebf760659 in waitpid () from /lib64/libc.so.6; #1 0x00007",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:596,fault,fault,596,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,2,['fault'],['fault']
Availability,"Hi Olivier,. I had a similar situation with a Fermilab server and requested computing support to install missing libraries. I do not have a CERN account so can't open a ticket for lxplus9, but it makes sense to install the libraries there to make the machine usable with ROOT. Andrei. ________________________________________; From: Olivier Couet ***@***.***>; Sent: Tuesday, August 15, 2023 9:27 AM; To: root-project/root; Cc: Andrei Gaponenko; Author; Subject: Re: [root-project/root] clip edit in GL viewer is still broken (Issue #13418). Gl does not seem properly installed there:. $ glxgears; libGL error: No matching fbConfigs or visuals found; libGL error: failed to load driver: swrast; Error: glXCreateContext failed. —; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_issues_13418-23issuecomment-2D1679025586&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=ejeOXHRM6NnnTa4TA470cGD4wj63fFxBITffmOQ02lc&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAXVCGSO4HWIKORE7ZRV24LXVOBONANCNFSM6AAAAAA3I665NU&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=Qa0IvEvjeyrinJUtkFkmyfcNPybfsSDQQI7cpx17nBw&e=>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679169141:604,error,error,604,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679169141,3,"['Error', 'error']","['Error', 'error']"
Availability,"Hi Oxana, . The configuration files in mathcore/build and mathmore/build genvector/build ands matrix/build are used for stand-alone build of the packages. For just downloading them and building with simple ./configure/make.; I think for the moment it is better to keep them, but in case we remove them, I would not put these commit in this PR but open a separated one for this. Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2737#issuecomment-428859326:164,down,downloading,164,https://root.cern,https://github.com/root-project/root/pull/2737#issuecomment-428859326,1,['down'],['downloading']
Availability,"Hi Philippe, . The error message is still clear, because we get the output of clang compilation. For example by doing: . ```; TF1 f(""f"",""sinn(x)+cos(x)""); ```. we get ; ```; input_line_11:2:65: error: use of undeclared identifier 'sinn'; Double_t TFormula____id8191511338914148949(Double_t *x){ return sinn(x[0])+TMath::Cos(x[0]) ; }; ^; Error in <TFormula::PrepareEvalMethod>: Can't compile function TFormula____id8191511338914148949 prototype with arguments Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""sinn(x)+cos(x)"" is invalid !; (TF1 &) Name: f Title: sinn(x)+cos(x); ```. Before we were getting also an extra message as ; ```; Error in <TFormula::ProcessFormula>: Could not find sinn function with 1 argument(s); ```. which could be useful, but not really needed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2017#issuecomment-391022050:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/2017#issuecomment-391022050,7,"['Error', 'error']","['Error', 'error']"
Availability,"Hi Philippe,. Could you give me a hint of what sort of test this is? It doesn't look like a simple CTest, is it? How should I reproduce this error locally?. Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352200372:141,error,error,141,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352200372,1,['error'],['error']
Availability,"Hi Philippe,; I added this typedef to the selection.xml file just a few days ago, that's why you don't see it in Athena 23.0.17. But if you take the latest 23.0.19 (or the master) it will be there.; Btw, building an entire Athena (if that is what you tried) is a big deal. Much easier to build selected packages - I will include recipe at the bottom. > A potential work-around would be requested the dictionary for the 2 level of namespace/struct that contains the typedef ; You mean in selection.xml? Do you have an example of that that I could try myself?. Cheers, Marcin; ==========================================; Athena setup for development:; ----------------------------------------------------------; source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/current/AtlasSetup/scripts/asetup.sh master,latest,Athena,dbg; git clone https://gitlab.cern.ch/atlas/athena.git athena; echo ""+ Event/xAOD/xAODMissingET"" > package_filters.txt; echo ""- .*"" >> package_filters.txt; mkdir build; cd build; cmake -DATLAS_PACKAGE_FILTER_FILE=../package_filters.txt ../athena/Projects/WorkDir; make; source ./x86_64-centos7-gcc11-opt/setup.sh . % grep jetlink ./x86_64-centos7-gcc11-opt/lib/WorkDir.rootmap ; typedef MissingETBase::Types::jetlink_t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12378#issuecomment-1463593585:901,echo,echo,901,https://root.cern,https://github.com/root-project/root/issues/12378#issuecomment-1463593585,2,['echo'],['echo']
Availability,"Hi Philippe,; may I ping you on this one?; Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065#issuecomment-336958212:20,ping,ping,20,https://root.cern,https://github.com/root-project/root/pull/1065#issuecomment-336958212,1,['ping'],['ping']
Availability,"Hi Pratyush, . I am not sure what happened here, maybe @bellenot can help you here?; `22:02:36 fatal: could not read Username for 'https://github.com': Invalid argument; 22:02:36 SetCTestConfiguration:SourceDirectory:C:/build/workspace/root-pullrequests-build/root; 22:02:36 SetCTestConfiguration:BuildDirectory:C:/build/workspace/root-pullrequests-build/build; 22:02:36 Run dashboard with model Pullrequests; 22:02:36 Source directory: C:/build/workspace/root-pullrequests-build/root; 22:02:36 Build directory: C:/build/workspace/root-pullrequests-build/build; 22:02:36 Track: Pullrequests; 22:02:36 First perform the initial checkout: C:/Program Files/CMake/bin/cmake.exe -E chdir C:/build/workspace/root-pullrequests-build/root C:/Program Files/Git/cmd/git.exe checkout -f ; 22:02:36 Perform checkout in directory: C:/build/workspace/root-pullrequests-build; 22:02:36 Initial checkout failed!; 22:02:36 CMake Error at C:/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:803 (ctest_start):; 22:02:36 ctest_start unknown error. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462249852:912,Error,Error,912,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462249852,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi ROOTers!. ### Description; When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce; I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt.; ```; import sys, ROOT as rt; def main(args):; c = rt.TCanvas('c','c',800,600); pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'); pave.AddText('This line is in black.'); # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default); pave.AddText('This line is in red.'); pave.GetListOfLines().Last().SetTextColor(rt.kRed); pave.AddText('This line is in white.'); pave.GetListOfLines().Last().SetTextColor(rt.kWhite); pave.Draw(); c.Draw(); c.SaveAs('color_pave.png'); return; if __name__ == '__main__':; main(sys.argv); ```. ### Output; [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup; ROOT version: 6.22/02 (built from source); Operating system: macOS 10.14.6. ---------------------------------------------; Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6593:277,error,error,277,https://root.cern,https://github.com/root-project/root/issues/6593,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"Hi Ravi, ; Can you add MaxEpochs=50 or even less in the test to avoid the timeout. We should also understand why the test error continues to decrease. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2441#issuecomment-411786515:122,error,error,122,https://root.cern,https://github.com/root-project/root/pull/2441#issuecomment-411786515,1,['error'],['error']
Availability,"Hi Rod,. Well, I added a 'print' before and after 1244 in the current jobs - didn't check it it. So this looks like:; ; ```; ATH_MSG_INFO( ""processEvents: try to open file: "" << file );. std::unique_ptr< TFile > ifile( TFile::Open( file.c_str(), ""READ"" ) );. ATH_MSG_INFO( ""processEvents: called TFile Open "" );; ```. and in the log, one sees:. `H4lAnalRun2 INFO processEvents: try to open file: root://eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/25/31/DAOD_HIGG2D1.23315648._000001.pool.root.1. === stderr ===; [2020-12-16 13:29:01.003032 +0100][Debug ][Utility ] Unable to process user config file: [ERROR] OS Error: No such file or directory; [2020-12-16 13:29:01.018152 +0100][Debug ][PlugInMgr ] Initializing plug-in manager...; [2020-12-16 13:29:01.018254 +0100][Debug ][PlugInMgr ] No default plug-in, loading plug-in configs...; [2020-12-16 13:29:01.018302 +0100][Debug ][PlugInMgr ] Processing plug-in definitions in /etc/xrootd/client.plugins.d...; [2020-12-16 13:29:01.020375 +0100][Debug ][PlugInMgr ] Processing plug-in definitions in /alrb/.xrootd/client.plugins.d...; [2020-12-16 13:29:01.020433 +0100][Debug ][PlugInMgr ] Unable to process directory /alrb/.xrootd/client.plugins.d: [ERROR] OS Error: No such file or directory; [2020-12-16 13:29:02.298776 +0100][Dump ][Utility ] URL: root://eosatlas.cern.ch//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/25/31/DAOD_HIGG2D1.23315648._000001.pool.root.1; `. So one sees the 'try to open file', then there is the TFile::Open, and nothing else. So I conclude that this is coming from the Open. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746602567:622,ERROR,ERROR,622,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746602567,4,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889#issuecomment-736290535:680,avail,available,680,https://root.cern,https://github.com/root-project/root/issues/6889#issuecomment-736290535,1,['avail'],['available']
Availability,"Hi Simon,. >>>>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460976298%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=YgqiD9GIPDhABbE6mxc9%2BtWy8Q8red4Pa6zme6lmNgs%3D&reserved=0>; How do I use curl to download on lxplus ?. regards,; Asoka. > On May 12, 2021, at 11:47 AM, Simon Liu ***@***.***> wrote:; > ; > Hi, Asoka; > ; > I'm not sure which exactly problem you are chasing for, as far as I can tell, there is no problem access webdav.lcg.triumf.ca from lxplus, and downloading files from there works fine.; > ; > thanks; > ; > Simon; > ; > On 5/12/2021 11:13 AM, Asoka De Silva wrote:; >> ah ... thanks, I missed that. So ping works from lxplus but I still cannot do a curl to ***@***.***; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 11:11 AM, Di Qing ***@***.*** ***@***.***>> wrote:; >>> ; >>> Asoka,; >>> ; >>> There was a mistake in your ping command, did you see the 'ping' in the middle, so actually it was pinging host ping. ; >>> ; >>> Regards,; >>> ; >>> Di; >>> ; >>> On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; >>>> hmm ... that was really unexpected for me for lxplus ...; >>>> ; >>>> ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>; >>>> PING (137.138.28.175) 56(124) bytes of data.; >>>> ; >>>> --- ping statistics ---; >>>> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >>>> ; >>>> ***@***.*** ~]$ ; >>>> ; >>>> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ***@***.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:625,down,download,625,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,2,['down'],"['download', 'downloading']"
Availability,"Hi Sir !; Thank you so much for your reply; My Details are as follows; Distributor ID: Ubuntu; Description: Ubuntu 23.04; Release: 23.04; i have downloaded the root file; root_v6.28.06.Linux-ubuntu22-x86_64-gcc11.4(2).tar.gz and now i am trying; to install by Cmake build . process. On Fri, 24 Nov 2023, 12:49 pm Axel Naumann, ***@***.***>; wrote:. > Which version of ROOT, which platform (which Linux distribution, which; > version), how did you configure, what's your compiler?; > Why do you build from source rather than just conda install root or snap; > install root-framework or dnf install root or taking one of the binary; > releases <https://root.cern/releases/release-63000/>?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/14102#issuecomment-1825267807>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/APQNGFXRMQ4DAD5FWHKDUCDYGBGPPAVCNFSM6AAAAAA7YXHLH2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQMRVGI3DOOBQG4>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14102#issuecomment-1825909875:145,down,downloaded,145,https://root.cern,https://github.com/root-project/root/issues/14102#issuecomment-1825909875,1,['down'],['downloaded']
Availability,"Hi Stephan, thanks for confirming this!. Unfortunately, e also have errors that are actually related to the pythonization. The new code is not compatible with Python 2 because of the following line:; ```Python; return self._OriginalFitTo(*args, *sargs); ```. The syntax with the two unpacked tuples doesn't work in Python 2. Maybe you can do something like this?; ```Python; sargs = tuple(__getter(k, v) for k, v in kwargs.items()); return self._OriginalFitTo(*(args + sargs)); ```. Thanks again for your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-793743322:68,error,errors,68,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-793743322,1,['error'],['errors']
Availability,"Hi Vicenzo,. I agree building your own python is perhaps somewhat uncommon (and it is especially nonsensical to do it on Fedora, which has up to date distribution packages for both ROOT and python). I was testing an environment intended for clusters where users would not have admin privileges but may generally benefit from improvements in newer python than included, and cppyy must be built with the python you're using for it to work. . I don't think the assertions were necessarily meant to be enabled here, and disabling them does ""fix"" this issue (as the assertion isn't checked), but I think that's potentially somewhat besides the point. While it's very rare to run a python that has assertions enabled, presumably the assertions are there for a reason, even if they're not checked in release builds. The failing invariant could be harmless, or it may be causing subtly wrong behavior in the GC that could cause seemingly random problems down the road in a more complicated script. On the other hand, it also looks like things change again in python 3.12...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694#issuecomment-1739495970:946,down,down,946,https://root.cern,https://github.com/root-project/root/issues/13694#issuecomment-1739495970,1,['down'],['down']
Availability,"Hi Will, thanks a lot for this! I was actually thinking just last week about setting the errors like this :+1:. There are some test failures, but there are only because the HS3 HistFactory implementation is not inconsistent. I will fix this, add the commit to this PR, and then merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13528#issuecomment-1691556761:89,error,errors,89,https://root.cern,https://github.com/root-project/root/pull/13528#issuecomment-1691556761,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Hi Xavier,. I would very much like to be able to use ROOT together with the latest oneAPI beta, if at all possible. Since oneAPI comes (amongst many other things) with TBB, if I want to use ROOT reliably in that environment, it should really use oneAPI's TBB version. (In the past this worked quite well for my tests.). Wanting to hide the public TBB dependency from your interfaces is a good goal. But I would not do it with a forward declaration. Even in case the class would not be hidden behind version specific namespaces. If you do need to use the TBB class in the interface of the class, then tough luck. Then the class can just not hide its dependence on TBB, and that's the end of it. You could however try to design the class such that it would not have to directly reference the `tbb::task_arena` type at all in its interface. Then you could cleanly hide the include of this type into the source file. Long story short: TBB is changing its interface, as we've been warned for a while. If ROOT wants to be able to use multiple versions of TBB at the same time, it must stop relying on explicit names like `tbb::interface7::task_arena`... Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6174#issuecomment-673331218:195,reliab,reliably,195,https://root.cern,https://github.com/root-project/root/pull/6174#issuecomment-673331218,1,['reliab'],['reliably']
Availability,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:362,error,errors,362,https://root.cern,https://github.com/root-project/root/pull/11808,1,['error'],['errors']
Availability,"Hi again,. I have only used a subset for now, I will tell other colleagues too,; Thanks for the nice error handling, hopefully no one is gonna have similar experience regarding this matter in future.; Thanks for the hard work again,. Best regards. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006467887:101,error,error,101,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006467887,1,['error'],['error']
Availability,"Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description ; Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose ; Allows to merge only certain objects from the list of input files. ### Use case; Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings; - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`.; - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5995:1098,avail,available,1098,https://root.cern,https://github.com/root-project/root/pull/5995,1,['avail'],['available']
Availability,"Hi all,. This is Hongtao from ATLAS Higgs working group. I am the maintainer of xml analytic workspace builder and quickFit. Thank you very much for implementing this very important feature. As yo probably know, however, when making workspaces we usually use weighted RooDataSet instead of RooDataHist to store binned data. Therefore if you could make this feature available for binned RooDataSet it would be very handy for us to further test this feature in physics analyses. Thank you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11965#issuecomment-1438626407:365,avail,available,365,https://root.cern,https://github.com/root-project/root/issues/11965#issuecomment-1438626407,1,['avail'],['available']
Availability,Hi everyone!; this is just a quick ping on whether there is any progress in the review of this PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8944#issuecomment-966197015:35,ping,ping,35,https://root.cern,https://github.com/root-project/root/pull/8944#issuecomment-966197015,1,['ping'],['ping']
Availability,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:708,down,download,708,https://root.cern,https://github.com/root-project/root/issues/8292,2,['down'],['download']
Availability,"Hi sorry for the late reply, I tried and it works for ROOT 6.32 (I am finally able to see the right color in the loaded canvas), while with ROOT 6.30 I get ; ```; /test/./load_new.C:6:18: error: use 'template' keyword to treat 'Get' as a dependent template name; auto cnv = file->Get<TCanvas>(""c1"");; ^; template ; /test/./load_new.C:6:1: error: Syntax error; auto cnv = file->Get<TCanvas>(""c1"");; ^; FunctionDecl 0x5af6325fe230 <input_line_8:1:1, /test/./load_new.C:14:1> input_line_8:1:6 __cling_Un1Qu30 'void (void *)'; |-ParmVarDecl 0x5af6325fe178 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x5af6326e1a70 <col:42, /test/./load_new.C:14:1>; | |-DeclStmt 0x5af6326de478 <line:3:1, col:35>; | | `-VarDecl 0x5af63264d6a8 <col:1, col:34> col:8 f 'TFile *' cinit; | | `-CXXNewExpr 0x5af6326de418 <col:12, col:34> 'TFile *' CXXMethod 0x5af6326db188 'operator new' 'void *(size_t)'; | | `-CXXConstructExpr 0x5af6326ddee0 <col:16, col:34> 'TFile':'TFile' 'void (const char *, Option_t *, const char *, Int_t)'; | | |-ImplicitCastExpr 0x5af6326dde68 <col:22> 'const char *' <ArrayToPointerDecay>; | | | `-StringLiteral 0x5af63264d788 <col:22> 'const char[11]' lvalue ""c_new.root""; | | |-CXXDefaultArgExpr 0x5af6326dde80 <<invalid sloc>> 'const char *'; | | |-CXXDefaultArgExpr 0x5af6326ddea0 <<invalid sloc>> 'const char *'; | | `-CXXDefaultArgExpr 0x5af6326ddec0 <<invalid sloc>> 'Int_t':'int'; | |-DeclStmt 0x5af6326df820 <line:6:1, col:36>; | | `-VarDecl 0x5af6326de508 <col:1, col:35> col:6 used cnv 'auto' cinit; | | `-CallExpr 0x5af6326df7c8 <col:12, col:35> '<dependent type>'; | | |-CXXDependentScopeMemberExpr 0x5af6326df6b0 <col:12, col:29> '<dependent type>' lvalue ->Get; | | | `-DeclRefExpr 0x5af6326de680 <col:12> '<dependent type>' lvalue Var 0x5af6326de578 'file' '<dependent type>'; | | `-StringLiteral 0x5af6326df7a8 <col:31> 'const char[3]' lvalue ""c1""; | |-CallExpr 0x5af6326df8c0 <line:8:1, col:11> '<dependent type>'; | | `-CXXDependentScopeMemberExpr 0x5af6326df87",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16560#issuecomment-2402546592:188,error,error,188,https://root.cern,https://github.com/root-project/root/issues/16560#issuecomment-2402546592,3,['error'],['error']
Availability,"Hi there,. Running root-based reading analysis jobs in ATLAS, we are having problems trying to understand why some jobs fail on certain sites at file open when reading remote files with xrootd. We are using ROOT version 6.18/04. (I don't think that we have problems with 6.16/00, and a few tests indicate that 6.20/06 also had this problem.) . What we see is that for a file open:. std::unique_ptr< TFile > ifile( TFile::Open( file.c_str(), ""READ"" ) );. on a grid site node, the job exits with status code 139, which I believe is SIGURG - Urgent condition on socket (4.2BSD). ; The status code from TApplication::HandleException is 128 + root enum, and 11 is kSigUrgent. ; See:; https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602; https://root.cern.ch/doc/master/TSysEvtHandler_8h_source.html#l00107. Running the same program interactively on the same file works fine. And it seems that only some sites with remote reading are failing. So we would like to ask for help in trying to track this down. Currently, there is no stack trace to help understand things, and a simple 'print' just after TFile::Open is not printed. . I tried to add:. gApplication->ExitOnException( TApplication::kDontExit );. thinking that https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602. void TApplication::HandleException might throw an exception, but this does not work. So suggestions would be welcome. Is there a way to get a stack trace or more information on what is going on in the I/O part of this file open?. I don't know how to add in watchers for people in ATLAS, or a mailing list. But I did find @krasznaa. thanks much, RD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948:1011,down,down,1011,https://root.cern,https://github.com/root-project/root/issues/6948,1,['down'],['down']
Availability,"Hi! :) RGL cmake file has already listed the dependency on ASImage before this. There are functions in TGLViewer that use TImage to export screenshots and to load textures. I assume the problem now is that there is an explicit include of stuff from TASImage. Should we just make this dependency explicit in the initial configure / cmake run?. Vincenzo also commented (in the above PR discussion or on MM) that builtin asimage is now always used, there is no external option. And asimage includes fallback implementations of all commonly use graphics file formats. How does TImage work if there is no TASImage? I guess it all just silently fails. And there is no other implementation of the TImage interface. I vote for cmake-time dependency -- as an error or to exclude RGL if asimage=off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16250#issuecomment-2313078046:750,error,error,750,https://root.cern,https://github.com/root-project/root/issues/16250#issuecomment-2313078046,1,['error'],['error']
Availability,"Hi! @peter-jansson, can you please provide some more info to reproduce this issue? In the issue template you were also asked to do so :) I think to solve this issue, we need at least: ; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. **Edit**: I'm taking back my comment, I didn't see before that these questions were answered in the issue title.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-950777888:281,down,download,281,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-950777888,1,['down'],['download']
Availability,"Hi! I am interested in using 64-bit int histograms, will this feature be available in ROOT soon?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1318415870:73,avail,available,73,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1318415870,1,['avail'],['available']
Availability,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8973:122,error,errors,122,https://root.cern,https://github.com/root-project/root/issues/8973,2,['error'],"['error', 'errors']"
Availability,"Hi! I opened a PR for this yesterday:; https://github.com/root-project/root/pull/8248; I assigned you and Lorenzo as reviewers now, so we can hopefully merge it fast and fix the errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8261#issuecomment-849521534:178,error,errors,178,https://root.cern,https://github.com/root-project/root/issues/8261#issuecomment-849521534,1,['error'],['errors']
Availability,"Hi! I've just tested the feature, really nice! But there's one problem on my system: You've activated the `write_images=False` option in the keras callback, but then I get the following error:. ```; InternalError (see above for traceback): PNG encoding failed; ```. I've compiled it without the enabled images, then everything runs fine. @pfackeldey Do you have an idea why it's failing on my system with the enabled images? Haven't found something by google.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353#issuecomment-349987069:186,error,error,186,https://root.cern,https://github.com/root-project/root/pull/1353#issuecomment-349987069,1,['error'],['error']
Availability,"Hi! Sorry for the late reply. I'm closing this issue, because as you can see from these two lines, the problem is the mixing of two different ROOT builds:; ```txt; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; ```. You should double-check your environment. If you have any more questions, please reach out to us on the ROOT forum! The GitHub issues are more for bug reports, feature requests, and improvement requests. Thanks :pray:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12458#issuecomment-1798601346:211,error,error,211,https://root.cern,https://github.com/root-project/root/issues/12458#issuecomment-1798601346,1,['error'],['error']
Availability,"Hi! The RooMomentMorphND is gone, becuase it was almost an exact copy of RooMomentMorphFuncND and it became error prone to maintain the same code twice. Please use the RooMomentMorphFuncND as described here:; https://root.cern/doc/master/release-notes.html#removal-of-roomomentmorphnd-class. Thanks for trying out ROOT master and let me know if the replacement works please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12653#issuecomment-1506746005:108,error,error,108,https://root.cern,https://github.com/root-project/root/issues/12653#issuecomment-1506746005,1,['error'],['error']
Availability,Hi! This is supposed to fix a failure of stressTMVA where the BDTG would get an unacceptable ROC score. (Like [here](http://cdash.cern.ch/testDetails.php?test=27555086&build=380765)),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/836#issuecomment-320447353:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/pull/836#issuecomment-320447353,1,['failure'],['failure']
Availability,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011:1181,error,error,1181,https://root.cern,https://github.com/root-project/root/issues/9011,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, . Here is the log of make VERBOSE=1. Lorenzo. > On 24 Nov 2014, at 18:48, Emmanuel Benazera notifications@github.com wrote:; > ; > @lmoneta https://github.com/lmoneta I had many of those errors in my effort to write the patch. Could you either send me or post a full trace of configuration + building please ?; > To generate it I use:; > ; > make VERBOSE=1; > thanks!; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/root-mirror/root/pull/40#issuecomment-64233376.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-64234006:191,error,errors,191,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-64234006,1,['error'],['errors']
Availability,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: ; - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it; - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance.; The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, ; Thank you . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/137#issuecomment-197331435:488,toler,tolerance,488,https://root.cern,https://github.com/root-project/root/pull/137#issuecomment-197331435,3,['toler'],['tolerance']
Availability,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:713,Error,Error,713,https://root.cern,https://github.com/root-project/root/issues/7143,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, . Thank you Hans for your example, it was very useful for this case. . I have investigate this and I think the assert should be removed and there is no need of a warning or an error. The first time one iterates the first states comes from MnSeed and I think in that case the state is always valid (but not 100% sure); Eventually we could add the assert or (better) an Error but not at line 232, but at line 75, when we enter in the top function VariableMetricBuilder::Minimum. What we should maybe change is the logic around line 150. A covariance matrix is computed via MnHesse. This is done to check the edm. If the edm is still too large the minimization is continued. ; However, if Hesse fails, (for example in the test above f(x) = -x, because the second-derivatives is zero) there is no real point in continuing the minimization. The correct edm will not make sense and one should stop iterating. ; Maybe we could add a Warning there before line 146, like; ```; if (!st.IsValid()) { ; print.Warn(""Invalid Hessian - exit the minimization"");; break; ; }; ```. Let me know what you think ; Cheers; Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-740500083:180,error,error,180,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-740500083,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, . Thank you for your fast reply. Streaming stl container in ROOT of standard types is easly done as doing for native ROOT objects.; But I understand you have this preference, and since you are the class author we accept this. . For SetNErrorDimensions I understand the use case to reduce the dimensionality before storing, but then it would not be better to have the capability to delete a full error dimension with a dedicated function ? ; And correct, I was proposing before having an AddError function . I think before merging this PR it would be nice to have also two additional things: . - one tutorial showing the usage of the class; - a test program testing the basic functionality. This could be written for example in gtest and included in the hist/hist/test directory where we have other tests of new histogram classes . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558215613:399,error,error,399,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558215613,1,['error'],['error']
Availability,"Hi, ; @HDembinski The patch looks fine, although I might have some comments on having a global static instance available in the header file. I would prefer some static functions returning the cached values. ; However, I am surprised you see the MnPrecision constructor called many times. It should be called only once, in ModularFunction::Minimize and when creating the MnUserTransformation class, that also should be done one single time",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215#issuecomment-458622276:111,avail,available,111,https://root.cern,https://github.com/root-project/root/pull/2215#issuecomment-458622276,1,['avail'],['available']
Availability,"Hi, ; Thank you for the fix. I do not have anymore that crash in gPrefixStack. ; Yes, I can reproduce those failures of the other tests running with multi-thread and openMP. This is most likely caused by non-thread safe implementations of the likelihood functions used for the fitting. It is something needing a fix, but it is outside of the scope of this PR. . I think we are ready to merge this one. Let me run the CI first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-735713339:108,failure,failures,108,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-735713339,1,['failure'],['failures']
Availability,"Hi, ; you can run the tutorials:; `tutorials/tmva/TMVA_CNN_Classification.C` and ; `tutorials/tmva/TMVA_RNN_Classification.C`. They will use GPU (and cud for the convolutional and recurrent networks) if it is available (tmva-gpu=On cudnn=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-661954856:209,avail,available,209,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-661954856,1,['avail'],['available']
Availability,"Hi, @bellenot, Hi @Axel-Naumann, sorry for the late reply,. so I run cmake on one terminal and while in hangs I run on an other ps -feH:. I think these are the interesting lines; [...]; ussapc 2103516 2102893 0 07:29 pts/0 00:00:00 cmake --build . --; ussapc 2103517 2103516 0 07:29 pts/0 00:00:00 /usr/bin/gmake; ussapc 2103520 2103517 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f CMakeFiles/Makefile2 all; ussapc 2104639 2103520 0 07:29 pts/0 00:00:00 /usr/bin/gmake -f interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make interpreter/cling/tools/plugins/clad/; ussapc 2104641 2104639 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stam; ussapc 2104642 2104641 0 07:29 pts/0 00:00:00 /usr/bin/cmake -P /srv/ussapc/home/ussapc/sw/root-bld-test/interpreter/cling/tools/plugins/clad/clad-prefix/tmp/clad-gi; ussapc 2104644 2104642 0 07:29 pts/0 00:00:00 /usr/bin/git clone --origin origin https://github.com/vgvassilev/clad.git clad; ussapc 2104645 2104644 0 07:29 pts/0 00:00:00 /usr/libexec/git-core/git-remote-https origin https://github.com/vgvassilev/clad.git; [...]. seems the automatic downloads are hidden in a lot of places :-). Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-871167095:1196,down,downloads,1196,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-871167095,1,['down'],['downloads']
Availability,"Hi, @bellenot, Hi @Axel-Naumann,. still not running, I downloaded the latest version from that branch and started from scratch, but it still tries to download clad. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-871206368:55,down,downloaded,55,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-871206368,2,['down'],"['download', 'downloaded']"
Availability,"Hi, @hahnjo, thanks for pointing this out! yes we probably want to look into why this fails on python 3.8...; This enabled an aggregate initializer constructor that was required to fix a user issue and also got rid of a patch. I don't see anything in that block that could vary with python versions but it would be helpful if you can provide the verbose error log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370735125:354,error,error,354,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370735125,1,['error'],['error']
Availability,"Hi, @pcanal @bbockelm . Could you look at these two errors https://travis-ci.org/root-project/root/jobs/513121824. The first one says TTreeReaderFast calls Error (virtual function) in its constructor, which is what TTreeReader exactly did. The second one claims ""SillyStruct"" class does not have a fUniqueID. What should be the correct way to compile and create SillyStruct in order to make it generate fUniqueID automatically?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3612#issuecomment-478086551:52,error,errors,52,https://root.cern,https://github.com/root-project/root/pull/3612#issuecomment-478086551,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Hi, Asoka. I see, it's curl cmd usage then, -v means verbose but nothing else. You ; may want to add a method for further operation with authention files ; specified. Here is an example, check file existing. curl --verbose -I --head https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root. For your case, it's more like an authencation issue, this is curl SSL ; verification trick, error code 35, here is a way I figured out long time ; ago,specify cacert and capath to verify host. To download a file that needs redirection, use -L. curl --silent --show-error --cacert /tmp/x509up_u501  --connect-timeout 300 --max-time 3600 --capath /etc/grid-security/certificates --cert /tmp/x509up_u501 --key /tmp/x509up_u501 -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root  -o /tmp/ddddd-https. Hope it helps. Simon. On 5/12/2021 11:51 AM, Asoka De Silva wrote:; > Hi Simon,; >; >>>>>>>>> |curl -v ; >>>>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422908647699%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=DKbH3DJgHqWR8O0YknLB85pID2Q2zwz0CqqB18vukA4%3D&reserved=0>|; >; > How do I use curl to download on lxplus ?; >; > regards,; > Asoka; >; >> On May 12, 2021, at 11:47 AM, Simon Liu ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Hi, Asoka; >>; >> I'm not sure which exactly problem you are chasing for, as far as I ; >> can tell, there is no problem access webdav.lcg.triumf.ca ; >> <http://webdav.lcg.triumf.ca> from lxplus, and downloading files from ; >> there works fine.; >>; >>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:425,error,error,425,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,3,"['down', 'error']","['download', 'error']"
Availability,"Hi, Asoka. I'm not sure which exactly problem you are chasing for, as far as I can ; tell, there is no problem access webdav.lcg.triumf.ca from lxplus, and ; downloading files from there works fine. thanks. Simon. On 5/12/2021 11:13 AM, Asoka De Silva wrote:; > ah ... thanks, I missed that.  So ping works from lxplus but I still ; > cannot do a curl to ***@***.***; >; > regards,; > Asoka; >; >> On May 12, 2021, at 11:11 AM, Di Qing ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Asoka,; >>; >> There was a mistake in your ping command, did you see the 'ping' in ; >> the middle, so actually it was pinging host ping.; >>; >> Regards,; >>; >> Di; >>; >> On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; >>> hmm ... that was really unexpected for me for lxplus ...; >>>; >>> ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca ; >>> <http://webdav.lcg.triumf.ca/>; >>> PING (137.138.28.175) 56(124) bytes of data.; >>>; >>> ---  ping statistics ---; >>> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >>>; >>> ***@***.*** ~]$; >>>; >>> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >>>; >>> regards,; >>> Asoka; >>>; >>>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ; >>>> ***@***.***>> wrote:; >>>>; >>>> Maybe the connections were from commodity network? Are you able to ; >>>> ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>?; >>>>; >>>> Thanks,; >>>>; >>>> Di; >>>>; >>>>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ; >>>>> ***@***.***>> wrote:; >>>>>; >>>>> ﻿ Hi Axel,; >>>>>; >>>>> I don't know but I'll add Simon and Di who are the Tier-1 experts ; >>>>> and may have ideas.; >>>>>; >>>>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>>>; >>>>>; >>>>>>; >>>>>>> s I crosscheck (to see whether it's related to the Davix ; >>>>>>> redirect issue #8155 ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:158,down,downloading,158,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,10,"['PING', 'down', 'ping']","['PING', 'downloading', 'ping', 'pinging']"
Availability,"Hi, I am running nightly tests of COOL which is built using PyROOT, and since the 10th September, one test is failing when using ROOT master branch on all the platforms we test (slc6 with gcc8 and centos7 with gcc8-10 and clang10).; I suspect one commit from Sep 9, 2020 to be responsible for this change of behaviour. Here is the error and backtrace:; ```; python: /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::UsingDecl; From = clang::Decl]: Assertion `Val && ""isa<> used on a null pointer""' failed.; *** Break *** abort; ===========================================================; There was a crash (#7 0x00007facdfe876c8 in SigHandler(ESignals) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:407).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007facdeaa889e in waitpid () from /lib64/libc.so.6; #1 0x00007facdea3a4e9 in do_system () from /lib64/libc.so.6; #2 0x00007facdfe8b434 in TUnixSystem::Exec(char const*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007facdfe8bc6a in TUnixSystem::StackTrace() () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007facdc599248 in (anonymous namespace)::do_trace(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00007facdc5992c1 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #6 0x00007facdfe8f519 in TUnixSystem::DispatchSignals(ESignals) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:3644; #7 0x00007facdfe876c8 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359:331,error,error,331,https://root.cern,https://github.com/root-project/root/issues/6359,1,['error'],['error']
Availability,"Hi, I have just tested this with 6.24.06 version and it seems the error has disappeared.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8946#issuecomment-994967877:66,error,error,66,https://root.cern,https://github.com/root-project/root/issues/8946#issuecomment-994967877,1,['error'],['error']
Availability,"Hi, I have no warning at all on Windows. Can you provide the full log (all warnings and errors related to `wchar_t`), so we can try to fix them all at once? Thanks in advance!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091#issuecomment-1611219318:88,error,errors,88,https://root.cern,https://github.com/root-project/root/issues/13091#issuecomment-1611219318,1,['error'],['errors']
Availability,"Hi, I thought this had been fixed with the addition of `RooCmdArg::take` (which _is_ used even in the failing arguments), so this seemed to be a new bug. I know about the numpy/pandas conversion, but I have not tried them yet as my analysis is TTree based. ; While I can be considered a RooFit power user, I don't have that much experience with its PyROOT bindings.; I started using RooFit from PyROOT only relatively recently, because especially in ROOT 6.26 it's much nicer. From my experience now:; - sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf.; - `RooSimultaneous` map constructor does not accept a python dictionary yet; - one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421#issuecomment-1257015302:865,alive,alive,865,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257015302,2,['alive'],['alive']
Availability,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear; ```; 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'; 104: typename BranchTypes_t = typename Helper::BranchTypes_t>; 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~; 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here; 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;; 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here; 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");; 104: ^; 104: In file included from input_line_10:1:; 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:; 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'; 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));; 104: ~~~~^~~~; 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here; 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");; ```; after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/366#issuecomment-282562121:60,error,error,60,https://root.cern,https://github.com/root-project/root/pull/366#issuecomment-282562121,3,['error'],['error']
Availability,"Hi, I would also like to give my support for this being available for RooDataSet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11965#issuecomment-1506773850:56,avail,available,56,https://root.cern,https://github.com/root-project/root/issues/11965#issuecomment-1506773850,1,['avail'],['available']
Availability,"Hi, Philippe,. Just an update to the issue, ; after having upgraded the OS to Ubuntu 22.04 LTS, Root version 6.30.02. The compilation with ""-Wl, --no-as-needed -lNew"" works fine. . But problems still remain:; run the demo macro of TApplication, Error messages are as following,; ```; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; #0 0x00007f7901aea3ea in __GI___wait4 (pid=10250, stat_loc=stat_loc; entry=0x7ffeb2a715a8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f7901aea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffeb2a715a8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f7901a50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f7902b13034 in TUnixSystem::StackTrace() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #4 0x00007f79029d0702 in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #5 0x00007f7902a96fe9 in ErrorHandler () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #6 0x00007f7902a97b69 in Fatal(char const*, char const*, ...) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #7 0x00007f7902d5e6ed in operator new(unsigned long, std::align_val_t) () from /home/koala/ROOT/root_v6.30.02/lib/libNew.so; #8 0x00007f78ff1f5430 in std::pair<llvm::StringMapIterator<llvm::cl::Option*>, bool> llvm::StringMap<llvm::cl::Option*, llvm::MallocAllocator>::try_emplace<llvm::cl::Option*>(llvm::StringRef, llvm::cl::Option*&&) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #9 0x00007f78ff1f5b3d in (anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, llvm::cl::SubCommand*) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #10 0x00007f78ff1f6805 in llvm::cl::Option::addArgument() () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #11 0x00007f78fb1ba304 in __static_initialization_and_destruction_0(int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:245,Error,Error,245,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,1,['Error'],['Error']
Availability,"Hi, Philippe,. Many thanks for your effort. Indeed, the case of missing libtinfo.so.5 happened to the root versions of 6.14.06, 6.16.00 and 6.18.04, however the libtinfo.so.6 is availabe on Ubuntu 20.04.4. From 6.20.00 on, the error of missing libtinfo.so.5 does not appere any more. . Maybe we could focus on one specific OS, for instance, Ubuntu 20.04.4. Have you tested the macros on Ubuntu 20.04.4? Or which system and which version have you used? . Concerning the ROOT versions (6.24.08, 6.26.10 and 6.28.04) on the Ubuntu 20.04.4 (gcc 9.4), those 3 ROOT versions all have been tested with gcc9.4, however, except for 6.28.04, the 6.24.08 and 6.26.10 both don't work with TApplication when the macro was compiled with the ROOT-CONFIG option of ""-Wl,--no-as-needed -lNew"". . Without the option ""-Wl,--no-as-needed -lNew"", the TApplication works properly as expected. Could you have a closer look at this issue? What I want is to have more working combinations of ROOT and Ubuntu, therefore I don't have to update each OS system and the EMS system, which is quite challenging. . Many thanks in advance.; Huagen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1727380722:178,avail,availabe,178,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1727380722,2,"['avail', 'error']","['availabe', 'error']"
Availability,"Hi, Sergey.; Oh, it took time to understand a new error while my tests:; ```; *** Break *** segmentation violation; munmap_chunk(): invalid pointer; ```; because it doesn't contain any information on line codes. Finally, i found that it happens because of this new function: ""TPgSQLStatement::SetSQLParamType"".; The function doesn't take into account all possible cases that have been accounted for before, e.g. if in 'SetBinary(Int_t npar, void* mem, Long_t size, Long_t maxsize)' the 'size' variable is greater than 'maxsize'. In the example the 'SetSQLParamType' function creates buffer with size being equal only 'maxsize', which is less than 'size' of the input array.; The old error-prone implementation worked at all my tests :). With respect, Konstantin.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-774505925:50,error,error,50,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-774505925,2,['error'],"['error', 'error-prone']"
Availability,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6588#issuecomment-705524312:100,error,error-root-master,100,https://root.cern,https://github.com/root-project/root/pull/6588#issuecomment-705524312,1,['error'],['error-root-master']
Availability,"Hi, if correctness of our code depends on the order of header inclusion we are in for __a lot__ of pain in the future. Could we put something like the following in `RMakeUnique.hxx` instead?. ```c++; #ifdef WIN32; #include <memory> // our supported windows versions always ship with make_unique; #else; // rest of the file; #endif; ```. Also, @dpiparo does this mean that `RMakeUnique.hxx` breaks any build in which `<memory>` already defines `make_unique`? It would be weird we didn't notice, probably I don't understand this failure well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1203#issuecomment-337961364:527,failure,failure,527,https://root.cern,https://github.com/root-project/root/pull/1203#issuecomment-337961364,1,['failure'],['failure']
Availability,"Hi, little ping :) Could we just add `-fno-pie` to ACLiC's compilation flag?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-884736532:11,ping,ping,11,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-884736532,1,['ping'],['ping']
Availability,"Hi, little ping :) I still can't run tests on my laptop.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-948701606:11,ping,ping,11,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-948701606,1,['ping'],['ping']
Availability,"Hi, little ping on this, it would be a big quality of life improvement for me :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8031#issuecomment-880587158:11,ping,ping,11,https://root.cern,https://github.com/root-project/root/issues/8031#issuecomment-880587158,1,['ping'],['ping']
Availability,"Hi, most of cmssw tests passed but for few relvals we get runtime errors like [a]. [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log; ```#--------------------------------------------------------------------------; cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8); ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------; An exception of category 'FatalRootError' occurred while; [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0; [1] Running path 'dqmoffline_1_step'; [2] Prefetching for module NanoAODDQM/'nanoDQM'; [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'; [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'; [5] Prefetching for module PATMuonRefSelector/'finalMuons'; [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'; [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'; Additional Info:; [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper; Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());; return;; }; else {; (void)(((const reco::TrackBase*)obj)->validFraction());; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------; Anot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2407514028:66,error,errors,66,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2407514028,2,['error'],"['error', 'errors']"
Availability,"Hi, thanks a lot for opening this issue! I was aware of this, and in the next patch release these spurious free parameters will be gone (6.26.06 is expected in about 2 weeks). However, it is still good that you opened this issue because now that you used `Print(""V"")`, I see that the spurious parameters are still there in the fit result with ROOT `master`, they are just constant!. ```. RooFitResult: minimized FCN value: 46.0037, estimated distance to minimum: 1.51615e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 . Constant Parameter Value ; -------------------- ------------; _a_x 5.0000e-01. Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; m 5.0000e-01 4.8765e-01 +/- 1.02e-02 <none>; ```. So to close this issue for good, we also have to get rid of them in the ""Constant Parameter"" list. These spurious parameters should not be seen anywhere, as they are pure implementation details for the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991#issuecomment-1189334464:693,Error,Error,693,https://root.cern,https://github.com/root-project/root/issues/10991#issuecomment-1189334464,1,['Error'],['Error']
Availability,"Hi, thanks for asking! All is okay here, the test failures are unrelated to RooFit, and we are just waiting for the review by @lmoneta who was busy with other things last week. But this will come maybe today or tomorrow and then we merge this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10553#issuecomment-1128537734:50,failure,failures,50,https://root.cern,https://github.com/root-project/root/pull/10553#issuecomment-1128537734,1,['failure'],['failures']
Availability,"Hi, thanks for pointing out that this clipping is inconsistent with the TTree version! And thanks for the kind words!. I designed the numpy version to be consistent with filling a RooDataSet one-by-one with `RooDataSet::add()`, in which case the value is clipped. That's a general problem in RooFit, many ways to do the same thing and they behave inconsistently. However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. This issue is related to https://github.com/root-project/root/issues/6937. Probably I will address them together in one PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10447#issuecomment-1110865265:473,error,erroring,473,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110865265,1,['error'],['erroring']
Availability,"Hi, thanks for the PR! I suppose the test failures are not expected?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966#issuecomment-1184958767:42,failure,failures,42,https://root.cern,https://github.com/root-project/root/pull/10966#issuecomment-1184958767,1,['failure'],['failures']
Availability,"Hi, thanks for the clarification. But I was speaking about downloading the binary release, not self-build and install. I just download the binary release, and then unzip it under /opt/root. Finally, I go to an empty folder, and then call cmake ../my-source-code -DROOT_DIR=/opt/root. So, I point directly at the proper folder where ROOT is installed, via the -DROOT_DIR argument.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840428160:59,down,downloading,59,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840428160,2,['down'],"['download', 'downloading']"
Availability,"Hi, thanks for the question!. The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:; https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:; ```C++; void write() {. TParameter<int> x1{""x1"", 5};; std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");; file->WriteObject(&x2, ""x2"");; }; ```; Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx; You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2335109569:540,redundant,redundant,540,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2335109569,1,['redundant'],['redundant']
Availability,"Hi, thanks for the reply, indeed, in this case the histograms do have 0 uncertainties. I was just surprised by the 0 probability. I think an error message would help, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13697#issuecomment-1751001556:141,error,error,141,https://root.cern,https://github.com/root-project/root/issues/13697#issuecomment-1751001556,1,['error'],['error']
Availability,"Hi, the documentation at https://root.cern.ch/doc/v608/classTH3.html#ad6e3388d1f127f018941f932a50a3e2d says:; `The given values (x,y,z) must be between first bin center and last bin center for each coordinate`. Because 0.002 is below the first bin center, you get the error message. I guess you are rather looking for an 'extrapolate' function?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10678#issuecomment-1143413456:268,error,error,268,https://root.cern,https://github.com/root-project/root/issues/10678#issuecomment-1143413456,1,['error'],['error']
Availability,"Hi,. 1) Jobs at BNL fail regardless of the source file.; Backs up the gethostname theory. 2) I cannot reproduce with a simple C program containing a TFile::Open,; built after setting up the same release; g++ $(root-config --cflags --libs) -o main main.C; and running after the same setup.; Contradicts (1). I have not tried to build the binary that fails, so cannot really say my; small C program is built in the same way. Maybe RD could do that. Or; brutally strip down your code until it either starts working or is a simple; TFile::)open. I am really out of ideas unless the 1,2 contradiction can be removed. Could we build an xroot lib with more debug statements, and pass that with; the job?; I could ask sites about worker node characteristics to find a pattern, but; I`m not sure what to ask about.; IPv6, nscd, dns?. Cheers,; Rod. On Fri, 15 Jan 2021 at 06:55, Axel Naumann <notifications@github.com> wrote:. > @gganis <https://github.com/gganis> @peremato; > <https://github.com/peremato> would you know whether the xrootd libraries; > have their symbols stripped, or who might know?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-760664510>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRQWK7YZM6KZ5REVCTLSZ7KGFANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760719476:466,down,down,466,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760719476,1,['down'],['down']
Availability,"Hi,. After checking this more closely, I was wrong. As the example below shows, TH2Poly does store the errors as the sum of the squares of the weights. However the errors seem to be stored in the histogram itself, in `fSumw2.fArray`, while the TH2PolyBIn only stores the content, see:. https://root.cern.ch/doc/master/TH2Poly_8cxx_source.html#l00598. ```python; import ROOT; import math. h=ROOT.TH2Poly('h', '', 0, 10, 0, 10) ; h.AddBin(0, 0, 4, 10) ; h.AddBin(4, 0, 8, 10) ; h.AddBin(8, 0, 10, 10) . h.Fill(2, 1, 0.5); h.Fill(2, 1, 0.3); h.Fill(2, 1, 0.2). h.Fill(6, 1, 0.5); h.Fill(6, 1, 0.4); h.Fill(6, 1, 0.1). h.Fill(9, 1, 0.8); h.Fill(9, 1, 0.6); h.Fill(9, 1, 0.2). c=ROOT.TCanvas('c', '', 600, 600); h.Draw('text error'); c.SaveAs('plot.png'). err_1=math.sqrt(0.5**2 + 0.3**2 + 0.2**2); err_2=math.sqrt(0.5**2 + 0.4**2 + 0.1**2); err_3=math.sqrt(0.8**2 + 0.6**2 + 0.2**2). print(err_1); print(err_2); print(err_3); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340#issuecomment-856613695:103,error,errors,103,https://root.cern,https://github.com/root-project/root/issues/8340#issuecomment-856613695,3,['error'],"['error', 'errors']"
Availability,"Hi,. After touch a header file in `io/io/inc` and running **only** `ninja RIO` then running `root.exe -b -l -q` I get:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:172,error,error,172,https://root.cern,https://github.com/root-project/root/issues/7704,2,['error'],['error']
Availability,"Hi,. I fixed that since the bug affected my development platform. Now the tarball is fetched from the eos based website from where all other tarballs are downloaded. The reason for the bug was the fact that curl could not use https.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304977075:154,down,downloaded,154,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304977075,1,['down'],['downloaded']
Availability,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error....; I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly?. Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006425835:15,error,error,15,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006425835,2,['error'],['error']
Availability,"Hi,. I have tested the method `TH1::Chisquare` and seems to calculate the Pearson Chi2 properly. ```; // File: test.cxx; // test TH1::Chisquare function. Pearson Chi2 is calculated as expected; // To run the script: root test.cxx; void test(); {. int nbins = 100;; double xmin =-5;; double xmax = 5;. TF1 * f = new TF1(""f"",""gausn"");; double nentries = 1000;; double binwidth = (xmax-xmin)/nbins;; f->SetParameters(nentries*binwidth,0.,1.);; f->SetRange(-10,10);. TH1D *h = new TH1D(""h"","""", nbins, xmin,xmax);; h->FillRandom(""f2"",nentries);; h->Draw();; f->Draw(""same"");. //-- Chi2 Pearson; double chi2_th1 = h->Chisquare( f , ""P"");. // note: below it is assumed that ""bin error"" = sqrt( f(""bin center"") ); double chi2_P = 0.;; for (int i = 1; i <= h->GetNbinsX(); i++) {; double v = f->Eval(h->GetBinCenter(i));; if (v) chi2_P += TMath::Sq(v - h->GetBinContent(i)) / TMath::Abs(v);; }; std::cout << ""hand calculated Pearson chi2 = "" << chi2_P << ""\n"";; std::cout << ""ROOT TH1::Chisquare chi2 = "" << chi2_th1 << ""\n"";. }; ```. Question: Should `ROOT::Fit::FitResult::Chi2` call `TH1::Chisquare` to avoid writing the same piece of code in two different places?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11143#issuecomment-1941799173:672,error,error,672,https://root.cern,https://github.com/root-project/root/issues/11143#issuecomment-1941799173,1,['error'],['error']
Availability,"Hi,. I have thought of this and despite this is not technically a mistake from your side (i.e. we still can use errors, etc) this is bad design. I would put all the bin related quantities in the bin object, including the errors. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340#issuecomment-856648590:112,error,errors,112,https://root.cern,https://github.com/root-project/root/issues/8340#issuecomment-856648590,2,['error'],['errors']
Availability,"Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output; ```cmake; -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log; [ 0%] No update step for 'TBB'; [ 0%] No patch step for 'TBB'; [ 0%] No configure step for 'TBB'; [ 0%] Performing build step for 'TBB'; CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get; ```cmake; -- Found TBB: /opt/homebrew; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):; if given arguments:. ""VERSION_LESS"" ""2018""; ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370:315,down,download,315,https://root.cern,https://github.com/root-project/root/issues/10370,4,"['Error', 'down']","['Error', 'download']"
Availability,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:901,echo,echo,901,https://root.cern,https://github.com/root-project/root/issues/8092,1,['echo'],['echo']
Availability,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:149,robust,robust,149,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,3,"['down', 'error', 'robust']","['downsides', 'error', 'robust']"
Availability,"Hi,. Thanks for trying to recreate it! I tried on my end as well, trying to recreate the code snippet the best I can in a standalone .cxx file. Unfortunately, I also couldn't obtain this ""Invalid write of size 1"" either. I have tried with the exact same pathways, same ROOT version, and same compiler. I copied quite a bit of code over to this standalone file from the project. My best guess is that it's a transient problem, and could be a side-effect of memory issues elsewhere in the code. My setup on lxplus while attempting to reproduce the problem; ```; > lsetup ""root 6.28.08-x86_64-el9-gcc13-opt""; > source /cvmfs/sft.cern.ch/lcg/contrib/gcc/13.1.0/x86_64-el9-gcc13-opt/setup.sh; > gcc --version; gcc (GCC) 13.1.0; > root -b -q; Welcome to ROOT 6.28/08; > g++ -o <output> <standalone_file>.cxx `root-config --cflags --glibs`; ```. My setup using setupATLAS when compiling the project ; (And tested with the standalone file as well); ```; setupATLAS; asetup AnalysisBase,24.2.27; ```. **Regarding the debug build**; I used the latest corresponding to `x86_64-el9-gcc13-dbg`; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-dbg/setup.sh; ```. However, this gives a ROOT version of ROOT 6.31/01, which is higher than what I compiled for (6.28/08). With this upgraded ROOT version, my project no longer compiles. (And since we don't plan on updating past the AnalysisBase release, I don't plan to fix the compilation error 🙂); If there's a way of obtaining a debug build of ROOT 6.28/08, I can try it. This coredump only started appearing when our compiler version changed from x86_64-centos7-gcc8-opt to x86_64-el9-gcc13-opt, and we moved to AnalysisBase,24.2.27 from AnalysisBase,22.2.113. Before this update, we have not seen our program core dump. While I'm curious of the cause, we don't need this fixed. ; Using `std::filesystem` works well for us. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14096#issuecomment-1825451888:1443,error,error,1443,https://root.cern,https://github.com/root-project/root/issues/14096#issuecomment-1825451888,1,['error'],['error']
Availability,"Hi,. There is nice code in the current TBasket.cxx file which potentially has much better compression then proposed one. It is here:. https://github.com/root-project/root/blob/master/tree/tree/src/TBasket.cxx#L858-L883. It is commented out with remark that it has potential errors.; I see two reasons why it may have failure. First, one should extend check:. if (1 && fEntryOffset && fNevBuf>=3 && !fDisplacement) . If `!fDisplacement` missing, then some classes will fail. And second, probably some readers relies that `TBasket::GetEntryOffset()` returns array - even when fNevBufSize set. In such case one need to reintroduce `fEntryOffset` array in reading part of TBasket. My opinion, that such change will bring much better compression.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-332251439:274,error,errors,274,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-332251439,2,"['error', 'failure']","['errors', 'failure']"
Availability,"Hi,. This PR cannot be merged since the test is failing. Could you please have a look @will-cern ?; ```; Running main() from /googletest-release-1.11.0/googletest/src/gtest_main.cc; [==========] Running 3 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 3 tests from Projections; [ RUN ] Projections.Issue_6658_2D; [ OK ] Projections.Issue_6658_2D (175 ms); [ RUN ] Projections.Issue_6658_3D; [ OK ] Projections.Issue_6658_3D (0 ms); [ RUN ] Projections.Issue_6658_Profile2D; /root/src/core/testsupport/src/TestSupport.cxx:89: Failure; Failed; Received unexpected diagnostic of severity 2000 at 'TROOT::Append' reading 'Replacing existing TH1: x (Potential memory leak).'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] Projections.Issue_6658_Profile2D (1 ms); [----------] 3 tests from Projections (176 ms total); ; [----------] Global test environment tear-down; [==========] 3 tests from 1 test suite ran. (176 ms total); [ PASSED ] 2 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] Projections.Issue_6658_Profile2D; ; 1 FAILED TEST; CMake Error at /root/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194#issuecomment-2285889101:563,Failure,Failure,563,https://root.cern,https://github.com/root-project/root/pull/16194#issuecomment-2285889101,4,"['Error', 'Failure', 'down', 'error']","['Error', 'Failure', 'down', 'error']"
Availability,"Hi,. This has been bugging me for a while now. 😛. ROOT has been exporting a CMake configuration for downstream projects (using ROOT) for a while now. But the exported/imported library targets at the moment can't be used with code like:. ```cmake; find_package( ROOT 6.10 REQUIRED ); add_executable( MyExecutable test.cxx ); target_link_libraries( MyExecutable ROOT::Core ); ```. In this case the build would complain that it can't find the ROOT headers that `test.cxx` may want to use. Even though the expectation against imported targets **is** that they would carry all information with them to compile any client code correctly. While the latter sentiment can take us quite far, as one could even argue that imported libraries should carry whatever compiler definitions/options the client may need with themselves, unfortunately this is not super easy to do with CMake at the moment. (For instance I don't know of a good way in which the imported library could impose the same C++ standard on the client project that ROOT was built with. While allowing the client project to use an even newer standard if needed.). So for now I'll just be satisfied making sure that at least the include directory needed by the ROOT libraries would be automatically propagated to clients wanting to link against them. This update takes care of that. Cheers,; Attila",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466:100,down,downstream,100,https://root.cern,https://github.com/root-project/root/pull/1466,1,['down'],['downstream']
Availability,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```; $ root -v; -----------------------------------------------------------------; | Welcome to ROOT 6.09/01 http://root.cern.ch |; | (c) 1995-2016, The ROOT Team |; | Built for macosx64 |; | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -----------------------------------------------------------------; ```; ```; $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x; x before reading; RooRealVar::x = 10 L(1 - 100) ; [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision; x after reading; RooRealVar::x = 100 L(1 - 100) ; ```; Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind; ```; x = 1e+06 L(10000 - 1e+06) ; ```; and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/352#issuecomment-280659523:80,error,error,80,https://root.cern,https://github.com/root-project/root/pull/352#issuecomment-280659523,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:; ```; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```; A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:; ```; root[0] .L path_to_celeritas_build/libceleritas_root.so; ```; leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:; ```; std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);; ```; for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162:180,error,errors,180,https://root.cern,https://github.com/root-project/root/issues/10162,12,"['Error', 'avail', 'down', 'error']","['Error', 'available', 'down', 'error', 'errors']"
Availability,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7905:222,error,error,222,https://root.cern,https://github.com/root-project/root/issues/7905,1,['error'],['error']
Availability,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340#issuecomment-861598892:123,error,errors,123,https://root.cern,https://github.com/root-project/root/issues/8340#issuecomment-861598892,1,['error'],['errors']
Availability,"Hi,. is there any chance to get this merged soon? We are getting code migrated from `const std::string&` to `std::string_view`, which is more efficient when dealing with string literals. Because of that we are getting many failures in our tests against ROOT v6.20-patches, for code that works nicely with ROOT 6.18/04. Thanks; Marco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4829#issuecomment-580356319:223,failure,failures,223,https://root.cern,https://github.com/root-project/root/pull/4829#issuecomment-580356319,1,['failure'],['failures']
Availability,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in.; - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail?; - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too?; - test/stressGraphics.ref: I think this is something to be commented by @couet ; - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds.; - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:; - THistPainter.cxx: OK; - CMakeLists: OK; - test/stressGraphics.cxx: OK; - test/stressHistogram.cxx: OK; - test/stressRooFit.cxx: OK; - tmva/pymva/test/Classification.C: OK; - tmva/rmva/test/Classification.C: OK; - tutorials/hist/th2polyUSA.C: OK; - tutorials/mlp/mlpHiggs.C: OK; - tutorials/quadp/portfolio.C: OK; - tutorials/tmva/TMVAClassification.C: OK; - tutorials/tmva/TMVAClassificationApplication.C: OK; - tutorials/tmva/TMVARegression.C: OK; - tutorials/tmva/TMVARegressionApplication.C: OK",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-227256795:539,failure,failure,539,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-227256795,1,['failure'],['failure']
Availability,"Hi,. very last time and then I give up ... > B) of course, users shouldn't install anything to /usr[/local] without; > using package management. But they do. > but it will simplify packaging too by not having to install an ugly; > script somewhere that sets PYTHONPATH. Ugly scripts that are seldom seen. I care more about humans than computers.; Additionally, the removal scripts can be simpler, as the package manager; knows where it put what, rather than the package stuffing portions in; different places, so I'd say its a wash. > As for the downsides, I think this solution is just simpler (not; > mentioning cleaner), maybe this will get you less bug reports. Straight of the bat, the whole nightly build system would roll over and; all developers that use cmake (not me, luckily) would have to change their; workflow. Why? B/c most of these setups are 1 python installation and; multiple ROOT installations, or different users for both so no access; rights to site packages. Add that packagers for LCG experiments now need; to know that ROOT puts stuff in $ROOTSYS and in $PYTHONHOME and fix what; they pick up from where. For that matter, I think there will be far more; 'ugly scripts' being created here to work around the mess this would add,; that I dare claim that even that argument of yours holds no water. Like I said, this is my last word on it. It's not worth my time if you; refuse to look beyond that one use case. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-139309263:546,down,downsides,546,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-139309263,1,['down'],['downsides']
Availability,"Hi,; I am trying to download the ROOT VM from the https://cernbox.cern.ch/index.php/s/ZF5pffhZuZjwgAI, but there is an UNKNOWN ERROR while entering this link. would you please help me on this error?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158:20,down,download,20,https://root.cern,https://github.com/root-project/root/issues/12158,3,"['ERROR', 'down', 'error']","['ERROR', 'download', 'error']"
Availability,"Hi,; I can run with valgrind now. https://bigpanda.cern.ch/job?pandaid=4946556588; ends with; ==2505== by 0x3FD274BC:; XrdCl::File::Open(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&,; XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0). but maybe I did not have the right arguments. I tried again with. --trace-children=yes --track-origins=yes --error-limit=no; Should be; https://bigpanda.cern.ch/job?pandaid=4946562660. Cheers,. Rod. On Tue, 12 Jan 2021 at 14:49, Attila Krasznahorkay <notifications@github.com>; wrote:. > In AnalysisBase-21.2.91 we used XRootD 4.8.4.; >; > And @#$% me... How did I not remember this earlier?!? Is this not all about; >; > https://its.cern.ch/jira/browse/ATLASG-1546; >; > [image: Screenshot from 2021-01-12 14-46-12]; > <https://user-images.githubusercontent.com/30694331/104322255-0438b000-54e5-11eb-897e-8d1ae2a125d4.png>; >; > ? I.e. it may not be the XRootD version after all, but the version of; > ROOT... However, if this *is* the case, then AnalysisBase-21.2.140+; > should *not* show the issue anymore. 🤔; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-758666233>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRURKONZMUE5DXE4EQ3SZRHNVANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758872231:537,error,error-limit,537,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758872231,1,['error'],['error-limit']
Availability,"Hi,; I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6518#issuecomment-773505129:750,error,error,750,https://root.cern,https://github.com/root-project/root/issues/6518#issuecomment-773505129,2,['error'],['error']
Availability,"Hi,; I may be doing something wrong here but running the root-prob.py on 8f87cc I do not get any failure :-(; ```; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x; x before reading; RooRealVar::x = 10 L(1 - 100) ; x after reading; RooRealVar::x = 10 L(1 - 100) ; ```; thoughts?. Cheers,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/352#issuecomment-280655750:97,failure,failure,97,https://root.cern,https://github.com/root-project/root/pull/352#issuecomment-280655750,1,['failure'],['failure']
Availability,"Hi,; I see these messages in the xrootd code; https://github.com/xrootd/xrootd; but it is beyond me to find the problem. Maybe it is time to include Andy; etc. Cheers,; Rod. On Mon, 11 Jan 2021 at 17:19, rdschaffer <notifications@github.com> wrote:. > Well looking at the debug logs, all failed jobs die after ""kXR_protocol""; > and before "" and before ""Sending out kXR_login request"". I haven't been; > able to download logs from too many successful jobs. But I have three - two; > reading from RAL and one reading in LAPP. I give a link to the log files; > and the last DEBUG line of the failed jobs and the same line plus the next; > for the successful jobs. So perhaps a question of what is happening in the; > code between these two points?; >; > see you, RD; >; > Successful RAL:; >; >; > https://bigpanda.cern.ch//media/filebrowser/667e8363-d9bb-4ebd-800f-79d3495d1b3a/panda/tarball_PandaJob_4925629005_RAL/payload.stdout; >; > [2020-12-18 14:20:13.919081 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-18 14:20:13.919352 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=runH4lAnalRun2&; > xrd.info=&xrd.hostname=tatls002-2010227.0-lcg2237.gridpp.rl.ac.uk&xrd.rn=v4.10.0,; > dual-stack: false, private IPv4: true, private IPv6: false; >; > Successful UK WATERLOO:; >; >; > https://bigpanda.cern.ch//media/filebrowser/772fff72-3e22-499f-8a3f-aa8956ea5636/panda/tarball_PandaJob_4926186410_RAL/payload.stdout; >; > [2020-12-19 00:45:02.375203 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] kXR_protocol successful (type: server; > [], protocol version 400); > [2020-12-19 00:45:02.375430 +0000][Debug ][XRootDTransport ] [; > xrootd.echo.stfc.ac.uk:1094 #0.0] Sending out kXR_login request,; > username: tatls002, cgi: ?xrd.cc=uk&xrd.tz=0&xrd.appname=run",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758074953:411,down,download,411,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758074953,1,['down'],['download']
Availability,"Hi,; I think I have found a solution that fulfilles all requirements.; First of all the good news: I got rid of all double pointers and two dimensional arrays. I overhauled all the constructors and since I was already at it, I also added constructors which take a name and a title, as it is implemented for histograms. The notations without name and title still persist so the class stays compatible with all other TGraph objects. For the constructors which take y errors, I implemented one which takes std::vector<std::vector<Double_t>> as prefered by you and one which takes std::vector\<TArrayD\> which ist the implementation I prefer, since I still think one should use STL containers only when there is no way to achieve the same result with ROOT objects. Another change I implemented is changing the arrays that store the summed y-errors to mutable because that allows me to implement the functions GetEYlow() and GetEYhigh() inherited from TGraph with the exact same signature which eliminated possible problems with graph objects declared as constant. I hope I could fulfill all your expectations with these changes.; All the best,; Simon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-564027666:465,error,errors,465,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-564027666,2,['error'],['errors']
Availability,"Hi,; I'm trying to use lambda expressions to define TF1 objects.; Inside python I run the following code:; `from ROOT import TF1`; `f = TF1('f', lambda x: x[0], 0, 1)`; `f.Draw()`. but I get a blank canvas and this error:; ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook; gInterpreter.EndOfLineAction(); TypeError: void TInterpreter::EndOfLineAction() =>; TypeError: callable was deleted; ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9465:215,error,error,215,https://root.cern,https://github.com/root-project/root/issues/9465,2,['error'],['error']
Availability,"Hi,; It is easy to bring ping to work!; But that does not necessarily mean that wget works.; Georg; Von meinem iPhone gesendet. > Am 21.06.2021 um 12:13 schrieb Bertrand Bellenot ***@***.***>:; > ; > ﻿; > There is a ugly workaround to check for network:; > ; > execute_process(; > COMMAND ping www.github.com -n 2 -w 1000; > RESULT_VARIABLE NO_CONNECTION; > ); > And then use NO_CONNECTION like for example:; > ; > if(NO_CONNECTION EQUAL 1); > message(STATUS ""No internet connection, disabling 'builtin_tbb' option""); > set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE); > set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE); > else(); > ...; > I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-865289345:25,ping,ping,25,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-865289345,2,['ping'],['ping']
Availability,"Hi,; It is interesting that this job fails with the same segfault, although it; does not use directio for the inputs; https://bigpanda.cern.ch/job?pandaid=4946328705. It has some hardwired TFile open from RD. [2021-01-12 06:55:54.209757 -0500][Debug ][PostMaster ]; Creating new channel to: this-will-totally-fail:1094 1 stream(s); [2021-01-12 06:55:54.209835 -0500][Debug ][PostMaster ]; [this-will-totally-fail:1094 #0] Stream parameters: Network Stack:; IPAuto, Connection Window: 120, ConnectionRetry: 5, Stream Error; Window: 1800; [2021-01-12 06:55:54.209937 -0500][Debug ][TaskMgr ]; Registering task: ""TickGeneratorTask for: this-will-totally-fail:1094""; to be run at: [2021-01-12 06:56:09 -0500]; [2021-01-12 06:55:54.209976 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] MsgHandler created: 0x3171890 (message:; kXR_open (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat; ) ).; [2021-01-12 06:55:54.210005 -0500][Dump ][PostMaster ]; [this-will-totally-fail:1094 #0] Sending message kXR_open (file: ,; mode: 00, flags: kXR_open_read kXR_async kXR_retstat ) (0x31933e0); through substream 0 expecting answer at 0; [2021-01-12 06:55:54.210582 -0500][Error ][Utility ] Unable; to resolve this-will-totally-fail:1094: Name or service not known; [2021-01-12 06:55:54.210595 -0500][Error ][PostMaster ]; [this-will-totally-fail:1094 #0] Unable to resolve IP address for the; host; [2021-01-12 06:55:54.210610 -0500][Error ][XRootD ]; [this-will-totally-fail:1094] Unable to send the message kXR_open; (file: , mode: 00, flags: kXR_open_read kXR_async kXR_retstat ):; [FATAL] Invalid address; [2021-01-12 06:55:54.210651 -0500][Debug ][ExDbgMsg ]; [this-will-totally-fail:1094] Destroying MsgHandler: 0x3171890.; Error in <TNetXNGFile::Open>: [FATAL] Invalid address; [2021-01-12 06:55:54.211229 -0500][Debug ][Utility ]; Monitor library name not set. No monitoring. The TFile is expected to fail, but why the segfault?; The jobs ran on native CentOS, so the singularity conta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758618647:516,Error,Error,516,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758618647,1,['Error'],['Error']
Availability,"Hi,; Letting the valgrind output go to stdout, it looks completely different; /afs/cern.ch/user/w/walkerr/public/RD_valgrid_stdout.log. I`ll try with this; --suppressions=valgrind-root.supp; to see if it reduces it. Cheers,; Rod. On Wed, 13 Jan 2021 at 18:53, Rodney Walker <; rodney.walker@physik.uni-muenchen.de> wrote:. > Hi,; > Sure; > /afs/cern.ch/user/w/walkerr/public/valg.log_nowrapper; > I have no idea what the binary junk is in there. I run it like this; >; > valgrind --log-file=../valg.log --leak-check=full --trace-children=yes; > --track-origins=yes --error-limit=no; > usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2; > $@; >; > but have no experience of valgrind so open to corrections.; >; > Cheers,; > Rod.; >; >; > On Wed, 13 Jan 2021 at 18:47, Axel Naumann <notifications@github.com>; > wrote:; >; >> Can you share the while valgrind report without wrapper? The error you; >> quote is intentional (and part of the ROOT suppression file).; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/root-project/root/issues/6948#issuecomment-759611858>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/ABNFVRQSF742BV7R7BKKHV3SZXMDPANCNFSM4U2MLUJA>; >> .; >>; >; >; > --; > Tel. +49 89 289 14152; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759984606:567,error,error-limit,567,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759984606,2,['error'],"['error', 'error-limit']"
Availability,"Hi,; My apologies if i shouldn't post in this forum. I have a similar problem, i.e. a bus error on my MacBook Air M2 Sonoma 14.5 (Xcode 15.4 / clang 15.0.0) - root 6.30/06 ; (I've tried the binaries from the 'official' distribution, from homebrew and even recompiling the sources). If I run root from Terminal.app it gives me a bus error with the same ""message"" as TheCodeEater on April 3rd. . root [0] new TBrowser(). *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info). But i **don't get** a bus error IF: ; a) I run root as regular user from an xterm ; b) I run ""sudo root"" from the Mac's Terminal.App. Any help is appreciated.; Francesco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129#issuecomment-2127806901:90,error,error,90,https://root.cern,https://github.com/root-project/root/issues/15129#issuecomment-2127806901,4,['error'],['error']
Availability,"Hi,; Ok I went though your commits:. It seems that the default timeout for wget is 900s !!. Because pf this; $ wget https://root.cern.ch/files/dummy.txt; --2021-06-24 13:01:05-- https://root.cern.ch/files/dummy.txt; Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6; Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected. is bloody long time. I would recommend: ; $ wget --timeout=10 https://root.cern.ch/files/dummy.txt; --2021-06-24 13:04:20-- https://root.cern.ch/files/dummy.txt; Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6; Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected.; Unable to establish SSL connection. An echo like "" --Checking for internet connection"" would be befinical too. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867621925:734,echo,echo,734,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867621925,1,['echo'],['echo']
Availability,"Hi,; Sure; /afs/cern.ch/user/w/walkerr/public/valg.log_nowrapper; I have no idea what the binary junk is in there. I run it like this. valgrind --log-file=../valg.log --leak-check=full --trace-children=yes; --track-origins=yes --error-limit=no; usr/HZZAnalRun2Code/1.0.0/InstallArea/x86_64-centos7-gcc8-opt/bin/runH4lAnalRun2; $@. but have no experience of valgrind so open to corrections. Cheers,; Rod. On Wed, 13 Jan 2021 at 18:47, Axel Naumann <notifications@github.com> wrote:. > Can you share the while valgrind report without wrapper? The error you; > quote is intentional (and part of the ROOT suppression file).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-759611858>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRQSF742BV7R7BKKHV3SZXMDPANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759615449:229,error,error-limit,229,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759615449,2,['error'],"['error', 'error-limit']"
Availability,"Hi,; That solves the problem. Thank you very much. Best,; Sakib. On Tue, Jun 8, 2021 at 12:47 PM Enrico Guiraud ***@***.***>; wrote:. > Hi,; > the segmentation fault is terrible ( ping @Axel-Naumann; > <https://github.com/Axel-Naumann> ) but the code is not valid C++: you; > need for(int i=0; i<12; i++) instead of for(i=0; i<12; i++). Does that; > fix the crash?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/8367#issuecomment-856929174>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AUMS4Q3F6PHG63CCZNBXWKTTRZCTBANCNFSM46I5PYFQ>; > .; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367#issuecomment-856941765:160,fault,fault,160,https://root.cern,https://github.com/root-project/root/issues/8367#issuecomment-856941765,2,"['fault', 'ping']","['fault', 'ping']"
Availability,"Hi,; The example in https://root.cern/manual/io_custom_classes/ has MyClass inside quotes. That gives errors and misleads people trying to follow the manual.; BR, ; Jan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12869:102,error,errors,102,https://root.cern,https://github.com/root-project/root/issues/12869,1,['error'],['errors']
Availability,"Hi,; The grid jobs are running in a standard centos7 image. /cvmfs/atlas.cern.ch/repo/containers/fs/singularity/x86_64-centos7. so it is hard to see how any system libs can be used. OTOH full cvmfs is; available to the job, so I could imagine some different libs are used from; there, although I thought this was checked already. I could not reproduce; the failure even running inside a pilot, as far as I could see identically; to on the grid.; Not really sure how to proceed - I tried lots of stuff already. Maybe RD; submits a new task, forced to a site that always fails. We check it fails; 100% then I`ll try to reproduce it. It is not a great plan, but I`ve; nothing else. From the failing sites,; AGLT2 (1); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=AGLT2>; ANALY_BNL_INTEL (3); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=ANALY_BNL_INTEL>; CERN (2); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=CERN>; CERN-T0 (3); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=CERN-T0>; IN2P3-CPPM (3); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mode=drop&processingtype=!pmerge&prodsourcelabel=user&mode=nodrop&jobstatus=failed&transexitcode=139&produsername=Arthur%20Schaffer&computingsite=IN2P3-CPPM>; ROMANIA07_HTCondor (4); <https://bigpanda.cern.ch/jobs/?jeditaskid=23611221&jobstatus=failed&mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757865767:202,avail,available,202,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757865767,2,"['avail', 'failure']","['available', 'failure']"
Availability,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:201,error,errors,201,https://root.cern,https://github.com/root-project/root/issues/12771,3,['error'],"['error', 'errors']"
Availability,"Hi,; good idea! :D ; We could do better than the STL and give an informative compile time error when `data` is called on vector<bool>. We have the required sfinae magic already in place for RAction::PartialResult. The specialization for RAdoptAllocator<bool> might be useless at this point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2804#issuecomment-430321832:90,error,error,90,https://root.cern,https://github.com/root-project/root/pull/2804#issuecomment-430321832,1,['error'],['error']
Availability,"Hi,; i try to t install root, i get the cMakelists.text issue; CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819:69,Error,Error,69,https://root.cern,https://github.com/root-project/root/issues/11819,1,['Error'],['Error']
Availability,"Hi,; just a short note on the test failures, we saw before that:; 986 - roottest-root-tree-cloning-make (Failed); because off reference file differences caused by somewhat different compressed tree seizes. DavidC verified that this happens because the version number update of TBranch. Should we change the tests refs as part of this pull request?; I have no explanation for projectroot.math.mathcore.test.mathcore_testLogLExecPolicy (which failed on ubuntu14 only), but it doesn't look related to this change.; Thanks, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317443701:35,failure,failures,35,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317443701,1,['failure'],['failures']
Availability,"Hi,; still not working:; It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection; -- The C compiler identification is GNU 8.3.1; -- The CXX compiler identification is GNU 8.3.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.27.0""); -- Checking internet connectivity...; -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt; --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt; Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6; Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected.; Unable to establish SSL connection.; ussapc@warlv0010/~$ echo $?; 4. man of wget says:; EXIT STATUS; Wget may return one of several error codes if it encounters problems. 0 No problems occurred.; 1 Generic error code.; 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc...; 3 File I/O error.; 4 Network failure.; 5 SSL verification failure.; 6 Username/password authentication failure.; 7 Protocol errors.; 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867634208:1214,echo,echo,1214,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867634208,10,"['echo', 'error', 'failure']","['echo', 'error', 'error---for', 'errors', 'failure']"
Availability,"Hi,; thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02?. I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)?. Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)?. Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856#issuecomment-732289044:38,error,error,38,https://root.cern,https://github.com/root-project/root/issues/6856#issuecomment-732289044,1,['error'],['error']
Availability,"Hi,; the segmentation fault is terrible ( ping @Axel-Naumann ) but the code is not valid C++: you need `for(int i=0; i<12; i++)` instead of `for(i=0; i<12; i++)`. Does that fix the crash?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367#issuecomment-856929174:22,fault,fault,22,https://root.cern,https://github.com/root-project/root/issues/8367#issuecomment-856929174,2,"['fault', 'ping']","['fault', 'ping']"
Availability,"Hii @guitargeek ! ; cmake output shows these errors while generating cache ; ```; `system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/msvcp140.dll'`; ```; ```; system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/vcruntime140.dll'; ```; ```; system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/concrt140.dll'; ```; and while building ; `error : 'LZMA/src/LZMA/lib/liblzma.lib', needed by 'bin/Core.dll'` . Sadly I don't have any other system apart from this one, but I will try to reach my university's Linux system once my exams get over (which ends in Feb 3rd week ) and hopefully by that time there will be relaxation in covid guidelines . Until then I guess I will try to build this in my windows. ; Thanks for replying to my queries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1029050145:45,error,errors,45,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1029050145,2,['error'],"['error', 'errors']"
Availability,"Hii @guitargeek I have had issues when I am trying to compile, in vscode it shows `can't find source code`; and so started using visual studios c++ , on compiling or running its showing ; >------ Build All started: Project: root, Configuration: x64-Debug ------; C:\Users\dell\Desktop\shared project\root\out\build\x64-Debug\ninja : error : 'LZMA/src/LZMA/lib/liblzma.lib', needed by 'bin/Core.dll', missing and no known rule to make it; Build All failed. Tried a lot but same issue . Can u help on this or can u suggest something so that I can compile stuff and see my code is running as expected or not?; I'm in windows 11. thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1025603470:333,error,error,333,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1025603470,1,['error'],['error']
Availability,Hijacking this to cross-check some test failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-805694947:40,failure,failures,40,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-805694947,1,['failure'],['failures']
Availability,Hit CMake Error when build root with msvc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347:10,Error,Error,10,https://root.cern,https://github.com/root-project/root/issues/9347,1,['Error'],['Error']
Availability,Hit errors when build ROOT with msvc on AddressSanitizer mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:4,error,errors,4,https://root.cern,https://github.com/root-project/root/issues/9445,1,['error'],['errors']
Availability,"Hm, could it be that we don't release some memory? Just trying with a real world analysis and after a certain number of events I get a crash like this. ```; Processed 130000 entries; terminate called after throwing an instance of 'std::runtime_error'; what(): Error initializing io_uring: Invalid argument; ```. ```; #0 0x00007ffff51a1355 in raise () from /usr/lib/libc.so.6; #1 0x00007ffff518a853 in abort () from /usr/lib/libc.so.6; #2 0x00007ffff554586a in __gnu_cxx::__verbose_terminate_handler () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff5551d8a in __cxxabiv1::__terminate (handler=<optimized out>) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff5551df7 in std::terminate () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff555209e in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x5555555a2800 <typeinfo for std::runtime_error@@GLIBCXX_3.4>, ; dest=0x7ffff5567fd0 <std::runtime_error::~runtime_error()>) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95; #6 0x00007ffff75c4914 in ROOT::Internal::RIoUring::RIoUring() () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #7 0x00007ffff75c3b01 in ROOT::Internal::RRawFileUnix::ReadVImpl(ROOT::Internal::RRawFile::RIOVec*, unsigned int) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #8 0x00007ffff75c21cb in ROOT::Internal::RRawFile::ReadV(ROOT::Internal::RRawFile::RIOVec*, unsigned int) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #9 0x00007ffff5853e72 in ROOT::Experimental::Detail::RPageSourceFile::LoadCluster(unsigned long, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > const&) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libROOTNTuple.so; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-678297228:260,Error,Error,260,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-678297228,1,['Error'],['Error']
Availability,"Hm, does this mean we also don't get the test summary of failed tests anymore? It looks like making the job fail will not upload the test results, showing only the green test suites; see for example https://github.com/root-project/root/pull/12818#issuecomment-1547501194. edit: ah, can be ""fixed"" by always running the upload step, even in case of test failures; see https://github.com/root-project/root/pull/12822",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12812#issuecomment-1549167898:353,failure,failures,353,https://root.cern,https://github.com/root-project/root/pull/12812#issuecomment-1549167898,1,['failure'],['failures']
Availability,"Hm, it appears the second commit breaks `check-cling` from ROOT with `builtin_llvm=ON` because it doesn't include `LLVMConfig.cmake` anymore, so `TARGET_TRIPLE` is not available. I think we can fix this in `interpreter/CMakeLists.txt` by forwarding the respective variable, let me investigate... edit: https://github.com/root-project/root/pull/13446",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13420#issuecomment-1677178710:168,avail,available,168,https://root.cern,https://github.com/root-project/root/pull/13420#issuecomment-1677178710,1,['avail'],['available']
Availability,"Hm, ok, here is more info then:. ### Environment; OS: Ubuntu 22.04.3 LTS; ROOT 6.30.2 from conda-forge (py311h320fe9a_0). ### To reproduce. 1. Create `~/.rootrc` and add `OpenGL.CanvasPreferGL: 1`; 2. Open interactive root session and enter line by line:; ```cxx; TCanvas c; TLatex l;; l.DrawLatex(0.1, 0.1, ""#alpha#beta#gamma#delta#zeta#eta#theta#iota#kappa#lambda#mu#nu#xi#pi#rho#sigma#tau#upsilon#phi#chi#psi#omega""); l.DrawLatex(0.1, 0.2, ""#epsilon""); l.DrawLatex(0.1, 0.3, ""#oplus""); l.DrawLatex(0.1, 0.4, ""\u2295""); l.DrawLatex(0.1, 0.5, ""Detault text for reference""); l.DrawLatex(0.1, 0.6, ""#nabla #leq #geq #exists #spade #oright #Box #prod #otimes #copyright #angle""); ```. ### Output. ![image](https://github.com/root-project/root/assets/28848011/919b5877-9588-43d6-8343-93900fc44f4b). So judging from the line at `y=0.6`, the bug affects even more characters than `#epsilon` and `#oplus` --- `#nambla`, `#copyright`, ... Occasionally segmentation fault happens when entering ""bad"" characters. ### Expected output. Reproduced without `OpenGL.CanvasPreferGL: 1`. ![image](https://github.com/root-project/root/assets/28848011/5a2cbd6f-a3b1-4f3f-8039-61fbe50d2593)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6755#issuecomment-1857971084:958,fault,fault,958,https://root.cern,https://github.com/root-project/root/issues/6755#issuecomment-1857971084,1,['fault'],['fault']
Availability,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-824883422:380,error,errors,380,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-824883422,1,['error'],['errors']
Availability,Hmm I get similar errors with both using the following flags: `-Dbuiltin_xrootd=OFF -Dxrootd=ON -Dfail-on-missing=ON` and having `XRDSYS` pointing to the XRootD installation (or using `CMAKE_PREFIX_PATH`). Which flags did you use for building XRootD and ROOT?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1503656816:18,error,errors,18,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1503656816,1,['error'],['errors']
Availability,"Hmm, I already did what I quoted in my last comment.; Now if I did:; git rebase upstream/master; ->; Applying: cppcheck: fix some reports; Applying: fix warnings for catch; julien@debian:~/projects/root$ git push; Username for 'https://github.com': serval2412; Password for 'https://serval2412@github.com': ; To https://github.com/serval2412/root; ! [rejected] master -> master (non-fast-forward); error: failed to push some refs to 'https://github.com/serval2412/root'; hint: Updates were rejected because the tip of your current branch is behind; hint: its remote counterpart. Integrate the remote changes (e.g.; hint: 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; What should I do then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-361205718:398,error,error,398,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-361205718,1,['error'],['error']
Availability,"Hmm, actually it seems that I cannot call Book directly from python with the overloads set up this way. I think this has to do with reference type ambiguities when passing objects from python. Let me try further further restricting the template instances with SFINAE (I guess the same issue is present with Fill since it has the same template argument pattern). ```; Info in <TUnixSystem::ACLiC>: creating shared library /data/home/bendavid/rdftest7/jittest_cpp.so; input_line_45:7:122: error: call to member function 'Book' is ambiguous; new (ret) (ROOT::RDF::RResultPtr<double>) (((ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>*)obj)->Book<TestHelper>((TestHelper&&)*(TestHelper*)args[0]));; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2240:42: note: candidate function [with FirstColumn = TestHelper, OtherColumns = <>, Helper = TestHelper]; RResultPtr<typename Helper::Result_t> Book(Helper &&helper, const ColumnNames_t &columns = {}); ^; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2264:42: note: candidate function [with Helper = TestHelper]; RResultPtr<typename Helper::Result_t> Book(Helper &&helper, const ColumnNames_t &columns = {}); ^; input_line_45:11:79: error: call to member function 'Book' is ambiguous; ((ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>*)obj)->Book<TestHelper>((TestHelper&&)*(TestHelper*)args[0]);; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2240:42: note: candidate function [with FirstColumn = TestHelper, OtherColumns = <>, Helper = TestHelper]; RResultPtr<typename Helper::Result_t> Book(Helper &&helper, const ColumnNames_t &columns = {}); ^; /data/home/bendavid/rootdevfillopt/install/include/ROOT/RDF/RInterface.hxx:2264:42: note: candidate function [with Helper =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-804363488:487,error,error,487,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-804363488,1,['error'],['error']
Availability,"Hmm, strange that the build fails, but the error seems to be not connected to the PR:. > 22:53:26 < HTTP/1.1 401 Authorization Required; > 22:53:26 < Server: GitHub Babel 2.0; > 22:53:26 < Content-Type: text/plain; > 22:53:26 < Content-Length: 21; > 22:53:26 < WWW-Authenticate: Basic realm=""GitHub""; > 22:53:26 < X-Frame-Options: DENY; > 22:53:26 < X-GitHub-Request-Id: F8B0:30DD2:1EF7253:2E3CE06:5C79A9D6; > 22:53:26 < ; > 22:53:26 * Connection #0 to host github.com left intact; > 02:52:59 Cancelling nested steps due to timeout. A few seconds before a similar request succeded. I found this line a few lines before the fail:. > 22:53:26 > GET /Triple-S/roottest.git/info/refs?service=git-upload-pack HTTP/1.1. At this moment I had no fork of roottest, so this might be the reason the request failed. I just added a fork of roottest so hopefully this error will not occur again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-468893912:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-468893912,2,['error'],['error']
Availability,"Hmm... Okay, so you use `ROOT_DIR`. I could reproduce the issue with that finally. Though still a bit differently from what you posted just now. ```; [bash][pcadp04]:buildtest > cmake -DROOT_DIR=/mnt/hdd1/krasznaa/projects/root/install/cmake ../findtester/; -- The CXX compiler identification is GNU 11.3.1; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /mnt/hdd1/krasznaa/projects/root/install/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /mnt/hdd1/krasznaa/projects/root/install/cmake/ROOTConfig.cmake:137 (find_dependency); CMakeLists.txt:5 (find_package). -- Configuring incomplete, errors occurred!; See also ""/mnt/hdd1/krasznaa/projects/root/buildtest/CMakeFiles/CMakeOutput.log"".; [bash][pcadp04]:buildtest >; ```. I.e. One should not use `<Foo>_DIR` normally, as that needs to point at the directory holding the CMake code. While `<Foo>_ROOT` is a much easier-to-use variable. I'll open a PR with the update, but I'm less and less convinced that the issue would be in ROOT at this point, and not in your build setup. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840438213:529,Error,Error,529,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840438213,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:; ```; [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here?. The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):; ```; [ 0%] Built target AFTERIMAGE; ```; while mine has (grepped out AFTERIMAGE parts):; ```; [ 0%] Creating directories for 'AFTERIMAGE'; [ 2%] Performing download step for 'AFTERIMAGE'; [ 10%] No update step for 'AFTERIMAGE'; [ 12%] No patch step for 'AFTERIMAGE'; [ 16%] Performing configure step for 'AFTERIMAGE'; -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log; [ 85%] Performing build step for 'AFTERIMAGE'; -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; [ 97%] Performing install step for 'AFTERIMAGE'; -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log; [ 97%] Completed 'AFTERIMAGE'; [ 97%] Built target AFTERIMAGE; [ 97%] Built target G__ASImage; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; [ 97%] Linking CXX shared library ../../lib/libASImage.so; [ 97%] Built target ASImage; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2250921631:182,Error,Error,182,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2250921631,3,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,How I can reproduce error?; `python3 -i df104.py` script runs without any error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629#issuecomment-1308351363:20,error,error,20,https://root.cern,https://github.com/root-project/root/issues/11629#issuecomment-1308351363,2,['error'],['error']
Availability,"How is it accidental? It was totally on purpose, solving other occurrences of this exact same issue. I suppose, because i have not seen any issue / error message / backtrace, so all I can do is guess and assume :-) Can you please provide some details on the issue you try to fix? Can you please rebase this branch onto master? We do not allow merge commits (unless fast forward).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885080317:148,error,error,148,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885080317,1,['error'],['error']
Availability,How much will it help ATLAS if I fix this reproducer? What is the actual failure's error message?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1542907415:73,failure,failure,73,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1542907415,2,"['error', 'failure']","['error', 'failure']"
Availability,"How often will numba fail to run? If it is often, seeing the warning of the fallback solution every time might be annoying.; So the choice is: we annoy people that are ok with running slower vs we don't inform people that cannot tolerate going slower.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-480273819:229,toler,tolerate,229,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-480273819,1,['toler'],['tolerate']
Availability,"How should I proceed, just rollback or open a new PR again ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13212#issuecomment-1628501338:27,rollback,rollback,27,https://root.cern,https://github.com/root-project/root/pull/13212#issuecomment-1628501338,1,['rollback'],['rollback']
Availability,"How to compile code see Readme in gui/canvaspainter. Code is not yet used - I will provide another patch after this PR and #717 are merged. CEF-related makefile should be improved. ; One can use **cefsimple** cmake files as an example. https://bitbucket.org/chromiumembedded/cef/src/8e69e3dcea8b/tests/cefsimple/?at=master. **cefsimple** has some specialization for linux, mac and windows. ; I used only linux till now. One could try mac - for that one should include simple_handler_mac.mm into compilation instead of simple_handler_linux.cxx. Same is for cef_main.cxx. Formally one need to create separate versions for mac, linux and windows.; You can see example also in **cefsimple**. These are different platform-specific error handlers. Building of Qt5 part is not called from makefile. I hope, one can add it into makefile when qt5-webengine is discovered. Also rootqt5 executable should be moved into $ROOTSYS/bin directory",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/721:726,error,error,726,https://root.cern,https://github.com/root-project/root/pull/721,1,['error'],['error']
Availability,"How to resolve ""Warning in TClass::Init: no dictionary for class is available""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9123:68,avail,available,68,https://root.cern,https://github.com/root-project/root/issues/9123,1,['avail'],['available']
Availability,"However, if I run with `ctest --output-on-failure -R roottest-root-dataframe` then tests pass, so I guess some test dependencies may be missing? Certainly looks like I run into the same problem as in #7366.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823925412:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823925412,1,['failure'],['failure']
Availability,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:1713,down,download,1713,https://root.cern,https://github.com/root-project/root/issues/7861,1,['down'],['download']
Availability,"Humm ... I don't see why those would help. In all the case the pattern seems to be similar to:; ```; while (obj) ; { use obj; }; ```; being replace by; ```; while (obj) ; if (obj) { use obj; }; ```; where the if seems redundant with the while, what am I missing?. Note that:; ```; TList* L= new TList();; TH1F* H= new TH1F();; L->Add(H);; L->Dump();//OK; delete H;; L->Dump();//NPD; ```; If the TList is not registered (directly or indirectly) with the least of cleanup is (per C++ rules) undefined behavior seems the collection seems contains a reference to the collection. The right pattern is either:; ```; TList* L= new TList();; TH1F* H= new TH1F();; L->Add(H);; L->Dump();//OK; L->Remove(H);; delete H;; L->Dump();//NPD; ```; or ; ```; TList* L= new TList();; gROOT->GetListOfCleanups()->Add(L);; TH1F* H= new TH1F();; L->Add(H);; L->Dump();//OK; L->Remove(H);; delete H;; L->Dump();//NPD; ```. What was the original problem that lead you to this reproducer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6749#issuecomment-721283103:218,redundant,redundant,218,https://root.cern,https://github.com/root-project/root/pull/6749#issuecomment-721283103,1,['redundant'],['redundant']
Availability,"Humm that failure is reproducible and AFAIK only exists in this PR. Could you have a look, @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873#issuecomment-496553609:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/3873#issuecomment-496553609,1,['failure'],['failure']
Availability,I *think* the failure on `windows10` is due to how the commits are rebased after I change the `eol` normalization in the first commit. @bellenot could I ask you to manually check this PR on Windows? Subsequent runs should hopefully be fine once the updated `.gitattributes` are in `master` (alternatively we would need to merge this commit via a separate PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12117#issuecomment-1404875418:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/12117#issuecomment-1404875418,1,['failure'],['failure']
Availability,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:; > ; > -- TEST COMMAND --; > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray; > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+; > -- BEGIN TEST OUTPUT --; > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory; > ; > ===============================; > ; > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3940#issuecomment-502712700:151,error,errors,151,https://root.cern,https://github.com/root-project/root/pull/3940#issuecomment-502712700,1,['error'],['errors']
Availability,"I actually see also different errors when including it from the rest of our software (where we probably have the missing include you refer to). E.g.:. ```; In file included from /Users/ktf/src/sw/osx_arm64/O2/use-multithreading-local6/include/SimConfig/SimConfig.h:16:; In file included from /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local2/include/boost/program_options.hpp:17:; In file included from /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local2/include/boost/program_options/parsers.hpp:295:; In file included from /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local2/include/boost/program_options/detail/parsers.hpp:9:; /Users/ktf/src/sw/osx_arm64/boost/v1.75.0-local2/include/boost/program_options/detail/convert.hpp:36:55: error: reference to 'mbstate_t' is ambiguous; const std::codecvt<wchar_t, char, std::mbstate_t>& cvt);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__mbstate_t.h:44:9: note: candidate found by name lookup is 'std::mbstate_t'; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:9: note: candidate found by name lookup is 'std::mbstate_t'; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; In file included from G__O2Generators dictionary payload:551:; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1535389720:30,error,errors,30,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1535389720,2,['error'],"['error', 'errors']"
Availability,I add changes and rebase code after I saw this error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5763#issuecomment-638048505:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/5763#issuecomment-638048505,1,['error'],['error']
Availability,"I added a debug printout for `TClingTest`:; ```; [ RUN ] TClingTests.GetClassSharedLibs; library name: libPhysics.so; library name: ; library name: libGenVector.so; library name: ; library name: libGenVector.so; library name: libGenVector.so; [ OK ] TClingTests.GetClassSharedLibs (1 ms); [ RUN ] TClingTests.GetSharedLibDeps; library name: libGenVector.so; library name: libTreePlayer.so; library name: TClingTest; /srv/root/src/root/core/metacling/test/TClingTests.cxx:103: Failure; Expected equality of these values:; libName.compare(0, 3, ""lib""); Which is: -1582582; 0; /srv/root/src/root/core/metacling/test/TClingTests.cxx:104: Failure; Expected: (libName.find('.')) != (std::string::npos), actual: 18446744073709551615 vs 18446744073709551615; ```; So it fails when `libName` is `TClingTest` itself... and with some more debug printouts, I found out that this happens:; ```; GetLibDeps(libTreePlayer.so) = libTreePlayer.so libGraf.so libTree.so libMathCore.so libHist.so libMultiProc.so libNet.so libGraf3d.so libImt.so ***TClingTest*** libGpad.so ; ```; @Axel-Naumann Any idea why this happens?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823899223:476,Failure,Failure,476,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823899223,2,['Failure'],['Failure']
Availability,"I added the error message to the commit log, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9725#issuecomment-1023164434:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/9725#issuecomment-1023164434,1,['error'],['error']
Availability,"I added this line in the Makefile juste after the `doxygen` command:; ```; 	sed -i -e '/^ */s///' -e '/ *$/s///' $(DOXYGEN_OUTPUT_DIRECTORY)/html/index.qhp; ```. But what is executed is:. ```; error: failed to run qhelpgenerator on index.qhp; lookup cache used 2073/1048576 hits=35556 misses=2201; finished...; sed -i -e '/^ */s///' -e '/ *s///' /Users/couet/rootdoc/html/index.qhp; sed: -e expression #2, char 6: unknown command: `/'; make: *** [doxygen] Error 1; ```. Somehow the `$` is not understood correctly when put in a Makefile. Do you know why ?; (I need to be away for my desk for a bit, let me know know if you know a solution).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1018441660:193,error,error,193,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1018441660,2,"['Error', 'error']","['Error', 'error']"
Availability,"I addition to the fix for the one-line printing, I would like to get one last commit in, https://github.com/root-project/root/pull/6705/commits/bcd7adeddf2997feb588ec1c61a67e0247cdb92f. I think the warning levels need to be tweaked for some messages (but this can be done in later PRs). I just did this here for VariableMetricBuilder, because these are rather prominent messages. I changed two warnings into info messages, because the reported issue is not so severe that it warrants a warning, and it is something that happens fairly often in my experience. On the other hand, I promoted a warning to an error message. If VariableMetricBuilder cannot run at all because the initial EDM is negative, I would consider this an error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-732211063:605,error,error,605,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-732211063,2,['error'],['error']
Availability,"I agree that it is an unfortunate circumstance to have the test not passing. However, I still urge you to consider the effect on debugability removing strict tests will have. I have wasted a lot of time trying to track down a subtle bug due to loose tests which left me unable to determine where the bug came from. Conversely, setting tests strictly and tracing discrepancies, I found a different bug in the Kahan sum: #11940. Unit tests especially should be as strict as possible. In absence of unit tests (which unfortunately is the case for the parts of RooFit I worked on), strict ""integration"" tests like these are the closest I could get. Note also that it was simply part of my original assignment: to ensure users can trust the new parallelized methods, I built them to be bit-wise exactly equal to the old methods. So, I know from experience how tedious it is to trace down these bit-wise differences to their actual concrete source, but also think that because we are dealing with scientific software, precision, robustness, reliability and interpretability (of components and hence the whole) are important. Of course, performance is an important factor too, but it's just one of the aspects. We want the end-results of experiments to be accurate and explainable, right? I personally at least don't like when I have to sell a ""because of floating point errors"", because I've been bitten by them a few times now. Now, I'm also well aware that the project only has a given amount of resources and I myself am currently more or less out of resources (I can spend only my free time), so my vote probably doesn't count strongly :) If I could be of more practical help in this, I would definitely be happy to, but I also don't have a non-x86 machine, so it's not feasible for me to do much right now. So, feel free to make a call on this as you all best see fit!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538758017:219,down,down,219,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538758017,5,"['down', 'error', 'reliab', 'robust']","['down', 'errors', 'reliability', 'robustness']"
Availability,I agree that the new setting should not be increasing the threads past `cgroup`. I think a malformed `ROOT_MAX_THREADS` is an error as setting this specific variable is very unlikely to have been done 'casually/just-because' and hence the program is mis-behaving (using too many threads) compared to the user's expectations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1601150597:126,error,error,126,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1601150597,1,['error'],['error']
Availability,"I agree that the test should probably not use `echo` for that but we should probably fix the interface, too. Is `Value::isVoid` not being checked in the `echo` interface? I am not sure I understand how it worked before and how the PR you mentioned broke it..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13282#issuecomment-1642121018:47,echo,echo,47,https://root.cern,https://github.com/root-project/root/pull/13282#issuecomment-1642121018,2,['echo'],['echo']
Availability,"I agree that there is a problem here. That might involve the `DeclCollector` or the `DeclUnloader` or some other parts of ROOT. However, IMHO https://github.com/root-project/root/issues/13815#issuecomment-1759250811 clearly shows that the underlying problem is much bigger and older than just the failing test with LLVM 16. So I'd be very much interested in a pragmatic solution to resolve this last blocker for the upgrade. P.S.: One idea I had was to split the test into two parts, ie one ""bad"" part that tests the behavior with an incomplete class and one ""good"" part that loads `inst2lib`. However I quickly got stuck because just removing `o->Print();` on the first loaded object leads to many errors of the form `Error parsing payload code for class Inner` that I can't make sense of...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768325139:699,error,errors,699,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768325139,2,"['Error', 'error']","['Error', 'errors']"
Availability,"I agree that there is a problem, and it comes from the fact that you cannot easily depend on Vdt via targets when Vdt is builtin. CMake complains about headers in the interface which are in the build directory in that case, so a lot of workarounds are needed and no workaround works reliably across CMake versions. When I last touched this, we decided to use variables and rely on the fact that vdt headers were installed into the same place as ROOT headers when Vdt was builtin. However, when Vdt and ROOT are installed separately and into different locations, this doesn't work so well indeed. Fixing this is overdue, but we unfortunately have to keep it working for both builtin/external Vdt. I think that the solution proposed by @krasznaa is in the right direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1338982945:283,reliab,reliably,283,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1338982945,1,['reliab'],['reliably']
Availability,I agree then. If you run the jenkins tests on VM then the timing tests cannot be trusted. I will disable the failure mode from them.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286572292:109,failure,failure,109,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286572292,1,['failure'],['failure']
Availability,I agree we should wait for a more robust solution for cross-compilation of the whole project before removing this simple test. I will close this PR and if in the future we decide what to do we can resume from here 👍,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2228672121:34,robust,robust,34,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2228672121,1,['robust'],['robust']
Availability,"I agree with the fix. I will merge it now, the failures have nothing to do with it. ; Thank you for submitting this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1916#issuecomment-385000841:47,failure,failures,47,https://root.cern,https://github.com/root-project/root/pull/1916#issuecomment-385000841,1,['failure'],['failures']
Availability,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926#issuecomment-1777619648:39,failure,failures,39,https://root.cern,https://github.com/root-project/root/pull/13926#issuecomment-1777619648,2,"['Down', 'failure']","['Downgrading', 'failures']"
Availability,"I also get the error:; ```; [E 14:44:59.024 NotebookApp] Exception while loading config file /home/etejedor/.rootnb/jupyter_notebook_config.py; Traceback (most recent call last):; File ""/home/etejedor/.local/lib/python3.6/site-packages/traitlets/config/application.py"", line 562, in _load_config_files; config = loader.load_config(); File ""/home/etejedor/.local/lib/python3.6/site-packages/traitlets/config/loader.py"", line 457, in load_config; self._read_file_as_dict(); File ""/home/etejedor/.local/lib/python3.6/site-packages/traitlets/config/loader.py"", line 489, in _read_file_as_dict; py3compat.execfile(conf_filename, namespace); File ""/home/etejedor/.local/lib/python3.6/site-packages/ipython_genutils/py3compat.py"", line 198, in execfile; exec(compiler(f.read(), fname, 'exec'), glob, loc); File ""/home/etejedor/.rootnb/jupyter_notebook_config.py"", line 9, in <module>; c.NotebookApp.extra_static_paths = ['%s'] % jsrootsys; TypeError: unsupported operand type(s) for %: 'list' and 'str'; ```; The string substitution is not done properly, the % operator needs to be inside the square brackets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4497#issuecomment-543159063:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/4497#issuecomment-543159063,1,['error'],['error']
Availability,"I also tried those upstream changes, plus removing the GC flag in `TypedefPointerToClass_Type` (which also does not define a traverse function), and I still get some GC errors in a few tests as well. I need to investigate why those particular tests are failing, I will report here when I have news.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799#issuecomment-1174779365:169,error,errors,169,https://root.cern,https://github.com/root-project/root/issues/10799#issuecomment-1174779365,1,['error'],['errors']
Availability,"I always run with the gnuinstall option, and I see no failures. But I don't have as many tests in total as you. For my 6.08.04 build I have (see: https://kojipkgs.fedoraproject.org//packages/root/6.08.04/1.fc25/data/logs/x86_64/build.log):. 100% tests passed, 0 tests failed out of 602. This is with a few tests requiring network access disabled. make test 'ARGS=-j16 --output-on-failure -E ""test-stressIOPlugins-.*|tutorial-tree-run_h1analysis|tutorial-multicore-imt001_parBranchProcessing|tutorial-multicore-mp103_processSelector|tutorial-multicore-imt101_parTreeProcessing""'. But those few disabled tests do not account for the difference between 602 and 1395. I disable all the builtin options (except for llvm), and build using the versions of external dependencies that are available in the distribution. Can you elaborate on what you mean by ""because the ROOT libraries are expected in different place""? When running the test suite in the build tree, the libraries are expected to be in the same place independently of the gnuinstall option (i.e. in ${CMAKE_BINARY_DIR}/lib). The location of the built targets in the build tree are supposed to not depend on whether the gnuinstall option is on or off.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/130#issuecomment-273462003:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/130#issuecomment-273462003,3,"['avail', 'failure']","['available', 'failure', 'failures']"
Availability,"I am able to reproduce the failure with a simple standalone reproducer (2 threads one loading and unloading a library, the other interogating `TClassTable`). I will prepare a PR with the fine grained locking (or whatever is needed to make the crash go away :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1483286941:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1483286941,1,['failure'],['failure']
Availability,"I am afraid I gave up on figuring out how this works. I don't feel confident enough to green-light this, and as far as I can tell I can't help further. If needed, we can virtually sit down for some time and you can show me around this logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-692051369:184,down,down,184,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-692051369,1,['down'],['down']
Availability,"I am all for removing unnecessary code. I did not infer from the description that this was about ""out of date"" file rather than missing files. My concern is that I do not know (and ""was developed to cover some failures in both cms and root. "" is not specific enough to help me here :) ) that we actually have any actual case in routine ROOT or CMSSW testing to cover this case. If you can point me to where it is tested (and/or the problem(s) description that were fix by this). In particular if the test is about a file references by the module becoming newer than the produced module ( unless we specifically added a test for it), I can not see how the automated testing would triggered the (previously?) failing case. TLDR: I do not know that the testing we had done so far prove that the patch is no longer needed (but I of course could be wrong or mis-informed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1151400413:210,failure,failures,210,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1151400413,1,['failure'],['failures']
Availability,I am also not sure how TWebFile can cause this. I have tried to run tests multiple times 9 on different build nodes) and every time some random unit tests fail with same error (`Too many open files`). I am now running the tests without this change to see if they still fail or not,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13793#issuecomment-1772460703:170,error,error,170,https://root.cern,https://github.com/root-project/root/pull/13793#issuecomment-1772460703,1,['error'],['error']
Availability,"I am back to this. I tried again this morning. In empty folder `/tmp/docbuild`. I do:; ```; cmake -B./ -S/Users/couet/git/couet-root/documentation/doxygen/ -DDOCU_INPUT=""./mainpage.md;../../core/base/;../../hist/hist"" -DDOCU_LOCATION=/tmp/docoutput -DDOCU_THREADS=8 -DDOCU_LOGFILE=/tmp/warnings.txt; ```; it gives:; ```; -- The C compiler identification is AppleClang 13.1.6.13160021; -- The CXX compiler identification is AppleClang 13.1.6.13160021; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Doxygen: /Users/couet/bin/doxygen (found version ""1.9.4 (a85850bf5b32843d6cde6b9a25b147c9a40bbc8a)"") found components: doxygen dot ; -- Found Python: /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.8/bin/python3.8 (found version ""3.8.9"") found components: Interpreter ; -- Configuring done; -- Generating done; -- Build files have been written to: /tmp/docbuild. ```; then:; ```; make; ```; I get:; ```; Generating code for file core/base/src/TAttFill.cxx...; /bin/sh: line 1: 70249 Segmentation fault: 11 /Users/couet/bin/doxygen /tmp/docbuild/Doxyfile.dox; make[2]: *** [CMakeFiles/dox] Error 139; make[1]: *** [CMakeFiles/dox.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1080327954:1574,fault,fault,1574,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1080327954,4,"['Error', 'fault']","['Error', 'fault']"
Availability,I am closing the issue since @etejedor himself could not reproduce. Please do not hesitate to re-open if more information becomes available.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942#issuecomment-1925306561:130,avail,available,130,https://root.cern,https://github.com/root-project/root/issues/8942#issuecomment-1925306561,1,['avail'],['available']
Availability,"I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was; ```; $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:95,failure,failures,95,https://root.cern,https://github.com/root-project/root/issues/7936,1,['failure'],['failures']
Availability,"I am in the same situation that georgtroska (offline server). I have downloaded https://github.com/bellenot/root/archive/refs/heads/check-internet-connection.zip (commit 4255aba), then I did. ```; unzip check-internet-connection.zip; cd root-check-internet-connection; mkdir builddir; cd builddir; cmake ..; make; ```. and I got the same error. ```; [ 68%] Building CXX object net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o; /home/pamputt/root-check-internet-connection/net/netx/src/TXNetFile.cxx:58:10: erreur fatale: XrdClient/XrdClient.hh : Aucun fichier ou dossier de ce type; #include <XrdClient/XrdClient.hh>; ^~~~~~~~~~~~~~~~~~~~~~~~; compilation terminée.; make[2]: *** [net/netx/CMakeFiles/Netx.dir/build.make:63: net/netx/CMakeFiles/Netx.dir/src/TXNetFile.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:33731: net/netx/CMakeFiles/Netx.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-874752225:69,down,downloaded,69,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-874752225,5,"['Error', 'down', 'error']","['Error', 'downloaded', 'error']"
Availability,"I am not able to reproduce and the code looks correct to me. The only thing I see as potential issue is the fact line 137 is an assert, but I do not understand how that could result in an error, especially because a few lines above the compiler seems to be happy when using the same variable. Am I missing something trivial here? I am using the same arrow version, BTW.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-376096237:188,error,error,188,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-376096237,1,['error'],['error']
Availability,"I am not completely sure how this ""additional index file"" can be used. Should it be made available for download from this page ? https://root.cern/reference/ . Or it is enough to make it available next ro the normal index.html ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-889948805:89,avail,available,89,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-889948805,3,"['avail', 'down']","['available', 'download']"
Availability,"I am not convinced yet by the immediate exception state. For discussion purposes, let's assume the following stack causes an error in `linux_read_from_network`, which is captured in a `RStatus` in `ROOT::ReadFromNetwork()`:; ```; linux_read_from_network(); ROOT::ReadFromNetwork(); ROOT::RNetFile::Read(); ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```. The immediate exception state would allow us to throw an exception in `ROOT::ReadFromNetwork()`. But `ROOT::RNetFile::Read()` might want/need to handle the error state, e.g. by retrying, or by accessing alternative sources. It might even be that a partial read is modeled as an error. This would require `ROOT::ReadFromNetwork()` to force the ""immediate exception"" state to a certain value and reset it later - which is error prone and awkward; it shows that we use a global state that needs local knowledge. If ""immediate exception"" is false and `ROOT::ReadFromNetwork()` captures the error and returns it, same for all subsequent frames but `ROOT::RNTupleIterator::operator++()` (which cannot return a `RStatus`), then only `ROOT::RNTupleIterator::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://githu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:125,error,error,125,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,4,['error'],['error']
Availability,I am not sure I am smart enough to find the actual error. Could someone point me to it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5393#issuecomment-616405187:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/5393#issuecomment-616405187,1,['error'],['error']
Availability,"I am not sure I understand the problem.; If I look at `984:tutorial-tmva-TMVA_SOFIE_GNN_Application`, the tests run fine in the CI for alma9: the reason for the failure could be due to the local setup. As for; ```; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 353-gtest-tmva-pymva-TestRModelParserKeras; ```; If I understand correctly, they do not run in any of platforms of the CI since PyKeras is not available anywhere, e.g. in the `requirements.txt` file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2424218392:161,failure,failure,161,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2424218392,2,"['avail', 'failure']","['available', 'failure']"
Availability,I am not sure how but the failure in Ubuntu2310: https://github.com/root-project/root/actions/runs/7971661830/job/21783650878?pr=14627 seems limites to this PR ....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14627#issuecomment-1954994421:26,failure,failure,26,https://root.cern,https://github.com/root-project/root/pull/14627#issuecomment-1954994421,1,['failure'],['failure']
Availability,"I am not sure how we can fix this issue. The cmake `ExternalProject_Add` is meant to operate on projects which are not changed in tree. There seems to be an option: BUILD_ALWAYS <bool> which says "" Enabling this option forces the build step to always be run. This can be the easiest way to robustly ensure that the external project's own build dependencies are evaluated rather than relying on the default success timestamp-based method. This option is not normally needed unless developers are expected to modify something the external project's build depends on in a way that is not detectable via the step target dependencies (e.g. SOURCE_DIR is used without a download method and developers might modify the sources in SOURCE_DIR)."". That would fix this problem but introduce another one -- clad would be rebuilt every time one types `make`. ROOT has good amount of uses of `ExternalProject_Add` and that kind of issue is not only specific to clad. . I think we have several options: a) close the bug and ignore that type of errors (which can waste dev debug time); b) add BUILD_ALWAYS and waste a lot of user/dev time; c) check if it is feasible to somehow track changes in the source code within the regular cmake (which probably has proven hard and people added the BUILD_ALWAYS option).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7977#issuecomment-931950718:290,robust,robustly,290,https://root.cern,https://github.com/root-project/root/issues/7977#issuecomment-931950718,3,"['down', 'error', 'robust']","['download', 'errors', 'robustly']"
Availability,"I am now testing this, and see the following error:; ```; Scanning dependencies of target G__Core; [ 67%] Generating G__Core.cxx, ../../lib/libCore.rootmap; In file included from input_line_1:1:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/new:40:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/exception:142:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/bits/exception_ptr.h:38:; /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/bits/cxxabi_init_exception.h:38:10: fatal error: 'stddef.h' file not found; #include <stddef.h>; ^~~~~~~~~~; In file included from input_line_4:2:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/g++-v7/stdlib.h:30:; In file included from /home/amadio/build/external-llvm/etc/cling/lib/clang/5.0.1/include/stdlib.h:8:; /usr/include/stdlib.h:31:10: fatal error: 'stddef.h' file not found; #include <stddef.h>; ^~~~~~~~~~; Error: Error loading the default header files.; gmake[2]: *** [core/base/CMakeFiles/G__Core.dir/build.make:435: core/base/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8972: core/base/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; [ 67%] Built target Cling; gmake: *** [Makefile:152: all] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632#issuecomment-366987713:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/1632#issuecomment-366987713,8,"['Error', 'error']","['Error', 'error']"
Availability,"I am pretty sure I am running `clang-format` correctly, and I did try with `git-clang-format` with the same result. I suspect the problem is the fact I am using a newer version of `clang-format`. I will fix things by hand. Since I updated to the tip of the branch I also get an error when compiling the test:. ```; In file included from /Users/ktf/work/active/sw/SOURCES/ROOT/master/0/tree/treeplayer/test/dataframe/datasource_arrow.cxx:2:; /Users/ktf/work/active/sw/BUILD/3b4c53a9fa7efde0667fff1580b37f11a3842da8/ROOT/include/ROOT/TArrowDS.hxx:4:10: fatal error: 'arrow/table.h' file not found; #include <arrow/table.h>; ^~~~~~~~~~~~~~~; ```. however the TreePlayer compiles fine. Am I missing something trivial? This used to work on the previous commit I was using.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371786919:278,error,error,278,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371786919,2,['error'],['error']
Availability,"I am quite confused by the error happening in the [Fedora 39 build](https://github.com/root-project/root/actions/runs/7653689778/job/20856087175?pr=14434). ```; Error: /github/home/ROOT-CI/src/tutorials/tmva/TMVA_CNN_Classification.C:440:34: error: no member named 'Python_Executable' in namespace 'TMVA'; TString tmva_python_exe{TMVA::Python_Executable()};; ```. If the build has TMVA, how can it be that the function is not defined @lmoneta ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14434#issuecomment-1910084160:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/14434#issuecomment-1910084160,3,"['Error', 'error']","['Error', 'error']"
Availability,I am re-running all tests since we had some failures a while ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15310#issuecomment-2309559719:44,failure,failures,44,https://root.cern,https://github.com/root-project/root/pull/15310#issuecomment-2309559719,1,['failure'],['failures']
Availability,"I am refactoring the old code of ROOT I/O for compression. Some part of the code are up to 30 years old and from my experience that the C style code that is used is prone to errors for developers that are not familiar with the code. Since one of the goals of ROOT is to be maintainable, I think that this can be very helpful.; Nonetheless, even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes that have been done so far are the following:. ### Removed pointers https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer. Also, the irep now is a reference rather than a pointer. However, I think that it would be better to make the function not void and instead of using irep just return a value. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be const unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060:174,error,errors,174,https://root.cern,https://github.com/root-project/root/pull/4060,2,['error'],['errors']
Availability,"I am relatively well situated to try things out with respect to ROOT's `master` branch (for the `libunwind` issue, I'm assuming), and we can worry about the backport when we have something tied down?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409176450:194,down,down,194,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409176450,1,['down'],['down']
Availability,I am rerunning the test since I do not understand the failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1888#issuecomment-382844669:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/1888#issuecomment-382844669,1,['failure'],['failures']
Availability,"I am still a bit confused. When I download 6.30 binary release, and run tutorials/eve7/boxset.C. it correctly opens a web browser and all looks fine, JSON communication works. But then (in 6.30):. ```; root-config --has-builtin_nlohmannjson; no; ```. How is it possible then that the tutorial is working correctly?. And why, in 6.28, was the behavior:. ```; root-config --has-builtin_nlohmannjson; yes; ```. Maybe @krasznaa has some ideas on the CMake part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844939555:34,down,download,34,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844939555,1,['down'],['download']
Availability,"I am trying to install root-v6.26.00 in ubuntu 22. The required packages are unable to be installed. I receive an error:. saras@saras:~$ sudo apt-get install libglew1.5-dev; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; E: Unable to locate package libglew1.5-dev; E: Couldn't find any package by glob 'libglew1.5-dev'; E: Couldn't find any package by regex 'libglew1.5-dev'. Another problem that I am getting is that, when I run ""cmake --build . -- -j8"" after configuring root, following error ocurrs in the middle of the process and the process stops. . CMake Error at /home/saras/product/root/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/gmake'; See also; /home/saras/product/root/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11530#issuecomment-1377010734:114,error,error,114,https://root.cern,https://github.com/root-project/root/pull/11530#issuecomment-1377010734,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am trying to refactor the old code of ROOT I/O for compression but the even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes of this PR are based on top of another PR https://github.com/root-project/root/pull/3947 for adding support for ZSTD so for our goal just focus on the following commits. ### Removed pointers and unsigned chars https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer.; Also there is a mess in the compression algorithms since consider the buffers as unsigned chars, and other as chars. The type does not matter since we are only working with bytes but we should use only one to avoid all the casting that we find across the code base. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? If it is maintained it would be nice to make it more readable and follow the same structure and naming as the rest of compression algorithm.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037:1214,error,errors,1214,https://root.cern,https://github.com/root-project/root/pull/4037,1,['error'],['errors']
Availability,"I am uncertain about the missing separation of ""error code"" and ""payload value"" for some value types. E.g. `RStatus<FILE*>` versus `RStatus<std::string>` (where the string is read from a file) seem similar: the value represents the result of a potentially failing operation. But in the latter case the value does not encode failure, while in the former it does (the `FILE*` being `== nullptr`). Maybe that's just me, but maybe that calls for something similar to `llvm::Expected` that then handles the error case internally. Especially for pointers that might be a better interface, forcing a validity check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564973874:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564973874,3,"['error', 'failure']","['error', 'failure']"
Availability,"I am using cmake and get some errors (I cannot retry now because I am busy with something else). May be I did some mistake applying the changes. Can you send me the modified file ?; it is quite small …. Thanks.; Olivier. > On 21 Sep 2015, at 17:05, ellert notifications@github.com wrote:; > ; > If I check out the master and apply the changes from this pull request, then doing configure and make (without any other patches applied) works for me (Fedora 22, gcc-c++-5.1.1-4.fc22.x86_64).; > What errors do you get?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/root-mirror/root/pull/90#issuecomment-142009345.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/90#issuecomment-142014753:30,error,errors,30,https://root.cern,https://github.com/root-project/root/pull/90#issuecomment-142014753,2,['error'],['errors']
Availability,"I am using root version 5. My code ran on the cern grid (PID 2095060486) successfully and it did not give me any errors. But when I try to merge all the jobs (changed the command ""full"" into ""terminate""), it gives me the following error. ; ```; PIDResponse: Initialising AliAnalysisTaskPIDResponse; ==============================================================================; E-AddTaskTender: No supply added to tender, so tender not created. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fba2e69317c in waitpid () from /lib64/libc.so.6; #1 0x00007fba2e610e52 in do_system () from /lib64/libc.so.6; #2 0x00007fba37e843f9 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0xe50280) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:2172; #3 TUnixSystem::StackTrace (this=0xe50280) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:2419; #4 0x00007fba37e8638c in TUnixSystem::DispatchSignals (this=0xe50280, sig=kSigSegmentationViolation) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:1294; #5 <signal handler called>; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisTask.cxx:540; #7 0x00007fba36dc471a in AliAnalysisManager::InitAnalysis (this=0x24a9f30) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisManager.cxx:1633; #8 0x00007fba36df65e1 in G__G__ANALYSIS_215_0_109 (result7=result7; entry=0x7ffcac8c2c90, funcname=funcname; entry=0x249df80 """", libp=libp; entry=0x7ffcac8c2cd0, hash=hash; entry=0) at /home/gnp78160/alice/sw/BUILD/ec8cb744704e066b1ec26fcf535125d0830c6a08/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:113,error,errors,113,https://root.cern,https://github.com/root-project/root/issues/6977,2,['error'],"['error', 'errors']"
Availability,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:163,fault,faults,163,https://root.cern,https://github.com/root-project/root/issues/8474,2,['fault'],"['fault', 'faults']"
Availability,"I believe I can reproduce the failure e.g. on CentOS8; it's causing; ```; projectroot.runtutorials.tutorial_dataframe_df104_HiggsToTwoPhotons_py; projectroot.runtutorials.tutorial_dataframe_df105_WBosonAnalysis_py; projectroot.runtutorials.tutorial_dataframe_df106_HiggsToFourLeptons_py; projectroot.runtutorials.tutorial_dataframe_df107_SingleTopAnalysis_py; ```; to fail. I see; ```; #0 0x00007ffff7193cd6 in pthread_rwlock_rdlock () at /lib64/libpthread.so.0; #1 0x00007fffdc20be7f in XrdCl::Env::GetInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&) (); at /lib64/libXrdCl.so.3; #2 0x00007fffdc2242a6 in XrdCl::PostMaster::PostMaster() () at /lib64/libXrdCl.so.3; #3 0x00007fffdc20f3d0 in XrdCl::DefaultEnv::GetPostMaster() () at /lib64/libXrdCl.so.3; #4 0x00007fffdc2749dd in XrdCl::FileStateHandler::~FileStateHandler() () at /lib64/libXrdCl.so.3; #5 0x00007fffdc26bdd2 in XrdCl::File::~File() () at /lib64/libXrdCl.so.3; #6 0x00007fffdc26be6d in XrdCl::File::~File() () at /lib64/libXrdCl.so.3; #7 0x00007fffdc857186 in TNetXNGFile::~TNetXNGFile() (this=0x55555ac21690, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffdc8572b9 in TNetXNGFile::~TNetXNGFile() (this=0x55555ac21690, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:229; #9 0x00007ffff58222c8 in TList::Delete(char const*) (this=0x555555825ce0, option=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/core/cont/src/TList.cxx:508; #10 0x00007ffff576fcb0 in TROOT::~TROOT() (this=0x7ffff5c0c220 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/core/base/src/TROOT.cxx:889; #11 0x00007ffff6671b0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-891862419:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-891862419,1,['failure'],['failure']
Availability,"I believe PyPy has its own cppyy builtin module and PyROOT works on top of its own fork of cppyy, for which we haven't tested (or so far aimed for) compatibility with PyPy. Regarding the error you see, please check if the ROOT installation you are using has been built for that Python version (2.7). It could also be some environment/installation issue. How did you install ROOT?. On the other hand, to speed up analysis, the recommended interface in ROOT (which you can also use from Python) is RDataFrame:. https://root.cern/doc/master/classROOT_1_1RDataFrame.html. Even when used from Python, pretty much everything happens in C++ (in particular, the event loop is C++). It also has implicit parallelisation on a multicore machine. If there is some Python code that you'd like to use in conjunction with RDataFrame, there is the `Numba.Declare` feature:. https://root.cern.ch/doc/master/pyroot004__NumbaDeclare_8py.html. which will try to JIT with Numba the Python function you decorate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-834139469:187,error,error,187,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-834139469,1,['error'],['error']
Availability,"I believe all failures are unrelated, build was 'green' in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7386#issuecomment-791580528:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/7386#issuecomment-791580528,1,['failure'],['failures']
Availability,"I believe failures were due to pushing while the build was running. Everything passed before and I only changed the commit message with latest push. In any case, I will monitor the incrementals and revert if any more problems show up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/953#issuecomment-327763248:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/953#issuecomment-327763248,1,['failure'],['failures']
Availability,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702240329:95,error,error,95,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702240329,1,['error'],['error']
Availability,"I believe so, well the error is exactly the same..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-435398354:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-435398354,1,['error'],['error']
Availability,"I believe the current failures are related to the roottest branch not being up-to-date with the latest master and the recently merged https://github.com/root-project/root/pull/15021 , other than the failures already present in the sibling roottest PR at https://github.com/root-project/roottest/pull/1090. I don't see the failures on a PR based on the latest master commit https://github.com/root-project/root/pull/15184",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967#issuecomment-2045919812:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/14967#issuecomment-2045919812,3,['failure'],['failures']
Availability,I boiled down the failures to a simple extension of the issue that I already reported:; https://github.com/vgvassilev/clad/issues/681#issuecomment-1904660655,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14165#issuecomment-1904662806:9,down,down,9,https://root.cern,https://github.com/root-project/root/pull/14165#issuecomment-1904662806,2,"['down', 'failure']","['down', 'failures']"
Availability,I boiled down the failures to a variation of the issue with the double loop that I already reported:; https://github.com/vgvassilev/clad/issues/681#issuecomment-1917122065,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14165#issuecomment-1917123441:9,down,down,9,https://root.cern,https://github.com/root-project/root/pull/14165#issuecomment-1917123441,2,"['down', 'failure']","['down', 'failures']"
Availability,I can confirm that fixes the last modules failure on OSX. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5026#issuecomment-587447763:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/pull/5026#issuecomment-587447763,1,['failure'],['failure']
Availability,"I can confirm that this fixes; ```; CPack: - Install project: ROOT; error: /Library/Developer/CommandLineTools/usr/bin/install_name_tool: for: /build/jenkins/ws/BUILDTYPE/Release/LABEL/mac1014/build/_CPack_Packages/Darwin/TGZ/root_v6.15.03.macosx64-10.14-clang100/root/bin/rmkdepend (for architecture x86_64) option ""-add_rpath @loader_path/../lib"" would duplicate path, file already has LC_RPATH for: @loader_path/../lib; ...; ```; from installs on MacOS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3105#issuecomment-444835924:68,error,error,68,https://root.cern,https://github.com/root-project/root/pull/3105#issuecomment-444835924,1,['error'],['error']
Availability,"I can confirm that this works now on macOS once I explicitly set `gGlobalMutex=nullptr`:. ```; root [0] gGlobalMutex; (TVirtualMutex *) 0x6000007b4950; root [1] gGlobalMutex=nullptr; (TVirtualMutex *) nullptr; root [2] ROOT::DisableImplicitMT();; Warning in <ROOT_TImplicitMT_DisableImplicitMT>: Implicit multi-threading is already disabled; root [3] double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }; root [4] TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);; root [5] TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);; root [6] gaus->SetParameters(1,0,1);; root [7] h1->FillRandom(""gaus1d"",10000);; root [8] auto res = h1->Fit(gaus,""L0S"");; FCN=42.2288 FROM MIGRAD STATUS=CONVERGED 194 CALLS 195 TOTAL; EDM=9.84622e-07 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 9.99994e+02 9.99994e+00 4.51460e-02 -6.48508e-05; 2 p1 8.62962e-03 1.00477e-02 4.53485e-05 -5.15704e-03; 3 p2 1.00477e+00 7.10558e-03 3.20641e-05 1.05447e-01; ERR DEF= 0.5; root [9] cout << TVirtualFitter::GetFitter() << endl;; 0x7fdc0f97b3f0; root [10]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041#issuecomment-1599016029:777,ERROR,ERROR,777,https://root.cern,https://github.com/root-project/root/issues/13041#issuecomment-1599016029,2,['ERROR'],['ERROR']
Availability,"I can reproduce the different behavior when commenting out the `printf` on `macphsft21`. This is caused by https://github.com/root-project/root/pull/14267 (which is also the result of bisecting the original test failure of `stressgraphics-interpreted`). Setting `EXTRA_CLING_ARGS=""-O0""` fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598#issuecomment-1929301256:212,failure,failure,212,https://root.cern,https://github.com/root-project/root/issues/14598#issuecomment-1929301256,1,['failure'],['failure']
Availability,I can reproduce the failure locally.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2148523619:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2148523619,1,['failure'],['failure']
Availability,"I can reproduce the failures, something about Qt3Support. I will try to fix it and push again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1663#issuecomment-368040441:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/1663#issuecomment-368040441,1,['failure'],['failures']
Availability,I can reproduce the problem. The fix will be available shortly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7912#issuecomment-822761005:45,avail,available,45,https://root.cern,https://github.com/root-project/root/issues/7912#issuecomment-822761005,1,['avail'],['available']
Availability,I can reproduce this exact failure with; ```; $ LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libLLVM-11.so root.exe. *** Break *** segmentation violation; ```; which indeed works fine with 6.22.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180#issuecomment-843152996:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/issues/8180#issuecomment-843152996,1,['failure'],['failure']
Availability,"I can't reproduce the crash on my laptop:. ROOT 6.24; ```; root test.cpp; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 22 2021, 10:24:00 |; | From tags/v6-24-00@v6-24-00 |; | With c++ (GCC) 10.2.1 20201125 (Red Hat 10.2.1-9) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing test.cpp...; In file included from input_line_8:1:; /home/vpadulan/Downloads/test.cpp:6:29: error: use of overloaded operator '+' is ambiguous (with operand types 'TString' and 'std::string' (aka 'basic_string<char>')); TString tryit = other + ""h"" + std::to_string(2);; ```; And also your command; ```; root -l test.cpp+; root [0] ; Processing test.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Downloads/./test_cpp.so; In file included from test_cpp_ACLiC_dict dictionary payload:8:; ././test.cpp:6:29: error: use of overloaded operator '+' is ambiguous (with operand types 'TString' and 'std::string' (aka 'basic_string<char>')); TString tryit = other + ""h"" + std::to_string(2);; ```. With a recent ROOT master build I don't get the errors anymore; ```; root test.cpp; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 21 2021, 09:52:59 |; | From heads/distrdf-ranges@v6-25-01-1310-g76d35ef23c |; | With c++ (GCC) 10.3.1 20210422 (Red Hat 10.3.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing test.cpp...; root [1] .q; ```; ```; root -l test.cpp+; root [0] ; Processing test.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-866969192:622,Down,Downloads,622,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-866969192,3,"['Down', 'error']","['Downloads', 'error']"
Availability,"I cannot decide, that's up to you @egpbos and @lmoneta given the input by @hahnjo and me here. Please consider this:. IIUC you are interpreting this lack of bitwise equality as a bug. In that case our approach is to fix the failure asap. If ""asap"" isn't happening because reasons then we disable the test, and create a bug report about the test failure, reminding ourselves (you, @egpbos in this case) that the test needs to be fixed and re-enabled. ""Disabling the test"" can as well be a switch from equality to equality-with-range, as long as the GitHub issue is clear which commit needs to be reverted to reprouce the original test failure. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1540010898:224,failure,failure,224,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1540010898,3,['failure'],['failure']
Availability,"I cannot reproduce the error with the provided reproducer, so I assume this issue has been fixed somewhere along the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14560#issuecomment-1941641000:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/14560#issuecomment-1941641000,1,['error'],['error']
Availability,I cannot reproduce the issue any more:; ```cpp; frame.cxx:22:24: error: no member named '__control' in 'fenv_t'; old_excepts = fenv.__control & FE_ALL_EXCEPT;; ~~~~ ^; frame.cxx:25:10: error: no member named '__control' in 'fenv_t'; fenv.__control &= ~new_excepts;; ~~~~ ^; frame.cxx:26:10: error: no member named '__mxcsr' in 'fenv_t'; fenv.__mxcsr &= ~(new_excepts << 7);; ~~~~ ^; frame.cxx:41:24: error: no member named '__control' in 'fenv_t'; old_excepts = fenv.__control & FE_ALL_EXCEPT;; ~~~~ ^; frame.cxx:44:10: error: no member named '__control' in 'fenv_t'; fenv.__control |= new_excepts;; ~~~~ ^; frame.cxx:45:10: error: no member named '__mxcsr' in 'fenv_t'; fenv.__mxcsr |= new_excepts << 7;; ```; Perhaps was this also fixed upstream by Apple and the issue can be closed @couet ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758#issuecomment-1774003484:65,error,error,65,https://root.cern,https://github.com/root-project/root/issues/6758#issuecomment-1774003484,6,['error'],['error']
Availability,I cannot reproduce the test failure on a Mac 10.12 machine. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1115#issuecomment-333843708:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/pull/1115#issuecomment-333843708,1,['failure'],['failure']
Availability,"I cannot reproduce this issue. I saved the image produced by tutorials/image/rose_image.C into a .root file. Then in a fresh ROOT session, I read it back and display the image. It works fine. No errors. I am on Mac. Maybe @linev can tell if that's what it tried?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14545#issuecomment-1941143546:195,error,errors,195,https://root.cern,https://github.com/root-project/root/issues/14545#issuecomment-1941143546,1,['error'],['errors']
Availability,I cannot reproduce this locally (I get other `Conditional jump or move depends on uninitialised value(s)`) and was generally under the impression that this is a frequent false positive of Valgrind *if building with compiler optimizations*. You may try with a full `Debug` build of ROOT (including `LLVM_BUILD_TYPE=Debug`) if you are down to investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123#issuecomment-2255461773:333,down,down,333,https://root.cern,https://github.com/root-project/root/issues/16123#issuecomment-2255461773,1,['down'],['down']
Availability,"I cannot see the remaining errors in the Travis-CI, when I click on the link I see an empty page. Perhaps the logs were already deleted in the meantime?. I am sorry for another large patch, but I feel these cleanups are needed to make the code easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7882#issuecomment-830200398:27,error,errors,27,https://root.cern,https://github.com/root-project/root/pull/7882#issuecomment-830200398,1,['error'],['errors']
Availability,"I collect errors from the Fedora/EPEL build system (a.k.a. koji), which is not very interactive. You can upload a source RPM to build and collect the results. You need to be a member of the ""packager"" group in the Fedora project to use it though, it is not open to everyone. Fedora also has a set of development machines available where, again, members of the ""packager"" group can log in and run mock (i.e. chroot) builds. However, there is currently no s390x test machine available: https://fedoraproject.org/wiki/Test_Machine_Resources_For_Package_Maintainers. [Edit: my previous comment about the lack of disk space was actually referring to the ppc64le test machine, not s390x.]; So, to answer your question, I don't have access to any system I can share. If you have proposed changes or patches I can run tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426#issuecomment-1459863861:10,error,errors,10,https://root.cern,https://github.com/root-project/root/issues/12426#issuecomment-1459863861,3,"['avail', 'error']","['available', 'errors']"
Availability,"I completely believe that you're seeing this - all I'm saying is that I don't know how to reproduce this, so we'll need your help here. The Python profiles don't help because the slow-down is in the C++ world. You can e.g. run [callgrind (see ""CPU Profiling"")](https://root-forum.cern.ch/t/valgrind-and-root/28506) and share the output.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1361080956:184,down,down,184,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361080956,1,['down'],['down']
Availability,"I confirm that these changes break `tutorial-multicore-imt101_parTreeProcessing` on Windows, with different error messages:; ```; 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: LexLevel == 0 && ""cannot use lookahead while lexing"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Lex/Preprocessor.h, line 1874; 768: Assertion CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!"", file C:\root-dev\git\master\interpreter\llvm-project\clang\include\clang/Basic/Diagnostic.h, line 1545; 768: Assertion failed: (*I)->isCompleCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: (!m_Consumer->getTransaction() || (m_Consumer->getTransaction() == T)) && ""Cannot release different T"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\IncrementalParser.cpp, line 538; 768: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: CurLexerKind != CLK_CachingLexer && ""already in caching lex mode"", file C:\root-dev\git\master\interpreter\llvm-project\clang\lib\Lex\PPCaching.cpp, line 99; 768: Assertion failed: CCMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 768: error code: Exit code 0xc0000409. 768: Processing C:/root-dev/git/master/tutorials/multicore/imt101_parTreeProcessing.C...; 768: Assertion failed: is(tok::raw_identifier), file C:\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903602682:108,error,error,108,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903602682,5,"['Error', 'error']","['Error', 'error']"
Availability,"I confirm that with a positive height BMP, the result is rendered correctly by ROOT:. https://www.fileformat.info/format/bmp/sample/7ce642a25ca34f2087f2e8ec0f97713c/download. ![image](https://user-images.githubusercontent.com/10653970/118337195-4567bd80-b4e1-11eb-8c06-dfb1243a6050.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8125#issuecomment-841531157:165,down,download,165,https://root.cern,https://github.com/root-project/root/issues/8125#issuecomment-841531157,1,['down'],['download']
Availability,"I confirm. On Mac we get:; ```; root [0] 2.*TComplex(2,2); (TComplex) (4,4i). root [1] 2*TComplex(2,2); ROOT_prompt_1:1:2: error: use of overloaded operator '*' is ambiguous (with operand types 'int' and 'TComplex'); 2*TComplex(2,2); ~^~~~~~~~~~~~~~; /Users/couet/git/couet-root-bin/include/TComplex.h:88:20: note: candidate function; friend TComplex operator *(Double_t d, const TComplex & c); ^; ROOT_prompt_1:1:2: note: built-in candidate operator*(int, float); 2*TComplex(2,2); ^; ROOT_prompt_1:1:2: note: built-in candidate operator*(int, double); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, long double); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, int); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, long); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, long long); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, __int128); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, unsigned int); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, unsigned long); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, unsigned long long); ROOT_prompt_1:1:2: note: built-in candidate operator*(int, unsigned __int128); root [2] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13730#issuecomment-1736720174:123,error,error,123,https://root.cern,https://github.com/root-project/root/issues/13730#issuecomment-1736720174,1,['error'],['error']
Availability,"I could make two commit. One would be ""fix the problem is BulkApiMultipleTest_stdRead_Test"" and the second will be ""apply the same pattern to the rest of the file for consistency"". The long story is that (almost) all the tests were faulty but most were not a problem because instead of explicitly deleting the TFile, it let it to be deleted at the end of the process. The faulty order is:. 1. Create `TFile`; 2. Create `TTreeReader`; 3. Delete `TFile`; 4. Delete `TTreeReader`. which happens with:; ```; {; TFile *hfile = TFile::Open(....);; ...; myReader(""T"", hfile);; ....; delete hfile; // This is the problem, this is ""too soon"".; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10030#issuecomment-1058027065:232,fault,faulty,232,https://root.cern,https://github.com/root-project/root/pull/10030#issuecomment-1058027065,2,['fault'],['faulty']
Availability,"I did tests with gcc 4.8.4 (disabling error message); It works with all my tests.; Seems to be, bogus functionality is not used by TBufferJSON.; I will provide modified version soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1462#issuecomment-351692546:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/1462#issuecomment-351692546,1,['error'],['error']
Availability,"I did the PR and took the opportunity to fix a typo I had forgotten to take over from my test machine: the TTF docs use hexadecimal for their error code tables, so I match it in the printout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592#issuecomment-1929896003:142,error,error,142,https://root.cern,https://github.com/root-project/root/issues/14592#issuecomment-1929896003,1,['error'],['error']
Availability,"I didn't find those 3 libraries (had `libCore.so` and `libRIO.so`), installed them by `sudo dnf install root-gui-browserv7-6.28.02-1.fc37.x86_64`, and it's working now.; Command `TBrowser b` returns; ```; root [0] TBrowser b. ROOT comes with a web-based browser, which is now being started. ; Revert to TBrowser by setting ""Browser.Name: TRootBrowser"" in rootrc file or; by starting ""root --web=off""; Web-based TBrowser can be used in batch mode when starting with ""root -b --web=server:8877""; Find more info on https://root.cern/for_developers/root7/#rbrowser; Info in <THttpEngine::Create>: Starting HTTP server on port 9426; (TBrowser &) Name: Browser Title: ROOT Object Browser; root [1] kf.kio.core: Malformed JSON protocol file for protocol: ""trash"" , number of the ExtraNames fields should match the number of ExtraTypes fields; ```. I think it's resolved now. One last question though - is there any way to download the tutorials in bulk, and set `$ROOTSYS` and other possibly lacking things like that? I think installing ROOT by `sudo dnf install root` doesn't do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12721#issuecomment-1532933487:915,down,download,915,https://root.cern,https://github.com/root-project/root/issues/12721#issuecomment-1532933487,1,['down'],['download']
Availability,"I didn't see 258d5c41f042dc260adfd24d5d51906a9c326236 , ""Triggers failure of roottest/root/meta/cmsUnload that we need to debug first."" We need to debug first.. ;D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2848#issuecomment-432979354:66,failure,failure,66,https://root.cern,https://github.com/root-project/root/pull/2848#issuecomment-432979354,1,['failure'],['failure']
Availability,"I didn't see this fail before, but from a first look:. > It looks like we have a problem with re-entrant JITing. Yes, `OL_applyQueryPhase1()` is reentered here and it waits for the JITDylib's `GeneratorsMutex` that was locked in the very same place in the previous invocation. While the `SessionMutex` in `ExecusionSession` is recursive, the `GeneratorsMutex` is not. I assume it's not supposed to be recursive. Instead, I guess the process of querying symbols should not be re-entrant. The interesting frame in the callstack is:; ```; #26 0x00007fffebd32f70 in _GLOBAL__sub_I_clingwrapper.cxx; ```. This initializes the `llvm::orc::Platform`, which eventually calls back into the `ExecutionSession` and triggers the suspicious lookups. Is it necessary to do this in a static constructor? Maybe move it into an explicit init function and call it after the outer lookup finished? If it fixes the bug, maybe that's a way forward. Otherwise, if this initialization must run in a static ctor, you may try and remove the JITDylib that initiates the `ld_open` from the `JITDylibSearchOrder` used in the lookup. Its symbols won't be available to cppyy then. (Never tried this in practice.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098062906:1126,avail,available,1126,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098062906,1,['avail'],['available']
Availability,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16169:352,down,down,352,https://root.cern,https://github.com/root-project/root/pull/16169,4,['down'],['down']
Availability,I discovered this by accident when working on [CbmRoot](https://git.cbm.gsi.de/computing/cbmroot). Basically I created a branch with the setup from the reproducer and was greeted with that error message. The base class in that case is pretty old code. I assume nobody ever bothered to update the link def and that's why the '+' was missing in the first place. However it took me some time to figure out that this was the problem and caused quite a bit of headache. That's why I wrote it would be nice if Root would abort with a better error message here. Becomes trivial to fix then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240#issuecomment-1082385261:189,error,error,189,https://root.cern,https://github.com/root-project/root/issues/10240#issuecomment-1082385261,2,['error'],['error']
Availability,"I do not get the same thing:. ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.23/01 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Oct 14 2020, 08:50:48 |; | From heads/master@v6-23-01-1567-g6f8fd46266 |; | With Apple clang version 12.0.0 (clang-1200.0.32.2) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .x minimal.C++; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned; [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned; (int) 0; root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6625#issuecomment-708462608:609,Down,Downloads,609,https://root.cern,https://github.com/root-project/root/issues/6625#issuecomment-708462608,3,"['Down', 'ERROR']","['Downloads', 'ERROR']"
Availability,"I do not get this crash:; ```; % root -l main.cpp ; root [0] ; Processing main.cpp...; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 15 2022, 10:28:34 |; | From heads/master@v6-25-02-2747-g7a90392f2a |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; ```; For me, on Mac, it is protected. Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315410117:87,Error,Error,87,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315410117,2,"['Error', 'error']","['Error', 'error']"
Availability,I do not have such configuration easily available. If you see something wrong and find a fix in TGX11TTF let me know. I'll be happy to apply the fix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8086#issuecomment-844072980:40,avail,available,40,https://root.cern,https://github.com/root-project/root/issues/8086#issuecomment-844072980,1,['avail'],['available']
Availability,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885#issuecomment-1770135876:236,fault,faulty,236,https://root.cern,https://github.com/root-project/root/pull/13885#issuecomment-1770135876,1,['fault'],['faulty']
Availability,"I do not see anything inherently wrong with the changes BUT I really don't understand the failure and why moving the decl fixes them. I.e. it feels that this is hiding an existing problem. In particular, I see in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178429/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/:. ```; +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; +Error in <CreateRealData>: Cannot find data member # 0 of class ; ```; Whereas I do not even see/find the use of `RBrowserDataCleanup` within a `std::tuple` ... I only see it used in a transient member:; ```; origin/master:gui/browserv7/inc/ROOT/RBrowserData.hxx: std::unique_ptr<RBrowserDataCleanup> fCleanupHandle; ///<! cleanup handle for RecursiveRemove; ```; which should be suppressing any warning about missing information (albeit not the one above that usually indicates an internal error)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1615102256:90,failure,failure,90,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1615102256,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,I do not see how that failure can be connected to this PR. Windows does it use modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7365#issuecomment-791187030:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/7365#issuecomment-791187030,1,['failure'],['failure']
Availability,"I do not see how the GitHub actions failures are related to this PR. Let’s move forward, jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14654#issuecomment-1939635455:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/14654#issuecomment-1939635455,1,['failure'],['failures']
Availability,I do not see how the rtensor failure is connected to this pr.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4254#issuecomment-523935550:29,failure,failure,29,https://root.cern,https://github.com/root-project/root/pull/4254#issuecomment-523935550,1,['failure'],['failure']
Availability,I do not see how the windows failures might be related.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4719#issuecomment-575495544:29,failure,failures,29,https://root.cern,https://github.com/root-project/root/pull/4719#issuecomment-575495544,1,['failure'],['failures']
Availability,I do not see how these changes could cause the reported failure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5178#issuecomment-601105378:56,failure,failure,56,https://root.cern,https://github.com/root-project/root/pull/5178#issuecomment-601105378,1,['failure'],['failure']
Availability,I do not see how these failures are connected to the changes in this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5752#issuecomment-636469260:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/5752#issuecomment-636469260,1,['failure'],['failures']
Availability,I do not see how this change can cause test failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7779#issuecomment-812354524:44,failure,failures,44,https://root.cern,https://github.com/root-project/root/pull/7779#issuecomment-812354524,1,['failure'],['failures']
Availability,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). ; Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13834#issuecomment-1770384770:140,fault,faulty,140,https://root.cern,https://github.com/root-project/root/issues/13834#issuecomment-1770384770,1,['fault'],['faulty']
Availability,"I don't actually know what the G694476FC error code is (the only codes I recognize are MSVC Cnnnn, IntelliSense Ennnn, and Clang named warnings/errors), but the ""Unexpected size"" is coming from the STL. We have `static_assert(false, ""Unexpected size"")` in a template, and after the DR resolution, we expect that this should be activated only when that `if constexpr` branch is actually taken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2084339679:41,error,error,41,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2084339679,2,['error'],"['error', 'errors']"
Availability,"I don't get those errors with the linked PR. But I get different ones during the build; ```; [16/7002] Copying /home/vpadulan/Programs/rootproject/rootsrc/tutorials/graphics/crown.C; FAILED: tutorials/graphics/crown.C /home/vpadulan/Programs/rootproject/rootbuild/master.[c++17](test)/tutorials/graphics/crown.C ; cd ""/home/vpadulan/Programs/rootproject/rootbuild/master.[c++17](test)"" && /usr/bin/cmake -E copy_if_different /home/vpadulan/Programs/rootproject/rootsrc/tutorials/graphics/crown.C /home/vpadulan/Programs/rootproject/rootbuild/master.[c++17](test)/tutorials/graphics/crown.C; /bin/sh: -c: line 1: syntax error near unexpected token `('; /bin/sh: -c: line 1: `cd ""/home/vpadulan/Programs/rootproject/rootbuild/master.[c++17](test)"" && /usr/bin/cmake -E copy_if_different /home/vpadulan/Programs/rootproject/rootsrc/tutorials/graphics/crown.C /home/vpadulan/Programs/rootproject/rootbuild/master.[c++17](test)/tutorials/graphics/crown.C'; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731#issuecomment-1737062798:18,error,errors,18,https://root.cern,https://github.com/root-project/root/issues/13731#issuecomment-1737062798,2,['error'],"['error', 'errors']"
Availability,I don't get why this random failures now and with these changes and I can't reproduce them locally. Will investigate.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/790#issuecomment-316710572:28,failure,failures,28,https://root.cern,https://github.com/root-project/root/pull/790#issuecomment-316710572,1,['failure'],['failures']
Availability,"I don't know how to debug this, but since it's related to modules and it looks like the errors we use to have on MacOS, could it be related to [this commit](https://github.com/root-project/root/commit/440c7303a95ad53ecd0e5ae7d6ebd0f29a733fa6) (@vgvassilev @dpiparo)? At least it's the only change I found so far that can be related to this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-1997454805:88,error,errors,88,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-1997454805,1,['error'],['errors']
Availability,"I don't know if I'm misinterpreting something, but I noticed something very interesting:; For this compilation error, clang gives a note message:; ```; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; ```; Is this enum type `EProperty` really only range from 0 - 63?; clangd told me that the definition of first case `kIsClass` is from ; https://github.com/root-project/root/blob/master/core/meta/inc/TDictionary.h#L64 , ; but if I try the below cases, it told me that *this enum type `EProperty`* from ; https://github.com/root-project/root/blob/master/core/cont/inc/TVirtualCollectionProxy.h#L49 ???. That may said, the compiler got confused about these two types that have same name?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148#issuecomment-1208301795:111,error,error,111,https://root.cern,https://github.com/root-project/root/pull/11148#issuecomment-1208301795,1,['error'],['error']
Availability,"I don't know if here is the right place, but I have problems building Garfield++. The error is the following:. > CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; > Could NOT find Vdt (missing: VDT_INCLUDE_DIR); > Call Stack (most recent call first):; > /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/modules/FindVdt.cmake:63 (find_package_handle_standard_args); > /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); > /usr/ROOT/lib/x86_64-linux-gnu/cmake/ROOT/ROOTConfig.cmake:156 (find_dependency); > CMakeLists.txt:71 (find_package). The build of ROOT succeed with no error. I'm building root and then Garfield in docker under `ubuntu:22.04`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14474#issuecomment-1927627737:86,error,error,86,https://root.cern,https://github.com/root-project/root/pull/14474#issuecomment-1927627737,3,"['Error', 'error']","['Error', 'error']"
Availability,"I don't know where exactly the error is. All we see for example [here](https://github.com/root-project/root/pull/11773#issuecomment-1343515182) is that the NLL returned by the generated code is `-inf` instead of the expected value. As I also told Garima on other channels, it could be helpful to make the test more verbose to see from the CI response what is going on (e.g. printing the generated code, and printing the inputs when you call it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773#issuecomment-1346189623:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/11773#issuecomment-1346189623,1,['error'],['error']
Availability,"I don't know why there were failures in the CI on some platforms. I removed the commit that caused these failures now, and will come back to that commit in another PR. This PR should be good now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12459#issuecomment-1461925997:28,failure,failures,28,https://root.cern,https://github.com/root-project/root/pull/12459#issuecomment-1461925997,2,['failure'],['failures']
Availability,"I don't know.. The error shown by Jenkins also appears on the ROOT interactive environment on NixOS, but not on LXPLUS or other platforms I have tested. It happens not only to the new `StableSort`, but also `Sort`, as they are almost identical. @eguiraud Do you have any idea?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286#issuecomment-970043622:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-970043622,1,['error'],['error']
Availability,I don't see the segmentation fault in your reproducer anymore if I apply the fix of the aforementioned PR. I am merging. Please let me know if you have any further problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552#issuecomment-712654448:29,fault,fault,29,https://root.cern,https://github.com/root-project/root/issues/6552#issuecomment-712654448,1,['fault'],['fault']
Availability,I don't think `#if __arm64__` will work. Should be `#ifdef __aarch64__` . ~~~; [ellert@aarch64-test01 ~][PROD]$ g++ -v 2>&1 | grep Target; Target: aarch64-redhat-linux; [ellert@aarch64-test01 ~][PROD]$ echo | g++ -dM -E -x c++ - | grep __arm64__; [ellert@aarch64-test01 ~][PROD]$ echo | g++ -dM -E -x c++ - | grep __aarch64__; #define __aarch64__ 1; ~~~; Compare:; https://github.com/root-project/root/blob/a55cd5db4ba0f9b7811f49d60fdce3fc1f600f39/core/foundation/inc/ROOT/RConfig.hxx#L209. My test with the proposed change from this PR (but with the changed condition) was successful. Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12353#issuecomment-1437428869:202,echo,echo,202,https://root.cern,https://github.com/root-project/root/pull/12353#issuecomment-1437428869,2,['echo'],['echo']
Availability,"I don't think a solution that requires someone to use `${ROOT_LIBRARIES}` is viable - we should be moving to expecting all new code to use targets. Targets handle the other things that you mentioned correctly and make it easier for someone to use. Having to know enough of ROOT's internal structure to know what targets need to be linked to is a huge barrier to a new student, IMO. This is why ROOT_LIBRARIES exists, and I think a target should also be provided mimicking that for new users. I don't think it's much extra maintenance, either, since ROOT_LIBRARIES will have to be maintained forever, this would just be defined as the target version of that. Just my 2 cents. Feel free to recommend a different place to discuss it. I'm not stuck on it, I just think it's a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-509646868:522,mainten,maintenance,522,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-509646868,1,['mainten'],['maintenance']
Availability,I don't think that the failures above are due to the changes in this PR. I tested locally both with `builtin_zlib=OFF` and `builtin_zlib=ON` and the tests that fail above pass for me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1595#issuecomment-363720172:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/1595#issuecomment-363720172,1,['failure'],['failures']
Availability,"I don't think the Windows failures were related to this PR, but restarted them just to be sure. Note that CI on #11716 (which corresponds to the first commit in this PR) already passed fully.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11717#issuecomment-1318573722:26,failure,failures,26,https://root.cern,https://github.com/root-project/root/pull/11717#issuecomment-1318573722,1,['failure'],['failures']
Availability,I don't think the failure on Windows is caused by this pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1393#issuecomment-347826617:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/1393#issuecomment-347826617,1,['failure'],['failure']
Availability,"I don't think these Jenkins failures are caused by this PR, are they? @lmoneta @hageboeck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3024#issuecomment-440930181:28,failure,failures,28,https://root.cern,https://github.com/root-project/root/pull/3024#issuecomment-440930181,1,['failure'],['failures']
Availability,"I don't think this is used by anyone, as it is not clear to the users that copy assignment does for RooFit objects. More complicated user codes like for example are CMS combine are still compiling with these changes. If someone was using this functionality, they will get warned with a compiler error now and can find a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11079#issuecomment-1204165478:295,error,error,295,https://root.cern,https://github.com/root-project/root/pull/11079#issuecomment-1204165478,1,['error'],['error']
Availability,"I don't understand `error: expected is not a library`, just re-use `error: file not found` when the file doesn't exist, and continue to be helpful (""maybe you meant..."") if the file can be found through `HeaderSearch`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7509:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/7509,2,['error'],['error']
Availability,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6388#issuecomment-696018713:31,failure,failure,31,https://root.cern,https://github.com/root-project/root/pull/6388#issuecomment-696018713,2,"['failure', 'fault']","['failure', 'fault']"
Availability,I don't understand those errors on Windows...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10281#issuecomment-1084670101:25,error,errors,25,https://root.cern,https://github.com/root-project/root/pull/10281#issuecomment-1084670101,1,['error'],['errors']
Availability,I don’t see how this patch might have caused the failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7392#issuecomment-791638558:49,failure,failures,49,https://root.cern,https://github.com/root-project/root/pull/7392#issuecomment-791638558,1,['failure'],['failures']
Availability,"I download docker for fedora39 on my machine, rebuild ROOT and do:; ```; ctest -R rline; Test project /github/home/ROOT-CI/build; Start 1109: tutorial-rcanvas-rline.cxx; 1/3 Test #1109: tutorial-rcanvas-rline.cxx ......... Passed 2.40 sec; Start 1110: tutorial-rcanvas-rline_style.cxx; 2/3 Test #1110: tutorial-rcanvas-rline_style.cxx ... Passed 1.10 sec; Start 1111: tutorial-rcanvas-rline_width.cxx; 3/3 Test #1111: tutorial-rcanvas-rline_width.cxx ... Passed 1.11 sec. 100% tests passed, 0 tests failed out of 3; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750#issuecomment-1953657234:2,down,download,2,https://root.cern,https://github.com/root-project/root/pull/14750#issuecomment-1953657234,1,['down'],['download']
Availability,"I dropped the commit for 'LossFunctionEventInfo' conversion to a struct, as there were compilation failures. The other commits are worth merging, however, especially the one for a memory leak fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/494#issuecomment-293584434:99,failure,failures,99,https://root.cern,https://github.com/root-project/root/pull/494#issuecomment-293584434,1,['failure'],['failures']
Availability,"I encountered the following inconcistent behaviour in the `TTreeReader`; ```cpp; auto dfWriter0 = RDataFrame(3).Define(""x"", [] { return 1; });; dfWriter0.Snapshot<int>(""treeA"", ""file0.root"", {""x""});; auto chain = std::make_shared<TChain>(""treeA"");; chain->Add(""file0.root"");; TTreeReader r(chain.get(), chain->GetEntryList());; r.SetEntriesRange(4, 5);; ```; this produces: `Error in <TTreeReader::SetEntriesRange()>: Error setting first entry 4: one of the readers was not successfully initialized`, which is good (as expected). On the other hand, if the range becomes `r.SetEntriesRange(3, 5)` - start is now the last index + 1, there is no error produced or etc. Using gdb, I saw that there is a call in `SetEntriesRange` to `SetEntry(beginEntry - 1)` (https://github.com/root-project/root/blob/f841b96e634b7f7136b0c80da0f9394e8e370314/tree/treeplayer/src/TTreeReader.cxx#L438). `SetEntry` however, calls `SetEntryBase`, which modifies `fEntry`. Hence, the quickfix to call `SetEntry(beginEntry)` is obviously dangerous. CC: @eguiraud @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10774:375,Error,Error,375,https://root.cern,https://github.com/root-project/root/issues/10774,3,"['Error', 'error']","['Error', 'error']"
Availability,"I faced the following problem when compiling ROOT from source,. > [ 73%] Performing download step (git clone) for 'clad'. however, I was offline, and the whole build process interrupted. I think that building from source assumes you have downloaded everything and you can safely compile in an isolated environment. At least it must be specified somewhere beforehand that one needs a connection or *those* modules. Does your commit fix that in future versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15416#issuecomment-2106187422:84,down,download,84,https://root.cern,https://github.com/root-project/root/pull/15416#issuecomment-2106187422,2,['down'],"['download', 'downloaded']"
Availability,"I failed to compile the macro with gcc. The ld error seems to occur often. ```console; $ gcc -g -O1 $(root-config --libs) $(root-config --cflags) xAna_monoZ_preselect.C; /nix/store/hy3lz2vfv9qq2v5jz9nzlx6mmiaq79rj-binutils-2.35.1/bin/ld: /tmp/nix-shell.NUGUOF/ccsYbPqQ.o: undefined reference to symbol '_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@@GLIBCXX_3.4.21'; /nix/store/hy3lz2vfv9qq2v5jz9nzlx6mmiaq79rj-binutils-2.35.1/bin/ld: /nix/store/lg104nh0szci8slz5z6494m457jm5y3p-gcc-10.3.0-lib/lib/libstdc++.so.6: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status. ```. I currently workaround the memory issue by reducing the bin number. If the compilation still fails, we can close the issue first. (I would try to find help on the forum regarding the compile-with-gcc problem.). Here's the result I got after rebuilding ROOT with `-DCMAKE_BUILD_TYPE=RelWithDebInfo`. It doesn't seem to change much. ```; desc: (none); cmd: root -l -q xAna_monoZ_preselect.C++(""../../../infiles_NCUGlobal/infiles_signal_Mx2-150_Mv-500_Mx1-1_ctau-1/NCUGlobalTuples_13.root"", ""testOutSignal.root"", true, true); time_unit: i; #-----------; snapshot=0; #-----------; time=0; mem_heap_B=0; mem_heap_extra_B=0; mem_stacks_B=0; heap_tree=empty; #-----------; snapshot=1; #-----------; time=5342556; mem_heap_B=72704; mem_heap_extra_B=8; mem_stacks_B=0; heap_tree=empty; #-----------; snapshot=2; #-----------; time=5345216; mem_heap_B=72782; mem_heap_extra_B=18; mem_stacks_B=0; heap_tree=empty; #-----------; snapshot=3; #-----------; time=5345353; mem_heap_B=72860; mem_heap_extra_B=28; mem_stacks_B=0; heap_tree=empty; #-----------; snapshot=4; #-----------; time=5346408; mem_heap_B=72938; mem_heap_extra_B=38; mem_stacks_B=0; heap_tree=empty; #-----------; snapshot=5; #-----------; time=5348487; mem_heap_B=72938; mem_heap_extra_B=38; mem_stacks_B=0; heap_tree=peak; n2: 72938 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.; n1: 72704",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087#issuecomment-951159270:47,error,error,47,https://root.cern,https://github.com/root-project/root/issues/9087#issuecomment-951159270,3,['error'],['error']
Availability,"I figured out the reason of my apparent 'instability' in results. Rather than a problem with the ROOT build, it was actually a variation in the way I generated/created the library needed to emulated the ATLAS libraries. The original 2 files contains respectively 1 and 2 ATLAS classes derived from the RooAbsPdf and because the objects of that type are added to a compiled list, they must be created properly (otherwise you get type detection errors .. in part because RooAbsPdf is an abstract class). In order to generate this library, I use TFile::MakeProject (which almost works, I have to add an implementation for the abstract functions by hand). Part of the this MakeProject is to generate a LinkDef file. Because the output of MakeProject should not depend on the ROOT version, I generated the libraries with an arbitrary version of ROOT (and did not pay attention which one at the time, but it was different on different machine and upon seeing the weird crash, I may have regenerated the project on the machine I was using at the time). The issue is that a particular commit (e8eb7875c73ea00bedf11c022a055d50ec5f081d, part of the new PR) change whether the dictionary was requested (in the LinkDef file) for the pair that was causing the problem (pair<string,RooArgSet>) ... and having an explicit dictionary for that pair works around the problem introduced by the first wave of pair related changes. . Now that this is clarified, I can confirm that https://github.com/root-project/root/pull/10230 is solving this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1089498573:443,error,errors,443,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1089498573,1,['error'],['errors']
Availability,I fixed the windows build when I pushed 464ea5ca718c293a6a7d76db948ced04eab6be8f to your branch and indeed I don't see a failure on Windows thereafter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6346#issuecomment-694453457:121,failure,failure,121,https://root.cern,https://github.com/root-project/root/pull/6346#issuecomment-694453457,1,['failure'],['failure']
Availability,"I found a ""fix"" for this issue, commenting these lines allows rootcling to run without the error message:. https://github.com/hahnjo/root/blob/2f4eb60b90ed83bb369325a687bce83f2a773b7a/core/dictgen/src/rootcling_impl.cxx#L3841-L3843. https://github.com/hahnjo/root/blob/2f4eb60b90ed83bb369325a687bce83f2a773b7a/core/dictgen/src/rootcling_impl.cxx#L4200-L4206",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1659010221:91,error,error,91,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1659010221,1,['error'],['error']
Availability,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:; ```; diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx; index 1fdabcc2fd..c5358d1f21 100644; --- a/core/base/src/TObject.cxx; +++ b/core/base/src/TObject.cxx; @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(); // can guess this is always the case and we can rely on the changes to fBits made; // by ~TObject to detect use-after-delete error (and print a message rather than; // stop the program with a segmentation fault); +#ifndef __SANITIZE_ADDRESS__; if ( *o_fbits != 0x01000000 ) {; // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted); return true;; }; return false;; +#else; + return true;; +#endif; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2378694443:550,error,error,550,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2378694443,2,"['error', 'fault']","['error', 'fault']"
Availability,"I generally expect libraries to be silent and applications to write log files. If an application uses a dozen libraries, users don't want to see a dozen banners scroll past their terminal whenever they run it. A mark of a library's success is when it gets into the infrastructure in ways that downstream users might not even know about. If that's the goal here—for RooFit to be a library that other libraries or applications are built upon—then it shouldn't print its banner on startup. Although RooFit's API was designed with data analysts in mind (i.e. as an application), in recent years it has de-facto become a library with the likes of HistFactory, Combine, and lots of mini-frameworks built on top of it. If it were me, I would take that as a good sign and embrace it by becoming more library-like. (I have the same opinion of FastJet's banner, but that's another story.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954#issuecomment-1048325390:293,down,downstream,293,https://root.cern,https://github.com/root-project/root/issues/9954#issuecomment-1048325390,1,['down'],['downstream']
Availability,"I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```; [ 51%] Linking CXX shared library ../../lib/libGraf.so; 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1; 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/issues/11239,2,"['error', 'failure']","['error', 'failure']"
Availability,"I get many things like that:; ```; Processing libs.C+(""_t_application"",)...; input_line_10:2:55: error: expected expression; libs(""_r_o_o_t_1_1_internal_1_1_t_r_o_o_t_allocator"",); ^; input_line_10:2:41: error: expected expression; libs(""_r_o_o_t_1_1_t_write_lock_guard"",); ^; input_line_10:2:35: error: expected expression; libs(""_r_q___o_b_j_e_c_t_tester"",). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077384134:97,error,error,97,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077384134,3,['error'],['error']
Availability,I get this error in one of my builds. Maybe a typo?; ```; /home/vpadulan/Programs/rootproject/root/hist/hist/src/TKDE.cxx:538:21: error: suggest parentheses around assignment used as truth value [-Werror=parentheses]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7145:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/7145,2,['error'],['error']
Availability,I get this exact error you posted,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009981839:17,error,error,17,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009981839,1,['error'],['error']
Availability,"I got similar behavior with a Root file created using the Python uproot3 package. When passing the address of a `signed char` variable to `SetBranchAddres`. I get the same error:. ```; Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: ttbar; ```. ```$ root --version; ROOT Version: 6.20/06; Built for linuxx8664gcc on Jun 10 2020, 06:10:57; From tags/v6-20-06@v6-20-06; ```. Edit: I reported a segfault but it was unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7565#issuecomment-824055422:172,error,error,172,https://root.cern,https://github.com/root-project/root/issues/7565#issuecomment-824055422,2,"['Error', 'error']","['Error', 'error']"
Availability,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8255:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/8255,2,['error'],"['error', 'errors']"
Availability,"I guess, there is nobody who can implement all these methods for all SQL plugins.; But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented.; I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-507171663:211,error,error,211,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-507171663,1,['error'],['error']
Availability,"I had a closer look in the code and can give a more detailed answer. > The first time one iterates the first states comes from MnSeed and I think in that case the state is always valid (but not 100% sure). I think you are right. BasicMinimumSeed has only one ctor that allows one to set values and that always sets the fValid to true. There is no interface to change it afterwards. We could also remove the flag, it has no purpose. > Eventually we could add the assert or (better) an Error but not at line 232, but at line 75, when we enter in the top function VariableMetricBuilder::Minimum. Ok, I implemented that.; ; > What we should maybe change is the logic around line 150. A covariance matrix is computed via MnHesse. This is done to check the edm. If the edm is still too large the minimization is continued.; > However, if Hesse fails, (for example in the test above f(x) = -x, because the second-derivatives is zero) there is no real point in continuing the minimization. The correct edm will not make sense and one should stop iterating.; > Maybe we could add a Warning there before line 146, like; > ; > ```; > if (!st.IsValid()) { ; > print.Warn(""Invalid Hessian - exit the minimization"");; > break; ; > }; > ```. Ok, I also implemented that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-741736428:484,Error,Error,484,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-741736428,1,['Error'],['Error']
Availability,"I had the impression that the test failures were unrelated, but maybe worth running them again...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486#issuecomment-1022592066:35,failure,failures,35,https://root.cern,https://github.com/root-project/root/pull/9486#issuecomment-1022592066,1,['failure'],['failures']
Availability,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7266:151,recover,recovery,151,https://root.cern,https://github.com/root-project/root/pull/7266,3,"['error', 'recover']","['errors', 'recovery']"
Availability,"I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:120,failure,failures,120,https://root.cern,https://github.com/root-project/root/issues/9436,1,['failure'],['failures']
Availability,"I had tried that too, but Helgrind gave an error on the 'atomic' library, not sure why. Thus I switched to the gROOTMutex. This is the warning I get with atomic:; ```; Possible data race during read of size 1 at 0x1FFEFDF270 by thread #2; Locks held: none; at 0x4E5E9BB: load (atomic_base.h:396); by 0x4E5E9BB: std::atomic<bool>::operator bool() const (atomic:86); by 0x7AB8C47: TApplication::IsRunning() const (TApplication.h:148); by 0x7AB741E: TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1032); by 0x7AB6FE8: TThread::Printf(char const*, ...) (TThread.cxx:950); by 0x4E5F218: ThSFMC01::ThreadFunction() (ThSFMC01.cpp:51); by 0x4E5E88A: RThread::ThreadHandle(void*) (RThread.cpp:258); by 0x7AB6A70: TThread::Function(void*) (TThread.cxx:828); by 0x4C38C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so); by 0x60E86DA: start_thread (pthread_create.c:463); by 0x6D6071E: clone (clone.S:95). This conflicts with a previous write of size 1 by thread #1; Locks held: none; at 0x4E5EA37: store (atomic_base.h:374); by 0x4E5EA37: std::__atomic_base<bool>::operator=(bool) (atomic_base.h:267); by 0x4E5E986: std::atomic<bool>::operator=(bool) (atomic:79); by 0x5A3F0FB: TApplication::Run(bool) (TApplication.cxx:1622); by 0x11D768: main (main.cxx:112); Address 0x1ffefdf270 is on thread #1's stack; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379#issuecomment-857235531:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/8379#issuecomment-857235531,1,['error'],['error']
Availability,"I have a couple of Debian/Ubuntu packages which depend (and build-depend) on ROOT; the only clean way to support those is to have a ROOT *package* (or package set) as well. Running `cmake` and `make` by hand succeeds while putting exactly the same instructions into a `debian/rules` file (as `override`s for the default debhelper build steps) results in failure(s). Dropping debhelper, and going back to an old-style `binary` target, might be the last resort, but I'm trying to avoid this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1169632086:354,failure,failure,354,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1169632086,1,['failure'],['failure']
Availability,"I have addressed some of @Axel-Naumann's comments. Travis test fails, but we want to ignore the change it introduces. Maybe it's a bad clang-format configuration? See below:. ```diff; diff --git a/tmva/tmva/inc/TMVA/DNN/Minimizers.h b/tmva/tmva/inc/TMVA/DNN/Minimizers.h; index a310706..517faa3 100644; --- a/tmva/tmva/inc/TMVA/DNN/Minimizers.h; +++ b/tmva/tmva/inc/TMVA/DNN/Minimizers.h; @@ -59,7 +59,7 @@ public:; ; private:; size_t fBatchSize; ///< Batch size to use for the training.; - size_t fStepCount; ///< Number of steps performed in the current training session; + size_t fStepCount; ///< Number of steps performed in the current training session; size_t fConvergenceSteps; ///< Number of training epochs without considerable; ///< decrease in the test error for convergence.; size_t fConvergenceCount; ///< Current number of training epochs without; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/494#issuecomment-293512573:764,error,error,764,https://root.cern,https://github.com/root-project/root/pull/494#issuecomment-293512573,1,['error'],['error']
Availability,"I have also ran code in gdb: `gdb --args python3 test.py`. And sometimes I get that **Thread 2** received SIGSEGV... ```gdb; [Detaching after fork from child process 39742]; [Detaching after fork from child process 39744]; [Detaching after fork from child process 39746]; [Detaching after fork from child process 39748]; [Detaching after fork from child process 39753]; [Detaching after fork from child process 39755]; [Detaching after fork from child process 39758]; [New Thread 0x7fffdf212700 (LWP 39764)]; [*] Failed to find objfile or not a valid file format: [Errno 2] No such file or directory: '.gnu_debugdata for /lib64/libXcursor.so.1'; [*] Failed to find objfile or not a valid file format: [Errno 2] No such file or directory: '.gnu_debugdata for /lib64/libXfixes.so.3'; First canvas has been created; Next: Create canvas again with the same name and get the warning; Warning in <TCanvas::Constructor>: Deleting canvas with same name: test. Thread 2 ""python3"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7fffdf212700 (LWP 39764)]; 0x00007fffddef621d in TCanvas::Resize (this=0x4729d00) at /tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4dehiooyfl24oevtaids/spack-src/graf2d/gpad/src/TCanvas.cxx:1740; 1740	/tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4dehiooyfl24oevtaids/spack-src/graf2d/gpad/src/TCanvas.cxx: No such file or directory. [ Legend: Modified register | Code | Heap | Stack | String ]; ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────; $rax : 0xd0000000d ; $rbx : 0x00000003aed770 → 0x007fffd6f29030 → 0x007ffff583b790 → <TObject::DoError(int,+0> push r15; $rcx : 0x007fffd8004400 → 0x0000000000000000; $rdx : 0xffffffff ; $rsp : 0x007fffdf211020 → 0x0000001900000002; $rbp : 0x00000004729d00 → 0x007fffde172a90 → 0x007ffff583b790 → <TObject::DoError(int,+0> push r15; $rsi : 0x0 ; $rdi : 0x000000043c5a70 → 0x00000d0000000d ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564113510:1009,fault,fault,1009,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564113510,1,['fault'],['fault']
Availability,"I have been able to finally reproduce this, and it still looks to me like an issue with the interpreter when built with gcc. I get. ```; CernVM ~/Projects/ROOT/build > bin/root -b -q -l /mnt/shared/chris/Projects/ROOT/source/tutorials/math/mathcoreGenVector.C. Processing /mnt/shared/chris/Projects/ROOT/source/tutorials/math/mathcoreGenVector.C...; In file included from input_line_11:21:; In file included from /home/chris/Projects/ROOT/build/etc/dictpch/allHeaders.h:1170:; In file included from /home/chris/Projects/ROOT/build/include/Math/Vector3D.h:11:; /home/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:125:14: error: no matching function for call to 'sqrt'; return sqrt(Mag2());; ^~~~; ```. The problematic method is. ```; Scalar R() const; {; using namespace std;; return sqrt(Mag2());; }; ```. There is nothing wrong with the above, its as far as I am aware perfectly valid code. `<cmath>` is being included via Math/Math.h (I've ensured this by manually adding it to the header as well). . It seems like when run through the interpreter, the header `<cmath>` is not being included for some reason, or something similar to this. I am afraid this is beyond my understanding of ROOT, I need help here from a expert on cling. From my side, I do not think there is anything wrong per se with the code in my patch... Could something be going wrong with the pre-compiled headers, which do not think the functions from <cmath> need to be included in this case ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286197964:637,error,error,637,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286197964,1,['error'],['error']
Availability,I have debugged the code up till the evaluate() method and it seems ok. So the errors are maybe at the analytical integral...,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4440:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/4440,1,['error'],['errors']
Availability,"I have developed a solution to enable the NVPTX backend in Root by default. I have also implemented a check in the CMakeLists.txt of Cling that throw an error if the NVPTX backend is not enabled. Unfortunately, I don't know how to push commits to this PR, so I forked your repo and modified the PR-284 branch: https://github.com/SimeonEhrig/root/tree/PR-284. **Attention:** I have removed the last commit of your branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4616#issuecomment-550366528:153,error,error,153,https://root.cern,https://github.com/root-project/root/pull/4616#issuecomment-550366528,1,['error'],['error']
Availability,"I have fixed remaining build warnings and added installation of the ZMQ headers to the CI clang-tidy script, which seems to fix all CI builds. The JupyROOT failure is something in master, unrelated to this PR. So, pending a review of @oshadura or @Axel-Naumann on the CMake built-in part, I think this PR should be ready for merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-867622962:156,failure,failure,156,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-867622962,1,['failure'],['failure']
Availability,I have fixed the valgrind error from `clang::CodeGen::CodeGenModule::EmitCXXGlobalInitFunc()`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589#issuecomment-307555578:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/589#issuecomment-307555578,1,['error'],['error']
Availability,"I have in the mean time found the root cause why my patch fails:; - It is due to copy relocations of <iostream> symbols from libstdc++; - Crashes happen whenever cling wants to output text via cout / cerr / etc.; - The problem is that there are 2 instances of cout / cerr: The first created by the executable itself through copy relocation, when the executable prints something via cout. The second created by libCling loaded with RTLD_DEEPBIND. (By design, RTLD_DEEPBIND links to libstdc++ first before checking the global namespace, so it does not see the copy-relocated symbol.). The problem can be avoided if executables are compiled with -fPIC as well.; I just tried locally to compile the failing ROOT ctests with -fPIC and this fixed the segmentation faults.; The question is whether this is a proper solution, since it would require to compile all executables with -fPIC. On the other hand, I don't know how to fix this in another way. Perhaps this could be enabled via a special CMake option for ROOT, which enables RTLD_DEEPBIND for libCling and -fPIC for all executables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564007525:758,fault,faults,758,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564007525,1,['fault'],['faults']
Availability,"I have installed [xfitter](https://www.xfitter.org/xFitter/) package using ROOT. Installation was completed successfully ; but when I want to run some examples I encounter this error:. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f80c2812dba in __GI___wait4 (pid=139255, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f80c2812d7b in __GI___waitpid (pid=<optimised out>, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0) at waitpid.c:38; #2 0x00007f80c27820e7 in do_system (line=<optimised out>) at ../sysdeps/posix/system.c:172; #3 0x00007f817cab0c47 in TUnixSystem::StackTrace() () from /home/mamali/Packages/root_install/lib/libCore.so; #4 0x00007f817caadef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/mamali/Packages/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ====================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9179:177,error,error,177,https://root.cern,https://github.com/root-project/root/issues/9179,1,['error'],['error']
Availability,"I have investigated one of the failures a bit more, and here is my status:. * https://github.com/wlav/cppyy/issues/272. I'll have to stop working on this for today, but I wanted to leave it there just in case you have an idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16748#issuecomment-2455488490:31,failure,failures,31,https://root.cern,https://github.com/root-project/root/pull/16748#issuecomment-2455488490,1,['failure'],['failures']
Availability,I have made some changes related to Shape Operator. Here is the error i am facing for converting fShape to string and also in the output its not accepting `std::vector<int>`; ![image](https://user-images.githubusercontent.com/84740927/185754692-90b0ed5c-42a8-401d-9eea-676a4216685e.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11086#issuecomment-1221335353:64,error,error,64,https://root.cern,https://github.com/root-project/root/pull/11086#issuecomment-1221335353,1,['error'],['error']
Availability,"I have modified the initial commit to include the `IgnoreSignal` call in `TXXSystem::Abort` before throwing the signal, in order to avoid the infinite recursion cases. Regarding the two doubts:. > Should it print a stack trace? (This may or may not be useful for an assert). In the end I have not moved the return after `StackTrace`, so with this solution we don't print the stack trace for an unexpected `SIGABRT`. In the case of an assert, the assert failure itself is still notified with a message that tells you the file and line where it happened, so perhaps we don't need a stack trace. > When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). The current solution stops the process. If a `SIGABRT` was thrown it's because a critical (unrecoverable) error happened, so it makes sense to stop. When I use the ROOT prompt and get a SigSegmentionViolation, it does not stop, I get back to the prompt and if I try to run something I usually get another seg fault.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-589630499:453,failure,failure,453,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-589630499,4,"['error', 'failure', 'fault', 'recover']","['error', 'failure', 'fault', 'recover']"
Availability,"I have more strange effect. I do not compile davix and therefore after opening the file with:; `TFile::Open(""https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root"");` ; I getting instance of `TWebFile`. And if enable `gDebug=1`, one clearly sees ~1.5s per each http request. Moreover, when I try to perform `TTree::Draw()` from the `TBrowser` (web and normal one), `TWebFile` submits multirange request, but not able to parse result of it. Producing several errors - it fully crashes, including my console. Seems to be, it is another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592493876:497,error,errors,497,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592493876,1,['error'],['errors']
Availability,"I have moved all the code out of the `TString.cxx` file and it compiles. We can't do SFINAE in the template arguments because the signature of the function would be identical:. ```cpp; template<class T, class>; TString operator+(TString s, T i); ```. and . ```cpp; template<class T, class>; TString operator+(TString s, T u); ```. The only possible way is to do SFINAE in the return type, only because this is a case of multiple SFINAE overloads and not just one function that has substitution failure. Putting it in the return type also allows the declaration and definition to be separate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1510#issuecomment-358380400:494,failure,failure,494,https://root.cern,https://github.com/root-project/root/pull/1510#issuecomment-358380400,1,['failure'],['failure']
Availability,"I have no clue what ccache is and how to use this option. So I use `-Dccache=ON`; I now get this:. ```; [16:49:58] marcomeyer@MarcoMacBook-Pro:~/Software/root/v6-30-04-build$; $ root -l; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C clang -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1931464549:187,ERROR,ERROR,187,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1931464549,1,['ERROR'],['ERROR']
Availability,"I have no clue what is that and it seems a ton of build failure information, maybe we can just ignore it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398533804:56,failure,failure,56,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398533804,1,['failure'],['failure']
Availability,"I have no idea if error ` Failed to connect to socket /run/dbus/system_bus_socket` critical or not. As I can see, all 4 webgui tests failing - not only `rline.cxx` with creation of png file using chromium. It would be much easier if I can be able to reproduce such docker on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1680771299:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1680771299,1,['error'],['error']
Availability,"I have now installed the final review comments about the `fMember` style by @vepadulano. Furthermore, the `alma9` failures should be gone now, because we have deactivated `tmva-cpu` for this platform. Like this, the collision of the openblas version on the system (picked up by TMVA-CPU) and by NumPy should not happen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2071017326:114,failure,failures,114,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2071017326,1,['failure'],['failures']
Availability,"I have other problem building libAfterImage - in error output I see following message; ```; ar: libdeps specified more than once; ```; It caused by argument `l` in `ar clq` command. ; Argument `l` means library linking to static `libAfterImage.a` library, but there is no any library linked.; Seems to be `ar` on my latest OpenSUSE installation is too strict about this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789807508:49,error,error,49,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789807508,1,['error'],['error']
Availability,I have performed another iteration:; - removal of unneeded bvh headers; - fix compile error on gcc 8.5; - add README to bvh directories; - squash everything into single commit; - removal of `getenv` usage,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442#issuecomment-2360890196:86,error,error,86,https://root.cern,https://github.com/root-project/root/pull/16442#issuecomment-2360890196,1,['error'],['error']
Availability,I have pinged @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2033#issuecomment-391461539:7,ping,pinged,7,https://root.cern,https://github.com/root-project/root/pull/2033#issuecomment-391461539,1,['ping'],['pinged']
Availability,"I have question. Does `roottest` runs `cmake --build . --target cling-test` when the cling interpreter code is changed? From time to time I see, that commits are merged regardless of whether the CI fails.; If I understand Cling's workflow correctly, changes are integrated and tested in ROOT and automatically streamed down to Cling after the merge in ROOT. So, if `roottest` does not run the integrated tests in cling, it is possible that the Cling CI is bypassed, or I'm wrong?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957:319,down,down,319,https://root.cern,https://github.com/root-project/root/issues/6957,1,['down'],['down']
Availability,I have repurposed this PR to fix the current CI failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15502#issuecomment-2122927944:48,failure,failures,48,https://root.cern,https://github.com/root-project/root/pull/15502#issuecomment-2122927944,1,['failure'],['failures']
Availability,"I have still problems in the compression test (other failures are not mine):; ```; MainEvent.cxx: In function ‘int main(int, char**)’:; MainEvent.cxx:445:63: error: cannot convert ‘ROOT::<anonymous enum>’ to ‘ROOT::RCompressionSetting::EAlgorithm’ for argument ‘1’ to ‘int ROOT::CompressionSettings(ROOT::RCompressionSetting::EAlgorithm, int)’; if (ROOT::CompressionSettings(ROOT::kUseGlobalSetting, 5) != 5) exit(31);; ^; MainEvent.cxx:446:51: error: cannot convert ‘ROOT::<anonymous enum>’ to ‘ROOT::RCompressionSetting::EAlgorithm’ for argument ‘1’ to ‘int ROOT::CompressionSettings(ROOT::RCompressionSetting::EAlgorithm, int)’; if (ROOT::CompressionSettings(ROOT::kZLIB, 0) != 100) exit(32);; ^; MainEvent.cxx:447:52: error: cannot convert ‘ROOT::<anonymous enum>’ to ‘ROOT::RCompressionSetting::EAlgorithm’ for argument ‘1’ to ‘int ROOT::CompressionSettings(ROOT::RCompressionSetting::EAlgorithm, int)’; if (ROOT::CompressionSettings(ROOT::kZLIB, -1) != 100) exit(36);; ^; MainEvent.cxx:448:52: error: cannot convert ‘ROOT::<anonymous enum>’ to ‘ROOT::RCompressionSetting::EAlgorithm’ for argument ‘1’ to ‘int ROOT::CompressionSettings(ROOT::RCompressionSetting::EAlgorithm, int)’; if (ROOT::CompressionSettings(ROOT::kLZMA, 99) != 299) exit(33);; ^; MainEvent.cxx:449:50: error: cannot convert ‘ROOT::<anonymous enum>’ to ‘ROOT::RCompressionSetting::EAlgorithm’ for argument ‘1’ to ‘int ROOT::CompressionSettings(ROOT::RCompressionSetting::EAlgorithm, int)’; if (ROOT::CompressionSettings(ROOT::kLZ4, 0) != 400) exit(37);; ^; MainEvent.cxx:450:51: error: cannot convert ‘ROOT::<anonymous enum>’ to ‘ROOT::RCompressionSetting::EAlgorithm’ for argument ‘1’ to ‘int ROOT::CompressionSettings(ROOT::RCompressionSetting::EAlgorithm, int)’; if (ROOT::CompressionSettings(ROOT::kLZ4, -1) != 400) exit(38);; ^; MainEvent.cxx:451:37: error: ‘kOldCompressionAlgo’ is not a member of ‘ROOT’; if (ROOT::CompressionSettings(ROOT::kOldCompressionAlgo, 100) != 399) exit(34);; ^; MainEvent.cxx:452:37: error: ‘",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3005#issuecomment-440758968:53,failure,failures,53,https://root.cern,https://github.com/root-project/root/pull/3005#issuecomment-440758968,4,"['error', 'failure']","['error', 'failures']"
Availability,"I have tested compilation under linux with external Davix and libAfterImage packages on my local computer. CMake is unable to download and compile build-in Davix for some reason for v6.16. . There is a ""404 - Not found"" error for the [DAVIX_URL](https://github.com/root-project/root/blob/v6-16-00-patches/builtins/davix/CMakeLists.txt#L8) if i try to open it in a browser.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9517#issuecomment-1009986305:126,down,download,126,https://root.cern,https://github.com/root-project/root/pull/9517#issuecomment-1009986305,2,"['down', 'error']","['download', 'error']"
Availability,"I have the same/similar issue. ROOT 6.28.04 installed from source, macOS 13.4, Xcode 14.3.1, MacBook Pro with Intel i9-9880H. Running TMVA tests in the build directory, I get. ```; $ ctest --output-on-failure -R TMVA-DNN-MethodDL-SGD-Optimization-Cpu; Test project /Users/ole/Develop/BUILD/ROOT/6.28.04b; Start 357: TMVA-DNN-MethodDL-SGD-Optimization-Cpu; 1/1 Test #357: TMVA-DNN-MethodDL-SGD-Optimization-Cpu ...***Failed 0.61 sec; Testing Method DL with SGD Optimizer for CPU backend:; libc++abi: __cxa_guard_acquire detected recursive initialization; CMake Error at /Users/ole/Develop/BUILD/ROOT/root-6.28.04/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 0.74 sec. The following tests FAILED:; 	357 - TMVA-DNN-MethodDL-SGD-Optimization-Cpu (Failed); Errors while running CTest; ```. When running all the TMVA tests:; ```; $ ctest -R ""^TMVA"" -j6; ...; 81% tests passed, 7 tests failed out of 36. Total Test time (real) = 10.47 sec. The following tests FAILED:; 	357 - TMVA-DNN-MethodDL-SGD-Optimization-Cpu (Failed); 	358 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Failed); 	359 - TMVA-DNN-MethodDL-Adagrad-Optimization-Cpu (Failed); 	360 - TMVA-DNN-MethodDL-RMSProp-Optimization-Cpu (Failed); 	361 - TMVA-DNN-MethodDL-Adadelta-Optimization-Cpu (Failed); 	362 - TMVA-DNN-Regression-Cpu (Failed); 	376 - TMVA-DNN-GRU-Backward-Cpu (Failed); Errors while running CTest; ```; All these failing tests abort with ""libc++abi: __cxa_guard_acquire detected recursive initialization"". The TMVA.* tests pass without any issue on a different system: ROOT 6.28.04 installed from source (exact same configuration as the installation with errors mentioned above), macOS 11.7.7, Xcode 13.2.1, Intel i7-10700K. Seems to be related to the newer libc++ on the macOS 13.4/Xcode 14 system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13002#issuecomment-1594949419:201,failure,failure,201,https://root.cern,https://github.com/root-project/root/issues/13002#issuecomment-1594949419,6,"['Error', 'error', 'failure']","['Error', 'Errors', 'error', 'errors', 'failure']"
Availability,"I have to update the PR, so: undo ping @ Philippe :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/807#issuecomment-319284833:34,ping,ping,34,https://root.cern,https://github.com/root-project/root/pull/807#issuecomment-319284833,1,['ping'],['ping']
Availability,"I have tried applying your latest patch. But, when libcmaes is not installed by doing . cmake ../root -Dall=on -Dtesting=on. I get at the end: . CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBCMAES_INCLUDE_DIR (ADVANCED); used as include directory in directory /home/moneta/root/math/cmaes; used as include directory in directory /home/moneta/root/math/cmaes. -- Configuring incomplete, errors occurred!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40#issuecomment-63979259:151,Error,Error,151,https://root.cern,https://github.com/root-project/root/pull/40#issuecomment-63979259,2,"['Error', 'error']","['Error', 'errors']"
Availability,"I have trouble compiling the ALICE O2 with ROOT and some other libraries, which come with LLVM.; For me, this is in particular:; - arrow with gandiva; - glfw with vulkan support; - several OpenCL runtimes, which use LLVM. I was getting the error `...please hide them or dlopen() them after the call to TROOT::InitInterpreter()` and a segmentation fault thereafter. Now, it is a bit complicated to require from all 3rd party libraries that they do not export LLVM symbols, so I was trying to solve the problem on the ROOT side. I fully agree that the problem is most likely due to just in time resolving of symbols. But I am wondering why my patch would break something in the ROOT ctests. Before my patch, the check would make sure that there are no other LLVM symbols present. But when there are no other symbols present, my patch shouldn't change anything. One could try to open libCling with RTLD_NOW instead of RTLD_LAZY, but I am not sure whether that would change anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561819372:240,error,error,240,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561819372,2,"['error', 'fault']","['error', 'fault']"
Availability,I have whatever is generated by building ROOT 6.28.4. I attached it. Is there a way to trim it down for a specific proxy?. [modules.idx.zip](https://github.com/root-project/root/files/11801809/modules.idx.zip),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1598963444:95,down,down,95,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1598963444,1,['down'],['down']
Availability,"I haven't been able to rerun the installation process with `-Dfail-on-missing=ON` for version 6.24 and as the system is under maintenance. However, I would be glad to know if or where is it possible to manually switch back off the `builtin_lz4` option after having runned `cmake` ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424#issuecomment-862180994:126,mainten,maintenance,126,https://root.cern,https://github.com/root-project/root/issues/8424#issuecomment-862180994,1,['mainten'],['maintenance']
Availability,I hope all errors could be resolved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1422:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/1422,1,['error'],['errors']
Availability,"I hope, now I fix all spelling errors",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/624#issuecomment-307335103:31,error,errors,31,https://root.cern,https://github.com/root-project/root/pull/624#issuecomment-307335103,1,['error'],['errors']
Availability,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. ; Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15851#issuecomment-2178556928:214,error,error,214,https://root.cern,https://github.com/root-project/root/issues/15851#issuecomment-2178556928,1,['error'],['error']
Availability,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15973:131,error,error,131,https://root.cern,https://github.com/root-project/root/pull/15973,3,['error'],['error']
Availability,"I increased tolerance to 50000 ulps to be really safe, although 7300 runs went fine for 10000.; This comes down to a tolerance of approximately `1.1e-11 * x` for double, and `5.9e-03 * x` for float.; I did see errors of ~0.0015x for float, so decreasing the tolerance may lead to the test failing again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521#issuecomment-296593244:12,toler,tolerance,12,https://root.cern,https://github.com/root-project/root/pull/521#issuecomment-296593244,5,"['down', 'error', 'toler']","['down', 'errors', 'tolerance']"
Availability,"I initially reported this on the [root forum](https://root-forum.cern.ch/t/roodllsignificancemcsmodule-merge-error/42702). ### Describe the bug; RooAbsMCStudyModule::finalizeRun() returning a RooDataSet sometimes causes a merge error which is difficult to avoid.; Caused by RooMCStudy::_fitParData and RooAbsMCStudyModule data being different sizes. ### Expected behavior; RooMCStudy and RooAbsMCStudyModule data merging correctly,; OR; A way to consistently make the datasets the same size. ### To Reproduce; Run included macro. ```. #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooConstVar.h""; #include ""RooAddPdf.h""; #include ""RooMCStudy.h""; #include ""RooFFTConvPdf.h""; #include ""RooArgusBG.h""; #include ""RooDLLSignificanceMCSModule.h"". using namespace RooFit;; const double xmin = 4.3, xmax = 4.55, bratio = 0.3, m0 = 4.482;; const int nevents = 100;. void min_mcsign_error() {; 	RooRealVar x(""mresp"", ""x"", 4.3, 4.55);. 	// signal; 	RooRealVar mean_res(""#mean_{gauss}"", ""mean_res"", 4.47);; 	RooRealVar sigma_res(""#sigma_{gauss}"", ""sigma_res"", 0.05);; 	RooGaussian sig(""gs_res"", ""gs_res"", x, mean_res, sigma_res);. 	// background; 	RooRealVar argpar(""shape"", ""argus shape parameter"", -7);; 	RooRealVar power(""power"", ""argus power parameter"", 0.75);; 	RooArgusBG bkg(""bkg"", Form(""Background ARGUS, m_{0} = %.3f"", m0), x, RooConst(m0), argpar, power);. 	// generating distribution; 	RooRealVar nsig(""nsig"", ""signal number"", bratio);; 	RooRealVar nbg(""nbg"", ""bg number"", 1.-bratio); ; 	RooAddPdf mcdist(""distribution"", ""BW+a"", RooArgList(sig, bkg), RooArgList(nsig, nbg));. 	// signal used in model; 	RooRealVar fitmean_res(""#mean_{gauss}"", ""mean_res"", 4.2, 4., 5.);; 	RooRealVar fitsigma_res(""#sigma_{gauss}"", ""sigma_res"", 0.1, 0., 1.);; 	RooGaussian fitsig(""gs_res"", ""gs_res"", x, fitmean_res, fitsigma_res);; 	; 	// background used in model; 	RooRealVar fitargpar(""shape"", ""fit argus shape parameter"", -6.5, -8, -6);; 	RooRealVar fitpower(""power"", ""fit argus power parameter"", 0.5, 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6949:109,error,error,109,https://root.cern,https://github.com/root-project/root/issues/6949,2,['error'],['error']
Availability,I installed root via this video [https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30](https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30) . To build a starlight ; ![Screenshot 2022-10-23 133107](https://user-images.githubusercontent.com/116489914/197387186-122e8d49-1751-4152-bc5c-c9ce70a8f60a.png); I tried a lot to fix this error ; ![Screenshot 2022-10-22 220723](https://user-images.githubusercontent.com/116489914/197386889-d40c094c-b457-4e2c-a549-caf0d6d39a61.png) . Please help me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11626:409,error,error,409,https://root.cern,https://github.com/root-project/root/issues/11626,1,['error'],['error']
Availability,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797#issuecomment-2166147635:65,error,error,65,https://root.cern,https://github.com/root-project/root/pull/15797#issuecomment-2166147635,1,['error'],['error']
Availability,"I just did a git pull to get the latest version.; Now I get:; ```; $ make; /Applications/CMake.app/Contents/bin/cmake -S/Users/couet/git/zevis -B/Users/couet/git/zevis-build --check-build-system CMakeFiles/Makefile.cmake 0; /Applications/CMake.app/Contents/bin/cmake -E cmake_progress_start /Users/couet/git/zevis-build/CMakeFiles /Users/couet/git/zevis-build/CMakeFiles/progress.marks; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/Makefile2 all; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/ZevLib.dir/build.make CMakeFiles/ZevLib.dir/depend; [ 1%] Generating G__ZevLib.cxx, libZevLib_rdict.pcm, libZevLib.rootmap; /Applications/CMake.app/Contents/bin/cmake -E env LD_LIBRARY_PATH=/Users/couet/git/couet-root-bin/lib:/Users/couet/git/couet-root-bin/lib /Users/couet/git/couet-root-bin/bin/rootcling -v2 -f G__ZevLib.cxx -s /Users/couet/git/zevis-build/libZevLib.dylib -rml libZevLib.dylib -rmf /Users/couet/git/zevis-build/libZevLib.rootmap -inlineInputHeader -IZevLib/inc -I/Users/couet/git/couet-root-bin/include -I/Users/couet/git/zevis ZevLib/dict/ZevLib_Classes.hh /Users/couet/git/zevis/ZevLib/dict/LinkDef.hh; input_line_12:3:10: fatal error: 'ZFTD.h' file not found; #include ""ZFTD.h""; ^~~~~~~~; Error: /Users/couet/git/couet-root-bin/bin/rootcling: compilation failure (/Users/couet/git/zevis-build/libZevLib99e3c8e971_dictUmbrella.h); make[2]: *** [G__ZevLib.cxx] Error 1; make[1]: *** [CMakeFiles/ZevLib.dir/all] Error 2; make: *** [all] Error 2. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693238080:1194,error,error,1194,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693238080,6,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"I just fixed the compilation error, I tried also a workaround on CreateTHnAny, however, I am not sure if that is the proper or cleanest way to do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-879874287:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-879874287,1,['error'],['error']
Availability,I just look at the bots and the error was obvious to me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6200#issuecomment-678298695:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/6200#issuecomment-678298695,1,['error'],['error']
Availability,"I just noticed a compile error for the RooRealL.cxx test file that I introduced in the modernization commit (the second in this PR). I did an interactive rebase to fix this. Also included the RooMinimizer / MinuitFcnGrad circular dependency fix in that modernization/clean-up commit. To clean up this thread, I'll hide all bot messages starting from that previously buggy commit until now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915080044:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915080044,1,['error'],['error']
Availability,"I just saw Python-related failures on Fedora 39 even on a PR for 6.30 backports:; https://github.com/root-project/root/pull/14161; ```; Failed; Info in <TUnixSystem::ACLiC>: creating shared library /github/home/ROOT-CI/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. -- TEST COMMAND -- ; cd /github/home/ROOT-CI/build/roottest/python/basic; /usr/bin/timeout -s USR2 270s /py-venv/ROOT-CI/bin/python3.12 /github/home/ROOT-CI/src/roottest/python/basic/PyROOT_basictests.py --fixcling; -- BEGIN TEST OUTPUT --; ============================= test session starts ==============================; platform linux -- Python 3.12.0, pytest-7.4.3, pluggy-1.3.0; rootdir: /github/home/ROOT-CI; plugins: anyio-4.1.0; collected 25 items. ../../../../src/roottest/python/basic/PyROOT_basictests.py .........Fatal Python error: Segmentation fault. Current thread 0x00007fca5edb6740 (most recent call first):; File ""/usr/lib64/python3.12/traceback.py"", line 1043 in _compute_suggestion_error; File ""/usr/lib64/python3.12/traceback.py"", line 737 in __init__; File ""/usr/lib64/python3.12/traceback.py"", line 159 in format_exception_only; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 605 in exconly; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 806 in get_exconly; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 794 in get_source; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 860 in repr_traceback_entry; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 914 in repr_traceback; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 989 in repr_excinfo; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/_code/code.py"", line 701 in getrepr; File ""/py-venv/ROOT-CI/lib64/python3.12/site-packages/_pytest/nodes.py"", line 486 in _repr_failure_py; File ""/py-venv/ROOT-CI/lib64/python3.12/si",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14098#issuecomment-1837114968:26,failure,failures,26,https://root.cern,https://github.com/root-project/root/pull/14098#issuecomment-1837114968,3,"['error', 'failure', 'fault']","['error', 'failures', 'fault']"
Availability,I just tried the same on lxplus745 and I don't get the error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7162#issuecomment-776095650:55,error,error,55,https://root.cern,https://github.com/root-project/root/issues/7162#issuecomment-776095650,1,['error'],['error']
Availability,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: ; ```fish; clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#; ```; (where `# = 0,1,2,3`). **clang version**: ; ```; Debian clang version 16.0.6 (27); Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:; ```; ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:; #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83); #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s).; ```. ROOT Debug:; ```; ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:; #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b); #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818#issuecomment-2162394965:594,ERROR,ERROR,594,https://root.cern,https://github.com/root-project/root/issues/15818#issuecomment-2162394965,1,['ERROR'],['ERROR']
Availability,"I know the question, but I don't think anyone knows the answer. The code that gets slowed down is vtable-heavy code (at least I think that's the symptom), i.e. ""legacy"" code. We need to motivate people to migrate to today's code, so that's what we should be optimize for. We are not making legacy code impossible, but we are indeed pessimizing it. I'd be happy :-) to have someone with `opt` knowledge figure out which pass it is that blows up. Maybe @hahnjo could give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-971912708:90,down,down,90,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-971912708,1,['down'],['down']
Availability,"I know there's ""add debug output"" - but this is something we'll want to have available anyway, without having to re-run. I'm not dumping `env` because that can trigger the log grepper (not too concerned by tokens - GH is doing a good job at hiding those).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12581:77,avail,available,77,https://root.cern,https://github.com/root-project/root/pull/12581,1,['avail'],['available']
Availability,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2237621375:129,down,downstream,129,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2237621375,1,['down'],['downstream']
Availability,"I logged into the node and it seems the node may just have been overloaded when the test was run, so it timed out. I ran the test several times, and the test succeeded everytime, even though it took 3 minutes to run the first time. Running 'top' I saw that there were some heavy compilations running at the same time, taking all CPU available... Maybe we should limit the number of simultaneous jobs on each node, and/or the maximum resources a job can use, so that there is always at least one full core available to each job. For now, I am just going to rebase and push again. I think the tests should succeed if the build node is not too busy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-300391539:333,avail,available,333,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-300391539,2,['avail'],['available']
Availability,"I looked at the first error.; ```; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/jets.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/jets.C; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:767:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 767 | + ISTAT); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: ‘cfget_’ was previously declared here; 107 | void cfget_(int *lundes, int *medium, int *nwrec, int *nwtak, char *mbuf,; | ^; ```; I checked the code. Seems to me it is correct. In the c part, `istat` is declared as `int *istat`. which is normal because FORTRAN always passes by address. and in the FORTRAN part, we have `ISTAT` which is an integer as it starts with `I`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657#issuecomment-1303037625:22,error,error,22,https://root.cern,https://github.com/root-project/root/issues/11657#issuecomment-1303037625,2,['error'],['error']
Availability,I made one mistake. I tested the methodDL with locally downloaded tmva_class_example.root file. I forgot to change that to use the one on http://root.cern.ch/files/tmva_class_example.root. I guess that might be the cause of the test failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379#issuecomment-408417017:55,down,downloaded,55,https://root.cern,https://github.com/root-project/root/pull/2379#issuecomment-408417017,2,"['down', 'failure']","['downloaded', 'failure']"
Availability,"I made some investigations about the possible counter initialization for every translation unit, and I found [this stackoverflow thread](https://stackoverflow.com/questions/19366615/static-member-variable-in-class-template) where someone explains:; >Therefore, a class template will always have external linkage and so are its static data members (const or not). So, Foo<int>::x will always refer to the same entity in memory regardless of which translation units this expression appears in. The linker makes this happen. Of course, this had to be tested before I could believe it. For my test I have three files. First, a source to build an executable that will call two functions where the implementations end up in different translation units:; ```C++; // main.cc; void callOne();; void callTwo();. int main() {; callOne();; callTwo();; return 0;; }; ```; Then, a library that uses a class with a UniqueID as suggested in this PR:; ```C++; // mylib.cc; #ifndef FUNC_NAME; #error ""FUNC_NAME needs to be defined""; #endif. #include ""UniqueId.h"". #include <iostream>. struct MyClass {; UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }; const UniqueId<MyClass> _uniqueId;; };. void FUNC_NAME() {; auto idCounterAddr = &UniqueId<MyClass>::counter;; auto idVal = static_cast<int>(MyClass{}.uniqueId().value());; std::cout << idCounterAddr << "" "" << idVal << std::endl;; }; ```; The point of setting the function name via preprocessor flag is that we can easily compile two identical implementations in two translation units.; Finally, a the test script to compile all the translation units, link them together and run the executable:; ```bash; #!/bin/bash. # test.sh. g++ -DFUNC_NAME=callOne -c mylib.cc -o one.o; g++ -DFUNC_NAME=callTwo -c mylib.cc -o two.o; g++ -c main.cc; g++ -o main main.o one.o two.o. ./main. rm *.o main; ```; The test outputs:; ```; 0x560e77c0f198 1; 0x560e77c0f198 2; ```; So indeed, the linker makes sure that the static counter member of the `UniqueId` class wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8324#issuecomment-857743352:976,error,error,976,https://root.cern,https://github.com/root-project/root/pull/8324#issuecomment-857743352,1,['error'],['error']
Availability,I manage to reproduce error on my docker and seems to be `--headless=new` is a solution. Let see,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14774:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/14774,1,['error'],['error']
Availability,"I may be missing something but I seem to be unable to compile ROOT 6.28/04 with c++14. I use. ```; cmake ../root/root-6.28.04/ -DCMAKE_CXX_VERSION=14; ```. And get the following confirmation at the end of the cmake output. ```; System Linux-3.10.0-1160.88.1.el7.x86_64; Processor 36 core Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz (x86_64); Build type Release; Compiler GNU 6.3.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```; As far as I can tell, gcc6.3.0 should have full c++14 capability. However, eventually I get the following errors:. ```; Consolidate compiler generated dependencies of target Dictgen; Consolidate compiler generated dependencies of target ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:741,error,errors,741,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['errors']
Availability,"I measured three times on each algorithms and wrote the averages in the table. I think the performance between zlib-6 and zlib-1 are up and down but quite similar in term of decompression. I could double check it later. . Sent from my iPhone. > On Oct 1, 2015, at 11:17, pcanal notifications@github.com wrote:; > ; > @bbockelm The CMS if I am not mistaken is; > ; > Algorithm decompression(real time) decompression(cpu time) Compressed File Size; > zlib 54.13 MB/s 63.28 MB/s 1.6 GB; > lzma 22.47 MB/s 23.41 MB/s 1.2 GB; > lz4 56.36 MB/s 66.06 MB/s 1.8 GB; > zlib-1 54.58 MB/s 62.78 MB/s 1.8 GB; > Where at same compression level the run-time gain is 5% (and even less compared to zlib-6) ....; > hummm the numbers are odd .... zlib-6 is decompressing faster than zlib-1? Are the times divided by the compressed or decompressed size?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81#issuecomment-144794265:140,down,down,140,https://root.cern,https://github.com/root-project/root/pull/81#issuecomment-144794265,1,['down'],['down']
Availability,"I misspellt the commit message. That was supposed to say ""Vc sqrt error fix""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822667524:66,error,error,66,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822667524,1,['error'],['error']
Availability,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4096#issuecomment-512261682:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/4096#issuecomment-512261682,1,['error'],['error']
Availability,"I narrowed the issue down to a more simple reproducer:; ```C++; void script(); {; RooRealVar x{""x"", """", -10, 10};; x.setRange(""fit"", 0, 10);. RooGenericPdf gauss{""gauss"", ""std::exp(-0.5 * (x*x))"", x};; RooRealVar s{""n_sig"", """", 1000., 0, 10000};; RooAddPdf model{""model"", """", {gauss}, {s}};. std::unique_ptr<RooDataSet> data{model.generate(x)};. // Comment this out and it is fast again; model.setNormRange(""fit"");. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. for(std::size_t i = 0; i < 1000; ++i) {; s.setVal(s.getVal() + (i % 2 ? +1 : -1));; nll->getVal();; }; }; ```. The problem might have something to do with the old test statistics, because if you use the new BatchMode things are going fine. Probably, the dirty flags to the integral are propagated wrongly, causing a numeric integral to be computed for each event.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1297295506:21,down,down,21,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297295506,1,['down'],['down']
Availability,"I noticed that in one computer, _REENTRANT is defined, but not in the other, not sure why, even if they are both Ubuntu.; https://github.com/root-project/root/blob/master/core/base/inc/TVirtualMutex.h#L90. So my original code only worked if _REENTRANT was undefined, so maybe it wasn't doing anything at all? I don't remember however having seen any warning `::Fatal(""Init"",""_REENTRANT must be #define-d for TThread to work properly."");` The threads and mutexes worked quite well despite of some smaller issues (https://github.com/root-project/root/issues/8365); Maybe related: https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14. Some other questions:; - Why is the version with the non-pointer not supported as in std::lockguard?; - Why does one version need "";"" at the end, but not the other one?; - How can I force REENTRANT to be defined when including ROOT classes from external projects via CMake find_package?; - Why do two Ubuntu computers behave differently, and why did the behaviour change (the error appear) recently only in of both?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9294#issuecomment-969151156:1037,error,error,1037,https://root.cern,https://github.com/root-project/root/issues/9294#issuecomment-969151156,1,['error'],['error']
Availability,"I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for; ```; Start 959: tutorial-v7-concurrentfill.cxx; ```; Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. At this point I don't see what can be immediately improved in the tutorials to avoid the sporadic failures, I am closing this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1916191292:610,failure,failures,610,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1916191292,1,['failure'],['failures']
Availability,"I now understand what is going wrong: @Axel-Naumann pushed me into the right direction by noticing that the errors concern vtables and typeinfo symbols, which are subject to reemission on our side. Then our `WeakTypeinfoVTablePass` will mark them as `weak` to make sure the JIT infrastructure deduplicates the symbols as needed. Additionally, `ReuseExistingWeakSymbols` will entirely remove the definitions if the symbol can be found in the process, for example for compiled classes. Now the problem is that the symbols were originally marked as ""local to the shared library"" and relocations can take advantage of this. This is where `PreventLocalOptPass` comes in, but it ran before the two passes mentioned before and therefore doesn't consider these symbols. So tldr, we can fix the problems by reordering the passes. Let's slot this change in after the upgrade to LLVM 18, which is also where upstream changed to the default to JITLink.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14246#issuecomment-2308751689:108,error,errors,108,https://root.cern,https://github.com/root-project/root/pull/14246#issuecomment-2308751689,1,['error'],['errors']
Availability,I observed these building on macOS 13.2.1 and XCode 14.2. - Construction of `std::span` from vector iterators directly fails to compile due to not finding a conversion. This can be worked around by passing in a pointer and a size.; - Warning about C++20 preferring symmetric equality operators (this is not a failure (yet)).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12617:309,failure,failure,309,https://root.cern,https://github.com/root-project/root/pull/12617,1,['failure'],['failure']
Availability,"I only did two minor changes to the existing commits, as discussed yesterday evening:; ```diff; diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx; index 7c9ccebeaa..411ef5733c 100644; --- a/tree/ntuple/v7/inc/ROOT/RField.hxx; +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx; @@ -2179,9 +2179,8 @@ public:; ; template <typename T>; class RIntegralField {; - // Cannot say static_assert(false) because not all compilers implement CWG2518 yet...; - static_assert(std::is_integral_v<T>, ""RIntegralField requires integral type"");; - static_assert(!std::is_integral_v<T>, ""unsupported integral type"");; + // Instantiating this base template definition should never happen and is an error!; + RIntegralField() = delete;; };; ; template <>; @@ -2573,6 +2572,8 @@ template <typename T>; class RField<T, typename std::enable_if<std::is_integral_v<T>>::type> final; : public RIntegralField<typename Internal::RIntegralTypeMap<T>::type> {; using MappedType = typename Internal::RIntegralTypeMap<T>::type;; + static_assert(sizeof(T) == sizeof(MappedType), ""invalid size of mapped type"");; + static_assert(std::is_signed_v<T> == std::is_signed_v<MappedType>, ""invalid signedness of mapped type"");; ; public:; RField(std::string_view name) : RIntegralField<MappedType>(name) {}; ```. Eventually, after implementing the changes, I decided to hold off moving some member functions to the templated `RField` specialization: It didn't work for the `Map[V]` functions because `RColumn::Map[V]` has to be called with the fixed width integer type after mapping. Instead the newly added last commit `reinterpret_cast`s the pointer since we can guarantee that the mapped type has identical storage layout. This solves the problem with `RNTupleView`s, discussed on Mattermost. I still plan to come back to possible deduplications and simplifications in a follow-up PR (now https://github.com/root-project/root/pull/16101).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16039#issuecomment-2247304935:704,error,error,704,https://root.cern,https://github.com/root-project/root/pull/16039#issuecomment-2247304935,1,['error'],['error']
Availability,I opened https://sft.its.cern.ch/jira/browse/ROOT-10955 about the clang-tidy errors. @pcanal @Axel-Naumann this is ready for review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6081#issuecomment-664404795:77,error,errors,77,https://root.cern,https://github.com/root-project/root/pull/6081#issuecomment-664404795,1,['error'],['errors']
Availability,"I personally don't think this should block the 6.32 release: As far as I understand, this has basically always been broken in Cling, and I verified that `constRetrunTest_WILL_FAIL` doesn't pass either on 6.20 using LLVM 5:; ```; 1079: Processing /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C...; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:4: error: expected ';' after expression; 1079: t02 t;; 1079: ^; 1079: ;; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:7:5: error: use of undeclared identifier 't'; 1079: t02 t;; 1079: ^; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:8:15: error: use of undeclared identifier 't'; 1079: TObject o = **t.getVal();; 1079: ^; 1079: /home/jhahnfel/ROOT/v6-20-00-patches/src/roottest/cling/return/run.C:9:24: error: use of undeclared identifier 't'; 1079: TObject * const * op = t.getVal();; 1079: ^; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481#issuecomment-2106833445:399,error,error,399,https://root.cern,https://github.com/root-project/root/issues/15481#issuecomment-2106833445,4,['error'],['error']
Availability,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15743#issuecomment-2154474791:45,failure,failure,45,https://root.cern,https://github.com/root-project/root/pull/15743#issuecomment-2154474791,1,['failure'],['failure']
Availability,I put in a command line argument to parametrize the number of events used for the plot. Now the runtime is down to 5 minutes. ![x](https://user-images.githubusercontent.com/6951222/76297358-f9efc900-62b7-11ea-81b2-f18d536214e2.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5108#issuecomment-596980615:107,down,down,107,https://root.cern,https://github.com/root-project/root/pull/5108#issuecomment-596980615,1,['down'],['down']
Availability,"I re-ran all RDF gtests on the Ubuntu 18.04 machine, and it looks like the failure mode changed and now involves other tests and the `slot` parameter (the one I moved to last position). In fact, it looks like whatever argument I put last is the one that gets a mismatched address.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6231#issuecomment-677776142:75,failure,failure,75,https://root.cern,https://github.com/root-project/root/pull/6231#issuecomment-677776142,1,['failure'],['failure']
Availability,"I re-read the implementation of these functions and I noticed that they call `openROOTFileCompress` which in turn calls into `TFile::SetCompressionSettings` https://github.com/root-project/root/blob/acc96a0132d578519ca1af2ff96dac335e94db0f/main/python/cmdLineUtils.py#L281 . So in practice the already available option `-c` allows to both set the compression algorithm and the compression level via for example `-c 509`. Maybe what we want instead of creating more options is to just better document the existing one? The doc currently says ""changing the compression factor"" but that is not the full story. We could imagine to point at the documentation of the TFile constructor that explains what the integer passed to the `SetCompressionSettings` function means https://root.cern.ch/doc/master/classTFile.html#ad0377adf2f3d88da1a1f77256a140d60 and also at the doc of https://root.cern.ch/doc/master/structROOT_1_1RCompressionSetting.html which further explains the different compression algorithms available. Maybe as a side-note we could merge/align these two docs so one doesn't need to look for things in two places",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14714#issuecomment-1948822319:302,avail,available,302,https://root.cern,https://github.com/root-project/root/pull/14714#issuecomment-1948822319,2,['avail'],['available']
Availability,I re-tested master. What I could see is that the reproducer still fails on linux but works fine on macos. I could also add that on lxplus with a large installation such as CMSSW or a LCG release the error needs several seconds to appear. Adding more eyes to the ticket...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10049#issuecomment-1925596439:199,error,error,199,https://root.cern,https://github.com/root-project/root/issues/10049#issuecomment-1925596439,1,['error'],['error']
Availability,"I realized I could check myself and the problem seems to be still there:; ```; ❯ which root; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev5lhcb/Fri/x86_64-centos7-gcc11-opt/bin/root; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/07 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2022, 02:36:00 |; | From heads/v6-24-00-patches@v6-24-06-110-g788980c |; | With g++ (GCC) 11.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <filesystem>; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev5lhcb/Fri/ROOT/v6-24-00-patches/x86_64-centos7-gcc11-opt/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'; module ""codecvt"" {; ^; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <codecvt>; ^; root [1]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9670#issuecomment-1256195802:809,error,error,809,https://root.cern,https://github.com/root-project/root/issues/9670#issuecomment-1256195802,1,['error'],['error']
Availability,"I realized this was broken when updating the VecCore version to 0.4.1. The new version now downloads Vc and UME::SIMD from LCG packages repository, and uses http instead of https, in order to avoid problems in systems in which curl has no support for https. I also took the oportunity to fix a few warnings due to wrong indentation of the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/598:91,down,downloads,91,https://root.cern,https://github.com/root-project/root/pull/598,1,['down'],['downloads']
Availability,"I rebased this to current master so that tests succeed. The failures were not due to the changes in the PR, but due to that at the time the PR was created master was broken and failing the tests,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159#issuecomment-628486212:60,failure,failures,60,https://root.cern,https://github.com/root-project/root/pull/5159#issuecomment-628486212,1,['failure'],['failures']
Availability,I removed the commit from master and 6-22 to get the latest changes on master until this is resolved; Removing it fixes the runtime failures in 6-22 and master; This is the gdb run; https://github.com/cms-sw/cmsdist/pull/6841#issuecomment-828628200; We built an IB with with ROOT with debug flag before removing the commit; https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_12_0/2021-04-29-2300?selectedArchs=slc7_amd64_gcc900&selectedFlavors=ROOT6_X&selectedStatus=failed; The IB is; CMSSW_12_0_ROOT6_X_2021-04-29-2300,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-830068265:132,failure,failures,132,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-830068265,1,['failure'],['failures']
Availability,"I reported this to mold in https://github.com/rui314/mold/issues/1270 and was able to compile by using a different linker for `libCling.so`. However, many of the tests fail (with segmentation faults) so I think it's best not to allow compiling with mold at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473#issuecomment-2141522291:192,fault,faults,192,https://root.cern,https://github.com/root-project/root/issues/15473#issuecomment-2141522291,1,['fault'],['faults']
Availability,"I resolved the issue described in [this](https://github.com/root-project/root/issues/6748) issue. Instead of throwing an error in . ```; root [0] Ssiz_t n = -5;; root [1] TString *a = new TString(""a"", n);; ```; It now creates an empty String by doing this:; ```; char *data = Init(0, 0);; memcpy(data, """", 0);; return;; ```; Is this correct?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7024:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/7024,1,['error'],['error']
Availability,I restarted the jobs to make sure the failure on Windows was a glitch. A test timedout for a reason which was not clear to me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106#issuecomment-2032409208:38,failure,failure,38,https://root.cern,https://github.com/root-project/root/pull/15106#issuecomment-2032409208,1,['failure'],['failure']
Availability,I rollbacked the modifications for JSROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13226#issuecomment-1631688813:2,rollback,rollbacked,2,https://root.cern,https://github.com/root-project/root/pull/13226#issuecomment-1631688813,1,['rollback'],['rollbacked']
Availability,"I run `fedora37` image on my machine - all webgui tests work properly. From the log output produce by headless chromimum, I see only one additional message on github actions:; ```; [0816/133157.889292:ERROR:headless_command_handler.cc(357)] Abnormal renderer termination.; ```; But why it happens, that is missing - I have no idea. ; Most probably some configuration of host system (from github) affects docker image and makes problem running chromium. I will try to add `--no-sandbox` argument to the headless chrome, maybe it be better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1682166103:201,ERROR,ERROR,201,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1682166103,1,['ERROR'],['ERROR']
Availability,I see also:. ```; Error in <Streamer>: Cannot stream interpreted class.; Error in <TBufferFile::CheckByteCount>: object of class RooDipPdf read too few bytes: 14 instead of 4184; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16419#issuecomment-2353049912:18,Error,Error,18,https://root.cern,https://github.com/root-project/root/issues/16419#issuecomment-2353049912,2,['Error'],['Error']
Availability,"I see https://github.com/root-project/root/pull/11311. Is missing the R__HAS_STD_SPAN, I would say to avoid more improper reporting, it should be made more clear when those header are imported that this is the intended behaviour. I would say you should add a ; ```; #if __cplusplus >= 202002L; ```. inside those code block if they are enabled due to this mismatched compilation version and report the error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595270233:401,error,error,401,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595270233,1,['error'],['error']
Availability,"I see no argument why the cling tests are preexisting? Could someone please verify, eg. using the PR builds testing PR? The failures look suspiciously connected to a change of the build system in how we link llvm into cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4750#issuecomment-577367536:124,failure,failures,124,https://root.cern,https://github.com/root-project/root/pull/4750#issuecomment-577367536,1,['failure'],['failures']
Availability,I see no errors in build logs - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2873#issuecomment-434269928:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/2873#issuecomment-434269928,1,['error'],['errors']
Availability,"I see now that one new restrictions after this change is that you can't do pointer arithmetics without compiler warnings, which cause the tests to fail. I think this could be fixed either by casting the returned address again to `char *` at the caller site, or we add an optional `offset` parameter to `GetObject()` and `GetAddress()` so that the arithmetics can be done internally before casting to `void *`. Furthermore, there are also alternative solutions to making the branch addresses available in PyROOT:; * Extending the API with new methods like `GetObjectAsVoidPtr()` and `GetAddressAsVoidPtr()`; * A Pythonization implemented as a CPython extension, to do the conversion to `void *` at a low level before cppyy converts the `char *` to a string (*not* my preferred solution because we want to move away from requiring a Python extension for PyROOT). What to you prefer, and any other ideas? Also, the results from CMS will be very useful in making a decision :+1: Thanks a lot @smuzaffar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14444#issuecomment-1911735320:491,avail,available,491,https://root.cern,https://github.com/root-project/root/pull/14444#issuecomment-1911735320,1,['avail'],['available']
Availability,"I see some activies about this issue. I compiled ROOT from scratch with AppleClang15 on my Macbook Pro M1 Max (2022) and I see this very same error message. Any quick fix or plan to solve this ?; ```; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1931298699:142,error,error,142,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1931298699,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5361:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/5361,1,['failure'],['failures']
Availability,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor...; Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3922#issuecomment-500533392:79,fault,fault,79,https://root.cern,https://github.com/root-project/root/pull/3922#issuecomment-500533392,1,['fault'],['fault']
Availability,I see that the ubuntu2004 build works fine without the PCH dependency. ; See output [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165830/consoleFull). There is then something strange on that old platform. Let's disable tmva-sofie there and we ignore this error. ; Please @amadio go ahead merging these changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1404267114:289,error,error,289,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1404267114,1,['error'],['error']
Availability,"I see that this is a bug leading unwanted behaviour for TTree itself. However, I *think* we should be able to apply a fix from the RDF side.; * The TTreeProcessorMT, and hence for RDF with EnableImplicitMT solution is very clear: in fact when we have friends, we will be creating the clusters globally, and hence we will be calling `GetFriendEntries` defined in TTreeProcessorMT.cxx. We can error out whenever there is a friend with less entries than the main chain. Clearly, the check would not require opening extra files. Additional benefit ==> this is checked before the event loop.; * For single threaded cases, it is not so obvious, but there are 2 steps that could be done:; 	* Teach the RLoopManager to always understand the fFriendInfo (which was introduced by the RDatasetSpec) from InteralTreeUtils.; 	* Once that is done, GetEntries(friend_chain_name) after the event loop ==> user pays the cost of (maybe erroring for) short friends in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9137#issuecomment-1173061495:391,error,error,391,https://root.cern,https://github.com/root-project/root/issues/9137#issuecomment-1173061495,2,['error'],"['error', 'erroring']"
Availability,I see the command `qhelpgenerator` needs to be installed. I do not have Qt (and do not want it) on my machine. Can `qhelpgenerator` be installed without the full Qt (which requires a licence if I remember well) ? here https://www.qt.io/download a free trial is available ... but we cannot rely on free trial.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901770716:236,down,download,236,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901770716,2,"['avail', 'down']","['available', 'download']"
Availability,"I see the error has something to so with CodeGenFunction::EmitAtomicUpdate and other similar classes not being undefinded, however the header file (CodeGenFunction.h) is included so I don't know whats happening",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487#issuecomment-864416891:10,error,error,10,https://root.cern,https://github.com/root-project/root/issues/8487#issuecomment-864416891,1,['error'],['error']
Availability,"I see the error with the 6.23 also:; ```; root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string; Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string; ```; and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6851#issuecomment-778093008:10,error,error,10,https://root.cern,https://github.com/root-project/root/issues/6851#issuecomment-778093008,5,"['Error', 'error']","['Error', 'error']"
Availability,"I see the problem also on Mac with interactive ROOT. ; ```; root [0] TCanvas* C= new TCanvas(""canvas"",""canvas"",-4,-28);. 2020-09-22 11:25:25.425 root.exe[23095:6904258] QuartzPixmap: -resizeW:H:, CGBitmapContextCreateWithData failed; Error in <TGQuartz::SetDoubleBufferON>: QuartzPixmap initialization failed; Warning in <TCanvas::ResizePad>: canvas height changed from 32000 to 10. 2020-09-22 11:25:25.742 root.exe[23095:6904258] *** Assertion failure in -[_NSCGSWindow setFrame:], /AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppKit/AppKit-1894.60.100/CGS.subproj/NSCGSWindow.m:1010; 2020-09-22 11:25:25.744 root.exe[23095:6904258] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Invalid parameter not satisfying: CGRectContainsRect(CGRectMake((CGFloat)INT_MIN, (CGFloat)INT_MIN, (CGFloat)INT_MAX - (CGFloat)INT_MIN, (CGFloat)INT_MAX - (CGFloat)INT_MIN), frame)'; *** First throw call stack:; (; 	0 CoreFoundation 0x00007fff36641b57 __exceptionPreprocess + 250; 	1 libobjc.A.dylib 0x00007fff6f4885bf objc_exception_throw + 48; 	2 CoreFoundation 0x00007fff3666ad08 +[NSException raise:format:arguments:] + 88; 	3 Foundation 0x00007fff38d5ce9d -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 191; 	4 AppKit 0x00007fff33988b55 -[_NSCGSWindow setFrame:] + 428; 	5 AppKit 0x00007fff33987add _NSCreateWindowWithOpaqueShape2 + 241; 	6 AppKit 0x00007fff33986920 -[NSWindow _commonAwake] + 1121; 	7 AppKit 0x00007fff339864bb NSWindowWakeDeferredIfNeeded + 94; 	8 AppKit 0x00007fff3398637d -[NSWindow(NSFullScreen) _resolveAutomaticEnterFullScreenFlags] + 22; 	9 AppKit 0x00007fff33986333 -[NSWindow makeKeyAndOrderFront:] + 27; 	10 libGCocoa.so 0x000000011a10369b -[QuartzWindow makeKeyAndOrderFront:] + 75; 	11 libGCocoa.so 0x000000011a1042dd -[QuartzWindow mapRaised] + 77; 	12 libGCocoa.so 0x000000011a10bf44 _ZN7TGCocoa9MapRaisedEm + 196; 	13 libGui.so 0x000000011a196fee _ZN7TGFrame9MapRaisedEv + 14; 	14 libG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6379#issuecomment-696609471:234,Error,Error,234,https://root.cern,https://github.com/root-project/root/issues/6379#issuecomment-696609471,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"I see these build failures on `alma9`:; ```; Scanning dependencies of target G__TMVAUtils; Consolidate compiler generated dependencies of target G__TMVAUtils; [ 98%] Building CXX object tmva/tmva/CMakeFiles/G__TMVAUtils.dir/G__TMVAUtils.cxx.o; [ 98%] Linking CXX executable TestRModelParserPyTorch; /usr/bin/ld: cannot find -lblas; ```; But these problems are not related to this PR, which only changes the `requirements.txt`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15275#issuecomment-2066606878:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/15275#issuecomment-2066606878,1,['failure'],['failures']
Availability,"I see you have changed a lot `listlibs.sh`.; The old one was: ; ```; #!/bin/sh. # Finding the system we are running. export DOXYGEN_LDD=""ldd"". OS=`uname`. case ""$OS"" in; ""Linux"") export DOXYGEN_LDD=""ldd""; ;;; ""Darwin"")export DOXYGEN_LDD=""otool -L""; ;;; esac. # Transform collaboration diagram into list of libraries. echo '#!/bin/sh' > listofclass.sh; echo '' >> listofclass.sh; grep -s ""Collaboration diagram for"" $DOXYGEN_OUTPUT_DIRECTORY/html/class*.html | sed -e ""s/.html:.*$//"" | sed -e ""s/^.*html\/class/\.\/makelibs.sh /"" >> listofclass.sh. chmod +x ./listofclass.sh; ./listofclass.sh; ```. The new one is:. ```; #!/bin/sh. # Finding the system we are running. export DOXYGEN_LDD=""ldd"". OS=`uname`. case ""$OS"" in; ""Linux"") export DOXYGEN_LDD=""ldd""; ;;; ""Darwin"")export DOXYGEN_LDD=""otool -L""; ;;; esac. # Transform collaboration diagram into list of libraries. #https://stackoverflow.com/questions/2425870/multithreading-in-bash; grep -s ""Collaboration diagram for"" $DOXYGEN_OUTPUT_DIRECTORY/html/class*.html | sed -e ""s/.html:.*$//"" | sed -e ""s/^.*html\/class//"" | xargs -P $NTHREADS -n 1 ./makelibs.sh. ```; I am not sure to understand how the new way does the same as the old one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1080674078:317,echo,echo,317,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1080674078,2,['echo'],['echo']
Availability,"I see your point, but we have to be careful in case the function has a singularity at the edge. ; Here is a problematic example which does not work correctly now:; ```; auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); ; f1->Draw(); // works fine (values are computed at bin centres); TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used ; f2->Draw();; Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects.; Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000); ```; This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13949#issuecomment-1782498277:556,Error,Error,556,https://root.cern,https://github.com/root-project/root/pull/13949#issuecomment-1782498277,1,['Error'],['Error']
Availability,"I see. Then this can boil down to a request of either:; * Support http redirections in TWebFile; * Add an error mechanism in TWebFile when there is an unsupported http redirection, saying something like ""TWebFile does not support http redirection, please make sure you have installed ROOT with DAVIX enabled. I'm not sure of the implications of either option, I'm not expert in this area but I remember something about DAVIX not being supported on some platforms ? Sorry if I'm adding confusion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890#issuecomment-911414265:26,down,down,26,https://root.cern,https://github.com/root-project/root/issues/8890#issuecomment-911414265,2,"['down', 'error']","['down', 'error']"
Availability,"I started looking, but the first thing I noticed is that allocating weak_ptrs on heap, and making somebody responsible for deleting them seems to defy the point. Maybe I didn't get the logic yet, but wouldn't something like this be easier?; - Somebody needs code jitted. Makes a shared_ptr to it and holds it.; - Jitter gets a weak_ptr observing the shared_ptr.; - Common code is shared using shared_ptr.; - When jitter starts, it tries to lock weak_ptr.; - Success: Jit the code; - Failure: Throw away weak_ptr - nobody seems to need the code. Can give it a second try to understand the code if that model doesn't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488#issuecomment-621240146:483,Failure,Failure,483,https://root.cern,https://github.com/root-project/root/pull/5488#issuecomment-621240146,1,['Failure'],['Failure']
Availability,"I still get an error:; ```; /Users/couet/git/zevis/ZevLib/src/ZCanvas.cxx:361:17: error: member access into incomplete type 'TCanvasImp'; fCanvasImp->GetWindowGeometry(fWindowTopX, fWindowTopY,; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693357268:15,error,error,15,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693357268,2,['error'],['error']
Availability,"I still get exactly the error described in the summary with `master`:; ```; ----------------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 05 2024, 07:24:23 |; | From heads/ntuple-RPageNullSink@v6-31-01-913-gfdecca9b4d |; | With clang version 16.0.6 (Red Hat 16.0.6-2.module_el8.9.0+3621+df7f7146) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ----------------------------------------------------------------------------. root [0] .rawInput; Using raw input; root [1] std::vector<short> getV() { return {42}; }; root [2] .rawInput; Not using raw input; root [3] getV()[0].foo(); ROOT_prompt_3:1:10: error: member reference base type 'value_type' (aka 'short') is not a structure or union; getV()[0].foo(); ~~~~~~~~~^~~~; root [4] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970#issuecomment-1926373568:24,error,error,24,https://root.cern,https://github.com/root-project/root/issues/7970#issuecomment-1926373568,2,['error'],['error']
Availability,"I still had one trick up my sleeve: I dumped the generated IR from the ""bad"" and the ""good"" compiler to see which part of the code is actually modified. This turns out to be `RooAddPdf::checkObservables`:; https://github.com/root-project/root/blob/e8ba1328693f89af8299904ce3db7bdc8f57c535/roofit/roofitcore/src/RooAddPdf.cxx#L825-L840; where Clang now optimizes the inlined `RooArgList::at`:; https://github.com/root-project/root/blob/e8ba1328693f89af8299904ce3db7bdc8f57c535/roofit/roofitcore/inc/RooArgList.h#L109-L116; and removes the `return nullptr` in case of range errors. The reasoning is that `RooAddPdf::checkObservables` calls a member function on `pdf`, so it being `nullptr` is UB and can be optimized out, and dereferences `coef`, which is also UB on a `nullptr` (although it works because `RooAbsArg::observableOverlaps` takes a reference, ie no pointer dereference actually takes place). If I remove the `return nullptr` statically in the code like; ```diff; diff --git a/roofit/roofitcore/inc/RooArgList.h b/roofit/roofitcore/inc/RooArgList.h; index c5a49bd1b6..bb4afbd12d 100644; --- a/roofit/roofitcore/inc/RooArgList.h; +++ b/roofit/roofitcore/inc/RooArgList.h; @@ -109,9 +109,6 @@ public:; /// Return object at given index, or nullptr if index is out of range; inline RooAbsArg* at(Int_t idx) const {. - if (idx >= static_cast<Int_t>(_list.size())); - return nullptr;; -; return _list[idx];; }. ```; I see the same crash happening with GCC. What I see with a debugger is that `_pdfList` has size 2 while `_coefList` has size 1, so the second iteration of the loop passes `nullptr` for `coef`. This is ""filtered out"" later in `RooAbsArg::dependsOn` where `ignoreArg` is also `nullptr` and things magically work. So, @guitargeek, there are a number of possibilities:; 1. Modify the loop to only run until `std::min(_pdfList.size(), _coefList.size()`.; 2. Add explicit `nullptr` checks for `pdf` and `coef` before calling `observableOverlaps` so the compiler cannot optimize them out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011927535:572,error,errors,572,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011927535,1,['error'],['errors']
Availability,"I still have the old doxygen on that machine and when I run it on `root-docu` I get:; ```; Running qhelpgenerator...; Error in line 1: Opening and ending tag mismatch.; error: failed to run qhelpgenerator on index.qhp; lookup cache used 11757/1048576 hits=120921 misses=12617; finished...; ```; So, yes, something has changed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1046576313:118,Error,Error,118,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1046576313,2,"['Error', 'error']","['Error', 'error']"
Availability,I submit PR #5812 fixing compilation error with `cxxmodules` in mathtext. ; But main problem is clang - many errors appears there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5791#issuecomment-640245919:37,error,error,37,https://root.cern,https://github.com/root-project/root/pull/5791#issuecomment-640245919,2,['error'],"['error', 'errors']"
Availability,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6770#issuecomment-809146755:17,ping,pinging,17,https://root.cern,https://github.com/root-project/root/pull/6770#issuecomment-809146755,2,['ping'],"['ping', 'pinging']"
Availability,"I suspect that instead we should still rely on detecting the availability of TBB *but* disable this feature on Windows, at least for now. (I.e. the condition is ""has a TBB and not on Windows"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7260#issuecomment-799829127:61,avail,availability,61,https://root.cern,https://github.com/root-project/root/pull/7260#issuecomment-799829127,1,['avail'],['availability']
Availability,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14146:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/14146,6,"['Error', 'error']","['Error', 'error']"
Availability,"I take this failure very seriously and I am thankful that @egpbos went through the hurdle of reporting. ; In the last several weeks, I did not see this issue in any of the nightlies though. What could be a good process to decide when to close this issue if the failure is not seen any more for a certain time interval?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15494#issuecomment-2143499084:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/issues/15494#issuecomment-2143499084,2,['failure'],['failure']
Availability,"I tested a bit on my end, I guess the `llvm::StringRef` conversion errors are the following:; ```; /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx: In function ‘std::__cxx11::string GetSharedLibImmediateDepsSlow(std::__cxx11::string, cling::Interpreter*, bool)’:; /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:7119:25: error: ambiguous overload for ‘operator==’ (operand types are ‘llvm::StringRef’ and ‘const char [20]’); if (SymName == ""_Jv_RegisterClasses"" ||; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/jhahnfel/ROOT/llvm13/src/core/base/inc/TNamed.h:26,; from /home/jhahnfel/ROOT/llvm13/src/core/meta/inc/TDictionary.h:44,; from /home/jhahnfel/ROOT/llvm13/src/core/meta/inc/TDataType.h:25,; from /home/jhahnfel/ROOT/llvm13/src/core/meta/inc/TInterpreter.h:25,; from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.h:27,; from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:20:; /home/jhahnfel/ROOT/llvm13/src/core/base/inc/TString.h:844:15: note: candidate: ‘Bool_t operator==(const string_view&, const char*)’; inline Bool_t operator==(const std::string_view &s1, const char *s2); ^~~~~~~~; In file included from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/Basic/DiagnosticIDs.h:19,; from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:17,; from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/AST/NestedNameSpecifier.h:18,; from /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/tools/clang/include/clang/AST/Type.h:21,; from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingDeclInfo.h:20,; from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingClassInfo.h:28,; from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingBaseClassInfo.h:29,; from /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:24:; /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ADT/StringRef.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1088491041:67,error,errors,67,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1088491041,2,['error'],"['error', 'errors']"
Availability,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1006504826:338,failure,failure,338,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826,1,['failure'],['failure']
Availability,"I tested with `/cvmfs/sft.cern.ch/lcg/views/dev3python2/Tue/x86_64-centos7-gcc8-opt/`, from May 4th (8 days ago), and I already see the error. But I can't see anything recent before May 4th:. https://github.com/root-project/root/commits/master/bindings/pyroot. that has been committed to PyROOT and could cause this. I'll check with the librarians about the LCG stack.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-839757751:136,error,error,136,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-839757751,1,['error'],['error']
Availability,"I think @pcanal is after:. > Things did not work. What are ""things"", what does this fix? Was there an error before? etc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12292#issuecomment-1427678584:102,error,error,102,https://root.cern,https://github.com/root-project/root/pull/12292#issuecomment-1427678584,1,['error'],['error']
Availability,I think I added a fix in the build that you used and it might work around this issue. The warning is gone. Can you check if that fixes the issue? I don't think my fix is reliable in the general case but might be good enough...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11329#issuecomment-1245991232:170,reliab,reliable,170,https://root.cern,https://github.com/root-project/root/issues/11329#issuecomment-1245991232,1,['reliab'],['reliable']
Availability,"I think I can follow. That would mean that we accept the cost of allocating strings (stack frame, error message) in the RStatus class in case of errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564991984:98,error,error,98,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564991984,2,['error'],"['error', 'errors']"
Availability,"I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/248:59,redundant,redundant,59,https://root.cern,https://github.com/root-project/root/pull/248,1,['redundant'],['redundant']
Availability,I think at that point I will need to reproduce that failure locally to be able to understand it. Does that happen with just 'bare root' if so how should I configure it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377993781:52,failure,failure,52,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377993781,1,['failure'],['failure']
Availability,"I think gcc does the same, I see this when debugging heavily templated code -- sometimes (rarely) `int` appears in error messages in place of a type that could not be determined.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8470#issuecomment-866620948:115,error,error,115,https://root.cern,https://github.com/root-project/root/issues/8470#issuecomment-866620948,1,['error'],['error']
Availability,"I think it is still valid:; ![image](https://user-images.githubusercontent.com/16205615/107752453-0af25700-6d1f-11eb-8cc5-3bd0615e21df.png); ![image](https://user-images.githubusercontent.com/16205615/107752481-16458280-6d1f-11eb-99c4-c934f04ebe90.png). and so on. Also, if I remember correctly, the notebook generation ran in 1h instead of 6h or so, so maybe that's a nice improvement for the nightly documentation jobs. There were a few notebook failures even with those fixes IIRC, but it should be less than right now. Should I rebase the branch for you?. @Axel-Naumann ; @couet",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5913#issuecomment-778090112:448,failure,failures,448,https://root.cern,https://github.com/root-project/root/pull/5913#issuecomment-778090112,1,['failure'],['failures']
Availability,I think it would fix the error reported here https://github.com/root-project/root/pull/11571#issuecomment-1280484047,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11582#issuecomment-1280860823:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/11582#issuecomment-1280860823,1,['error'],['error']
Availability,"I think it's the right way to go, maybe the ttree datasource could be further specialized to distinguish between TTree and TChain.; But, a more notable absence in this logic is horizontal extensions to the dataset, e.g. friends in the case of TTree. So if we imagine this function to be just ""giving an hint about the type of container for the dataset of this RDataFrame"", then it's already good as it is imho. If we want something more detailed, like ""this dataframe will run its computations on a dataset named XXX, stored in a container of type YYY placed at ZZZ"", then we're looking for more. For a ttree without friends, this would translate to. * XXX = name of the tree; * YYY = ROOT file / TFile; * ZZZ = path to the ROOT file. And for a csv table it would be; * XXX = None; * YYY = CSV file; * ZZZ = path to the csv file. If the dataset is horizontally extended through e.g. friends, then the information above is not sufficient to identify the full dataset RDataFrame will run its computations on. For a ttree, we would also need to print out XXX,YYY,ZZZ for any friend of the tree. So what I'm saying is that we either give *very high level* info about data (which I would prefer), or we have to go really deep down to be consistent with any datasource type",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7828#issuecomment-817820448:1221,down,down,1221,https://root.cern,https://github.com/root-project/root/issues/7828#issuecomment-817820448,1,['down'],['down']
Availability,"I think the cause is https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L404 (and similar lines further down), that hard-code the enum underlying type to int. When fixing, I think we need to take care of what happens to files already written out with the wrong enum width.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2319147687:136,down,down,136,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2319147687,1,['down'],['down']
Availability,I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1342757216:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1342757216,1,['error'],['error']
Availability,I think the failure is due to a timeout?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3432#issuecomment-463938283:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/3432#issuecomment-463938283,1,['failure'],['failure']
Availability,I think the failures are unrelated... :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3826#issuecomment-493380872:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/3826#issuecomment-493380872,1,['failure'],['failures']
Availability,"I think the fixed state should behave like this:. ```shell; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); root [2]; ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1833763971:154,error,error,154,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1833763971,2,['error'],['error']
Availability,"I think the problem is that the gcc 11 implementation of std::tuple uses; no_unique_address if it's available, but it spells it ; ```; __no_unique_address__; ```; ,; which cling doesn't recognize. I just ran into this building ATLAS code with gcc 11 / root 6.24. This patch seems to help things for me. ```; diff --git a/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td b/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td; index d39b16e62b..bf7f6a922c 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td; +++ b/interpreter/llvm/src/tools/clang/include/clang/Basic/Attr.td; @@ -1423,7 +1423,8 @@ def NeonVectorType : TypeAttr {; }; ; def NoUniqueAddress : InheritableAttr, TargetSpecificAttr<TargetItaniumCXXABI> {; - let Spellings = [CXX11<"""", ""no_unique_address"", 201803>];; + let Spellings = [CXX11<"""", ""no_unique_address"", 201803>,; + CXX11<"""", ""__no_unique_address__"", 201803>];; let Subjects = SubjectList<[NonBitField], ErrorDiag>;; let Documentation = [NoUniqueAddressDocs];; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8071#issuecomment-835612564:100,avail,available,100,https://root.cern,https://github.com/root-project/root/issues/8071#issuecomment-835612564,2,"['Error', 'avail']","['ErrorDiag', 'available']"
Availability,"I think the problem might actually be due to the `char *mbuf` that comes before. That looks like it's treated as `int` by Fortran too, no? The type that is mismatched is the type of the function, if I understood the error correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657#issuecomment-1303095777:216,error,error,216,https://root.cern,https://github.com/root-project/root/issues/11657#issuecomment-1303095777,1,['error'],['error']
Availability,I think the test failure is a bug that was already there and was made noisy by these changes. #5489 fixes that bug and when merged it should make this PR green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5340#issuecomment-621113463:17,failure,failure,17,https://root.cern,https://github.com/root-project/root/pull/5340#issuecomment-621113463,1,['failure'],['failure']
Availability,"I think the underlying cause of the bug in the description is an ambiguity in the meaning/semantics of `TEntryList::Add`. Here we would like to ""add sub-entrylists"", but what happens is that we are _merging_ `elist1` and `elist2` into `elists`, and since they all refer to the same tree and file this produces a flat `TEntryList` with the union of the entries and not a parent TEntryList with two sub-entrylists. It doesn't resolve the ambiguity but TChain should probably warn (if not error out) if a flat TEntryList is passed to it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8505#issuecomment-865894581:486,error,error,486,https://root.cern,https://github.com/root-project/root/issues/8505#issuecomment-865894581,1,['error'],['error']
Availability,I think the underlying problem is that `SetEntriesRange` does not have enough input validation. We could (and should) error out at the point `SetEntriesRange` is called if `start > nEntries`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10774#issuecomment-1157948335:118,error,error,118,https://root.cern,https://github.com/root-project/root/issues/10774#issuecomment-1157948335,1,['error'],['error']
Availability,"I think there is an error in the building job now due to this change, see: https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/3248/console",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14883#issuecomment-1989167663:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/14883#issuecomment-1989167663,1,['error'],['error']
Availability,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert).; * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-589272246:254,failure,failure,254,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-589272246,2,"['failure', 'recover']","['failure', 'recover']"
Availability,"I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654852920:31,failure,failures,31,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654852920,1,['failure'],['failures']
Availability,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7646:420,mask,masks,420,https://root.cern,https://github.com/root-project/root/issues/7646,1,['mask'],['masks']
Availability,"I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202:122,recover,recovered,122,https://root.cern,https://github.com/root-project/root/pull/3202,1,['recover'],['recovered']
Availability,"I think this PR is not needed, with #7017. I have tested and I did not get any error. Only this message when starting root:; ```; Module cuda not found.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6999#issuecomment-758479941:79,error,error,79,https://root.cern,https://github.com/root-project/root/pull/6999#issuecomment-758479941,1,['error'],['error']
Availability,"I think this is because array_ref has both operators - conversion to pointer, as well as array indexing, which is making ambiguity.; I think we can safely remove the operator[]; that should fix it. ; Found a similar Stackoverflow question: https://stackoverflow.com/questions/49607565/error-use-of-overloaded-operator-is-ambiguous-while-building-for-i386",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14165#issuecomment-1925310155:285,error,error-use-of-overloaded-operator-is-ambiguous-while-building-for-,285,https://root.cern,https://github.com/root-project/root/pull/14165#issuecomment-1925310155,1,['error'],['error-use-of-overloaded-operator-is-ambiguous-while-building-for-']
Availability,"I think this is ready for review. My intent is to fix the segfault and provide scaffolding for RNTuple merges in this PR and follow up with the actual implementation PRs. . @pcanal are you comfortable with the error message printed on an attempted merge for non-inheriting objects? . ```text; hadd Target file: ../merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: ../merged.root:/; Fatal in <TFileMerger::MergeRecursive>: Merging objects that don't inherit from TObject is unimplemented (key: ntuple in file ntuple2.root); aborting; grep: warning: GREP_OPTIONS is deprecated; please use an alias or script; #0 0x00007f2dfd7ec07a in __GI___waitpid (pid=20605, stat_loc=stat_loc; entry=0x7fffc72e6c90, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f2dfd764fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f2dfe92beb6 in TUnixSystem::StackTrace() () from /home/max/projects/root/new-errors/lib/libCore.so; #3 0x00007f2dfe7fe1aa in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/max/projects/root/new-errors/lib/libCore.so; #4 0x00007f2dfe8b9be8 in ErrorHandler () from /home/max/projects/root/new-errors/lib/libCore.so; #5 0x00007f2dfe810e29 in TObject::Fatal(char const*, char const*, ...) const () from /home/max/projects/root/new-errors/lib/libCore.so; #6 0x00007f2dfeed49e3 in TFileMerger::MergeRecursive(TDirectory*, TList*, int) () from /home/max/projects/root/new-errors/lib/libRIO.so; #7 0x00007f2dfeed2e41 in TFileMerger::PartialMerge(int) () from /home/max/projects/root/new-errors/lib/libRIO.so; #8 0x0000000000406c8d in main::{lambda(TFileMerger&, int, int)#2}::operator()(TFileMerger&, int, int) const [clone .constprop.0] (); #9 0x0000000000404ccd in main (); #10 0x00007f2dfd740830 in __libc_start_main (main=0x403f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008#issuecomment-662581836:210,error,error,210,https://root.cern,https://github.com/root-project/root/pull/6008#issuecomment-662581836,1,['error'],['error']
Availability,"I think this looks mostly good, the failures on `ROOT-debian10-i386` are timeouts (even though it's suspicious that the same tests timed out as the last time)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13123#issuecomment-1618051055:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/13123#issuecomment-1618051055,1,['failure'],['failures']
Availability,I think those failures are unrelated to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/584#issuecomment-302628925:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/584#issuecomment-302628925,1,['failure'],['failures']
Availability,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15708#issuecomment-2143578713:12,redundant,redundant,12,https://root.cern,https://github.com/root-project/root/pull/15708#issuecomment-2143578713,1,['redundant'],['redundant']
Availability,"I think we need to discuss:. - what the effect of a LinkDef entry of an enum is today, and what it is supposed to be; - whether we should warn / error out for LinkDef entries for non-existing enums; - whether LinkDef entries through typedef should work, in general. Maybe we use today's IO meeting for that, but it'd be good to have some of the answers ready by that time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13238#issuecomment-1645247274:145,error,error,145,https://root.cern,https://github.com/root-project/root/pull/13238#issuecomment-1645247274,1,['error'],['error']
Availability,I think we should consider making the LLVMSupport library (which provides SmallVector & co) available in core and thus to the rest of ROOT. cc: @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-807367922:92,avail,available,92,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-807367922,1,['avail'],['available']
Availability,"I think we want in general a function that makes a module with submodules available. We also could/should use that in `RegisterModule` to not invoke the parser there (which probably fixes some other problems too, thanks to @Axel-Naumann for this idea).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1350#issuecomment-345959895:74,avail,available,74,https://root.cern,https://github.com/root-project/root/pull/1350#issuecomment-345959895,1,['avail'],['available']
Availability,I think we'll just revisit this as part of the ongoing inclusion of new distro versions; reviewing the available set of external packages is just part of that. Let's close this instead!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430#issuecomment-998702619:103,avail,available,103,https://root.cern,https://github.com/root-project/root/issues/9430#issuecomment-998702619,1,['avail'],['available']
Availability,"I think what you are seeing is #7547, which is very real and it will be soon fixed by #7550 .; That problem does not have to do with multiple simultaneous Snapshots however. I will ping you here when we have nightly builds with #7547 fixed so you can check whether you still see problems with simultaneous Snapshots, is that ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7500#issuecomment-800401250:181,ping,ping,181,https://root.cern,https://github.com/root-project/root/issues/7500#issuecomment-800401250,1,['ping'],['ping']
Availability,"I think what's left is just to squash all later fixes (except maybe 4c0fb33) into 8f6e55d. EDIT: and fix the compilation error due to `string_view`, of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2259#issuecomment-402691240:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/2259#issuecomment-402691240,1,['error'],['error']
Availability,I think you can easily reproduce my error by keeping the build directory present but making it inaccessible by permissions.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-1010101013:36,error,error,36,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-1010101013,1,['error'],['error']
Availability,"I thinking more of the potential future where we have to replace TBB (for whatever reasons, eg not being available on a new platforms or being not longer developed). In addition I would be interested to see the optimized performance number vs TBB :). So please yes :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-800534814:105,avail,available,105,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-800534814,1,['avail'],['available']
Availability,"I thought (in theory) using fixed width integer would be more reliable because 8 bits are 8 bits for i386, x86-64, ARM, and so on (Ok, assuming we have the same definition of ""bit"" for all of the platforms). > The branch created from a leaflist (your case) do not support schema evolution. To make matter worse the C/C++ typedef (int8_t for example) appeared slightly differently to CINT that they appear to Cling.; > ; > Even the trivial part of the schema evolution that you would need here (maybe), i.e. allow to read 'char' from either 'signed char' or 'unsigned char' depending on the platform or compiler setting (deciding the signness of char) is not implement.; > (technically the typeinfo for 'char', 'signed char' and 'unsigned char' are different).; > ; > So for better or worse you need to use:; > ; > ```; > char i;; > TFile f (file_name.c_str ());; > TTree *t = (TTree*)f.Get (""tree"");; > t->SetBranchAddress (""i"", &i);; > ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7565#issuecomment-801737090:62,reliab,reliable,62,https://root.cern,https://github.com/root-project/root/issues/7565#issuecomment-801737090,1,['reliab'],['reliable']
Availability,"I thought that was mentioning this build. In any case, the failures above are definitely not caused by this PR, so let's wait until we know the PRs are working again before moving on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-319061990:59,failure,failures,59,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-319061990,1,['failure'],['failures']
Availability,"I tried doing that, those errors still exist. Full error log [here](https://pastebin.com/Z4vCkbQT). It is exactly the same as previous",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5294#issuecomment-609628645:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/5294#issuecomment-609628645,2,['error'],"['error', 'errors']"
Availability,I tried the `RequireVariationsHaveConsistentTypeJitted` test locally. The first case (with `ss`) did not throw any errors. And the second instance `ss2` gave me a seg fault already in `VariationsFor(s2)`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9931#issuecomment-1044688426:115,error,errors,115,https://root.cern,https://github.com/root-project/root/pull/9931#issuecomment-1044688426,2,"['error', 'fault']","['errors', 'fault']"
Availability,"I tried this clang-tidy configuration on the RDF code. Compared to the default configuration, which gives me almost zero errors, this conf produces 21k lines of errors. There are a lot of errors that come from expanded gtest macros:. ```; /home/blue/ROOT/master/tree/dataframe/test/dataframe_helpers.cxx:409:1: error: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory,-warnings-as-errors]; TEST(RunGraphs, EmptyListOfHandles); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2338:42: note: expanded from macro 'TEST'; #define TEST(test_suite_name, test_name) GTEST_TEST(test_suite_name, test_name); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2332:3: note: expanded from macro 'GTEST_TEST'; GTEST_TEST_(test_suite_name, test_name, ::testing::Test, \; ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/internal/gtest-internal.h:1376:11: note: expanded from macro 'GTEST_TEST_'; new ::testing::internal::TestFactoryImpl<GTEST_TEST_CLASS_NAME_( \; ^; /home/blue/ROOT/master/tree/dataframe/test/dataframe_helpers.cxx:409:1: error: class 'RunGraphs_EmptyListOfHandles_Test' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,-warnings-as-errors]; TEST(RunGraphs, EmptyListOfHandles); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2338:42: note: expanded from macro 'TEST'; #define TEST(test_suite_name, test_name) GTEST_TEST(test_suite_name, test_name); ^; /home/blue/ROOT/master/_build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:2332:3: note: expanded from macro 'GTEST_TEST'; GTEST_TEST_(test_suite_name, test_name, ::testing::Test, \; ^; /home/blue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8773#issuecomment-889998560:121,error,errors,121,https://root.cern,https://github.com/root-project/root/pull/8773#issuecomment-889998560,5,['error'],"['error', 'errors']"
Availability,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8895:117,failure,failure,117,https://root.cern,https://github.com/root-project/root/issues/8895,2,['failure'],['failure']
Availability,"I tried to run Valgrind, but it only spots one small leak, despite the segfault. But that made me look a bit better at the stack trace and I noticed the line; ```; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 ""ROOT_prompt_0""n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; ```. I also tried to put the line `#include <LoKi/ParticleCuts.h>` into a small file `test.C` and invoke `root test.C`... no segfault, but an error from cling that complains about redefinition of symbols. Tomorrow I'll investigate this new path, as it might be that the segfault is a red herring (hiding the actual problem in my code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2158695299:673,error,error,673,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2158695299,1,['error'],['error']
Availability,I tried to run cmake /home/physics/starlight it gives the same error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11626#issuecomment-1288566945:63,error,error,63,https://root.cern,https://github.com/root-project/root/issues/11626#issuecomment-1288566945,1,['error'],['error']
Availability,I tried wich `zsh` . I still get the error with `glxgears`...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13016#issuecomment-1598347232:37,error,error,37,https://root.cern,https://github.com/root-project/root/issues/13016#issuecomment-1598347232,1,['error'],['error']
Availability,I trimmed it down to just a few extras and pushed. This has been tested on master and will fail on 6.12 due to unrelated problems in any case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1368#issuecomment-347142716:13,down,down,13,https://root.cern,https://github.com/root-project/root/pull/1368#issuecomment-347142716,1,['down'],['down']
Availability,I updated to cb83cb062ff061d3f34df608daa274b4197f2c06 and it now fails with:. ```; /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/gui/browsable/src/TLeafDraw7Provider.cxx:11:10: fatal error: 'ROOT/RCanvas.hxx' file not found; 11 | #include <ROOT/RCanvas.hxx>; | ^~~~~~~~~~~~~~~~~~; ```. is it mandatory to enable ROOT7 features?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449#issuecomment-2355946680:185,error,error,185,https://root.cern,https://github.com/root-project/root/issues/16449#issuecomment-2355946680,1,['error'],['error']
Availability,"I use it within a makefile (you can also find it in the test_v6.tar.gz archive included above):. ```; CytStatInfo_dict.C:	CytStatInfo.cpp CytStatInfo.hxx; 			@echo ""Generating Dictionary...""; 			@rm -f CytStatInfo_dict*; 			@rootcint CytStatInfo_dict.C -c -I$(CYTCOMMON_PATH) CytStatInfo.cpp CytStatInfo.hxx ; ```; The pragma statement I added to CytStatInfo.cpp, at the beginning;. ```; // this seems to be necessary for running in root6; #pragma link C++ class CytStatInfo+;. #include <CytStatInfo/CytStatInfo.hxx>. ClassImp( CytStatInfo );; ```; I don't have a specific ""linkdef"" file (I wrote this code long, long time ago, so some of the details of why not escape me at the moment), What would you recommend?. Thanks very much for your help and insights!. Emanuel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1535540536:159,echo,echo,159,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1535540536,1,['echo'],['echo']
Availability,"I used ""xtrace"", and I got messages printed when I use kAnyModifier, but none without it. ```; _root [1] 000:<:0549: 12: Request(102): ChangeKeyboardControl values={auto-repeat-mode=On(0x01)}; 000:>:0549: Event KeyPress(2) keycode=0x36 time=0x174cf013 root=0x00000185 event=0x07e000e7 child=None(0x00000000) root-x=939 root-y=542 event-x=54 event-y=38 state=Control,Mod2 same-screen=true(0x01); CTRL+C key pressed!; 0x7ffdd1322ea0 0 20; 000:>:0549: Event KeyRelease(3) keycode=0x36 time=0x174cf0b3 root=0x00000185 event=0x07e000e7 child=None(0x00000000) root-x=939 root-y=542 event-x=54 event-y=38 state=Control,Mod2 same-screen=true(0x01); 0x7ffdd1322ea0 1 20_; ```. Now to the funny part. I added the following to the mask:; `kKeyShiftMask | kKeyLockMask | kKeyControlMask | kKeyMod1Mask | kKeyMod2Mask | kKeyMod3Mask | kKeyMod4Mask | kKeyMod5Mask | kButton1Mask | kButton2Mask | kButton3Mask | kButton4Mask | kButton5Mask | kButton6Mask | kButton7Mask`. and it still didn't work. Then I added `| kAnyModifier`, and it worked. Then I removed all of them and replace with just `kKeyControlMask`. And then it worked. So now it works perfectly as it should and lets me even more confused. It seems there is something fishy going on with X11 being let in an undefined state that somehow playing around was enough to 'reset it'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8665#issuecomment-879702063:720,mask,mask,720,https://root.cern,https://github.com/root-project/root/issues/8665#issuecomment-879702063,1,['mask'],['mask']
Availability,"I used the github web interface to resolve some conflicts. It inserted a merge commit, we need to repair that, please do not merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/632#issuecomment-307770896:98,repair,repair,98,https://root.cern,https://github.com/root-project/root/pull/632#issuecomment-307770896,1,['repair'],['repair']
Availability,"I very much like the idea of being able to define a model inline! See #8711 . What the `auto fldXyz = MakeField<type>(""xyz"")` approach is trying to avoid is having to spell the schema more than once. As schemas get large, it can be a little cumbersome to remember and write down all the different types and field names in different places of the program. I do see, however, that the approach complicates reasoning about the lifetimes of the different variables.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688#issuecomment-884329108:274,down,down,274,https://root.cern,https://github.com/root-project/root/pull/8688#issuecomment-884329108,1,['down'],['down']
Availability,"I was actually just looking into this as well. @Axel-Naumann for alternatives, https://wiki.archlinux.org/title/Metric-compatible_fonts might be a useful link. Fontconfig itself considers the Liberation fonts closest to the MS Core Fonts (see https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/main/conf.d/30-metric-aliases.conf). SymbolNeu was last releases with ChromeOS Core fonts 1.23.0 and since dropped, but can be downloaded [here](https://gsdview.appspot.com/chromeos-localmirror/distfiles/croscorefonts-1.23.0.tar.gz). Could be added back into distribution packages. Noto Sans Symbols isn't an alternative, it doesn't feature the same symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-2287196584:430,down,downloaded,430,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-2287196584,1,['down'],['downloaded']
Availability,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10752:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/10752,4,['error'],['error']
Availability,I was just closing and opening to refresh the test results. I'm baffled that there are failures in what seems like a trivial PR!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2147870022:87,failure,failures,87,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2147870022,1,['failure'],['failures']
Availability,I was just hit by this again after forgetting about it again :smile: ping @pcanal @Axel-Naumann :grimacing:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7708#issuecomment-1138549274:69,ping,ping,69,https://root.cern,https://github.com/root-project/root/issues/7708#issuecomment-1138549274,1,['ping'],['ping']
Availability,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:; ```; root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};; root [1] foo.GetName(); ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'?; foo.GetName(); ^; ->; root [2] foo->GetName(); (const char *) ""foo.root""; ```. while the example here doesn't:; ```; root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'?; ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(); ^; ->; root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(); IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]!; You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_as",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-2082071082:266,error,error,266,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-2082071082,2,['error'],['error']
Availability,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856211883:103,avail,available,103,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856211883,1,['avail'],['available']
Availability,"I was running an old code on CMSSW_10, it gave the above error but then i downgraded to CMSSW_8 and the code ran fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496#issuecomment-798898014:57,error,error,57,https://root.cern,https://github.com/root-project/root/issues/7496#issuecomment-798898014,2,"['down', 'error']","['downgraded', 'error']"
Availability,"I was running the [basic RooFit tutorial with a Gaussian fit](https://root.cern.ch/doc/master/rf101__basics_8C.html), using your code squashing. Meaning I changed the call to `fitTo` with:; ```c++; gauss.fitTo(*data, CodeSquashing(true));; ```. It works, which is really nice! But to be sure it's stable, I called it twice in a row. But then I get redefinition errors:; ```; input_line_54:1:8: error: redefinition of 'func'; double func(double* in) {; ^; input_line_31:1:8: note: previous definition is here; double func(double* in) {; ^; input_line_54:4:8: error: redefinition of '_weight'; double _weight[25]{ 0.000000, 0.000000, 0.000000, 2.000000, 0.000000, 2.000000, 6.000000, 3.000000, 5.000000, 7.000000, 5.000000, 10.000000, 8.000000, 18.000000, 10.000000, 12.000000, 3.000000, 2.000000, 2.000000, 3.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000};; ^; input_line_54:3:8: note: previous definition is here; double _weight[25]{ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000};; ^; [#3] ERROR:Minimization -- Translated code for AD could not be compiled. See above for details.; ```. But in general, you call `fitTo` many times in a script. Can you support this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773#issuecomment-1343418495:361,error,errors,361,https://root.cern,https://github.com/root-project/root/pull/11773#issuecomment-1343418495,4,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"I was trying to make a skim from multiple files in the following way ; ```; fChain = ROOT.TChain(""Events""); ; for f in filelist:; fChain.Add(f); events_df = ROOT.RDataFrame(fChain); events_out = events_df .Filter(...; outVars = ....; events_out.Snapshot(""Events"", out, outVars); ```. Unfortunately, I've found that in a limited number of cases I had files that did not have all the required branches. Which threw the following error ; ```; TypeError: could not convert argument 3; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; runtime_error: Column ""HLT_AK8PFJet500"" is not in a dataset and is not a custom column been defined.; Failed to instantiate ""Snapshot(std::string,std::string,std::vector<string>*)""; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; runtime_error: Column ""HLT_AK8PFJet500"" is not in a dataset and is not a custom column been defined.; ```. Is there a way around this? Curiously I've also accidentally tried it in an older env with `6.18` which displayed an error, but created the output file anyway. `Error in <TTreeReader::SetEntryBase()>: There was an error while notifying the proxies` I am not sure about the specific branches, but the file as a whole was still readable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7084:427,error,error,427,https://root.cern,https://github.com/root-project/root/issues/7084,4,"['Error', 'error']","['Error', 'error']"
Availability,"I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```; $ root.exe -l; root [0] #include <errno.h>; root [1] errno; (int) 2; root [2] errno = 0; errno; (int) 0; root [3] errno = 0; (int) 0; root [4] errno; (int) 2; root [5] .q; $ errno 2; ENOENT 2 No such file or directory; ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:; ```; root [1] errno; newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory); (int) 2; root [2] errno = 0; newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); (int) 0; root [3] errno; newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); (int) 2; root [4] ; ```; So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12462:123,error,error,123,https://root.cern,https://github.com/root-project/root/issues/12462,1,['error'],['error']
Availability,"I welcome the idea of turning on parallelism where it makes sense, but the approach chosen is not the best in my opinion. I think a better alternative would be to use `isatty` to check if stdin comes from a terminal or if we are running in batch mode:. ```bash; $ echo 'std::cout << isatty(STDIN_FILENO) << ""\n"";' | root -l; 0; $ root -l; root [0] isatty(STDIN_FILENO); (int) 1; root [1] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2703#issuecomment-425080054:264,echo,echo,264,https://root.cern,https://github.com/root-project/root/pull/2703#issuecomment-425080054,1,['echo'],['echo']
Availability,"I went a bit further. Nothing to do with the canvas division. I pruned your macro to the minium (there is no divide at that level) reproducing the problem. Then, I saved the buggy canvas to a .C macro. Which also shows the issue. And I reduced that's saved macro to the following few lines:; ```; {; TH2F *ConeOverlap = new TH2F(""ConeOverlap"",""ConeOverlap"",200,-400,400,200,-400,400);; ConeOverlap->SetBinContent(47,1);; ConeOverlap->GetZaxis()->SetTickLength(1); // faulty line; ConeOverlap->Draw(""COLZ"");; }; ```; As your macro doesn't not set the tick length for the Z axis, I now need to understand why it has a such value.; I continue to debug .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8618#issuecomment-875390009:467,fault,faulty,467,https://root.cern,https://github.com/root-project/root/issues/8618#issuecomment-875390009,1,['fault'],['faulty']
Availability,"I will fix warnings, but linking failures on centos7 and ubuntu seems to be not connected with zlib, but with linking of jpeg lib for asimage:; ```; 12:28:23 [7743/9574] Linking CXX shared library lib/libASImage.so; 12:28:23 FAILED: lib/libASImage.so ; 12:28:23 : && /usr/bin/c++ -fPIC -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -Wl,--no-undefined -shared -Wl,-soname,libASImage.so -o lib/libASImage.so graf2d/asimage/CMakeFiles/ASImage.dir/G__ASImage.cxx.o graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o -Wl,-rpath,/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-ubuntu1604-gcc54-opt/lib:/mnt/build/workspace/root-pullrequests-build/build/lib: lib/libAfterImage.a /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-ubuntu1604-gcc54-opt/lib/libfreetype.a /usr/lib/x86_64-linux-gnu/libgif.so /usr/lib/x86_64-linux-gnu/libtiff.so /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20171122/x86_64-ubuntu1604-gcc54-opt/lib/libpng.so -l /usr/lib/x86_64-linux-gnu/libjpeg.so /usr/lib/x86_64-linux-gnu/libSM.so /usr/lib/x86_64-linux-gnu/libICE.so /usr/lib/x86_64-linux-gnu/libX11.so /usr/lib/x86_64-linux-gnu/libXext.so lib/libZLIB.a lib/libGraf.so lib/libHist.so lib/libMatrix.so lib/libMathCore.so lib/libImt.so lib/libRIO.so lib/libThread.so lib/libCore.so && :; 12:28:23 /usr/bin/ld: cannot find -l/usr/lib/x86_64-linux-gnu/libjpeg.so; 12:28:23 collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-359398562:33,failure,failures,33,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-359398562,2,"['error', 'failure']","['error', 'failures']"
Availability,I will look at it. I prefer to have a self consistent doc. Having it with the doc reduces the dependencies in case the remote website is down.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067#issuecomment-1061593943:137,down,down,137,https://root.cern,https://github.com/root-project/root/issues/10067#issuecomment-1061593943,1,['down'],['down']
Availability,I will merge manually. The test failure is not caused by my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2546#issuecomment-417308530:32,failure,failure,32,https://root.cern,https://github.com/root-project/root/pull/2546#issuecomment-417308530,1,['failure'],['failure']
Availability,"I will prepare it, I will ping you when I will be ready :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806#issuecomment-432376049:26,ping,ping,26,https://root.cern,https://github.com/root-project/root/pull/2806#issuecomment-432376049,1,['ping'],['ping']
Availability,"I will probably state a few obvious things:; - Maintaining a single documentation (like the web pages and doxygen) is better than having several (partially overlapping, partially complementing) documentations around. For maintenance and for users to know where to look.; - If there is a man page it should be up to date (outdated information can be worse than missing man page, if there is no man page you look for other resources instead of wasting time with wrong information). Part of my motivation to make the update PR was that doing and merging the update is relatively straight forward and I can do part of the work for you. The possible deprecation and removal of the page is your business.; - What I like about man pages wrt the full online documentation is: works w/o internet (imagine bad hotel wifi or overloaded conference wifi) and changing from the shell to a browser and clicking through 4 links, just to look up if it was `root -e 'std::cout << ""hello world"";'` or `-c`, is a mildly annoying hazzle. Having a short cli doc at hand at the cli is convenient. (This also means that the man page doesn't need to go beyond documenting the cli behaviour).; - trying both `<command> --help` and `man <command>` to figure out which is available, is mildly frustrating. (That inconsistency is more a problem of all the software out there, and root can just catch that by having docs on both calls). So, my opinion: I'm fine if the man pages get removed for maintenance reasons (or possibly better get cut down to links to the forum and online doc). I would prefer if they stay (though tbh, I myself only use those for `root`, `root-config`, and `hadd`. And the one for `root-config` could even get shortened. e.g.: The ""how to use root in a cmake project"" is already findable on the web page, I haven't seen the same for bare make or autoconf as it's now in the man page).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487#issuecomment-356994647:221,mainten,maintenance,221,https://root.cern,https://github.com/root-project/root/pull/1487#issuecomment-356994647,4,"['avail', 'down', 'mainten']","['available', 'down', 'maintenance']"
Availability,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-863178474:477,error,error,477,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-863178474,1,['error'],['error']
Availability,"I would also argue that the answer might be different for different level of message. For example, I can see a use (maybe) for the line number for Fatal and Debug message, but I don't see it for ""Info"" message. I.e. some message are directed at the user (Print, Info, Warning .. maybe even Error) and other messare are directed (indirectly) at the developers (Fatal, Debug ... maybe Error). When reading:; ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run() [tree/dataframe/src/RLoopManager.cxx:658]: Starting event loop number 0.; ```; I find the (relative path) filename and line number entirely redundant. The information is already contained in the ouput message and function name (just open the file, get to the routine and search for the message). Ambiguous messages (same text for different lines) are rare and it is even rarer that you can't figure it out. [This applies ""less"" to debug message that are more likely to be terser and more repeated]. In term of useful information content (for an Info message directed at the user), the following might be sufficient:; ```; Info in ROOT.RDF, RLoopManager::Run: Starting event loop number 0.; ```; or even ""just""; ```; Info in ROOT.RDF: Starting event loop number 0.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756867365:290,Error,Error,290,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756867365,3,"['Error', 'redundant']","['Error', 'redundant']"
Availability,"I would have to check everything to make sure, but I think your suggestion should work. I'm wondering whether we even still need the templated create function if we do it like this. I have to check my notes, but I think I introduced that just because working with templated constructors is very awkward (you have to pass your desired template class as a regular parameter (I think the cheapest way to do so is a nullptr of the desired type, which explains the `MinimizerFcn* /* value unused */` argument in the constructor)). The issue will return, though, with the upcoming third `RooAbsMinimizerFcn` derived class. We could in principle solve it in a similar way, by using an `enum class`. The big downside of this is that every time someone wants to implement a new likelihood/gradient calculator class they would have to also modify the enum class and the corresponding RooMinimizer code that redirects to the proper calculator constructors and such. Anyway, I'm sure we will discuss this in the upcoming PR. Edit: so yeah, I think at least for this overload of `create`, we could also just add a `FcnMode` argument and lose the template. The `create` for the upcoming class will be a different overload anyway, so we can just keep these ones template free and would only need template for that stuff (maybe, unless enum class).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879791307:700,down,downside,700,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879791307,1,['down'],['downside']
Availability,"I would like to point out that this is a backport of a very generic fix, which works very well with llvm16, which is not in the branch 6.30. A solution of the issue reported by CMS was already made available in December: if you want, this is a more refined version of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14358#issuecomment-1894086877:198,avail,available,198,https://root.cern,https://github.com/root-project/root/pull/14358#issuecomment-1894086877,1,['avail'],['available']
Availability,I would prefer not to have my private mail address online available to everyone.; Please change it to my office mail address.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4709:58,avail,available,58,https://root.cern,https://github.com/root-project/root/pull/4709,1,['avail'],['available']
Availability,"I wouldn't say hopeless, this last error looks like we just have to not use `__file__` as it's not defined when doing the notebook conversion..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430#issuecomment-1106187215:35,error,error,35,https://root.cern,https://github.com/root-project/root/issues/10430#issuecomment-1106187215,1,['error'],['error']
Availability,I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1936922338:134,mainten,maintenance,134,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1936922338,1,['mainten'],['maintenance']
Availability,I'd like to start testing again the case highlighted by https://github.com/root-project/root/issues/13361. Note at the beginning: the issue arose with `runtime_cxxmodules=OFF` and I'm not sure we have that in the CI so we might not see errors right away,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15749:236,error,errors,236,https://root.cern,https://github.com/root-project/root/pull/15749,1,['error'],['errors']
Availability,"I'd love `build` being an available folder name, and preferably even listed in `.gitignore`, for exactly that reason! ROOT is just about the only project where I can't do the standard `cmake ..` from `build`. (Actually, I like something like `*build*` in the git ignore, because I tend to make several build directories with different configurations, like llvm and gcc). @vgvassilev Let me know if I need to move the scripts currently in `.ci` for this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775#issuecomment-380150632:26,avail,available,26,https://root.cern,https://github.com/root-project/root/pull/1775#issuecomment-380150632,1,['avail'],['available']
Availability,"I'll get back to you on this; I think we should have a const and a non const method so both are available; and using `const_cast` instead of mutable would make more sense IMO because it's not really logically ""mutable"". Can you show where this is impossible to work around with `const_cast` with a little snippet example for a `MnMigrad ` instance?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384657920:96,avail,available,96,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384657920,1,['avail'],['available']
Availability,"I'll have to check what is causing these failures on mac, re-adding ""do not merge"" label :sweat:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-333252550:41,failure,failures,41,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-333252550,1,['failure'],['failures']
Availability,I'll merge this to fix the test error. @lmoneta please do a post-merge review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1634#issuecomment-366340664:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/1634#issuecomment-366340664,1,['error'],['error']
Availability,"I'll report it, let's hope it gets fixed for 1.9.4. In the meanwhile, maybe we can document the ""enums"" in the TOC, so that the error does not appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011073907:128,error,error,128,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011073907,1,['error'],['error']
Availability,I'll take a look at this as soon as possible. One possible reason why it would have worked before (and does not in the standalone) might be the available of a compiled dictionary for that class through a library (from Athena and co) loaded automatically by hadd.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358#issuecomment-1439264901:144,avail,available,144,https://root.cern,https://github.com/root-project/root/issues/12358#issuecomment-1439264901,1,['avail'],['available']
Availability,I'll try the stricter version now to see if the native openGL is even available:; ```; set(CMAKE_FIND_FRAMEWORK ONLY); ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15435#issuecomment-2098360031:70,avail,available,70,https://root.cern,https://github.com/root-project/root/pull/15435#issuecomment-2098360031,1,['avail'],['available']
Availability,"I'm closing this PR, as most of the interface changes that were part of it were landed in https://github.com/root-project/root/pull/13208. For the optimized allocation / deallocation, I think we should be taking a look to `tbb_allocator<T>` instead, which uses TBB's scalable allocator if available or otherwise reverts to `malloc` (see https://oneapi-src.github.io/oneTBB/main/tbb_userguide/Which_Dynamic_Libraries_to_Use.html). That should be a different PR though! I'll leave it into your capable hands, @jblomer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279#issuecomment-1700944645:289,avail,available,289,https://root.cern,https://github.com/root-project/root/pull/12279#issuecomment-1700944645,1,['avail'],['available']
Availability,"I'm confused: are these CI build errors something I should be worried about and trying to fix? They look pretty systemic to me. I can tell you I had a successful build on my own machine with GCC 6.3.0, but I understand the need for things to be verified independently. I just don't know how to interpret what might need to be done, here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/436#issuecomment-287169156:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/436#issuecomment-287169156,1,['error'],['errors']
Availability,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250:362,avail,available,362,https://root.cern,https://github.com/root-project/root/issues/8250,3,"['Error', 'avail']","['Error', 'available']"
Availability,I'm currently debugging a few tests in the test suite and with this change I don't have to search the CMake files to find out what the actually expected error code is for a failing test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/904#issuecomment-325665636:153,error,error,153,https://root.cern,https://github.com/root-project/root/pull/904#issuecomment-325665636,1,['error'],['error']
Availability,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212#issuecomment-261895145:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/212#issuecomment-261895145,2,"['failure', 'ping']","['failure', 'ping']"
Availability,"I'm finding that this number of divisions is, unfortunately, not matching up in a more involved script (a minimal reproducer is not easy... converting to a .C file produces over 4k lines that have to be fixed by hand and then of course stripped of sensitive experiment-data, as there are errors in the conversion by ROOT). It seems that it thinks there are 75, when only 4 printed labels are ultimately made. I'm calling this Optimize after it's drawn, so I'm not sure where to go from here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10279#issuecomment-1084556143:288,error,errors,288,https://root.cern,https://github.com/root-project/root/issues/10279#issuecomment-1084556143,1,['error'],['errors']
Availability,"I'm having the problem again now, and I am not sure how to 'reset' my keyboard so that it starts working again. Even restarting my computer didn't make it work again. Searching a bit more, I think this might be related to this ""feature"" of X11:. https://bugs.freedesktop.org/show_bug.cgi?id=99280; https://stackoverflow.com/questions/18160792/python-xlib-xgrabkey-keyrelease-events-not-firing; https://github.com/zhanghai/xkeymacs/issues/1; https://stackoverflow.com/questions/39087079/detect-modifier-key-release-in-x11-root-window. Maybe it also explains why, randomly, my keyboard key repetition is 'deactivated'. And also that sometimes, pressing ALT+Key (in a TGTextbutton) lefts the button engaged / stuck insted of press and release. And it would also explain why changing to ""kAnyModifier"" makes it work. Even if CTRL is still trapped, pressing CTRL+S is detected as pressing just 'S' by X11, and then in HandleKey, doing event->fState & kKeyControlMask does detect correctly the mask. So fState seems to work, and the problem is just with XGrabKey and XUngrabKey sometimes not working in the release sequence I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8665#issuecomment-880188512:988,mask,mask,988,https://root.cern,https://github.com/root-project/root/issues/8665#issuecomment-880188512,1,['mask'],['mask']
Availability,"I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr; raise AttributeError(""Failed to import {} from ROOT"".format(name)); AttributeError: Failed to import foo from ROOT; ```. The behaviour before:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr; return getattr(gbl_namespace, name); AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:; type object '' has no attribute 'foo'; 'foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr; return getattr(gbl_namespace.ROOT, name); AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:; type object 'ROOT' has no attribute 'foo'; 'ROOT::foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5187:178,error,error,178,https://root.cern,https://github.com/root-project/root/pull/5187,1,['error'],['error']
Availability,"I'm merging this, as failures on Jenkins are not related to this PR, and clang-format wants to put a for loop and its body into a single line, so I'm ignoring it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/626#issuecomment-309735579:21,failure,failures,21,https://root.cern,https://github.com/root-project/root/pull/626#issuecomment-309735579,1,['failure'],['failures']
Availability,"I'm merging, since test failure is not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2727#issuecomment-426190190:24,failure,failure,24,https://root.cern,https://github.com/root-project/root/pull/2727#issuecomment-426190190,1,['failure'],['failure']
Availability,"I'm not 100% sure if this is related to `0x08` flags, but I have narrowed down my problem a bit in https://github.com/JuliaHEP/UnROOT.jl/issues/312#issuecomment-1998723832. In summary, by using ROOT, I have confirmed that in the 2nd cluster I'm reading all the correct elements for; ```; ""AntiKt4TruthDressedWZJetsAux:.constituentLinks.:_0.m_persIndex""; ```; Both the content and the number of elements completely agree. The problem surfaces when I need to put this together with the `offset` vector, since the schema looks like this:; ```julia; └─ :constituentLinks ⇒ Vector; ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=40); └─ :content ⇒ Vector; ├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41); └─ :content ⇒ Struct; └─ Symbol("":_0"") ⇒ Struct; ├─ :m_persKey ⇒ Leaf{UInt32}(col=42); └─ :m_persIndex ⇒ Leaf{UInt32}(col=43); ```. The ` :offset ⇒ Leaf{UnROOT.Index64}(col=40)` contains:; ```julia; 1432-element Vector{Int64}:; 9; 30; 36; 43; 57; 65; ⋮; 12906; 12919; 12930; ```. which means we expect outer vector to have 12930 elements. Then `├─ :offset ⇒ Leaf{UnROOT.Index64}(col=41)`:; ```julia; 12930-element Vector{Int64}:; 30; 34; 52; 66; ...; 209999; 210008; ```; It makes sense this contains 12930 elements, match one level above. But now we expect the innermost array to have 210008 elements. Now the innermost element `├─ :m_persKey ⇒ Leaf{UInt32}(col=42)`:; ```julia; 128584-element reinterpret(UInt32, ::Vector{UInt8}):; 0x2784318b; 0x2784318b; 0x2784318b; 0x2784318b; 0x2784318b; 0x2784318b; 0x2784318b; 0x2784318b; ```. which is far from the 210008 we expected. Any insight is much appreciated @jblomer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14949#issuecomment-1998731260:74,down,down,74,https://root.cern,https://github.com/root-project/root/issues/14949#issuecomment-1998731260,1,['down'],['down']
Availability,"I'm not 100% sure, but may be related to the general issue with jitted code and errors at https://github.com/root-project/root/issues/15076 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15477#issuecomment-2112612371:80,error,errors,80,https://root.cern,https://github.com/root-project/root/pull/15477#issuecomment-2112612371,1,['error'],['errors']
Availability,"I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1864367702:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1864367702,1,['error'],['errors']
Availability,"I'm not quite convinced of this. From the link:. > The symbols will be resolved when the extension library is loaded into a Python binary. What is the extension library what will load the right Python library for ROOT? Also, how can you guarantee this won't generate silent errors if the ABI of the loaded library and the one ROOT built itself against are not compatible? ROOT should probably just continue to be built against a specific version of Python and users should stick to that version when using ROOT. I'm also afraid this will just delay a link error into a runtime error when wrong/incompatible libraries are tried to be loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-461471229:274,error,errors,274,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-461471229,3,['error'],"['error', 'errors']"
Availability,"I'm not really against this change, but it's the first time I see someone asking for centiseconds. And as I said, the old GUI is more or less in maintenance mode, since the effort is made in the new web based GUI. Anyway, I'll check and we'll see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-948453472:145,mainten,maintenance,145,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-948453472,1,['mainten'],['maintenance']
Availability,"I'm not so sure about using **-fno-threadsafe-statics**.; That is a part of the standard now, so users may expect (I do) **threadlocal** and **std::thread** to work. Are both of these (& possibly more) now undefined behavior to avoid a link-level error that both fixable and demonstrating an actual problem?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364153964:247,error,error,247,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364153964,1,['error'],['error']
Availability,"I'm not sure oversubscription will work as you expect, `RTaskArenaWrapper`'s ctor has this code:. ```cpp; const unsigned tbbDefaultNumberThreads = fTBBArena->max_concurrency(); // not initialized, automatic state; maxConcurrency = maxConcurrency > 0 ? std::min(maxConcurrency, tbbDefaultNumberThreads) : tbbDefaultNumberThreads;; const unsigned bcCpus = LogicalCPUBandwithControl();; if (maxConcurrency > bcCpus) {; Warning(""RTaskArenaWrapper"", ""CPU Bandwith Control Active. Proceeding with %d threads accordingly"", bcCpus);; maxConcurrency = bcCpus;; }; if (maxConcurrency > tbb::global_control::active_value(tbb::global_control::max_allowed_parallelism)) {; Warning(""RTaskArenaWrapper"", ""tbb::global_control is active, limiting the number of parallel workers""; ""from this task arena available for execution."");; }; fTBBArena->initialize(maxConcurrency);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13057#issuecomment-1609836294:785,avail,available,785,https://root.cern,https://github.com/root-project/root/pull/13057#issuecomment-1609836294,1,['avail'],['available']
Availability,"I'm not sure why the CI is unable to perform the rebase for `ROOT-ubuntu16/nortcxxmod`,. ```; CMake Error at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:1083 (message):; Rebase of matthewfeickert-backport/xrootd-5.4.3 branch on top of; v6-26-00-patches failed!; ```. but everything else seems to be working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10755#issuecomment-1155522978:100,Error,Error,100,https://root.cern,https://github.com/root-project/root/pull/10755#issuecomment-1155522978,1,['Error'],['Error']
Availability,"I'm ok to close this; it will probably pop up again in the future, but I agree that rebuilding Clad every time is a higher time sink for the team than one developer having to investigate weird failures. And by now, we hopefully have a sufficient understanding that it will take less time in the future because we know how to ""fix"" it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7977#issuecomment-934285285:193,failure,failures,193,https://root.cern,https://github.com/root-project/root/issues/7977#issuecomment-934285285,1,['failure'],['failures']
Availability,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339364132:383,error,error,383,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132,3,"['avail', 'error', 'robust']","['available', 'error', 'robust']"
Availability,"I'm reassigning to Philippe. I think it boils down to this: when processing the excess files, `TFileMerger` switches to the incremental mode. In this mode, `TFileMerger::MergeOne` sets `canBeFound = true`, which in turn at the end of `MergeOne` skips the if block commented with `// Don't write the partial result for TTree and TH1`. Perhaps `canBeFound` should not be true for a histogram that is not (yet) found in the target file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9022#issuecomment-934414292:46,down,down,46,https://root.cern,https://github.com/root-project/root/issues/9022#issuecomment-934414292,1,['down'],['down']
Availability,"I'm running into trouble; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-671321954:318,error,error,318,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-671321954,1,['error'],['error']
Availability,"I'm seeing an error when building an application with root 6.26.06, gcc 11.2 and Kokkos 3.7. I didn't see this when building the same source against root 6.24.00, Kokkos 3.4 with gcc 9.3. Nothing in the source is explicitly calling TExecutorCRTP. . Before I start playing with all permutations of root / gcc / kokkos to see where the issue starts, I'm wondering if anyone has seen this before or has some advice. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 120 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/11495,3,['error'],['error']
Availability,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation); ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:512,mask,masks,512,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,2,['mask'],['masks']
Availability,"I'm still fixing the clang-tidy error :O. Should be done in a minute. Cheers,; Kim. Lorenzo Moneta wrote:; >; > Merged #525 <https://github.com/root-project/root/pull/525>.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/pull/525#event-1058796530>, or; > mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACBi2WCLHl_4jQiAk0RVUzm6uGsT6po9ks5rz12LgaJpZM4NHrC3>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/525#issuecomment-297439316:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/525#issuecomment-297439316,1,['error'],['error']
Availability,"I'm still trying to figure out when exactly this issue pops up in our framework. - sourcing `thisroot.sh` works; - exporting ROOT_ROOT or setting the ROOT_ROOT CMake variable works, but requires setting the cmake policy 0074 for some older packages.; - Without either, e.g. GenFit, VMC, vgm still finds ROOT (I assume via $ROOTSYS), but the VDT error is thrown. Maybe this adds some useful information. I live with setting the cmake policy in the different build recipes as a workaround for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1840441593:345,error,error,345,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1840441593,1,['error'],['error']
Availability,"I'm totally +1 for using target-based CMake, and I believe I have fixed the issue of ROOT picking up its own headers here:; https://github.com/root-project/root/pull/8709 (needs rebasing). This fixed it at least for many builtins. There still might be more builtins that have the same problem, but let's go one step at a time. I solved the VDT-related part a bit differently. If I rebased, the diff would approximately read (done manually, sorry for possible indentation errors):; ```diff; DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); - add_library(VDT::VDT STATIC IMPORTED GLOBAL); - set_target_properties(VDT::VDT; - PROPERTIES; - IMPORTED_LOCATION ""${VDT_LIBRARIES}""; - INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + add_library(VDT IMPORTED SHARED); + add_dependencies(VDT BUILTIN_VDT); + set_target_properties(VDT PROPERTIES IMPORTED_LOCATION ""${VDT_LIBRARIES}""); + target_include_directories(VDT INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIR}> $<INSTALL_INTERFACE:include/>); ); endif(); endif(); ```; Whether the target is declared global, static or shared, I'm not sure if it makes a big difference. I'm happy to call it `VDT::VDT`, though. I think the important part was to switch the include directories via generator expressions, and to use **SYSTEM** includes instead of includes in `FindVDT`. #11844 is missing the usage of the `VDT::VDT` target in RooFit and in tmva, but that would come into effect after a rebase of #8709. I guess therefore that we could proceed with merging #11844 if it's green, and then I rebase #8709, so I have to do the rebase work only once. Does that sound reasonable for @amadio, @krasznaa, @bellenot ?. ### Edit ; And to be clear, for `SearchInstalledSoftware` I would leave everything as proposed in Attila's commit but the change to `target_include_directories` with the two ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339660363:471,error,errors,471,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339660363,1,['error'],['errors']
Availability,"I'm trying to build root (v6.24.06) with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:427,Error,Error-Unknown,427,https://root.cern,https://github.com/root-project/root/issues/9036,3,['Error'],"['Error', 'Error-Unknown', 'ErrorHandling']"
Availability,"I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:; ```cc; /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'; 47 | extern size_t getpagesize PARAMS ((void));; | ^~~~~~~~~~~; In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,; from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:; /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here; 163 | int getpagesize(void);; | ^~~~~~~~~~~; ```. The relevant part of `mmapsup.c` is:; ```c; #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \; || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)); extern size_t getpagesize PARAMS ((void));; #else; extern int getpagesize PARAMS ((void));; #endif; ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253:109,error,error,109,https://root.cern,https://github.com/root-project/root/issues/9253,2,['error'],['error']
Availability,"I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function.; This is the function I have:. ```; class gauss2d_function:; def __init__(self):; self.n1 = 1.0 # normalization 1; self.m1 = 60. # mean 1; self.s1 = 1.0 # sigma 1; self.m2 = 60.0 # mean 2; self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):; import math; n1 = parameters[0] # normalization 1; m1 = parameters[1] # mean 1; s1 = parameters[2] # sigma 1; m2 = parameters[3] # mean 2; s2 = parameters[4] # sigma 2. x1 = x[0]; y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.); x2 = x[1]; y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)); ; return retval. ```. and here it is the code:. ```; hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \; tmin, tmax); .; .; .; . func2d = gauss2d_function(); gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5); hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```; the error is the following:. ```; Traceback (most recent call last):; File ""python/crosstalk.py"", line 447, in <module>; main(); File ""python/crosstalk.py"", line 436, in main; doAnalysis(dbcon, path, filename, channel, photon); File ""python/crosstalk.py"", line 216, in doAnalysis; hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit); TypeError: none of the 2 overloaded methods succeeded. Full details:; TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>; TypeError: could not convert argument 1; TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>; TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```; I'm using ROOT 6.24.06 on CentOS 8. Thank you very much; Roberto",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9745:79,error,error,79,https://root.cern,https://github.com/root-project/root/issues/9745,2,['error'],['error']
Availability,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:264,error,error,264,https://root.cern,https://github.com/root-project/root/issues/10676,2,['error'],['error']
Availability,I'm unsubscribing myself as reviewer. I think there might have been a rebase error that requested reviews from 8 additional people. 🙂,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13476#issuecomment-1699102341:77,error,error,77,https://root.cern,https://github.com/root-project/root/pull/13476#issuecomment-1699102341,1,['error'],['error']
Availability,"I'm very hesitant to apply this; `__cplusplus` should indeed be `2017...` for C++17. Can you elaborate why clang4 should be used to build with C++17 (or why C++17 should be used when compiling with clang4)? https://clang.llvm.org/cxx_status.html shows that most C++17 features are available in clang4 - but IIUC it was released before C++17 was released, so using it to compile C++17 features is a bit time bending ;-) Can you either use a newer clang, or use C++14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096#issuecomment-446398912:281,avail,available,281,https://root.cern,https://github.com/root-project/root/pull/3096#issuecomment-446398912,1,['avail'],['available']
Availability,"I'm working inside CentOS7 container that does not have any OpenSSL installed this prevents linking ""random"" OpenSSL. I did full rebuild - all dependencies including compiler, OpenSSL (downloaded and built tag openssl-3.1.0 from https://github.com/openssl/openssl.git) and ROOT 6.28.02 with aforementioned ""fix"". ROOT did compile and proper OpenSSL library is linked.; ```; > ldd libRHTTP.so; ...; libssl.so.3 => /sw/slc7_x86-64/AliEn-Runtime/v2.19-le-local2/lib/libssl.so.3 (0x00007f0b72d85000); ...; > openssl version; OpenSSL 3.1.0 14 Mar 2023 (Library: OpenSSL 3.1.0 14 Mar 2023); ```; What is interesting, the `libssl.so.3` file with name `libssl.so.3.1` has not been created during OpenSSL build and in [OpenSSL Configure file](https://github.com/openssl/openssl/blob/openssl-3.1.0/Configure) in section apitable there is no mention of new 3.1.0 API. Either the authors have forgotten to add it there or they have decided not to increase API version. In file [VERSION.dat](https://github.com/openssl/openssl/blob/openssl-3.1.0/VERSION.dat) there is proper version 3.1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12766#issuecomment-1536577420:185,down,downloaded,185,https://root.cern,https://github.com/root-project/root/issues/12766#issuecomment-1536577420,1,['down'],['downloaded']
Availability,"I've assigned people for cling and math test failures, please assign others as necessary for other failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436#issuecomment-993339228:45,failure,failures,45,https://root.cern,https://github.com/root-project/root/issues/9436#issuecomment-993339228,2,['failure'],['failures']
Availability,"I've been able reproduce this on my desktop (CentOS7, gcc 8.3) when building ROOT from source. The parameter that makes it fail is `-DCMAKE_CXX_STANDARD=17` (C++ 14 works fine). The reason is: when passing a Python callable as a parameter of a function (e.g. the `TF1` constructor in your example) cppyy automatically generates a C++ wrapper for it. As part of the wrapper generation, cppyy jits Python headers, some of which still use (in Python2) the `register` keyword, which causes an error in C++ 17. For example, when running your reproducer with dev3 these errors appear first:. ```; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3python2/Thu/ROOT/HEAD/x86_64-centos7-gcc8-opt/include/CPyCppyy/API.h:30:; In file included from /cvmfs/sft.cern.ch/lcg/releases/Python/2.7.16-3adfa/x86_64-centos7-gcc8-opt/include/python2.7/Python.h:88:; /cvmfs/sft.cern.ch/lcg/releases/Python/2.7.16-3adfa/x86_64-centos7-gcc8-opt/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```. this is what ultimately causes the `TF1` constructor error, since the C++ wrapper for the Python callable can't be generated. The errors above start appearing with 6.24 as a result of the LLVM upgrade. But it's legit that they appear, the Python2 headers are just old and not updated anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-849596617:489,error,error,489,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-849596617,5,['error'],"['error', 'errors']"
Availability,"I've been able to get somewhere but now I need guidance. I created a `dict.modulemap` file:; ```; module dict {; header ""MyClass.h""; header ""OtherClass.h""; export *; }; ```; and the module-aware dictionary:; ```bash; $ ls; LinkDef.h MyClass.h OtherClass.h dict.modulemap; $ rootcling -cxxmodule -f dict.cpp MyClass.h OtherClass.h -moduleMapFile=dict.modulemap LinkDef.h; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm libDict.so; ```; but I cannot load the dictionary on the root shell:; ```; $ root; root [0] .L libDict.so ; Module dict not found.; ```; I put `$PWD` in `LD_LIBRARY_PATH` and `ROOT_INCLUDE_PATH` but the error is still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1149766446:824,error,error,824,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1149766446,1,['error'],['error']
Availability,I've been looking into the failure on macOS with @amadio and it appears to be a problem with the build node.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2608#issuecomment-422356809:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/2608#issuecomment-422356809,1,['failure'],['failure']
Availability,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash; [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'; input_line_14:1:64: error: redefinition of 'is_equal'; namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }; ^; input_line_10:1:64: note: previous definition is here; namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }; ^; input_line_15:1:64: error: redefinition of 'is_not_equal'; namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }; ^; input_line_11:1:64: note: previous definition is here; namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }; ^; *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6; #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6; #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so; #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-804814261:229,error,error,229,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-804814261,2,['error'],['error']
Availability,I've cleaned up the history squashing commit with reverts. The new failures should be fixed now - let's see what the CI says tomorrow.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12519#issuecomment-1488830276:67,failure,failures,67,https://root.cern,https://github.com/root-project/root/pull/12519#issuecomment-1488830276,1,['failure'],['failures']
Availability,"I've figured out why the test fails on macOS. There, libz.so gets autoloaded, so instead of failing with symbol not found (expected when builtin_zlib=ON), the test passes because of the autoloading (which is actually means failure for this test). However, I checked manually and the symbols are not exported:; ```; macphsft20 $ file lib/libCore.so; lib/libCore.so: Mach-O 64-bit dynamically linked shared library x86_64; macphsft20 $ nm lib/libCore.so | grep zlib; 00000000001ef410 t _zlibCompileFlags; 00000000001ef400 t _zlibVersion; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1636#issuecomment-366268086:223,failure,failure,223,https://root.cern,https://github.com/root-project/root/pull/1636#issuecomment-366268086,1,['failure'],['failure']
Availability,"I've fixed the issue with the downside of an even more bloated `ROOT.py`. However, this is what it looks like:. ```python; >>> v = ROOT.VecOps.RVec('float')(5); >>> for i in range(len(v)): v[i] = i; >>> print(v); { 0, 1, 2, 3, 4 }; ```. ```python; >>> v = ROOT.std.vector('float')(5); >>> for i in range(len(v)): v[i] = i; >>> print(v); { 0.00000f, 1.00000f, 2.00000f, 3.00000f, 4.00000f }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392714518:30,down,downside,30,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392714518,1,['down'],['downside']
Availability,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash; mamba create --name test root python=X.Y; ```. ### Python 2.7. ```python; Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58); Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); ...:; input_line_38:9:43: error: base class '::TChain' has private copy constructor; Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}; ^; /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here; TChain(const TChain&); // not implemented; ^; /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported; import re; Out[1]: <cppyy.gbl.TChain object at 0x(nil)>; ```. ### Python 3.6. ```python; Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33); Type 'copyright', 'credits' or 'license' for more information; IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT; ...: import numpy as np; ...:; ...: class Ntuple(ROOT.TChain):; ...: def __init__(self, name):; ...: pass; ...:; ...: Ntuple(""DataTree""); ---------------------------------------------------------------------------; KeyError Traceback (most recent call last); <ipython-input-1-cdc669878b88> in <module>; 2 import numpy as np; 3; ----> 4 class Ntuple(ROOT.TChain):; 5 def __init__(self, name):; 6 pass. KeyError: 'fProofChain'; ```. ### Python 3.7. ```pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702595265:850,error,error,850,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702595265,1,['error'],['error']
Availability,"I've modified the system to require an explicit request to modify the source tree to build the standalone redistributable; it now builds in place with no copying if you just build inside the ROOT source tree. I've added a Travis test for the build (both copy and no copy versions) since the build is very fast. So the current version allows:; * Building directly from the `/math/minuit2` directory while inside ROOT. No copies or modifications to the source directory are made. `add_subdirectory`, `make install`, `make package` (binary), and `find_package`; * Building directly from the `/math/minuit2` directory with `-Dminuit2-standalone=ON` set. This will copy the needed files into the minuit2 source directory so that `make package_source` is supported - allowing stand-alone redistributable packages to be produced. `make purge` cleans the source directory.; * Building from stand-alone redistributable packages produced above. Using `add_subdirectory`, `make install`, `make package` (binary), and `find_package` are all supported. I think this is flexible enough to cover the possible uses while not adding too much maintenance. The `README.md` and `DEVELOP.md` files have been updated, and the CMake files have fairly extensive comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-371471265:1125,mainten,maintenance,1125,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-371471265,1,['mainten'],['maintenance']
Availability,I've pushed an update to hopefully fix the issues. Tests now pass in my SLC6 gcc6 build. Only downside is Vc headers must be included before the GenVector ones in order to be used in the template types. @phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286425814:94,down,downside,94,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286425814,1,['down'],['downside']
Availability,"I've run cmake ../root in the source once, and it will create some file, cause the cmake error later wherever the building dir is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15549#issuecomment-2117108894:89,error,error,89,https://root.cern,https://github.com/root-project/root/issues/15549#issuecomment-2117108894,1,['error'],['error']
Availability,"I've seen those errors and I'll fix them. The only workaround for the time being is not to use `/permissive-` flag, unless you really need it, which is still not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607#issuecomment-1016287337:16,error,errors,16,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016287337,1,['error'],['errors']
Availability,"I've tried to replicate the issue on a second machine running openSUSE Leap 15.2 and I got no problems. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); ...; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.3.1; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; ...; -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- PyROOT will be built for versions 3.8.9 (Main) and 2.7.18; -- Linker detection: GNU ld; ```. I'm almost certain now that this issue is linked to Tumbleweed and/or the vendor (package providor) that I'm using as available packages for python3 development files differ between the two machines:. Leap 15.2; ```; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38-pyudev | Udev bindings for Python | package; ```; Tumbleweed 20210502; ```; i | devel_python3 | Python 3 Developement | pattern; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | patterns-devel-python-devel_python3 | Python 3 Developement | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base packa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097#issuecomment-832966390:906,avail,available,906,https://root.cern,https://github.com/root-project/root/issues/8097#issuecomment-832966390,1,['avail'],['available']
Availability,"I've turned off the failure return value from the timing tests, as if they are run from VMs the results cannot really be trusted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286573364:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286573364,1,['failure'],['failure']
Availability,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:2549,Error,Error,2549,https://root.cern,https://github.com/root-project/root/pull/15272,2,"['Error', 'error']","['Error', 'error']"
Availability,"I.e. [this failure](https://github.com/root-project/root/pull/11314#issuecomment-1238128791), which should be completely unrelated to the changes in the corresponding PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11326:11,failure,failure,11,https://root.cern,https://github.com/root-project/root/pull/11326,1,['failure'],['failure']
Availability,I/mnt/build/workspace/root-pullrequests-build/build/etc/cling/ -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/vecops -I/mnt/build/workspace/root-pullrequests-build/root/builtins/zlib -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/macosx/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/winnt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -writeEmptyRootPCM -I ROOT/RAdoptAllocator.hxx ROOT/RVec.hxx /mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:73:37: error: no template named 'index_sequence' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:990:56: error: no member named 'make_index_sequence' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:990:97: error: expected expression ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1003:51: error: no member named 'make_index_sequence' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1003:92: error: expected expression ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libROOTVecOps22c0b28802_dictUmbrella.h),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3630#issuecomment-479087365:2063,error,error,2063,https://root.cern,https://github.com/root-project/root/pull/3630#issuecomment-479087365,7,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -isystem externals/mnt/build/workspace/root-pullrequests-build/install/include -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o -MF math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o.d -o math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/Fitter.cxx ; - [2020-08-05T13:02:36.665Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:9: error: ‘void ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T13:02:36.665Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:11: error: ‘double ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override . And 10 more. ### Warnings:; - [2020-08-05T12:59:48.270Z] /mnt/build/workspace/root-pullrequests-build/build/include/TApplication.h:163:4: warning: 'CheckTObjectHashConsistency' overrides a member function but is not marked 'override' [-Winconsistent-missing-override] ; - [2020-08-05T12:59:48.271Z] /mnt/build/workspace/root-pullrequests-build/build/include/TAppl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669180122:6295,error,error,6295,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669180122,1,['error'],['error']
Availability,"I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o -MF math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o.d -o math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o -c math/mathcore/G__MathCore.cxx ; - [2020-08-05T13:02:34.124Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:9: error: ‘void ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T13:02:34.124Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:11: error: ‘double ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T13:02:34.124Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/LogLikelihoodFCN.h:129:9: error: ‘void ROOT::Fit::LogLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not ov",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669180122:2079,error,error,2079,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669180122,1,['error'],['error']
Availability,I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o -MF core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o.d -o core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TAttLine.cxx ; - [2021-02-17T14:07:31.860Z] /mnt/build/workspace/root-pullrequests-build/root/core/gui/inc/GuiTypes.h:368:25: error: ‘INT_MAX’ was not declared in this scope ; - [2021-02-17T14:07:31.860Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Ibuiltins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/core/base/res -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o -MF core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o.d -o core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7233#issuecomment-780580543:4990,error,error,4990,https://root.cern,https://github.com/root-project/root/pull/7233#issuecomment-780580543,1,['error'],['error']
Availability,"I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation.dir/src/RLogger.cxx.o -MF core/foundation/CMakeFiles/Foundation.dir/src/RLogger.cxx.o.d -o core/foundation/CMakeFiles/Foundation.dir/src/RLogger.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/RLogger.cxx ; - [2020-12-08T10:45:29.948Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RLogger.hxx:232:49: error: no matching function for call to ‘ROOT::Experimental::RLogEntry::RLogEntry(ROOT::Experimental::ELogLevel&, &lt;brace-enclosed initializer list&gt;)’ ; - [2020-12-08T10:45:29.948Z] /mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc/ROOT/RLogger.hxx:237:58: error: no matching function for call to ‘ROOT::Experimental::RLogEntry::RLogEntry(ROOT::Experimental::ELogLevel&, ROOT::Experimental::RLogChannel&, &lt;brace-enclosed initializer list&gt;)’ ; - [2020-12-08T10:45:30.207Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -fvisibility=hidden -Wno-shadow -fno-strict-aliasing -Wno-unused-parameter -Wwrite-strings -Wno-long-long -Wno-missing-field-initializers -DLLVM_BUILD_GLOBAL_ISEL -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -MD -MT core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o -MF core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o.d -o core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/foundation/src/RLogger.cxx ; -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-740542547:1285,error,error,1285,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-740542547,1,['error'],['error']
Availability,"I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/build/ginclude ROOT/RAdoptAllocator.hxx ROOT/RVec.hxx /mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc/LinkDef.h ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: error: constexpr function's return type 'void' is not a literal type ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:487:42: error: no type named 'iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-04-16T11:18:42.066Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1281",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-821105657:2296,error,error,2296,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-821105657,1,['error'],['error']
Availability,"I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/build/ginclude ROOT/RAdoptAllocator.hxx ROOT/RVec.hxx /mnt/build/workspace/root-pullrequests-build/root/math/vecops/inc/LinkDef.h ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:193:19: error: constexpr function's return type 'void' is not a literal type ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:487:42: error: no type named 'iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:488:48: error: no type named 'const_iterator' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:489:43: error: no type named 'reference' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:490:43: error: no type named 'size_type' in 'ROOT::Internal::VecOps::SmallVectorTemplateBase&lt;int, true&gt;' ; - [2021-05-04T11:11:26.423Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RVec.hxx:1285",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-831862141:2296,error,error,2296,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-831862141,1,['error'],['error']
Availability,I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/graf2d/graf/inc -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -UNDEBUG -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++11 -MD -MT roofit/roofitcore/test/CMakeFiles/testRooAbsPdf.dir/testRooAbsPdf.cxx.o -MF roofit/roofitcore/test/CMakeFiles/testRooAbsPdf.dir/testRooAbsPdf.cxx.o.d -o roofit/roofitcore/test/CMakeFiles/testRooAbsPdf.dir/testRooAbsPdf.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx:23:19: error: ‘RooDateaSet’ was not declared in this scope ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx:23:30: error: template argument 1 is invalid ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx:23:30: error: template argument 2 is invalid ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx:24:67: error: expression list treated as compound expression in initializer [-fpermissive] ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx:24:67: error: cannot convert ‘RooCmdArg’ to ‘int’ in initialization ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooAbsPdf.cxx:25:15: error: base operand of ‘-&gt;’ is not a pointer ; - [2020-04-08T11:27:05.086Z] /mnt/build/workspace/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5316#issuecomment-610903243:1935,error,error,1935,https://root.cern,https://github.com/root-project/root/pull/5316#issuecomment-610903243,1,['error'],['error']
Availability,"I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooNLLVar.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooNLLVar.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooNLLVar.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooNLLVar.cxx ; - [2020-09-18T14:09:30.700Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooNLLVar.cxx:505:95: error: converting to ‘std::tuple&lt;double, double, double&gt;’ from initializer list would use explicit constructor ‘constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&& ...) [with _UElements = {double, double, double&}; &lt;template-parameter-2-2&gt; = void; _Elements = {double, double, double}]’ ; - [2020-09-18T14:09:30.700Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooNLLVar.cxx:537:54: error: converting to ‘std::tuple&lt;double, double, double&gt;’ from initializer list would use explicit constructor ‘constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&& ...) [with _UElements = {double&, double, double}; &lt;template-parameter-2-2&gt; = void; _Elements = {double, double, double}]’ . ### Warnings:; - [2020-09-18T14:09:27.848Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooMinimizerFcn.h:104:8: warning: ‘RooMinimizerFcn::_verbose’ will be initialized after [-Wreorder] ; - [2020-09-18T14:09:27.848Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooMinimizerFcn.h:91:37: warning: ‘double RooMinimizerFcn::_recoverFromNaNStrength’ [-Wreorder] ; - [2020-09-18T14:09:27.848Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooMinimizerFcn.cxx:90:1: warning: when initialized here [-Wreorder]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6383#issuecomment-694891058:3484,error,error,3484,https://root.cern,https://github.com/root-project/root/pull/6383#issuecomment-694891058,1,['error'],['error']
Availability,I/usr/include/x86_64-linux-gnu/freetype2 -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/minuit/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/foam/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/smatrix/inc -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT roofit/roofit/CMakeFiles/RooFit.dir/src/RooMathCoreReg.cxx.o -MF roofit/roofit/CMakeFiles/RooFit.dir/src/RooMathCoreReg.cxx.o.d -o roofit/roofit/CMakeFiles/RooFit.dir/src/RooMathCoreReg.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooMathCoreReg.cxx ; - [2020-09-04T14:11:09.239Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/src/RooMathCoreReg.cxx:31:32: error: definition of ‘RooMathCoreReg::RooMathCoreReg()’ is not in namespace enclosing ‘RooMathCoreReg’ [-fpermissive] ; - [2020-09-04T14:11:09.776Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/roofit/roofit/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6300#issuecomment-687169963:3093,error,error,3093,https://root.cern,https://github.com/root-project/root/pull/6300#issuecomment-687169963,1,['error'],['error']
Availability,IAGONAL. FCN=-0.464708 FROM HESSE STATUS=NOT POSDEF 31 CALLS 32 TOTAL EDM=6.13113e+08 STRATEGY= 2 ERR MATRIX NOT POS-DEF EXT PARAMETER APPROXIMATE STEP FIRST NO. NAME VALUE ERROR SIZE DERIVATIVE 1 Lumi 1.00000e+00 1.33665e-03 2.14402e-03 -1.26169e+05 2 Nmu 5.00000e+04 1.26146e+03 1.18624e-03 -3.61664e+05 3 RawRDst 4.03350e-02 1.19551e-01 2.56936e-03 -4.53011e+03 4 alpha_BFD1 0.00000e+00 2.39988e-01 2.01358e-03 -5.82940e+03 ERR DEF= 0.5 MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. COVARIANCE MATRIX CALCULATED SUCCESSFULLY FCN=-373434 FROM MIGRAD STATUS=CONVERGED 227 CALLS 228 TOTAL EDM=6.97829e-06 STRATEGY= 2 ERROR MATRIX ACCURATE EXT PARAMETER STEP FIRST NO. NAME VALUE ERROR SIZE DERIVATIVE 1 Lumi 3.00000e+00 1.68695e-05 2.00130e-03** at limit ** 2 Nmu 1.00000e+06 5.62344e+00 2.00135e-03** at limit ** 3 RawRDst 2.00000e-01 1.08871e-05 9.78010e-02** at limit ** 4 alpha_BFD1 3.00000e+00 2.35826e-04 5.29109e-03** at limit ** ; ERR DEF= 0.5 EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 4 ERR DEF=0.5 2.982e-16 5.637e-20 1.636e-27 1.292e-23 5.637e-20 9.972e-05 4.648e-18 1.119e-17; 1.636e-27 4.648e-18 2.073e-17 -4.928e-20; 1.292e-23 1.119e-17 -4.928e-20 1.309e-12; PARAMETER CORRELATION COEFFICIENTS; NO. GLOBAL 1 2 3 4; 1 0.00000 1.000 0.000 0.000 0.000; 2 0.00000 0.000 1.000 0.000 0.000; 3 0.00001 0.000 0.000 1.000 -0.000; 4 0.00001 0.000 0.000 -0.000 1.000; **********; ** 7 **SET ERR 0.5; **********; **********; ** 8 **SET PRINT 1; **********; **********; ** 9 **HESSE 2000; **********; COVARIANCE MATRIX CALCULATED SUCCESSFULLY; FCN=-373434 FROM HESSE STATUS=OK 23 CALLS 251 TOTAL; EDM=6.97828e-06 STRATEGY= 2 ERROR MATRIX ACCURATE; EXT PARAMETER INTERNAL INTERNAL; NO. NAME VALUE ERROR STEP SIZE VALUE; 1 Lumi 3.00000e+00 1.68695e-05 4.00261e-04 1.57079e+00; WARNING - - ABOVE PARAMETER IS AT LIMIT.; 2 Nmu 1.00000e+06 5.62344e+00 4.00271e-04 1.58650e+02; WARNING - - ABOVE PARAMETER IS AT LIMIT.; 3 RawRDst 2.00000e-01 1.08845e-05 4.89005e-02 2.051,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527705616:2711,ERROR,ERROR,2711,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527705616,1,['ERROR'],['ERROR']
Availability,"IC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lger",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:4491,Down,Downloads,4491,https://root.cern,https://github.com/root-project/root/issues/7249,1,['Down'],['Downloads']
Availability,"IF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:2490,Error,Error,2490,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Error'],['Error']
Availability,"IIUC a NullStmt would mean `if (true) {1;;}`. I'd prefer to keep value printing simple and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713611104:480,mainten,maintenance,480,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713611104,1,['mainten'],['maintenance']
Availability,"ILD/root-6.24.00/io/io/src/TFile.cxx:613; #14 0x00007fff84a92070 in TFile::TFile (this=0x1536420a0, fname1=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>) at /builddir/build/BUILD/root-6.24.00/io/io/src/TFile.cxx:489; #15 0x00007fff745b06a8 in ?? (); #16 0x00007fff745b0050 in ?? (); #17 0x00007fff7fb4c810 in cling::IncrementalExecutor::executeWrapper (this=0x153618cf0, function=..., returnValue=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376; #18 0x00007fff7fa85a50 in cling::Interpreter::RunFunction (this=0x1536176e0, FD=0x15490a240, res=0x7ffff78b83b0) at /usr/include/c++/10/bits/basic_string.h:907; #19 0x00007fff7fa8f2b4 in cling::Interpreter::EvaluateInternal (this=0x1536176e0, input=..., CO=..., V=0x7ffff78b83b0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391; #20 0x00007fff7fa8fd74 in cling::Interpreter::echo (this=0x1536176e0, input=""hsimple() /* '.x' tries to invoke a function with the same name as the macro */"", V=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1043; #21 0x00007fff7fbe224c in cling::MetaSema::actOnxCommand (this=0x153fa8a00, file=..., args=..., result=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:145; #22 0x00007fff7fbf2c10 in cling::MetaParser::isXCommand (this=0x153f66eb0, actionResult=; 0x7ffff78b81b0: cling::MetaSema::AR_Success, resultValue=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:319; #23 0x00007fff7fbf50b0 in cling::MetaParser::isCommand (this=0x153f66eb0, actionResult=; 0x7ffff78b81b0: cling::MetaSema::AR_Success, resultValue=0x7ffff78b83b0) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:124; #24 0x00007fff7fbf5360 in cling::MetaParser::i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-844784432:8518,echo,echo,8518,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-844784432,1,['echo'],['echo']
Availability,"IMO it's okay to remove `pyroot_experimental` without deprecation for 6.22: it was experimental until 6.22. It would certainly help users to check whether `pyroot_experimental` is set, and if so, issue an error message. A simple `if(pyroot_experimental) message(FATAL_ERROR ""pyroot_experimental is now called pyroot! Please reconfigure with -Dpyroot=On"")` will do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5772#issuecomment-638212832:205,error,error,205,https://root.cern,https://github.com/root-project/root/pull/5772#issuecomment-638212832,1,['error'],['error']
Availability,"INS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x498): undefined reference to `tbb::detail::r1::execution_slot(tbb::detail::d1::execution_data const*)'; /usr/bin/ld: TThreadExecutor.cxx:(.text._ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE[_ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x507): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long, tbb::detail::d1::execution_data const&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text._ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE[_ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x58e): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long, tbb::detail::d1::execution_data const&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text._ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE[_ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x5bc): undefined reference to `tbb::detail::r1::spawn(tbb::detail::d1::task&, tbb::detail::d1::task_group_context&)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/imt/CMakeFiles/Imt.dir/build.make:201: lib/libImt.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:33286: core/imt/CMakeFiles/Imt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931:38898,error,error,38898,https://root.cern,https://github.com/root-project/root/issues/11931,4,"['Error', 'error']","['Error', 'error']"
Availability,"ITNESS FOR A PARTICULAR PURPOSE.; ```. ```; /sbin/ldconfig -p | grep stdc++; 	libstdc++.so.6 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libstdc++.so.6; 	libstdc++.so.6 (libc6) => /usr/lib/i386-linux-gnu/libstdc++.so.6; 	libstdc++.so.6 (libc6) => /usr/lib32/libstdc++.so.6; ```. ```; root -b /tmp/test.cpp+; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing /tmp/test.cpp+...; In file included from test_cpp_ACLiC_dict dictionary payload:8:; /tmp/test.cpp:6:29: error: use of overloaded operator '+' is ambiguous (with operand types 'TString' and 'std::__cxx11::string' (aka 'basic_string<char>')); TString tryit = other + ""h"" + std::to_string(2);; ~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~; /home/user/builds/build-root_src-Desktop-Debug/include/TString.h:49:9: note: candidate function; TString operator+(const TString &s1, const TString &s2);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TEveUtil.h:116:15: note: candidate function; TEveException operator+(const TEveException &s1, const std::string &s2);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TString.h:51:9: note: candidate function; TString operator+(const char *cs, const TString &s);; ^; /home/user/builds/build-root_src-Desktop-Debug/include/TEveUtil.h:117:15: note: candidate function; TEveException operator+(const TEveException &s1, const TString &s2);; ^; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524#issuecomment-870074605:1125,error,error,1125,https://root.cern,https://github.com/root-project/root/issues/8524#issuecomment-870074605,1,['error'],['error']
Availability,"Ideally I'd like to follow the GCC diag format to some extent:; ```; <source>:1:1: error: DIAG; ```; and that suggests we should have the source line first. OTOH - the compiler is talking to the user providing the source, i.e. the user's input is that source, and that's what the compiler is referring to. For `RLogger` the situation is different, and the source line is merely the context provided to the developer. So yes, I now agree 100% and never thought of this major difference. Thanks a lot for pointing that out! I suggest:. ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run() [tree/dataframe/src/RLoopManager.cxx:658]: Starting event loop number 0.; ```; Is that any better? I'd prefer to put the message last, because the message might be multi-line, and I don't like either of these options:. 1) file in new line:; ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run(): Starting event loop number 0.; [tree/dataframe/src/RLoopManager.cxx:658]; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run(): And some more info.; [tree/dataframe/src/RLoopManager.cxx:660]; ```; It's hard to tell where that file belong to - is that *after* the `Info in...` line? Or before?. 2) file attached to last line:; ```; Info in ROOT.RDF, void ROOT::Detail::RDF::RLoopManager::Run(): Starting event loop number 0.; Some value: 17; Other value: 42 [tree/dataframe/src/RLoopManager.cxx:658]; ```; That gets rid of the ordering ambiguity, but makes it kinda weird, because it's messing with the output - is the other value `""42 [tree/dataframe/src/RLoopManager.cxx:658]""` or `42`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008#issuecomment-756846075:83,error,error,83,https://root.cern,https://github.com/root-project/root/issues/7008#issuecomment-756846075,1,['error'],['error']
Availability,"Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:; ```; if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {; gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());; }; ```; but doing that caused many errors in dictionary generation. So; apparently we can't do that. Instead, we can stop loading them at; runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2912:275,error,errors,275,https://root.cern,https://github.com/root-project/root/pull/2912,1,['error'],['errors']
Availability,"IdentifierInfo(""module"");; }; ; + if (!IsTemporary) {; Actions.Initialize();; ; // Prime the lexer look-ahead.; ConsumeToken();; + }; }; ; void Parser::LateTemplateParserCleanupCallback(void *P) {; ```. I think the JIT is really overwriting the stack:; ```; ==20514== Invalid read of size 1; ==20514== at 0x4500198: TUrl::SetUrl(char const*, bool) (TUrl.cxx:115); ==20514== by 0x44FFDD7: TUrl::TUrl(char const*, bool) (TUrl.cxx:78); ==20514== by 0x44D635F: TSystem::FindHelper(char const*, void*) (TSystem.cxx:760); ==20514== by 0x46853BF: TUnixSystem::AccessPathName(char const*, EAccessMode) (TUnixSystem.cxx:1532); ==20514== by 0x1BDF028F: ???; ==20514== by 0x1BDF003B: ???; ==20514== by 0x11881103: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:381); ==20514== by 0x116B01EF: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1162); ==20514== by 0x116B103B: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1414); ==20514== by 0x116AF7EF: cling::Interpreter::echo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*) (Interpreter.cpp:1064); ==20514== by 0x11A291F3: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*)::{lambda(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*)#1}::operator()(cling::Transaction*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::StringRef, cling::Value*) const (MetaSema.cpp:141); ==20514== by 0x11A29497: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158); ==20514== Address 0x1 is not stack'd, malloc'd or (recently) free'd; ==20514==; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-980788230:2989,echo,echo,2989,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-980788230,1,['echo'],['echo']
Availability,"If I add those lines in my files (on Ubuntu), I get this error:; `# error ""ROOT requires Visual Studio 2017 or higher.""`. > One can add; > ; > ```; > #if !defined(_MSC_VER); > #define _MSC_VER 0; > #endif; > ```; > ; > but in the current version there is no undefined behavior, so it is safe.; > I would even blame the compiller/preprocessor as the offending code; > ; > ```; > defined(_MSVC_LANG) && _MSVC_LANG >= 201703L; > ```; > ; > is very standard.; > ; > Best regards,; > ; > Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8267#issuecomment-851603253:57,error,error,57,https://root.cern,https://github.com/root-project/root/issues/8267#issuecomment-851603253,2,['error'],['error']
Availability,"If I check out the master and apply the changes from this pull request, then doing configure and make (without any other patches applied) works for me (Fedora 22, gcc-c++-5.1.1-4.fc22.x86_64).; What errors do you get?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/90#issuecomment-142009345:199,error,errors,199,https://root.cern,https://github.com/root-project/root/pull/90#issuecomment-142009345,1,['error'],['errors']
Availability,"If I compile this branch with gcc12 and then try to construct a `std::unique_ptr<TH1> p` on the ROOT prompt, I get; ```; In module 'std' imported from input_line_1:1: ; /opt/gcc/12.1.0/include/c++/12.1.0/type_traits:1032:12: error: 'std::is_move_constructible<std::default_delete<TH1> >' has different definitions in different modules; defined here ; struct is_move_constructible ; ^ ; /opt/gcc/12.1.0/include/c++/12.1.0/type_traits:1032:12: note: definition in module 'std.type_traits' is here ; In module 'std' imported from input_line_1:1: ; /opt/gcc/12.1.0/include/c++/12.1.0/bits/unique_ptr.h:467:7: error: 'std::unique_ptr<TH1, std::default_delete<TH1> >::get_deleter' from module 'std.memory' is not present in definition of 'std::unique_; ptr<TH1, std::default_delete<TH1> >' provided earlier ; get_deleter() noexcept ; ^ ; /opt/gcc/12.1.0/include/c++/12.1.0/bits/unique_ptr.h:269:11: note: definition has no member 'get_deleter' ; class unique_ptr ; ^ ; In module 'std' imported from input_line_1:1: ; /opt/gcc/12.1.0/include/c++/12.1.0/bits/unique_ptr.h:432:7: error: 'std::unique_ptr<TH1, std::default_delete<TH1> >::operator=' from module 'std.memory' is not present in definition of 'std::unique_pt; r<TH1, std::default_delete<TH1> >' provided earlier ; operator=(nullptr_t) noexcept ; ^ ; /opt/gcc/12.1.0/include/c++/12.1.0/bits/unique_ptr.h:269:11: note: definition has no member 'operator=' ; class unique_ptr ; ^ ; In module 'std' imported from input_line_1:1: ; /opt/gcc/12.1.0/include/c++/12.1.0/bits/unique_ptr.h:422:2: error: 'std::unique_ptr<TH1, std::default_delete<TH1> >::operator=' from module 'std.memory' is not present in definition of 'std::unique_pt; r<TH1, std::default_delete<TH1> >' provided earlier ; operator=(unique_ptr<_Up, _Ep>&& __u) noexcept ; ^ ; /opt/gcc/12.1.0/include/c++/12.1.0/bits/unique_ptr.h:269:11: note: definition has no member 'operator='; class unique_ptr; ^; [...]; ```; and loads of similar errors...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1216428468:225,error,error,225,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1216428468,5,['error'],"['error', 'errors']"
Availability,"If I have understood well, the issue is that now the Functor class passed to the RooMinimizer/Fitter contains a pointer to the RooMinimizerFcn that can disappear. I think the problem is that we expose the Fitter class in the RooMinimizer and it is a static pointer. The Fitter returns a cloned copy of the FCN (the functor) and it can be alive when the RooMinimizer and RooMinimizerFcn are gone. A possible solution is to change the RooMinimizer to use just the ROOT::Math::Minimizer and do not expose the functor to the user. I think this can be fixed later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1440115911:338,alive,alive,338,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1440115911,1,['alive'],['alive']
Availability,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/155#issuecomment-231976502:267,failure,failures,267,https://root.cern,https://github.com/root-project/root/pull/155#issuecomment-231976502,1,['failure'],['failures']
Availability,"If I understand correctly, this means that ACLiC is pretty much broken (currently on Arch and Gentoo, likely more platforms in the future). It's not just an issue of the test suite: `interp->getDynamicLibraryManager()->searchLibrariesForSymbol` picks up unrelated binaries from the current directory if they happen to contain the symbol that is being searched, breaking compilation down the road.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-948726914:382,down,down,382,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-948726914,1,['down'],['down']
Availability,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/; ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o; generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib; -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame; -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics; -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/; ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit; -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore; -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore; ld: warning: libguide.so, needed by /cvmfs/; ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found; (try using -rpath or -rpath-link); /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:; undefined reference to `TCling::TCling(char const*, char const*, char; const* const*)'; make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>; wrote:. > And do *not* link against -lCling please! -lCore is enough.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>; > .; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904#issuecomment-743974226:51,error,error,51,https://root.cern,https://github.com/root-project/root/issues/6904#issuecomment-743974226,2,"['Error', 'error']","['Error', 'error']"
Availability,"If IMT is disabled, force the execution policy to be `ROOT::Fit::ExecutionPolicy::kSerial`, warning the user that a change in the execution policy has been made. This should fix the errors in the tests built without IMT. When the support for `kMultitProcess` is finished, maybe we should change this and force the execution policy to be `kMultitProcess`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/871:182,error,errors,182,https://root.cern,https://github.com/root-project/root/pull/871,1,['error'],['errors']
Availability,"If a RooAddPdf or RooAddModel has negative coefficients, the; RooAddGenContext can't be used and we need to fall back to the generic; RooGenContext. To achieve this without code duplication, a new templated static; function has been added to the `RooAddGenContext` that returns either a; new RooAddGenContext when there are no negative coeffiecients, or a; generic RooGenContext when there are. If for an existing RooAddGenContext the coeficients of the pdf are; changed to be negative, it will throw an error the next time you try to; generate an event and kindly ask the user to create a new generator; context. It was checked with the example code from #7252 that generating events for AddPdfs with negative coefficients works now. A separate commit in this PR applies some general code modernization to the RooAddGenContext.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10912:504,error,error,504,https://root.cern,https://github.com/root-project/root/pull/10912,1,['error'],['error']
Availability,"If a field name doesn't exist in the RNTupleModel, we raise an; exception with the problematic field name and NTuple. There are; some other possible errors to be considered:; * Calling GetViewCollection on a non-collection field?; * Calling GetView<T> on a field with a different type U?. Before this change, missing names caused an out of range exception.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7736:149,error,errors,149,https://root.cern,https://github.com/root-project/root/pull/7736,1,['error'],['errors']
Availability,"If fname is not the correct variable for this case (as it is empty or null), which one should I use? Or is the whole thing in the wrong method/class? I havent been able to compile root locally as it throws me the error; ```; ./root.exe: symbol lookup error: ./root.exe: undefined symbol: _ZN5TRintC1EPKcPiPPcPvibb ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10656#issuecomment-1146788499:213,error,error,213,https://root.cern,https://github.com/root-project/root/pull/10656#issuecomment-1146788499,2,['error'],['error']
Availability,"If found, value will be used as first candidate when searching for browser on file system; Provide functionality to dump JSON file for canvas painting; Window error should be resolved by @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1918:159,error,error,159,https://root.cern,https://github.com/root-project/root/pull/1918,1,['error'],['error']
Availability,"If it is useful to know, this bug persists with v6.26.02 as well as v6.26.04. ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 76880068; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 68 instead of 38440068; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 76880068; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382#issuecomment-1185297088:558,Error,Error,558,https://root.cern,https://github.com/root-project/root/issues/10382#issuecomment-1185297088,6,['Error'],['Error']
Availability,"If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch.; ```; c++: error: unrecognized command line option ‘-fcolor-diagnostics’; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3389:210,error,error,210,https://root.cern,https://github.com/root-project/root/pull/3389,2,['error'],['error']
Availability,"If one overloads `RooAbsArg::redirectServersHook()`, one also needs to; call the `redirectServersHook()` of the base class. Otherwise, important; things that must be done when redirecting the servers of a `RooAbsReal`; or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the; `RooAbsPdf::_normSet` member was not reset when redirecting servers; because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11194:307,failure,failures,307,https://root.cern,https://github.com/root-project/root/pull/11194,1,['failure'],['failures']
Availability,"If one tries to update a directory inside an existing file, Snapshot complains:; `Error in <TFile::mkdir>: An object with name hi exists already`. This fixes the problem by using the `returnExistingDirectory` option in `mkdir`. First mentioned in the forum [here](https://root-forum.cern.ch/t/snapshot-complains-when-updating-existing-directory/37935). Similar to [PR4649](https://github.com/root-project/root/pull/4649).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964:82,Error,Error,82,https://root.cern,https://github.com/root-project/root/pull/4964,1,['Error'],['Error']
Availability,"If one uses the `VisualizeError` and `FillColor` options of [RooAbsReal::plotOn()](https://root.cern.ch/doc/master/classRooAbsReal.html#a5d22644c9cc8178ea1c9dca93fdab48e), for example like this:; ```C++; using namespace RooFit;; model.plotOn(frame, VisualizeError(*r, 1), FillColor(kOrange));; ```; You get a false warning:; ```; WARNING:Plotting -- Fill color or style was set for plotting ""model"", but these only have an effect when; 'DrawOption(""F"")' for fill is used at the same time.; ```; That warning should not appear there, because `FillColor` or `FillStyle` actually have an effect because the define the filling of the error band enabled by `VisualizeError`. The expected behavior is:; * the warning should only appear if `VisualizeError` is not given as a command argument. To reproduce the problem: run the [rf610_visualerror.C tutorial](https://github.com/root-project/root/blob/master/tutorials/roofit/rf610_visualerror.C).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9859:630,error,error,630,https://root.cern,https://github.com/root-project/root/issues/9859,1,['error'],['error']
Availability,"If one want to keep usage of virtual `Copy` methods, in each such method one should check if source object type match `this` object - using dynamic cast. Otherwise it may produce segmentation violation. In my mind, current implementation of copy constructors with using of virtual `Copy` methods is wrong and error prone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10942#issuecomment-1203473969:309,error,error,309,https://root.cern,https://github.com/root-project/root/pull/10942#issuecomment-1203473969,1,['error'],['error']
Availability,"If one wants to replace some servers of a RooAbsArg with; other servers, this is the the only option you have:. ```c++; bool RooAbsArg::redirectServers(const RooAbsCollection& newSetOrig,; bool mustReplaceAll, bool nameChange,; bool isRecursionStep); ```. That's not so great, because if the new servers have different names,; thes old names must be set as the `""ORIGNAME:<myname>""` attribute for; the function to know which servers should be replaced. These attributes are generally not reset, and this mutation of the; server attributes can cause trouble down the line. Notably, this causes trouble in the BatchMode when compiling the; computation graph for a given normalization set. One single new server; might replace differently-named original servers. In that case, the new; servers get *two* ""ORIGNAME:"" attributes and the the `redirectServers()`; function doesn't know what to do. Also, it's inefficient because of the string matching. For this reason, a new overload is suggested, where one can simply; specify what should replace what in a lookup map, and it doesn't matter; if the names are different:. ```c++; bool RooAbsArg::redirectServers(; std::unordered_map<RooAbsArg *, RooAbsArg *> const &replacements; ); ```. The implementation of `redirectServers()` calls; `RooAbsProxy::changePointer()`, for which such a new overload also had; to be added. Using the new `RooAbsArg::redirectServers()` overload that takes a; lookup map of server replacements, the helper class that compiles the computation graph for a given normalization set can be; improved such that it's not necessary to set the `""ORIGNAME:""`; attributes of new servers. This fixes some failures in the RooFit tutorials with BatchMode where; some servers eventually aggregated multiple `""ORIGNAME:""` attributes,; causing `redirectServers()` to error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12928:557,down,down,557,https://root.cern,https://github.com/root-project/root/pull/12928,3,"['down', 'error', 'failure']","['down', 'error', 'failures']"
Availability,If provided pointer type does not match with type read; from JSON check inheritance. It can be that pointer type; is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5330:142,error,error,142,https://root.cern,https://github.com/root-project/root/pull/5330,1,['error'],['error']
Availability,"If the parameters of a function are outside of the definition range,; all kinds of errors might occur. PDFs might be negative, have negative; integrals, coefficients for the summation of PDFs might degenerate, ... Previously, RooFit was just returning a high function value to Minuit.; This value was always the same, though.; Like this, Minuit cannot compute a gradient to get out of this region,; because all bad parameter points yield the same function value. With this commit, RooFit can pack information about the ""badness"" of a; parameter point into the mantissa of a NaN, e.g. how much negative the; values of a PDF came out or how far the sum of PDF coefficients is from; 1. This information is packed into NaN using ""RooNaNPacker"", and passed; through the computation graph. It is finally unpacked in RooMinimizerFcn; before being handed to the minimiser. This allows for the calculation of; gradients, enabling the fitter to recover from an invalid state more; easily. When NaNs are being unpacked, they are presented to Minuit as maximum; function value + badness * penaltyStrength, so a gradient can be; computed that points away from the bad region. The maximum function; value comes from previous minimisation steps, the badness is the payload; of the packed NaN, and the strength can be set from the outside. If the minimisation starts out in an undefined region, and the maximum; function value is not (yet) known, 0. + badness * strength is used.; Once a well-defined region is found, the valid function values are; offset such that they are all lower than 0. In this way, Minuit is; encouraged to step into the well-defined regions, and sees a rapidly; rising function when stepping out. When fit results are saved, though,; this offset is subtracted in order to recover ""correct"" NLL values. Concretely:; - Add RooNaNPacker.; - Add a function to set the magnitude of the penalty term that's; supposed to drive the minimiser away from undefined regions.; - Add a function to RooMinim",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6401:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/6401,2,"['error', 'recover']","['errors', 'recover']"
Availability,"If the parameters of a function are outside of the definition range,; all kinds of errors might occur. PDFs might be negative, have negative; integrals, coefficients for the summation of PDFs might degenerate, ... Previously, RooFit was just returning a high function value to Minuit.; This value was always the same, though.; Like this, Minuit cannot compute a gradient to get out of this region,; because all bad parameter points yield the same function value. With this commit, RooFit can pack information about the ""badness"" of a; parameter point into the mantissa of a NaN, e.g. how much negative the; values of a PDF came out or how far the sum of PDF coefficients is from; 1. This information is packed into NaN using ""RooNaNPacker"", and passed; through the computation graph. It is finally unpacked in RooMinimizerFcn; before being handed to the minimiser. This allows for the calculation of; gradients, enabling the fitter to recover from an invalid state more; easily. When NaNs are being unpacked, they are presented to Minuit as maximum; function value + badness * penaltyStrength, so a gradient can be; computed that points away from the bad region.; If the minimisation starts out in an undefined region, and the maximum; function value is unknown, 0. + badness * strength is passed on.; Once a well-defined region is found, the valid function values are; offset such that they are all lower than 0. This way, Minuit is; encouraged to step into the well-defined regions. When fit results are; saved, this offset is subtracted, in order to recover ""correct"" NLLs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6383:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/6383,3,"['error', 'recover']","['errors', 'recover']"
Availability,"If the user disables fortran but a fortran compiler is actually; present, then hist/CMakeLists.txt will still try to compile; hbook (which results in a failure). This patch explicitly sets the fortran compiler to not found; in order to prevent this from occurring.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/128:152,failure,failure,152,https://root.cern,https://github.com/root-project/root/pull/128,1,['failure'],['failure']
Availability,"If the user doesn't provide a histogram model in distributed mode, the; merging of different histograms coming from different distributed tasks; would not work since the histograms would most probably have; incompatible bins. Rather than wait for failures like. `Error in <Merge>: Cannot merge histograms - limits are inconsistent`. that happen only when the distributed execution has already started and; may be hidden inside worker logs, raise an error in the local user; machine. An example of the error raised with this change: running this snippet; ```python; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; from dask.distributed import Client, LocalCluster. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":; df = RDataFrame(10, daskclient = create_connection()).Define(""x"",""rdfentry_""); m = ROOT.RDF.TH1DModel(""name"",""title"",10,0,10); df.Histo1D(m, ""x""); print(""After first Histo1D""); df.Histo1D((""name"",""title"",10,0,10), ""x""); print(""After second Histo1D""); df.Histo1D(""x""); print(""After third Histo1D""); ```; results in; ```; After first Histo1D; After second Histo1D; Traceback (most recent call last):; File ""/home/vpadulan/projects/rootcode/distrdf-histo-nomodel/test.py"", line 17, in <module>; df.Histo1D(""x""); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Proxy.py"", line 240, in _create_new_op; op = Operation.create_op(self.proxied_node._new_op_name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 118, in create_op; return SUPPORTED_OPERATIONS[name](name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 60, in __init__; raise TypeError(textwrap.fill(message)); TypeError: A histogram was created without a model. This cannot work in; distributed mode because hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10368:247,failure,failures,247,https://root.cern,https://github.com/root-project/root/pull/10368,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"If we are going to disable the ClassImp macro, the commit log must include a full explanation of why 'it does more harm than good'. . Note that in the problem linked ( https://root-forum.cern.ch/t/error-cling-loadlibrary-while-compiling-in-root-6-08/30340/5 ) the user code is literally erroneous as it goes out of its way to make sure that the ClassImp (for Implementation) declaration is parsed multiple times by adding it to the header file **outside** the code guard.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2563#issuecomment-439032064:197,error,error-cling-loadlibrary-while-compiling-in-root-,197,https://root.cern,https://github.com/root-project/root/pull/2563#issuecomment-439032064,1,['error'],['error-cling-loadlibrary-while-compiling-in-root-']
Availability,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:327,down,down,327,https://root.cern,https://github.com/root-project/root/pull/5420,2,"['Error', 'down']","['Error', 'down']"
Availability,"If we call `gInterpreter->GenerateDictionary(""std::vector<int>"")` with; missing second parameter (which expects to pass the corresponding include); we crash. This patch enables error reporting and removes the default argument to; tell the user that nullptr is not expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724:177,error,error,177,https://root.cern,https://github.com/root-project/root/pull/1724,1,['error'],['error']
Availability,"If we don't fix this, then maybe we just add a error that building from a directory that contains `*?+` isn't supported. Otherwise users just get really cryptic error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/923#issuecomment-326573127:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/923#issuecomment-326573127,2,['error'],['error']
Availability,"If we don't understand ""why"" it crashes, the cause could be a memory error (reading deleted memory, reading past the end of array, reading uninitialized memory; because of llvm block alloc, valgrind often can't see those). Changing the text compiled could result in change in the size of the array, in the order of the allocations and deallocations, etc. that result in the error becoming rare (1 out 1000 instead of 1 out 5). . And essentially I am asking if you ""arbitrarily"" tried to add the const and observed an improvement or if you knew that the lack of const lead llvm/clang to take a code path with a (known?) deficiency or unsupported features or some other problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9810#issuecomment-1030093823:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/9810#issuecomment-1030093823,2,['error'],['error']
Availability,If we generate a dictionary with a C++ module with rootcling we; should write in the payload that we generated a C++ module.; This way we can actually print a *reliable* warning when we fail; to load the C++ module during runtime. Without this we can only; speculate if a missing C++ module is intentional.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1511:160,reliab,reliable,160,https://root.cern,https://github.com/root-project/root/pull/1511,1,['reliab'],['reliable']
Availability,"If we restrict the man pages to the starting options, the maintenance is minimal. They do not change very often.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487#issuecomment-357180830:58,mainten,maintenance,58,https://root.cern,https://github.com/root-project/root/pull/1487#issuecomment-357180830,1,['mainten'],['maintenance']
Availability,"If we understand correctly, this should not block 6.26n anymore as the patches that cause this failure have been reverted in 6.26 (they are still present in master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1026064852:95,failure,failure,95,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1026064852,1,['failure'],['failure']
Availability,"If we use -fimplicit-module-maps this means that cling will find all files called module.modulemap on the include paths. In certain cases the same modulemap can be present in two locations causing module redefinition errors. This patch teaches cling to work with explicitly specified modulemaps in -fno-implicit-module-maps mode. It moves the generation of the overlay file closer to the CIFactory so that we can reuse the modulemap loading code before the interpreter object was set up. The patch also turns off the implicit module map discovery and explicitly specifies the ROOT-related modulemap files. The modulemap files need to be enumerated in both TCling and rootcling. Rootcling requires -fno-rtti build mode and we cannot use the utilities in TROOT (also because rootcling_stage1 is built before libCore). This requires the extraction of the `GetSysRoot`, `GetIncludeDir` and `GetEtcDir` in the `ROOT::FoundationUtils` which is can be used throughout the entire core component. This fixes ROOT-10354.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553:217,error,errors,217,https://root.cern,https://github.com/root-project/root/pull/4553,1,['error'],['errors']
Availability,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3918#issuecomment-499774204:165,failure,failure,165,https://root.cern,https://github.com/root-project/root/pull/3918#issuecomment-499774204,1,['failure'],['failure']
Availability,"If you provide also a global `operator+=(string, TString)`, but not in all cases. E.g., passing `TString` to `std::string` ctor will continue to yield ambiguity errors. While it might lower number of lines we need to change in ROOT the users (who enable C++17) are still affected. Changes to ROOT are minimal. Where are just a few places where we need explicitly tell to compiler that we want `std::string_view`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522#issuecomment-298961935:161,error,errors,161,https://root.cern,https://github.com/root-project/root/pull/522#issuecomment-298961935,1,['error'],['errors']
Availability,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? ; In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes.; ""I will close this issue I guess."" - is it because you personally don't need this feature?; When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-865961497:133,down,download,133,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-865961497,3,['down'],"['download', 'downloaded']"
Availability,Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -Icore/metacling/test -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -std=c++14 -MD -MT core/metacling/test/CMakeFiles/TClingTest.dir/TClingCallFuncTests.cxx.o -MF core/metacling/test/CMakeFiles/TClingTest.dir/TClingCallFuncTests.cxx.o.d -o core/metacling/test/CMakeFiles/TClingTest.dir/TClingCallFuncTests.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingCallFuncTests.cxx ; - [2021-11-05T19:09:23.977Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingCallFuncTests.cxx:296:23: error: missing template arguments before ‘RAII’ ; - [2021-11-05T19:09:23.977Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingCallFuncTests.cxx:300:8: error: expected primary-expression before ‘)’ token,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244#issuecomment-962147566:2426,error,error,2426,https://root.cern,https://github.com/root-project/root/pull/9244#issuecomment-962147566,2,['error'],['error']
Availability,Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -Icore/metacling/test -I/mnt/build/workspace/root-pullrequests-build/root/test/unit_testing_support -isystem googletest-prefix/src/googletest/googletest/include -isystem googletest-prefix/src/googletest/googlemock/include -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -std=c++14 -MD -MT core/metacling/test/CMakeFiles/TClingTest.dir/TClingCallFuncTests.cxx.o -MF core/metacling/test/CMakeFiles/TClingTest.dir/TClingCallFuncTests.cxx.o.d -o core/metacling/test/CMakeFiles/TClingTest.dir/TClingCallFuncTests.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingCallFuncTests.cxx ; - [2021-11-05T19:14:12.102Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingCallFuncTests.cxx:296:23: error: missing template arguments before ‘RAII’ ; - [2021-11-05T19:14:12.102Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingCallFuncTests.cxx:300:8: error: expected primary-expression before ‘)’ token,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244#issuecomment-962150433:2426,error,error,2426,https://root.cern,https://github.com/root-project/root/pull/9244#issuecomment-962150433,2,['error'],['error']
Availability,Iiuc https://maskray.me/blog/2021-05-16-elf-interposition-and-bsymbolic argues that -Bsymbolic should be fine for libCling and is superior to no symbolic interposition,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885086132:13,mask,maskray,13,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885086132,1,['mask'],['maskray']
Availability,ImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4704:129: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;float&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4707:113: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;float&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4707:168: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;float&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4725:85: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;unsigned int&gt;::TClaImpProxy()’ ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4725:136: error: no matching function for call to ‘ROOT::Internal::TClaImpProxy&lt;unsigned int&gt;::TClaImpProxy()’ . And 42 more. ### Warnings:; - JENKINS-19022: warning: possible memory leak due to Git plugin usage; see: https://wiki.jenkins-ci.org/display/JENKINS/Remove+Git+Plugin+BuildsByBranch+BuildData ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4684:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4705:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4726:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tree/treeplayer/G__TreePlayer.cxx:4747:4: warning: control reaches end of non-void function [-Wreturn-type] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/674#issuecomment-310377486:2113,error,error,2113,https://root.cern,https://github.com/root-project/root/pull/674#issuecomment-310377486,2,['error'],['error']
Availability,"Impl.hxx(106,1): error C2664: with [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj] ; - [2020-07-30T14:02:44.253Z] C:\build\workspace\root-pullrequests-build\root\hist\histv7\inc\ROOT/RFitImpl.hxx(106,1): error C2664: [ [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj] ; - [2020-07-30T14:02:44.253Z] C:\build\workspace\root-pullrequests-build\root\hist\histv7\inc\ROOT/RFitImpl.hxx(106,1): error C2664: HISTIMPL=ROOT::Experimental::Detail::RHistImplBase&lt;ROOT::Experimental::Detail::RHistData&lt;1,double,std::vector&lt;double,std::allocator&lt;double&gt;&gt;,ROOT::Experimental::RHistStatContent,ROOT::Experimental::RHistStatUncertainty&gt;&gt; [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj] ; - [2020-07-30T14:02:44.253Z] C:\build\workspace\root-pullrequests-build\root\hist\histv7\inc\ROOT/RFitImpl.hxx(106,1): error C2664: ] [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj] ; - [2020-07-30T14:02:44.254Z] C:\build\workspace\root-pullrequests-build\root\hist\histv7\inc\ROOT/RFitImpl.hxx(113,1): error C2664: 'void ROOT::Fit::BinData::Add(const double *,double,const double *,double,double)': cannot convert argument 1 from 'ROOT::Experimental::Hist::RCoordArray&lt;1&gt;' to 'double' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj] ; - [2020-07-30T14:02:44.254Z] C:\build\workspace\root-pullrequests-build\root\hist\histv7\inc\ROOT/RFitImpl.hxx(116,1): error C2664: 'bool ROOT::Experimental::RFit::AdjustError(const ROOT::Fit::DataOptions &,double &,double)': cannot convert argument 2 from 'double' to 'double &' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj] ; - [2020-07-30T14:02:44.254Z] C:\build\workspace\root-pullrequests-build\root\hist\histv7\inc\ROOT/RFitImpl.hxx(118,1): error C2664: 'void ROOT::Fit::Bi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6103#issuecomment-666384918:1836,error,error,1836,https://root.cern,https://github.com/root-project/root/pull/6103#issuecomment-666384918,1,['error'],['error']
Availability,"Implement and use a thread-safe container for caching strings that are created and used in the computation graph. Notably, these include the strings representing column names generated by `Define`. This fixes the recent failures seen on MacOS in the `dataframe-vary` unittest. Since that underlines a thread-safety issue in the overall initialisation phase of MT RDF runs, it should be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15652:220,failure,failures,220,https://root.cern,https://github.com/root-project/root/pull/15652,1,['failure'],['failures']
Availability,Implement reversed graphs for error bars and log scale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12235:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/12235,1,['error'],['error']
Availability,"Implement the possibility to save TGraph* as .csv, .tsv and .txt; as requested here https://github.com/root-project/root/issues/9491. Test example:. ```; {; auto c = new TCanvas(""c"",""A Simple Graph without axis"",700,500);. const Int_t n = 10;; auto gr = new TGraph(n);; gr->SetTitle(""A Simple Graph"");; gr->GetXaxis()->SetTitle(""X axis"");; gr->GetYaxis()->SetTitle(""Y axis"");. auto gre = new TGraphErrors(n);; gre->GetXaxis()->SetTitle(""X axis"");; gre->GetYaxis()->SetTitle(""Y axis"");; gre->SetTitle(""A Simple Graph with errors"");. auto gra = new TGraphAsymmErrors(n);; gra->GetXaxis()->SetTitle(""X axis"");; gra->GetYaxis()->SetTitle(""Y axis"");; gra->SetTitle(""A Simple Graph with asymmetric errors"");. auto grb = new TGraphBentErrors(n);; grb->GetXaxis()->SetTitle(""X axis"");; grb->GetYaxis()->SetTitle(""Y axis"");; grb->SetTitle(""A Simple Graph with bent errors"");. Double_t x, y, exl, exh, eyl, eyh;; for (Int_t i=0;i<n;i++) {; x = i*0.123;; y = 10*sin(x+0.2);; exl = x*0.01;; exh = x*0.1;; eyl = y*0.01;; eyh = y*0.1;; gr->SetPoint(i,x,y);; gre->SetPoint(i,x,y);; gre->SetPointError(i,exl,eyl);; gra->SetPoint(i,x,y);; gra->SetPointError(i,exl,exh, eyl, eyh);; grb->SetPoint(i,x,y);; grb->SetPointError(i,exl,exh, eyl, eyh);; }. gr->Draw(""A*L"");; gr->SaveAs(""graph.csv"", ""title"");; gr->SaveAs(""graph.tsv"", ""title"");; gr->SaveAs(""graph.txt"", ""title"");; gr->SaveAs(""graph.C"");; gre->SaveAs(""grapherror.csv"", ""title"");; gre->SaveAs(""grapherror.tsv"", ""title"");; gre->SaveAs(""grapherror.txt"", ""title"");; gra->SaveAs(""graphaerror.csv"", ""title"");; gra->SaveAs(""graphaerror.tsv"", ""title"");; gra->SaveAs(""graphaerror.txt"", ""title"");; grb->SaveAs(""graphberror.csv"", ""title"");; grb->SaveAs(""graphberror.tsv"", ""title"");; grb->SaveAs(""graphberror.txt"", ""title"");. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10365:521,error,errors,521,https://root.cern,https://github.com/root-project/root/pull/10365,3,['error'],['errors']
Availability,Implement what is suggested here:; https://root-forum.cern.ch/t/histogram-drawing-options-e-do-not-clip-errorbars/41857/12,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6697:104,error,errorbars,104,https://root.cern,https://github.com/root-project/root/pull/6697,1,['error'],['errorbars']
Availability,"Implemented the systematic variations in the Higgs to Four Leptons tutorial.; The revised plot shows the up and down variations; of the total Monte Carlo weight (scale factor), together with; the uncertainty band in between those lines.; The C++ version of the full tutorial is now also available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13907:112,down,down,112,https://root.cern,https://github.com/root-project/root/pull/13907,2,"['avail', 'down']","['available', 'down']"
Availability,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162:204,error,error-handling,204,https://root.cern,https://github.com/root-project/root/pull/6162,1,['error'],['error-handling']
Availability,"Implicit casts of buffers to contiguous memory pointers are rather error prone. It would be better to follow the example of the STL containers and implement a `data()` member function. Like this, we can also use `std::data()` to get a pointer to the contiguous data in the RTensor implementation, which closes #13498. The new `data()` method is now used everywhere inside TMVA, but implicit casting is also kept for backwards compatibility. Alternative to https://github.com/root-project/root/pull/13322, notably implementing the suggestion of @lmoneta:; https://github.com/root-project/root/pull/13322#discussion_r1286002161",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16515:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/16515,1,['error'],['error']
Availability,Importing NumPy in python after importing ROOT results in segmentation error on Python 3.11.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874:71,error,error,71,https://root.cern,https://github.com/root-project/root/issues/12874,1,['error'],['error']
Availability,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5327:84,failure,failure,84,https://root.cern,https://github.com/root-project/root/pull/5327,1,['failure'],['failure']
Availability,"Improve class design around `RAttrBase` classes. ; Introduce `RAttrValue<typename T>` template class to access single value from attributes.; Use it in all attributes classes and existing drawable classes. ; Let specify in single place type, string name and default value for each attribute. Add following draw options for `RH1`:; * `Error()`; * `Text()`; * `Marker()`; * `Bar()`; * `Line()`; * `Lego()`. Add `Arrow()` draw option for `RH2`. Fix problem with 3D drawings - objects which position related to frame (which is not visible in 3D) now positioned and moved correctly after pad resize. Provide draw options overview macros: `draw_rh1.cxx` (see attached image), `draw_rh2.cxx`, `draw_rh3.cxx`. ![draw_rh1](https://user-images.githubusercontent.com/4936580/85689202-b7b98e80-b6d2-11ea-82fe-2a3b33fa0b37.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5926:334,Error,Error,334,https://root.cern,https://github.com/root-project/root/pull/5926,1,['Error'],['Error']
Availability,"Improve error message when the requested type doesn't match the on-disk type:; ```cpp; // underlying column is a double; auto view = ntuple->GetView<float>(""myDouble"");; ```. Before:; ```; Unexpected column type: Real64 of column #0 for field myDouble; ```; After:; ```; On-disk type `Real64` of column #0 for field `myDouble` is not convertible to requested type `Real32`; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/8227,1,['error'],['error']
Availability,Improve startup by 15% (avoid redundant work).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10354:30,redundant,redundant,30,https://root.cern,https://github.com/root-project/root/pull/10354,1,['redundant'],['redundant']
Availability,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16281:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/16281,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. ; - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3966:232,avail,available,232,https://root.cern,https://github.com/root-project/root/pull/3966,1,['avail'],['available']
Availability,Improve the tutorial ErrorIntegral.C with the explanations given by @lmoneta in this forum post: https://root-forum.cern.ch/t/tutorial-fit-errorintegral-c-explanation/44210/3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7738:21,Error,ErrorIntegral,21,https://root.cern,https://github.com/root-project/root/pull/7738,2,"['Error', 'error']","['ErrorIntegral', 'errorintegral-c-explanation']"
Availability,Improve tutorial ErrorIntegral.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7738:17,Error,ErrorIntegral,17,https://root.cern,https://github.com/root-project/root/pull/7738,1,['Error'],['ErrorIntegral']
Availability,Improved error message on wrong exit code in test driver,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/904:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/904,1,['error'],['error']
Availability,"In C++14, this would require a definition. This should solve the linking errors about ""undefined reference""s in the incrementals.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12352:73,error,errors,73,https://root.cern,https://github.com/root-project/root/pull/12352,1,['error'],['errors']
Availability,"In Fedora 29, with gcc, there is a problem with __builtin_cpu_supports() function. It causes an undefined symbol error during linking, unless you link against -lgcc explicitly. There was already code in the file to protect against this bug in some versions of gcc, but as the problems seems to exist under various gcc build configurations, I change the code to include the fix for every gcc version. See also: https://github.com/root-project/root/issues/6855",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6867:113,error,error,113,https://root.cern,https://github.com/root-project/root/pull/6867,1,['error'],['error']
Availability,"In GCC9, operator== and operator!= are no longer member functions of STL iterators (seen in _Rb_tree_iterator). This means they cannot be obtained anymore with GetListOfMethods of the iterator class. Such change broke the iteration of STL classes from Python when using (old) cppyy alone in GCC9. The addition of the operators to the iterator class still happened when importing ROOT because; in that case gApplication is initialized to TPyROOTApplication, which is required in Utility::AddBinaryOperator to add the operators. This PR adds the necessary logic so that operator== and operator!= are also added to the iterator proxy class when using cppyy alone in GCC9. The addition is done lazily as a last attempt before throwing an error in the comparison.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4678:734,error,error,734,https://root.cern,https://github.com/root-project/root/pull/4678,1,['error'],['error']
Availability,"In PyROOT it is possible to convert a Numa array in a std.vector. However when the types are different instead of having an error, a wrong conversion happens. ; Here is an example:; ```python; import ROOT; import numpy as np. x = np.array([1., 2., 3.]); v = ROOT.std.vector('float')(x); print(v); ```; The obtained result is ; ```; { 0.00000f, 1.87500f, 0.00000f }; ```; without getting any error. . Instead if I use the correct type:; ```; x = np.array([1.,2.,3.], dtype='float32'); v = ROOT.std.vector('float')(x); print(v); ```; I obtain the correct result. ; This can cause give wrong results when calling from Python C++ functions taking std::vector as argument and the wrong type of Numpy array is passed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12230:124,error,error,124,https://root.cern,https://github.com/root-project/root/issues/12230,2,['error'],['error']
Availability,"In PyROOT-land, the EnableAutoloading also lives in cppyy.py. I'm pretty sure though that you can defer it to e.g. a call inside the constructor of TPyROOTApplication. You can test that and if it works okay, remove the call in experimental, see whether that solves the issue. I can move the call down to the backend as well (only reason not to do so is that current cppyy works with ancient PyPy and such a move would break that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2266#issuecomment-405978982:296,down,down,296,https://root.cern,https://github.com/root-project/root/pull/2266#issuecomment-405978982,1,['down'],['down']
Availability,"In Python 3, you can't do this because `None` is special:; ```Python; DataError=ROOT.RooAbsArg.None # syntax error!; ```. The tutorials used some workarounds that were either obfuscating `None`; by using the enum value directly, or used the more verbose `getattr`; approach:; ```Python; DataError=ROOT.RooAbsData.ErrorType(2); DataError=getattr(ROOT.RooAbsData, ""None""); ```. This commit pythonizes DataError with the usual string-to-enum; pythonization pattern already used for `LineColor` or `LineStyle` to; avoid this uglieness. One can do now:; ```Python; DataError=""None""; DataError=None; ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9721:109,error,error,109,https://root.cern,https://github.com/root-project/root/pull/9721,2,"['Error', 'error']","['ErrorType', 'error']"
Availability,"In ROOT, we should be able to lookup global variables, macros, and functions defined in external AST source. (For example gROOT, std::vector..). When R binding is On, we import R related header files such as TRInterface.h and RExports.h. These header files include Constants.h, which defines `PI` like this:. ```; # define M_PI 3.14159265358979323846 /* pi */; # define PI M_PI; ```. In theory, we should be able to lookup this as well, but rootmap files are; broken and it doesn't have information about macros. So what happened; were tutorials define PI by themselves (which is conflicting with above; definition) but ROOT didn't emit errors. In modules, we're trying to preload modules so that we don't miss these namespaces and macros. PI is also visible from ROOT and; treated as a macro, so users don't have to define it themselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1824:637,error,errors,637,https://root.cern,https://github.com/root-project/root/pull/1824,1,['error'],['errors']
Availability,"In RooAbsPdf, the following check is done to check if the normalization; set has changed:; ```C++; RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet); ```. This works, but like the previous pointer comparison it still gives; false results if the `_normSet` was replaced buy another RooArgSet at; the same memory location. The problem can be reproduced with this code:. ```C++; using namespace RooFit;. // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y); RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));; RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));; RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf; RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution; // which should not be the case!; std::cout << model.getVal(x) << std::endl;; std::cout << model.getVal({x, y}) << std::endl;; ```. The solution would be to replace the `_normSet` member directly with; its unique ID value, but then it could not be used anymore. Hence we; need both. This commit also adds a new private `RooAbsPdf` member functions to set; the `_normSet` together with the new `_normSetId` member, and one; protected `isActiveNormSet(RooArgSet const*)` function. The latter; function is comparing the input to the current `_normSet`, but shortcuts; to `false` is the ID does not match with the last `_normSet` ID. Like; this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in; RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11176:1613,failure,failures,1613,https://root.cern,https://github.com/root-project/root/pull/11176,1,['failure'],['failures']
Availability,"In TBufferFile::WriteFastArrayString, we had. ```; if (n < 255) {; *this << (UChar_t)n;; } else {; *this << (UChar_t)255;; *this << n;; }; ```. A recent commit changed the type of the n parameter from Int_t to Long64_t. This is effectively an incompatible change in the on-disk format, but only for strings which are at least 255 characters long. Further, ReadFastArrayString is still reading an Int_t, so this version of ROOT cannot read files that it writes. Resolve by changing WriteFastArrayString to explicitly write an Int_t. Also move the bounds check on the length to before writing anything into the buffer. Fixes a failure seen in the unit tests of the ATLAS EventInfo package in the dev3LCG build. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887:625,failure,failure,625,https://root.cern,https://github.com/root-project/root/pull/14887,1,['failure'],['failure']
Availability,"In TGrpahErrors TGraphAsymmErrors and TGraphBentErrors, the error bars were drawn inside the marker when the marker was bigger than the error bars. This was reported in this forum post: https://root-forum.cern.ch/t/error-bars-inside-markers-with-draw-same/60631",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16372:60,error,error,60,https://root.cern,https://github.com/root-project/root/pull/16372,3,['error'],"['error', 'error-bars-inside-markers-with-draw-same']"
Availability,"In Ubuntu snap chrome version is used and it does not correctly; translate command line arguments, making problem to use it in batch.; Error already communicated by Axel:; https://bugs.launchpad.net/ubuntu/+source/snap/+bug/1893020; Once it is fixed, this commit can be reverted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6260:135,Error,Error,135,https://root.cern,https://github.com/root-project/root/pull/6260,1,['Error'],['Error']
Availability,"In `RooAbsCategoryLValue::setBin()`, there is a check for passing a; named binning, because the function doesn't support named binnings. However, if a binning with that name doesn't exist, it is fine to not; error out, because the default range is used. This supports the fit in this forum post:; https://root-forum.cern.ch/t/roosimultaneous-and-roofftconvpdf/53606. There are also two additional commits with some code modernization as usual.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12305:208,error,error,208,https://root.cern,https://github.com/root-project/root/pull/12305,1,['error'],['error']
Availability,"In `aclicDataMemberSelection`, the errors:; ```; /home/sftnight/build/workspace/root-pullrequests-build/roottest/root/io/uniquePointer/aclic01.C: In function ‘int checkDict(const char*)’:; /home/sftnight/build/workspace/root-pullrequests-build/roottest/root/io/uniquePointer/aclic01.C:31:48: warning: ‘this’ pointer is null [-Wnonnull]; 31 | std::cerr << ""Class "" << c->GetName() << "" not found!\n"";; | ^~~~~~~~~~~~~~~; In file included from /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/io/uniquePointer/aclic01_C_ACLiC_dict.cxx:41:; /home/sftnight/build/workspace/root-pullrequests-build/roottest/root/io/uniquePointer/aclic01.C: In function ‘int checkDict(const char*)’:; /home/sftnight/build/workspace/root-pullrequests-build/roottest/root/io/uniquePointer/aclic01.C:31:48: warning: ‘this’ pointer is null [-Wnonnull]; 31 | std::cerr << ""Class "" << c->GetName() << "" not found!\n"";; | ^~~~~~~~~~~~~~~; ```; are new to me. Was it already there in the nightly?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551#issuecomment-1276891989:35,error,errors,35,https://root.cern,https://github.com/root-project/root/pull/11551#issuecomment-1276891989,1,['error'],['errors']
Availability,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747:1752,failure,failures,1752,https://root.cern,https://github.com/root-project/root/issues/12747,1,['failure'],['failures']
Availability,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7907:502,alive,alive,502,https://root.cern,https://github.com/root-project/root/pull/7907,1,['alive'],['alive']
Availability,"In both branches we do parsing. The 'expensive' branch is when we have to allocate the memory for the contents we will parse while the less expensive branch only gives some memory fragment which contains what we need. There are two scenarios wrt unloading:; (a) There is nothing relevant being unloaded -- easy;; (b) Some content was unloaded -- since we are parsing either way we will re-evaluate what's available to the interpreter. If the entity was gone we will return different result (this PR does not introduce that level of caching which will alter the result). The lines with both asserts make sure if the assumptions of (b) change, that is, we start to unload in a different way the stored parse buffers. In particular, if for some reason, the content behind the cached FileID changes we will catch it and fail. So far I cannot see how that can happen. If you can trigger such a failure I'd be happy to have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-414137105:405,avail,available,405,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-414137105,2,"['avail', 'failure']","['available', 'failure']"
Availability,"In case it helps, I tracked down where template functions called from cppyy are actually getting instantiated. I had initially thought this was happening from TClingCallFunc::compile_wrapper but it actually happens already before, via TListOfFunctions::FindObject (see the below stack trace). ```; Thread 1 ""python3"" hit Breakpoint 1, 0x00007fffefb3c760 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) (); from /data/home/bendavid/rootdev8/install/lib/libCling.so; (gdb) bt; #0 0x00007fffefb3c760 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #1 0x00007fffefb6be37 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #2 0x00007fffefb6bfbf in cling::DeclCollector::Transform(clang::DeclGroupRef&) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #3 0x00007fffefb6c161 in cling::DeclCollector::HandleTopLevelDecl(clang::DeclGroupRef) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #4 0x00007fffeffafad0 in clang::MultiplexConsumer::HandleTopLevelDecl(clang::DeclGroupRef) () from /data/home/bendavid/rootdev8/install/lib/libCling.so; #5 0x00007ffff085a95c in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (); from /data/home/bendavid/rootdev8/install/lib/libCling.so; #6 0x00007fffefac27dd in cling::findAnyFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) (); from /data/home/bendavid/rootdev8/install/lib/libCling.so; #7 0x00007fffefac852a in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::DeclContext*, llvm::StringRef, llvm::SmallVectorImpl<clang::Expr*> const&, bool, clang::ASTContext&, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-969416959:28,down,down,28,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-969416959,1,['down'],['down']
Availability,"In case of a weighted histogram a weight was applied to compute the expected error for every histogram when the error is not equal to sqrt(N). Now this is done only in case the user perform the fit using the new option ""PW"", otherwise it is assumed the histogram is not weighted and no correction is used for the expected error. See also post https://root-forum.cern.ch/t/does-pearson-chi-square-fit-use-expected-error-or-observed-error-in-th1-fit/55816/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13403:77,error,error,77,https://root.cern,https://github.com/root-project/root/pull/13403,4,['error'],"['error', 'error-or-observed-error-in-']"
Availability,"In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). . ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8987:130,error,error,130,https://root.cern,https://github.com/root-project/root/issues/8987,3,['error'],['error']
Availability,"In civetweb socket handler check different operation codes; According to RFC6455, all not-supported codes should be handled as; failure. Means application should get close message for the socket. Prevent getting close message twice. This PR fixes #9207",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9209:128,failure,failure,128,https://root.cern,https://github.com/root-project/root/pull/9209,1,['failure'],['failure']
Availability,"In different ROOT components, it is convenient to have a helper function that takes a string, similar to the `str.split` function that Python has for example:. ```Python; ""a,b,c,d,e"".split("","") # returns ['a', 'b', 'c', 'd', 'e']; ```. Currently, there is code duplication to provide such a function in separate ROOT components like `roofit` and `hist`:; * https://github.com/root-project/root/blob/dcf920904564bbdca08a6acfa70019bbc24b3897/hist/hist/src/TFormula.cxx#L1678; * https://github.com/root-project/root/blob/dcf920904564bbdca08a6acfa70019bbc24b3897/roofit/roofitcore/src/RooHelpers.cxx#L67. As suggested by @Axel-Naumann in https://github.com/root-project/root/pull/8801#discussion_r683437844, this general function should be moved into `foundation/core` to about the code duplication and make the string-splitting functionality available the every ROOT component. It is still an open question what the name of the function should be (as well as the name of the file it's in), and whether it should return a `std::vector<std::string>` or `std::vector<std::string_view>`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8807:839,avail,available,839,https://root.cern,https://github.com/root-project/root/issues/8807,1,['avail'],['available']
Availability,"In either the original test (via `TClingClassInfo`) or the latest example `TClass::GetClass(""B<NS::A<int>>"")`, the code triggers attempts to instantiate a template which fails (due to the type being only forward declared). The later error messages (after the full declaration is loaded) indicates that some of the traits template instance are NOT being re-instantiated based using the complete information (and instead the one based on the incomplete information are used). Technically, we don't know yet whether it is a problem with the transaction unloader or the the transaction decl capture (or possibly even on the failure detection). What we do know is that the desired behavior [in last example](https://github.com/root-project/root/issues/13815#issuecomment-1759250811) is that after the execution of `TClass::GetClass(""B<NS::A<int>>"")` (i.e at the end of line 2), `Cling` should NOT be holding an instantiation of the trait (not sure which)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1766925765:233,error,error,233,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1766925765,2,"['error', 'failure']","['error', 'failure']"
Availability,"In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built.; Error message:; ```; /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; ```; This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included.; https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8513:61,Error,Error,61,https://root.cern,https://github.com/root-project/root/issues/8513,2,"['Error', 'error']","['Error', 'error']"
Availability,"In general, when (as in this case) numpy array is of the same number of dimensions as the vector, I would expect the vector to be filled. If it is of different dimensions, I would expect an error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12718#issuecomment-1529426554:190,error,error,190,https://root.cern,https://github.com/root-project/root/issues/12718#issuecomment-1529426554,1,['error'],['error']
Availability,"In https://github.com/root-project/root/pull/5283/files#diff-731544d47414211363492c1443589e15L132 is there any reason why there is no `property |= kIsArray;` ? (It is there in similar blocks like in TClingDataMemberInfo.cxx of this PR - https://github.com/root-project/root/pull/5283/files#diff-cb40dcc7a52ad261ee66558b009a961cL446 and also in the files I refactored in PR #5243 ). . If I add that line to the block, then I get a checksum mismatch on a streamer (if I am interpreting the roottest error logs correctly) - ; ```; --- Using ROOT from /home/reik/root/root-build; --- root/io/double32/template32.ref	2019-12-28 12:45:09.779147688 +0530; +++ root/io/double32/template32.clog	2020-04-03 10:44:03.968974661 +0530; @@ -32,7 +32,7 @@; OBJ: TRealData	v2.regdouble	Description of persistent data members : 0 at: [deleted from log]; The following should be a Double32_t: Double32_t; ; -StreamerInfo for class: m02<Double32_t>, checksum=0x8610c861; +StreamerInfo for class: m02<Double32_t>, checksum=0x4dcf66a2; map2<Double32_t,Double32_t,alloc<pair<Double32_t,Double32_t> > > BASE offset= [deleted from log] type= 0 ; int fN offset= [deleted from log] type= 6 ; vector<Double32_t> ff1 offset= [deleted from log] type=300 ,stl=1, ctype=9, ; make[1]: *** [Makefile:84: template32] Error 1; At least 1 tests have failed:; --- FAILING TEST: make -C . template32; make: *** [/home/reik/root/roottest//scripts/Rules.mk:15: summary] Error 1; ```; Maybe the error logs can be fixed by changing the reference file here - https://github.com/root-project/roottest/blob/master/root/io/double32/template32.ref . But I think since the checksum is not matching, the streamers are also changing and perhaps that is not behaviour we want. . @pcanal Can you help please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5283#issuecomment-608263039:497,error,error,497,https://root.cern,https://github.com/root-project/root/pull/5283#issuecomment-608263039,4,"['Error', 'error']","['Error', 'error']"
Availability,"In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and; a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave; leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342:50,error,error,50,https://root.cern,https://github.com/root-project/root/pull/5342,1,['error'],['error']
Availability,In methods like `FindBranch` or `GetBranch` nullptr as argument causing failure. Avoid casting to `(char *)`. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10882:72,failure,failure,72,https://root.cern,https://github.com/root-project/root/pull/10882,1,['failure'],['failure']
Availability,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8566:887,error,error,887,https://root.cern,https://github.com/root-project/root/pull/8566,1,['error'],['error']
Availability,In most error situations preallocated buffer was not released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4901:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/4901,1,['error'],['error']
Availability,"In my other computer, I get now a difference of 4 pixels using latest ROOT master. So it seems to me that this is not a small rounding error. - Interactive mode: 598x576 pixels; - Batch mode: 596x572 pixels. Could it be just an outdated calibration from many years ago? See this https://github.com/root-project/root/commit/c3de92f4d1ad4372febc81955a877345d4de3a9c. Check out this code below. It seems there is always the same offset on my current computer. Whenever I run in batch mode, I get 4 pixels difference wrt batch mode. My hypothesis is that this could solved if those numbers are adapted, potentially depending on Windows / Mac with an if. It could be even added as a roottest. ```cpp; #include <TCanvas.h>; #include <TROOT.h>; #include <iostream>; void test_pixels() {; for(Int_t w=500;w<=900;w++) {; for(Int_t h=500;h<=600;h++) {; TCanvas *c = new TCanvas(""c1"",""c1"",w,h);; Int_t diffw = w-c->GetWw();; Int_t diffh = h-c->GetWh();; if(!gROOT->IsBatch()) {; if (diffw !=2 || diffh !=24); std::cout << diffw << "" "" << diffh << "" "" << w << "" "" << h << std::endl;; }; else {; if (diffw !=4 || diffh !=28); std::cout << diffw << "" "" << diffh << "" "" << w << "" "" << h << std::endl;; }; delete c;; }; }; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11004#issuecomment-1471869803:135,error,error,135,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1471869803,1,['error'],['error']
Availability,In number of cases over the last years we have seen a need to call clang APIs with valid source locations. The interpreter generates code and valid locations can be problematic. This patch allows cling to return a valid source location even when no code was processed. This way we can provide our modules infrastructure proper source locations to activate the module visibility rules on locations which have common predecessor. The common predecessor is essential when we compare entities for diagnostics or reasoning about module visibility. This PR should fix the nightly failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5056:574,failure,failures,574,https://root.cern,https://github.com/root-project/root/pull/5056,1,['failure'],['failures']
Availability,In order to avoid packaging errors from rpmlint:; root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/270:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/270,1,['error'],['errors']
Availability,In order to debug not understood test failures that we could; not reproduce outside of the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10892:38,failure,failures,38,https://root.cern,https://github.com/root-project/root/pull/10892,1,['failure'],['failures']
Availability,"In order to solve ROOT-10109, and until #3640 is completed and merged, we temporarily add a pythonisation both in PyROOT and experimental PyROOT to get the overloads for GetBinErrorUp; and GetBinErrorLow of TH1 obtained via using declarations from TH2. On the other hand (and unrelated to the change above), we eliminate the use of `TInterpreter::EnableAutoLoading` from cppyy in experimental PyROOT, given the tests failures seen last night:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/393/; due to the deprecation introduced by https://github.com/root-project/root/pull/4868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4895:417,failure,failures,417,https://root.cern,https://github.com/root-project/root/pull/4895,1,['failure'],['failures']
Availability,In order to use the right c++ version in `CHECK_CXX_SOURCE_COMPILES` one needs to set `CMAKE_REQUIRED_FLAGS`. Without this it wouldn't pick up e.g. `std::string_view` when compiling with `-D cxx17=ON` which would cause a compilation failure when ROOT later defines `std::string_view` itself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2609:233,failure,failure,233,https://root.cern,https://github.com/root-project/root/pull/2609,1,['failure'],['failure']
Availability,"In other PR @amadio made comment:. > We do want to use the source directory includes when possible. But there is problem with several generated headers like `RConfigure.h` - is it the only one?; Only because of it we have to add `$ROOTSYS/include` in ROOT build paths.; Ending in situation, that every header available twice - via source dir and via '$ROOTSYS/include` dir. This should be avoided in any case. I propose a solution - generate RConfigure.h in special directory like `${CMAKE_BINARY_DIR}/generated_includes` and copy it into `${CMAKE_BINARY_DIR}/includes`. And in the list of include paths for ROOT libraries only source dirs and `${CMAKE_BINARY_DIR}/generated_includes` should be used.; Do we agree on this? . @amadio @vgvassilev @Axel-Naumann @oshadura",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600617968:309,avail,available,309,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600617968,1,['avail'],['available']
Availability,"In particular this should prevent issues that are noticed on Windows as:. ""Run-Time Check Failure #0 - The value of ESP was not properly saved across a function call.; This is usually a result of calling a function declared with one calling convention with a; function pointer declared with a different calling convention."". And a related (but 'harmless') case of `fLeafCount` being set right after `fBranchCount` was set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13277:90,Failure,Failure,90,https://root.cern,https://github.com/root-project/root/pull/13277,1,['Failure'],['Failure']
Availability,"In preparation of moving TError to foundation, this PR removes the direct use of gEnv and gSystem from TError. The functionality is implemented by helper functions instead, which are registered and de-registered upon creation and destruction gEnv and gSystem. The three tasks implemented by helpers are. - Read the ROOT environment in order to get the value of `Root.ErrorIgnoreLevel`; - Get the last system error message; - Abort the process",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5855:367,Error,ErrorIgnoreLevel,367,https://root.cern,https://github.com/root-project/root/pull/5855,2,"['Error', 'error']","['ErrorIgnoreLevel', 'error']"
Availability,"In previous ROOT versions, if you set the value of a variable with; `RooRealVar::setVal()`, the value was silently clippend when it was; outside the variable range. This silent mutation of data can be; dangerous. With ROOT 6.28, an exception will be thrown instead. If you; know what you are doing and want to restore the old clipping behavior,; you can do so with `RooRealVar::enableSilentClipping()`, but this is not; recommended. This change caught a logic error in `stressRooFit` where a background; fraction was randomized to be outside the `[0,1]` interval. That part of; the test was therefore removed (it was already removed from the; corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10470:460,error,error,460,https://root.cern,https://github.com/root-project/root/pull/10470,1,['error'],['error']
Availability,In principle I agree with Philippe: the cost of checking out root.git and building only the minuit2 subset is minimal. But we're not going to make a deal breaker out of this: as long as our (esp maintenance) cost of integrating your approach is minimal we should just merge it. Guilherme will guide you through the implementation issues should there be any left.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-370741281:195,mainten,maintenance,195,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-370741281,1,['mainten'],['maintenance']
Availability,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793929312:115,down,downloading,115,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793929312,2,['down'],"['down', 'downloading']"
Availability,"In response to @dpiparo pointing out this failure http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. The DNN with architecture=Standard is to phased out. In this case it would make sense to disable the corresponding test, since the failure is not to be fixed. If this is acceptable, feel free to merge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/605:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/pull/605,2,['failure'],['failure']
Availability,"In root/tutorials/tmva/keras/GenerateModel.py line 60:; from keras.utils.visualize_util import plot ; is outdated and hence shows error:; File ""./GenerateModel.py"", line 17, in <module>; from keras.utils.visualize_util import plot; ModuleNotFoundError: No module named 'keras.utils.visualize_util'; Instead, use:; from keras.utils import plot_model; plot_model(model, to_file='model.png', show_shapes=True)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5014:130,error,error,130,https://root.cern,https://github.com/root-project/root/pull/5014,1,['error'],['error']
Availability,In some cases such as ROOT::Experimental::Internal::TUniWeakPtr the information about if a data member is transient is kept in the template pattern (residing in Core.pcm). The template instantiation is elsewhere (in the particular case) the ROOTHistDraw.pcm. In this scenario the LinkDef request for the particular instantiation is done after Core.pcm is built leaving no chance for rootcling to transform the comment into an annotation attibute attached to the template pattern. This does not happen very often but it may occur regularly when we start writing more templated code. We should store the IO comments for the template patterns independently on if a particular template instantiation was required. This is a modules-specific issue because the PCH includes the bulk of header files altogether and this helps the current system to place this information at the required place. This should fix the failures in tutorial-hist-h1draw and cmssw CXXModules IB:; Fatal Root Error: @SUB=TProtoClass::FindDataMember; data member with index 0 is not found in class edm::value_ptr<vector<unsigned long> >.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4430:907,failure,failures,907,https://root.cern,https://github.com/root-project/root/pull/4430,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854:117,error,error,117,https://root.cern,https://github.com/root-project/root/issues/11854,2,['error'],['error']
Availability,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5993:257,error,errors,257,https://root.cern,https://github.com/root-project/root/pull/5993,8,['error'],"['error', 'errors']"
Availability,"In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,; the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been; populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a; crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has; been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7365:223,down,down,223,https://root.cern,https://github.com/root-project/root/pull/7365,1,['down'],['down']
Availability,"In that case `PYTHON_VERSION_STRING_Development_Main` is not set:; ```; CMake Error at tutorials/CMakeLists.txt:80 (if):; if given arguments:. ""VERSION_LESS"" ""3.8"". Unknown arguments specified; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13292:78,Error,Error,78,https://root.cern,https://github.com/root-project/root/pull/13292,1,['Error'],['Error']
Availability,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14185:266,robust,robust,266,https://root.cern,https://github.com/root-project/root/pull/14185,1,['robust'],['robust']
Availability,"In the CPU case in `RooBatchCompute`, we can use `std::vector` instead; of fixed-size stack arrays to pass data around, and the `Batches` object; can be passed to the compute functions by reference. This fixes crashes with models where the numer of inputs for a RooAbsArg; exceeds the maximum number of parameters supported by the fixed-size; array buffer, at least in the CPU case. In the GPU case, we now throw a nicer error if the buffers are to small,; instead of just crashing. The `stressRooFit` tests for the CPU or GPU batch mode still pass after; this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10362:421,error,error,421,https://root.cern,https://github.com/root-project/root/pull/10362,1,['error'],['error']
Availability,"In the ROOT 6.26 the default position of the legend in the output of RooMCStudy is not optimal, as part of numbers is cut away: see the top-right plot in the rf801 example https://root.cern.ch/doc/v626/rf801__mcstudy_8C.html . This used to be better positioned in 6.24: https://root.cern.ch/doc/v624/rf801__mcstudy_8C.html . It would be great to make the position optimal by default. (In the meantime, is there an easy way to change it manually?). Extra wish: would it be possible to invoke the Gaussian fit not only for the pull plot, but also for the ""value"" and ""error"" plots? (The two other plots in the top row of the rf801 example).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10931:566,error,error,566,https://root.cern,https://github.com/root-project/root/issues/10931,1,['error'],['error']
Availability,"In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:; ```; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined; ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15155:305,Error,Error,305,https://root.cern,https://github.com/root-project/root/pull/15155,1,['Error'],['Error']
Availability,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566:472,error,error,472,https://root.cern,https://github.com/root-project/root/pull/10566,3,['error'],"['error', 'errors']"
Availability,"In the RooDecay case, the evalCerf function called internally in; RooGaussModel passes a purely imaginary argument to; `RooMath::faddeeva_fast`. In this case, the Faddeeva function is equal; to a scaled complementary error function, which can be evaluated more; efficiently using `std::erfc`. The speedup can be seen in the stressRooFit tests that involve the; RooDecay, for example:; `Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)`; The test can be run individually to verify this speedup:. ```; `./stressRooFit -n 22`; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9925:217,error,error,217,https://root.cern,https://github.com/root-project/root/pull/9925,2,['error'],['error']
Availability,"In the RooFit `JSONInterface` there are some template specializations that are defined in the translation unit but are not declared in the header file. This causes linker errors, because the compiler doesn't know that it has to look for the specializations, as explained here: https://stackoverflow.com/questions/11773960/do-template-specialisations-belong-into-the-header-or-source-file. To solve this problem, these small one-line functions are just inlined in the header. Needs to be backported to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12891:171,error,errors,171,https://root.cern,https://github.com/root-project/root/pull/12891,1,['error'],['errors']
Availability,"In the `rf205` tutorial and the associated stressRooFit test, the `bkg` RooAddPdf was created using the `sig1frac`, while it is clearly the idea to use the `bkg1frac` parameter. This is fixed in this commit, also fixing the name of the `bkg1frac` parameter, which was accidentally set to `sig1frac` (probably a copy-paste error). However, to not change the output of the tutorial and the stressRooFit test, the value of `bkg1frac` was set to the same value as `sig1frac`, such that this commit only fixes the model but doesn't change the tutorial and test output.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985:322,error,error,322,https://root.cern,https://github.com/root-project/root/pull/11985,1,['error'],['error']
Availability,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6343:712,error,error,712,https://root.cern,https://github.com/root-project/root/issues/6343,2,['error'],['error']
Availability,"In the case of the storage location, this change turns an assert; failure into an exception:. Before:; ```; Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'; ```. After:; ```; C++ exception with description ""empty storage location""; ```. For the RNTuple name, the empty string only caused issues when added to; a TFile (but that's enough to ban it):. ```cpp; std::string path = ""some_file.root""; auto file = TFile::Open(path.c_str(), ""RECREATE"");; {; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);; ntuple->Fill();; }; file->Close();; delete file;. // throws; auto ntuple = RNTupleReader::Open("""", path);; ```; ```; C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8511:66,failure,failure,66,https://root.cern,https://github.com/root-project/root/pull/8511,1,['failure'],['failure']
Availability,"In the case of unweighted datasets, the current implementation of; `RooNLLVar::computeBatched` retreived the weight for every event with; `RooDataSet::get()`. This has a lot of overhead and significantly slows; down the evaluation. With this commit, it is correctly assumed that the weight is the same; for every event. This has been done in the code already before but it; was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7404:211,down,down,211,https://root.cern,https://github.com/root-project/root/pull/7404,2,['down'],['down']
Availability,"In the error code pass of TKey::Read*, the buffer cleanup was not done (it; was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5390:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/5390,1,['error'],['error']
Availability,"In the error code path of TKey::Read*, the buffer cleanup was not done (it; was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/5391,1,['error'],['error']
Availability,"In the file you sent me, if you remove line 16, does the error disappear when running qhelpgenerator index.qhp ? (i tried it locally and it seems to work, but I am running an older version of Ubuntu.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011066649:57,error,error,57,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011066649,1,['error'],['error']
Availability,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15477:109,down,down,109,https://root.cern,https://github.com/root-project/root/pull/15477,2,"['down', 'error']","['down', 'error']"
Availability,"In the latest force push, I tried to fix all remaining compile errors and warnings that the CI brought up. I used fixup commits with interactive rebase to keep the commit history clean and actually make sure the earlier commits compile as well now. Evidently, I have failed to fix the esoteric error with ambiguous overload in the strongly typed optional parameter classes. There is actually even a paper about this (http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1008r0.pdf), which I thought should provide a solution, but apparently not on all compilers, so I'll have to try something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915993953:63,error,errors,63,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915993953,2,['error'],"['error', 'errors']"
Availability,"In the meantime I ran into another issue that concerns empty directories. In the files I'm trying to merge, it rarely happens that a directory/tree is empty because no events have been selected (for that specific selection). In such a case `TFileMerger` raises a seg fault (vanilla `hadd` From tags/v6-20-04@v6-20-04); ```; #6 0x00007faa3fd0e43e in TFileMerger::MergeRecursive(TDirectory*, TList*, int) () from /cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/libRIO.so; #7 0x00007faa3fd0d29c in TFileMerger::PartialMerge(int) () from /cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/libRIO.so; #8 0x0000000000405e9a in main (); ```; Trying my local version built with debug symbols and running gdb didn't yield further info. I was a bit puzzled to see this, since I could swear that I successfully merged files with empty directories in the past. And in fact, it works with root `6.18.00` from `/cvmfs/sft.cern.ch/lcg/views/LCG_96/x86_64-centos7-gcc8-opt` (without complaining - maybe there should be a message with default verbosity settings). ; I diff'ed `hadd.cxx` as well as the `TFileMerger` source and header files between master and v6-18-00-patches, but did not see anything that would lead to these seg-faults. Do you have an idea where this could come from?. Since this is only loosely related to the actual PR, it might not be the right place to discuss this. I can post it elsewhere if that would make sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5995#issuecomment-656582698:267,fault,fault,267,https://root.cern,https://github.com/root-project/root/pull/5995#issuecomment-656582698,2,['fault'],"['fault', 'faults']"
Availability,"In the next version (v6.26, being released in a few weeks) an exception is thrown on top of the error message that is currently printed. Then in a future version users will be able to tell RDF what default values to use for disappearing/reappearing branches, which gives users a way to deal with this case more nicely. For now, I am afraid the best workaround is to not read or write such branches from RDF (if you only read/write well-behaved branches everything works), either by fixing the trees themselves or by only Snapshotting a subset of the columns. I'm closing this in favor of #8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006463581:96,error,error,96,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006463581,1,['error'],['error']
Availability,"In the old PyROOT, it might have made sense to re-implement `__setattr__` for ROOT in a way that it sets an attribute of the `gbl_namespace` (`cppyy.gbl` in new PyROOT), because back at that time setting an attribute to the global namespace also meant forwarding the definition to the interpreter and the variable was then also available in C++. However, this is not supported anymore by the new PyROOT, so the custom `__setattr__` appears unneeded and this commits suggests to remove it. See also the discussion here:; https://its.cern.ch/jira/browse/ROOT-10451",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14486:328,avail,available,328,https://root.cern,https://github.com/root-project/root/pull/14486,2,['avail'],['available']
Availability,"In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9507:437,avail,available,437,https://root.cern,https://github.com/root-project/root/issues/9507,1,['avail'],['available']
Availability,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:773,error,errors,773,https://root.cern,https://github.com/root-project/root/pull/7616,3,"['error', 'redundant']","['errors', 'redundant', 'redundantly']"
Availability,"In theory, if the software stack (not just ROOT) uses modules the RSS should also go down. Maybe that's worth trying on your end...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1926475274:85,down,down,85,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1926475274,1,['down'],['down']
Availability,"In this PR:. - Protection against null pointer dereference if fOff==nullptr.; - Better error messages if the images cannot be loaded. . Tag @couet . Also, I've tried to compile ROOT version with -Dgminimal=ON but it turns out one needs also -Dasimage=ON to make it for ROOT possible to load the standard pixmaps. Would that make sense to include the support of these pixmaps into -Dgminimal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6714:87,error,error,87,https://root.cern,https://github.com/root-project/root/pull/6714,1,['error'],['error']
Availability,"In this context, the smart-ptr could stay just within the scope of this routine and pass the raw pointer down to the callees ... which is completely semantically correct since those routine do not take ownership of the buffers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2361#issuecomment-408908921:105,down,down,105,https://root.cern,https://github.com/root-project/root/pull/2361#issuecomment-408908921,1,['down'],['down']
Availability,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11584:95,error,error,95,https://root.cern,https://github.com/root-project/root/pull/11584,5,['error'],['error']
Availability,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12845:157,error,error,157,https://root.cern,https://github.com/root-project/root/pull/12845,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1252699407:316,avail,available,316,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252699407,1,['avail'],['available']
Availability,"In working on the HistFactory, there were many small things that I encountered on the way. This is a collection of fixes, modernisations, improved warnings, better error handling and similar small things.; This is step 1 flushing those from the branch before actually putting up the histfactory stuff.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7439:164,error,error,164,https://root.cern,https://github.com/root-project/root/pull/7439,1,['error'],['error']
Availability,"Include two new status values, may cause problem when; showing error messages for such value",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7219:63,error,error,63,https://root.cern,https://github.com/root-project/root/pull/7219,1,['error'],['error']
Availability,"InclusionDirective&gt;: Module TKey.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLEngine.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLSetup.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TList.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLSetup.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5557/8175] Generating G__XMLParser.cxx, ../../lib/libXMLParser_rdict.pcm, ../../lib/libXMLParser.rootmap, ../../lib/XMLParser.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLParser.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5558/8175] Generating G__Net.cxx, ../../lib/libNet_rdict.pcm, ../../lib/libNet.rootmap, ../../lib/Net.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::Inclus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:2676,Error,Error,2676,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:13365,Error,Error,13365,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,2,['Error'],['Error']
Availability,InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:17865,Error,Error,17865,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module io,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:20862,Error,Error,20862,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module algorithm resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:18147,Error,Error,18147,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:21144,Error,Error,21144,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcep,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:13272,Error,Error,13272,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,2,['Error'],['Error']
Availability,InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctyp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:17772,Error,Error,17772,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:20769,Error,Error,20769,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module algorithm resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:18239,Error,Error,18239,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cctype resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module stdexcept resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iostream resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module iomanip resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module limits resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module cmath resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module st,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:21236,Error,Error,21236,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,Inconsistent behaviour on failed jitting (transaction rollback issue?),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:54,rollback,rollback,54,https://root.cern,https://github.com/root-project/root/issues/16577,1,['rollback'],['rollback']
Availability,Increase test tolerence,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4025:14,toler,tolerence,14,https://root.cern,https://github.com/root-project/root/pull/4025,1,['toler'],['tolerence']
Availability,"Increase the tolerance for testVector34, as done in 43cae6c9ab93723b880eba4a4c5a20403cd6659a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/652:13,toler,tolerance,13,https://root.cern,https://github.com/root-project/root/pull/652,1,['toler'],['tolerance']
Availability,Increase tolerance in stressHistogram buffer tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138:9,toler,tolerance,9,https://root.cern,https://github.com/root-project/root/pull/2138,1,['toler'],['tolerance']
Availability,Increased tolerance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/652:10,toler,tolerance,10,https://root.cern,https://github.com/root-project/root/pull/652,1,['toler'],['tolerance']
Availability,IncrementalJIT.cpp:401:1: error: version control conflict marker in file ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:404:3: error: ‘AllocInfo’ was not declared in this scope ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:405:12: error: expected ‘;’ before ‘m_RWData’ ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:428:1: error: expected primary-expression before ‘public’ ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:431:41: error: a function-definition is not allowed here before ‘{’ token ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:435:64: error: a function-definition is not allowed here before ‘{’ token ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:450:58: error: a function-definition is not allowed here before ‘{’ token ; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:468:84: error: a function-definition is not allowed here before ‘{’ token . And 35 more. ### Warnings:; - [2022-12-09T09:07:43.424Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:371:10: warning: unused variable ‘ErrorReporter’ [-Wunused-variable] ; - [2022-12-09T09:07:48.896Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:476:1: warning: control reaches end of non-void function [-Wreturn-type],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11351#issuecomment-1344038674:1748,error,error,1748,https://root.cern,https://github.com/root-project/root/pull/11351#issuecomment-1344038674,4,"['Error', 'error']","['ErrorReporter', 'error']"
Availability,"Indeed testing these downstream packages will likely need Vc, and we cannot know where that is, so that's a case for `ROOT_INCLUDE_PATH`. The second part of this issue is about the error message. @vgvassilev do you agree that; ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; ```; isn't equivalent to ""ROOT cannot find Vc/Vc.h; please provide the include path by adding it to `ROOT_INCLUDE_PATH`""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1031255059:21,down,downstream,21,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1031255059,3,"['down', 'error']","['downstream', 'error']"
Availability,"Indeed the commit you linked in the issue description https://github.com/root-project/root/commit/f7adfb5c78168d5eba657afa171fa1a9d0938c54 is just a day prior to my commit, weird that roottest instead already saw the new pickle test. But I see you already said you don't see the failure anymore, so that should be good :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823955118:279,failure,failure,279,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823955118,1,['failure'],['failure']
Availability,Indeed the failure is due to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5752#issuecomment-640410268:11,failure,failure,11,https://root.cern,https://github.com/root-project/root/pull/5752#issuecomment-640410268,1,['failure'],['failure']
Availability,"Indeed there is a complex logic doing exactly the opposite of what is requested in this issue. **On purpose** the error bars are drawn from the limit of the empty markers to avoid seeing them inside the marker. In the example given here, it is marker 4 which behaves differently from the others and might be fixed. But 24 is an empty circle too and produces the right drawing. I propose to close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14549#issuecomment-1940926553:114,error,error,114,https://root.cern,https://github.com/root-project/root/issues/14549#issuecomment-1940926553,1,['error'],['error']
Availability,"Indeed, I get the same error in 6.28.04! I also noticed this error:; ```; [#2] ERROR:HistFactory -- could not corresponding auxiliary measurement nom_minusONE; ```. But it is amazing that it never crashed in 6.28 even with O(20) runs on different machines/OS/gcc versions",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225#issuecomment-1858182077:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/14225#issuecomment-1858182077,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Indeed, I should have updated the PR with a comment earlier. At least we can raise the error on the python side though, the call to the pythonization happens before the C++ constructor is called. Maybe the check can be something more specific like; ```python; url = ROOT.TUrl(filename); if url.GetProtocol() != ""file"":; raise ValueError(); ```; instead of the current more simplistic check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1198458818:87,error,error,87,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198458818,1,['error'],['error']
Availability,"Indeed, but for that we would need to change the public interfaces of (at least) `TLatex` and `TMathText`.; So now my question is the following: do we simply fix the compilation warnings/errors on Windows, or do we want to make it working with all possible characters, requiring new interfaces with `char32_t`?. I'll let @couet comment on that (BTW, it doesn't work on Linux or Mac either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091#issuecomment-1614327543:187,error,errors,187,https://root.cern,https://github.com/root-project/root/issues/13091#issuecomment-1614327543,1,['error'],['errors']
Availability,"Indeed, the Windows failures look real.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8804#issuecomment-894048096:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/8804#issuecomment-894048096,1,['failure'],['failures']
Availability,"Indeed, the failure is unrelated (and known).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8699#issuecomment-884470793:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/8699#issuecomment-884470793,1,['failure'],['failure']
Availability,"Indeed, this should return -1. Note that I am missing something to reproduce the problem. It my question it returns -1 which any error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326#issuecomment-1431722533:129,error,error,129,https://root.cern,https://github.com/root-project/root/issues/12326#issuecomment-1431722533,1,['error'],['error']
Availability,"Indeed, this solution only improves the error message to solve the problem of ; 1. losing the information of the error reported by the `TTF` library function (for us it was `0x17` = `bad pixel size`); 2. not knowing the context of the call (input values). In our case it was enough additional information to identify the origin of the error as being a bad input value and exclude troubles at the `libTTF` packages level such as missing package(s) or mismatching versions (or also in the `tsize` calculation or in `libTTF`, but these were anyway unlikely given the 20+ years of usage). It would probably be helpful to have in addition some info on the call stack, but I do not know enough of `ROOT` core methods to propose anything there.; As I could track the source of the bad values in our code with the old-school ""add temp printouts around calls from top to bottom"" method, I must confess I stopped my investigation here :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592#issuecomment-1929667487:40,error,error,40,https://root.cern,https://github.com/root-project/root/issues/14592#issuecomment-1929667487,3,['error'],['error']
Availability,Indeed. The message (that provokes the failure) appears because NDEBUG is now undefined in the PR build (as originally intended and fix today by @Axel-Naumann),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-598914326:39,failure,failure,39,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-598914326,1,['failure'],['failure']
Availability,"Indeed: ROOT-performance-centos8-multicore/default really succeeded (Jenkins communication failure); 32bit is unrelated. Super nice, well done, congratulations @guitargeek !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-893254325:91,failure,failure,91,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-893254325,1,['failure'],['failure']
Availability,"Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for vec; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for vec; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for vec. Loading 'std' on demand for '__alloc_traits'; Module 'std' already loaded for 'new_allocator'; Module 'std' already loaded for 'rebind'; Module 'std' already loaded for 'rebind'; Module 'std' already loaded for '_Lock_policy'; Module 'std' already loaded for 'param_type'; Module 'std' already loaded for 'char_traits'; Module 'std' already loaded for 'id'; Module 'MathCore' already loaded for 'ParameterSettings'; Module 'Minuit2' already loaded for 'MinuitParameter'; Module 'std' already loaded for 'rebind'; Module 'std' already loaded for '_Vector_impl'; Module 'std' already loaded for '_Vector_impl_data'; Module 'Smatrix' already loaded for 'type'; Module 'std' already loaded for 'type'; Module 'Core' already loaded for 'type'; Loading 'Hist' on demand for 'type'; Loading 'ROOTDataFrame' on demand for 'type'; Loading 'Imt' on demand for 'type'; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_vector.h:1844:2: error: 'std::vector<double *, std::allocator<double *> >::_M_data_ptr' from module 'std.vector' is not present in definition of 'std::vector<double *, std::allocator<double *> >' provided earlier; _M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_vector.h:389:11: note: definition has no member '_M_data_ptr'; class vector : protected _Vector_base<_Tp, _Alloc>; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_vector.h:1815:7: error: 'std::vector<double *, std::allocator<double *> >::_M_move_assign' from module 'std.vector' is not present in definition of 'std::vector<double *, std::allocator<double *> >' provided earlier; _M_move_assign(vector&& __x, true_type) noexcept; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:17144,error,error,17144,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,2,['error'],['error']
Availability,"InfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\BinaryFormat\Magic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\BinaryFormat\Magic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\BinaryFormat\Magic.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\BinaryFormat\LLVMBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MSFError.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MSFError.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-541459123:2280,error,error,2280,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-541459123,2,['error'],['error']
Availability,"Initializing RooBatchCompute takes over a second when CUDA is also; available on the system. It is unreasonable to do this everytime the; RooFit library is loaded. For example, the time of small unit tests was; completely dominated by the RooBatchCompute initialization time before; this commit. This change entailed another change in `Buffers.cxx` to avoid static; initialization problems. If possible, I'll still try to backport this to the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9915:68,avail,available,68,https://root.cern,https://github.com/root-project/root/pull/9915,1,['avail'],['available']
Availability,"InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: error: redefinition of 'operator<<' ; > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:326:24: note: previous definition is here ; > inline std::ostream& operator<<( std::ostream& s, LHCb::ProtoParticle::additionalInfo e ) { ; > ^ ; > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2200: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const TInterpreter::FwdDeclArg; > sToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""The forward declarations could not be compiled""' failed. ; > ```; > ; > The error seems weird because I see `#pragma once` in `ProtoParticle.h`. Thank you for the note. I will try it again later!. > There's problem in the way the application was invoked: there a stray `ls -l` on the command line that make valgrind check `ls` and not `gaudirun.py`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:3868,error,error,3868,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,1,['error'],['error']
Availability,Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9407:11,error,erroring,11,https://root.cern,https://github.com/root-project/root/pull/9407,1,['error'],['erroring']
Availability,"Instead of guessing the number of parameters for the model represented by RooFuncWrapper, we now introduce a parameter size function that can be used to declare gradient output arrays of the right size. Possibly fixes some of the ASAN failures @hahnjo reported earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12612:235,failure,failures,235,https://root.cern,https://github.com/root-project/root/pull/12612,1,['failure'],['failures']
Availability,"Instead, split the code RDataFrame jits every 1k newlines and jit; in chunks. This avoids an explosion in the time required by; optimizer passes, which seem to not deal well with very large; function bodies. See https://github.com/root-project/root/issues/9312 and; https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9328:396,down,down,396,https://root.cern,https://github.com/root-project/root/pull/9328,1,['down'],['down']
Availability,"Int32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5043,Error,Error,5043,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability,Integer types not available for Bulk API,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520:18,avail,available,18,https://root.cern,https://github.com/root-project/root/issues/6520,1,['avail'],['available']
Availability,"Intentional. An `std::string` has a single-char array representation underlying it, which is a Python `bytes` object, not a `str`, which is unicode. The point of `repr()` is to be able to provide a `str` object from which the original object can be reconstructed. That, therefore, has to be a `bytes` representation. The point of `str()` is to provide something that looks pretty and informational, which in practice is more likely to be a decoded `str`, hence that choice. Specifically, b/c unicode isn't properly implemented in any C++ standard string class, it's common practice to place an encoded unicode string into `std::string`. Regardless, even if it contains unencoded ASCII, whenever a C++ `std::string` is represented as a Python `str`, it needs decoding. However, no information is available on the encoding scheme. It's typically safe to assume an UTF-8 encoding b/c ASCII is a subset, but there's no guarantee. Hence the current implementation tries to avoid decoding as much as possible and only does so when absolutely necessary (e.g. when doing string comparisons or, as in this example, when calling `str()`). The implementation of `std::string` has been Pythonized so that it can be used as a drop-in replacement wherever a `str` object is expected, with the exception of when you do anything type specific, such as `repr()`, `type()`, and `isinstance()`, where it will represent as an `std::string`, which it is. For CERN, none of this is likely to matter as all European languages are encodable UTF-8 AFAIK. The most common language, in my experience, where this assumption fails is Chinese. (Edit: I read up on it and turns out that *all* languages are encodable in UTF-8, it's just that that encoding is designed to be space-efficient for Latin languages, but is rather inefficient for Asian languages, hence the common choice of different encodings there.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15153#issuecomment-2040504962:795,avail,available,795,https://root.cern,https://github.com/root-project/root/issues/15153#issuecomment-2040504962,1,['avail'],['available']
Availability,"Interesting errors, which were to be expected. The ROOT PCMs have coded the version number with a ""/"" while after the changes the version does not contain it any more. Given that root pcms are special files, written w/o streamer infos (for performance reasons and because by construction are read only by the same release that produced them) many tests still fail. If the builds were not incremental, the problem would not be there. Thinking about a solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15164#issuecomment-2059319277:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/15164#issuecomment-2059319277,1,['error'],['errors']
Availability,"Interesting to see the versions on our build nodes ;) We have now a nice error report like this:. ```; Full path to requirements.txt: /mnt/build/workspace/root-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - numba 0.47.0 is installed but numba>=0.48.0 is required; - The 'notebook>=4.4.1' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; ```. I'll go there on Monday and lower the requirements accordingly and/or update/install the packages on the nodes. But for potential reviewers, I would keep the infrastructure as it is!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-619165872:73,error,error,73,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-619165872,1,['error'],['error']
Availability,Interpreter autoload lookup failure when `runtime_cxxmodules=ON`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/issues/9583,1,['failure'],['failure']
Availability,"Interpreter errors of ROOT 5 were addressed by replacing CINT by cling, which means ROOT 6. I.e. thanks for the report on an old version, this has been addressed in the meantime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840#issuecomment-1571392831:12,error,errors,12,https://root.cern,https://github.com/root-project/root/issues/12840#issuecomment-1571392831,1,['error'],['errors']
Availability,Interpreter/Value.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:63:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/TModuleGenerator.cxx:25:41: fatal error: cling/Interpreter/CIFactory.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingTypedefInfo.h:31:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingTypeInfo.cxx:30:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.cxx:14:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/LinkdefReader.cxx:43:41: fatal error: cling/Interpreter/CIFactory.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingMethodArgInfo.cxx:29:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-26T13:46:01.551Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallFunc.h:37:37: fatal error: cling/Interpreter/Value.h: No such file or directory . And 8 more. ### Warnings:; - [2020-09-26T13:46:02.916Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/XMLReader.cxx:837:39: warning: declaration of ‘attrs’ shadows a previous local [-Wshadow] ; - [2020-09-26T13:46:02.916Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/XMLReader.cxx:497:34: war,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699497630:1608,error,error,1608,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699497630,1,['error'],['error']
Availability,"IntrinsicInst.h(101,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\ArgumentPromotion.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-02-08T16:12:27.596Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/Hashing.h(504,32): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Serialization\ModuleFileExtension.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Serialization\obj.clangSerialization.vcxproj] ; - [2022-02-08T16:12:27.596Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(363,57): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopSimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-02-08T16:12:27.596Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Target/TargetOptions.h(23,22): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTStructuralEquivalence.cpp)' with regex '^In file included from .*$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-08T16:12:27.596Z] C:\build\workspace\root-pullrequests-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9836#issuecomment-1032797990:3629,error,error,3629,https://root.cern,https://github.com/root-project/root/pull/9836#issuecomment-1032797990,1,['error'],['error']
Availability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:284,error,error,284,https://root.cern,https://github.com/root-project/root/pull/16594,1,['error'],['error']
Availability,"Introduce a new helper returning the number of logical CPUs available to the current process. In case of having an affinity mask, it will return in accordance to it (IMT & tbb required for this). Function naming can be improved. I wanted to keep tbb away from ImplicitMT and that's why the core function is defined in TPoolManager.hxx. Should it be a member of the class?. Also delete useless return.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/754:60,avail,available,60,https://root.cern,https://github.com/root-project/root/pull/754,2,"['avail', 'mask']","['available', 'mask']"
Availability,"Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16156:216,failure,failures,216,https://root.cern,https://github.com/root-project/root/pull/16156,1,['failure'],['failures']
Availability,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15620:236,failure,failures,236,https://root.cern,https://github.com/root-project/root/pull/15620,1,['failure'],['failures']
Availability,"Investigating further I found that the same kind of error can be generated with a `std::vector`. Modifying the `OtherClass.h` file of the reproducer as follows:; ```c++; #ifndef OtherClass_h_; #define OtherClass_h_. #include ""MyClass.h""; #include <vector>. class OtherClass {; public:; OtherClass() : v(0) {}. private:; std::vector<MyClass> v;; };. #endif; ```; a very similar error is triggered in the same way from the Root shell. In this case it is fixed by changing the initialization of `v` in the constructor as:; ```c++; OtherClass() : v{} {}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1115915798:52,error,error,52,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1115915798,2,['error'],['error']
Availability,"Irrespective of the plan above or any modification to it, I believe we should sit down and understand how to deploy an automated way to build the module map. For example, internal headers will always be changed and it will be harder and harder to keep present versions of the sdk working and fix new ones.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900#issuecomment-2184830330:82,down,down,82,https://root.cern,https://github.com/root-project/root/pull/15900#issuecomment-2184830330,1,['down'],['down']
Availability,Is It 'just me' or does the master (intentionally ?) no longer re-download the tar files for the builtins. I.e.:. ```; cmake; ninja; rm -rf *-prefix builtins; ninja; ```; used to work and does not work anymore (and no I don't remember when was the last time I saw it worked).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16227:66,down,download,66,https://root.cern,https://github.com/root-project/root/issues/16227,1,['down'],['download']
Availability,Is any workaround available?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12540#issuecomment-1492520987:18,avail,available,18,https://root.cern,https://github.com/root-project/root/issues/12540#issuecomment-1492520987,1,['avail'],['available']
Availability,Is it new problem with 6.22 ? This code (TGLFormat) is not recent and has not been changed recently.; The error messages you get would suggest X11 is not properly installed (or not found by the ROOT; install procedure) on your machine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6368#issuecomment-694088881:106,error,error,106,https://root.cern,https://github.com/root-project/root/issues/6368#issuecomment-694088881,1,['error'],['error']
Availability,Is the build failure here due to the PR changes? Should we rebuild?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1242#issuecomment-344888312:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/pull/1242#issuecomment-344888312,1,['failure'],['failure']
Availability,Is the error handling correct?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-777666806:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-777666806,1,['error'],['error']
Availability,Is the error message about out of date pcm inverted ?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:7,error,error,7,https://root.cern,https://github.com/root-project/root/issues/7704,1,['error'],['error']
Availability,Is the error message coming from the worker? I.e. the RDataFrame object built by the map function does not pick up the friend?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7584#issuecomment-801857538:7,error,error,7,https://root.cern,https://github.com/root-project/root/issues/7584#issuecomment-801857538,1,['error'],['error']
Availability,Is the failure in `roottest-root-hist-h2root` at https://github.com/root-project/root/pull/16773/checks?check_run_id=32223807661 understood?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16773#issuecomment-2444698794:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/16773#issuecomment-2444698794,1,['failure'],['failure']
Availability,"Is there a way for me to look at the failures?. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: phsft-bot <notifications@github.com>; Sent: Friday, February 2, 2018 5:55:48 PM; To: root-project/root; Cc: Zhe Zhang; Mention; Subject: Re: [root-project/root] Use TTaskGroup interface to unzip baskets in parallel. (#1010). Build failed on centos7/gcc49.; See console output<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/console>. Failing tests:. * projectroot.roottest.cling.typedef.roottest_cling_typedef_assertFuncArray<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.cling/typedef/roottest_cling_typedef_assertFuncArray/>; * projectroot.roottest.python.basic.roottest_python_basic_overload<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/>; * projectroot.roottest.python.cling.roottest_python_cling_api<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/>; * projectroot.roottest.python.basic.roottest_python_basic_basic<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/>; * projectroot.roottest.python.basic.roottest_python_basic_operator<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/>; * projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/>; * projectroot.roottest.python.basic.roottest_python_basic_datatype<https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16202/testReport/projectroot.roottest.python/basic/roottest_pyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362756051:37,failure,failures,37,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362756051,1,['failure'],['failures']
Availability,Is there an possible work-around? (for example create a special file is case of success and check for that in lieu of the error code of the script),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6441#issuecomment-1924654860:122,error,error,122,https://root.cern,https://github.com/root-project/root/issues/6441#issuecomment-1924654860,1,['error'],['error']
Availability,Is this a spurious error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-375786073:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-375786073,1,['error'],['error']
Availability,Is this error still reproducing with a build from scratch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789#issuecomment-1962736535:8,error,error,8,https://root.cern,https://github.com/root-project/root/issues/14789#issuecomment-1962736535,1,['error'],['error']
Availability,IsAProxy.h:35:12: error: ‘Atomic_t’ does not name a type ; - /mnt/build/workspace/root-pullrequests-build/build/include/TIsAProxy.h:36:4: error: ‘Atomic_t’ does not name a type ; - /mnt/build/workspace/root-pullrequests-build/build/include/TIsAProxy.h:38:4: error: ‘Atomic_t’ does not name a type . And 314 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/build/include/TIsAProxy.h:43:34: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/TIsAProxy.h:44:45: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/Rtypes.h:244:91: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:62:29: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:25: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:61:33: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:62:27: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RStringView.hxx:62:29: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11 ; - /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/span.hxx:60:21: warning: variadic template,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2505#issuecomment-415366720:2197,avail,available,2197,https://root.cern,https://github.com/root-project/root/pull/2505#issuecomment-415366720,1,['avail'],['available']
Availability,Isn't this only handling one single case (in a non-thread-safe way) out of many MT failure modes in this function? What it the `link` got deleted? What if the `obj` currently gets deleted?. I.e. I'm not sure this is sufficient. I remember that Philippe and Chris Jones have tried several times to make `RecursiveRemove()` more cooperative and failed. I would prefer to have his opinion on this before this gets merged.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312184613:83,failure,failure,83,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312184613,1,['failure'],['failure']
Availability,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339205080:461,error,error,461,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080,1,['error'],['error']
Availability,"It broke C++17 build of ROOT with:; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: error: 'std::__uniq_ptr_data<RooDataSet, std::default_delete<RooDataSet>, true, true>' has different definitions; in different modules; defined here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: note: definition in module 'std.condition_variable' is here; Error: /home/stefan/builds/root-dev/bin/rootcling: compilation failure (/home/stefan/builds/root-dev/lib/libRooStats03cff1ce95_dictUmbrella.h); make[2]: *** [roofit/roostats/CMakeFiles/G__RooStats.dir/build.make:222: roofit/roostats/G__RooStats.cxx] Error 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6153:180,error,error,180,https://root.cern,https://github.com/root-project/root/pull/6153,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```; cmake .. \; -Dalien=OFF -Dcuda=ON \; -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \; -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \; -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9; ```. And here a test python file:. ```; #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut; from subprocess import call; from os.path import isfile. # Setup TMVA; TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'); factory = TMVA.Factory('TMVAClassification', output,; '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data; if not isfile('tmva_class_example.root'):; call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'); signal = data.Get('TreeS'); background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'); for branch in signal.GetListOfBranches():; dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0); dataloader.AddBackgroundTree(background, 1.0); dataloader.PrepareTrainingAndTestTree(TCut(''),; 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods; factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',; 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation; factory.TrainAllMethods(); factory.TestAllMethods(); factory.EvaluateAllMethods(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-255390309:1346,Error,ErrorStrategy,1346,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-255390309,1,['Error'],['ErrorStrategy']
Availability,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-844279682:62,avail,available,62,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-844279682,3,"['avail', 'down']","['available', 'download']"
Availability,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12516:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/12516,3,"['error', 'failure']","['error', 'failures']"
Availability,"It causes randomic failures in our nightlies, and being in legacy; code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8564:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/8564,1,['failure'],['failures']
Availability,"It causes randomic failures in our nightlies, and being in legacy; code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8462:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/8462,1,['failure'],['failures']
Availability,"It could be a doxygen issue, but in the small reproducer I prepared, I do not get the second error. It runs without any errors.; Not however in the full ROOT build :S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9596#issuecomment-1015367093:93,error,error,93,https://root.cern,https://github.com/root-project/root/issues/9596#issuecomment-1015367093,2,['error'],"['error', 'errors']"
Availability,"It could well be that these errors are due to your change; please check. In general, another approach would be to use a `union {void(*)() ptr, T*}` to convert from the actual function type to a `void()`. After all, we *know* that it's all just a pointer, storage-wise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652#issuecomment-423444779:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/2652#issuecomment-423444779,1,['error'],['errors']
Availability,"It currently issues odd looking error, eg:; ```; Error in [TBranch::TBranch::WriteBasketImpl](https://root-forum.cern.ch/): basket’s WriteBuffer failed.; ```; See https://root-forum.cern.ch/t/root-file-txt-format/48959/22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10024:32,error,error,32,https://root.cern,https://github.com/root-project/root/issues/10024,2,"['Error', 'error']","['Error', 'error']"
Availability,"It didn't hit me when working on the cppyy upgrade (#14507), all tests on Jenkins and the new CI were green there. I only noticed it a few days ago when enabling the xgboost tests to test my new development here:; https://github.com/root-project/root/pull/15173. Why these TMVA tutorial failures come only now several weeks after the cppyy upgrade? I don't know. I'm just catching up with the recent discussions on Python requirements",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2052181093:287,failure,failures,287,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2052181093,1,['failure'],['failures']
Availability,It does not compile on Mac:; ```; % clang++ pad.cxx $(root-config --glibs --cflags --libs) -o pad; pad.cxx:6:5: error: use of undeclared identifier 'feenableexcept'; did you mean 'feraiseexcept'?; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; ^~~~~~~~~~~~~~; feraiseexcept; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/fenv.h:299:12: note: 'feraiseexcept' declared here; extern int feraiseexcept(int /* excepts */);; ^; 1 error generated. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374#issuecomment-694270210:112,error,error,112,https://root.cern,https://github.com/root-project/root/issues/6374#issuecomment-694270210,2,['error'],['error']
Availability,It does not seem to be blocked because the GUI reacts the pull-down menus from the menu bar display correctly and the fit panel displays correctly also ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13834#issuecomment-1757490452:63,down,down,63,https://root.cern,https://github.com/root-project/root/issues/13834#issuecomment-1757490452,1,['down'],['down']
Availability,"It doesn't affect production jobs, but it does affect the event dumping code which is sometimes used for debugging.; Also, having unit tests always failing is not really sustainable for the CI, so i'd think we need to resolve this before we switch the CI system to using a newer LCG version. (And i think there are some other EL9 failures that haven't really been followed up on because they're buried in the list of failing tests due to this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1746623011:330,failure,failures,330,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1746623011,1,['failure'],['failures']
Availability,"It fails when doing the `property(method)` call, so in `PyObject_CallObject(property_class, arglist)`. In case the method is bound, the underlying code does explicitely access the `self` object, which throws an `Bad argument to internal function` error in python if it's `NULL` (super cryptic!). Regarding the second question, I've to check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-380154325:247,error,error,247,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-380154325,1,['error'],['error']
Availability,"It fixes broken builds on Ubuntu 16:; `[ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooProdPdf.cxx.o; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx: In member function ‘void TWebCanvas::ShowCmd(const char*, Bool_t)’:; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx:516:77: error: ‘Warning’ was not declared in this scope; Warning(""ShowCmd"", ""Send operation not empty when try show %s"", arg); ^; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3551:522,error,error,522,https://root.cern,https://github.com/root-project/root/pull/3551,1,['error'],['error']
Availability,"It fixes the failures in projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec that are cropping up all over the place. Sorry, did not realize that the PR that introduced the change was not tested by jenkins because the title said `[N-F-C]` :disappointed:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9046:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/9046,1,['failure'],['failures']
Availability,"It happens often that one passes a temporary RooArgSet to the; RooCmdArg constructor, where the RooCmdArg is itself a temporary that is; passed to a RooFit function. The RooCmdArg contains only pointers to the; RooArgSets, so this pattern relies on the RooArgSet being kept alive; until the function end. In code, this pattern would look like this statement:; ```C++; func(RooCmdArg{RooArgSet{}});; ```. In C++, this works because the temporaries survive until the statement; end. But in Python, the inner temporary RooArgSet will be destructed; after the RooCmdArg has been constructed, leaving the RooCmdArg with; dangling pointers. To solve this problem, all the functions that can create a RooCmdArg; from a RooArgSet are overloaded with versions accepting rvalue; references. These overloads are indeed used for temporaries both in C++; and Python. In the rvalue reference versions, the temporaries are moved; into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg; then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++; void minimal_example() {; using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }; ```. ```Python; import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ); arg.getObject(0)[""x""].Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8032:274,alive,alive,274,https://root.cern,https://github.com/root-project/root/pull/8032,1,['alive'],['alive']
Availability,"It is a strange error looking like a transient infrastructure issue, consequently I am running that build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780873158:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780873158,1,['error'],['error']
Availability,"It is available less and less often, and we do not actually benefit a lot from printing the distro (stress) or we can get the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14923:6,avail,available,6,https://root.cern,https://github.com/root-project/root/pull/14923,1,['avail'],['available']
Availability,"It is available less and less often, and we do not actually; benefit a lot from printing the distro (stress) or we can get; the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11029:6,avail,available,6,https://root.cern,https://github.com/root-project/root/pull/11029,1,['avail'],['available']
Availability,"It is available now like `projx2_y5` options:. https://jsroot.gsi.de/dev/?file=../files/hsimple.root&item=hpxpy;1&opt=projx2_y5,colz. Projection configuration can be input from context menu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12534#issuecomment-1481262889:6,avail,available,6,https://root.cern,https://github.com/root-project/root/pull/12534#issuecomment-1481262889,1,['avail'],['available']
Availability,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638:253,error,error,253,https://root.cern,https://github.com/root-project/root/pull/13638,1,['error'],['error']
Availability,"It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:; In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:; /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required; pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );; ^; In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:; /usr/include/pthread.h:51:3: note: previous declaration is here; PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,; ^; 1 error generated.`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3374:565,error,error,565,https://root.cern,https://github.com/root-project/root/pull/3374,2,['error'],['error']
Availability,It is fixing:; ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous; : RDF::RInterface<RDFDetail::RLoopManager>(; ^; In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:; ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'; namespace RDF {; ^; ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'; namespace RDF {; ^; ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class; : RDF::RInterface<RDFDetail::RLoopManager>(; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2697:63,error,error,63,https://root.cern,https://github.com/root-project/root/pull/2697,2,['error'],['error']
Availability,It is metion at; ; https://stackoverflow.com/questions/58628377/catalina-c-using-cmath-headers-yield-error-no-member-named-signbit-in-th/59780819#59780819. `the authors of <cmath> were expecting the math.h from that same folder be included first and then the #include_next <math.h> directive find the system-specific math.h. That is not what's happening in reality however.`. I think it's a bug that should be fixed by apple-xcode.; But what confused me is that why I could run `root aa1.cpp` OK but `root aa1.cpp++` with errors?; Does this include difference headers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418#issuecomment-860836951:101,error,error-no-member-named-signbit-in-th,101,https://root.cern,https://github.com/root-project/root/issues/8418#issuecomment-860836951,2,['error'],"['error-no-member-named-signbit-in-th', 'errors']"
Availability,"It is more tricky than I thought. Actually I see the error ""sometimes"" on fresh builds only. That's not clear yet ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11614#issuecomment-1305640008:53,error,error,53,https://root.cern,https://github.com/root-project/root/pull/11614#issuecomment-1305640008,1,['error'],['error']
Availability,"It is needed for C++11 support of #include <chrono>. Failures:; ```; Processing /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C...; In file included from input_line_10:1:; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C:55:51: error: no member named 'duration' in namespace 'std::chrono'; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ~~~~~~~~~~~~~^; ```. and. ```; root [11] #include <bits/chrono.h>; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:432:10: error: module 'std.bits/chrono.h' requires feature 'cplusplus17'; module ""bits/chrono.h"" [optional] {; ^; ROOT_prompt_11:1:10: note: submodule of top-level module 'std' implicitly imported here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12629:53,Failure,Failures,53,https://root.cern,https://github.com/root-project/root/pull/12629,3,"['Failure', 'error']","['Failures', 'error']"
Availability,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and; lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14032#issuecomment-1801794203:131,error,error,131,https://root.cern,https://github.com/root-project/root/issues/14032#issuecomment-1801794203,1,['error'],['error']
Availability,"It is not the same values. If you print all digits (and using `double` in the macro for `x1` and `x2`, you should never use `float`, this is an error in the code provided):; ```; >>> bin is calculated in FindFixBin at line 428 - parent is h1; fNbins = 4; x = 0.00125000000000000003; fXmin = 0.00000000000000000000; fXmax = 0.00500000000000000010; int(fNbins*(x-fXmin)/(fXmax-fXmin) = 1; >>> bin = 1 + int (fNbins*(x-fXmin)/(fXmax-fXmin)); bin = 2. >>> bin is calculated in FindFixBin at line 428 - parent is h2; fNbins = 4; x = 0.00124999999999999959; fXmin = 0.00000000000000000000; fXmax = 0.00500000000000000010; int(fNbins*(x-fXmin)/(fXmax-fXmin) = 0; >>> bin = 1 + int (fNbins*(x-fXmin)/(fXmax-fXmin)); bin = 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12401#issuecomment-1451587891:144,error,error,144,https://root.cern,https://github.com/root-project/root/pull/12401#issuecomment-1451587891,1,['error'],['error']
Availability,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5897:544,mask,masked,544,https://root.cern,https://github.com/root-project/root/pull/5897,1,['mask'],['masked']
Availability,"It is part of the set of 'system' modules which gets created on demand when a dictionary includes intrinsics. Make this action explicit. This way we can invalidate it (from within rootcling) and rebuild it when required. This patch also fixes an issue in cmssw where _Builtin_intrinsics is generated and installed on cvmfs. If we have local ROOT which does not have this module generated, the system picks up the one from cvmfs causing out-of-date errors. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4676:448,error,errors,448,https://root.cern,https://github.com/root-project/root/pull/4676,1,['error'],['errors']
Availability,"It is still an issue on both Windows 64 bit and 32 bit as of April 2024. Here is the relevant output:; ```; 2206/2226 Test #2197: gtestC--ROOT-CI-roottest-root-tree-readrules-gh-14462-gh14462regression ...........................***Failed 1.06 sec; Running main() from C:\ROOT-CI\build\googletest-prefix\src\googletest\googletest\src\gtest_main.cc; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from ReadRules; [ RUN ] ReadRules.CustomReadRuleWithSpace; C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(76): error: Failed; Received unexpected diagnostic of severity 3000 at 'TCling::LoadPCM' reading 'ROOT PCM C:\ROOT-CI\build\roottest\root\tree\readrules\gh-14462\Release\gh14462regressionDict_rdict.pcm file does not exist'.; Suppress those using ROOT/TestSupport.hxx; [ FAILED ] ReadRules.CustomReadRuleWithSpace (883 ms); [----------] 1 test from ReadRules (883 ms total); ; [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (883 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] ReadRules.CustomReadRuleWithSpace; ; 1 FAILED TEST; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9354#issuecomment-2046160417:579,error,error,579,https://root.cern,https://github.com/root-project/root/issues/9354#issuecomment-2046160417,4,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,It is the same problem as yesterday...; ```; 14:13:44 CMake Error at /mnt/build/jenkins/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:98 (ctest_empty_binary_directory):; 14:13:44 ctest_empty_binary_directory problem removing the binary directory:; 14:13:44 /mnt/build/jenkins/workspace/root-pullrequests-build/build; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/784#issuecomment-316701945:60,Error,Error,60,https://root.cern,https://github.com/root-project/root/pull/784#issuecomment-316701945,1,['Error'],['Error']
Availability,"It is true that the fit could work better concerning the shift. I think the shift is being fitted but the result is almost always the starting parameter (or close to that). But in my real work I have to fit line shaped that are obtained from histograms and are different for every fit I do, so I do not know if an implementation of a custom PDF class is worth the effort if the Line Shape changes every time. Therefore I will probably just determine the shifts by ""try and error"" until my fits are alright. My main problem was the wrong normalization which does not happen in root 6.24. Still thank you for your concern and help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760#issuecomment-1326443161:473,error,error,473,https://root.cern,https://github.com/root-project/root/issues/11760#issuecomment-1326443161,1,['error'],['error']
Availability,"It looks OK now, but some earlier test failures were from bumping up against default system resource limits: ; > C++ exception with description ""Error initializing io_uring: Cannot allocate memory"" thrown in the test body.; http://cdash.cern.ch/testDetails.php?test=2490413&build=14095. The liburing readme takes care to note this up front. ; https://github.com/axboe/liburing/blob/master/README#L22-L25; > io_uring accounts memory it needs under the rlimit memlocked option, which; can be quite low on some setups (64K). The default is usually enough for; most use cases, but bigger rings or things like registered buffers deplete; it quickly. Ring sizes of 2000 and 512 failed on the CI machine before I tried 128 which succeeded.; This is something we can handle by batching submissions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-672243416:39,failure,failures,39,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-672243416,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"It looks like I do not have any tutorials, also `echo $ROOTSYS` returns empty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12721#issuecomment-1532876310:49,echo,echo,49,https://root.cern,https://github.com/root-project/root/issues/12721#issuecomment-1532876310,1,['echo'],['echo']
Availability,"It looks like it is more connected to the version of the Command Line Tools than to the OS version. For instance, we get the same error on machines running MacOS 14 if they run CTL 16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451#issuecomment-2360299523:130,error,error,130,https://root.cern,https://github.com/root-project/root/issues/16451#issuecomment-2360299523,1,['error'],['error']
Availability,It looks like that clang stores candidates for diagnostics and then does analysis on `clang::Sema::HandleEndOfTranslationUnit` call. When autoloading we call `TCling::RegisterModule` which in turn can call *many* times `clang::Sema::HandleEndOfTranslationUnit`. Second half of the `TCling::RegisterModule` body suppresses diagnostics this silences warnings coming from Sema and flushes the collected candidates. The case here is a little odd: the diagnostics fires only in ROOT built with release mode. The branches being taken by both release and debug mode seem identical. It looks like the debug mode somehow enters in silence diagnostics mode and release does not. This PR is not critical for the runtime cxxmodules development but it fixes the broken autoloading behavior of 'regular' ROOT. This is the only observable failure we got in a very obscure way.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-377965643:824,failure,failure,824,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-377965643,1,['failure'],['failure']
Availability,"It looks like the STL on the machine with the nightly failures was copying the `RunContext` struct. Bad idea, because this creates dangling pointers!; I `deleted` the copy constructor and only allow moves.; Please take care of the merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6831:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/6831,1,['failure'],['failures']
Availability,It looks like the clang tidy errors reported by continuous-integration/travis-ci/pr are not related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3847#issuecomment-495597401:29,error,errors,29,https://root.cern,https://github.com/root-project/root/pull/3847#issuecomment-495597401,1,['error'],['errors']
Availability,"It looks like the error on Windows is due to this PR, but I don't understand why (not yet). I'll have to test this PR myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780684128:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780684128,1,['error'],['error']
Availability,"It looks like the issue has been fixed in the master. Can you try with [root_v6.27.01.win32.vc16.zip](https://root.cern/download/nightly/root_v6.27.01.win32.vc16.zip)? It works for me:; ```; C:\Users\bellenot\rootdev>root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win32 on Apr 19 2022, 03:07:00 |; | From remotes/origin/master@v6-25-02-1027-g2aa0235 |; | With MSVC 19.29.30141.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] constexpr uint32_t seed_bits = 19937;; root [1] constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);; root [2]; root [2] std::random_device _dev;; root [3] uint32_t _seed[seed_32_count];; root [4] for (uint32_t i = 0; i < seed_32_count; ++i) {; root (cont'ed, cancel with .@) [5] _seed[i] = _dev();; root (cont'ed, cancel with .@) [6]}; root [7] std::seed_seq _seq(_seed, _seed + seed_32_count);; root [8]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10386#issuecomment-1102340774:120,down,download,120,https://root.cern,https://github.com/root-project/root/issues/10386#issuecomment-1102340774,1,['down'],['download']
Availability,It looks like the warnings/errors were already present before my PR... :angry:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/621#issuecomment-307121307:27,error,errors,27,https://root.cern,https://github.com/root-project/root/pull/621#issuecomment-307121307,1,['error'],['errors']
Availability,"It looks like there is a failure in the gcc 49 test. However, if I am not mistaken this is in a single SMatrix test, and looking at the code for the test it is not using anything I have touched. So can we ignore this failure or is it a concern ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286470259:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286470259,2,['failure'],['failure']
Availability,It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6035:57,avail,available,57,https://root.cern,https://github.com/root-project/root/pull/6035,1,['avail'],['available']
Availability,"It looks these two commits are causing the compilation failure. The problem is in cmake, but it's complicated than it looks. I will fix and send this patch again, but first we really need to fix nightlies compilation failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2577:55,failure,failure,55,https://root.cern,https://github.com/root-project/root/pull/2577,2,['failure'],['failure']
Availability,It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520:42,avail,available,42,https://root.cern,https://github.com/root-project/root/issues/6520,1,['avail'],['available']
Availability,"It makes recovery of column values slightly faster, which is visible in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6325:9,recover,recovery,9,https://root.cern,https://github.com/root-project/root/pull/6325,1,['recover'],['recovery']
Availability,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3957#issuecomment-501664021:145,avail,availble,145,https://root.cern,https://github.com/root-project/root/pull/3957#issuecomment-501664021,1,['avail'],['availble']
Availability,It probably depends on which builtins you enable?; I also see this for builtin_XROOTD; ```; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[3]: *** [Makefile:146: all] Error 2; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16733#issuecomment-2432536621:231,Error,Error,231,https://root.cern,https://github.com/root-project/root/issues/16733#issuecomment-2432536621,1,['Error'],['Error']
Availability,It says: ; `Jenkins CI build — Build failed `; but I cannot access the details concerning build error. Let me know if something else is needed from my side.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11588#issuecomment-1305374640:96,error,error,96,https://root.cern,https://github.com/root-project/root/pull/11588#issuecomment-1305374640,1,['error'],['error']
Availability,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370:392,error,error,392,https://root.cern,https://github.com/root-project/root/issues/8370,4,['error'],['error']
Availability,"It seems doxygen tried to run this `qhelpgenerator` but failed:; ```; Running qhelpgenerator...; Error in line 15: Opening and ending tag mismatch.; error: failed to run qhelpgenerator on index.qhp; lookup cache used 13266/1048576 hits=365874 misses=14050; finished...; ```; That's weird because very likely this index.php file has been generated by doxygen, and it seems to have a wrong syntax.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-903547557:97,Error,Error,97,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-903547557,2,"['Error', 'error']","['Error', 'error']"
Availability,"It seems independent Cling builds have been broken on Windows for a while (or am making an error when setting up the build in Cling's Github Actions CI?). Looking at Cling commits - https://github.com/root-project/cling/commits/master it looks like Cling's appveyor hasn't even triggered in a long time, so it is difficult to say when was the last time that an independent Cling built worked on Windows. I made some attempt to fix it via - https://github.com/root-project/root/pull/6750/commits/db80e8c0038ab830b1cc4e7d2d42ad640c1ec232 but that is clearly not enough. One can look at the build error logs on Windows in the corresponding Github Action workflow - https://github.com/reikdas/cling-1/runs/1348031890?check_suite_focus=true. @vgvassilev @bellenot Do you have any idea what could be going wrong?. If Cling can be built successfully on Windows, we can merge this in :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6750:91,error,error,91,https://root.cern,https://github.com/root-project/root/pull/6750,2,['error'],['error']
Availability,It seems lcgpackages is down...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4097#issuecomment-512767589:24,down,down,24,https://root.cern,https://github.com/root-project/root/pull/4097#issuecomment-512767589,1,['down'],['down']
Availability,"It seems that `std::tuple` is being replaced by `ROOT::Internal::TEmulatedTuple`. The same error can be reproduced with:. ```python; >>> b = ROOT.std.make_tuple[ROOT.int](1); >>> c = ROOT.std.make_tuple[ROOT.int](1); >>> b.__assign__(c); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::Internal::TEmulatedTuple<int>& tuple<int>::operator=(ROOT::Internal::TEmulatedTuple<int>&&) =>; ValueError: could not convert argument 1 (object is not an rvalue); ROOT::Internal::TEmulatedTuple<int>& tuple<int>::operator=(const ROOT::Internal::TEmulatedTuple<int>&) =>; TypeError: could not convert argument 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8875#issuecomment-903634322:91,error,error,91,https://root.cern,https://github.com/root-project/root/issues/8875#issuecomment-903634322,1,['error'],['error']
Availability,"It seems that can be easily done with [recipes like this one](https://www.hongkiat.com/blog/read-download-website-offline/#:~:text=In%20the%20Chrome%20for%20Android,page%20in%20your%20default%20browser.) . And again, once you have the recipe, I do not see the point of providing a tar file with the static web site in it as you can download it yourself when you need using that recipe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-844195271:97,down,download-website-offline,97,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-844195271,2,['down'],"['download', 'download-website-offline']"
Availability,It seems that errors of centos have been resolved.; What is the problem with mac/python?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-693171459:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-693171459,1,['error'],['errors']
Availability,It seems that execvp can't handle such longs args on the build nodes and; fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual; modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/389:94,echo,echo,94,https://root.cern,https://github.com/root-project/root/pull/389,1,['echo'],['echo']
Availability,"It seems that the exported targets in ROOT 6.26 changed. Some software ([corryvreckan](https://gitlab.cern.ch/corryvreckan/corryvreckan)) that was compiling without issues in older root versions encounters issues when running cmake (3.22.3). . I believe that this is related to missing exported CMake targets. ### Describe the bug. CMake Error at src/core/CMakeLists.txt:73 (ADD_LIBRARY):; Target ""CorryvreckanCore"" links to target ""Threads::Threads"" but the target; was not found. Perhaps a find_package() call is missing for an IMPORTED; target, or an ALIAS target is missing?; ; ; CMake Error at src/core/CMakeLists.txt:73 (ADD_LIBRARY):; Target ""CorryvreckanCore"" links to target ""OpenMP::OpenMP_CXX"" but the; target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; ; ; CMake Error at src/core/CMakeLists.txt:73 (ADD_LIBRARY):; Target ""CorryvreckanCore"" links to target ""MPI::MPI_CXX"" but the target was; not found. Perhaps a find_package() call is missing for an IMPORTED; target, or an ALIAS target is missing?. The dependency seems to be pulled in via Minuit2. . The following additions to the CMakeLists of the project fix the issue:. ```; if(NOT TARGET Threads::Threads); find_package(Threads); endif(); if(NOT TARGET MPI::MPI_CXX); find_package(MPI); endif(); if(NOT TARGET OpenMP::OpenMP_CXX); find_package(OpenMP); endif(); ```. ### Setup. Compiling from source. Tested in master and using 6.26/00. Using archlinux, using CMake 3.22.3. The issue seems to only be present on archlinux, probably because for other OSs, the dependencies are handled internally rather than being imported (?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10283:338,Error,Error,338,https://root.cern,https://github.com/root-project/root/issues/10283,3,['Error'],['Error']
Availability,It seems that the failures are not related to the PR. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/460#issuecomment-289748809:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/460#issuecomment-289748809,1,['failure'],['failures']
Availability,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900#issuecomment-2182262756:188,failure,failure,188,https://root.cern,https://github.com/root-project/root/pull/15900#issuecomment-2182262756,1,['failure'],['failure']
Availability,It seems the error from https://github.com/doxygen/doxygen/issues/5333,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011071845:13,error,error,13,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011071845,1,['error'],['error']
Availability,It seems the failures are unrelated to this PR. Merging. Thanks for the contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/464#issuecomment-289831588:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/464#issuecomment-289831588,1,['failure'],['failures']
Availability,It seems these errors are inherited from master. Should re-trigger once our master is green.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/799#issuecomment-319096375:15,error,errors,15,https://root.cern,https://github.com/root-project/root/pull/799#issuecomment-319096375,1,['error'],['errors']
Availability,"It seems to work properly now, thanks! For which ROOT versions will this fix be available eventually? I was wondering if this modification could be pushed to the LCG release in `/cvmfs/sft.cern.ch` as well, but I don't know if this is feasible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1985824142:80,avail,available,80,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1985824142,1,['avail'],['available']
Availability,It seems we got a few errors with this PR on slc6 gcc62 (click on the Jenkins CI build details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-285935786:22,error,errors,22,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-285935786,1,['error'],['errors']
Availability,"It should be defined if C++14 variable templates are available, but it doesn't seem to work -- it's always undefined in my tests. Help? :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2293:53,avail,available,53,https://root.cern,https://github.com/root-project/root/pull/2293,1,['avail'],['available']
Availability,"It should happen before we use the module the first time and not; afterwards, otherwise we just crash instead of printing a nice; error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1054:130,error,error,130,https://root.cern,https://github.com/root-project/root/pull/1054,1,['error'],['error']
Availability,"It triggers an error (in modules) without this PR; I don't think we need a test. And even if, it shouldn't be here (the backport) but the master. Merging as is.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2977#issuecomment-439096963:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/2977#issuecomment-439096963,1,['error'],['error']
Availability,"It turns out the tutorial failures can be solved with https://github.com/root-project/root/pull/13112... As written before, the failures of `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` likely have a different reason. ~@jblomer FYI~ (actually `gtest-tree-ntuple-v7-test-ntuple-types` was easy to solve, https://github.com/root-project/root/pull/13131)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13058#issuecomment-1614364798:26,failure,failures,26,https://root.cern,https://github.com/root-project/root/issues/13058#issuecomment-1614364798,2,['failure'],['failures']
Availability,"It was not good to have this signature in RooAbsData, because the; implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but; the RooDataHist version instead took the sum of weights squared, which; is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in; different weight uncertainties depending on which data implementation; you use. This should not happen. It probably didn't happen to many; people, but I was affected by this when implementing; `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,; weightError)` from the virtual RooAbsData interface. The `add(row,; weight)` signature can stay, because this one is implemented; consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12479:170,error,error,170,https://root.cern,https://github.com/root-project/root/pull/12479,2,['error'],['error']
Availability,It went to draft after I saw test failure that were tracked down to the missing write lock when changing the autoloading state. This has now been corrected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15408#issuecomment-2096732430:34,failure,failure,34,https://root.cern,https://github.com/root-project/root/pull/15408#issuecomment-2096732430,2,"['down', 'failure']","['down', 'failure']"
Availability,It will be my honor to squash that last test failure tomorrow. @vgvassilev do we need anything else before we merge? Should we have a pass over this PR's history to clean it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1326752189:45,failure,failure,45,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1326752189,1,['failure'],['failure']
Availability,"It worked! Here the relevant output from `alma9`:; ```; Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec; Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec; Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec; Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec; ```; From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15596#issuecomment-2127378438:501,robust,robust,501,https://root.cern,https://github.com/root-project/root/pull/15596#issuecomment-2127378438,1,['robust'],['robust']
Availability,"It works for me. In your example, Isee:. > Fatal in TROOT::InitInterpreter: cannot load library libtinfo.so.5: cannot open shared object file: No such file or directory. What is going on there? Do you have this `libtinfo.so.5` available in the LD_LIBRARY_PATH?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1726042729:227,avail,available,227,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1726042729,1,['avail'],['available']
Availability,"It works now with `rcanvas/line.cxx`, but fails with `webgui/ping/ping.cxx` . But I will fix problem soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14774#issuecomment-1954583658:61,ping,ping,61,https://root.cern,https://github.com/root-project/root/pull/14774#issuecomment-1954583658,2,['ping'],['ping']
Availability,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298:416,avail,available,416,https://root.cern,https://github.com/root-project/root/pull/6298,1,['avail'],['available']
Availability,"It would greatly help memory safety if ROOT could use more smart pointers in its interfaces. However, the automatic downcasting of returned values is only working for raw pointers. It should work for smart pointers as well. For example, right now this doesn't work:; ```Python; class ClassA {; public:. ClassDef(ClassA, 0);; };. class ClassB : public ClassA {; public:; void helloB() {}. ClassDef(ClassB, 0);; };. ClassA *fooRawPtr() { return new ClassB{}; }. std::unique_ptr<ClassA> fooUniquePtr() { return std::make_unique<ClassB>(); }; ```; Output:; ```txt; <class cppyy.gbl.ClassB at 0x5e1ddf85ed20>; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 30, in <module>; out_2.helloB(); ^^^^^^^^^^^^; AttributeError: 'ClassA' object has no attribute 'helloB'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16210:116,down,downcasting,116,https://root.cern,https://github.com/root-project/root/issues/16210,1,['down'],['downcasting']
Availability,"It would help with your example:; ```txt; root [0] TList mylist = new TList(); ROOT_prompt_0:1:7: error: no viable conversion from 'TList *' to 'TList'; TList mylist = new TList(); ^ ~~~~~~~~~~~; /home/rembserj/spaces/master/root/src/build/include/TList.h:66:4: note: candidate constructor not viable: no known conversion from 'TList *' to 'const TList &' for 1st argument; dereference the argument with *; TList(const TList&) = delete;; ^; /home/rembserj/spaces/master/root/src/build/include/TList.h:73:13: note: explicit constructor is not a candidate; explicit TList(TObject *) : fAscending(kTRUE) { } // for backward compatibility, don't use; ```. The `explicit` means that you need to call the constructor explicitly, and in your example it's implicitly used via assignment. I think it would be a good compromise, because at least we don't break the backwards compatibility with the code like the one you just had to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451#issuecomment-2100558114:98,error,error,98,https://root.cern,https://github.com/root-project/root/pull/15451#issuecomment-2100558114,1,['error'],['error']
Availability,"It's a recent RooFit addition by @hageboeck , the failures seem to be due to precision issues",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7473#issuecomment-796868504:50,failure,failures,50,https://root.cern,https://github.com/root-project/root/pull/7473#issuecomment-796868504,1,['failure'],['failures']
Availability,It's a small change and it may help with the sporadic `dataframe-vary` unittest failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15628:80,failure,failures,80,https://root.cern,https://github.com/root-project/root/pull/15628,1,['failure'],['failures']
Availability,"It's a very common pattern in the RooFit implementation and user code to check the type when adding to a `RooAbsCollection`, and erroring out if the type is not correct. This commit suggests a function in `RooAbsCollection` to do exactly this, drastically reducing the code duplication in RooFit and experiment frameworks like CMS combine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14168:129,error,erroring,129,https://root.cern,https://github.com/root-project/root/pull/14168,1,['error'],['erroring']
Availability,"It's at the end of the `testRooFuncWrapper` file where you can exclude specific tests:; https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooFuncWrapper.cxx. In the case of Windows, it's the `AddPdf` fit that fails, which is encoded in `param3`. So wee need:; ```c++; INSTANTIATE_TEST_SUITE_P(RooFuncWrapper, FactoryTest,; testing::Values(param1, param2,; #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS); param3,; #endif; param4, param5, param6, param7, param8, param8p1, param9, param10, param11,; param12, param13),; [](testing::TestParamInfo<FactoryTest::ParamType> const &paramInfo) {; return paramInfo.param._name;; });; ```. By the way, this failure is maybe not even related to Clad, but could be because of different random numbers. I will follow up on this later after this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14654#issuecomment-1938555091:688,failure,failure,688,https://root.cern,https://github.com/root-project/root/pull/14654#issuecomment-1938555091,1,['failure'],['failure']
Availability,"It's doing what it should on the GPU node:; ```; 100% tests passed, 0 tests failed out of 2553; ; Label Time Summary:; cling = 150.99 sec*proc (104 tests); longtest = 5430.11 sec*proc (60 tests); matrix = 0.37 sec*proc (1 test); multithreaded = 1747.97 sec*proc (19 tests); python_runtime_deps = 410.85 sec*proc (26 tests); regression = 150.00 sec*proc (103 tests); roottest = 151.36 sec*proc (105 tests); tutorial = 4504.12 sec*proc (825 tests); ; Total Test time (real) = 1637.58 sec; ; The following tests did not run:; 	489 - TMVA-DNN-LSTM-BackpropagationCudnn (Disabled); ; ** Elapsed time for group ""Run tests"" 0:27:17.7; ```; The ubuntu20 failure looks unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16791#issuecomment-2447889671:646,failure,failure,646,https://root.cern,https://github.com/root-project/root/pull/16791#issuecomment-2447889671,1,['failure'],['failure']
Availability,"It's hard to pin down, but looking through the commit history and its incremental builds it seems that this PR made `tutorial-multicore-imt101_parTreeProcessing` very likely to fail on Windows 64-bit... FYI @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200#issuecomment-1903441528:17,down,down,17,https://root.cern,https://github.com/root-project/root/pull/14200#issuecomment-1903441528,1,['down'],['down']
Availability,"It's not easy to make the unit tests in `test_ProcessTimer.cxx` always; pass because they compare times spent in different processes that are; not deterministic. Therefore, the unit test is disabled for now. This was suggested by @Zeff020, the author of the test. Here is an example of a random failure:; https://github.com/root-project/root/pull/12000#issuecomment-1377703232. To be backported to v6.28",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12916:295,failure,failure,295,https://root.cern,https://github.com/root-project/root/pull/12916,1,['failure'],['failure']
Availability,"It's not great that we have to consider all these redundant overloads. I would suggest getting rid of them first, to keep the interface clean and consistent:; * https://github.com/root-project/root/pull/16443; ; What do you think, @lmoneta?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437#issuecomment-2353578161:50,redundant,redundant,50,https://root.cern,https://github.com/root-project/root/pull/16437#issuecomment-2353578161,1,['redundant'],['redundant']
Availability,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8374:14,fault,fault,14,https://root.cern,https://github.com/root-project/root/issues/8374,2,"['error', 'fault']","['error', 'fault']"
Availability,"It's worrying that the new CI has no errors: without the missing `import ROOT`, that code is broken",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13246#issuecomment-1634729995:37,error,errors,37,https://root.cern,https://github.com/root-project/root/pull/13246#issuecomment-1634729995,1,['error'],['errors']
Availability,"It's your call. C style loop or shutting down the warning?. Edit: Actually, we need an iterator based loop, so that we also support `std::list` and friends.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6678#issuecomment-713352159:41,down,down,41,https://root.cern,https://github.com/root-project/root/pull/6678#issuecomment-713352159,1,['down'],['down']
Availability,"It2 std::transform(_ExPo &&,const _FwdIt1,const _FwdIt1,_FwdIt2,_Fn) noexcept': expects 5 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(94,12): error C2783: '_OutIt std::transform(const _InIt,const _InIt,_OutIt,_Fn)': could not deduce template argument for '_Fn' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,12): error C2672: 'std::transform': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,73): error C2780: '_FwdIt3 std::transform(_ExPo &&,const _FwdIt1,const _FwdIt1,const _FwdIt2,_FwdIt3,_Fn) noexcept': expects 6 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,73): error C2780: '_OutIt std::transform(const _InIt1,const _InIt1,const _InIt2,_OutIt,_Fn)': expects 5 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,73): error C2780: '_FwdIt2 std::transform(_ExPo &&,const _FwdIt1,const _FwdIt1,_FwdIt2,_Fn) noexcept': expects 5 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,12): error C2783: '_OutIt std::transform(const _InIt,const _InIt,_OutIt,_Fn)': could not deduce template argumen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13377#issuecomment-1662101663:2187,error,error,2187,https://root.cern,https://github.com/root-project/root/pull/13377#issuecomment-1662101663,1,['error'],['error']
Availability,"It2,_FwdIt3,_Fn) noexcept': expects 6 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(94,73): error C2780: '_OutIt std::transform(const _InIt1,const _InIt1,const _InIt2,_OutIt,_Fn)': expects 5 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(94,73): error C2780: '_FwdIt2 std::transform(_ExPo &&,const _FwdIt1,const _FwdIt1,_FwdIt2,_Fn) noexcept': expects 5 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(94,12): error C2783: '_OutIt std::transform(const _InIt,const _InIt,_OutIt,_Fn)': could not deduce template argument for '_Fn' [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,12): error C2672: 'std::transform': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,73): error C2780: '_FwdIt3 std::transform(_ExPo &&,const _FwdIt1,const _FwdIt1,const _FwdIt2,_FwdIt3,_Fn) noexcept': expects 6 arguments - 4 provided [C:\build\workspace\root-pullrequests-build\build\roofit\roofit\RooFit.vcxproj] ; - [2023-08-02T12:13:49.079Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofit\src\RooSpline.cxx(97,73): error C2780: '_OutIt std::transform(const _InIt1,const _InIt1,const _InIt2,_OutIt,_Fn)': expects 5 arguments - 4 provided [C:\build\workspace\root-pullrequests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13377#issuecomment-1662101663:1601,error,error,1601,https://root.cern,https://github.com/root-project/root/pull/13377#issuecomment-1662101663,1,['error'],['error']
Availability,I’ve also seen these failures elsewhere so let’s merge this!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7392#issuecomment-791894679:21,failure,failures,21,https://root.cern,https://github.com/root-project/root/pull/7392#issuecomment-791894679,1,['failure'],['failures']
Availability,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:2778,failure,failure,2778,https://root.cern,https://github.com/root-project/root/issues/13811,1,['failure'],['failure']
Availability,"JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 29: TGraph 4 (Log scales setting order)....................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 30: TMultigraph and TGraphErrors.............................. OK; PDF output......................................... 30 FAILED; Result = 17994; Reference = 18198; Error = 204 (was 100); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 31: All Kind of TMultigraph................................... OK; PDF output......................................... 31 FAILED; Result = 27004; Reference = 27176; Error = 172 (was 150); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 32: TGraph, TArc, TPalette and TColor......................... OK; PDF output......................................... 32 FAILED; Result = 709766; Reference = 712308; Error = 2542 (was 500); JPG output................................................ OK; PNG output................................................ OK; **********************************************************************; * Star",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295#issuecomment-1866909548:10676,Error,Error,10676,https://root.cern,https://github.com/root-project/root/pull/14295#issuecomment-1866909548,1,['Error'],['Error']
Availability,"Jenkins build is fully green(!), GitHub actions have a couple of errors that seem unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13188#issuecomment-1622463237:65,error,errors,65,https://root.cern,https://github.com/root-project/root/pull/13188#issuecomment-1622463237,1,['error'],['errors']
Availability,"Jenkins errors are false positives and the PR looks good to me, except for a few formalities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1294#issuecomment-342835064:8,error,errors,8,https://root.cern,https://github.com/root-project/root/pull/1294#issuecomment-342835064,1,['error'],['errors']
Availability,"Jenkins is green, the failures on the new CI seem unrelated (Windows has `Failed to open the S3 connection: You must provide an auth secret.`, Fedora is a timeout in a distrdf test). Given that this PR fixes a recurring failure in nightlies/PR builds, I will go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14800#issuecomment-1962144958:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/14800#issuecomment-1962144958,2,['failure'],"['failure', 'failures']"
Availability,"Jenkins is unhappy about the last commit, apparently we have a number of `unhandled Error`s. Unfortunately I cannot reproduce locally on EL8 :confused: I'm going to remove that commit for now, and also make the new CI do a clean build so that it picks up a clean CMake configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12879#issuecomment-1562378395:84,Error,Error,84,https://root.cern,https://github.com/root-project/root/pull/12879#issuecomment-1562378395,1,['Error'],['Error']
Availability,"Jenkins reports a failure, but all the builds actually passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4159#issuecomment-519113649:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/4159#issuecomment-519113649,1,['failure'],['failure']
Availability,"Jira: https://sft.its.cern.ch/jira/browse/ROOT-10491. We miss the test for reading boolean branches with `RDataFrame.AsNumpy`! Added the test and start investigating when it breaks - such as reported in the Jira ticket. Following the discussion on the forum [here](https://root-forum.cern.ch/t/asnumpy-fails-with-boolean-branches/37282), we see that the error shows a missing `data` member for the `std::vector<bool>`:. ```; df.AsNumpy(); ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-10-e856f5516a02> in <module>(); ----> 1 df.AsNumpy(). /Applications/root_build/lib/ROOT.pyc in _RDataFrameAsNumpy(df, columns, exclude); 429 else:; 430 tmp = numpy.empty(len(cpp_reference), dtype=numpy.object); --> 431 for i, x in enumerate(cpp_reference):; 432 tmp[i] = x # This creates only the wrapping of the objects and does not copy.; 433 py_arrays[column] = ndarray(tmp, result_ptrs[column]). AttributeError: 'vector<bool>' object has no attribute 'data'; ```. The error seems to be triggered when iterating over `std::vector<bool>` in python. My guess is some weirdness in the given std version of macOS 10.15. @etejedor We should add a test for this at the right place not only for `AsNumpy`. Edit: Added a fix for current PyROOT by protecting the tp_iter field for `vector<bool>`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4718:354,error,error,354,https://root.cern,https://github.com/root-project/root/pull/4718,2,['error'],['error']
Availability,Jupyter failure was fixed!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11870#issuecomment-1346757708:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/11870#issuecomment-1346757708,1,['failure'],['failure']
Availability,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:563,avail,available,563,https://root.cern,https://github.com/root-project/root/pull/4652,1,['avail'],['available']
Availability,"Just FYI, `std::vector<int>::value_size` doesn't exist, which is why `TClass::GetClass()` tries again and again to see whether it has been made available in between the calls. This would not be an issue for an existing type, such as `std::vector<int>::value_type`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9029#issuecomment-1053991132:144,avail,available,144,https://root.cern,https://github.com/root-project/root/issues/9029#issuecomment-1053991132,1,['avail'],['available']
Availability,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984#issuecomment-1739815648:250,error,error,250,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648,2,['error'],['error']
Availability,"Just for completion, I have a Clang16 with MacOS 14.2.1. Could you point me a specific commit or you just compiled the master version recently ? ; ```; -- Found OpenGL: /Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/System/Library/Frameworks/OpenGL.framework; -- Looking for GLEW; -- Found GLEW: /opt/homebrew/lib/cmake/glew/glew-config.cmake; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:615 (message):; Please enable builtin Glew due bug in latest CMake (use cmake option; -Dbuiltin_glew=ON).; Call Stack (most recent call first):; CMakeLists.txt:298 (include); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14483#issuecomment-1919050085:359,Error,Error,359,https://root.cern,https://github.com/root-project/root/issues/14483#issuecomment-1919050085,1,['Error'],['Error']
Availability,"Just for documentation purposes, I am having fun with this at the moment; ```; 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:108: Failure; 503: Failed ; 503: ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing: ; 503: severity: kError ; 503: received: 0 times (required, fullMatch) ; 503: origin: ""Setup()"" ; 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree; player/test/DisappearingBranch1.root'. ; 503: ; 503: /home/vpadulan/Programs/rootproject/rootsrc/core/testsupport/src/TestSupport.cxx:113: Failure; 503: Failed ; 503: ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; 503: severity: kError ; 503: origin: ""Setup()"" ; 503: message: Branch 'col1' is not available from tree 't' in file '/home/vpadulan/Programs/rootproject/rootbuild/makeproxy-error-check-testing/tree/tree; player/test/DisappearingBranch1.root'.; ```. UPDATE:. This was due to a spurious `\n` character in the error message which is not visible when printed by ctest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16377#issuecomment-2334129931:170,Failure,Failure,170,https://root.cern,https://github.com/root-project/root/pull/16377#issuecomment-2334129931,7,"['Failure', 'avail', 'error']","['Failure', 'available', 'error', 'error-check-testing']"
Availability,"Just for reference and to ping @will-cern, this PR fixes the same issue that https://github.com/root-project/root/pull/13294 already identified earlier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13804#issuecomment-1747076103:26,ping,ping,26,https://root.cern,https://github.com/root-project/root/pull/13804#issuecomment-1747076103,1,['ping'],['ping']
Availability,"Just for the records, working with a software that uses ROOT as a library and switching on the address sanitiser in our unit tests, we get the following report with all `6.28.XX` versions:; ```; ==15==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8792 byte(s) in 75 object(s) allocated from:; #0 0x7ff05e914887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145; #1 0x7ff04609ad21 in clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (/SMASH/root_install/lib/libCling.so+0x15b5d21). SUMMARY: AddressSanitizer: 8792 byte(s) leaked in 75 allocation(s).; ```; **Using ROOT `6.26.10` does not display the problem.**. I am not sure this is exactly the same problem of this issue, but I did not want to open a new issue at first as in the description `clang::Parser::AnnotateTemplateIdToken` is part of the Valgrind output. If you need more information from my side, feel free to ask.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13130#issuecomment-1798152115:201,ERROR,ERROR,201,https://root.cern,https://github.com/root-project/root/issues/13130#issuecomment-1798152115,1,['ERROR'],['ERROR']
Availability,"Just for those curious, this is the 6.08 branch, so it does not yet have the IMT features from the failing tests, hence the failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1124#issuecomment-333930905:124,failure,failures,124,https://root.cern,https://github.com/root-project/root/pull/1124#issuecomment-333930905,1,['failure'],['failures']
Availability,"Just found that the problem appears in 6.30/04 as well, so at least can narrow down the change to between 6.30/02 and 6.30/04 ....; tested with `source /cvmfs/sft.cern.ch/lcg/views/LCG_105a/x86_64-el9-gcc13-opt/setup.sh` (6.30/04) vs `source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh` (6.30/02)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15269#issuecomment-2064458760:79,down,down,79,https://root.cern,https://github.com/root-project/root/issues/15269#issuecomment-2064458760,1,['down'],['down']
Availability,Just one fixup for an indentation error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15490#issuecomment-2113616942:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/15490#issuecomment-2113616942,1,['error'],['error']
Availability,"Just pushed a fix for the `dataframe-cache` test failure, let's wait for the builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5772#issuecomment-638202474:49,failure,failure,49,https://root.cern,https://github.com/root-project/root/pull/5772#issuecomment-638202474,1,['failure'],['failure']
Availability,"Just reformatting the relevant part as that's off screen for me:; ```; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: ; error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""';; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required; ```. With Xcode 12.5 I have in `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:308`; ```; #include <math.h>; ```; Does the build node have that, too? Which Xcode version is this? (Mine has `using ::signbit;` in line 321.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-834156449:191,error,error,191,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-834156449,1,['error'],['error']
Availability,"Just to add some documentation of the work on this issue, here is the error that I have gotten before changing to `.L`:; ```; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /home/jonas/tmp/7249/RooSDSCBShape.cxx and /home/jonas/tmp/7249/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TUnixSystem::ACLiC>: creating shared library /home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx.so; ^CError in <ACLiC>: Executing '/usr/bin/rootcling -v0 ""--lib-list-prefix=/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_map"" -f ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" -I/usr/include -I""/etc/root"" -I""/etc/root/cling"" -I""/usr/include"" -I""/build/root/src/build/include"" -I""/usr/include/python3.9"" -I""/build/root/src/build/include/"" -I""/usr/include/freetype2"" -D__ACLIC__ ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape.cxx"" ""/home/jonas/tmp/7249/.wscode.23b62870-72c4-11eb-8262-4c01a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_linkdef.h""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249#issuecomment-782168159:70,error,error,70,https://root.cern,https://github.com/root-project/root/issues/7249#issuecomment-782168159,1,['error'],['error']
Availability,"Just to be on the safe side I will not merge this PR until I have time to check with the people who saw the building errors before, probably next week (if not possible, after CSC)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2723#issuecomment-426270761:117,error,errors,117,https://root.cern,https://github.com/root-project/root/pull/2723#issuecomment-426270761,1,['error'],['errors']
Availability,"Just tried again with 2eefa59bf1c3b2288b623b89c8e072abec8a79b3 (clean rebuild):; ```c++; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /usr/include/c++/12/algorithm:60:; In file included from /usr/include/c++/12/bits/stl_algobase.h:67:; In file included from /usr/include/c++/12/bits/stl_iterator.h:85:; In file included from /usr/include/c++/12/bits/stl_construct.h:62:; /usr/include/c++/12/bits/stl_iterator_base_funcs.h:81:5: error: redefinition of '__distance'; __distance(_InputIterator __first, _InputIterator __last,; ^; /usr/include/c++/12/bits/stl_iterator_base_funcs.h:81:5: note: previous definition is here; __distance(_InputIterator __first, _InputIterator __last,; ^; ```. I guess there is still more to fix :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12037#issuecomment-1411695937:539,error,error,539,https://root.cern,https://github.com/root-project/root/issues/12037#issuecomment-1411695937,1,['error'],['error']
Availability,Just trying to understand whether more information is available about this item. I would like to find out whether this is an issue of ROOT(test) or the configuration of the machine...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552#issuecomment-2396009029:54,avail,available,54,https://root.cern,https://github.com/root-project/root/issues/16552#issuecomment-2396009029,1,['avail'],['available']
Availability,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::had",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:1588,Error,Error,1588,https://root.cern,https://github.com/root-project/root/issues/7982,2,['Error'],['Error']
Availability,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:3418,Error,Error,3418,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Error'],['Error']
Availability,K; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 7: TLatex 1.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 8: TLatex 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 9: TLatex 3 (TLatex in TPaveText)............................ OK; PDF output.......................................... 9 FAILED; Result = 14289; Reference = 14377; Error = 88 (was 50); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 10: TLatex 4 (Greek letters).................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 11: TLatex 5 (Mathematical Symbols)........................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 12: Text kerning.............................................. OK; PDF output................................................ OK; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295#issuecomment-1866909548:3389,Error,Error,3389,https://root.cern,https://github.com/root-project/root/pull/14295#issuecomment-1866909548,1,['Error'],['Error']
Availability,K; PNG output................................................ OK; C file result............................................. OK; Test 34: Text option............................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 35: Contour options........................................... OK; PDF output......................................... 35 FAILED; Result = 86601; Reference = 87126; Error = 525 (was 100); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 36: Lego options.............................................. OK; PDF output......................................... 36 FAILED; Result = 154868; Reference = 156361; Error = 1493 (was 500); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 37: Surface options........................................... OK; PDF output......................................... 37 FAILED; Result = 223580; Reference = 225206; Error = 1626 (was 750); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 38: Special contour options (AITOFF etc.)..................... OK; PDF output......................................... 38 FAILED; Result = 1282421; Reference = 1292739; Error = 10318 (was 8000); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295#issuecomment-1866909548:12991,Error,Error,12991,https://root.cern,https://github.com/root-project/root/pull/14295#issuecomment-1866909548,1,['Error'],['Error']
Availability,"KE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 10804: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\Attrs.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangAttrClasses.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 10813: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:1743,error,error,1743,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"Kind)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::WhileStmt::Create(clang::ASTContext const&, clang::VarDecl*, clang::Expr*, clang::Stmt*, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::ASTContext::getConstantArrayType(clang::QualType, llvm::APInt const&, clang::ArrayType::ArraySizeModifier, unsigned int) const'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXFunctionalCastExpr::Create(clang::ASTContext const&, clang::QualType, clang::ExprValueKind, clang::TypeSourceInfo*, clang::CastKind, clang::Expr*, llvm::SmallVector<clang::CXXBaseSpecifier*, 4u> const*, clang::SourceLocation, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXMethodDecl::Create(clang::ASTContext&, clang::CXXRecordDecl*, clang::SourceLocation, clang::DeclarationNameInfo const&, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, bool, clang::ConstexprSpecKind, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: collect2: error: ld returned 1 exit status; ```. when compiling with (v6-28-00-patches) 5ffba22ef571dea2d6eaf186662e19d5a7789a05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12209:9032,error,error,9032,https://root.cern,https://github.com/root-project/root/issues/12209,1,['error'],['error']
Availability,L.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPainter.h TVirtualPerfStats.h TVirtualPS.h TVirtualQConnection.h TVirtualRWMutex.h TVirtualTableInterface.h TVirtualViewer3D.h TVirtualX.h strlcpy.h snprintf.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h ROOT/RIntegerSequence.hxx ROOT/RMakeUnique.hxx ROOT/RNotFn.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h TClingRuntime.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h Getline.h /mnt/build/workspace/root-pullrequests-build/root/core/base/inc/LinkDef.h ; - fatal error: module map file '/mnt/build/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/module.modulemap' not found ; - input_line_4:1:10: fatal error: 'assert.h' file not found ; - Error: Error loading the default header files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4563#issuecomment-544634073:5775,error,error,5775,https://root.cern,https://github.com/root-project/root/pull/4563#issuecomment-544634073,4,"['Error', 'error']","['Error', 'error']"
Availability,"L=OFF -Dminuit:BOOL=ON -Dminuit2:BOOL=ON -Dmlp:BOOL=OFF -Dmonalisa:BOOL=OFF -Dmysql:BOOL=OFF -Dodbc:BOOL=OFF -Dopengl:BOOL=OFF -Doracle:BOOL=OFF -Dpgsql:BOOL=OFF -Dpythia6:BOOL=OFF -Dpythia8:BOOL=OFF -Dqt:BOOL=OFF -Dqtgsi:BOOL=OFF -Dr:BOOL=OFF -Drfio:BOOL=OFF -Droofit:BOOL=ON -Droot7:BOOL=OFF -Druby:BOOL=OFF -Dsapdb:BOOL=OFF -Dshadowpw:BOOL=OFF -Dspectrum:BOOL=OFF -Dsqlite:BOOL=OFF -Dsrp:BOOL=OFF -Dssl:BOOL=OFF -Dtable:BOOL=OFF -Dtbb:BOOL=OFF -Dtcmalloc:BOOL=OFF -Dtmva:BOOL=OFF -Dunuran:BOOL=ON -Dvc:BOOL=OFF -Dvdt:BOOL=ON -Dveccore:BOOL=OFF -Dvmc:BOOL=OFF -Dwebui:BOOL=OFF -Dx11:BOOL=OFF -Dxft:BOOL=OFF -Dxml:BOOL=ON -Dxrootd:BOOL=OFF -Dpyroot:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=17; ```; I got the following warning when building Celeritas' root dictionary (possibly unimportant):; ```; [1/4] Generating CeleritasRootInterface.cxx, libceleritas_io_rdict.pcm, libceleritas_io.rootmap; Disabling gnu++: clang has no __float128 support on this target!; Disabling gnu++: clang has no __float128 support on this target!; ```; and at runtime:; ```; info: Opening ROOT file at /ccs/home/s3j/.local/src/celeritas-summit/test/io/data/geant-exporter-data.root; Disabling gnu++: clang has no __float128 support on this target!; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_io not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1109820171:2897,Error,Error,2897,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1109820171,9,"['Error', 'avail']","['Error', 'available']"
Availability,"LGTM!. Before this commit, I was breaking with seg fault here:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <iostream>. int main(); {; ROOT::RDataFrame df(1);; auto c = ROOT::RDF::Experimental::VariationsFor(; df.Define(""x"", [] { return 42; }); .Sum<int>(""x""));; ROOT::RDF::SaveGraph(df, ""Graph3.dot""); // **break** here; }; ```; Now this works as expected and the produced Graph looks like: `df --> Define --> Sum`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10683#issuecomment-1143649513:51,fault,fault,51,https://root.cern,https://github.com/root-project/root/pull/10683#issuecomment-1143649513,1,['fault'],['fault']
Availability,"LGTM, I assume the failures are due to the infamous clang/gcc ABI bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/878#issuecomment-325205901:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/878#issuecomment-325205901,1,['failure'],['failures']
Availability,"LGTM, as well! I checked Windows failure (unrelated TBB failure), so @Axel-Naumann what do you think? Can we merge it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4750#issuecomment-573647041:33,failure,failure,33,https://root.cern,https://github.com/root-project/root/pull/4750#issuecomment-573647041,2,['failure'],['failure']
Availability,"LGTM, despite the failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/470#issuecomment-290339845:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/470#issuecomment-290339845,1,['failure'],['failures']
Availability,"LGTM, the failures are probably due to clang/gcc ABI bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/877#issuecomment-325206269:10,failure,failures,10,https://root.cern,https://github.com/root-project/root/pull/877#issuecomment-325206269,1,['failure'],['failures']
Availability,LLVM assertion failure in HandleUnionActiveMemberChange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13019:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/issues/13019,1,['failure'],['failure']
Availability,LLVM_ON_XXX is all over the place and already worked. I think it is defined also in LLVMConfig.cmake.in which is available for external builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5929#issuecomment-650988292:113,avail,available,113,https://root.cern,https://github.com/root-project/root/pull/5929#issuecomment-650988292,1,['avail'],['available']
Availability,LLVar.h:99:52: error: use of class template 'pair' requires template arguments ; - [2022-10-05T20:48:18.107Z] FAILED: roofit/xroofit/CMakeFiles/RooFitX.dir/src/xRooHypoSpace.cxx.o ; - [2022-10-05T20:48:18.682Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooNLLVar.h:99:52: error: use of class template 'pair' requires template arguments ; - [2022-10-05T20:48:18.682Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:179:12: error: non-const lvalue reference to type 'xRooNLLVar::xRooHypoPoint' cannot bind to a temporary of type 'void' ; - [2022-10-05T20:48:18.682Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:627:21: error: use of class template 'pair' requires template arguments ; - [2022-10-05T20:48:18.945Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:641:25: error: use of class template 'pair' requires template arguments ; - [2022-10-05T20:48:18.945Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:645:16: error: use of class template 'pair' requires template arguments ; - [2022-10-05T20:48:18.945Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:646:17: error: use of class template 'pair' requires template arguments ; - [2022-10-05T20:48:18.945Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:655:29: error: use of class template 'pair' requires template arguments . And 17 more. ### Warnings:; - [2022-10-05T20:44:50.307Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/RooFit/Detail/RooNode.h:49:13: warning: 'if' initialization statements are a C++17 extension [-Wc++17-extensions] ; - [2022-10-05T20:44:50.307Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/RooFit/Detail/RooNode.h:67:5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499#issuecomment-1268959614:1424,error,error,1424,https://root.cern,https://github.com/root-project/root/pull/11499#issuecomment-1268959614,1,['error'],['error']
Availability,"LRngWrapper` pointer and thus invokes its dtor as well. However, `~GSLRngWrapper()` frees the allocated memory only if `fOwn` pointer is set to true, which is only set so in the assignment operator, but not in the `Allocate()` member function. Therefore, the `GSLMCIntegrator` class is leaking memory. This poses a problem, when doing a large number of integrations inside a for loop. The leak was discovered by running valgrind and inspecting the code. Minimal example:; ```cpp; #include <Math/GSLMCIntegrator.h> // ROOT::Math::GSLMCIntegrator. /* built with:. g++ -ggdb3 -Og `root-config --cflags` mcintegrator.cpp -o mcintegrator \; `root-config --libs` -lMathMore. */. int; main(); {; for(unsigned i = 0; i < 20000; ++i); {; ROOT::Math::GSLMCIntegrator vegas(""vegas"", 0., 1.e-1, 10);; }; return 0;; }; ```. Before fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==12320== Memcheck, a memory error detector; ==12320== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==12320== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==12320== Command: ./mcintegrator; ==12320==; ==12320==; ==12320== HEAP SUMMARY:; ==12320== in use at exit: 100,655,858 bytes in 44,260 blocks; ==12320== total heap usage: 67,782 allocs, 23,522 frees, 101,539,078 bytes allocated; ==12320==; ==12320== 99,089,984 (319,984 direct, 98,770,000 indirect) bytes in 19,999 blocks are definitely lost in loss record 3,515 of 3,515; ==12320== at 0x4C2BE7F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==12320== by 0xAD090F2: gsl_rng_alloc (in /usr/lib/libgsl.so.23.0.0); ==12320== by 0x8223765: Allocate (GSLRngWrapper.h:99); ==12320== by 0x8223765: ROOT::Math::GSLMCIntegrator::GSLMCIntegrator(char const*, double, double, unsigned int) (GSLMCIntegrator.cxx:117); ==12320== by 0x108BF5: main (mcintegrator.cpp:8); ==12320==; ==12320== LEAK SUMMARY:; ==12320== definitely lost: 319,984 bytes in 19,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:1275,error,error,1275,https://root.cern,https://github.com/root-project/root/pull/928,1,['error'],['error']
Availability,"LT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () from /lib64/libpython3.11.so.1.0; #6 0x00007ffff7c8e96b in Py_BytesMain () from /lib64/libpython3.11.so.1.0; #7 0x00007ffff78a8550 in __libc_start",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799:3824,error,errors,3824,https://root.cern,https://github.com/root-project/root/issues/10799,1,['error'],['errors']
Availability,LVar.h:99:56: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.395Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:179:24: error: invalid initialization of non-const reference of type ‘xRooNLLVar::xRooHypoPoint&’ from an rvalue of type ‘void’ ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:627:25: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:641:29: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:645:20: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:646:21: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:655:33: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:659:33: error: missing template arguments before ‘(’ token ; - [2022-10-05T15:05:56.396Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/xroofit/src/xRooHypoSpace.cxx:664:29: error: missing template arguments before ‘(’ token . And 26 more. ### Warnings:; - [2022-10-05T15:05:21.906Z] /mnt/build/workspace/root-pullrequests-build/build/include/RooFit/Detail/RooNode.h:49:13: warning: 'if' initialization statements are a C++17 extension [-Wc++17-extensions] ; - [2022-10-05T15:05:21.906Z] /mnt/build/workspace/root-pullrequests-build/build/include/RooFit/Detail/RooNode.h:67:52: warning: 'if' initialization statements are a C++17 extension [-Wc++17-extensions] ; - [2022-10-0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499#issuecomment-1268572924:1423,error,error,1423,https://root.cern,https://github.com/root-project/root/pull/11499#issuecomment-1268572924,1,['error'],['error']
Availability,"L_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:3524,error,error,3524,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,Last days windows does not work reliably.; It is exactly a case with that build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3709#issuecomment-484269170:32,reliab,reliably,32,https://root.cern,https://github.com/root-project/root/pull/3709#issuecomment-484269170,1,['reliab'],['reliably']
Availability,Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o; /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory; #include <arrow/test-util.h>; ^~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3703:248,error,error,248,https://root.cern,https://github.com/root-project/root/pull/3703,1,['error'],['error']
Availability,"Latest commit addresses all comments. Examples from the build nodes:; Failure example: [ROOT-performance-centos8-multicore/default](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/109377/console) (pyspark is not installed on this system); ```; 13:04:01 -- Looking for PySpark; 13:04:01 -- Looking for PySpark dependency: Java; 13:04:01 -- Found Java: /usr/bin/java (found suitable version ""1.8.0.275"", minimum required is ""1.8"") found components: Runtime ; 13:04:01 -- Found Java /usr/bin/java; 13:04:01 -- Java version 1.8.0_275; 13:04:01 -- Python package 'pyspark' could not be imported with /usr/bin/python; 13:04:01 Traceback (most recent call last):; 13:04:01 File ""<string>"", line 1, in <module>; 13:04:01 ModuleNotFoundError: No module named 'pyspark'; 13:04:01 ; 13:04:01 CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; 13:04:01 Could NOT find PySpark (missing: PySpark_HOME) (Required is at least; 13:04:01 version ""2.4""); 13:04:01 Call Stack (most recent call first):; 13:04:01 /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); 13:04:01 cmake/modules/FindPySpark.cmake:55 (find_package_handle_standard_args); 13:04:01 cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); 13:04:01 cmake/modules/SearchInstalledSoftware.cmake:1876 (find_package); 13:04:01 CMakeLists.txt:219 (include); ```. Success example: [ROOT-fedora30/default](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/109385/consoleFull) ; ```; 13:05:04 -- Looking for PySpark; 13:05:04 -- Looking for PySpark dependency: Java; 13:05:04 -- Found Java: /usr/bin/java (found suitable version ""1.8.0.252"", minimum required is ""1.8"") found components: Runtime ; 13:05:04 -- Found Java /usr/bin/java; 13:05:04 -- Java version 1.8.0_252; 13:05:04 -- Found PySpark: /usr/local/lib/python3.7/site-packages/pyspark (found suitable version ""3.0.1"", minimum required is ""2.4"") ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7371#issuecomment-792725234:70,Failure,Failure,70,https://root.cern,https://github.com/root-project/root/pull/7371#issuecomment-792725234,2,"['Error', 'Failure']","['Error', 'Failure']"
Availability,Latest commit contains the fix for the test failure,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15578#issuecomment-2122485001:44,failure,failure,44,https://root.cern,https://github.com/root-project/root/pull/15578#issuecomment-2122485001,1,['failure'],['failure']
Availability,"Latest commit includes small modification suggested by Enrico, also including a more homogeneous approach wrt sanity checks across the three functions, i.e. anytime `TChain::GetListOfFiles` is called, the check `if (!chainFiles || chainFiles->GetEntries() == 0)` is present and throws an error if true, according to what was previously done in function `GetTreeFullPaths` only",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-814890257:288,error,error,288,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-814890257,1,['error'],['error']
Availability,"Latest ubuntu2310 run is green, the error is not related to this PR strictly. Merging now, thanks again @ferdymercury for the contribution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14627#issuecomment-1956272096:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/14627#issuecomment-1956272096,1,['error'],['error']
Availability,"Launching the Python tutorials from the 'tutorials/launcher.py' module injected; the `__main__` namespace in the tutorial itself. In general it is not a problem,; but it can sometimes hide errors like the one fixed by; https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves; the same purpose and the tutorials can thus be launched by simply calling; 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10207:189,error,errors,189,https://root.cern,https://github.com/root-project/root/pull/10207,1,['error'],['errors']
Availability,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:235,ping,ping,235,https://root.cern,https://github.com/root-project/root/pull/7777,1,['ping'],['ping']
Availability,"Let me add ATLAS reproducer based on the LCG dev3 Athena build:. % source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/current/AtlasSetup/scripts/asetup.sh master--dev3LCG,latest,Athena ; % root; root [0] new xAOD::IParticle();; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Tue/ROOT/HEAD/x86_64-centos7-gcc11-opt/etc/cling/std.modulemap:497:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; *** Break *** segmentation violation. Marcin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240#issuecomment-1433003115:366,error,error,366,https://root.cern,https://github.com/root-project/root/issues/12240#issuecomment-1433003115,1,['error'],['error']
Availability,"Let me add a reproducer where you only need to open the file and try to exit:. % setupATLAS -c centos7 --pwd /afs/cern.ch/work/w/wlampl/public/ATEAM-1001; % asetup Athena,21.0,latest; % root -b tmp.RDO. | Welcome to ROOT 6.08/06 http://root.cern.ch |; Attaching file tmp.RDO as _file0...; Warning in <TClass::Init>: no dictionary for class ROOT::TIOFeatures is available; (TFile *) 0x29cf190; root [1] .q. *** Break *** segmentation violation; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f6cdd6c560c in waitpid () from /lib64/libc.so.6; #1 0x00007f6cdd642f62 in do_system () from /lib64/libc.so.6; #2 0x00007f6cdecce102 in TUnixSystem::StackTrace() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #3 0x00007f6cdecd061c in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #4 <signal handler called>; #5 0x0000000001209080 in ?? (); #6 0x00007f6cdec52005 in TList::FindObject(TObject const*) const () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #7 0x00007f6cdec5237c in TList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #8 0x00007f6cdec50a01 in THashTable::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #9 0x00007f6cdec504dd in THashList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2202499805:361,avail,available,361,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2202499805,1,['avail'],['available']
Availability,"Let me know if you need some help. You need to go in the ""test"" directory of the ROOT sources et type make. Then run `./stressGraphics"" you will get several things like:; ```; Test 4: Fill patterns............................................. OK; PDF output.......................................... 4 FAILED; Result = 19386; Reference = 19255; ```; to fix this error you will need to replace 19225 by 19386 in stressGraphics.ref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5191#issuecomment-604292999:362,error,error,362,https://root.cern,https://github.com/root-project/root/pull/5191#issuecomment-604292999,1,['error'],['error']
Availability,"Let's not downplay the achievement here - my understanding is that this PR not only allows to compile ROOT on FreeBSD, but gets us a decently functional executable for first tests and further improvements :rocket: I agree with Axel that other problems and tests should be addressed in future issues / PRs. I think the final point to consider is how to merge. With the current state of commits addressing review comments, I would propose to squash on merge; unless @mkrzewic wants to rework the commits and fold the followups into the respective commits :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12996#issuecomment-1596614927:10,down,downplay,10,https://root.cern,https://github.com/root-project/root/pull/12996#issuecomment-1596614927,1,['down'],['downplay']
Availability,Let's ping @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10062#issuecomment-1380370283:6,ping,ping,6,https://root.cern,https://github.com/root-project/root/issues/10062#issuecomment-1380370283,1,['ping'],['ping']
Availability,"Like `qt5web`, it provides web-based display but for Qt6 WebEngine component.; Qt6 WebEngine available now in Qt 6.3 developer branch, can be tested with OpenSUSE Tumbleweed. Both `qt5web` and `qt6web` can be build at the same time and used independently.; Just when starting ROOT, specify `root --web=qt6`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9182:93,avail,available,93,https://root.cern,https://github.com/root-project/root/pull/9182,1,['avail'],['available']
Availability,"Link to compilation error:; https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:; https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a; template base class -- the full type is injected in the derived class; anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3098:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/3098,2,['error'],['error']
Availability,"Lock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:2:; In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:; In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:; In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here; module ""algorithm"" {; ^; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here; module ""array"" {; ^; (...skip many more...); ```. Building with `-Druntime_cxxmodules=OFF` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:8809,error,error,8809,https://root.cern,https://github.com/root-project/root/issues/10478,1,['error'],['error']
Availability,Log without the change with the new library:; ```; 34/1311 Test #325: test-stressgraphics .......................................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 40.45 sec; Create ./cernstaff.root; (TFile *) nullptr; **********************************************************************; * Starting Graphics - S T R E S S suite *; **********************************************************************; * Starting Basic Graphics - S T R E S S *; **********************************************************************; Test 1: TLine..................................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 2: TMarker................................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 3: TPolyLine................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 4: Fill patterns............................................. OK; PDF output.......................................... 4 FAILED; Result = 19240; Reference = 19386; Error = 146 (was 100); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; Test 5: TText 1 (Text attributes)................................. OK; PD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295#issuecomment-1866909548:155,Error,Error,155,https://root.cern,https://github.com/root-project/root/pull/14295#issuecomment-1866909548,2,['Error'],['Error']
Availability,"Looking at the error message, it seems `FWCoreFramework` has not been built yet when trying to build `CalibTrackerRecords`. Do you know why that is, has there been another error? This *may* propagate to weird redefinition errors...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765#issuecomment-1326547512:15,error,error,15,https://root.cern,https://github.com/root-project/root/issues/11765#issuecomment-1326547512,3,['error'],"['error', 'errors']"
Availability,"Looking at the jenkins build, this only fails because some test is failing. We don't actually change anything with this test (and it passes otherwise), so it seems to be just nondeterministic failure. Please merge @vgvassilev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/542#issuecomment-299999577:192,failure,failure,192,https://root.cern,https://github.com/root-project/root/pull/542#issuecomment-299999577,1,['failure'],['failure']
Availability,"Looking at the log, I found:; ```; if [ -d /py-venv/ROOT-CI/bin/ ]; then . /py-venv/ROOT-CI/bin/activate && echo PATH=$PATH >> $GITHUB_ENV; fi; ```; Adding this to the VM, more test passes, I am now down to:; ```; 567 - tutorial-dataframe-df102_NanoAODDimuonAnalysis (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2289919177:108,echo,echo,108,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2289919177,2,"['down', 'echo']","['down', 'echo']"
Availability,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10618:183,error,erroring,183,https://root.cern,https://github.com/root-project/root/issues/10618,1,['error'],['erroring']
Availability,Looks OK. The failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2520#issuecomment-435433212:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2520#issuecomment-435433212,1,['failure'],['failures']
Availability,Looks good despite the failures (they are due to another issue).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/447#issuecomment-287751151:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/447#issuecomment-287751151,1,['failure'],['failures']
Availability,Looks good with the tests now! The `roottest` failure has probably nothing to do with this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1484583302:46,failure,failure,46,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1484583302,1,['failure'],['failure']
Availability,"Looks good, I do not see either how this can be implemented without the extra regex search. Let's put it in?; Are the test failures related to these changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1903#issuecomment-383869003:123,failure,failures,123,https://root.cern,https://github.com/root-project/root/pull/1903#issuecomment-383869003,1,['failure'],['failures']
Availability,"Looks like @peremato ninja'd me already, saw the failing build through email and recognized the cmake error through the exit status code on the Jenkins log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/784#issuecomment-316723597:102,error,error,102,https://root.cern,https://github.com/root-project/root/pull/784#issuecomment-316723597,1,['error'],['error']
Availability,Looks like Apple / libc++ broke things:; ```; $ cat repro.cxx; #include <cuchar>; #include <iosfwd>; std::mbstate_t *s;; $ clang -std=c++17 -c repro.cxx; In file included from repro.cxx:2:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iosfwd:99:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__mbstate_t.h:44:9: error: target of using declaration conflicts with declaration already in scope; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mbstate_t.h:32:28: note: target of using declaration; typedef __darwin_mbstate_t mbstate_t;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: conflicting declaration; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; In file included from repro.cxx:2:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iosfwd:230:14: error: reference to unresolved using declaration; typedef fpos<mbstate_t> streampos;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cuchar:49:1: note: using declaration annotated with 'using_if_exists' here; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; ```; (etc). So - just don't upgrade macOS 🤣 Let [me see with the libc++ folks](https://github.com/llvm/llvm-project/issues/62573).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536464646:472,error,error,472,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536464646,2,['error'],['error']
Availability,Looks like CDash is down.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5843#issuecomment-642034635:20,down,down,20,https://root.cern,https://github.com/root-project/root/pull/5843#issuecomment-642034635,1,['down'],['down']
Availability,Looks like Jenkins setup failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4562#issuecomment-544518583:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/4562#issuecomment-544518583,1,['failure'],['failure']
Availability,"Looks like errors are due to the infrastructure, not this PR. I will restart the build once that is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1658#issuecomment-367683858:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/1658#issuecomment-367683858,1,['error'],['errors']
Availability,Looks like only TGeoCone was ignoring name.; Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3346:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/3346,2,['error'],['error']
Availability,"Looks like only TGeoCone was ignoring name.; Fixes error described in https://root-forum.cern.ch/t/32493; Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3340:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/3340,1,['error'],['error']
Availability,"Looks like the builds and tests are happy, not sure what that error is...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10498#issuecomment-1114149611:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/10498#issuecomment-1114149611,1,['error'],['error']
Availability,Looks like the failure is not modules-related. Shall we close that PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2022#issuecomment-389660341:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/pull/2022#issuecomment-389660341,1,['failure'],['failure']
Availability,Looks like the jenkins build is having problems with the checkout ? Its failing with. ```; ERROR: Timeout after 10 minutes; ERROR: Error fetching remote repo 'origin'; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453#issuecomment-288187928:91,ERROR,ERROR,91,https://root.cern,https://github.com/root-project/root/pull/453#issuecomment-288187928,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,Looks like the windows failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616#issuecomment-479208807:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/3616#issuecomment-479208807,1,['failure'],['failure']
Availability,"Looks like we need SDKROOT workaround used for 6.22 back:; git diff bump-root-6.22.06 Formula/root.rb; ```diff; ...; def install; - # Work around ""error: no member named 'signbit' in the global namespace""; - ENV.delete(""SDKROOT"") if DevelopmentTools.clang_build_version >= 900; -; # Freetype/afterimage/gl2ps/lz4 are vendored in the tarball, so are fine.; # However, this is still permitting the build process to make remote; # connections. As a hack, since upstream support it, we inreplace; @@ -96,6 +81,10 @@ class Root < Formula; cxx_version = (MacOS.version < :mojave) ? 14 : 17; args << ""-DCMAKE_CXX_STANDARD=#{cxx_version}""; ; + # TODO: probably can be removed; + runtime_cxxmodules = (MacOS.version >= :catalina) ? ""ON"" : ""OFF""; + args << ""-Druntime_cxxmodules=#{runtime_cxxmodules}""; +; # Homebrew now sets CMAKE_INSTALL_LIBDIR to /lib, which is incorrect; # for ROOT with gnuinstall, so we set it back here.; args << ""-DCMAKE_INSTALL_LIBDIR=lib/root""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-843430390:147,error,error,147,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-843430390,1,['error'],['error']
Availability,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6770#issuecomment-803646768:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/6770#issuecomment-803646768,1,['failure'],['failures']
Availability,"Looks really great, thank you very much. There is only one issue. The history is not being added. I tracked it down to here:. ![image](https://user-images.githubusercontent.com/10653970/108262954-990d7980-7133-11eb-8a03-e76a0c8e9619.png). The command is about to be added, but the history file name is empty, thus it returns on line 73. `fContext->GetHistory()` on TextInput.cpp has an empty history filename. I would suggest that, if SetHistAdd() is called, then it would set the default hist file name in the fContext. Or alternatively, a second parameter in the SetHistAdd function in order to set a custom hist file name. The function to set the hist name is:; `Gl_histinit`. ![image](https://user-images.githubusercontent.com/10653970/108263494-5b5d2080-7134-11eb-9d31-59686ef475c5.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-780829052:111,down,down,111,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-780829052,1,['down'],['down']
Availability,"Lowering.h(1982): message : see declaration of 'llvm::TargetLoweringBase::isTruncateFree' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXAsmPrinter.cpp)C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale(1992,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_2c11ad25sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXReplaceImageHandles.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2020-08-13T07:46:32.521Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/MachineValueType.h(895,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_de9335b2ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXISelDAGToDAG.cpp)C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Target/TargetLowering.h(107): note: see declaration of 'llvm::TargetLoweringBase' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXAsmPrinter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2020-08-13T07:46:32.521Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXAssignValidGlobalNames.cpp : fatal error C1083: Cannot open compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.dir\Release\NVPTXAssignValidGlobalNames.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6175#issuecomment-673320756:1662,error,error,1662,https://root.cern,https://github.com/root-project/root/pull/6175#issuecomment-673320756,1,['error'],['error']
Availability,"MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2176,error,errors,2176,https://root.cern,https://github.com/root-project/root/issues/14492,1,['error'],['errors']
Availability,"MBinaryFormat.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-541437877:2230,error,error,2230,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-541437877,2,['error'],['error']
Availability,"ME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ~ ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope; SP_TClassManip(theClass);; ^~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:18961,error,error,18961,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,"MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2908,error,errors,2908,https://root.cern,https://github.com/root-project/root/issues/6421,2,['error'],['errors']
Availability,"MSVC\14.23.28105\include\xtree(630,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LiveInterval.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum(1247,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\PostOrderCFGView.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2021-05-04T07:51:52.743Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/ExprCXX.h(3039,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseDeclCXX.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-05-04T07:51:53.144Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringMap.h(237,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseTemplate.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-05-04T07:51:53.144Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(4387,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Analysis\SyncDependenceAnalysis.cpp) [C:\build\workspace\root-pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8082#issuecomment-831753444:2140,error,error,2140,https://root.cern,https://github.com/root-project/root/pull/8082#issuecomment-831753444,1,['error'],['error']
Availability,"MTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\TableGen\StringMatcher.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\TableGen\LLVMTableGen.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(60,45): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(70,46): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\DebugInfo\MSF\LLVMDebugInfoMSF.vcxproj] ; - C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(77,49): error C2143: syntax error: missing ',' before '&lt;' (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\DebugInfo\MSF\MappedBlockStream.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Deb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4491#issuecomment-541437877:2623,error,error,2623,https://root.cern,https://github.com/root-project/root/pull/4491#issuecomment-541437877,2,['error'],['error']
Availability,Mac has a strange failure:; ```; 14:37:56 CMake Error at interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt:120 (file):; 14:37:56 file failed to open for reading (No such file or directory):; 14:37:56 ; 14:37:56 /build/jenkins/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/clang.order; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299#issuecomment-526588086:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/4299#issuecomment-526588086,2,"['Error', 'failure']","['Error', 'failure']"
Availability,MacOS failure is pre-existing (and about to be fixed by a PR in roottest),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11693#issuecomment-1312520980:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/pull/11693#issuecomment-1312520980,1,['failure'],['failure']
Availability,MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1027:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/functional:515:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/boyer_moore_searcher.h:25:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/unordered_map:530:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__node_handle:65:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/optional:547:5: error: no template named 'is_trivially_destructible'; did you mean 'is_trivially_constructible'?; is_trivially_destructible<_Tp>::value &&; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_constructible.h:22:29: note: 'is_trivially_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:21225,error,error,21225,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1027:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/functional:515:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/boyer_moore_searcher.h:25:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/unordered_map:530:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__node_handle:65:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/optional:579:5: error: no template named 'is_trivially_destructible'; did you mean 'is_trivially_constructible'?; is_trivially_destructible<_Tp>::value &&; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_constructible.h:22:29: note: 'is_trivially_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:23256,error,error,23256,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:13:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:19:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:26:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:31:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:38:7: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:49:7: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:60:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:67:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:99:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/tree/dataframe/test/dataframe_interface.cxx:120:4: error: unknown type name 'RDataFrame'; did you mean 'ROOT::RDataFrame'? . And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2058#issuecomment-391319293:1068,error,error,1068,https://root.cern,https://github.com/root-project/root/pull/2058#issuecomment-391319293,6,['error'],['error']
Availability,"Macro can run in batch, but one cannot really test result of the running macro.; Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13919#issuecomment-1778864629:143,reliab,reliable,143,https://root.cern,https://github.com/root-project/root/pull/13919#issuecomment-1778864629,1,['reliab'],['reliable']
Availability,Made TFile Error message more accurate,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10656:11,Error,Error,11,https://root.cern,https://github.com/root-project/root/pull/10656,1,['Error'],['Error']
Availability,"Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609:701,error,errors,701,https://root.cern,https://github.com/root-project/root/pull/6609,1,['error'],['errors']
Availability,"Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3; versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,; and at the same time to change the function signature such that; it can also accept an arbitrary number of observables directly via; variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:; ```Python; effPdf.fitTo(data, ConditionalObservables=(x, y)); ```; instead of:; ```Python; effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)); ```; although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8416:531,failure,failures,531,https://root.cern,https://github.com/root-project/root/pull/8416,1,['failure'],['failures']
Availability,Make ReadClass error message more verbose,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/911:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/911,1,['error'],['error']
Availability,Make manual available offline,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421:12,avail,available,12,https://root.cern,https://github.com/root-project/root/issues/7421,1,['avail'],['available']
Availability,"Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14145:92,error,errors,92,https://root.cern,https://github.com/root-project/root/pull/14145,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Make sure `etc/gitinfo.txt` is generated before building ROOT. This should fix the following errors when building from scratch:; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14356:93,error,errors,93,https://root.cern,https://github.com/root-project/root/pull/14356,2,"['Error', 'error']","['Error', 'errors']"
Availability,Make tests fail if ASan finds an errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/10005,1,['error'],['errors']
Availability,Make the missing error in rootcling a warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/946:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/946,1,['error'],['error']
Availability,"MakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b82",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:12560,error,error,12560,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"MakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:5460,error,error,5460,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,Makes sense. What about adding a //NOLINT comment to suppress error on T tab[maxFound] ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800069888:62,error,error,62,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800069888,1,['error'],['error']
Availability,"Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6096:159,avail,available,159,https://root.cern,https://github.com/root-project/root/pull/6096,1,['avail'],['available']
Availability,"Managed to fix the file path thing, however it creates one annotation per platform. Will add an additional matrix option to enable/disable annotations so that only one build displays errors (probably the image with the latest gcc); ![image](https://user-images.githubusercontent.com/82065181/225619699-2781b334-7287-4660-95c4-9ddb63afd479.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12185#issuecomment-1471893240:183,error,errors,183,https://root.cern,https://github.com/root-project/root/issues/12185#issuecomment-1471893240,1,['error'],['errors']
Availability,Many CI failures has nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16461#issuecomment-2358968241:8,failure,failures,8,https://root.cern,https://github.com/root-project/root/pull/16461#issuecomment-2358968241,1,['failure'],['failures']
Availability,"Many improvements in CEF:; - support POST requests, let transfer arbitrary data from client to server; - replace text-based cefQuery messaging by longpoll, required for binary transfer; - assign X11 error handler to avoid application abort in case of minor X11 warnings; - use single-process mode in batch to reduce number of running processes. Provide special handling of batch mode for Chrome and Firefox:; - both support `--headless` mode completely without X ; - very simple workaround to stop browser after 30 s with `timeout 30 chromium ...` command; - let configure custom shell commands via `.rootrc` parameters. Changes in http and webgui libraries:; - ""hide"" TCivetweb, TFastCgi, THttpWSEngine classes from end-user (@Axel-Naumann); - remove some comments from civetweb.c (@amadio); - use std::copy() instead of memcpy() for std::string (@Axel-Naumann); - introduce simple key identification of clients, let recognize which client starts by TWebWindow::Show(); - simplify cmake files, separate v7 code in FitPanel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886:199,error,error,199,https://root.cern,https://github.com/root-project/root/pull/1886,1,['error'],['error']
Availability,"Many people pythonized the RooWorkspace themselves by adding a new; attribute `_import` that calls getattr(self, ""import"") under the; hood. However, `_import` is now the reference to the original cppyy; overload, and resetting it with a wrapper around `import` would cause; infinite recursions! We prevent resetting that attribute here, which; is a clearer error to the user than an infinite call stack involving; the internal pythonization code. The ""official"" way of calling `RooWorkspace::import()` in PyROOT is now `RooWorkspace.Import`. Should be backported to the 6.26 release if possible, so that people are not caught by surprise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9896:357,error,error,357,https://root.cern,https://github.com/root-project/root/pull/9896,1,['error'],['error']
Availability,Many thanks Simon. That worked. . Axel:. ***@***.*** ~]$ curl -v --show-error --cacert /tmp/x509up_u`id -u` --connect-timeout 300 --max-time 3600 --capath /etc/grid-security/certificates --cert /tmp/x509up_u`id -u` --key /tmp/x509up_u`id -u` -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root -o /dev/null; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::40...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:72,error,error,72,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['error'],['error']
Availability,"Map': no matching overloaded function found [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: 'std::vector&lt;std::result_of&lt;F(void)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TThreadExecutor::Map(F,unsigned int)': could not deduce template argument for 'Cond' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: [ [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: _Ty=std::result_of&lt;F(void)&gt;::type [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: ] [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: 'std::vector&lt;std::result_of&lt;F(INTEGER)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TExecutor&lt;ROOT::TThreadExecutor&gt;::Map(F,std::initializer_list&lt;T&gt;)': could not deduce template argument for 'std::initializer_list&lt;T&gt;' fro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682883281:2168,error,error,2168,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682883281,1,['error'],['error']
Availability,"Map.h(122,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAGAddressAnalysis.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-05-18T13:44:26.116Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtr1common(65,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\InstCombine\InstCombineCalls.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\InstCombine\LLVMInstCombine.vcxproj] ; - [2022-05-18T13:44:26.116Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(671,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopUnswitch.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-05-18T13:44:26.116Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1636,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LowerSwitch.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-05-18T13:44:38.555Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\LoopVersioning.cpp(327,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] . And 23 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10575#issuecomment-1130042523:2314,error,error,2314,https://root.cern,https://github.com/root-project/root/pull/10575#issuecomment-1130042523,3,['error'],['error']
Availability,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7756:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/7756,1,['error'],['errors']
Availability,"Master is broken after this merge. There is a header missing in git.; ```; [ 65%] Built target XMLIO; gmake[2]: *** No rule to make target '/home/amadio/src/root/net/http/inc/TCivetweb.h', needed by 'net/http/G__RHTTP.cxx'. Stop.; gmake[1]: *** [CMakeFiles/Makefile2:16748: net/http/CMakeFiles/RHTTP.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs.... ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886#issuecomment-382733926:309,Error,Error,309,https://root.cern,https://github.com/root-project/root/pull/1886#issuecomment-382733926,1,['Error'],['Error']
Availability,"Matevz, could you fix the errors reported by Travis? (clang-format and clang-tidy) Thanks! (I don't know why the Jenkins CI builds are failing...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566#issuecomment-300737655:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/566#issuecomment-300737655,1,['error'],['errors']
Availability,MathCore.h Math/ProbFuncMathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:327:13: error: use of undeclared identifier 'BaseFunc' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:53: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:353:25: error: expected ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:6913,error,error,6913,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,1,['error'],['error']
Availability,MathCore.h Math/QuantFuncMathCore.h Math/Random.h Math/RandomFunctions.h Math/RanluxppEngine.h Math/RichardsonDerivator.h Math/RootFinder.h Math/SpecFuncMathCore.h Math/StdEngine.h Math/TDataPoint.h Math/TDataPointN.h Math/TRandomEngine.h Math/Types.h Math/Util.h Math/VirtualIntegrator.h Math/WrappedFunction.h Math/WrappedParamFunction.h TComplex.h TKDTree.h TKDTreeBinning.h TMath.h TRandom.h TRandom1.h TRandom2.h TRandom3.h TRandomGen.h TStatistic.h VectorizedTMath.h /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc/LinkDef.h ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:30: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:36: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:42: error: unknown type name 'T' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:49: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:325:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:327:13: error: use of undeclared identifier 'BaseFunc' ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:53: error: non-member function cannot have 'const' qualifier ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:331:7: error: 'virtual' can only appear on non-static member functions ; - [2021-06-23T12:37:06.205Z] /mnt/build/workspace/root-pullrequests-build/build/include/Math/IFunction.h:353:25: error: expected class name . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369#issuecomment-866798208:7057,error,error,7057,https://root.cern,https://github.com/root-project/root/pull/8369#issuecomment-866798208,6,['error'],['error']
Availability,Maybe I was not precise - compiler cannot find `snprintf`. It is seen in error messages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11861#issuecomment-1348105789:73,error,error,73,https://root.cern,https://github.com/root-project/root/pull/11861#issuecomment-1348105789,1,['error'],['error']
Availability,"Maybe a few more notes to make the review easier, because this is a huge patch. * The previous code used macros to log things. I found that the macros are not needed, so I replaced all the macros with method calls to MnPrint::Error, MnPrint::Info, ....; * The old logging made a useful habit of prefixing messages with a string to indicate the origin, e.g. when you logged from MnHesse, messages would be prefixed with ""MnHesse:"". Inside ``MnHesse``, to stay with the example, you might have seen code like this; ```c++; MN_INFO_MSG(""MnHesse: Some foo happened"");; [...]; MN_INFO_MSG(""MnHesse: Some bar happened"");; [...]; int n = 5;; MN_INFO_MSG(""MnHesse: Frobinated"", n, ""glorps"");; ```; Setting the prefix by hand was error prone and repetetive and made the logging code more distractive from the actual code. Especially now, since all the debug messages should also have this prefix, I wanted to automate this. So I turned MnPrint into a class that one can instantiate with a prefix for a given scope.; ```c++; MnPrint print(""MnHesse""); // appears once at the beginning of a long method; [...]; print.Info(""Some foo happened"");; [...]; print.Info(""Some bar happened"");; [...]; int n = 5;; print.Info(""Frobinated"", n, ""glorps"");; ```; The method ``MnPrint::Info`` uses the prefix set in the MnPrint ctor. The ctor of MnPrint also has an optional argument to print with a local print level. If this is not set, the global print level is used. In the long run (not in this patch), we should get rid of the global print level, because global mutable variables are difficult to reason about and in particular do not play nice with multi-threading. This design prepares for that step.; * I generally made sure that the logging messages contain the same information as the previous ones, but I reduced excess whitespace and improved the formatting. Some debug messages added several empty lines to the output, which made the logs hard to read.; * In very few isolated cases I removed redundant messages. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-719713799:226,Error,Error,226,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-719713799,2,"['Error', 'error']","['Error', 'error']"
Availability,"Maybe check first the log file of the Doxygen build. Close to the end, it will say output an error like:; ```; Running dot...; Patching output file 1/1; Running qhelpgenerator...; qhelpgenerator: could not exec '/usr/lib/qt5/bin/qhelpgenerator': No such file or directory; error: failed to run qhelpgenerator on index.qhp; lookup cache used 1000/65536 hits=4591 misses=1060; finished...; [100%] Built target doc; ```. If that's the case, then yes, it must be relaunched.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009990569:93,error,error,93,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009990569,2,['error'],['error']
Availability,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315426448:200,error,error,200,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448,1,['error'],['error']
Availability,Maybe related with thread safety? Can you run it with helgrind? Or do you get the same error with ROOT::EnableThreadSafety() activated?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-888648258:87,error,error,87,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-888648258,1,['error'],['error']
Availability,"Maybe the connections were from commodity network? Are you able to ping webdav.lcg.triumf.ca?. Thanks,. Di. > On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.***> wrote:; > ; > ﻿ Hi Axel,; > ; > I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; > ; > Simon and Di, Axel has this issue and me a similar one - any ideas ?; > ; >>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 ) I tried with curl but I get; >>> ; >>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >>> * Trying 206.12.9.197:2880...; >>> * TCP_NODELAY set; >>> * Trying 2607:f8f0:660:3::36:2880...; >>> * TCP_NODELAY set; >>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>> Is that expected?; >>> ; > ; >> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >> * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); >> * Trying 2607:f8f0:660:3::36...; >> * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); >> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:67,ping,ping,67,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,1,['ping'],['ping']
Availability,"Maybe to be clearer, I would expect the output to be:; ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; RuntimeError: My exception; ```; I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16405#issuecomment-2345639881:399,error,error,399,https://root.cern,https://github.com/root-project/root/issues/16405#issuecomment-2345639881,1,['error'],['error']
Availability,"Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(); Maybe you need to load the corresponding shared library?; root [3] .q. $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] auto firstTwo2 = Take(v, 2);; ROOT_prompt_1:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'; |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>; | |-DeclStmt 0x2b442a0 <line:1:1, col:28>; | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'; | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2; | `-NullStmt 0x2b442b8 <line:2:1>; |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [2] .q. ```. ### Setup. 1. ROOT version; * 6.22/08. ```; ROOT Version: 6.22/08; Built for linuxx8664gcc on Mar 10 2021, 14:20:04; From tags/v6-22-08@v6-22-08; ```. * 6.25/01; ```; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```. 2. Operating system: NixOS, a linux distribution; * `nix-info -m`; - system: `""x86_64-linux""`; - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`; - multi-user?: `yes`; - sandbox: `ye",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:10243,error,error,10243,https://root.cern,https://github.com/root-project/root/issues/9261,2,['error'],['error']
Availability,"Maybe, see https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10271#issuecomment-1152383332:62,error,error-rint-pcm-is-out-of-date-cannot-read-module-signature,62,https://root.cern,https://github.com/root-project/root/issues/10271#issuecomment-1152383332,1,['error'],['error-rint-pcm-is-out-of-date-cannot-read-module-signature']
Availability,"Maybe. If I just run `ping.cxx` test, I see that chromium uses more than `1G` of virtual memory. May be one should also set/increase this parameter for the docker?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1682216608:22,ping,ping,22,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1682216608,1,['ping'],['ping']
Availability,"Merged, apologies for the delay and thanks for pinging me by means of a PR! :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6465#issuecomment-721263236:47,ping,pinging,47,https://root.cern,https://github.com/root-project/root/issues/6465#issuecomment-721263236,1,['ping'],['pinging']
Availability,"Merged, since failures are not related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2800#issuecomment-430196811:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2800#issuecomment-430196811,1,['failure'],['failures']
Availability,Merging (errors are unrelated),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3700#issuecomment-483580447:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/3700#issuecomment-483580447,1,['error'],['errors']
Availability,"Merging since this is anyway needed, the 2 test failures seem unrelated for now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13251#issuecomment-1635528552:48,failure,failures,48,https://root.cern,https://github.com/root-project/root/pull/13251#issuecomment-1635528552,1,['failure'],['failures']
Availability,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1761301310:112,failure,failures,112,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1761301310,1,['failure'],['failures']
Availability,"Merging this since the `master` nightlies went well, besides the unrelated Windows build failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16052#issuecomment-2238581904:89,failure,failures,89,https://root.cern,https://github.com/root-project/root/pull/16052#issuecomment-2238581904,1,['failure'],['failures']
Availability,Merging to fix failures in master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7860#issuecomment-820282481:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/7860#issuecomment-820282481,1,['failure'],['failures']
Availability,"Merging, as failure of `roottest-python-numba-numba` on windows is unrelated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16334#issuecomment-2321264303:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/16334#issuecomment-2321264303,1,['failure'],['failure']
Availability,"Merging, because dataframe test failures should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3325#issuecomment-458168269:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/3325#issuecomment-458168269,2,['failure'],['failures']
Availability,"Merging, since error is unrelated to changes that was done in this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5666#issuecomment-631989230:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/5666#issuecomment-631989230,1,['error'],['error']
Availability,Merging. Error is unrelated (Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5688#issuecomment-634576526:9,Error,Error,9,https://root.cern,https://github.com/root-project/root/pull/5688#issuecomment-634576526,1,['Error'],['Error']
Availability,Message from Windows build is misleading - build was done without any error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10688#issuecomment-1144545822:70,error,error,70,https://root.cern,https://github.com/root-project/root/pull/10688#issuecomment-1144545822,1,['error'],['error']
Availability,"MetaCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96; --Type <RET> for more, q to quit, c to continue without paging--; #139 0x00007fffefbf7506 in cling::MetaProcessor::process (this=0x555556018a10, input_line=..., compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess, result=0x7fffffffa830, disableValuePrinting=false); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #140 0x00007fffef6789ae in HandleInterpreterException (metaProcessor=0x555556018a10, input_line=0x5555564c5110 "".X /home/jun/dev/root/Debug/./Demo2.C"", compRes=@0x7fffffffa82c: cling::Interpreter::kSuccess,; result=0x7fffffffa830) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2517; #141 0x00007fffef6783b9 in TCling::ProcessLine (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74) at /home/jun/dev/root/core/metacling/src/TCling.cxx:2661; #142 0x00007fffef67ad44 in TCling::ProcessLineSynch (this=0x5555555eea60, line=0x5555555d6dc0 "".X /home/jun/dev/root/Debug/./Demo2.C"", error=0x7fffffffdb74); at /home/jun/dev/root/core/metacling/src/TCling.cxx:3593; #143 0x00007ffff7b1d58c in TApplication::ExecuteFile (file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1675; #144 0x00007ffff7b1c9e0 in TApplication::ProcessFile (this=0x5555555d5890, file=0x7fffffffbae3 ""Demo2.C"", error=0x7fffffffdb74, keep=false) at /home/jun/dev/root/core/base/src/TApplication.cxx:1547; #145 0x00007ffff7b1c713 in TApplication::ProcessLine (this=0x5555555d5890, line=0x7fffffffbae0 "".x Demo2.C"", sync=false, err=0x7fffffffdb74) at /home/jun/dev/root/core/base/src/TApplication.cxx:1520; #146 0x00007ffff7f9cbe3 in TRint::ProcessLineNr (this=0x5555555d5890, filestem=0x7ffff7fb0449 ""ROOT_cli_"", line=0x7fffffffbae0 "".x Demo2.C"", error=0x7fffffffdb7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:38340,error,error,38340,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['error'],['error']
Availability,"Method signature used for `DataLoader::PrepareTrainingAndTestSet` triggered the generation of classes ""Signal"" and ""Background"". Since the task was regression this caused confusion further down the processing pipeline. Code changed to use global selection cut instead of implicit signal/background cuts. Also includes additional improvements to variable names and documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2460:189,down,down,189,https://root.cern,https://github.com/root-project/root/pull/2460,1,['down'],['down']
Availability,Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3904:173,error,error,173,https://root.cern,https://github.com/root-project/root/pull/3904,1,['error'],['error']
Availability,"Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\bin\HostX64\x86\cl.EXE""' : return code '0x2' [C:\build\workspace\root-pullrequests-build\build\graf2d\win32gdk\GDKLIB.vcxproj] ; - [2020-10-27T10:57:18.491Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xloctime(366,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c3f47572db': No space left on device [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\DNN\testBatchNormalizationCpu.vcxproj] ; - [2020-10-27T10:57:18.492Z] C:\build\workspace\root-pullrequests-build\root\roofit\roostats\src\PointSetInterval.cxx(170,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_4d825f1fdb': No space left on device [C:\build\workspace\root-pullrequests-build\build\roofit\roostats\RooStats.vcxproj] ; - [2020-10-27T10:57:19.173Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocinfo(103,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_f4cb1d1csy': No space left on device [C:\build\workspace\root-pullrequests-build\build\roofit\roostats\RooStats.vcxproj] ; - [2020-10-27T10:57:19.173Z] C:\Python38-32\include\object.h(444,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_05fabc68ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-10-27T10:57:19.173Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h(59,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_3cc13f73ex': No space left on device [C:\build\workspace\root-pullrequests-build\build\graf3d\eve\Eve.vcxproj] . And 6 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6710#issuecomment-717161391:2531,error,error,2531,https://root.cern,https://github.com/root-project/root/pull/6710#issuecomment-717161391,3,['error'],['error']
Availability,"Minimal reproducer for the stressMathCore failure:; ```cpp; cat repro.cxx; #include ""TF1.h"". std::string Type() { return """"; }. template<class Func>; class StatFunction : public ROOT::Math::IParamFunction {; public:; unsigned int NPar() const { return 0; }; const double * Parameters() const { return 0; }; ROOT::Math::IGenFunction * Clone() const { return 0; }; void SetParameters(const double * p) { }; // test cumulative function; int Test() {; TF1 * f = new TF1(""ftemp"", ROOT::Math::ParamFunctor(*this));; return 0;; }. private:; double DoEvalPar(double x, const double * ) const {; // implement explicitly using cached parameter values; return 0;; }; };. // typedef defining the functions; typedef double ( * F2) (double);. typedef StatFunction<F2> Dist_beta;; Dist_beta dist;; int iret = dist.Test();. template<int Dim>; struct VectorTest {; void genData() {; TRandom3 r(111);; double phi = r.Rndm();; }; };. int repro() {; return 0;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884#issuecomment-650075454:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/pull/5884#issuecomment-650075454,1,['failure'],['failure']
Availability,Missing Lock Error Detection for TCollection,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/647:13,Error,Error,13,https://root.cern,https://github.com/root-project/root/pull/647,1,['Error'],['Error']
Availability,Missing linking to the libcrypto library causes undefined symbols:. ````; /usr/bin/ld: ../../lib/librpdutil.a(globus.cxx.o): in function `ROOT::GlbsToolCheckProxy(char**)':; /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:547: undefined reference to `PEM_read_X509'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:552: undefined reference to `X509_get_issuer_name'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:552: undefined reference to `X509_NAME_oneline'; /usr/bin/ld: ../../lib/librpdutil.a(globus.cxx.o): in function `ROOT::GlbsToolCheckCert(char**)':; /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:187: undefined reference to `PEM_read_X509'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:192: undefined reference to `X509_get_subject_name'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:192: undefined reference to `X509_NAME_oneline'; collect2: error: ld returned 1 exit status; ````,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2436:1006,error,error,1006,https://root.cern,https://github.com/root-project/root/pull/2436,1,['error'],['error']
Availability,"Model& model, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName, experimental::__ROOT::basic_string_view<char,char_traits<char> > wName) =>; 887: TypeError: takes at least 3 arguments (2 given); 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(experimental::__ROOT::basic_string_view<char,char_traits<char> > vName, experimental::__ROOT::basic_string_view<char,char_traits<char> > wName) =>; 887: TypeError: could not convert argument 1; 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(const ROOT::RDF::TH1DModel& model = {"""", """", 128U, 0., 0.}, experimental::__ROOT::basic_string_view<char,char_traits<char> > vName = """") =>; 887: TypeError: could not convert argument 2; 887: Failed to instantiate ""Histo1D(ROOT::RDF::TH1DModel*,std::string)""; 887: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 887: error code: 1; 887:; 887:; 10/16 Test #887: tutorial-dataframe-df014_CSVDataSource-py ................***Failed 5.75 sec; test 888; Start 888: tutorial-dataframe-df016_vecOps-py. 888: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df016_vecOps.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:10753,error,error,10753,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['error'],['error']
Availability,"Model.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooGExpModel.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooHistConstraint.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooIntegralMorph.cxx.o; /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(32): error: ""basic_string_view"" has already been declared in the current scope. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(35): error: invalid redeclaration of type name ""std::string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(589): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(36): error: invalid redeclaration of type name ""std::u16string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(596): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(37): error: invalid redeclaration of type name ""std::u32string_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(597): here. /build/root/src/root-6.22.00-cuda/core/foundation/inc/ROOT/RStringView.hxx(38): error: invalid redeclaration of type name ""std::wstring_view""; /usr/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/c++/string_view(591): here. 5 errors detected in the compilation of ""/build/root/src/root-6.22.00-cuda/tmva/tmva/src/DNN/Architectures/Cuda.cu"".; make[2]: *** [tmva/tmva/CMakeFiles/TMVA.dir/build.make:2227: tmva/tmva/CMakeFiles/TMVA.dir/src/DNN/Architectures/Cuda.cu.o] Error 1; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooJeffreysPrior.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooKeysPdf.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooLandau.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooLognormal.cxx.o; [ 95%] Building CXX object roofit/roofit/CMakeFiles/RooFit.dir/src/RooMathCoreReg.cxx.o; /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058#issuecomment-663594675:4417,error,error,4417,https://root.cern,https://github.com/root-project/root/pull/6058#issuecomment-663594675,1,['error'],['error']
Availability,"Modify the behaviour of SetBranchAddress so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:; ```python; v = ROOT.std.vector('int')(); t.SetBranchAddress(""my_vector_branch"", v); ```. Pending items:; - Check failure in Python 3; - Test other overloads; - Any other case to support? E.g. SetBranchAddress of individual elements in a struct?; - Use helper method `GetClass` that was factored out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2476:343,failure,failure,343,https://root.cern,https://github.com/root-project/root/pull/2476,1,['failure'],['failure']
Availability,"Modules is broken now, and we're still working on this PR because we cannot reproduce the error locally.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2628#issuecomment-421989144:90,error,error,90,https://root.cern,https://github.com/root-project/root/pull/2628#issuecomment-421989144,1,['error'],['error']
Availability,More XML tutorials generate errors when converted into notebooks. The error is the same as the previous PR on that topic:. ```; Error in <TXMLEngine::ParseFile>: Unexpected end of xml file; ```. The notebook version for XML tutorials is deactivated for now. It is not really mandatory for these tutorials anyway.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10490:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/10490,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,More detail can be found in the commit descriptions. This addresses the following forum issue:. Related forum post:; https://root-forum.cern.ch/t/error-for-unbinned-binned-weighted-fits/51336,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11282:146,error,error-for-unbinned-binned-weighted-fits,146,https://root.cern,https://github.com/root-project/root/pull/11282,1,['error'],['error-for-unbinned-binned-weighted-fits']
Availability,"More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the; runitme for stressRooFit down from 8 to 7 seconds for the CPU mode; (without the BatchMode, the stressRooFit suite takes 7.7 seconds to; run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10612:132,down,down,132,https://root.cern,https://github.com/root-project/root/pull/10612,1,['down'],['down']
Availability,"More details:. Build error; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'; __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());; ^~~; /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here; return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));; ^; /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor; std::unique_ptr<RFieldBase::RDeleter> fDeleter;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor; unique_ptr(unique_ptr&& __u) _NOEXCEPT; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here; __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a); ^; ```. Compiler version:. ```; % clang -v; Homebrew clang version 16.0.1; Target: x86_64-apple-darwin20.6.0; Thread model: posix; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14664#issuecomment-1940795175:21,error,error,21,https://root.cern,https://github.com/root-project/root/issues/14664#issuecomment-1940795175,2,['error'],['error']
Availability,"More info for the llvm experts: this is due to an assertion failure, visible with dbg builds: ```interpreter/llvm-project/clang/include/clang/AST/Type.h:752: const clang::ExtQualsTypeCommonBase* clang::QualType::getCommonPtr() const: Assertion `!isNull() && ""Cannot retrieve a NULL type pointer""' failed.```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13252#issuecomment-1966302886:60,failure,failure,60,https://root.cern,https://github.com/root-project/root/issues/13252#issuecomment-1966302886,1,['failure'],['failure']
Availability,"More info in the commit descriptions. This should fix the compiler errors reported on the forum:; https://root-forum.cern.ch/t/error-compiling-with-ubuntu-20-04-4-lts/49097. Should be backported to 6.26. This PR also suggests a slight change to the HistFactory::JSONTool interface which is not necessarily a bugfix, but it's better to hide away the `JSONTool::Export` function as of 6.26.02 such that people don't start using it and we we are stuck with that interface.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10082:67,error,errors,67,https://root.cern,https://github.com/root-project/root/pull/10082,2,['error'],"['error-compiling-with-ubuntu-', 'errors']"
Availability,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818#issuecomment-2162404947:69,avail,available,69,https://root.cern,https://github.com/root-project/root/issues/15818#issuecomment-2162404947,1,['avail'],['available']
Availability,More work is needed for errors...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11938#issuecomment-1373911396:24,error,errors,24,https://root.cern,https://github.com/root-project/root/issues/11938#issuecomment-1373911396,1,['error'],['errors']
Availability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:820,error,error,820,https://root.cern,https://github.com/root-project/root/pull/14311,1,['error'],['error']
Availability,"Most often this type of error is due to uninitialized value in the user data. Try using --track-origins=yes and if no information, try to disable compression.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182#issuecomment-396381288:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/2182#issuecomment-396381288,1,['error'],['error']
Availability,Most probable reason for error described in ROOT-10916 issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6022:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/6022,1,['error'],['error']
Availability,"Motivation: we need to make sure that, if PyROOT is used from another process that will keep on living after the Python interpreter dies, PyROOT does not shut down the ROOT interpreter via `TROOT::EndOfProcessCleanups` when running its atexit handler. In that sense, this PR adds a configuration option to tell PyROOT if the teardown needs to be soft, i.e. we do not want to shut down the ROOT interpreter. Instead, in the soft mode, we only want (and need) to clean the objects that are controlled by PyROOT via its `TMemoryRegulator`. @Axel-Naumann @pcanal just one new thing with respect to what we discussed: in the function that does the cleanup of the objects in `TMemoryRegulator`, called `RecursiveRemoveAll` in my commit, we can only delete a C++ object found in the map if the corresponding Python proxy **owns** the C++ object. Otherwise we will have a double delete (if the proxy does not own is because the deletion will happen somewhere else, so our `RecursiveRemoveAll` can't delete too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4687:159,down,down,159,https://root.cern,https://github.com/root-project/root/pull/4687,2,['down'],['down']
Availability,"Moved from https://github.com/root-project/root/pull/6385 as there are too many bot comments in that PR. cc @vgvassilev. When testing the LLVM 9 PR for conda-forge and had a few issues with external LLVM/Clang/Cling so I temporarily switched to the builtins. This works from the build directory but it then has issues once `make install` is ran. More details are in the comment copied at the end of this issue. I think this is an issue with root's install commands rather than the conda-recipe, but you can reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:670,error,error,670,https://root.cern,https://github.com/root-project/root/issues/7055,1,['error'],['error']
Availability,"Moving `RooMath` to RooBatchCompute caused linker errors for users that; we want to avoid: RooBatchCompute is a RooFit implementation detail and; we don't want poeple to link against it. For this reason, RooMath is moved back into RooFitCore, and the; Faddeeva implementation that is also used in RooBatchCompute is split; off into a new file `faddeeva_impl.h` that is not part of the public; interface.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10359:50,error,errors,50,https://root.cern,https://github.com/root-project/root/pull/10359,1,['error'],['errors']
Availability,Moving the inline unsigned TExecutor::GetPoolSize() const method from the TExecutor.hxx header file to the (new) TExecutor.cxx source file fixes the following error on Windows:; ```; IncrementalExecutor::executeFunction: symbol '?GetPoolSize@TThreadExecutor@ROOT@@QBEIXZ' unresolved while linking function '??__Eid@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@YAXXZcling_module_0_'!; You are probably missing the definition of public: unsigned int __thiscall ROOT::TThreadExecutor::GetPoolSize(void)const; Maybe you need to load the corresponding shared library?; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7037:159,error,error,159,https://root.cern,https://github.com/root-project/root/pull/7037,1,['error'],['error']
Availability,"Multiple reasons:; - because we didn't have Windows builds of ROOT 6 for too long; - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/376#issuecomment-283044607:167,fault,fault,167,https://root.cern,https://github.com/root-project/root/pull/376#issuecomment-283044607,1,['fault'],['fault']
Availability,"My 2 cents:. 1. It is extremly weird/ a bug that the webgui needs to depend on `TObject`.; 2. `RBrowserDataCleanup` derives from `TObject`, so it *must* have a `ClassDef` as per https://root.cern/manual/io_custom_classes/#the-classdef-macro . I am not sure about what using `ClassDefInline` as suggested by @pcanal would change; 2a. Can `RBrowserDataCleanup` just avoid inheriting from `TObject` completely? ; 3. `RBrowserData` has a dictionary and allows I/O, as it is defined in `LinkDef.h`, so it is only natural that its data members need a dictionary as well. As @hahnjo commented, the particular error coming from a `std::tuple` is due to the fact that the class uses ` std::unique_ptr<RBrowserDataCleanup>`. Bottom line, to me everything looks very clear and I don't understand the comments regarding looking for a deeper reason behind the error. The only thing I don't understand is the dependency from `TObject` itself, but that's beyond the scope of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1637626198:602,error,error,602,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1637626198,2,['error'],['error']
Availability,My fault. https://github.com/root-project/root/pull/811 should solve this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-317991711:3,fault,fault,3,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-317991711,1,['fault'],['fault']
Availability,"My mistake, it looks like it was actually the PR description that caused the failure!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8172#issuecomment-840672497:77,failure,failure,77,https://root.cern,https://github.com/root-project/root/pull/8172#issuecomment-840672497,1,['failure'],['failure']
Availability,"My name is Mohammad Sarik, I am a Ethical hacker from INDIA. I found a Directory Traversal Vulnerability in your website. There URL is this:- https://root.cern.ch/ and there Parent Directory URL is this:- https://root.cern.ch/download/ Fix this Vulnerbility because it has very important Files & Data.I give you some proof in terms of screenshot.; ![Screenshot_2023-02-01_12_44_54](https://user-images.githubusercontent.com/124130635/215976318-c8943307-7b48-46d7-8356-4828f8952432.png); ![Screenshot_2023-02-01_12_45_02](https://user-images.githubusercontent.com/124130635/215976326-32db3095-1b02-47dc-be54-9c64f8ffab0d.png); ![Screenshot_2023-02-01_12_45_18](https://user-images.githubusercontent.com/124130635/215976335-52ddb636-1931-4d5c-839b-44d10db7b90a.png); some proof in terms of screenshot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12194:226,down,download,226,https://root.cern,https://github.com/root-project/root/issues/12194,1,['down'],['download']
Availability,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:227,error,error,227,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,2,['error'],['error']
Availability,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1261020879:353,down,down,353,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879,1,['down'],['down']
Availability,"NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’; # define _NAME2_(name1,name2) name1##name2; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:6792,error,error,6792,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,"NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’; # define _NAME2_(name1,name2) name1##name2; ^~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’; # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y); ^~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:5172,error,error,5172,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,2,['error'],['error']
Availability,"NB: This is maybe not the best solution, but it solves the compilation error...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4457#issuecomment-537080646:71,error,error,71,https://root.cern,https://github.com/root-project/root/pull/4457#issuecomment-537080646,1,['error'],['error']
Availability,"NE&gt;[0-9]*)(,(?&lt;COLUMN&gt;[0-9]*))?\))?\s*:\s*((?&lt;SUBCATEGORY&gt;([^:]*?))\s?)(?&lt;CATEGORY&gt;error|warning|note)\s*((?&lt;CODE&gt;[A-Za-z0-9]*))?\s*:\s*(?&lt;TEXT&gt;.*)$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Format.h(130,50): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineFunctionPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-02-05T01:49:05.646Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(448,29): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTTypeTraits.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-05T01:49:06.040Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector(1764,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\Reg2Mem.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-02-05T01:49:06.393Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xtree(192,16): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\CocoaConventions.cpp) [C:\build\work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9822#issuecomment-1030494161:3151,error,error,3151,https://root.cern,https://github.com/root-project/root/pull/9822#issuecomment-1030494161,1,['error'],['error']
Availability,"NING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3; [#0] WARNING:Eval -- RooAddPdf::updateCoefCache(sum WARNING: sum of PDF coefficients not in range [0-1], value=1.3 (no more will be printed); ../roofit/roofitcore/test/testNaNPacker.cxx:228: Failure; Warning in <ROOT::Math::Fitter::CalculateHessErrors>: Error when calculating Hessian; Value of: a1Final.getVal() < 0. || a1Final.getVal() > 1. || a2Final.getVal() < 0. || a2Final.getVal() > 1.; Actual: false; Expected: true; Recovery strength=0; ```. RooFit stress tests give the following output:. ```; /Users/pbos/projects/apcocsm/roofit-dev/root/cmake-build-debug/test/stressRooFit. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. ******************************************************************; * RooFit - S T R E S S suite *; ******************************************************************; ******************************************************************; * Starting S T R E S S basic suite *; ******************************************************************; Test 1 : Fitting,plotting & event generation of basic p.d.f.....OK; Test 2 : Data import method",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-881412597:1465,Failure,Failure,1465,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-881412597,2,"['Error', 'Failure']","['Error', 'Failure']"
Availability,NNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:17:32: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:22:34: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:27:30: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-21T10:20:57.899Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:32:44: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1018372839:4795,error,error,4795,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1018372839,1,['error'],['error']
Availability,NNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:15:54: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:20:56: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:25:52: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:30:66: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1020225394:4795,error,error,4795,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1020225394,1,['error'],['error']
Availability,NNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:20:56: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:25:52: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/inc/RooFitHS3/JSONInterface.h:84:6: error: from definition of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ [-fpermissive] ; - [2022-01-24T15:31:55.211Z] /mnt/build/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONInterface.cxx:30:66: error: specialization of ‘template&lt;class T&gt; T RooFit::Experimental::JSONNode::val_t() const’ in different namespace [-fpermissive] . And 1 more. ### Warnings:; - [2022-01-24T15:21:08.780Z] /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter ‘depth’ [-Wunused-parameter] ; - [2022-01-24T15:21:08.780Z] /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/inc/FTFont.h:125:35: warning: unused parameter ‘depth’ [-Wunused-parameter] ; - [2022-01-24T15:21:09.151Z] /mnt/build/workspace/root-pullrequests-bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1020225394:5296,error,error,5296,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1020225394,1,['error'],['error']
Availability,"NP! FYI that's `just` inplace of `also`. But it's good you tried to build everywhere, to check the config failure!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-669180037:106,failure,failure,106,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-669180037,1,['failure'],['failure']
Availability,NSFVARBPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:639:1: error: unknown type name ‘PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC’; did you mean ‘PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:640:1: error: unknown type name ‘PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC’; did you mean ‘PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:641:1: error: unknown type name ‘PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC’; did you mean ‘PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:698:1: error: unknown type name ‘PFNGLCOPYTEXTURELEVELSAPPLEPROC’; did you mean ‘PFNGLCOPYTEXTURESUBIMAGE3DPROC’? ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:718:1: error: unknown type name ‘PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC’; did you mean ‘PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC’? . And 193 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:622:76: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:623:80: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:624:52: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:638:82: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullrequests-build/root/builtins/glew/src/glew.c:639:76: warning: initialization makes integer from pointer without a cast [-Wint-conversion] ; - /mnt/build/workspace/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-532666543:1946,error,error,1946,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-532666543,1,['error'],['error']
Availability,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:3059,ERROR,ERROR,3059,https://root.cern,https://github.com/root-project/root/issues/13895,7,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"NT4/lib/libNet.6.24.00.so /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libssl.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libcrypto.1.1.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libtbbmalloc.dylib /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/lib/libMathCore.6.24.00.so; ```; `/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""`; ```; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418#issuecomment-860830509:12842,error,error,12842,https://root.cern,https://github.com/root-project/root/issues/8418#issuecomment-860830509,1,['error'],['error']
Availability,"N_INFO; [I] Using the user supplied version: v5.4.1; [I] src/XrdVersion.hh successfully generated; In file included from /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysE2T.cc:35:; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In constructor 'XrdSysRWLock::XrdSys; RWLock(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:357:30: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 357 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:356:22: error: 'pthread_rwlockattr_se; tkind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 356 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In member function 'void XrdSysRWLoc; k::ReInitialize(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:373:22: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 373 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:372:3: error: 'pthread_rwlockattr_set; kind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 372 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; make[5]: *** [src/CMakeFiles/XrdUtils.dir/build.make:104: src/CMakeFiles/XrdUtils.dir/XrdSys/XrdSysE2T.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:814: src/CMakeFiles/XrdUtils.dir/all] Error 2; make[3]: *** [Makefile:136: all] Error 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1062037565:1845,error,error,1845,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1062037565,5,"['Error', 'error']","['Error', 'error']"
Availability,"Narrowed it down to the use of the custom Sqlite3 VFS module. Apparently, in some case such as complex queries / many rows, sqlite would like to use a ""temporary journal"" and create a temporary file for it. That is currently unsupported by the VFS module.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9231#issuecomment-963980483:12,down,down,12,https://root.cern,https://github.com/root-project/root/issues/9231#issuecomment-963980483,1,['down'],['down']
Availability,"NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:; ```; CMake Error in net/netxng/CMakeLists.txt:; Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory.; ```; This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2727:174,error,error,174,https://root.cern,https://github.com/root-project/root/pull/2727,2,"['Error', 'error']","['Error', 'error']"
Availability,"Nevermind the error I was seeing with the first examples, it was completely my fault (commented an essential line with offsets when I tried to build without the GSL and forgot to put back later) :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1343202565:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1343202565,2,"['error', 'fault']","['error', 'fault']"
Availability,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13902#issuecomment-1783243184:46,failure,failures,46,https://root.cern,https://github.com/root-project/root/pull/13902#issuecomment-1783243184,1,['failure'],['failures']
Availability,"New PR after rebasing the branch. @cburgard's description of the changes:; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects.; However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas).; However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit.; With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4521:628,error,error,628,https://root.cern,https://github.com/root-project/root/pull/4521,1,['error'],['error']
Availability,"New insights:. * when adding the reproducer to `roottest`, most of the Jenkins platforms will fail:; https://github.com/root-project/roottest/pull/1052. * when testing the reproducer together with the CPyCppyy upgrade, the test `projectroot.roottest.python.cpp.roottest_python_cpp_cpp11` will instead pass on all platforms:; https://github.com/root-project/roottest/pull/1071; (note that there are other failures related to the CPyCppyy upgrade that are unrelated to the issue). Therefore, I can attest that this issue will be fixed with the CPyCppyy upgrade. This makes total sense, because the upgrade includes a patch that fixes the conversion of initializer lists:; https://github.com/wlav/CPyCppyy/pull/14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11411#issuecomment-1971062709:404,failure,failures,404,https://root.cern,https://github.com/root-project/root/issues/11411#issuecomment-1971062709,1,['failure'],['failures']
Availability,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963066852:224,error,error-conflicting-types-alpine-linux,224,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852,1,['error'],['error-conflicting-types-alpine-linux']
Availability,No sure what is wrong (errors are new/related) but one important missing feature is the invalidation of (some of) the cache upon transaction/file unloading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9284#issuecomment-967473793:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/9284#issuecomment-967473793,1,['error'],['errors']
Availability,No valgrind necessary. The failure is a call to `R__ASSERT`. There is not really any other means to inspect that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9750#issuecomment-1025861675:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/9750#issuecomment-1025861675,1,['failure'],['failure']
Availability,"No, I can't. I meant though of the problematic code, I can compile and run it without any error if there is no draw statement. I want to know why it looks like the draw statement triggers the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256#issuecomment-850852605:90,error,error,90,https://root.cern,https://github.com/root-project/root/issues/8256#issuecomment-850852605,2,['error'],['error']
Availability,"No, I didn't try anything besides the unit tests in `roottest` (which are actually deactivated in the `CMakeLists.txt`). What do you mean with Python 3 problems? We don't support Python 2 anymore, so all code only needs to run in Python 3. Which is does, right? Sorry, maybe I didn't get the problem. If you mean with Python 3 problems the error you have screenshot: I get the same error also without your PR. So given that JsROOT is not working very well and no user complained, I would not spend more time on this and suggest to merge this PR and close the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484#issuecomment-2125800188:340,error,error,340,https://root.cern,https://github.com/root-project/root/pull/12484#issuecomment-2125800188,2,['error'],['error']
Availability,"No, I don't know how to do that. I use sphinx when I have *rst* pages.; Pdf is not so necessary, html for downloading would be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-844180284:106,down,downloading,106,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-844180284,1,['down'],['downloading']
Availability,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-823511702:60,down,downloaded,60,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-823511702,2,['down'],"['download', 'downloaded']"
Availability,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-823416843:157,down,download,157,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-823416843,2,['down'],['download']
Availability,"No, the Jenkins failures are fortunately not related to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-881229915:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-881229915,1,['failure'],['failures']
Availability,"No, the build bot looks for a fork of roottest in your account to possibly take a matching branch and use for the pull request, but it errors out if you don't have roottest forked. @vgvassilev you may want to have a look at this when you have time. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462286562:135,error,errors,135,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462286562,1,['error'],['errors']
Availability,"No, we don't see this in other RooFit PRs. From the log, it seems that there is a problem when using RooFit from Python now:; ```; 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec; 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py; 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec; 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py; 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec; 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py; 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec; 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py; 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec; 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py; 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec; 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py; 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec; 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py; 17:06:49 1259/2373 Test #1168: tuto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1482508642:271,Error,Error,271,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1482508642,4,['Error'],['Error']
Availability,"No. I dont think the problem is understood. In my software I link with another library compiled with the system libraries which have a recent libpng.; At run time ROOT finds the old ones from libpng inside imagemagic. It is not too hard to update the lib png. Do you want me to write what I do?. G. > On Dec 5, 2023, at 2:52 PM, Axel Naumann ***@***.***> wrote:; > ; > ; > @unelg <https://github.com/unelg> just FYI your error message is independent of whether ROOT's png is too old or not: you are mixing library and header of libpng from two different versions, likely in your own build? Please don't :-) If what I say here doesn't make sense please post a reproducer of this error at https://root-forum.cern.ch <https://root-forum.cern.ch/> - thanks!; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/13825#issuecomment-1840834891>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAVOOJIRSHYYX74ALYJ55JLYH4RIZAVCNFSM6AAAAAA5W3TU4SVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNBQHAZTIOBZGE>.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1840841385:421,error,error,421,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1840841385,2,['error'],['error']
Availability,Non correct display of error bars when exceeding y-range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16093:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/16093,1,['error'],['error']
Availability,None of the build errors seem related to this PR if I see correctly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/432#issuecomment-287136526:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/432#issuecomment-287136526,1,['error'],['errors']
Availability,None of the failures above seem due to this PR... [They are due to xrootd AUTH failure],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5917#issuecomment-648330885:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/5917#issuecomment-648330885,2,['failure'],"['failure', 'failures']"
Availability,None of the failures have anything to do with the PyROOT changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14294#issuecomment-1866975752:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/14294#issuecomment-1866975752,1,['failure'],['failures']
Availability,None of these errors are related to your change; they're all in the works!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3063#issuecomment-443120738:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/3063#issuecomment-443120738,1,['error'],['errors']
Availability,"Nope, because my change enable C++1z in Cling (otherwise CMSSW wouldn't work). If I print __cplusplus from rootcling_stage1 I get C++14, which would explain the error about optional, I guess.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522#issuecomment-298983124:161,error,error,161,https://root.cern,https://github.com/root-project/root/pull/522#issuecomment-298983124,1,['error'],['error']
Availability,"Nope, real error is; ```; 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):; 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The; 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed.; 11:31:21 Call Stack (most recent call first):; 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE); ```; which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6405#issuecomment-696613191:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/6405#issuecomment-696613191,2,"['Error', 'error']","['Error', 'error']"
Availability,"Nope: [clad-configure-out.log](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/168645/parsed_console/job/root-pullrequests-build/168645/parsed_console/log_content.html#ERROR1) says. ```; CMake Warning:; Ignoring extra path from command line:. ""/mnt/build/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/mnt/build/workspace/root-pullrequests-build/build/interpreter/llvm/src/tools/clang/include"". CMake Error at CMakeLists.txt:110 (find_package):; Could not find a package configuration file provided by ""Clang"" with any of; the following names:. ClangConfig.cmake; clang-config.cmake. Add the installation prefix of ""Clang"" to CMAKE_PREFIX_PATH or set; ""Clang_DIR"" to a directory containing one of the above files. If ""Clang""; provides a separate development package or SDK, be sure it has been; installed.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12333#issuecomment-1433191981:520,Error,Error,520,https://root.cern,https://github.com/root-project/root/pull/12333#issuecomment-1433191981,1,['Error'],['Error']
Availability,"Norm}, {""Reshape"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasReshape}, {""Concatenate"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasConcat}, {""Add"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasBinary}, {""Subtract"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasBinary}, {""Multiply"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasBinary}, {""Softmax"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSoftmax}, {""tanh"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasTanh}, {""LeakyReLU"", TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasLeakyRelu}, {""Dropout"", &lt;expression error&gt;}}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘const KerasMethodMap’ {aka ‘const std::unordered_map&lt;std::__cxx11::basic_string&lt;char&gt;, std::unique_ptr&lt;TMVA::Experimental::SOFIE::ROperator&gt; (*)(_object*)&gt;’} ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:82:28: error: expected unqualified-id before ‘,’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:85:4: error: expected unqualified-id before ‘{’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:85:28: error: expected unqualified-id before ‘,’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:86:4: error: expected unqualified-id before ‘{’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:86:28: error: expected unqualified-id before ‘,’ token ; - [2023-01-20T19:22:00.308Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:87:4: error: expected unqualified-id before ‘{’ token . And 17 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1398831265:2184,error,error,2184,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1398831265,6,['error'],['error']
Availability,Not associating to any ROOT release because this was a temporary error in `master`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16506#issuecomment-2399660691:65,error,error,65,https://root.cern,https://github.com/root-project/root/issues/16506#issuecomment-2399660691,1,['error'],['error']
Availability,Not available in ROOT's minimal cmake version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4092:4,avail,available,4,https://root.cern,https://github.com/root-project/root/pull/4092,1,['avail'],['available']
Availability,"Not everything will be covered by modules, for a long time. Thus we will have to keep the rdict file feature alive for years to come. What's the benefit of optimizing this then - is it only to accelerate roottest? (I'm trying to understand whether it's important to invest dev hours here vs in other areas, taking as main criteria, as always, relevance to our users.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-650953383:109,alive,alive,109,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-650953383,1,['alive'],['alive']
Availability,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-390711669:506,error,error,506,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-390711669,1,['error'],['error']
Availability,"Not sure about the CI failure, but may be related to:. `get_filename_component(ROOT_LIBRARY_DIR ""${ROOTSYS}/lib"" ABSOLUTE)`. in [roottest/CMakeLists.txt#L200](https://github.com/root-project/roottest/blob/e7c9a5cbc969fa99b668684cbebc59d554ceebc8/CMakeLists.txt#L200)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176#issuecomment-1840712162:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/14176#issuecomment-1840712162,1,['failure'],['failure']
Availability,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```; ...; FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx; ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory; FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx; ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory; FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/380#issuecomment-286498843:746,error,error,746,https://root.cern,https://github.com/root-project/root/pull/380#issuecomment-286498843,1,['error'],['error']
Availability,Not sure if that'd help but can you try with this version of the modulemap https://github.com/root-project/root/pull/11874/commits/b4af76caef9ea4504f99486f047d88b03b021d2d available in PR #11874?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291#issuecomment-1397515091:172,avail,available,172,https://root.cern,https://github.com/root-project/root/issues/10291#issuecomment-1397515091,1,['avail'],['available']
Availability,"Note that I'm completely unsure if this is really Cling's fault. If not, we have to re-assign accordingly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10010#issuecomment-1056678834:58,fault,fault,58,https://root.cern,https://github.com/root-project/root/issues/10010#issuecomment-1056678834,1,['fault'],['fault']
Availability,"Note that `v[v >0]` is meant to return a reference to a masked vector so that one can do `v[v > 0] = 2;`, so maybe that's what we need to fix. What you mention above looks like targeted at creating copies of parts of a vector, which may lead to surprising behavior from user's point of view.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-395714718:56,mask,masked,56,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-395714718,1,['mask'],['masked']
Availability,"Note that https://github.com/root-project/root/pull/8093 is to be merged first, which should avoid the above test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8094#issuecomment-832165555:114,failure,failures,114,https://root.cern,https://github.com/root-project/root/pull/8094#issuecomment-832165555,1,['failure'],['failures']
Availability,Note that if we want to download at configuration time we should use FetchContent_Declare which seems to take similar arguments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296#issuecomment-2306368651:24,down,download,24,https://root.cern,https://github.com/root-project/root/pull/16296#issuecomment-2306368651,1,['down'],['download']
Availability,"Note that some OpenSSL binaries are available for Windows, but I'll have to try them",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380#issuecomment-1134312995:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/10380#issuecomment-1134312995,1,['avail'],['available']
Availability,Note that the error is relatively odd/unusual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5762#issuecomment-637773719:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/5762#issuecomment-637773719,1,['error'],['error']
Availability,"Note that the error on ""mac11.0/cxx17"" is unrelated but reproducible (1 out 10 runs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7073#issuecomment-764822781:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/7073#issuecomment-764822781,1,['error'],['error']
Availability,Note that the projectroot.test.test_stressHistFactory failures are likely real - an indication of an inf loop.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675#issuecomment-567587643:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/4675#issuecomment-567587643,1,['failure'],['failures']
Availability,"Note that this PR (?) seems to cause new errors in the new CI - we were at 0 test failures before, thanks to all your work!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13072#issuecomment-1603956972:41,error,errors,41,https://root.cern,https://github.com/root-project/root/pull/13072#issuecomment-1603956972,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Note that we observed the same type of crash in some other places as well in ATLAS, which could also be handled by cleaning up the dictionaries of the affected libraries. So the error has an upside as well. (Though a simple error message from ROOT would've been more welcome. :stuck_out_tongue:). (I mainly just wrote this comment to get notifications about this issue's evolution... :wink:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-805575762:178,error,error,178,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-805575762,2,['error'],['error']
Availability,"Note to self: the error (visible on Mac 10.15 with C++17) is triggered by rebasing this branch on top of master. I force-pushed the rebased branch. It's real, caused by inconsistent exception spec type (""EST"") for redeclarables, and earlier my attempt at fixing it not updating the to-be-codegened decl for its EST.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5903#issuecomment-670005388:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/5903#issuecomment-670005388,1,['error'],['error']
Availability,"Note, in my opinion the current behavior is to replace:; ```; expression_not_ending_with_semi_colon; ```; with the moral equivalent of ; ```; auto tobeprinted = expression_not_ending_with_semi_colon;; std::cout << tobeprinted << std::endl;; ```; which the current implementation handles as expected: (for example by rejected the `if` statement (as in the original report) but accepting the tertiary operator); ```; root [0] auto x = if (true) 1;; ROOT_prompt_0:1:10: error: expected expression; auto x = if (true) 1;; ^; root [1] true ? 1 : 0; (int) 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-2075526475:467,error,error,467,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-2075526475,1,['error'],['error']
Availability,"Note: if I ""source"" root before calling cmake, then the VDT error disappears.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1837198099:60,error,error,60,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1837198099,1,['error'],['error']
Availability,"Note: if I build from source, it works fine. It fails only when downloading the binary release. So it seems a packaging issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14247#issuecomment-1878784871:64,down,downloading,64,https://root.cern,https://github.com/root-project/root/issues/14247#issuecomment-1878784871,1,['down'],['downloading']
Availability,"Note: some of the reference files were updated with 'best guesses' and over-shot the correction. ; The only case I found of increase is https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169840/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/; where the actual increase is:; ```; --- a/root/io/treeForeign/testForeignDrawZLIB_builtinzlib.ref; +++ b/root/io/treeForeign/testForeignDrawZLIB_builtinzlib.ref; @@ -4,7 +4,7 @@ Warning in <TClass::Init>: no dictionary for class Wrapper is available; Warning in <TClass::Init>: no dictionary for class MyClass is available; ******************************************************************************; *Tree :T : T *; -*Entries : 2 : Total = 4215 bytes File Size = 1465 *; +*Entries : 2 : Total = 4215 bytes File Size = 1470 *; * : : Tree compression factor = 1.08 *; ******************************************************************************; ```; I am not sure whether it is worth trying to investigate (since it is small, it is the only case and it is the (older?) buitin zlib)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12439#issuecomment-1458508601:555,avail,available,555,https://root.cern,https://github.com/root-project/root/pull/12439#issuecomment-1458508601,2,['avail'],['available']
Availability,"Note: the failure in the TTabCom test indicates that as a consequence of this PR, more AST nodes are loaded in memory at startup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-344217460:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-344217460,1,['failure'],['failure']
Availability,"Note: this was intentionally not rebased on master for now, I will rebase before merging (incrementals currently show a test failure I want to avoid).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332520777:125,failure,failure,125,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332520777,1,['failure'],['failure']
Availability,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704312614:185,down,down,185,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704312614,2,"['down', 'fault']","['down', 'faulty']"
Availability,"Note:. When histograms are added to the directory, there will still be a slow down. This is because for histogram we can not assume that they are not shared. There is 2 patterns that can be used to speed up the file closing *if and only if* the histograms are not shared between the `TFile` and other containers/code (or if the double delete is avoided through other means):. (a) Detach the `TFile` from the `ROOT` list of files, which (indirectly) tells the clean up system that it does not need to inform the directories of that file of any deletion.; ```; std::unique_ptr<TFile> out(TFile::Open(""example.root"", ""RECREATE""));; gROOT->GetListOfFiles()->Remove(out.get());; ```. (b) Tell the histogram that they will not be shared and that they don't need to inform any entities that they are being deleted.; ```; auto h = new TH1F(histo_name, histo_title, 100, 0, 100);; h->ResetBit(kMustCleanup); // This is necessary to avoid scanning all the directories when deleting this histogram; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13449#issuecomment-1872379242:78,down,down,78,https://root.cern,https://github.com/root-project/root/issues/13449#issuecomment-1872379242,1,['down'],['down']
Availability,Now I get:; ```; ...; [100%] Built target modules_idx; [100%] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.22 seconds Cpu Time = 0.07 seconds; (TFile *) 0x7fccdab5e360; [100%] Built target hsimple; filter.cxx:74:10: fatal error: 'unistd.h' file not found; #include <unistd.h>; ^~~~~~~~~~; [100%] Built target PreparationPyz; 1 error generated.; make[2]: *** [documentation/doxygen/CMakeFiles/Preparation] Error 1; make[1]: *** [documentation/doxygen/CMakeFiles/Preparation.dir/all] Error 2; make: *** [all] Error 2. ```. I am on MacOS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2075185149:261,error,error,261,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2075185149,5,"['Error', 'error']","['Error', 'error']"
Availability,"Now I'm doing another thing, and return again to this issue. I want to make a 3-dimensional fit, but some pdfs depend only on z, so I multiply them by uniform pdfs on x and y. I mean RooUniform for the whole domain of a variable, not what I proposed in https://github.com/root-project/root/issues/7880. So I create a uniform distribution like that. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(""uxy_nt"", ""uxy_nt"", RooArgList(u_nt_x, u_nt_y));. So I have 5 pdfs for which I need to create a separate uniform distribution on (x, y), which in turn requires creation of new pdfs on x (and on y), which are all uniform and absolutely the same. This leads to 15 new lines of code, which is not that much, but seems redundant (as names and titles of the uniform distribution on all x) and even more error-prone (because of very similar code). Maybe there must be a way to explicitly allow same pdfs, if you know that they are really identical ones with same parameters? Say a new class, RooRefPdf, RooCopyPdf, ... .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8000#issuecomment-830081883:768,redundant,redundant,768,https://root.cern,https://github.com/root-project/root/issues/8000#issuecomment-830081883,2,"['error', 'redundant']","['error-prone', 'redundant']"
Availability,"Now several parameters can be configured via rootrc file:. ```; WebEve.JsRootRender: 1 # use JSROOT Geometry Painter for GL drawings, default off; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```. Provide context menu, which activate browser at specified element; Improve/repair functionality with JSROOT GeoPainter. ; Provide single-click mouse handler, used for tracks/jets selection; Improve highlight handling in plain three.js mode; Make possibility to specify table row width via rootrc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4966:569,repair,repair,569,https://root.cern,https://github.com/root-project/root/pull/4966,1,['repair'],['repair']
Availability,"Now that the machinery of https://github.com/root-project/root/pull/14287 is available, we can begin the process of making constants in ROOT `constexpr` to get the benefit of a faster initialization. I began with `TString::kNPOS` and the ones in `RTypesCore.h`, but do let me know if you see other candidates for the same procedure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14352:77,avail,available,77,https://root.cern,https://github.com/root-project/root/pull/14352,1,['avail'],['available']
Availability,"Now this PR is blocked by https://github.com/root-project/roottest/pull/762, which will fix the test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-892981611:101,failure,failures,101,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-892981611,1,['failure'],['failures']
Availability,"Now, progress is blocked by [ROOT-10671](https://sft.its.cern.ch/jira/browse/ROOT-10671). The test failure is a direct consequence of that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219#issuecomment-614517483:99,failure,failure,99,https://root.cern,https://github.com/root-project/root/pull/5219#issuecomment-614517483,1,['failure'],['failure']
Availability,"Now, the verbose reponse of the tests looks like this:. ```; test 73; Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake""; 73: Test timeout computed to be: 1500; 73: Get test data...; 73: Generate keras model...; 73: Using Theano backend.; 73: Setup TMVA...; 73: Using Theano backend.; 73: Train model...; 73: Run reader and classify 100 events...; 73: Mean MVA response on signal: 0.747554; 73: Mean MVA response on background: 0.290326; 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec; test 74; Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake""; 74: Test timeout computed to be: 1500; 74: Get test data...; 74: Generate keras model...; 74: Using Theano backend.; 74: Setup TMVA...; 74: Using Theano backend.; 74: Train model...; 74: Run reader and estimate target of 100 events...; 74: Mean squared error: 1.28006; 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:; PyMVA-Keras-Classification; PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253739525:1213,error,error,1213,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253739525,1,['error'],['error']
Availability,"Ntup->Print(""NUD_total_ADC*""); ******************************************************************************; *Tree :DmpMCEvtNtup: DAMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:1642,Error,Error,1642,https://root.cern,https://github.com/root-project/root/issues/6881,1,['Error'],['Error']
Availability,"Nudge about those issues without a project, pinging the person who closed and all assignees. (new version of #8654 which runs daily instead of immediately after closing an issue)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8658:44,ping,pinging,44,https://root.cern,https://github.com/root-project/root/pull/8658,1,['ping'],['pinging']
Availability,O right I forgot - we have automatic downcasting. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/371#issuecomment-282693125:37,down,downcasting,37,https://root.cern,https://github.com/root-project/root/pull/371#issuecomment-282693125,1,['down'],['downcasting']
Availability,"O.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObjArray.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLEngine.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TKey.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLEngine.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLSetup.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TList.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLSetup.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5557/8175] Generating G__XMLParser.cxx, ../../lib/libXMLParser_rdict.pcm, ../../lib/libXMLParser.rootmap, ../../lib/XMLParser.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLParser.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:2051,Error,Error,2051,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-640384639:180,avail,available,180,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-640384639,1,['avail'],['available']
Availability,OK please ping me on Wed should you not have my review by then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606#issuecomment-715399696:10,ping,ping,10,https://root.cern,https://github.com/root-project/root/pull/6606#issuecomment-715399696,1,['ping'],['ping']
Availability,"OK so you recommend to use `__cplusplus` instead of `__cpp_lib_three_way_comparison`, @hahnjo ? @bellenot could you do this? and **thank you** for tracking this down!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1540478040:161,down,down,161,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1540478040,1,['down'],['down']
Availability,OK thanks for the update (and your helpful attitude of looking for a workaround). I will be looking at that source of this error - first I need to reproduce it. Do you happen to have a reproducer for this outside your build? Is this a C++20 build?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536249315:123,error,error,123,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536249315,1,['error'],['error']
Availability,"OK thanks, I understand better now. When you invalidate the contract with the linker, just as when you rely on undefined behavior, the results are not reliable anymore. Even though your code seems to suggest that it's because of ROOT that's *not* the case: the use of some other library, other code, might just as well cause problems. Please remove the two symbols with the same name and your problems will vanish. The fact that ROOT is triggering it doesn't mean that it's causing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256#issuecomment-851285161:151,reliab,reliable,151,https://root.cern,https://github.com/root-project/root/issues/8256#issuecomment-851285161,1,['reliab'],['reliable']
Availability,"OK thanks. I believe that ""there is no other way to get reliable results"" is a bit of an exaggeration - many numerical libraries and programs do not turn fp exceptions on. IEEE 754 allows them to survive just fine the cases you are hunting down, because (as you certainly know) IEEE 754 brings defined behavior to ""degenerate"" (not in the IEEE 754 sense) cases. As a matter of fact, I believe you have just proven to yourself that ""there is no other way to get reliable results"" is also incorrect, as the optimizer might change fp operations. Yes, GCC tries to keep them ""fp-safe"" but that might change in any of the upcoming versions, just like it did for instance for clang, the Intel compiler, and - if I remember correctly - MSVC. Our approach is not to rely on fp exceptions but on coverage in regression tests. That has limited reach (as would fp exceptions) but it allows us to detect when results change in a visible, ""unreliable"" way. Shall we close this then or is there something left to be clarified?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677#issuecomment-713528820:56,reliab,reliable,56,https://root.cern,https://github.com/root-project/root/issues/6677#issuecomment-713528820,3,"['down', 'reliab']","['down', 'reliable']"
Availability,"OK that RooFit error is for me. But we would have seen a compilation error in `TString.h`, so regarding this PR it looks fine: please go ahead and merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1494210008:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1494210008,2,['error'],['error']
Availability,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2168748123:304,avail,available,304,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2168748123,1,['avail'],['available']
Availability,"OK, I ran with XRD_LOGLEVEL=Dump, and you can see the response after. === stderr ===. saying:. Unable to process directory /alrb/.xrootd/client.plugins.d: [ERROR] OS Error: No such file or directory. Log file:. [xrootd_error_on_grid.pdf](https://github.com/root-project/root/files/5702981/xrootd_error_on_grid.pdf). The file:. root://marsedpm.in2p3.fr:1094//dpm/in2p3.fr/home/atlas/atlasdatadisk/rucio/mc16_13TeV/9c/ab/DAOD_HIGG2D1.23315577._000001.pool.root.1. of course opens correctly for a simple TOpen in any interactive ROOT session. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746292691:156,ERROR,ERROR,156,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746292691,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865#issuecomment-1344487224:93,avail,available,93,https://root.cern,https://github.com/root-project/root/pull/11865#issuecomment-1344487224,1,['avail'],['available']
Availability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863#issuecomment-1344487042:93,avail,available,93,https://root.cern,https://github.com/root-project/root/pull/11863#issuecomment-1344487042,2,['avail'],['available']
Availability,"OK, back to this. For the record, the working syntax (for me) is:; ```; set _CL_= /fsanitize=address /wd5072 /I""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\crt\src"" & set _LINK_= /InferASanLibs /incremental:no /debug; set ASAN_OPTIONS=detect_odr_violation=0; ```; And at the end of the build I got:; ```; Generating tutorials/hsimple.root; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets; (245,5): error MSB8066: Custom build for 'C:\Users\sftnight\build\x64\ASAN\CMakeFiles\c6c09d13817678206ffac31; 1bf59f66e\hsimple.root.rule;C:\Users\sftnight\build\x64\ASAN\CMakeFiles\9f4ed4473669458dfc17172b1f87108d\hsim; ple.rule' exited with code -1073741515. [C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj]; Done Building Project ""C:\Users\sftnight\build\x64\ASAN\hsimple.vcxproj"" (default targets) -- FAILED. Done Building Project ""C:\Users\sftnight\build\x64\ASAN\ALL_BUILD.vcxproj"" (default targets) -- FAILED. Build FAILED.; ```; So not the same error with VS 2022 (64 bit). Will try in Debug mode and let you know. And since the errors are different between VS 2019 and 2022, I suspect an incompatibility between LLVM/Clang and Visual Studio. We'll see how it goes after the LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1192296623:498,error,error,498,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1192296623,3,['error'],"['error', 'errors']"
Availability,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-852071998:158,failure,failures,158,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-852071998,1,['failure'],['failures']
Availability,"OK, so I can reproduce the error, I'm investigating. It looks like the only solution for the time being is to rebuild ROOT from source...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302#issuecomment-1882760886:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/14302#issuecomment-1882760886,1,['error'],['error']
Availability,"OK, so I got it right :). I'm not going to change formatting, it's consistent with the rest of eve/gl and what it's proposing to do is adding 4 lines 8 times with final effect of decreasing readability of the code. The tidy errors are coming from TMath ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566#issuecomment-300844946:224,error,errors,224,https://root.cern,https://github.com/root-project/root/pull/566#issuecomment-300844946,1,['error'],['errors']
Availability,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```; pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+...; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so; In file included from input_line_11:21:; In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:; In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:; /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'; return sqrt(Mag2());; ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```; [100%] Linking CXX shared library libTrackMathCoreDict.so; [100%] Built target TrackMathCoreDict; In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:; In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:; /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'; return std::sqrt(Mag2());; ^~~~~~~~~; ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286150016:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286150016,4,"['error', 'failure']","['error', 'failures']"
Availability,"OK, so it seems I am blind.... I had missed an additional opening brace in one of the above methods that was leading to the errors. I will delete my last comment after posting this... So, OK, I can get things to work with the hidden parameter approach. The question then is do you guys *really* prefer this to templating on the return type ? To my eye the hidden parameter is the worse evil, so I would stick with how things are now ?. For completeness here is what the hidden parameter versions of the two `Unit()` methods would look like. Do you really prefer this ?. ``` ; template < typename SCALAR = Scalar >; DisplacementVector3D Unit( typename std::enable_if<std::is_arithmetic<SCALAR>::value,SCALAR>::type* = nullptr ) const {; const auto tot = R();; return tot == 0 ? *this : DisplacementVector3D(*this) / tot;; }. template < typename SCALAR = Scalar >; DisplacementVector3D Unit( typename std::enable_if<!std::is_arithmetic<SCALAR>::value,void>::type* = nullptr ) const {; SCALAR tot = R();; tot(tot == SCALAR(0)) = SCALAR(1);; return DisplacementVector3D(*this) / tot;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286495191:124,error,errors,124,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286495191,1,['error'],['errors']
Availability,"OK, so this time the errors are (finally) unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7778#issuecomment-815475383:21,error,errors,21,https://root.cern,https://github.com/root-project/root/pull/7778#issuecomment-815475383,1,['error'],['errors']
Availability,"OK, the error message at the beginning looks spurious. According to the upload status at the end of the build:; ```; With the provided path, there will be 1 file uploaded; Starting artifact upload; For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging; Artifact name is valid!; Container for artifact ""Test Results Windows x64 Release"" successfully created. Starting upload of file(s); Total size of all the files uploaded is 661143 bytes; File upload process has finished. Finalizing the artifact upload; Artifact has been finalized. All files have been successfully uploaded!. The raw size of all the files that were specified for upload is 580[24](https://github.com/root-project/root/actions/runs/7871756907/job/21475661171?pr=14657#step:7:25)97 bytes; The size of all the files that were uploaded is 661143 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage. Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads . Artifact Test Results Windows x64 Release has been successfully uploaded!; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14657#issuecomment-1947882129:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/14657#issuecomment-1947882129,3,"['down', 'error']","['downloaded', 'downloads', 'error']"
Availability,"OK, then I will change the code. Note that I have to physically download a file on the client to have a return code of 0, and then delete it. That's why I wanted to do it differently, but anyway, if it's needed then let's do it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867641484:64,down,download,64,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867641484,1,['down'],['download']
Availability,"OK, there are errors already in LLVM/Clang, and as I said, there is no way I can test on ARM64, so there is not much I can do...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787#issuecomment-2238682170:14,error,errors,14,https://root.cern,https://github.com/root-project/root/issues/11787#issuecomment-2238682170,1,['error'],['errors']
Availability,"OK, this might be an option but currently does not work. Adding. ```; #ifdef R__HAS_VC; #include <Vc/Vc>; #endif; ```. to `DisplacementVector3D.h` leads to the build time errors when rebuilding ROOT like,. ```; In file included from /Users/chris/Projects/ROOT/build/math/genvector/G__GenVector32.cxx:42:; In file included from /Users/chris/Projects/ROOT/build/include/Math/Vector3D.h:17:; /Users/chris/Projects/ROOT/build/include/Math/GenVector/DisplacementVector3D.h:24:10: fatal error: 'Vc/Vc' file not found; #include <Vc/Vc>; ```. I guess that particular compilation unit is not including the Vc header location. Note, my test ROOT build is built with the builtin_vc option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286432162:171,error,errors,171,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286432162,2,['error'],"['error', 'errors']"
Availability,"OK, well, it doesn't work for me:; ```; [bellenot@bbcc7x64 gui]$ root -l games.C; root [0]; Processing games.C...; input_line_14:1:10: fatal error: 'Hello.h' file not found; #include ""Hello.h""; ^~~~~~~~~; input_line_15:1:10: fatal error: 'Aclock.h' file not found; #include ""Aclock.h""; ^~~~~~~~~~; input_line_16:1:10: fatal error: 'Tetris.h' file not found; #include ""Tetris.h""; ^~~~~~~~~~; In file included from input_line_17:1:; ./games.C:72:23: error: allocation of incomplete type 'Hello'; Hello *hello = new Hello();; ^~~~~; ./games.C:65:7: note: forward declaration of 'Hello'; class Hello;; ^; input_line_19:2:3: error: use of undeclared identifier 'rungames'; (rungames()); ^; Error in <HandleInterpreterException>: Error evaluating expression (rungames()).; Execution of your code was aborted.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-778226348:141,error,error,141,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-778226348,7,"['Error', 'error']","['Error', 'error']"
Availability,"OK, what about; ```; do 1 while (true)`; ```; ? I.e. where do we stop? (Note that this isn't parsable, and appending a trailing ';' doesn't help.). For me, an inner block (even if the '{}' are omitted) is not considered by the value printer; changing that is likely not work it and will create many more inconsistencies than is warranted by ""repairing"" the seemingly inconsistent behavior of this ticket. To be more precise, why isn't; ```; if (true) { 1 }; ```; considered to print? What is; ```; switch (a) case 1: 42; ```; supposed to print? I think the current mental model of the ""outer-most expression"" is compatible with the syntax (""add a ';' to make it valid C++"") and comprehensible for users; changing this is a design change that I am not convinced of as it might hurt more than it heals, and causes confusion on the user side plus lots of added complexity.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713457299:342,repair,repairing,342,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713457299,1,['repair'],['repairing']
Availability,"OK. We `dlopen` `libCling` into the process, some other files (`.pcm`, headers, plugin files) must be available as well. Because of this we never invested energy in static builds: you won't get a ""one file packaged ROOT"" anyway. I'd like to understand your use case a bit - what is it that you are trying to solve? How is the deployment of a regular ROOT build inappropriate / not easy enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-865021898:102,avail,available,102,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-865021898,1,['avail'],['available']
Availability,"OK: `Mod` is not valid, so with the diagnostic the error occurs in `Mod->Name` rather than the `assert()` in the following line: hence, no diagnostic indicating the submodule.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377668083:51,error,error,51,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377668083,1,['error'],['error']
Availability,OOM on fed29 and the pcanal-v6-18-00-patches error should be fixed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4850#issuecomment-589575257:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/4850#issuecomment-589575257,1,['error'],['error']
Availability,"OOT 6.20/06. Minimum example to be executed with `$ root -b -l read_tree.cxx` is:. ```; using namespace std::chrono;. void process_tree(TString name, int nFiles, bool DoGetEntries, bool DoDeactivateBranches ) {. // any root files with a TTree; const TString filename = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:1613,reliab,reliable,1613,https://root.cern,https://github.com/root-project/root/issues/7567,1,['reliab'],['reliable']
Availability,OOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5986-mac1015-cxx17&date=2020-07-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89016/console).; ### Errors:; - [2020-07-06T16:44:28.652Z] FAILED: hist/histv7/G__ROOTHist.cxx lib/ROOTHist.pcm ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:105:31: error: expected expression ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:142:55: error: reference to non-static member function must be called ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:170:47: error: reference to non-static member function must be called ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHist.hxx:183:47: error: reference to non-static member function must be called ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:34:1: error: too few template parameters in template redeclaration ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:74:31: error: no template named 'CoordArray_t' in namespace 'ROOT::Experimental::Hist' ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:102:34: error: unknown type name 'CoordArray_t' ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:105:41: error: unknown type name 'CoordArray_t' ; - [2020-07-06T16:44:30.552Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/ROOT/RHistImpl.hxx:113:12: error: unknown type name 'CoordArray_t' . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5986#issuecomment-654347587:1173,error,error,1173,https://root.cern,https://github.com/root-project/root/pull/5986#issuecomment-654347587,6,['error'],['error']
Availability,"OOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to fit some synthesized data with 1 normalization, 1 signal, and 2 background templates. All templates are 3D templates.; Our baseline fit in ROOT 6.28 resulted in non-convergent fit (small EDM, but all nuisance parameters hitting boundaries and model did not describe data well at all). ; The fit in ROOT 6.24 was fine. The baseline fit contains no shape variations so all nuisance parameters are `NormFactor`s. Below is the fitter output (the `DEBUG` lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729:1201,error,error,1201,https://root.cern,https://github.com/root-project/root/issues/12729,1,['error'],['error']
Availability,OOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-4.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/138964/console).; ### Errors:; - [2022-03-08T17:53:08.558Z] FAILED: cd /mnt/build/workspace/root-pullrequests-build/build/tree/tree/test && /usr/local/bin/cmake -E env LD_LIBRARY_PATH=/mnt/build/workspace/root-pullrequests-build/build/lib: ROOTIGNOREPREFIX=1 /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling -rootbuild -v2 -f ElementStructDict.cxx -s /mnt/build/workspace/root-pullrequests-build/build/tree/tree/test/libElementStructDict.so -excludePath /mnt/build/workspace/root-pullrequests-build/root -excludePath /mnt/build/workspace/root-pullrequests-build/build -rml libElementStructDict.so -rmf /mnt/build/workspace/root-pullrequests-build/build/tree/tree/test/libElementStructDict.rootmap -inlineInputHeader -compilerI/usr/include/c++/5 -compilerI/usr/include/x86_64-linux-gnu/c++/5 -compilerI/usr/include/c++/5/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -I/mnt/build/workspace/root-pullrequests-build/root/tree/tree/test -I/mnt/build/workspace/root-pullrequests-build/build/include -I/mnt/build/workspace/root-pullrequests-build/build/etc/cling ElementStruct.h /mnt/build/workspace/root-pullrequests-build/root/tree/tree/test/ElementStructLinkDef.h ; - [2022-03-08T17:53:08.558Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:22:10: fatal error: 'ROOT/RVersion.hxx' file not found ; - [2022-03-08T17:53:08.558Z] /mnt/build/workspace/root-pullrequests-build/build/include/ROOT/RConfig.hxx:22:10: fatal error: 'ROOT/RVersion.hxx' file not found,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10077#issuecomment-1062046774:1814,error,error,1814,https://root.cern,https://github.com/root-project/root/pull/10077#issuecomment-1062046774,2,['error'],['error']
Availability,"OOT. The issue was fixed by Richard upstream; in r303373. The error we fix with this patch is:; ```; While building module 'Core':; While building module 'stl' imported from input_line_1:1:; In file included from <module-includes>:5:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/ccomplex:39:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/complex:42:; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:102:23: error: use of undeclared identifier '_Tp'; struct __are_same<_Tp, _Tp>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:25: error: use of undeclared identifier '_Tp'; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:29: error: expected expression; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:329:37: error: declaration of '_Tp' must be imported from module 'stl.ccomplex' before it is required; : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:327:21: note: previous declaration is here; template<typename _Tp>; ^; ```. Original patch description:. When we enter a module within a linkage specification, switch the linkage; specification and the TU to the new module. This is necessary to get the module ownership cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1016:1109,error,error,1109,https://root.cern,https://github.com/root-project/root/pull/1016,1,['error'],['error']
Availability,"OOT/master/_build/bin/thisroot.fish; /tmp root -l # now with master; root [0] ROOT::RDataFrame(""t"", ""f.root"").Display(""x"")->Print(); Fatal: 0 violated at line 1509 of `../io/io/src/TGenCollectionProxy.cxx'; aborting; #0 0x00007f4f9c4a99ea in wait4 () from /usr/lib/libc.so.6; #1 0x00007f4f9c427a2b in do_system () from /usr/lib/libc.so.6; #2 0x00007f4f9cdcc21c in TUnixSystem::Exec (this=0x55b0a9ebf800, shellcmd=0x55b0ae8f76d0 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 143932 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f4f9cdccb0e in TUnixSystem::StackTrace (this=0x55b0a9ebf800) at ../core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f4f9cc5e089 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7f4f9c10b012 """", msg=0x55b0af523450 ""0 violated at line 1509 of `../io/io/src/TGenCollectionProxy.cxx'"") at ../core/base/src/TErrorDefaultHandler.cxx:174; #5 0x00007f4f9cd3a560 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7f4f9c10b012 """", fmt=0x7f4f9ce795d8 ""%s violated at line %d of `%s'"", ap=0x7ffe675d1310) at ../core/foundation/src/TError.cxx:152; #6 0x00007f4f9cd3ab94 in Fatal (location=0x7f4f9c10b012 """", fmt=0x7f4f9ce795d8 ""%s violated at line %d of `%s'"") at ../core/foundation/src/TError.cxx:249; #7 0x00007f4f9bf0a0fa in TGenCollectionProxy__VectorNext () at ../io/io/src/TGenCollectionProxy.cxx:1509; #8 0x00007f4f9c009167 in TStreamerInfoActions::GenericLooper::Numeric<int, int>::ConvertAction (items=0x55b0af2ac580, start=0x55b0af0e38d0, end=0x55b0af0e38dc, loopconf=0x7ffe675d1550) at ../io/io/src/TStreamerInfoActions.cxx:2447; #9 0x00007f4f9bff45fd in TStreamerInfoActions::GenericLooper::ConvertBasicType<int, int, TStreamerInfoActions::GenericLooper::Numeric>::Action (buf=..., start=0x55b0af0e38d0, end=0x55b0af0e38dc, loopconf=0x7ffe675d1550, config=0x55b0af070740) at ../io/io/src/TStreamerInfoActions.cxx:2467; #10 0x00007f4f9bf90e3b in TStreamerInfoActions::GenericLoope",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9136:1229,Error,ErrorHandler,1229,https://root.cern,https://github.com/root-project/root/issues/9136,1,['Error'],['ErrorHandler']
Availability,"OOT::TVirtualRWMutex::State; _Dp = std::default_delete&lt;ROOT::TVirtualRWMutex::State&gt;]’ ; - /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/TReentrantRWLock.cxx:276:11: error: cannot bind ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt; &gt; &gt;’ lvalue to ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt; &gt; &gt;&&’ ; - /usr/include/c++/4.8.2/bits/unique_ptr.h:169:2: error: initializing argument 1 of ‘std::unique_ptr&lt;_Tp, _Dp&gt;::unique_ptr(std::unique_ptr&lt;_Up, _Ep&gt;&&) [with _Up = {anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt;; _Ep = std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;std::mutex, ROOT::Internal::RecurseCounts&gt; &gt;; &lt;template-parameter-2-3&gt; = void; _Tp = ROOT::TVirtualRWMutex::State; _Dp = std::default_delete&lt;ROOT::TVirtualRWMutex::State&gt;]’ ; - /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/TReentrantRWLock.cxx:276:11: error: cannot bind ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt; &gt; &gt;’ lvalue to ‘std::unique_ptr&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt;, std::default_delete&lt;{anonymous}::TReentrantRWLockState&lt;ROOT::TSpinMutex, ROOT::Internal::UniqueLockRecurseCount&gt; &gt; &gt;&&’ ; - /usr/include/c++/4.8.2/bits/unique_ptr.h:169:2: error: initializing argument 1 of ‘std::unique_ptr&lt;_Tp, _Dp&gt;::unique_ptr(std::unique_ptr&lt;_Up, _Ep&gt;&&) [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873#issuecomment-497466626:3014,error,error,3014,https://root.cern,https://github.com/root-project/root/pull/3873#issuecomment-497466626,2,['error'],['error']
Availability,"OOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 888: Environment variables:; 888: ROOT_HIST=0; 888: Test timeout computed to be: 1500; 888: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 888: error code: -529697949; 888:; 888:; 11/16 Test #888: tutorial-dataframe-df016_vecOps-py .......................***Failed 4.51 sec; test 889; Start 889: tutorial-dataframe-df017_vecOpsHEP-py. 889: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df017_vecOpsHEP.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 889: Environment variables:; 889: ROOT_HIST=0; 889: Test timeout computed to be: 1500; 889: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 889: error code: -529697949; 889:; 889:; 12/16 Test #889: tutorial-dataframe-df017_vecOpsHEP-py ....................***Failed 5.05 sec; test 890; Start 890: tutorial-dataframe-df019_Cache-py. 890: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df019_Cache.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 890: Environment variables:; 890: ROOT_HIST=0; 890: Test timeout computed to be: 1500; 890: Error in <TChain::LoadTree>: Cannot find tree with name ÉB D═ in file C:\Users\sftnight\build\release\tutorials\hsimple.root; 890: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (messa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:12213,Error,Error,12213,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['Error'],['Error']
Availability,ORMAT_MACROS -D__STDC_LIMIT_MACROS -Wno-maybe-uninitialized -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o -MF core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o.d -o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingDataMemberInfo.cxx ; - [2020-08-28T16:33:06.521Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.h:92:15: error: ‘Iter’ function uses ‘auto’ type specifier without trailing return type ; - [2020-08-28T16:33:06.521Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.h:93:23: error: ‘Iter’ function uses ‘auto’ type specifier without trailing return type ; - [2020-08-28T16:33:06.521Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TClingMemberIter.h:94:22: error: ‘End’ function uses ‘auto’ type specifier without trailing return type ; - [2020-08-28T16:33:07.724Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -I/mnt/build/workspace/root-pullrequests-build/root/core/metacling/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/res -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6277#issuecomment-682840299:3008,error,error,3008,https://root.cern,https://github.com/root-project/root/pull/6277#issuecomment-682840299,1,['error'],['error']
Availability,"OS: Ubuntu 18.04.6; ROOT: 6.13.08 (binary); Make error; ROOT: 6.14.06 (binary); Make error; ROOT: 6.16.00 (binary): TMapFile: works, TApplication: failed; ```; Error in <TExMap::Add>: key 140702651440656 is not unique; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff7e1a5e337 in __GI___waitpid (pid=4208, stat_loc=stat_loc; entry=0x7ffd6b4ee5e8, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007ff7e19c9047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007ff7e40dde83 in TUnixSystem::StackTrace() () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #3 0x00007ff7e40e0874 in TUnixSystem::DispatchSignals(ESignals) () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #4 <signal handler called>; #5 0x00007ff7dbd7bc73 in TClingCallFunc::SetArg(long) () from /home/koala/root/6.16.00.bin/lib/libCling.so; #6 0x00007ff7e3f89fef in TApplication::LoadGraphicsLibs() () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #7 0x00007ff7e3f895bc in TApplication::InitializeGraphics() () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #8 0x00007ff7e3f8f54b in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/koala/root/6.16.00.bin/lib/libCore.so.6.16; #9 0x0000560cc64cfdde in main (); ===========================================================; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007ff7dbd7bc73 in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1710742916:49,error,error,49,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1710742916,3,"['Error', 'error']","['Error', 'error']"
Availability,"OS: Ubuntu 20.04.4. Only ROOT 6.28.04 works with the proposed ROOT-CONFIG. ROOT: 6.13.08 (binary); Compiling works, but missing libtinfo.so.5 for running. ; ```; huagen@ikp191:~/Codes/root_debug$ ./appdemo ; Fatal in <TROOT::InitInterpreter>: cannot load library libtinfo.so.5: cannot open shared object file: No such file or directory. ROOT: 6.14.06 (binary); Compiling works, but missing libtinfo.so.5 for running. ; ROOT: 6.16.00 (binary); Compiling works, but missing libtinfo.so.5 for running. ; ROOT: 6.18.04 (binary); Compiling works, but missing libtinfo.so.5 for running.; ROOT: 6.20.00 (binary); Compiling works, TMapFile works, but TApplication failed with error,; huagen@ikp191:~/Codes/root_debug$ ./appdemo ; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; x86_64-linux-gnu-g++-8 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fd1435d9c3a in __GI___wait4 (pid=47601, stat_loc=stat_loc; entry=0x7fffc08d2908, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fd1435d9bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffc08d2908, options=options; entry=0) at waitpid.c:38; #2 0x00007fd143548f67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd1444a57e0 in TUnixSystem::StackTrace() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #4 0x00007fd1444a8244 in TUnixSystem::DispatchSignals(ESignals) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #5 <signal handler called>; #6 0x00007fd13fdbd1d8 in TCling::CallFunc_Factory() const () from /home/huagen/root/6.20.00.bin/lib/libCling.so; #7 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1710747993:668,error,error,668,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1710747993,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"OSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1641,error,error,1641,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,"OT 6.23/01 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |; | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)...; Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so; In file included from /opt/root_bld/include/RConfig.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program; #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict; ^; /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’; # define _NAME3_(name1,name2,name3) name1##name2##name3; ^~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~; /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’; # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__); ^~~~~~~~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:1208,error,error,1208,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,"OT should get one too, but that's another Issue.). As Wouter doesn't appear to have a GitHub account (**edit**: I'm wrong, he's @wverkerke), I'll tag @egpbos as a public member of the RooFit development team (apologies if I should have tagged someone else) as well as @dkirkby to see if they have any particular thoughts on the matter. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. To trigger the RooFit banner simply run any piece of code that uses any part of RooFit. Example:. ```console; $ python -c 'from ROOT import RooFit' # Get banner. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. For the examples I've shown above are using ROOT `v6.24/06` built from source. ```console; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Feb 18 2022, 00:26:00; From tags/v6-24-06@v6-24-06; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. * [ROOT Forum: How to switch off RooFit banner?](https://root-forum.cern.ch/t/how-to-switch-off-roofit-banner/6357/4); * [ROOT Forum: RooFit Banner - can we switch it off somehow?](https://root-forum.cern.ch/t/roofit-banner-can-we-switch-it-off-somehow/13574); * [ROOT Forum: `__ROOFIT_NOBANNER=ON` CMake option seems to have no effect](https://root-forum.cern.ch/t/roofit-nobanner-on-cmake-option-seems-to-have-no-effect/48828); * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/63; * https://github.com/conda-forge/root-feedstock/issues/160",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954:4729,down,download,4729,https://root.cern,https://github.com/root-project/root/issues/9954,1,['down'],['download']
Availability,"OT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5610-windows10-cxx14&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82112/console).; ### Errors:; - [2020-05-14T13:08:58.074Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(256,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_e22b9dfadb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\CommentSema.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\clangAST.vcxproj] ; - [2020-05-14T13:08:58.074Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(4137,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a32e7b53ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\Action.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\clangDriver.vcxproj] ; - [2020-05-14T13:08:58.074Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(894,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_a36a1dd9sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\TailRecursionElimination.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2020-05-14T13:08:58.074Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/FileSystem.h(958,1): fatal error C1088: Cannot flush compiler intermed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5610#issuecomment-628624829:1038,error,error,1038,https://root.cern,https://github.com/root-project/root/pull/5610#issuecomment-628624829,1,['error'],['error']
Availability,OT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6385-ROOT-performance-centos7-multicore-default&date=2020-09-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/96328/console).; ### Errors:; - [2020-09-21T12:14:07.863Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingCallbacks.h:12:52: fatal error: cling/Interpreter/InterpreterCallbacks.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingValue.cxx:18:37: fatal error: cling/Interpreter/Value.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:63:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/TModuleGenerator.cxx:25:41: fatal error: cling/Interpreter/CIFactory.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingTypedefInfo.h:31:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/metacling/src/TClingTypeInfo.cxx:30:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/SelectionRules.cxx:35:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.121Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/DictSelectionReader.cxx:5:43: fatal error: cling/Interpreter/Interpreter.h: No such file or directory ; - [2020-09-21T12:14:08.380Z] /data/sftnight/workspace/root-pullrequests-build/root/core/dictgen/src/LinkdefReader.cxx:43:41: fatal err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-696075693:1184,error,error,1184,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-696075693,1,['error'],['error']
Availability,OT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/103008/console).; ### Errors:; - [2020-11-30T21:43:06.557Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/builtins -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT io/io/CMakeFiles/RIO.dir/src/TStreamerInfo.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TStreamerInfo.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TStreamerInfo.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx ; - [2020-11-30T21:43:06.557Z] /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx:5684:11: error: ‘int_pair_offset’ was not declared in this scope ; - [2020-11-30T21:43:06.557Z] /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TStreamerInfo.cxx:5686:7: error: expected ‘;’ before ‘else’,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6893#issuecomment-736074096:1812,error,error,1812,https://root.cern,https://github.com/root-project/root/pull/6893#issuecomment-736074096,2,['error'],['error']
Availability,OT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106404/console).; ### Errors:; - [2021-02-11T13:33:20.040Z] FAILED: /usr/bin/ccache /usr/bin/c++ -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Ibuiltins/pcre/PCRE-prefix/src/PCRE-build -I/mnt/build/workspace/root-pullrequests-build/root/core/base/res -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -Iginclude -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT core/base/CMakeFiles/Base.dir/src/TString.cxx.o -MF core/base/CMakeFiles/Base.dir/src/TString.cxx.o.d -o core/base/CMakeFiles/Base.dir/src/TString.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx ; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:283:28: error: qualified-id in declaration before ‘(’ token ; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:283:29: error: expected primary-expression before ‘char’ ; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:2645:1: error: expected ‘}’ at end of input . ### Warnings:; - [2021-02-11T13:33:20.041Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TString.cxx:2645:1: warning: control reaches end of non-void function [-Wreturn-type],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-777460626:1456,error,error,1456,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-777460626,3,['error'],['error']
Availability,"OT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:130:9: error: ‘void ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:173:11: error: ‘double ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:130:9: error: ‘void ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:173:11: error: ‘double ROOT::Fit::PoissonLikelihoodFCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669141294:2968,error,error,2968,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669141294,1,['error'],['error']
Availability,OT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:38:12: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:55:7: error: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;256&gt;’ . And 24 more. ### Warnings:; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;240&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/Math/MixMaxEngine.icc:43:17: warning: invalid use of incomplete type ‘class ROOT::Math::MixMaxEngineImpl&lt;17&gt;’ ; - include/Math/MixMaxEngine.icc:43:17: warning: possible problem detected in invocation of delete operator: [-Wdelete-incomplete] ; - include/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1932#issuecomment-384663627:1318,error,error,1318,https://root.cern,https://github.com/root-project/root/pull/1932#issuecomment-384663627,2,['error'],['error']
Availability,"OT::RDF::RDisplay&gt;&, std::shared_ptr&lt;std::pair&lt;long unsigned int, std::shared_ptr&lt;ROOT::RDF::RDisplay&gt; &gt; &gt;, std::shared_ptr&lt;ROOT::Detail::RDF::RLoopManager&gt;&)’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3140:85: error: no type named ‘type’ in ‘struct std::enable_if&lt;false, int&gt;’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3006:109: error: no matching function for call to ‘ROOT::RDF::RInterface&lt;ROOT::Detail::RDF::RLoopManager&gt;::CreateAction&lt;ROOT::Internal::RDF::ActionTags::Display, ULong64_t, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;(std::remove_reference&lt;std::vector&lt;std::__cxx11::basic_string&lt;char&gt; &gt;&&gt;::type, std::shared_ptr&lt;ROOT::RDF::RDisplay&gt;&, std::shared_ptr&lt;std::pair&lt;long unsigned int, std::shared_ptr&lt;ROOT::RDF::RDisplay&gt; &gt; &gt;, std::shared_ptr&lt;ROOT::Detail::RDF::RLoopManager&gt;&)’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3140:85: error: no type named ‘type’ in ‘struct std::enable_if&lt;false, int&gt;’ ; - [2022-10-05T14:54:02.161Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3006:109: error: no matching function for call to ‘ROOT::RDF::RInterface&lt;ROOT::Detail::RDF::RLoopManager&gt;::CreateAction&lt;ROOT::Internal::RDF::ActionTags::Display, ULong64_t, std::vector&lt;int, std::a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11498#issuecomment-1268554722:3196,error,error,3196,https://root.cern,https://github.com/root-project/root/pull/11498#issuecomment-1268554722,1,['error'],['error']
Availability,"OTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Windows 10. Latest version of root as of April 2021; ### Additional context; <!--; Add any other context about the problem here.; -->; I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:5207,down,download,5207,https://root.cern,https://github.com/root-project/root/issues/7982,1,['down'],['download']
Availability,OTOH I really don't understand the 10.14 failure - the node has numpy installed just fine at /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/numpy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7635#issuecomment-804066187:41,failure,failure,41,https://root.cern,https://github.com/root-project/root/pull/7635#issuecomment-804066187,1,['failure'],['failure']
Availability,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-865952020:45,down,download,45,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-865952020,3,"['avail', 'down']","['available', 'download']"
Availability,"Oh ok, so `Clone` only copies the metadata and is expected to yield broken trees as the data stays behind in a different file that the cloned tree does not know how to access. I find this confusing and error-prone, but if it is things working as intended then nothing to do here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9757#issuecomment-1196884915:202,error,error-prone,202,https://root.cern,https://github.com/root-project/root/issues/9757#issuecomment-1196884915,1,['error'],['error-prone']
Availability,"Oh, I see. Maybe something is different in Windows with the masks. What if you change to:; `kButtonPressMask | kButtonReleaseMask | kPointerMotionMask` ?; thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7272#issuecomment-784237454:60,mask,masks,60,https://root.cern,https://github.com/root-project/root/pull/7272#issuecomment-784237454,1,['mask'],['masks']
Availability,"Oh, I was not on my mind that I introduced this new dependecy on `gtest`! I have to discuss with the other ROOT core team members if we really want this. But I think nowadays, `gtest` is available basically everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396288139:187,avail,available,187,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396288139,1,['avail'],['available']
Availability,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13993#issuecomment-1788545523:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/13993#issuecomment-1788545523,1,['failure'],['failures']
Availability,"Oh, and the order. If you call `add42(1)` after the `Declare()`, then there is no error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12277#issuecomment-1424647611:82,error,error,82,https://root.cern,https://github.com/root-project/root/issues/12277#issuecomment-1424647611,1,['error'],['error']
Availability,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-823824168:146,down,download,146,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-823824168,1,['down'],['download']
Availability,"Ok noted, thanks. The current situation is pretty confusing though because. 1) There is no warning when trying to directly persist an interpreted class, only when it is a base class or data member; 2) Trying to persist a data member which is a pointer to an interpreted class is an Error rather than a warning; 3) The warning itself is not really accurate because the data member or base class may actually be saved. In principle the level of warning/error and actual behaviour should be the same in all those cases I guess. ie in the case below. ```cpp; #include ""TFile.h"". class TestBase {};. class TestMember {};. class Test : public TestBase {};. class Test2 {; TestMember data_;; };. class Test3 {; TestMember *data_ = nullptr;; };. void testio() {. Test tb;; Test t;; Test2 t2;; Test3 t3;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&tb, TClass::GetClass<TestBase>(), ""tb"");; fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; fout->WriteObjectAny(&t2, TClass::GetClass<Test2>(), ""t2"");; fout->WriteObjectAny(&t3, TClass::GetClass<Test3>(), ""t3"");. }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: Test2: TestMember has no streamer or dictionary, data member ""data_"" will not be saved; Error in <TStreamerInfo::Build>: Test3: TestMember* has no streamer or dictionary, data member data_ will not be saved; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997489052:282,Error,Error,282,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997489052,3,"['Error', 'error']","['Error', 'error']"
Availability,Ok now it compiles but we get the following error in the new test; ```cpp; input_line_49:1:21: error: unknown type name 'ROOT_7459'; int ROOT_7459 = 42; ROOT_7459++;; ^; input_line_49:1:30: error: expected unqualified-id; int ROOT_7459 = 42; ROOT_7459++;; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14358#issuecomment-1894008821:44,error,error,44,https://root.cern,https://github.com/root-project/root/pull/14358#issuecomment-1894008821,3,['error'],['error']
Availability,"Ok so the errors are due to the fact that keeping the `graph_prune` part in the `get_callable` function we're making sure to prune the unneeded DistRDF node *on the client* so that when we're in the distributed workers we don't need to repeat the graph pruning everytime. Plus the unserialized nodes in the workers are missing some attribute needed for the pruning. Overall, I'd prefer to keep the pruning on the client",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9153#issuecomment-949414839:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/9153#issuecomment-949414839,1,['error'],['errors']
Availability,"Ok so there are few different issues here. Leaving aside the question of why the template error isn't detected, the reason why it's not even printed to the console is because the problematic instantiation occurs via the LookupHelper which calls ```setSuppressAllDiagnostics``` by default. The stack trace leading up to the instantiation looks as below*. So as a workaround at least the user can call from python ```ROOT.gDebug = 6``` to get the full output from clang. Maybe the defaults need to be reconsidered here. The optimal solution here for pyroot/cppyy in general is maybe a bit involved. What is probably desired is; 1) Don't print the clang output, but store any errors or warnings during template instantiation attempts e.g. using ```cling::utils::DiagnosticsStore```; 2) If no template is successfully instantiated then print the stored warnings and errors for each case; 3) If a template is successfully instantiated, but had warnings, at least print those for the successful case. I have some idea what's going wrong with the error detection as well, more news on that soon. \*; ```gdb; Thread 1 ""python"" hit Breakpoint 1, 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) () from /home/b/bendavid/rootdev28/install/lib/libCling.so; (gdb) bt; #0 0x00007ffff2df28e0 in clang::Sema::InstantiateFunctionDefinition(clang::SourceLocation, clang::FunctionDecl*, bool, bool, bool) (); from /home/b/bendavid/rootdev28/install/lib/libCling.so; #1 0x00007ffff1a30ff7 in cling::overloadFunctionSelector(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting) () from /home/b/bendavid/rootdev28/install/lib/libCling.so; #2 0x00007ffff1a387f7 in clang::FunctionDecl const* cling::findFunction<clang::FunctionDecl const*>(clang::Decl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1455272493:90,error,error,90,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455272493,3,['error'],"['error', 'errors']"
Availability,"Ok so we do import every time. What is strange is that we don't hit this always, we should see the error every time e.g. there is no Spark on the worker side. Another option would be to keep the imports at module level as they are now, but make the import of the backend modules lazy?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9972#issuecomment-1050728712:99,error,error,99,https://root.cern,https://github.com/root-project/root/pull/9972#issuecomment-1050728712,1,['error'],['error']
Availability,"Ok, I am surprised I do not see such failures in the ROOT nightlies ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15735#issuecomment-2162366014:37,failure,failures,37,https://root.cern,https://github.com/root-project/root/pull/15735#issuecomment-2162366014,1,['failure'],['failures']
Availability,"Ok, I found the issue why qhelpgenerator is failing, it is due to:. ```; /opt/root_src/documentation/doxygen/mainpage.md:4: warning: found subsubsection command outside of subsection context!; /opt/root_src/documentation/doxygen/mainpage.md:10: warning: found subsubsection command outside of subsection context!; /opt/root_src/documentation/doxygen/mainpage.md:18: warning: found subsubsection command outside of subsection context!; ```. If I change in `mainpage.md` to:; ```; \mainpage %ROOT Reference Documentation. # Introduction; Welcome to %ROOT!. This is the reference manual of the ROOT software tooklit.; You can find in the [reference documentation page](https://root.cern/reference/) pointers to reference manuals for all %ROOT versions. ## Other types of documentation:. - [ROOT Primer](https://root.cern/primer/).; - [ROOT Introductory Course](https://github.com/root-project/training/tree/master/BasicCourse).; - A rich set of %ROOT [tutorials and code examples](https://root.cern/doc/master/group__Tutorials.html) are offered to developers to exercise specific functionality.; - A general [Manual](https://root.cern/manual/) is provided for a more in depth explanation of concepts and functionality available in the %ROOT system.; - A number of topical [User Guides and Manuals](https://root.cern/topical/) for various components of the system. ## Provide your feedback; If you have suggestions about how to improve this documentation, you can let us know:. - With a [PR](https://github.com/root-project/root); - On the [ROOT Forum](https://root-forum.cern.ch); - On [our tracker](https://github.com/root-project/root/issues); ```; then `ROOT.qch` is correctly generated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910397486:1215,avail,available,1215,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910397486,1,['avail'],['available']
Availability,"Ok, I talked to René, it seems that what we get is correct. This functionality shows where the objects in a file are, and their occupancy. It makes sense only if you turn on the ""Event Statusbar"" (as said in the doc). Then moving the mouse on the canvas you see where the objects are. According to René, this functionality makes sense only for big files with many objects. I cannot tell whether it can be improved or not. There is no picture reference available. . Edit: I am investigating where the boxes' colors are coming from and also why there are no labels on the axis (it seems there must be some according to the doc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11723#issuecomment-1318401891:452,avail,available,452,https://root.cern,https://github.com/root-project/root/issues/11723#issuecomment-1318401891,1,['avail'],['available']
Availability,"Ok, I think we have at least 2 problems here. The first is related to these errors `Unable to register cuDNN/cuFFT/cuBLAS factory: Attempting to register factory for plugin cuDNN/cuFFT/cuBLAS when one has already been registered`; For those, I propose you set up your machine following the hints on this thread https://github.com/tensorflow/tensorflow/issues/62075 (it's a bug). As for `fork: retry: Resource temporarily unavailable`, again it looks like a configuration matter relative to the node. Some research shows pages like this one https://unix.stackexchange.com/questions/205016/fork-retry-resource-temporarily-unavailable, that hints to configurations like the one in `/etc/sysctl.conf` . . All in all, I am inclined to consider this item relative to the platform at hand and not to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552#issuecomment-2384887730:76,error,errors,76,https://root.cern,https://github.com/root-project/root/issues/16552#issuecomment-2384887730,1,['error'],['errors']
Availability,"Ok, I've had a first quick look. This is rather a feature than a bug. During alignment, some bounding boxes and voxels need to be recomputed (see the logic in [TGeoPhysicalNode::Align](https://github.com/root-project/root/blob/7c81a10d9fa965b25f35b0ec709d6095a209ac16/geom/geom/src/TGeoPhysicalNode.cxx#L293#L306)). Since a given volume may be changed by many physical node alignments, their bounding boxes and voxels are only marked to be recomputed, otherwise the operation takes too long for complex cases. This lazy recomputation occurs only when any navigation function is called for the given volume, but not when calling just the getter of the box dimensions. So the behavior runtime should be OK, even if you see that some bounding boxes appear to be zero just after alignment. The recomputation of boxes/voxels can be however triggered manually using the following code:; ```; TIter nextv(gGeoManager->GetListOfVolumes());; TGeoVolume *vol;; while ((vol = (TGeoVolume*)nextv())) {; if (vol->IsAssembly()) vol->GetShape()->ComputeBBox();; auto finder = vol->GetVoxels();; if (finder && finder->NeedRebuild()) {; finder->Voxelize();; vol->FindOverlaps();; }; }; ```; I guess this code could be automatically called inside TGeoManager::RefreshPhysicalNodes() which needs to be called anyway by the user to recover pointer consistency after all alignments are applied. Let me know if this code does the job for you and I'll put it there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1431352951:1312,recover,recover,1312,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1431352951,1,['recover'],['recover']
Availability,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:; * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`.; * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/323#issuecomment-273022008:659,redundant,redundant,659,https://root.cern,https://github.com/root-project/root/pull/323#issuecomment-273022008,1,['redundant'],['redundant']
Availability,"Ok, all platforms seem to be working fine (in particular Windows) - the failure on Ubuntu 20.04 looks unrelated. I will wait for https://github.com/root-project/root/pull/12117 to be approved and merged, then rebase this PR and update the tag referencing the monorepo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1406337043:72,failure,failure,72,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1406337043,1,['failure'],['failure']
Availability,"Ok, applied your suggestions @guitargeek and also those of the DeepCode bot. Am now looking at the Travis results, but clang-tidy fails because it can't find the headers that are installed with the ZeroMQ builtin. I guess that makes sense, since they will only become available after they have been built/installed https://travis-ci.org/github/root-project/root/jobs/774177761. I see that a few other built-ins are built in the CI run. Should I add ZeroMQ to some list to trigger that as well for clang-tidy? Though I don't see any explicit built-ins here: https://github.com/root-project/root/blob/master/.ci/copy_headers.sh#L13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-859505320:268,avail,available,268,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-859505320,1,['avail'],['available']
Availability,"Ok, everything seems fine now.; The two failed builds seem to be related to the error @vgvassilev mentioned.; I will keep watching whether further problems occur.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698#issuecomment-566615490:80,error,error,80,https://root.cern,https://github.com/root-project/root/pull/4698#issuecomment-566615490,1,['error'],['error']
Availability,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192957714:158,down,down,158,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714,2,"['down', 'error']","['down', 'error-test-case']"
Availability,"Ok, no exception but the problem is still diagnosed and reported, that's something. If that was with a ROOT version prior to v6.24, can you please try with v6.24? Handling of errors during the event loop was improved in recent versions. If you don't get an exception with v6.24 can you share the datasets (or the part of the datasets required to reproduce the problem) with me (also privately is fine)?. In any case besides this quirk of the exception not being thrown (which I hope is just due to an older ROOT version), things seem to work as intended. As I mentioned, we do want to support disappearing/reappearing branches in the future by letting users specify a default value that the column should take when the branch is not present. This is feature request https://github.com/root-project/root/issues/8704 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006432767:175,error,errors,175,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006432767,1,['error'],['errors']
Availability,"Ok, no failures, let me push a test ~~here~~ to roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8314#issuecomment-852814723:7,failure,failures,7,https://root.cern,https://github.com/root-project/root/pull/8314#issuecomment-852814723,1,['failure'],['failures']
Availability,"Ok, other than the dataframe tests, which are reported in https://github.com/root-project/root/issues/7366, the other tests have either been fixed, are being worked on (#7942), or the failure was a configuration issue on my machine (JupyROOT). I am closing this issue then, as it's not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825672249:184,failure,failure,184,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825672249,1,['failure'],['failure']
Availability,"Ok, problem solved. I removed the faulty GL on my MacBook , cmake again and recomplie. I will now to the same operetion on the SFT mac minis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2376408200:34,fault,faulty,34,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2376408200,1,['fault'],['faulty']
Availability,"Ok, roottest has some failures too. I'll see whether I can fix those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361262119:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361262119,1,['failure'],['failures']
Availability,"Ok, so to sum up. User requests the following file:. ```; alien://path/AliESDs.FILTER_ESDMUON_WITH_ALIPHYSICS_vAN-20150213.root; ```. This is not an actual file: it contains a special string that tells the dataset stager (`afdsmgrd`: or more precisely, the download script it invokes for each file) to:; - Take the source file `alien://path/AliESDs.root` from AliEn; - Apply filtering of type `ESDMUON`; - Use AliPhysics `vAN-20150213` for that purpose; - Stage a file called `root://path/AliESDs.FILTER_ESDMUON_WITH_ALIPHYSICS_vAN-20150213.root` on your local cluster. (Please correct me if I am wrong.). I remember that some time ago we have agreed on having 34bb2e2b5f addressing the problem: `Query=<string>` was used to append an arbitrary `?<string>` to the generated filename. For instance:. ```; Find;FileName=AliESDs.root;BasePath=/alice/data/2011/LHC11h/000169838/ESDs/pass2_muon;Query=ESDMUON_vAN-20150213; ```. would generate filenames in the form:. ```; proto://path/root_archive.zip?ESDMUON_vAN-20150213#AliESDs.root; ```. **Question:** did this approach work for you (again, see this: 34bb2e2b5f)? If it did not, why? If it is just a matter of typing less awkward strings for an extremely custom use case, then your patch cannot be accepted and I suggest replacing it with some good documentation for the end user :-). As an alternative, you can provide them with a macro that generates the `Query=` part for you, if it is less awkward for them. Ah, I also see that between your patches there is an option to ""stat"" the file if filtered. I can see the point there: stating a file which is not there would trigger a download on a specifically configured xrootd storage. This specific patch cannot be accepted by any means as it goes against a concept we have been trying to establish since a long time: ROOT's dataset manager is about _managing lists of files_. Staging files is a job that must be done elsewhere, for instance by a storage system or by a mechanism interacting with it. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/63#issuecomment-99362824:257,down,download,257,https://root.cern,https://github.com/root-project/root/pull/63#issuecomment-99362824,1,['down'],['download']
Availability,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785880634:221,down,downloading,221,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785880634,1,['down'],['downloading']
Availability,"Ok, that's close. @etejedor or @vepadulano are the experts in any case. ROOT itself does the job regarding error messages in case of NaN.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1438633131:107,error,error,107,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1438633131,1,['error'],['error']
Availability,"Ok, the code is broken beyond repair, let's just kill it with fire. I updated the PR to remove the code, the previous failed builds were trying to see if anything behind this define is still serving some purpose.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/794#issuecomment-316989320:30,repair,repair,30,https://root.cern,https://github.com/root-project/root/pull/794#issuecomment-316989320,1,['repair'],['repair']
Availability,"Ok, the errors above are expected, since Davix is outdated in the externals (0.6.2 vs newly required 0.6.4).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845#issuecomment-380455866:8,error,errors,8,https://root.cern,https://github.com/root-project/root/pull/1845#issuecomment-380455866,1,['error'],['errors']
Availability,"Ok, the warnings are for the obvious modulemap mismatches we have and the errors are due to the yet missing VFS mapping. Can we get this in that I can make the follow up PRs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/930#issuecomment-329452395:74,error,errors,74,https://root.cern,https://github.com/root-project/root/pull/930#issuecomment-329452395,1,['error'],['errors']
Availability,"Ok, then we should not assert failure from in test case. Let's just print out the information for reference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394#issuecomment-286571830:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/pull/394#issuecomment-286571830,1,['failure'],['failure']
Availability,"Ok, this seems to reproduce it for me: [pairdict.tar.gz](https://github.com/root-project/root/files/6392968/pairdict.tar.gz). ```; sh make.sh ; root [0] ; Attaching file test.root as _file0...; Warning in <TClass::Init>: no dictionary for class pair<int,MyClass::MyEnum> is available; (TFile *) 0x61800003d880; root [1]; ```. Let me know what I did wrong :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-828547023:274,avail,available,274,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-828547023,1,['avail'],['available']
Availability,"Ok, we reached the first milestone: the upgrade builds on all platforms :tada: . The next step is to investigate the failures in ROOT's tests (but please don't look at the last test report from the new CI, it's incomplete because I messed up the paths when uploading the results; it was done properly in https://github.com/root-project/root/pull/13310). We have a couple of failures across all platforms, and the easiest to understand is that LLVM 16 prepends `class` or `struct` less often for C++ class types. Eventually this comes down to (on `master`):; ```; root [0] struct A { A f(); };; root [1] A a; (A &) @0x7f8a3ca38000; root [2] struct A b; (struct A &) @0x7f8a33db2000; ```; whereas LLVM 16 now prints; ```; root [0] struct A { A f(); };; root [1] A a; (A &) @0x7f025c5a6000; root [2] struct A b; (A &) @0x7f025c5a0000; ```. Similarly the following used to output (on `master`):; ```; root [0] struct A { A f(); };; root [1] .Class A; ===========================================================================; struct A; SIZE: 1 FILE: ROOT_prompt_0 LINE: 1; List of member variables: -------------------------------------------------; List of member functions: -------------------------------------------------; filename line:size busy function type and name; (compiled) (NA):(NA) 0 public: struct A f();; ```; while with LLVM 16 we get; ```; (compiled) (NA):(NA) 0 public: A f();; ```; (funnily enough, `struct A { struct A f(); };` still outputs `public: struct A f();` for LLVM 16). This affects a couple of Cling tests and 3 ROOT tests: `roottest-cling-operator-runEqualTest`, `roottest-cling-template-separateDict-make`, and `roottest-cling-template-separateDictNamespace-make`. I propose we just update the expected reference output and be done with it. Is this fine with everyone? @pcanal @vgvassilev . edit: It's also the underlying reason for `roottest-cling-array-runarray1`, even though that test's `array1test_convert.sh` is really questionable to begin with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273#issuecomment-1649415992:117,failure,failures,117,https://root.cern,https://github.com/root-project/root/pull/13273#issuecomment-1649415992,3,"['down', 'failure']","['down', 'failures']"
Availability,"Ok, 👍 for only running on 3G. Is it possible to cut this down even more by pre-filtering? Review coming soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-667110874:57,down,down,57,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-667110874,1,['down'],['down']
Availability,"Ok. Fair enough. The 'dead-lock' is a red-herring. It is due to the sig-fault handler attempting to allocate memory (we have a proposal to fix that which is waiting on me to do some cleanups). The 'real' problem is:; ```; #12 malloc_consolidate (av=av@entry=0x7fd4402c9b00 <main_arena>) at malloc.c:4211; #13 0x00007fd43ffa8dca in _int_malloc (av=av@entry=0x7fd4402c9b00 <main_arena>, bytes=bytes@entry=1536) at malloc.c:3488; #14 0x00007fd43ffaaf34 in __GI___libc_malloc (bytes=1536) at malloc.c:2928; #15 0x00007fd440a967a8 in operator new(unsigned long) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #16 0x00007fd43bfb375a in llvm::DenseMap<clang::Decl const*, clang::CodeGen::Address, llvm::DenseMapInfo<clang::Decl const*>, llvm::detail::DenseMapPair<clang::Decl const*, clang::CodeGen::Address> >::grow(unsigned int) () from /home/eguiraud/ROOT/root_build/lib/libCling.so; #17 0x00007fd43c0c386a in clang::CodeGen::CodeGenFunction::EmitParmDecl(clang::VarDecl const&, clang::CodeGen::CodeGenFunction::ParamValue, unsigned int) () from /home/eguiraud/ROOT/root_build/lib/libCling.so; #18 0x00007fd43c09b812 in clang::CodeGen::CodeGenFunction::EmitFunctionProlog(clang::CodeGen::CGFunctionInfo const&, llvm::Function*, clang::CodeGen::FunctionArgList const&) (); from /home/eguiraud/ROOT/root_build/lib/libCling.so; ```. I.e. a crash (out-of-memory?) during malloc during JIT compilation. I recommend running with valgrind to get some more information. (And/or disabling the ROOT signal handler to see the real issue a little better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/972#issuecomment-328856964:72,fault,fault,72,https://root.cern,https://github.com/root-project/root/pull/972#issuecomment-328856964,1,['fault'],['fault']
Availability,"Ok. Is that possible to remake the std.pcm?; rm /Users/couet/git/couet-root-bin/lib/std.pcm ; make -C /Users/couet/git/couet-root-bin/ . or similar?. There are similar reports of this error message, I haven't found anything that is close enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693433582:184,error,error,184,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693433582,1,['error'],['error']
Availability,"Okay looks like there is a general problem with the RDataFrame data sources, so the previous failure also didn't relate to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10746#issuecomment-1157704448:93,failure,failure,93,https://root.cern,https://github.com/root-project/root/pull/10746#issuecomment-1157704448,1,['failure'],['failure']
Availability,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-825113424:406,failure,failures,406,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-825113424,1,['failure'],['failures']
Availability,"Okay, getting closer, it seems.; Debian seems to have some special ideas about running `cmake`, and would use; ```; cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=OFF -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON ""-GUnix Makefiles"" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc/root -Dgnuinstall=ON ..; ```; with the failure above. Running ; ```; cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc/root -Dgnuinstall=ON ..; ```; (_only_ using the explicit -D options provided to `dh_auto_configure`) makes the build succeed. Time to bisect...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777#issuecomment-1162858397:551,failure,failure,551,https://root.cern,https://github.com/root-project/root/issues/10777#issuecomment-1162858397,1,['failure'],['failure']
Availability,"Okay, here are the dependencies at the moment (and users for the first few); ```; Fit; ParameterSettings.h (Minuit, Minuit2, RooFit, and MathCore). Math; Error.h (Hist) -> Might not be used in Minuit2?; FitMethodFunction.h (MathCore, MathMore, Minuit2); Functor.h (Lots of uses, including tutorial); GenAlgoOptions.h (MathCore, MathMore); IFunction.h; IFunctionfwd.h; IOptions.h; Minimizer.h; MinimizerOptions.h; Util.h; WrappedFunction.h; WrappedParamFunction.h. Math; GenAlgoOptions.cxx; MinimizerOptions.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369583839:154,Error,Error,154,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369583839,1,['Error'],['Error']
Availability,"Okay, so it seems to be some setup issue as the `signbit` error was in v6.22. I would recommend to build v6.22 and v6.24 and compare the CMake files in the builddir. It may be that, for some reason, homebrew setup makes rootcling prepend `/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include`. PS: I will put my money on the -[i]sysroot compiler flags ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-843786174:58,error,error,58,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-843786174,1,['error'],['error']
Availability,"Okay, something is weird here: The test now fails down to 6.22, maybe even more since I didn't test 6.20. But differently, here's a backtrace from 6.22:; ```; 2018: #0 0x00007f983e185eca llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x2693eca) ; 2018: #1 0x00007f983c03b341 (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x549341) ; 2018: #2 0x00007f983c03b7af (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x5497af) ; 2018: #3 0x00007f983c61b3cc clang::ASTReader::PassInterestingDeclsToConsumer() (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0xb293cc) ; 2018: #4 0x00007f983c5f2336 clang::ASTReader::FinishedDeserializing() (.part.2293) ASTReader.cpp:0:0 ; 2018: #5 0x00007f983c6ed089 clang::MultiplexExternalSemaSource::FinishedDeserializing() (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0xbfb089) ; 2018: #6 0x00007f983dcc138f clang::DeclContext::LoadLexicalDeclsFromExternalStorage() const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x21cf38f) ; 2018: #7 0x00007f983dcc1445 clang::DeclContext::decls_begin() const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x21cf445) ; 2018: #8 0x00007f983be59a41 ROOT::TMetaUtils::CheckIOConstructor(clang::CXXRecordDecl const*, char const*, clang::CXXRecordDecl const*, cling::Interpreter const&) (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x367a41) ; 2018: #9 0x00007f983bef5821 TClingClassInfo::HasDefaultConstructor(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const (.part.271) TClingClassInfo.cxx:0:0 ; 2018: #10 0x00007f983befb564 TClingClassInfo::New(void*, ROOT::TMetaUtils::TNormalizedCtxt const&) const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCling.so+0x409564) ; 2018: #11 0x00007f984223a62f TClass::NewObject(void*, TClass::ENewType) const (/home/jhahnfel/ROOT/v6-22-00-patches/build/lib/libCore.so+0x28562f) ; 2018: #12 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543#issuecomment-1010259909:50,down,down,50,https://root.cern,https://github.com/root-project/root/issues/9543#issuecomment-1010259909,1,['down'],['down']
Availability,"Okay, this is mostly a configuration problem from my side: I didn't install the `libssl-dev` package, so ROOT's configuration defaulted to `builtin_openssl` because `ssl` is `ON` but it couldn't find the OpenSSL headers. On Debian Unstable and Testing, this is a serious problem because it means we effectively end up with OpenSSL 1.1.1g (from the builtin, linked statically) *and* OpenSSL 3.0.8 (from the system, linked as a shared library) in *one process*. We are rather lucky that it doesn't blow up harder... @bellenot do you think we should add a check to detect this configuration (`xrootd AND NOT builtin_xrootd AND builtin_openssl`) and emit a hard error? The tricky part is that this can end up being the automatic choice, as I witnessed...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1435932572:658,error,error,658,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1435932572,1,['error'],['error']
Availability,"Okay, very good! Just FYI, the pythonizations are implemented in these ""mirror classes"" that I declared here:; https://github.com/root-project/root/tree/21fbd344e60a849622991a92d3230681e257c3b9/bindings/pyroot/pythonizations/python/ROOT/pythonization/_roofit. Every function that is defined in a mirror class is then bound to the actual RooFit class, with the original cppyy function name changed to have an underscore prefix. I have already a PR open with some more pythonizations of RooAbsCollection: https://github.com/root-project/root/pull/8179. I can just add one more commit with the element access. But in general, I'm not working too much on these pythonizations because we will most likely get a Google summer of code student for that project! So if you have any further nice ideas for RooFit pythonizations, feel free to write them down in [this issue](https://github.com/root-project/root/issues/7217) and I will what can be implemented with the student.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842226228:843,down,down,843,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842226228,1,['down'],['down']
Availability,"Okay. I think I found a difference. When comparing libRGL.so the working version links to the system OpenGL, whereas my version compiled from sources links to to the mesa installation from Homebrew. Working:; ```; 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib (compatibility version 1.0.0, current version 1.0.0); 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib (compatibility version 1.0.0, current version 1.0.0); ```. Error:	; ```; /usr/local/opt/mesa/lib/libGL.1.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/local/opt/mesa-glu/lib/libGLU.1.dylib (compatibility version 5.0.0, current version 5.1.0); ```. I will try to deinstall mesa from brew and recompile root to see if this fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16523#issuecomment-2376119029:484,Error,Error,484,https://root.cern,https://github.com/root-project/root/issues/16523#issuecomment-2376119029,1,['Error'],['Error']
Availability,"Okay. So basically, if std::span is available, you want to use the system version, and if it is not available, you want to provide a fallback implementation. Using the inline namespace will mean that the linker will refuse to link if different definitions of span were used. . Your PR fixes any complaints I might have had. . I am looking forward to C++20 support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11968#issuecomment-1370253279:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/11968#issuecomment-1370253279,2,['avail'],['available']
Availability,"Old test said:. > one of the reason of the failure is the fact that the first	; > clones array is empty!. https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/runNestedClones.C and https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/nestedclones.root are reproducing this (before it was removed, because roottest isn't a place to keep reproducers)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8744:43,failure,failure,43,https://root.cern,https://github.com/root-project/root/issues/8744,1,['failure'],['failure']
Availability,"Olivier, provided PR is only workaround, which can fail - especially if so many objects destroyed before `TRatioPlot` destructor. I recommend in addition use `TObject::RecursiveRemove(TObject *)` functionality; `TRatioPlot` already registered in list of cleanups - see `gROOT->GetListOfCleanups()->Add(this);` in several constructors. ; One need to call it also for default constructor - which used in case of I/O. Then in `TRatioPlot::RecursiveRemove(TObject *)` one can catch all objects which are destroyed with the pad list of primitives. This is more reliable solution. Something like:. ```; void TRatioPlot::RecursiveRemove(TObject *obj) ; {; if (obj == fSharedXAxis) fSharedXAxis = nullptr; else; if (obj == fUpperGXaxis) fUpperGXaxis = nullptr; else ; ...; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5312#issuecomment-610301842:556,reliab,reliable,556,https://root.cern,https://github.com/root-project/root/pull/5312#issuecomment-610301842,1,['reliab'],['reliable']
Availability,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:760,error,error,760,https://root.cern,https://github.com/root-project/root/issues/8187,1,['error'],['error']
Availability,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7160:153,error,error,153,https://root.cern,https://github.com/root-project/root/issues/7160,2,['error'],['error']
Availability,On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require; to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5339:119,avail,available,119,https://root.cern,https://github.com/root-project/root/pull/5339,1,['avail'],['available']
Availability,"On Ubuntu 18, (Linux Mint), at least for me, sh is redirected to dash. `lrwxrwxrwx 1 root root 4 Sep 23 2018 /bin/sh -> dash`. On dash, neither neither `--help` nor `-V` exist. `man dash` --> https://linux.die.net/man/1/dash. ```; dash:; Installed: 0.5.8-2.10; Candidate: 0.5.8-2.10; Version table:; *** 0.5.8-2.10 500; 500 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages; 100 /var/lib/dpkg/status; ```. I get the same as raistmer if I start dash directly and try to assign `BASH_ARGV`:; ```; $ dash; $ SOURCE=${BASH_ARGV[0]}; dash: 1: Bad substitution; ```. Same if I do:; ```; dash /opt/root_bld/bin/thisroot.sh; /opt/root_bld/bin/thisroot.sh: 166: /opt/root_bld/bin/thisroot.sh: Bad substitution; ```; (same result if I use sh instead of dash). I normally use the ""dot"".; `. /opt/root_bld/bin/thisroot.sh` --> This works without problem. `source /opt/root_bld/bin/thisroot.sh` --> This works without problem, too. `zsh /opt/root_bld/bin/thisroot.sh` --> works too. `bash /opt/root_bld/bin/thisroot.sh` --> this one fails with:; ```; /opt/root_bld/bin/thisroot.sh: line 168: ${(%):-%N}: bad substitution; ERROR: must cd where/root/is before calling . bin/thisroot.sh for this version of bash!; /opt/root_bld/bin/thisroot.sh: line 179: return: can only `return' from a function or sourced script; /opt/root_bld/bin/thisroot.sh: line 195: root-config: command not found; ```; Bash version is:; `GNU bash, version 4.4.20(1)-release (x86_64-pc-linux-gnu)`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1088356955:1119,ERROR,ERROR,1119,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1088356955,1,['ERROR'],['ERROR']
Availability,"On Ubuntu at least, the compiler is in a package separate of the development headers and libraries, but it is required to build `ROOTTMVASofieParser`. If missing, it leads to confusing errors such as `target pattern contains no '%'`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13356:185,error,errors,185,https://root.cern,https://github.com/root-project/root/pull/13356,1,['error'],['errors']
Availability,"On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16586:94,error,errors,94,https://root.cern,https://github.com/root-project/root/pull/16586,1,['error'],['errors']
Availability,"On Windows, the .dll files contain symbol information in COFF Format which DLM currently fails to understand properly. This leads to unrecognized symbol errors while starting ROOT with modules. This commit teaches DLM to correctly read symbols when the Object File is in COFF executable format. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6154:153,error,errors,153,https://root.cern,https://github.com/root-project/root/pull/6154,1,['error'],['errors']
Availability,"On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the; following error:. ```; Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C...; In file included from input_line_10:1:; C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'; gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");; ~~~~~~^; CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):; error code: 1; ```. Using the same trick to get the Python executable name via; `gROOT->ProcessLine` that is also used in the other TMVA tutorials like; `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10379:76,error,error,76,https://root.cern,https://github.com/root-project/root/pull/10379,4,"['Error', 'error']","['Error', 'error']"
Availability,"On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10410:304,failure,failure,304,https://root.cern,https://github.com/root-project/root/issues/10410,1,['failure'],['failure']
Availability,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650:428,repair,repairs,428,https://root.cern,https://github.com/root-project/root/pull/12650,2,"['down', 'repair']","['down', 'repairs']"
Availability,"On apple M2 chips, LLVM assertion slow down the execution of the test suite (>2k tests) by some 20%. This PR aims to check whether this is the case on the Core i7 mac, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14650:39,down,down,39,https://root.cern,https://github.com/root-project/root/pull/14650,1,['down'],['down']
Availability,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16492:1168,Error,Error,1168,https://root.cern,https://github.com/root-project/root/pull/16492,2,['Error'],['Error']
Availability,"On i686, floating-point math is less accurate than on other systems. By enabling SSE2, rounding errors should accumulate to a lower extent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4402:96,error,errors,96,https://root.cern,https://github.com/root-project/root/pull/4402,1,['error'],['errors']
Availability,"On linux vector with custom allocator do indeed have a different layout that vector with the default allocator, The reason is that std::vector is that case ""starts' with an embedded instance of the allocator ... I am guessing that on MacOS the allocator is at the end instead .... I corrected the behavior of TStreamerInfo to not use the 'vector-shortcut' in the case of vector with custom allocator. This makes is go somewhat slower but at least works correctly. Since all vectors with the same custom allocator have the same layout, we could recover the performance by embedded support for VecOps::TAdoptAllocator directly in TStreamerInfo's actions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1707#issuecomment-371299491:544,recover,recover,544,https://root.cern,https://github.com/root-project/root/pull/1707#issuecomment-371299491,1,['recover'],['recover']
Availability,On macOS 13.3 Xcode 14 we get; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: error: 'std::reverse_iterator<unsigned long long *>::operator->' from module 'std.iterator.__iterator.reverse_iterator' is not present in definition of 'std::reverse_iterator<unsigned long long *>' in module 'std.iterator.__iterator.reverse_iterator'; constexpr pointer operator->() const; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: note: declaration of 'operator->' does not match; ```; when generating `./tree/ntupleutil/G__ROOTNTupleUtil.cxx` yet the exit code is 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788:192,error,error,192,https://root.cern,https://github.com/root-project/root/issues/12788,1,['error'],['error']
Availability,"On macOS, `-Dcocoa=Off` will cause the build to fail with; ```; [ 77%] Linking CXX shared library ../lib/libCore.so; Undefined symbols for architecture arm64:; ""TMacOSXSystem::TMacOSXSystem()"", referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; ""typeinfo for TMacOSXSystem"", referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; ld: symbol(s) not found for architecture arm64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libCore.so] Error 1; make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12527:666,error,error,666,https://root.cern,https://github.com/root-project/root/issues/12527,4,"['Error', 'error']","['Error', 'error']"
Availability,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433:180,avail,available,180,https://root.cern,https://github.com/root-project/root/pull/16433,1,['avail'],['available']
Availability,"On my machine both commands produce a 0-sized module. Eg:; ```bash; rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h; Error in <CheckModuleValid>: Couldn't find module with name 'classes' in modulemap!; du classes.pcm ; 0	classes.pcm; ```. That is because you need to write a modulemap (normally the build system or aclic does it for you). ```bash; echo ""module classes { export * header \""classes.h\"" }"" > classes.modulemap; rootcling -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h ; vvassilev@vv-nuc ~/workspace/builds/root_master $ du -hs classes.pcm ; 400K	classes.pcm; ```. If you want to use the selection xml file you could still do it like:; ```bash; rootcling -reflex -cxxmodule -moduleMapFile=classes.modulemap -f out.cpp -s ./libclasses.so classes.h classes.xml ; du classes.pcm ; 404	classes.pcm; ```. We never really tried the `-cxxmodule` option under `genreflex`. Maybe we should just drop it from there. We use `rootcling -reflex ...`. See here https://github.com/cms-sw/cmssw-config/blob/41730a3bd862bb50a68d52279d096f1794d8874e/SCRAM/GMake/Makefile.cxxmodule#L112; Using `rootcling -reflex` would not follow the `genreflex` convention to add `_rflx` prefix to the files but so far we have not seen issues due to that. A general note is that `rootcling` is a superset of `genreflex`. The argument parsing of rootcling is more helpful and we run extra checks in the context of `-cxxmodule`. I'd warmly recommend to use rootcling in favor of genreflex in the context of modules. Additionally, this gives a potential way to deprecate `genreflex` once/if people move to modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9448#issuecomment-997459562:149,Error,Error,149,https://root.cern,https://github.com/root-project/root/issues/9448#issuecomment-997459562,2,"['Error', 'echo']","['Error', 'echo']"
Availability,On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error.; Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3801:137,error,error,137,https://root.cern,https://github.com/root-project/root/pull/3801,2,['error'],['error']
Availability,"On one installation of MacOS with Sonoma 14.6.1 and XCode 15.4 and clang-1500.3.9.4; (not sure about the xcode command line tool version), the generation of; G__Core.cxx failed until we applied the change in this commit. On another installation of MacOS with the same version numbers the; change was not needed but the change did not hurt either. ```; In module 'std' imported from input_line_1:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:52:; error: missing '#include <__chrono/file_clock.h>'; '_FilesystemClock'; must be defined before it is used; template <class _Clock, class _Duration = typename _Clock::duration>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:1:; note: in instantiation of default argument for; 'time_point<std::filesystem::_FilesystemClock>' required here; template <class _Clock, class _Duration = typename _Clock::duration>; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/file_clock.h:51:8:; note: definition here is not reachable; struct _FilesystemClock {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494:547,error,error,547,https://root.cern,https://github.com/root-project/root/pull/16494,1,['error'],['error']
Availability,"On second thought, is it possible to replace this by an explicit check if std::not_fn is available?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096#issuecomment-446506529:89,avail,available,89,https://root.cern,https://github.com/root-project/root/pull/3096#issuecomment-446506529,1,['avail'],['available']
Availability,"On some configurations such warning causes compilation errors like:. ```; C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9686:55,error,errors,55,https://root.cern,https://github.com/root-project/root/pull/9686,2,['error'],"['error', 'errors']"
Availability,On some machines the gif library is not available.; The animated gif production is disabled by default.; The tutorial header explains how to activate it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10433:40,avail,available,40,https://root.cern,https://github.com/root-project/root/pull/10433,1,['avail'],['available']
Availability,"On the Snap build of ROOT, the parameters were assumed to be int, double. Errors from build log, running Ubuntu 20.04 GCC9 C++17. ```; /root/parts/root/src/roofit/xroofit/src/xRooNode.cxx:5778:105: note: deduced conflicting types for parameter ‘const _Tp’ (‘int’ and ‘double’); 5778 | : (h->GetBinContent(1) + std::max(abs(h->GetBinContent(1) * 0.1), 50.)));; ```; ; This doesn't appear to occur in normal builds, but the guard code seems trivial enough to include and this may prevent compilation errors in other scenarios. ## Checklist:. - [Y] tested changes locally; - [Y] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11984:74,Error,Errors,74,https://root.cern,https://github.com/root-project/root/pull/11984,2,"['Error', 'error']","['Errors', 'errors']"
Availability,"On the jenkins build node the error appears likely because of '-Dsoversion=""On""' and the following. One test that fails is 'runload.C' in roottest/root/treeformula/sync. There we have (essentially):; ```; {; gROOT->ProcessLine("".L loadcode.C+"");; ...; TTree *t; _file0->GetObject(""t"",t);; }; ```; The use of TTree means that before executing the script libTree is laoded.; During the execution of CompileMacro, the depend library are loaded (see for example the collection line [3363](https://github.com/root-project/root/blob/f32d06e70ce357b53050a25eecd5186859021e30/core/base/src/TSystem.cxx#L3363) .; And in this case the result is:; ```; loadcode_C.so libTree.6.21.01.so libTree.so; ```; which coupled with the ***new*** feature that gSystem->Load first dlclose the library then reopen it means that libTree is dlclose 2 or 3 times (one for both the versioned and unversioned version). This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded). Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db). Technically CompileMacro could (as it does elsewhere) first check if the library is loaded. But still several questions:. 1) Why is libTree listed twice in the list of depend library?. 2) When should gSystem->Load automatically reload a library, if ever?. @Axel-Naumann @vgvassilev opinions?. PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618042721:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618042721,1,['error'],['error']
Availability,"On the one hand I agree with @bluehood, on the other hand I hate writing to stdout or stderr without any logging mechanism ... But I agree that it could fall back to the generic impl and shoot down your MT scenario silently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-480271507:193,down,down,193,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-480271507,1,['down'],['down']
Availability,"On windows:; ```; 11:06:03 MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; 11:06:03 ParallelTest.cxx; 11:06:03 Creating library C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.lib and object C:/build/workspace/root-pullrequests-build/build/core/base/test/Release/CoreBaseTests.exp; 11:06:03 PaulTest.cxx; 11:06:03 REveTreeTools.cxx; 11:06:03 C:\build\workspace\root-pullrequests-build\build\core\base\test\Release\CoreBaseTests.exe : fatal error LNK1169: one or more multiply defined symbols found [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7132#issuecomment-780824959:55,error,error,55,https://root.cern,https://github.com/root-project/root/pull/7132#issuecomment-780824959,2,['error'],['error']
Availability,"Once #13370 is merged, the only remaining thing to do for this PR would be to disable the windows tests, as it is unclear why windows corrupts the tree name strings as seen in the failed tests:; ```; Error in <TChain::LoadTree>: Cannot find tree with name áÐ-[NON-XML-CHAR-0xF]d╩~ in file C:\build\workspace\root-pullrequests-build\build\tutorials/tmva/RBatchGenerator_filters_vectors_hvector.root; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13302#issuecomment-1665795587:200,Error,Error,200,https://root.cern,https://github.com/root-project/root/pull/13302#issuecomment-1665795587,1,['Error'],['Error']
Availability,One failure of the system in one cell.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/480#issuecomment-292807593:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/480#issuecomment-292807593,1,['failure'],['failure']
Availability,"One just needs to move the places where `unique_ptr` needs to have the definitions (c'tors, d'tor) to where the definition is available. As as you can guess by looking at the *fwd* decl of `task_arena` that was already the case before. Have more trust in us, @krasznaa ! ;-). (Your example is missing the move ctors and dtor: they need to be defined in the source, too.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062#issuecomment-762858839:126,avail,available,126,https://root.cern,https://github.com/root-project/root/pull/7062#issuecomment-762858839,1,['avail'],['available']
Availability,"One more explicit example, on Ubuntu 18.04 LTS, ; with root-config options w/o -lNew, i.e. ROOTGLIBS = $(shell root-config --glibs) -lNew, the TMapFile did not work but TApplication works fine. ; If with ""-Wl,--no-as-needed -lNew"", the TMapFile works but TApplication fails with segmentation violation. Since TApplicatioin is always available for ROOT, is there any solution to make TApplication work when the option ""-Wl,--no-as-needed -lNew"" is introduced?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1726027722:333,avail,available,333,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1726027722,1,['avail'],['available']
Availability,"One more ping, apologies for this. @greenc-FNAL @vgvassilev could we close the item?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1925610601:9,ping,ping,9,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1925610601,1,['ping'],['ping']
Availability,One more update from forum:. ` 98%] Linking CXX shared library …/…/lib/libRGL.so. ld: library not found for -lGLEW. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libRGL.so] Error 1. make[1]: *** [graf3d/gl/CMakeFiles/RGL.dir/all] Error 2. make: *** [all] Error 2`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5203#issuecomment-603094380:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/5203#issuecomment-603094380,4,"['Error', 'error']","['Error', 'error']"
Availability,"One of the features of these exports is that they are supposed to be humanly readable, in contrast with binary formats. Don't ask me why, but there are people looking in the GDML after discovering some geometry error...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1901#issuecomment-383467936:211,error,error,211,https://root.cern,https://github.com/root-project/root/pull/1901#issuecomment-383467936,1,['error'],['error']
Availability,"One thing that needs to be addressed is that `ROOT::Double_v` is simply `double` when VecCore is disabled, so the way you are implementing it, the vectorized functions have the same signature as the scalar ones, therefore you get errors like this:; ```; TMath.cxx:846:37: error: call of overloaded ‘KolmogorovProb(Double_t&)’ is ambiguous; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400722627:230,error,errors,230,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400722627,2,['error'],"['error', 'errors']"
Availability,Only 'failure' is the missing Windows nodes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3714#issuecomment-485442082:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/pull/3714#issuecomment-485442082,1,['failure'],['failure']
Availability,"Only a rebase, checking that the failure in `gtest-hist-histdrawv7-test-histhistdrawv7testUnit` is still there for all platforms (it is in my Linux setup). Also there seems to be a new failure in `roottest-root-meta-tuple-exec_configtype_unload-auto`, let's see how many platforms that affects...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1492106592:33,failure,failure,33,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1492106592,2,['failure'],['failure']
Availability,Only builds using LLVM 9 source works right now (using `--with-binary-llvm` and `--with-llvm-tar` flags will cause a build error). A single test fails. Reproducer - `cat <path to cling source dir>/test/Lookup/template.C | cling --nologo -I<path to build dir>/tools/clang/include -Xclang -verify -fno-rtti 2>&1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7760:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/7760,1,['error'],['error']
Availability,Only download test data if running the test that needs them,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/402:5,down,download,5,https://root.cern,https://github.com/root-project/root/pull/402,1,['down'],['download']
Availability,"Only first try to clone failed, but PR was marked as failure in any case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1617#issuecomment-364956035:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/1617#issuecomment-364956035,1,['failure'],['failure']
Availability,Only ui5/jsroot code is changed - any kind of failures has nothing todo with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4319#issuecomment-526610947:46,failure,failures,46,https://root.cern,https://github.com/root-project/root/pull/4319#issuecomment-526610947,1,['failure'],['failures']
Availability,"Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```; if __name__ == ""__main__"": ; with TFile(""file1.root"", ""recreate"") as outfile: ; h = ROOT.TH1F() ; outfile.Close(); ```. about half the time it gives the following error output:. `; *** Break *** segmentation violation; [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info); [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11823:367,error,error,367,https://root.cern,https://github.com/root-project/root/issues/11823,1,['error'],['error']
Availability,Ops! Thanks you so much! it is totally my fault!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6236#issuecomment-678150277:42,fault,fault,42,https://root.cern,https://github.com/root-project/root/pull/6236#issuecomment-678150277,1,['fault'],['fault']
Availability,"Opts.vcxproj] ; - [2022-09-21T16:15:07.645Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/PointerLikeTypeTraits.h(84,57): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXPrologEpilogPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PartiallyInlineLibCalls.cpp(186,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(56,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-21T16:15:10.022Z] cl : command line error D8027: C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXGenericToNVVM.cpp : fatal error C1001: Internal compiler error. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(211,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\NewGVN.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11407#issuecomment-1253937552:2689,error,error,2689,https://root.cern,https://github.com/root-project/root/pull/11407#issuecomment-1253937552,1,['error'],['error']
Availability,Or maybe the Error caused some visible difference in the output file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964#issuecomment-585259464:13,Error,Error,13,https://root.cern,https://github.com/root-project/root/pull/4964#issuecomment-585259464,1,['Error'],['Error']
Availability,Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7350:311,failure,failures,311,https://root.cern,https://github.com/root-project/root/pull/7350,1,['failure'],['failures']
Availability,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5178:381,error,error,381,https://root.cern,https://github.com/root-project/root/pull/5178,2,['error'],['error']
Availability,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5059:552,error,error,552,https://root.cern,https://github.com/root-project/root/pull/5059,1,['error'],['error']
Availability,"Original message of upstream commit by Richard Smith, https://github.com/llvm/llvm-project/commit/61c7a9140b:; ```; Commit to a primary definition for a class when we load its first; member. Previously, we wouldn't do this if the first member loaded is within a; definition that's added to a class via an update record, which happens; when template instantiation adds a class definition to a declaration; that was imported from an AST file. This would lead to classes having member functions whose getParent; returned a class declaration that wasn't the primary definition, which; in turn caused the vtable builder to build broken vtables. I don't yet have a reduced testcase for the wrong-code bug here, because; the setup required to get us into the broken state is very subtle, but; have confirmed that this fixes it.; ```. This fixes an assertion in `CodeGenFunction::EmitCXXDestructorCall()`:; ```; Assertion `ThisTy->getAsCXXRecordDecl() == DtorDecl->getParent() && ""Pointer/Object mixup""' failed.; ```; which was already seen during the upgrade to LLVM 13 in one tutorial on CentOS 8 and ""solved"" by commit ffe867985b (""Relax assertion on generating destructor call""). Due to the nature of this problem, the assertion failure went away with unrelated changes so I reverted the change in 2b997add1d. Now the problem comes back with the upgrade to LLVM 16 and also in master when trying to enable the RBatchGenerator tutorials in https://github.com/root-project/root/pull/13302, both on macOS this time. Luckily, the underlying cause was properly fixed in upstream LLVM just last week, so backport that commit. FYI @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13370:1225,failure,failure,1225,https://root.cern,https://github.com/root-project/root/pull/13370,1,['failure'],['failure']
Availability,"Originally, I used https://github.com/GooFit/Minuit2 - that uses a python script to re-copy the changed files from the ROOT sources. Being a git repository, it also easily is included as a submodule in the `/extern` folder for GooFit, for example. After meeting and talking with @lmoneta a couple of days ago over a coffee, he outlined the procedure I initially implemented. He showed me the old ""build"" directory, with an old bash script that copied the necessary files out. He wanted me to make a new folder to eventually replace his build folder. The idea is that you could create source distributions that would be packaged and made available as downloads to continue the outdated ones available here: http://project-mathlibs.web.cern.ch/project-mathlibs/minuit/release/download.html. I added this though `make package_source`, and included `make package` for binary distributions as well. The integrated version does look a bit better, though it is a bit more invasive and not nearly as well separated. I do need to copy to `/inc/Math`, etc, since a source distribution needs to be in the source directory. Everything is copied to `INSTALL_PREFIX/include` when it's installed or packaged for a binary distribution. As for use, a git only solution really is not feasible, unfortunately, with any method that does not include git submodules. The current methods for a user are:. * Install beforehand from one of the downloadable packages, either building a source package or installing a binary package. This is the way some people will get it, but not ideal for a modern package that wants to have minimal dependencies.; * Have CMake download and build the package with `ExternalProject` - probably the best solution for now, still not as nice for something like GooFit that already has all dependencies as git submodules.; * Check out all of ROOT as a submodule, then `add_subdirectory(extern/root/math/minuit2)`. Much more disk space usage that needed, but otherwise also a decent solution. Migh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369601161:637,avail,available,637,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369601161,4,"['avail', 'down']","['available', 'download', 'downloads']"
Availability,Otherwise roottest will pick up in the standalone mode the NDEBUG; flag twice and fail due to a redefinition. This failure shows up; in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6586:115,failure,failure,115,https://root.cern,https://github.com/root-project/root/pull/6586,1,['failure'],['failure']
Availability,"Otherwise the externals are built in x86_64 mode and are not compatible with the rest of the libraries. The error message is then something like:; ```; ld: warning: ignoring file lib/liblzma.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64; ```. See also https://discourse.cmake.org/t/building-application-using-externalproject-add-on-m1-cpu/4931/7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12887:108,error,error,108,https://root.cern,https://github.com/root-project/root/pull/12887,1,['error'],['error']
Availability,Otherwise we get cmake errors when CLING_CXXFLAGS is empty.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8866:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/8866,1,['error'],['errors']
Availability,"Ouch, that's painful! I totally fell for this, totally my fault. I suggested to increase the class number in this PR. Now I will always use this as an example for why magic numbers are dangerous :D. Don't worry about this, @egpbos, I'll make a PR to revert the version number increase myself. I'll also add a comment to all RooFit classes with `ClassDef(..., 0)` so this mistake doesn't happen again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569#issuecomment-878862510:58,fault,fault,58,https://root.cern,https://github.com/root-project/root/pull/8569#issuecomment-878862510,1,['fault'],['fault']
Availability,Our CMake code for making path to headers relative is broken; for the v7 headers (as they don't have the 'CURRENT_SOURCE/inc'; prefix we check for). This caused that we have absolute paths for; those headers in the modulemap we ship with ROOT. This patch just hacks in the additional check for v7 headers; and a sanity check that should prevent this error in the future.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2003:350,error,error,350,https://root.cern,https://github.com/root-project/root/pull/2003,1,['error'],['error']
Availability,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591456445:97,failure,failure,97,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591456445,2,['failure'],['failure']
Availability,"Our builds break at; ```; [100%] Generating lib/modules.idx; [snip]; make[6]: *** [lib/modules.idx] Error 139; make[5]: *** [CMakeFiles/modules_idx.dir/all] Error 2; make[4]: *** [all] Error 2; ```; I think this comes from https://github.com/root-project/root/blob/5d69eca85a2be137684807446878f782e4a368eb/CMakeLists.txt#L508-L519 which isn't part of the branch in this PR, but after a rebase to the ROOT master branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9765#issuecomment-1026900510:100,Error,Error,100,https://root.cern,https://github.com/root-project/root/pull/9765#issuecomment-1026900510,3,['Error'],['Error']
Availability,"Out of curiosity, is the failure on Windows understood (at least to a certain extent)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12818#issuecomment-1547511722:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/12818#issuecomment-1547511722,1,['failure'],['failure']
Availability,"Output lines are in wrong order when running CTest on Windows x64, as shown below:; ```; 1397: -- BEGIN TEST OUTPUT --; 1397:; 1397: Processing C:/Users/bellenot/git/roottest/root/meta/runInterpreterValue.C...; 1397: WithDtor(): 1; 1397: Ident: IAmWithDtor!; 1397: Now deleting TInterpreterValue; 1397: ~WithDtor() 0; 1397: Now all WithDor should be gone; we have 0 left; 1397: About to return a WithDtor; 1397:; 1397: -- END TEST OUTPUT --; 1397: -- BEGIN OUTDIFF OUTPUT --; 1397: --- C:/Users/bellenot/git/roottest/root/meta/InterpreterValue.ref Tue Jul 13 10:19:19 2021; 1397: +++ C:/Users/bellenot/build/x64/release/roottest/root/meta/roottest-root-meta-runInterpreterValue-auto.log Mon Feb 21 15:23:36 2022; 1397: @@ -1,7 +1,7 @@; 1397:; 1397: WithDtor():1; 1397: -AbouttoreturnaWithDtor; 1397: Ident:IAmWithDtor!; 1397: NowdeletingTInterpreterValue; 1397: ~WithDtor()0; 1397: NowallWithDorshouldbegone;wehave0left; 1397: +AbouttoreturnaWithDtor; 1397:; 1397: -- END OUTDIFF OUTPUT --; 1397: CMake Error at C:/Users/bellenot/build/x64/release/RootTestDriver.cmake:254 (message):; 1397: compare 'stdout' error: 1; 1397:; 1397:; 1/1 Test #1397: roottest-root-meta-runInterpreterValue-auto ...***Failed 0.56 sec; ```; The output is correct, but the line order is wrong (i.e. `AbouttoreturnaWithDtor` is at the wrong position).; This is related to the issue #9809, and is due to the `-O1` optimization flag in Cling (`clingArgsStorage.push_back(""-O1"");` in `TCling.cxx`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9944:1003,Error,Error,1003,https://root.cern,https://github.com/root-project/root/issues/9944,2,"['Error', 'error']","['Error', 'error']"
Availability,"Output of `valgrind` with the original report of just `#include <LoKi/ParticleCuts.h>`, replacing `1519` in the paths with `1529`:; ```; $ VALGRIND_LIB=/cvmfs/lhcb.cern.ch/lib/lcg/releases/valgrind/3.22.0-113bc/x86_64-el9-gcc13-dbg/libexec/valgrind/ valgrind --leak-check=full --suppressions=/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/etc/valgrind-root.supp root.exe -q -e ""#include <LoKi/ParticleCuts.h>""; ==652727== Memcheck, a memory error detector; ==652727== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.; ==652727== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info; ==652727== Command: root.exe -q -e #include\ \<LoKi/ParticleCuts.h\>; ==652727== ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 03 2024, 17:20:15 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ==652727== Conditional jump or move depends on uninitialised value(s); ==652727== at 0xB2BAFE3: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E4679: llvm::Evaluator::EvaluateBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*&, bool&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so); ==652727== by 0xA9E5D5C: llvm::Evaluator::EvaluateFunction(llvm::Function*, llvm::Constant*&, llvm::SmallVectorImpl<llvm::Constant*> const&) (in /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:471,error,error,471,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,1,['error'],['error']
Availability,"Over the years the AST has been very good in terms of printing compileable code. We have contributed number of improvements for template parameters and we are also now contributing preserving of type sugar. All of this is very important for us but also for clang when issuing diagnostics. > ; > That said, I think that internal consumers of the semantic attribute node will expect the contents to be whatever the raw string literal specifies. e.g., `-ast-print` should print the raw prefix and suffix if the user used one, and for things like `*SomeAnnotateAttr->args_begin()` to be a `StringRef` with the raw literal contents but not the prefix/suffix. That would probably fix a few cases in clang but it may not fix ours in which we create an attribute and pass a StringRef. > ; > > @AaronBallman, after looking some more, the question boils down to: Would it be acceptable if writing an implicitly created annotate attribute (via`AnnotateAttr::CreateImplicit`) contains the raw string literal in the form: `class __attribute__((annotate(R""(3D scaling ""projection"")""))) C;`; > > If that is the case, then @junaire I'd propose to modify the current patch to synthesize the raw string literal if it was marked as ""implicit"".; > ; > I don't think the attribute being implicit or not should control the behavior here; I think the parsed string literal should control it. However, due to adjacent string concatenation, doing this properly may take a bit more work than you'd initially think. I think we'll need to inspect the `StringLiteral` expression object, loop over `tokloc_begin()/tokloc_end()` to get each component of the full string literal expression, call `Lexer::getSpelling()` to get the source of the token at that source location, and see whether the start of the string is a raw string literal. . That won't work for us as we are synthesizing code and there are no source locations, neither a StringLiteral. We create an implicit attribute out of thin air. > All this mess would get call",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1169568670:3085,down,down,3085,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1169568670,1,['down'],['down']
Availability,"Over the years we have a pathological issue with cling when it calls directly; compiler API. Most of the API assume they are called from code residing in a; text file. This code has valid source locations which can be used for; comparisons and things like point of instantiation for template instantiations. This means that whenever a clang API requires a valid source location, cling; should have an interface which gives a pseudo-valid, commonly-rooted unique; source location. We are bitten by this fact when preloading modules as if we have diagnostics; they cannot be ordered due to the fact that the compared decls from two; different modules do not have a common includer. This patch avoids using an API and relies on a textual form which does not have; this problem at the cost of synthesizing an extra string. This should fix the roottest python stl-stl test failure in the incremental builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4339:868,failure,failure,868,https://root.cern,https://github.com/root-project/root/pull/4339,1,['failure'],['failure']
Availability,Over the years we have been working towards controlling very well the way we build the PCH in order to reduce a lot of subtle problems. We have understood that inverting the responsibility to the infrastructure producing the PCH is better in terms of reliability. This patch unteaches cling to match its compiler instance to a given PCH. This helps when migrating to clang-repl where we could rely much more on the clang Driver to set up the compiler instance. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922:251,reliab,reliability,251,https://root.cern,https://github.com/root-project/root/pull/11922,1,['reliab'],['reliability']
Availability,"P.S. @olifre Note that there are still some potential issues without my changes:; ```; root [1] TBrowser b; (TBrowser &) Name: Browser Title: ROOT Object Browser; root [2] Error in <TTreeFormula::DefinedVariable>: operator is not a datamember of ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >; Error in <TTreeFormula::Compile>: Bad numerical expression : ""tracks.operator""; Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {tracks.operator-().operator+().Py(),}; Error in <TTreeFormula::DefinedVariable>: operator is not a datamember of ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >; Error in <TTreeFormula::Compile>: Bad numerical expression : ""tracks.operator""; Info in <TSelectorDraw::AbortProcess>: Variable compilation failed: {tracks.operator-().Vect().unit().unit().Rho(),}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13284#issuecomment-1642707327:172,Error,Error,172,https://root.cern,https://github.com/root-project/root/pull/13284#issuecomment-1642707327,4,['Error'],['Error']
Availability,"PEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProofConn::LowWrite(XPClientRequest *req, const void* reqData,; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was not declared in this scope; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:23: error: expected ‘;’ before ‘type’; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1006:17: error: ‘type’ was not declared in this scope; 01:46:28 len = sizeof(type);; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1062:1: warning: contro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:1925,error,error,1925,https://root.cern,https://github.com/root-project/root/issues/6779,1,['error'],['error']
Availability,"PFloat.h(1080,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_1d7fb132sy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseOpenMP.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\clangParse.vcxproj] ; - [2020-08-13T07:46:33.095Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/CodeGen/MachineBasicBlock.h(184,53): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_380540aasy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXRegisterInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2020-08-13T07:46:33.095Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm(438,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_c2be8b0bsy': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\PrologEpilogInserter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2020-08-13T07:46:33.095Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring(4182,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_cc82f55bex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\HTMLRewrite.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\clangRewrite.vcxproj] . And 52 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6175#issuecomment-673320756:4957,error,error,4957,https://root.cern,https://github.com/root-project/root/pull/6175#issuecomment-673320756,2,['error'],['error']
Availability,"PInt.h(107,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_91ad5f6adb': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\TextNodeDumper.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-25T09:32:12.898Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\type_traits(2206,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_5c5fd103ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXProxyRegErasure.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-02-25T09:32:12.898Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\xmemory(1633,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_7bf7d7e9ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2022-02-25T09:32:12.898Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(652,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_9199cd81ex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\TokenConcatenation.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] . And 38 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9984#issuecomment-1050689315:4589,error,error,4589,https://root.cern,https://github.com/root-project/root/pull/9984#issuecomment-1050689315,2,['error'],['error']
Availability,PR and description updated addressing also the diagnostic capture and printing. I'm still not totally sure about how the catching of errors and rollback of the transaction is handled in LookupHelper as said in the description.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449#issuecomment-1479781349:133,error,errors,133,https://root.cern,https://github.com/root-project/root/pull/12449#issuecomment-1479781349,2,"['error', 'rollback']","['errors', 'rollback']"
Availability,"PR builds without errors or warnings, nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-405222982:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-405222982,1,['error'],['errors']
Availability,"PR fixes broken Travis, since vecgeom is not tested in CI, all failure should be unrelated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5509#issuecomment-621728604:63,failure,failure,63,https://root.cern,https://github.com/root-project/root/pull/5509#issuecomment-621728604,1,['failure'],['failure']
Availability,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8827:184,ERROR,ERROR,184,https://root.cern,https://github.com/root-project/root/pull/8827,1,['ERROR'],['ERROR']
Availability,"PR-5324-mac1014-python3&date=2020-08-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93446/console).; ### Errors:; - [2020-08-20T17:26:40.736Z] FAILED: roofit/hs3/CMakeFiles/HS3.dir/src/RYMLParser.cxx.o ; - [2020-08-20T17:26:41.322Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/RYMLParser.cxx:5:10: fatal error: 'ryml.hpp' file not found ; - [2020-08-20T17:26:41.322Z] FAILED: roofit/hs3/CMakeFiles/HS3.dir/src/JSONFactories_RooFitCore.cxx.o ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:127:41: error: member reference type 'const std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' is not a pointer; did you mean to use '.'? ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:127:43: error: no member named 'GetName' in 'std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:129:32: error: member reference type 'const std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' is not a pointer; did you mean to use '.'? ; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONFactories_RooFitCore.cxx:129:34: error: no member named 'GetName' in 'std::__1::pair&lt;const std::__1::basic_string&lt;char&gt;, int&gt;' . ### Warnings:; - [2020-08-20T17:26:41.900Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/HistFactoryJSONTool.cxx:171:64: warning: unused parameter 'os' [-Wunused-parameter] ; - [2020-08-20T17:26:42.730Z] /build/jenkins/workspace/root-pullrequests-build/root/roofit/hs3/src/JSONParser.cxx:61:27: warning: 'get' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5324#issuecomment-677797697:1175,error,error,1175,https://root.cern,https://github.com/root-project/root/pull/5324#issuecomment-677797697,1,['error'],['error']
Availability,"PS: Speaking of this code, it seems very odd to me that in the case of `delgam < 0`, the `DavidonErrorUpdator` still tries to use the given input to update the Hesse matrix. That just seems like an obvious situation in which the error estimation is definitely not working and sure enough, directly after `delgam < 0`, I am used to getting `non-positive diagonal element in covariance matrix`-type warnings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11652#issuecomment-1299555531:229,error,error,229,https://root.cern,https://github.com/root-project/root/pull/11652#issuecomment-1299555531,1,['error'],['error']
Availability,"PS: The underlying problem may be that both a const and non-const access to the reference should be available. I haven't looked into this particular problem as much as you have, I'm just warning you about the things that seem problematic to me with the current approach.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384983455:100,avail,available,100,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384983455,1,['avail'],['available']
Availability,"PTXPrologEpilogPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PartiallyInlineLibCalls.cpp(186,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector(56,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-09-21T16:15:10.022Z] cl : command line error D8027: C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXGenericToNVVM.cpp : fatal error C1001: Internal compiler error. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(211,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\NewGVN.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-09-21T16:15:10.022Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/InitializePasses.h(162,54): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\APValue.cpp) [C:\build\workspace\r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11407#issuecomment-1253937552:3038,error,error,3038,https://root.cern,https://github.com/root-project/root/pull/11407#issuecomment-1253937552,1,['error'],['error']
Availability,"Parser_rdict.pcm, ../../lib/libXMLParser.rootmap, ../../lib/XMLParser.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TQObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TXMLParser.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TObject.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TString.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module root_std_complex.h resolved but not visible![5558/8175] Generating G__Net.cxx, ../../lib/libNet_rdict.pcm, ../../lib/libNet.rootmap, ../../lib/Net.pcm ; - Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module Rtypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module RRemoteProtocol.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TApplication.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TMD5.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TUrl.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBufferFile.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module MessageTypes.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TBits.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt;: Module TSysEvtHandler.h resolved but not visible!Error in &lt;TClingCallbacks::InclusionDirective&gt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-347255787:3471,Error,Error,3471,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-347255787,1,['Error'],['Error']
Availability,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8709:178,echo,echo,178,https://root.cern,https://github.com/root-project/root/pull/8709,4,"['echo', 'error']","['echo', 'error']"
Availability,"Partial revert: https://github.com/root-project/root/pull/12516. This PR causes errors, see https://github.com/root-project/cling/commit/782cc41a6c3c48c697cf4ae43c44d18ddaa46aa9#commitcomment-105357940",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12295#issuecomment-1477751751:80,error,errors,80,https://root.cern,https://github.com/root-project/root/pull/12295#issuecomment-1477751751,1,['error'],['errors']
Availability,Passes all the tests. Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11704#issuecomment-1347568526:22,Ping,Ping,22,https://root.cern,https://github.com/root-project/root/pull/11704#issuecomment-1347568526,1,['Ping'],['Ping']
Availability,"Passes.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/OpenMPKinds.def(303,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Analysis\ConstructionContext.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RegAllocPBQP.cpp(943,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/PointerUnion.h(205,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RenameIndependentSubregs.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ArrayRef.h(137,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\RegisterUsageInfo.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-13T07:52:15.959Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(3986,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SafeStackColoring.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11350#issuecomment-1245043134:3327,error,error,3327,https://root.cern,https://github.com/root-project/root/pull/11350#issuecomment-1245043134,1,['error'],['error']
Availability,Passing tests; * [ubu22](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.tmva.pymva/test/gtest_tmva_pymva_test_TestRModelParserPyTorch/); * [ubu20](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184278/testReport/projectroot.tmva.pymva/test/gtest_tmva_pymva_test_TestRModelParserPyTorch/). This should fix the visible errors in the Jenkins builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13613#issuecomment-1708257157:399,error,errors,399,https://root.cern,https://github.com/root-project/root/pull/13613#issuecomment-1708257157,1,['error'],['errors']
Availability,Patch removed; failure remains. Could you provide details of the ROOT source and build configuration you used in the Docker environment to test the `export std_config` removal?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398624677:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398624677,1,['failure'],['failure']
Availability,"Patch to handle template instantiation error recovery:; The current class SavePendingInstantiationsRAII ([L8109 -L8125](https://github.com/root-project/root/blob/a402af862ace9573193500bcccaa8b4d56cc6632/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h#L8109)) in clang/Sema.h which is called from cling/InterpreterParser.cpp [L920](https://github.com/root-project/root/blob/a402af862ace9573193500bcccaa8b4d56cc6632/interpreter/cling/lib/Interpreter/IncrementalParser.cpp#L920) can be replaced with the following patch in Sema.h; ```class PerformPendingInstantiationsRAII {; Sema &S;; public:; PerformPendingInstantiationsRAII(Sema &S): S(S) {} ;. ~PerformPendingInstantiationsRAII() {; S.PerformPendingInstantiations();; assert(S.PendingInstantiations.empty() &&; ""there shouldn't be any pending instantiations"");; }; };; ```; ; Change in InterpreterParser.cpp L902:; ```Sema::PerformPendingInstantiationsRAII PerformPendingInstantiations(S);```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145689988:39,error,error,39,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145689988,2,"['error', 'recover']","['error', 'recovery']"
Availability,"Pdf.h RooRealVar.h RooRealVarSharedProperties.h RooRecursiveFraction.h RooRefCountList.h RooSTLRefCountList.h RooResolutionModel.h RooScaledFunc.h RooSecondMoment.h RooSegmentedIntegrator1D.h RooSegmentedIntegrator2D.h RooSentinel.h RooSetPair.h RooSetProxy.h RooSharedProperties.h RooSharedPropertiesList.h RooSimGenContext.h RooSimPdfBuilder.h RooSimSplitGenContext.h RooSimultaneous.h RooSimWSTool.h RooStreamParser.h RooStringVar.h RooStudyManager.h RooStudyPackage.h RooSuperCategory.h RooTable.h RooTFoamBinding.h RooThresholdCategory.h RooTObjWrap.h RooTrace.h RooTreeData.h RooTreeDataStore.h RooTruthModel.h RooUniformBinning.h RooUnitTest.h RooVectorDataStore.h RooWorkspace.h RooWorkspaceHandle.h RooXYChi2Var.h RooHelpers.h RooSpan.h BatchData.h RooVDTHeaders.h /mnt/build/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/LinkDef.h ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:40:15: error: no member named 'exp' in namespace 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/include/RooVDTHeaders.h:44:15: error: no member named 'exp' in namespace 'std' ; - Error: /mnt/build/workspace/root-pullrequests-build/build/bin/rootcling: compilation failure (/mnt/build/workspace/root-pullrequests-build/build/lib/libRooFitCoreb2d9d7abc8_dictUmbrella.h) . ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:864 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4283#issuecomment-527491490:8280,error,error,8280,https://root.cern,https://github.com/root-project/root/pull/4283#issuecomment-527491490,1,['error'],['error']
Availability,"Per https://github.com/root-project/root/pull/2917#issuecomment-441813991 (and further), the 4 sets of failures are pre-existing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3046#issuecomment-441873583:103,failure,failures,103,https://root.cern,https://github.com/root-project/root/pull/3046#issuecomment-441873583,1,['failure'],['failures']
Availability,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:463,avail,available,463,https://root.cern,https://github.com/root-project/root/pull/8880,1,['avail'],['available']
Availability,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696817778:136,alive,alive,136,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696817778,1,['alive'],['alive']
Availability,"Perhaps even an `Error` would be appropriate instead of a `Warn`. The code still works, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762#issuecomment-739035566:17,Error,Error,17,https://root.cern,https://github.com/root-project/root/pull/6762#issuecomment-739035566,1,['Error'],['Error']
Availability,Perhaps it would be possible to throw up an error or warning when this type of issue is encountered? as it took me an embarrassingly long time to find the source of the segfault!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10965#issuecomment-1187635456:44,error,error,44,https://root.cern,https://github.com/root-project/root/issues/10965#issuecomment-1187635456,1,['error'],['error']
Availability,"Philippe,. I am not sure if I understand ""fallback"" correctly. But I tried two different experiments and get more solid analysis:; 1. I run ""TString::ReadFile(std::istream& strm)"" function in Stringio.cxx and parse a file (ifstream) as a input, it works fine. If I parse std::cin as input, it has the same problem as ROOT-7588 described. The reason is because in the function it uses ""strm.tellg()"" to manipulate the std::cin, which always return -1 and set failure flag.; 2. I run ""TString::ReadLine(std::istream& strm, Bool_t skipWhite)"" and ""TString::ReadString(std::istream& strm)"" in Stringio.cxx. I re-run the same kind of experiments as ROOT-7588. It works fine. These functions internally call ReadToDelim() which reserves memory for TString and read std::cin into TString memory buffer. I think this implementation is a smoother way rather than creating a temporary sstream to buffer std::cin. Anyway, I think we can either create a sstream to hold std::cin or find a new way to reserve a memory buffer for std::cin. . Does this answer the question of fallback you mentioned?. Regards,. Zhe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-166164032:458,failure,failure,458,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-166164032,1,['failure'],['failure']
Availability,"Phillipe just pushed last evening his read/write lock updates, so I'm going to rebase and push. However, I still see the crash after his changes when compiling and running the code below. ```cpp; #include <iostream>; #include <string>; #include <thread>; #include <vector>; #include ""TH1F.h""; #include ""TMemFile.h""; #include ""TROOT.h"". void test(int i); {; std::string name = ""test-"" + std::to_string(i);; TMemFile f(name.c_str(), ""create"");; TH1F h(""a"",""a"",60,0,10);; h.FillRandom(""gaus"");; f.Write();; }. int main(); {; auto nthreads = 100;; ROOT::EnableThreadSafety();; std::vector<std::thread> threads;. for (auto i = 0; i < nthreads; ++i); threads.emplace_back(test, i);. for (auto& thread : threads); thread.join();. return 0;; }; ```. I compile and run with; ```bash; $ g++ $(root-config --cflags --libs) test.cc; $ while [[ $? == 0 ]]; do echo -n .; ./a.out; done; ```. Note that the TMemFiles have different names and are created and destroyed in the same thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719#issuecomment-312199140:847,echo,echo,847,https://root.cern,https://github.com/root-project/root/pull/719#issuecomment-312199140,1,['echo'],['echo']
Availability,Ping,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310#issuecomment-1058093713:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/9310#issuecomment-1058093713,1,['Ping'],['Ping']
Availability,Ping - problem is still there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11190#issuecomment-1424415631:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/11190#issuecomment-1424415631,1,['Ping'],['Ping']
Availability,Ping :) it would be nice to fix this for v6.26,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-995975448:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-995975448,1,['Ping'],['Ping']
Availability,"Ping @Axel-Naumann - XrootD now have [musl c library support](https://github.com/xrootd/xrootd/pull/1908) support that may solve this issue, making it more feasible that Root may be buildable also on Alpine Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1435500562:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1435500562,1,['Ping'],['Ping']
Availability,"Ping @Axel-Naumann. Clearly I have nothing to do with these test failures, so what should I do next?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4688#issuecomment-565079915:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/4688#issuecomment-565079915,2,"['Ping', 'failure']","['Ping', 'failures']"
Availability,Ping @Teemperor @vgvassilev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1354#issuecomment-366981901:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/1354#issuecomment-366981901,1,['Ping'],['Ping']
Availability,Ping @lmoneta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3061#issuecomment-443162125:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/3061#issuecomment-443162125,1,['Ping'],['Ping']
Availability,Ping @lmoneta ? :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2132#issuecomment-396060390:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/2132#issuecomment-396060390,2,['Ping'],['Ping']
Availability,Ping @lmoneta. Any reason not to merge this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493#issuecomment-479960789:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/3493#issuecomment-479960789,1,['Ping'],['Ping']
Availability,Ping @lmoneta. Updated according to our discussion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705#issuecomment-316728953:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/705#issuecomment-316728953,1,['Ping'],['Ping']
Availability,Ping what? I reviewed 8 days ago.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/767#issuecomment-318620270:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/767#issuecomment-318620270,1,['Ping'],['Ping']
Availability,Ping.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/606#issuecomment-330846690:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/606#issuecomment-330846690,3,['Ping'],['Ping']
Availability,"Ping. Fedora 32 is released now, which uses gcc 10. So this needs to be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159#issuecomment-625721628:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/5159#issuecomment-625721628,1,['Ping'],['Ping']
Availability,Ping. What's the fate of this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1407684426:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1407684426,1,['Ping'],['Ping']
Availability,Ping... Shall we close that one?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1007#issuecomment-342619382:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/1007#issuecomment-342619382,1,['Ping'],['Ping']
Availability,Ping...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609#issuecomment-725975118:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/6609#issuecomment-725975118,1,['Ping'],['Ping']
Availability,Ping?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3434#issuecomment-480750686:0,Ping,Ping,0,https://root.cern,https://github.com/root-project/root/pull/3434#issuecomment-480750686,1,['Ping'],['Ping']
Availability,"Pinging @amadio in case this is specific to the early packaging of 6.30.00 on Gentoo (but I believe it is not, without looking to deeply, though).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1814941966:0,Ping,Pinging,0,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1814941966,1,['Ping'],['Pinging']
Availability,Pinging because I think 6.30 is coming and it would be nice to have this change in the API,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13642#issuecomment-1744899783:0,Ping,Pinging,0,https://root.cern,https://github.com/root-project/root/pull/13642#issuecomment-1744899783,1,['Ping'],['Pinging']
Availability,Pinging other interested parties @aalkin @jgrosseo @pzhristov.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11853#issuecomment-1341780754:0,Ping,Pinging,0,https://root.cern,https://github.com/root-project/root/issues/11853#issuecomment-1341780754,1,['Ping'],['Pinging']
Availability,Please always add comment explaining why it's alright to ignore the build error (usually because it was checked they pre-existing) and/or merging before the PR builds are finished (you probably need to note explicit which platform worked and which one are still pending). Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3709#issuecomment-484268660:74,error,error,74,https://root.cern,https://github.com/root-project/root/pull/3709#issuecomment-484268660,1,['error'],['error']
Availability,"Please note that I don't touch any existing code, just add some scripts which are independent from the rest, so the CI failures are not related to my changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999#issuecomment-2003990426:119,failure,failures,119,https://root.cern,https://github.com/root-project/root/pull/14999#issuecomment-2003990426,1,['failure'],['failures']
Availability,"Please rebase your commits on top of master, rather than having merge commits. (This will also improve the check failures.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13066#issuecomment-1665396333:113,failure,failures,113,https://root.cern,https://github.com/root-project/root/pull/13066#issuecomment-1665396333,1,['failure'],['failures']
Availability,Please recover `SrvAuthenticate` from libSrvAuth library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:7,recover,recover,7,https://root.cern,https://github.com/root-project/root/issues/13387,1,['recover'],['recover']
Availability,"Please see a proof of what I say :. minimum program : minimal.C. ```; #include <RooCategory.h>. int minimal(); {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13; cat.defineType(mystring,1);. //next line is line 16; cat.defineType(mystring.c_str(),1);. return 0;; }; ```; Then just do :; ```; [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+; ------------------------------------------------------------; | Welcome to ROOT 6.18/00 https://root.cern |; | (c) 1995-2019, The ROOT Team |; | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |; | From tag v6-18-00, 25 June 2019 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------. root [0]; Processing minimal.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so; In file included from input_line_12:6:; ././minimal.C:13:5: error: no matching member function for call to 'defineType'; cat.defineType(mystring,1);; ~~~~^~~~~~~~~~; /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument; Bool_t defineType(const char* label, Int_t index) ;; ^; /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided; Bool_t defineType(const char* label) ;; ^; Error in <ACLiC>: Dictionary generation failed!. -->so the correct type is not a string : it is a char *.; (indeed the compilation complains for line 13, but not for line 16); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6625#issuecomment-708453687:1068,error,error,1068,https://root.cern,https://github.com/root-project/root/issues/6625#issuecomment-708453687,2,"['Error', 'error']","['Error', 'error']"
Availability,"PlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:239:54: error: ‘void TMVA::efficienciesMulticlass1vsRest(TString, TString, TMVA::EEfficiencyPlotType, Bool_t)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:243:71: error: ‘plotEfficienciesMulticlass1vsRest’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:254:115: error: ‘void TMVA::plotEfficienciesMulticlass1vsRest(TString, TMVA::EEfficiencyPlotType, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:279:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:298:67: error: ‘void TMVA::efficienciesMulticlass1vs1(TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:332:94: error: ‘void TMVA::plotEfficienciesMulticlass1vs1(TString, TString, TString)’ should have been declared inside ‘TMVA’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:353:100: error: no matching function for call to ‘TMVA::EfficiencyPlotWrapper::EfficiencyPlotWrapper(TString&, TString&, TString&, size_t)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmvagui/src/efficienciesMulticlass.cxx:365:75: error: cannot convert ‘std::map&lt;TString, EfficiencyPlotWrapper*&gt;::mapped_type {aka EfficiencyPlotWrapper*}’ to ‘TMVA::EfficiencyPlotWrapper*’ in initialization ; - /usr/include/c++/4.8/bits/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707#issuecomment-311796846:1194,error,error,1194,https://root.cern,https://github.com/root-project/root/pull/707#issuecomment-311796846,1,['error'],['error']
Availability,Plus fix error with TCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4498:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/4498,1,['error'],['error']
Availability,"PoissonLogL.cxx:70:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::PoissonLogL&lt;double&gt;::Eval(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, int, bool, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluatePoissonLogL.cxx:255:8: error: template-id ‘EvalBinPdf&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::PoissonLogL&lt;double&gt;::EvalBinPdf(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int, double*)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluatePoissonLogL.cxx:361:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::PoissonLogL&lt;double&gt;::EvalGradient(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluateChi2.cxx:51:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::Eval(const IModelFunction&, const ROOT::Fit::BinData&, const double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluateChi2.cxx:228:8: error: template-id ‘EvalEffective&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalEffective(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int&)’ does not match any template declaration ; - /mnt/build/workspace/root-pullrequests-build/root/math/mathcore/src/EvaluateChi2.cxx:336:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::Chi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2690#issuecomment-424709808:1830,error,error,1830,https://root.cern,https://github.com/root-project/root/pull/2690#issuecomment-424709808,1,['error'],['error']
Availability,"Ported from Cppyy patch by @wlav :`; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff. Adds an iterator for using declarations to `TClingMethodInfo`. it should make redundant the pythonisations that add the method overloads from a base class to the derived class that uses them:; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/PyROOT/src/PyzPythonHelpers.cxx#L113. Instead of relying on pythonisations for specific classes, this PR adds the necessary logic to have this functionality solved in a generic way in the bindings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3640:199,redundant,redundant,199,https://root.cern,https://github.com/root-project/root/pull/3640,1,['redundant'],['redundant']
Availability,Possible fix to error and warning when using ROOT in pytest tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/3595,1,['error'],['error']
Availability,"Possible reason for the problem, in Cling (also Clang) some headers are included automatically at startup to simplify the operation. In the case of CUDA, the order of the headers is really important because CUDA has to annotate the `stl` functions to be available on CPU and GPU (e.g. `int std::abs(int n)` -> `__device__ __host__ std::abs(int n))`. If the order is not correct, various things can happen (no GPU version available, redefinition errors, error messages that have nothing to do with the actual problem ...). A good starting point for bug hunting is to compare the startup process of vanilla cling and ROOT cling.; * A good starting point for Cling the is the function [`CIFactory::createCIImpl()`](https://github.com/root-project/root/blob/de3514c2a88f653584108d2be64e28f50a2b29da/interpreter/cling/lib/Interpreter/CIFactory.cpp#L1214); * In ROOT, some extra headers are injected (before?) in the [TCling](https://github.com/root-project/root/blob/a56901942dfefa6e7e2e7df397a60c9d1cda31a0/core/metacling/src/TCling.cxx#L1327) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518#issuecomment-808738232:254,avail,available,254,https://root.cern,https://github.com/root-project/root/issues/7518#issuecomment-808738232,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"Potentially related failure on macbeta: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/3525/testReport/junit/projectroot.roottest.python/stl/roottest_python_stl_stl/. ```; ../../../../roottest/python/stl/PyROOT_stltests.py .....Fatal Python error: Segmentation fault. Current thread 0x00007ff851579c80 (most recent call first):; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/python.py"", line 1789 in runtest; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 167 in pytest_runtest_call; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_callers.py"", line 39 in _multicall; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_manager.py"", line 80 in _hookexec; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_hooks.py"", line 265 in __call__; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 260 in <lambda>; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 339 in from_call; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 259 in call_runtest_hook; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 220 in call_and_report; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 131 in runtestprotocol; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/_pytest/runner.py"", line 112 in pytest_runtest_protocol; File ""/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pluggy/_callers.py"", line 39 in _multicall; File ""/Library/Frameworks/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874#issuecomment-1590689514:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/issues/12874#issuecomment-1590689514,3,"['error', 'failure', 'fault']","['error', 'failure', 'fault']"
Availability,Pre-existing errors.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9121#issuecomment-944092070:13,error,errors,13,https://root.cern,https://github.com/root-project/root/pull/9121#issuecomment-944092070,1,['error'],['errors']
Availability,Preexisting failures.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9085#issuecomment-938525483:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/9085#issuecomment-938525483,1,['failure'],['failures']
Availability,"Pretty sure that failures are unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6072#issuecomment-664383715:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/6072#issuecomment-664383715,1,['failure'],['failures']
Availability,Prevent Access of deleted object during hadd tear down,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021:50,down,down,50,https://root.cern,https://github.com/root-project/root/pull/9021,1,['down'],['down']
Availability,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021:595,down,down,595,https://root.cern,https://github.com/root-project/root/pull/9021,3,['down'],['down']
Availability,"Prevent numpy from being imported every time the pythonizor function is registered, and instead do it lazily and with an error check if the pythonized method is actually invoked.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5096:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/5096,1,['error'],['error']
Availability,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13742:79,failure,failures,79,https://root.cern,https://github.com/root-project/root/pull/13742,2,"['FAILURE', 'failure']","['FAILURES', 'failures']"
Availability,"Prevent the following error when running the test with VS 2022 v17.9.0:; ```; 779: Processing C:/root-dev/git/master/tutorials/multicore/mt201_parallelHistoFill.C...; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { ?_Swap@?$_Ptr_base@VTH1F@@@std@@IEAAXAEAV12@@Z,; [...]; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-9 }) }; 779: cling JIT session error: Failed to materialize symbols: { (main, { ?mt201_parallelHistoFill@@YAHXZ }) }; 779: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 779: error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14783:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/14783,4,"['Error', 'error']","['Error', 'error']"
Availability,Prevent this kind of error when using ACLiC:; LINK : fatal error LNK1181: it is not possible to open input file 'VCRUNTIME140.lib',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4439:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/4439,2,['error'],['error']
Availability,"Prevent wild over-read when reading badly clustered file.; ; In some cases where the memory available to the TTreeCache can not fit the entirety; of (potentially odd-shaped) cluster, the TTreeCache could end up with a situation; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:92,avail,available,92,https://root.cern,https://github.com/root-project/root/pull/1778,1,['avail'],['available']
Availability,Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16548:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/16548,1,['failure'],['failures']
Availability,"Previous failures were expected (could not find Davix 0.6.4, because externals has version 0.6.2 only, which fails tests).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1766#issuecomment-374956840:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/1766#issuecomment-374956840,1,['failure'],['failures']
Availability,"Previously all the dataset information was stored in the thread-local; TTreeViews, causing data duplication between threads and requiring; that TTreeProcessorMT queries it when it needs part of it.; Now TTreeProcessorMT stores all the dataset information (tree name,; filenames, friend names, friend file names, entry list) as constant; thread-global data which is passed down to TTreeView::GetTreeReader.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2157:372,down,down,372,https://root.cern,https://github.com/root-project/root/pull/2157,1,['down'],['down']
Availability,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705:105,error,error,105,https://root.cern,https://github.com/root-project/root/pull/7705,2,['error'],['error']
Availability,"Previously the checks that the type of the readerValue and the leaf (part of a leaflist) was susceptible to the; 'difference' between '[U]Long64_t' and '[unsigned] long long'. The previous check did not account for TDictionary::GetDictionary returning 'typedef' information. So instead rely on the numerical/enum version of the type. This addresses https://root-forum.cern.ch/t/issues-with-automatically-constructed-makeselector/37033; and https://root-forum.cern.ch/t/how-to-read-unsigned-long-using-ttreereader/21850. *Br 0 :SelectOpHitBkgInfo : deltat0/D:deltat/D:t0/D:te/D:tabs/D:PEs/D: *; * | event/l:run/l:subRun/l:chan/l:bar/l. TTreeReaderValue<ULong64_t> event = {fReader, ""SelectOpHitBkgInfo.event""};. was leading to. Error in <TTreeReaderValueBase::CreateProxy()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4670:727,Error,Error,727,https://root.cern,https://github.com/root-project/root/pull/4670,1,['Error'],['Error']
Availability,Previously the handling was inconsistent resulting in mis-matches; and thus memory errors. This fixes ROOT-10526.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4841:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/4841,1,['error'],['errors']
Availability,"Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap.; ; To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2684:178,error,error,178,https://root.cern,https://github.com/root-project/root/pull/2684,1,['error'],['error']
Availability,"Previously, it tried to use the clear method which does not exist. Corresponding unit tests are available on this branch:. https://github.com/bbockelm/roottest/tree/makeproject_bitset. @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61:96,avail,available,96,https://root.cern,https://github.com/root-project/root/pull/61,1,['avail'],['available']
Availability,"Primary changes proposed; - avoiding char to TString to char conversions; - avoid redundant call to xmlEngine().hasattr(node,att) checking instead for null ptr from getattr.; - Add specialization of void TMVA::Tools::ReadAttr( void* node, const char* attrname, T& value ) for float,int, short. [which seem to be the ones we use aside from bool, which now is the biggest contributor to ReadAttr* timing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/584:82,redundant,redundant,82,https://root.cern,https://github.com/root-project/root/pull/584,1,['redundant'],['redundant']
Availability,"Print info before inserting a value in the vector (therefore invalidating the iterator). This fixes a debug assertion failure ""can't dereference invalidated vector iterator"", as explained [in the standard](https://en.cppreference.com/w/cpp/container/vector/insert):; > Causes reallocation if the new size() is greater than the old capacity(). If the new size() is greater than capacity(), all iterators and references are invalidated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13328:118,failure,failure,118,https://root.cern,https://github.com/root-project/root/pull/13328,1,['failure'],['failure']
Availability,Print instructive error message if builtin_llvm=off,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1509:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/1509,1,['error'],['error']
Availability,"Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found.; This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899; for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5446:224,error,error,224,https://root.cern,https://github.com/root-project/root/pull/5446,1,['error'],['error']
Availability,"Probably due to historical reasons, the Minuit2 code uses several systems to report errors, warnings, and debug info. Some of these only work when certain compile flags are set (WARNINGMSG and DEBUG). I would like to unify these systems and use the MnPrint facilities consistently everywhere. This would have the advantage that debug info can be turned on at any time without recompiling and it has additional advantages for frontends to Minuit2, like [iminuit](https://github.com/scikit-hep/iminuit). I would like to work on this, but need some feedback before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:84,error,errors,84,https://root.cern,https://github.com/root-project/root/issues/6421,2,['error'],['errors']
Availability,"Probably the previous ROOT installation was clashing with the new one you downloaded through conda, glad that you can now run the example :+1: Can this issue be closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1142104360:74,down,downloaded,74,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1142104360,1,['down'],['downloaded']
Availability,Probably there are two spurious failures in the CI. LGTM after formatting!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15372#issuecomment-2203620261:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/15372#issuecomment-2203620261,1,['failure'],['failures']
Availability,"Probably, but I'm a bit confused about the error message: Why would Cling output MSVC style error messages?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2082084564:43,error,error,43,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2082084564,2,['error'],['error']
Availability,Problem is not only labels offset itself in the axis. ; It is very small - just 0.005 and therefore labels are very close to axis.; And ROOT adds extra offset to labels that they not touching axis line even when `offset == 0`.; I have to add such extras to web graphic. . But main problem was significant difference in labels size for X axis.; Only now I found that `TGaxis` scale down labels size by factor 0.66666 - for custom labels.; This was not handled by web canvas. ; Once it is there - position and size of X axis labels will be ok.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13719#issuecomment-1737555150:381,down,down,381,https://root.cern,https://github.com/root-project/root/issues/13719#issuecomment-1737555150,1,['down'],['down']
Availability,"Progress (@oshadura ). When doing the request ""does that file exist (and do I need to follow a redirect) in; ```; #0 Davix::NEONRequest::negotiateRequest (this=0x555557146380, err=0x7fffffff90d0); at $ROOTSYS/builtins/davix/DAVIX-prefix/src/DAVIX/src/neon/neonrequest.cpp:425; ```; with; ```; (gdb) p *_req; $42 = {; method = 0x55555822e440 ""HEAD"",; uri = 0x55555822e460 ""/iml-wg/tmvatutorials/master/inputdata.root"",; headers = 0x55555822e420,; ```; v6.22 has:; ```; $44 = {; data = 0x555557bb6180 ""User-Agent: ROOT/6.22/09 TDavixFile/0.2.0 davix/0.7.5 neon/0.0.29\r\nKeep-Alive: \r\nConnection: Keep-Alive\r\nTE: trailers\r\nHost: raw.githubusercontent.com\r\n"",; ```; while v6.24 has:; ```; (gdb) p *_req->headers; $48 = {; data = 0x555556bfa160 ""User-Agent: ROOT/6.24/01 TDavixFile/0.2.0 davix/0.7.5 neon/0.0.29\r\nKeep-Alive: \r\nConnection: Keep-Alive\r\nTE: trailers\r\nHost: raw.githubusercontent.com\r\nAuthorization: Bearer \r\n"",; ```; I.e. adding `Authorization: Bearer` seems to break this. I can reproduce this with. ```; curl -v -H 'Authorization: Bearer' https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; ```; giving 404, while not passing `-H` makes the redirect work. That's it from my side, more news from @oshadura after vCHEP!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155#issuecomment-843327087:574,Alive,Alive,574,https://root.cern,https://github.com/root-project/root/issues/8155#issuecomment-843327087,4,['Alive'],['Alive']
Availability,Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3746:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/3746,1,['error'],['error']
Availability,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408:145,error,error,145,https://root.cern,https://github.com/root-project/root/pull/5408,2,"['Ping', 'error']","['Ping', 'error']"
Availability,"Protecting all interpreter call with another guard results rather reliably in a deadlock, remove the respective commit again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-685361255:66,reliab,reliably,66,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-685361255,1,['reliab'],['reliably']
Availability,"Provide assign operator for the point_t class which have copy constructor; Fixes compilation error when trying to compile with cxxmodules=ON,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5812:93,error,error,93,https://root.cern,https://github.com/root-project/root/pull/5812,1,['error'],['error']
Availability,Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/278:130,error,error,130,https://root.cern,https://github.com/root-project/root/pull/278,1,['error'],['error']
Availability,"Proxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:2486,error,error,2486,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,"Pull request:\r\n\r\nFixes compilation error with gcc 13.\r\n\r\n## Changes or fixes:\r\n~~~\r\nIn file included from .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.cxx:1: .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:40:24: error: 'uint32_t' does not name a type\r\n 40 | namespace SG { typedef uint32_t sgkey_t; }\r\n | ^~~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:6:1: note: 'uint32_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\n 5 | #include &lt;vector&gt;\r\n +++ |+#include &lt;cstdint&gt;\r\n 6 |\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: error: 'uint8_t' does not name a type\r\n 43 | uint8_t m_nbits, m_nmantissa;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: note: 'uint8_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: error: 'uint8_t' does not name a type\r\n 45 | uint8_t m_flags;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: note: 'uint8_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:46:8: error: 'sgkey_t' in namespace 'SG' does not name a type\r\n 46 | SG::sgkey_t m_sgkey = 123;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: error: 'uint8_t' does not name a type\r\n 47 | const uint8_t c_uint = 10;\r\n | ^~~~~~~\r\n.../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: note: 'uint8_t' is defined in header '&lt;cstdint&gt;'; did you forget to '#include &lt;cstdint&gt;'?\r\ngmake[2]: *** [tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/build.make:79: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/CustomStruct.cxx.o] Error 1\r\ngmake[2]: Leaving directory '.../root-6.26.10/redhat-linux-build'\r\ngmake[1]: *** [CMakeFiles/Makefile2:53506: tree/ntuple/v7/test/CMakeFiles/Cus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12065#issuecomment-1397621703:1244,error,error,1244,https://root.cern,https://github.com/root-project/root/pull/12065#issuecomment-1397621703,2,['error'],['error']
Availability,"Putting something like this in TCling and calling it in the TCling ctor should do:; ```cpp; static bool IsSymbolVisibilityHidden() {; static const std::string libClingLocation = FindLibraryName(&IsFromRootCling());; auto ObjF = llvm::object::ObjectFile::createObjectFile(ROOT::TMetaUtils::GetRealPath(libClingLocation));; if (!ObjF) {; Warn(""TCling__IsSymbolVisibilityHidden"",; ""Failed to read object file %s"", libClingLocation.c_str());; return false;; }. llvm::object::ObjectFile *BinObjFile = ObjF.get().getBinary();. for (const auto &S : BinObjFile->symbols()) {; #ifdef NDEBUG; if (S.getFlags() & llvm::object::SymbolRef::SF_Hidden); return true;; else; Error(""TCling__IsSymbolVisibilityHidden"",; ""Symbol %s is exported. Please compile LLVM with -fvisibility=hidden!\n"", S.getName().data() );; return false;; #else // debug; // In debug mode we make sure all symbols are hidden.; if (!(S.getFlags() & llvm::object::SymbolRef::SF_Hidden)) {; Error(""TCling__IsSymbolVisibilityHidden"",; ""Symbol %s is exported. Please compile LLVM with -fvisibility=hidden!\n"", S.getName().data() );; return false;; }; #endif // NDEBUG; }; return true;; }. ```. Needless to say that I did not compile this code. It may need some adjustments... :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-572032639:659,Error,Error,659,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-572032639,2,['Error'],['Error']
Availability,"Python 3 was 6.22.2, Python 2.7 used 6.22.0. (Python 2.7 isn't supported in conda-forge any more and I rarely make the effort to rebuild the py2k branch.). I've stopped looking now as I think you're in a much better position than me to make sense of what the issue is but ping me if I can be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467#issuecomment-702627726:272,ping,ping,272,https://root.cern,https://github.com/root-project/root/issues/6467#issuecomment-702627726,1,['ping'],['ping']
Availability,Python 3.11 failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/issues/10799,1,['failure'],['failures']
Availability,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/151#issuecomment-248958581:271,avail,available,271,https://root.cern,https://github.com/root-project/root/pull/151#issuecomment-248958581,1,['avail'],['available']
Availability,"R-5643-windows10-cxx14&date=2020-06-04).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85048/console).; ### Errors:; - [2020-06-04T11:49:50.479Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\PyROOTStrings.h(16,10): fatal error C1083: Cannot open include file: 'DllImport.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:51.481Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\PyROOTStrings.cxx(13,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:52.132Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\TMemoryRegulator.h(37,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:52.769Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\RPyROOTApplication.cxx(14,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:53.122Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\GenericPyz.cxx(14,10): fatal error C1083: Cannot open include file: 'CPyCppyy.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\bindings\pyroot\pythonizations\ROOTPythonizations3_8.vcxproj] ; - [2020-06-04T11:49:53.433Z] C:\build\workspace\root-pullrequests-build\root\bindings\pyroot\pythonizations\src\RVecPyz.cxx(12,10): fatal error C108",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-638801289:1192,error,error,1192,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-638801289,1,['error'],['error']
Availability,"RANLUX++ is an LCG equivalent of RANLUX using 576 bit numbers. Described in; A. Sibidanov, *A revision of the subtract-with-borrow random numbergenerators*,; *Computer Physics Communications*, 221(2017), 299-303,; preprint https://arxiv.org/pdf/1705.03123.pdf. The code is loosely based on the Assembly implementation by A. Sibidanov; available at https://github.com/sibidanov/ranluxpp/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6794:335,avail,available,335,https://root.cern,https://github.com/root-project/root/pull/6794,1,['avail'],['available']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437110:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437110,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:2380,error,error,2380,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553440181:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553440181,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:2497,error,error,2497,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553486787:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553486787,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:2380,error,error,2380,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553491495:2326,error,error,2326,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553491495,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:2380,error,error,2380,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,1,['error'],['error']
Availability,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:2212,error,error,2212,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,1,['error'],['error']
Availability,"RDF is crashing when asking for type of aliased columns.; Here is a small reproducer:; ```; root [0] // We create an empty data frame of 100 entries; root [1] ROOT::RDataFrame df(100);; root [2] gRandom->SetSeed(1);; root [3] auto df_1 = df.Define(""rnd"", []() { return gRandom->Gaus(); });; root [4] auto df_2=df_1.Alias(""rnd2"", ""rnd""); (ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void> &) @0x7faf7b7c2098; root [5] std::cout<<df_2.GetColumnType(""rnd"")<<std::endl;; double; root [6] std::cout<<df_2.GetColumnType(""rnd2"")<<std::endl;; Error in <TRint::HandleTermInput()>: std::out_of_range caught: map::at; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7058:546,Error,Error,546,https://root.cern,https://github.com/root-project/root/issues/7058,1,['Error'],['Error']
Availability,"RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>).; In order for the handy implicit conversion from RResultPtr<T> to; RResultHandle to be available for client code that include; RDFHelpers.hxx, it is not enough that this header forward-declares; RResultHandle, but it needs to transitively provide the whole type; declaration. In practice, before 8bbd543f3d56, this worked fine:. ```; ...; RunGraphs({resultptr1, resultptr2});; ```. while after that commit it would require an extra `#include; <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11248:161,avail,available,161,https://root.cern,https://github.com/root-project/root/pull/11248,1,['avail'],['available']
Availability,RDataFrame and CreatePoxy/TTreeReaderValue error for selection on string branch in Filter method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:43,error,error,43,https://root.cern,https://github.com/root-project/root/issues/7169,1,['error'],['error']
Availability,RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11051:41,error,error,41,https://root.cern,https://github.com/root-project/root/issues/11051,1,['error'],['error']
Availability,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8901:70,error,error,70,https://root.cern,https://github.com/root-project/root/issues/8901,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"RNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2084,avail,available,2084,https://root.cern,https://github.com/root-project/root/issues/6421,1,['avail'],['available']
Availability,"RNTuple, parallel unzip tear down race condition",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:29,down,down,29,https://root.cern,https://github.com/root-project/root/issues/7076,1,['down'],['down']
Availability,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:12304,Error,Error,12304,https://root.cern,https://github.com/root-project/root/issues/12427,2,"['Error', 'error']","['Error', 'error']"
Availability,"ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```; void test_crash(){; using namespace RooFit;; Int_t to_gen = 10;; RooRealVar m(""m"",""m"",5000,5500);; RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);; RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);; RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);; exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));; }; ```. Here I fit to a dataset of 10 events and it causes the following . ```; ...; NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY; **********; ** 6 **MIGRAD 500 1; **********; FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; std::length_error what(): '; what(): what(): vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'; '; what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert; terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '; what(): what(): vector::_M_fill_insert; vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_er",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9406:855,RELIAB,RELIABILITY,855,https://root.cern,https://github.com/root-project/root/issues/9406,1,['RELIAB'],['RELIABILITY']
Availability,ROOT 6.28.00 fails on aarch64: cling JIT session error: Failed to materialize symbols,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12294:49,error,error,49,https://root.cern,https://github.com/root-project/root/issues/12294,1,['error'],['error']
Availability,ROOT Version: v6-22-02; Platform: CentOS 7; Compiler: gcc 8.3 c++17. ```; [ 80%] Built target GenVector; In file included from input_line_16:3:; /home/annie/Documents/root-6.22.02/build/include/ROOT/RAxis.hxx:57:4: error: exception specification of explicitly defaulted default constructor does not match the calculated one; RAxisBase() noexcept = default;; ^; Error: /home/annie/Documents/root-6.22.02/build/bin/rootcling: compilation failure (/home/annie/Documents/root-6.22.02/build/lib/libROOTHist93b0963531_dictUmbrella.h); make[2]: *** [hist/histv7/CMakeFiles/G__ROOTHist.dir/build.make:108: hist/histv7/G__ROOTHist.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:22334: hist/histv7/CMakeFiles/G__ROOTHist.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6731:215,error,error,215,https://root.cern,https://github.com/root-project/root/issues/6731,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"ROOT batch mode is now automatically web batch mode. Means no web browser starting, no web server running. There is the only exception - when on Linux `DISPLAY` variable not set, ROOT will set batch mode (`fBatchMode = kTRUE`); but `fWebDisplayBatch = kFALSE`. In this case all web widgets remain fully normal and will start interactive. Any call to `gROOT->SetBatch(kTRUE)` also disables interactivity for web widgets. All web widgets (RBrowser, TWebCanvas, RWebWindow in general) will not start browser when `gROOT->IsWebDisplayBatch()` is true. Should fix problems with running many graphics-related tutorials. Small fix in TGX11. ; While TRint.cxx directly calls `gVirtualX->SetKeyAutoRepeat(kTRUE)`, prevent crashing; when display is not available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11836:743,avail,available,743,https://root.cern,https://github.com/root-project/root/pull/11836,1,['avail'],['available']
Availability,"ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```; /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]; ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5419:81,error,errors,81,https://root.cern,https://github.com/root-project/root/pull/5419,2,['error'],"['error', 'errors']"
Availability,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. 1. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. 2. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup. This PR depends on #1394",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1396:738,avail,available,738,https://root.cern,https://github.com/root-project/root/pull/1396,1,['avail'],['available']
Availability,ROOT crashes with no helpful error messages if a TApplication is not present and tree->StartViewer() is called,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:29,error,error,29,https://root.cern,https://github.com/root-project/root/issues/6743,1,['error'],['error']
Availability,"ROOT failed to build for aarch64, the build error is; ```; Processing hsimple.C...; cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }; ninja: build stopped: subcommand failed.; error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build); ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696#issuecomment-2326544365:44,error,error,44,https://root.cern,https://github.com/root-project/root/pull/15696#issuecomment-2326544365,3,['error'],['error']
Availability,"ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:152,error,error,152,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,ROOT failed to build with error MSB8066 with MSVC on Windows arm64ec and how to disable run clang-tblgen.exe and llvm-tblgen.exe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:26,error,error,26,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"ROOT failed to build with error MSB8066 with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? I think these errors are due to the clang-tblgen.exe and llvm-tblgen.exe being ran. How to disable run these two exes. Thanks in advance. Versions and configuration; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.20). **Repro steps:**; 1. Open a VS 2019 x64 Native Tools Command Prompt; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone hhttps://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec_a && cd build_arm64ec_a; 6. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:26,error,error,26,https://root.cern,https://github.com/root-project/root/issues/11881,2,['error'],"['error', 'errors']"
Availability,"ROOT has several features which interact with libraries and require implicit header inclusion. This can be triggered by reading or writing data on disk, or user actions at the prompt. Often, the headers are immutable and reparsing is redundant. C++ Modules are designed to minimize the reparsing of the same header content by providing an efficient on-disk representation of C++ Code. More information about the C++ modules technology can be found at README/README.CXXMODULES.md. This undertaking was successful due to the efforts of many people. Especially, Raphael Isemann (@Teemperor), Oksana Shadura(@oshadura) and Yuka Takahashi (@yamaguchi1024). We are grateful to Liz Sexton-Kennedy, Peter Elmer (@pelmer), Brian Bockelman(@bbockelm) and Ken Bloom for putting (wo)manpower into the project and supporting it. This work has been supported by an Intel Parallel Computing Center grant, by U.S.National Science Foundation grants PHY-1450377, ACI-1450323 and PHY-1624356, and by the U.S. Department of Energy, Office of Science. Special thanks to Axel Naumann (@Axel-Naumann) and Philippe Canal (@pcanal) for helping and supporting the technical efforts over the years. We are thankful to Shahzad Malik Muzaffar (@smuzaffar), David Lange (@davidlange6) and Mircho Rodozov (@mrodozov) from the CMSSW development team, CERN/EP-SFT and the ROOT team.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4395:234,redundant,redundant,234,https://root.cern,https://github.com/root-project/root/pull/4395,1,['redundant'],['redundant']
Availability,ROOT master based CMSSW releases also show the same resulsts:; - https://github.com/cms-sw/cmsdist/pull/6778#issuecomment-811474459 without #7752 . There is no hanging at build time but we see runtime crashes (https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-46d8cb/13898/runTheMatrix-results/1001.0_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5/step3_RunMinBias2011A+RunMinBias2011A+TIER0EXP+ALCAEXP+ALCAHARVDSIPIXELCALRUN1+ALCAHARVD1+ALCAHARVD2+ALCAHARVD3+ALCAHARVD4+ALCAHARVD5.log); - https://github.com/cms-sw/root/pull/152#issuecomment-811584967 with #7752 . No build or runtime errors but there are comparison differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811655818:690,error,errors,690,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811655818,1,['error'],['errors']
Availability,ROOT won't compile because of changes in the Python 3 API together with; GCC 6.1 release. The code changes fixes the issues on my machine running; Arch Linux (except for an error in Python 3.5 numpy/__multiarray_api.h),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/173:173,error,error,173,https://root.cern,https://github.com/root-project/root/pull/173,1,['error'],['error']
Availability,ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5228-windows10-cxx14&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77296/console).; ### Errors:; - [2020-04-20T15:49:12.732Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\datasource_more.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_pages.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\rtensor-utils.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_report.vcxproj] ; - [2020-04-20T15:49:13.386Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_splitcoll_arrayview.vcxproj] ; - [2020-04-20T15:49:14.722Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\graf2d\gpadv7\test\graf2dgpadv7testUnit.vcxproj] ; - [2020-04-20T15:49:15.305Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\v7\test\ntuple_raw.vcxproj] ; - [2020-04-20T15:49:15.305Z] LINK : fatal error LNK1181: cannot open,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228#issuecomment-616642888:1076,error,error,1076,https://root.cern,https://github.com/root-project/root/pull/5228#issuecomment-616642888,1,['error'],['error']
Availability,ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5228-windows10-cxx14&date=2020-04-23).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/78145/console).; ### Errors:; - [2020-04-23T15:34:53.547Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj] ; - [2020-04-23T15:34:53.830Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\graf2d\gpadv7\test\graf2dgpadv7testUnit.vcxproj] ; - [2020-04-23T15:34:53.830Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\branchlessForest.vcxproj] ; - [2020-04-23T15:34:54.836Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\io\io\test\RRawFile.vcxproj] ; - [2020-04-23T15:34:54.836Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_entrylist.vcxproj] ; - [2020-04-23T15:34:55.136Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\tmva\tmva\test\envelope\TMVA-Classification.vcxproj] ; - [2020-04-23T15:34:55.136Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\googletest-prefix\src\googletest-build\lib\\gtest.lib' [C:\build\workspace\root-pullrequests-build\build\core\imt\test\coreimttestUnit.vcxproj] ; - [2020-04-23T15:34:55.877Z] LINK : fatal error LNK1181: cannot open input file '..\..\..\go,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228#issuecomment-618470572:1135,error,error,1135,https://root.cern,https://github.com/root-project/root/pull/5228#issuecomment-618470572,1,['error'],['error']
Availability,"ROOT's approach of turning `find_package` to a no-op was based on the [talk](https://youtu.be/bsXLMQ6WgIk) ""Effective CMake"". It only works with subprojects of ROOT (i.e. LLVM) if we override `find_package` without renaming it, otherwise LLVM will not use the builtin zlib, for example, when that's enabled. I don't think ROOT is at fault here for relying on this feature of CMake.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-897450593:333,fault,fault,333,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-897450593,1,['fault'],['fault']
Availability,"ROOT-HEAD fails with ""cling interactive line includer >>>: fatal error: module file '[snip]/Vc.pcm' not found: module file not found""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:65,error,error,65,https://root.cern,https://github.com/root-project/root/issues/14964,1,['error'],['error']
Availability,ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15087:21,error,error,21,https://root.cern,https://github.com/root-project/root/issues/15087,1,['error'],['error']
Availability,ROOT-fedora31/noimt. has an odd error:; ```; 12:03:08 1220/1286 Test #1269: roottest-root-tree-cache-TestCache ................................................................***Failed 3.75 sec; 12:03:08 Start 1277: roottest-root-tree-cloning-treeCloneTest; 12:03:09 1221/1286 Test #1271: roottest-root-tree-cache-TooSmall ................................................................. Passed 3.05 sec; 12:03:09 Start 1278: roottest-root-tree-cloning-runtreeCloneTest2; 12:04:16 1222/1286 Test #1278: roottest-root-tree-cloning-runtreeCloneTest2 ............fatal: No rebase in progress?; 12:04:16 From http://root.cern/git/root; 12:04:16 * branch master -> FETCH_HEAD; 12:04:16 Switched to branch 'master'; 12:04:16 Cannot find file: /build/workspace/root-pullrequests-build/build/Testing/20200916-1638/Test.xml; 12:04:16 Problems when submitting via HTTP; ```; i.e. it seems like another build was started before the end of this one and wrote to the same log file !?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-693542821:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-693542821,1,['error'],['error']
Availability,ROOT.TFile:: corrupt data content (TTree) not signaled/no error thrown,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154:58,error,error,58,https://root.cern,https://github.com/root-project/root/issues/9154,1,['error'],['error']
Availability,"ROOT::Fit::BinData&, const double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateChi2.cxx:228:8: error: template-id ‘EvalEffective&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalEffective(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int&)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateChi2.cxx:336:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalGradient(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateChi2.cxx:539:8: error: template-id ‘EvalResidual&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::Chi2&lt;double&gt;::EvalResidual(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::BinData&, const double*, unsigned int, double*)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateLogL.cxx:104:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::LogL&lt;double&gt;::Eval(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::UnBinData&, const double*, int, bool, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluateLogL.cxx:314:6: error: template-id ‘EvalGradient&lt;&gt;’ for ‘void ROOT::Fit::FitUtil::LogL&lt;double&gt;::EvalGradient(ROOT::Fit::FitUtil::IModelFunctionTempl&lt;double&gt;&, const ROOT::Fit::UnBinData&, const double*, double*, unsigned int&, ROOT::Fit::ExecutionPolicy, unsigned int)’ does not match any template declaration ; - ../root/math/mathcore/src/EvaluatePoissonLogL.cxx:70:8: error: template-id ‘Eval&lt;&gt;’ for ‘double ROOT::Fit::FitUtil::PoissonLogL&lt;do",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2690#issuecomment-424710024:1180,error,error,1180,https://root.cern,https://github.com/root-project/root/pull/2690#issuecomment-424710024,2,['error'],['error']
Availability,ROOT::Math::IMultiGenFunctionTempl&lt;double&gt;’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/build/include/Math/IFunctionfwd.h:38:42: error: conflicting declaration ‘typedef using IBaseFunctionMultiDim = class ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt; ROOT::Math::IMultiGenFunction’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:24:7: error: conflicting declaration ‘struct RooMinimizer’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:30:7: error: conflicting declaration ‘struct RooFit::TestStatistics::RooAbsL’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:31:8: error: conflicting declaration ‘struct RooFit::TestStatistics::WrapperCalculationCleanFlags’ ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:46: error: ‘RooAbsL’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:37:53: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:46: error: ‘WrapperCalculationCleanFlags’ was not declared in this scope ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit/TestStatistics/LikelihoodGradientWrapper.h:38:74: error: template argument 1 is invalid ; - [2023-01-06T12:13:57.553Z] /data/sftnight/workspace/root-pullrequests-build/root/roofit/roofitcore/inc/RooFit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11981#issuecomment-1373555060:1384,error,error,1384,https://root.cern,https://github.com/root-project/root/pull/11981#issuecomment-1373555060,1,['error'],['error']
Availability,"ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzE4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; /usr/local/bin/ld: error: CMakeFiles/G__GenVector32.dir/G__GenVector32.cxx.o: multiple definition of 'ROOT::GenerateInitInstance(ROOT::Math::PxPyPzM4D<double> const*)'; /usr/local/bin/ld: CMakeFiles/G__GenVector.dir/G__GenVector.cxx.o: previous definition here; collect2: error: ld returned 1 exit status; math/genvector/CMakeFiles/GenVector.dir/build.make:363: recipe for target 'lib/libGenVector.so' failed; make[2]: *** [lib/libGenVector.so] Error 1; CMakeFiles/Makefile2:41978: recipe for target 'math/genvector/CMakeFiles/GenVector.dir/all' failed; make[1]: *** [math/genvector/CMakeFiles/GenVector.dir/all] Error 2; Makefile:165: recipe for target 'all' failed; ```. </details>. > So, so far, my best guess (because I don't understand 'what' it really does) is that [45c0f48](https://github.com/root-project/root/commit/45c0f48f3c3c631d291e0a7a32fd1ba292e79160) has the side effect of destroying/replacing the partial desugaring.; > ; > I would have expected the change to be much closer to part that generate the (partial) output for this kind of type/value and/or to be an extension in the partial desugaring routines.; > ; > (As a side note, I have a vague memory that we already solved a similar problem in the past but can not find (yet?) the solution (if any) in the repositor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1136423157:24551,error,error,24551,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1136423157,1,['error'],['error']
Availability,"ROOT::R::Label is a synonym of Rcpp::_. We should just bind to it, instead of; introducing a new variable causing redundant deserialization from the C++ module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4409:114,redundant,redundant,114,https://root.cern,https://github.com/root-project/root/pull/4409,1,['redundant'],['redundant']
Availability,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2634,error,error,2634,https://root.cern,https://github.com/root-project/root/pull/11153,4,['error'],['error']
Availability,"ROOT::TThreadExecutor::Map(F,unsigned int)': could not deduce template argument for 'Cond' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: [ [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: _Ty=std::result_of&lt;F(void)&gt;::type [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2783: ] [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: 'std::vector&lt;std::result_of&lt;F(INTEGER)&gt;::type,std::allocator&lt;_Ty&gt;&gt; ROOT::TExecutor&lt;ROOT::TThreadExecutor&gt;::Map(F,std::initializer_list&lt;T&gt;)': could not deduce template argument for 'std::initializer_list&lt;T&gt;' from 'int' [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] ; - [2020-08-28T16:48:03.393Z] C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\dataframe_concurrency.cxx(208,31): error C2784: with [C:\build\workspace\root-pullrequests-build\build\tree\dataframe\test\dataframe_concurrency.vcxproj] . And 7 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266#issuecomment-682883281:2706,error,error,2706,https://root.cern,https://github.com/root-project/root/pull/6266#issuecomment-682883281,3,['error'],['error']
Availability,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12469:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/12469,11,"['Error', 'Failure', 'error', 'failure']","['Error', 'Failure', 'error', 'failure']"
Availability,"ROOT; CMake Error at interpreter/cling/CMakeLists.txt:196 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules.idx ---; *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build; 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build; --- CMakeFiles/modules_idx.dir/all ---; *** [CMakeFiles/modules_idx.di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:1257,error,errors,1257,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,1,['error'],['errors']
Availability,ROOT_HEAD failed with error message: Fail to detect cryptographic random generator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:22,error,error,22,https://root.cern,https://github.com/root-project/root/issues/14958,1,['error'],['error']
Availability,"RSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; ```. LXPLUS7:; ```; ROOT Version: 6.24/08; Built for linuxx8664gcc on Sep 29 2022, 13:04:57; From tags/v6-24-08@v6-24-08; ```. LXPLUS8:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. LXPLUS9:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. <!--; 1. ROOT version; 2. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:3201,down,download,3201,https://root.cern,https://github.com/root-project/root/issues/11977,1,['down'],['download']
Availability,"RScanner iterates over all decls in our AST, but with modules we; have hidden decl from unimported submodules in our AST. As we; call Sema functions on these decls which use the normal clang; lookup that respects visibility, we suddenly get mysterious; lookup failures from inside Sema when running rootcling. This patch restricts RScanner to looking at visible decls, which; restores the original behavior where RScanner onlys sees visible decls; from included headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/915:260,failure,failures,260,https://root.cern,https://github.com/root-project/root/pull/915,1,['failure'],['failures']
Availability,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:1543,error,error,1543,https://root.cern,https://github.com/root-project/root/issues/8281,4,"['Error', 'error']","['Error', 'error']"
Availability,"RTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:73:28: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:73:42: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:85:8: error: unknown type name 'size_t'; size_t fLength{0};; ^; /home/root-build/include/ROOT/RStringView.hxx:88:47: error: unknown type name 'size_t'; explicit TStringView(const char *cstr, size_t len) : fData(cstr), fLength(len) {}; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/TClassEdit.h:29:10: note: submodule of top-level module 'std' implicitly imported here; #include <cxxabi.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:10263,error,error,10263,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"RWebWindow uses credit-based data transport. ; Default number of credits was always 10 and can be too small.; Now this default value can be changed via ""WebGui.ConnCredits"" variable. In WebEve checks amount of available credits to suppress highlight operations - main source of small packets send to server.; Let avoid situation when such small packets over-flood communication channel. Latest JSROOT code with better organization how TCanvas and TFrame painters provided when required.; Previous implementation was not adequate, while cannot take into account that object may be drawn on TCanvas or on RCanvas. Now it clearly stated in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6920:210,avail,available,210,https://root.cern,https://github.com/root-project/root/pull/6920,1,['avail'],['available']
Availability,"R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~~~~~~; In file included from /opt/root_bld/include/TObject.h:17,; from /opt/root_bld/include/TNamed.h:25,; from /opt/root_bld/include/TDictionary.h:44,; from /opt/root_bld/include/TClass.h:23,; from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:; /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ~ ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’; class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }; ^~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’; static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));; ^~~~~~~~~~~; /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:; /home/ferdym/Documents/Fís",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837#issuecomment-731577667:18480,error,error,18480,https://root.cern,https://github.com/root-project/root/issues/6837#issuecomment-731577667,1,['error'],['error']
Availability,RangeFloat_FromONNX.hxx:18:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:19:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:27:21: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:29:7: error: ‘tensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:32:7: error: ‘fTensor_Y’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:16: error: ‘other’ was not declared in this scope ; - [2024-02-16T17:51:05.902Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/RangeFloat_FromONNX.hxx:34:21: error: template argument 1 is invalid . And 16 more. ### Warnings:; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:420:9: warning: unused variable ‘op_0_transA’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:421:9: warning: unused variable ‘op_0_transB’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:422:8: warning: unused variable ‘op_0_m’ [-Wunused-variable] ; - [2024-02-16T17:51:05.899Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tmva/sofie/test/Linear_16_FromONNX.hxx:423:8: warning: unused variable ‘op_0_n’ [-Wunused-variable] ;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413#issuecomment-1948984768:1879,error,error,1879,https://root.cern,https://github.com/root-project/root/pull/14413#issuecomment-1948984768,1,['error'],['error']
Availability,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3904:59,error,error,59,https://root.cern,https://github.com/root-project/root/pull/3904,1,['error'],['error']
Availability,Re-download all Clad patches from GitHub,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12892:3,down,download,3,https://root.cern,https://github.com/root-project/root/pull/12892,1,['down'],['download']
Availability,Re-opening [this PR](https://github.com/root-project/root/pull/15578) to check if the clad failures were real.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15588:91,failure,failures,91,https://root.cern,https://github.com/root-project/root/pull/15588,1,['failure'],['failures']
Availability,"Re-opening the issue following further discussion. The linked PR is still valid as it documents the current state of the implementation, so that doesn't need to be changed. An investigation into finding a tolerance that can account for different (orders of magnitude of) weights is the next step for this issue. Since it was not foreseen in the PoW for 2024, we cannot give an ETA at this moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2047239798:205,toler,tolerance,205,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2047239798,1,['toler'],['tolerance']
Availability,Re-running ROOT-performance-centos7-multicore/default makes it work (i.e. the failures:; ```; projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_32; projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execReadTmplt_build; ```; are random/unstable.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-630421567:78,failure,failures,78,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-630421567,1,['failure'],['failures']
Availability,Re-running mac1015/cxx17 makes it work. i.e the failure ; ```; 11:06:30 [ 71%] Building CXX object io/io/CMakeFiles/RIO.dir/v7/src/RFile.cxx.o; 14:48:26 Cancelling nested steps due to timeout; 14:48:26 Could not connect to macphsft20 to send interrupt signal to process; ```; was transient.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-630506499:48,failure,failure,48,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-630506499,1,['failure'],['failure']
Availability,"Reading `RVecs` with `RNTuple` incurs in an off-by-one-byte error, because all `RVec<T>` are deserialized as `std::vector<char>`, but the position of the data buffer is different for `RVecs`:. ```; >>> p ((ROOT::VecOps::RVec<int>*)0x5555596c72a0)->data(); $983 = (int *) 0x5555581b2918; >>> p ((std::vector<char, std::allocator<char> > *)0x5555596c72a0)->data(); $984 = 0x5555581b2910; ```. I think the problematic logic is [here](https://github.com/root-project/root/blob/8d5b55f51ad8449d83fc0db8f49217e556c34036/tree/ntuple/v7/src/RField.cxx#L660). A second issue related to RVecs is that at RField.cxx:638 we use RVectorField for reading RVecs, but this means that the parent RField will have type name `std::vector<...>` even if it should (probably?) be `RVec<...>`. #6336 contains a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347:60,error,error,60,https://root.cern,https://github.com/root-project/root/issues/6347,1,['error'],['error']
Availability,"ReadsStd17 (1073 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesTL; 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms); 76: [----------] 88 tests from RWLock (169985 ms total); 76: ; 76: [----------] 10 tests from TThreadedObject; 76: [ RUN ] TThreadedObject.CreateAndDestroy; 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms); 76: [ RUN ] TThreadedObject.Get; 76: [ OK ] TThreadedObject.Get (8 ms); 76: [ RUN ] TThreadedObject.GetAtSlot; 76: [ OK ] TThreadedObject.GetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked; 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotRaw; 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms); 76: [ RUN ] TThreadedObject.SetAtSlot; 76: [ OK ] TThreadedObject.SetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.Merge; 76: [ OK ] TThreadedObject.Merge (128 ms); 76: [ RUN ] TThreadedObject.SnapshotMerge; 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms); 76: [ RUN ] TThreadedObject.GrowSlots; 76: [ OK ] TThreadedObject.GrowSlots (1 ms); 76: [ RUN ] TThreadedObject.GetNSlots; 76: [ OK ] TThreadedObject.GetNSlots (1 ms); 76: [----------] 10 tests from TThreadedObject (139 ms total); 76: ; 76: [----------] Global test environment tear-down; 76: [==========] 104 tests from 3 test suites ran. (170981 ms total); 76: [ PASSED ] 104 tests.; 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:; gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:12053,down,down,12053,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['down'],['down']
Availability,"Ready for review, only one spurious CI failure that I restarted",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16101#issuecomment-2249862449:39,failure,failure,39,https://root.cern,https://github.com/root-project/root/pull/16101#issuecomment-2249862449,1,['failure'],['failure']
Availability,"Rebase PR #1396. Original PR comment:; ""ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697:772,avail,available,772,https://root.cern,https://github.com/root-project/root/pull/1697,1,['avail'],['available']
Availability,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-994498821:50,redundant,redundant,50,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-994498821,1,['redundant'],['redundant']
Availability,"Rebased due to commit f237213f79718d083fe2ad0ef17de0b114a20e19 which increased the allowed tolerance a bit to fix the mac arm build. However, that increase is not sufficient for ix86 and the tolerance must be increased further to not fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12390#issuecomment-1547918959:91,toler,tolerance,91,https://root.cern,https://github.com/root-project/root/pull/12390#issuecomment-1547918959,2,['toler'],['tolerance']
Availability,"Rebased on https://github.com/root-project/root/pull/11940 branch (it was more convenient to leave it based on that after all, I tried taking the commit out, but it needed too many changes) and fixed the build error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11941#issuecomment-1361190797:210,error,error,210,https://root.cern,https://github.com/root-project/root/pull/11941#issuecomment-1361190797,1,['error'],['error']
Availability,Rebased on top of master. Failure on macos14 is because of the known xml2 issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15404#issuecomment-2094746197:26,Failure,Failure,26,https://root.cern,https://github.com/root-project/root/pull/15404#issuecomment-2094746197,1,['Failure'],['Failure']
Availability,Rebased to hopefully avoid the previously remaining test failure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631#issuecomment-1480146242:57,failure,failure,57,https://root.cern,https://github.com/root-project/root/pull/11631#issuecomment-1480146242,1,['failure'],['failure']
Availability,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3898#issuecomment-498800284:34,failure,failure,34,https://root.cern,https://github.com/root-project/root/pull/3898#issuecomment-498800284,1,['failure'],['failure']
Availability,"Rebuilding just on Windows. The `errx()` function used before is not available, replaced it with `perror()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2720#issuecomment-425738548:69,avail,available,69,https://root.cern,https://github.com/root-project/root/pull/2720#issuecomment-425738548,1,['avail'],['available']
Availability,"Recent llvm versions use llvm::Error as a facility for error handling. It includes an ErrorInfoBase class which has virtual methods (with a pinned vtable in the object file). This makes it harder to include headers that use transitively include llvm/Support/Error.h crossing rtti/no-rtti worlds (that is llvm is compiled with -fno-rtti and TCling and friends with -frtti). Newer llvm versions have a lot of usage of llvm::Error in its header files and it is practically impossible to solve this problem by avoiding the headers that use ErrorInfoBase. There are two other alternatives. First we can outline the functions in Error.h which use ErrorInfoBase but then we will hit other things like RTTIRoot which also needs special treatment. Secondly, we can enable llvm's RTTI builds for ROOT and this is what this patch does.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10289:31,Error,Error,31,https://root.cern,https://github.com/root-project/root/pull/10289,8,"['Error', 'error']","['Error', 'ErrorInfoBase', 'error']"
Availability,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/12561,1,['failure'],['failures']
Availability,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741508230:282,avail,available,282,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741508230,1,['avail'],['available']
Availability,Reduce precision errors for Mean and StdDev #7395,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9546:17,error,errors,17,https://root.cern,https://github.com/root-project/root/pull/9546,1,['error'],['errors']
Availability,Refactored modulemaps to fix ODR errors when using modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/876:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/876,1,['error'],['errors']
Availability,"Regarding `roottest-python-pickle-read`:. ```; Start 1437: roottest-python-pickle-read; 14/20 Test #1437: roottest-python-pickle-read ........................***Failed 1.36 sec; -- TEST COMMAND -- ; cd /srv/root/build/roottest/python/pickle; /usr/bin/timeout -s USR2 270s /usr/bin/python /srv/root/src/roottest/python/pickle/PyROOT_readtests.py --fixcling; -- BEGIN TEST OUTPUT --; Test reference counting of pickled object ... ok; Test that a TBufferFile can be pickled ... ok; Test serialization of the ROOT Python module. ... ERROR; Test reading of a histogram from a pickle file ... ok; Test reading of an std::vector<double> from a pickle file ... ok; Test reading of a user-defined object from a pickle file ... ok; Test reading of a ROOT object in a namespace from a pickle file ... ok; Test reading PyROOT custom types ... ok; [ROOT-10810] Test reading a RooDataSet with weights ... ok. ======================================================================; ERROR: Test serialization of the ROOT Python module.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/roottest/python/pickle/PyROOT_readtests.py"", line 177, in test3PickleFacadeCheck; facade = pickle.loads(pickle.dumps(get_root_facade())); TypeError: cannot pickle 'ROOTFacade' object; ```. This piece of the pickle test was added by @vepadulano yesterday, it must have failed because your ROOT installation was not updated with the corresponding fix in PyROOT (also merged by @vepadulano yesterday).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823938499:529,ERROR,ERROR,529,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823938499,2,['ERROR'],['ERROR']
Availability,"Regarding points 2. and 3.: When creating a target machine, LLVM 9 now has a parameter `bool JIT`. This should do the right thing and it does for AArch64 (automatically selecting `CodeModel::Large`), but not for PPC :cry: We need that for the reasons mentioned in the comment around the assert (really, any JIT needs it on these architectures). So I think manually setting the model as done in https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d is the right approach (while we might think about making upstream LLVM do the right thing in the long term). @ellert could you provide some details on the segmentation fault that you see with that commit? Is it maybe crashing during instruction selection or JIT relocation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-843822156:641,fault,fault,641,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-843822156,1,['fault'],['fault']
Availability,Regarding that test failure: I think this is due to #7395.; @guitargeek . You can probably hotfix it by reducing the precision of that check (although 1% accuracy of a mean is already pretty bad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-793653127:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-793653127,1,['failure'],['failure']
Availability,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```; cmake .. \; -Dalien=OFF -Dcuda=ON \; -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \; -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \; -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread!; ```. Here the error:. ```; /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory; #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h""; ^; compilation terminated.; CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):; Error generating; /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1; make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; make: *** [all] Error 2; ```. And now here the verbose make output (stdout grep 'nvcc'):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include; ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```; /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/283#issuecomment-257136223:316,error,error,316,https://root.cern,https://github.com/root-project/root/pull/283#issuecomment-257136223,6,"['Error', 'error']","['Error', 'error']"
Availability,"Regarding the RNTuple failures, one issue is the endianness (big-endian), which is addressed in #10402",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409#issuecomment-1104800290:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/issues/10409#issuecomment-1104800290,1,['failure'],['failures']
Availability,Regarding the failing test on mac: mac just imports stuff ... i'll track down whether it's us or pulled in by the system.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5285#issuecomment-608328080:73,down,down,73,https://root.cern,https://github.com/root-project/root/pull/5285#issuecomment-608328080,1,['down'],['down']
Availability,"Regarding the titular issue, I have been thinking about it for a bit and I don't think we can do much better than what @pieterdavid already implemented. Solutions considered:. 1. Implicitly converting `TClonesArrays` to `RVecs` would be a) backward-incompatible and b) a silent perf degradation, as it requires a copy. Moreover, if we did this I don't see a migration path that doesn't require that users revise all their TClonesArrays-related logic; 2. Adding a `TClonesArrays2RVec` helper function: it would require a copy (or it would have to return a clunky `RVec<T*>`). It is also trivial to implement for users that need it and don't mind the downsides.; 3. Adding a RDF toggle to tweak ""read TClonesArrays as RVecs"" or not: requires adding a bunch of extra logic to the column-reading mechanism for a feature that might end up being mostly unused (modern data models don't use TClonesArrays), and it would require the extra copy (i.e. silent performance degradation). The best seems to be 3, but feature toggles complicate internals and are typically not easy to discover (might end up mostly unused). It seems simpler to ask users to explicitly do the conversion in a `Redefine` if they need/want to. Sorry I could not come up with something nice :confused: . I will close this in a few days unless people have something against it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644#issuecomment-883552286:649,down,downsides,649,https://root.cern,https://github.com/root-project/root/issues/8644#issuecomment-883552286,1,['down'],['downsides']
Availability,"Registrering the thread-local gDirectory with the gROOT (which is special TDirectory) allows to keep the; shared_pointer alive until gROOT is destructed. Technically we would only need to keep around the one associated with the main thread. Thread local; storage (and hence the original shared_ptr for the thread local gDirectory) is destructed; (even for the thread local associated with the main thread) before the static storage is destructed.; So prior to this commit, the main thread's gDirectory shared pointer was destructed before; the start of the TROOT destructor and then TDirectory::CleanTargets when using explicitly; 'gDirectory' was reading deleted memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12090:121,alive,alive,121,https://root.cern,https://github.com/root-project/root/pull/12090,1,['alive'],['alive']
Availability,Relevant discussion regarding this other error at https://mattermost.web.cern.ch/root/pl/cbnhe83bm7dxdmssom6ne416sw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7311#issuecomment-1071104162:41,error,error,41,https://root.cern,https://github.com/root-project/root/issues/7311#issuecomment-1071104162,1,['error'],['error']
Availability,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5845:239,Error,Error,239,https://root.cern,https://github.com/root-project/root/pull/5845,3,['Error'],['Error']
Availability,Remaining warnings and errors coming from eve7 and will be fixed with next PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3470#issuecomment-467479089:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/3470#issuecomment-467479089,1,['error'],['errors']
Availability,"Remotely related to this PR, could remove the redundant `#include ""RooCintUtils.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1714#issuecomment-371549314:46,redundant,redundant,46,https://root.cern,https://github.com/root-project/root/pull/1714#issuecomment-371549314,1,['redundant'],['redundant']
Availability,"Remove ""l"" from ""ar clq"" command while there is no extra library; linked to libAfterImage.a. ; Fixing build error on latest OpenSUSE.; Most probably caused by latest `ar`:; ```; % ar --version; GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1; Copyright (C) 2021 Free Software Foundation, Inc.; This program is free software; you may redistribute it under the terms of; the GNU General Public License version 3 or (at your option) any later version.; This program has absolutely no warranty.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7346:108,error,error,108,https://root.cern,https://github.com/root-project/root/pull/7346,1,['error'],['error']
Availability,Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of; web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8586:92,ping,ping,92,https://root.cern,https://github.com/root-project/root/pull/8586,1,['ping'],['ping']
Availability,"Remove `#include <cassert>` from `TGeoExtension.h` and move it to the `TGeoExtension.cxx` source file, fixing a potential crash of JupyROOT when running on a machine with a different version of the Windows SDK than the one used to build ROOT, as described in the Github issue #14302 and as shown below. The issue comes from this code in `JupyROOT\helpers\utils.py`:; ```; def GetGeometryDrawer():; if not hasattr(ROOT,'gGeoManager'): return; if not ROOT.gGeoManager: return; if not ROOT.gGeoManager.GetUserPaintVolume(): return; vol = ROOT.gGeoManager.GetTopVolume(); if vol:; return NotebookDrawer(vol); ```; triggering the autoloading of libGeom, leading to this error:; ```; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:260:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:665,error,error,665,https://root.cern,https://github.com/root-project/root/pull/14335,2,['error'],['error']
Availability,Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. ; These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5417:169,mask,mask,169,https://root.cern,https://github.com/root-project/root/pull/5417,1,['mask'],['mask']
Availability,Remove all redundant header guards around #include directives,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/341:11,redundant,redundant,11,https://root.cern,https://github.com/root-project/root/pull/341,1,['redundant'],['redundant']
Availability,Remove extra redundant tensorboard Option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5936:13,redundant,redundant,13,https://root.cern,https://github.com/root-project/root/pull/5936,1,['redundant'],['redundant']
Availability,Remove extra single quote in error message to avoid confusion what the actual class name is.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10099:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/10099,1,['error'],['error']
Availability,Remove redundant RooCintUtils.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1720:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/1720,1,['redundant'],['redundant']
Availability,Remove redundant checks in TThreadExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/361:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/361,1,['redundant'],['redundant']
Availability,Remove redundant includes from http/webgui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5045:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/5045,1,['redundant'],['redundant']
Availability,Remove redundant null pointer check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/249:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/249,1,['redundant'],['redundant']
Availability,Remove redundant null pointer checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/260:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/260,1,['redundant'],['redundant']
Availability,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900:1617,Failure,Failure,1617,https://root.cern,https://github.com/root-project/root/pull/15900,1,['Failure'],['Failure']
Availability,Remove sysroot arg when writing modules to fix assertion failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/519:57,failure,failure,57,https://root.cern,https://github.com/root-project/root/pull/519,1,['failure'],['failure']
Availability,Remove the redundant dependencies from the target. This fixes a cxxmodules; nightly builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1741:11,redundant,redundant,11,https://root.cern,https://github.com/root-project/root/pull/1741,1,['redundant'],['redundant']
Availability,"Remove the work-around for the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug, which is now fixed in more recent versions of Visual Studio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4474:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/4474,1,['error'],['error']
Availability,Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3333:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/3333,1,['failure'],['failure']
Availability,Remove work around for a compiler error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4474:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/4474,1,['error'],['error']
Availability,Remove wrong and redundant null pointer check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/248:17,redundant,redundant,17,https://root.cern,https://github.com/root-project/root/pull/248,1,['redundant'],['redundant']
Availability,RemovePoint did not remove the errors in TGraph2DErrors.; This was reported here: https://sft.its.cern.ch/jira/browse/ROOT-10695,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5461:31,error,errors,31,https://root.cern,https://github.com/root-project/root/pull/5461,1,['error'],['errors']
Availability,Removed redundant -fmodule-map-file= compilation flag.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/551:8,redundant,redundant,8,https://root.cern,https://github.com/root-project/root/pull/551,1,['redundant'],['redundant']
Availability,"Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11772:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/11772,1,['error'],['error']
Availability,"Renormalize fitted parameters error when using the option ""W"" in TH1::Fit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5114:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/5114,1,['error'],['error']
Availability,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5114:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/5114,5,['error'],"['error', 'errors']"
Availability,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616#issuecomment-2215375377:80,failure,failures,80,https://root.cern,https://github.com/root-project/root/pull/15616#issuecomment-2215375377,2,['failure'],['failures']
Availability,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:; https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf.; > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet; > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-1265533557:556,alive,alive,556,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-1265533557,2,['alive'],['alive']
Availability,Replace direct floating point comparison with `AreEqualRel()` comparison with a tolerance.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/505:80,toler,tolerance,80,https://root.cern,https://github.com/root-project/root/pull/505,1,['toler'],['tolerance']
Availability,"Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %.; The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3380:654,failure,failures,654,https://root.cern,https://github.com/root-project/root/pull/3380,1,['failure'],['failures']
Availability,Report failure for missing symbols!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1868:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/1868,1,['failure'],['failure']
Availability,"Reported by ALICE:. ```; G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}; ^; G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8499:97,error,error,97,https://root.cern,https://github.com/root-project/root/issues/8499,2,['error'],['error']
Availability,Reported here:. https://root-forum.cern.ch/t/gdml-import-error-due-to-comment-at-end-of-file/27671. Can be also applied for 6.12 and 6.10 branches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1548:57,error,error-due-to-comment-at-end-of-file,57,https://root.cern,https://github.com/root-project/root/pull/1548,1,['error'],['error-due-to-comment-at-end-of-file']
Availability,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7162:355,Error,Error,355,https://root.cern,https://github.com/root-project/root/issues/7162,2,"['Error', 'error']","['Error', 'error']"
Availability,"Reproducer:. ```; python; >>> import ROOT; >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""); 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1""; ```. Should be like in C++:; ```c++; root [1] RooFit::Minos(1).getSet(0); (const RooArgSet *) nullptr; ```. The function has overloads like this:; ```; RooCmdArg Minos(bool);; RooCmdArg Minos(RooArgSet const&);; ```; The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16573:880,fault,faulty,880,https://root.cern,https://github.com/root-project/root/issues/16573,1,['fault'],['faulty']
Availability,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11215:171,Error,Error,171,https://root.cern,https://github.com/root-project/root/issues/11215,2,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <Math/Vector3D.h>; #include <ROOT/RDataFrame.hxx>; #include <vector>; #include <TClass.h>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; ROOT::Math::XYZVector x(1, 2, 3);; std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};; t.Branch(""x"", &x);; // original line:; // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem!; // Actual trigger:; auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem!; t.Fill();; t.Write();; }. TFile f(""f.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");; r.Next();; *rx;; }; ```; yields:. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>; Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()?; ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10423:695,Error,Error,695,https://root.cern,https://github.com/root-project/root/issues/10423,2,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <cstdlib>. int main(); {; auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");; ROOT::RDF::SaveGraph(df, ""out.dot"");; std::system(""dot -Tpng out.dot > out.png"");; }; ```. yields:. ```; Error: not well-formed (invalid token) in line 1; ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ...; in label of node 1; ```. `out.dot` has the following contents:. ```dot; digraph {; 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot; digraph {; 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11173:334,Error,Error,334,https://root.cern,https://github.com/root-project/root/issues/11173,1,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; ROOT::RDataFrame(10); .Define(""x"", [] { return 42; }); .Snapshot<int>(""t"", ""thefile"", {""x""});; std::cout << ""done writing\n"";. ROOT::EnableImplicitMT();; ROOT::RDataFrame(""t"", ""thefile"").Max<int>(""x"").GetValue();. return 0;; }. ```. prints. ```; done writing; Error in <TFile::TFile>: file /tmp/thefile/t does not exist; Warning in <TTreeReader::SetEntryBase()>: There was an issue opening the last file associated to the TChain being processed.; ```. This is likely due to logic in `TChain::AddFile` that expects a `.root` extension to be present in order to distinguish `/path/to/file.root/treename` from just `/path/to/file.root` (over the network or via xrootd it's difficult/expensive to figure out which case we are in otherwise). ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/getting-value-from-tbranch-is-extremely-slow/45950",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8739:348,Error,Error,348,https://root.cern,https://github.com/root-project/root/issues/8739,1,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";; ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);; auto *td = f->Get<TTree>(""testd/testt"");; auto rdftd = ROOT::RDataFrame(*td);; auto htd = rdftd.Histo1D<ULong64_t>(""e"");; std::cout << htd->GetMean() << '\n';; }; ```; yields:. ```; terminate called after throwing an instance of 'std::runtime_error'; what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root""; ```; i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10216:600,error,error,600,https://root.cern,https://github.com/root-project/root/issues/10216,1,['error'],['error']
Availability,"Reproducer:. ```cpp; #include <TFile.h>; #include <TTreeReader.h>. int main() {; {; TFile f(""f16.root"", ""recreate"");; TTree t(""t"", ""t"");; float x = 42.f;; t.Branch(""x"", &x, ""x/f"");; t.Fill();; f.Write();; }. {; TFile f(""f16.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<Float16_t> rv(r, ""x"");; r.Next();; }; }; ```. produces. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10645:336,Error,Error,336,https://root.cern,https://github.com/root-project/root/issues/10645,1,['Error'],['Error']
Availability,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14022:88,error,error,88,https://root.cern,https://github.com/root-project/root/pull/14022,1,['error'],['error']
Availability,Resolve error: call to virtual function in destructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4275:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/4275,1,['error'],['error']
Availability,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7645:58,error,errors,58,https://root.cern,https://github.com/root-project/root/pull/7645,4,['error'],"['error', 'errors']"
Availability,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13633:349,recover,recovering,349,https://root.cern,https://github.com/root-project/root/pull/13633,1,['recover'],['recovering']
Availability,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7702:289,Down,Downside,289,https://root.cern,https://github.com/root-project/root/issues/7702,2,['Down'],['Downside']
Availability,"Revert ""Force the caching of file / dir lookup failures (ROOT-6865).""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/894:47,failure,failures,47,https://root.cern,https://github.com/root-project/root/pull/894,1,['failure'],['failures']
Availability,"Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to; the actual std::tuple implementation to be attempted (and failing) to be used; for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3982:152,repair,repairs,152,https://root.cern,https://github.com/root-project/root/pull/3982,1,['repair'],['repairs']
Availability,"Revert ""[rootcling] Treat warnings coming from ROOT as errors.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6142:55,error,errors,55,https://root.cern,https://github.com/root-project/root/pull/6142,1,['error'],['errors']
Availability,"Reverts root-project/root#2130:; ```; /mnt/build/jenkins/workspace/lcg_personal_experimental/BUILDTYPE/Release/COMPILER/clang600binutils/LABEL/centos7/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/newdelete/src/NewDelete.cxx:214:7: error: exception specification in declaration does not match previous declaration; void *operator new(size_t /*size*/, std::align_val_t /*al*/) throw(); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220:230,error,error,230,https://root.cern,https://github.com/root-project/root/pull/2220,1,['error'],['error']
Availability,"Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9267:38,failure,failures,38,https://root.cern,https://github.com/root-project/root/pull/9267,1,['failure'],['failures']
Availability,"Right - @smuzaffar was quite clear that we should separate build failures from test failures. But we now fail for build failures, too, so maybe including test failures in the failed state makes sense? Anyway, just pinging @smuzaffar for his recommendation + arguments before we decide what to do here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542423864:65,failure,failures,65,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542423864,5,"['failure', 'ping']","['failures', 'pinging']"
Availability,"Right - we've been there before, and the only way to invoke a `Decl` reliably is to generate the appropriate AST instead of generating source code. What I meant is: ""The above approach is more likely to pass roottest and existing usage patterns than this PR (which fails roottest)."" Thanks for pointing out the test case again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/614#issuecomment-307013529:69,reliab,reliably,69,https://root.cern,https://github.com/root-project/root/pull/614#issuecomment-307013529,1,['reliab'],['reliably']
Availability,"RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...).; Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```; [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision; ```; You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/352:334,error,error,334,https://root.cern,https://github.com/root-project/root/pull/352,6,"['ERROR', 'down', 'error']","['ERROR', 'down', 'download', 'error']"
Availability,RooFit got more strict and forbids the implicit construction of; meaningless RooCmdArgs from strings. Our users should be warned about; possible new compiler errors if they make this mistake. Needs to be backported to the 6.26 branch (CMS already encountered such compiler errors in CMSSW). This is a followup to https://github.com/root-project/root/pull/9747.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9833:158,error,errors,158,https://root.cern,https://github.com/root-project/root/pull/9833,2,['error'],['errors']
Availability,"RooFormula was overhauled, which seems to be the only place where regexes show up in diffs. I think there's two simple things we can do to trace it down in a second:; - You attach a debugger and set a breakpoint on exception throw.; - You post an example that the root team can run. In the end, it can probably be solved by escaping the relevant characters in the name of an object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-777299090:148,down,down,148,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-777299090,1,['down'],['down']
Availability,"RooMomentMorphND was initialising fractions to zero. That will lead to; an all-zero PDF, which triggers evaluation errors. Setting all fractions; to 1 avoids those warnings, and the correct values will be calculated; during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6110:115,error,errors,115,https://root.cern,https://github.com/root-project/root/pull/6110,1,['error'],['errors']
Availability,"RooStats was using a global bool to switch on/off offsetting of; likelihoods. Now, this was moved into a function-local static config; struct that now also holds a flag to check if the error wall should be; presented to the minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4694:185,error,error,185,https://root.cern,https://github.com/root-project/root/pull/4694,1,['error'],['error']
Availability,Root 7457: Segmentation fault when embedding Type 1 fonts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/90:24,fault,fault,24,https://root.cern,https://github.com/root-project/root/pull/90,1,['fault'],['fault']
Availability,Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:47,error,errors,47,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['errors']
Availability,Root lib error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8814:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/8814,1,['error'],['error']
Availability,Root v6.24/06 using XrdSysDNS: Failure to compile using g++ 10.3.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173:31,Failure,Failure,31,https://root.cern,https://github.com/root-project/root/issues/9173,1,['Failure'],['Failure']
Availability,Rootcling's stage2 mode calls gDriverConfig->fTCling__GetInterpreter() to; get the TCling's instance of the cling interpreter. This in turn might; need to initialize TCling. Our modules setup preloads a modulemap but not the overlays preventing; system modules such as libc and stl to be loaded. This criples rootcling; and whenever it #includes a header file we get an error that we included; a module from ROOT which depends on modules stl but it is not accessible; through the module map.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1395:370,error,error,370,https://root.cern,https://github.com/root-project/root/pull/1395,1,['error'],['error']
Availability,"Rs. From the log, it seems that there is a problem when using RooFit from Python now:; ```; 17:06:39 1252/2373 Test #1160: tutorial-roofit-rf204b_extendedLikelihood_rangedFit-py ............................................***Failed Error regular expression found in output. Regex=[Error in] 10.10 sec; 17:06:39 Start 1172: tutorial-roofit-rf304_uncorrprod-py; 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec; 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py; 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec; 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py; 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec; 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py; 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec; 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py; 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec; 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py; 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec; 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py; 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1482508642:1024,Error,Error,1024,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1482508642,1,['Error'],['Error']
Availability,"Run2_ana/lib/libCling.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:7434,Down,Downloads,7434,https://root.cern,https://github.com/root-project/root/issues/7249,1,['Down'],['Downloads']
Availability,Running TTree::Scan should give an idea of the type of error made by TTree::Draw.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-712930970:55,error,error,55,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-712930970,1,['error'],['error']
Availability,Running a ROOT build with its PCH should set up ROOT's clang in a way that's compatible with the PCH. That's contrary to standalone clang where if the PCH has different config than what's used through flags should cause an error. I don't see this discussed here - what's the intent?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922#issuecomment-1356774367:223,error,error,223,https://root.cern,https://github.com/root-project/root/pull/11922#issuecomment-1356774367,1,['error'],['error']
Availability,"Running a weighted batch fit in Batch mode on an unweighted data set results in wrong errors du to a wrong Hessian computed the second time. ; Here is the code reproducing the problem:; ```; import ROOT as r. c1 = r.TCanvas(). def fit(sumw2 = False, batchmode = False, binned = False, minimizer = ""Minuit2"", printLevel = 0 ):; if (batchmode) :; print(""running in batchmode""); if (sumw2) :; print(""using weight correction""); r.RooRandom.randomGenerator().SetSeed(4357); ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); sig = ws.factory(""Gaussian::sig(x, mu[-1, 1], s[0.1, 5])""); bkg = ws.factory(""Chebychev::bkg(x, {c1[0.1, -1, 1]})""); shp = ws.factory(""SUM::shp(Nsig[0, 20000] * sig, Nbkg[0, 20000] * bkg)""); if (binned) :; data = shp.generateBinned(r.RooArgSet(x)); else :; data = shp.generate(r.RooArgSet(x)); data.Print(); ws.Import(data); res1 = shp.fitTo(; data,; r.RooFit.Extended(),; r.RooFit.Save(),; r.RooFit.SumW2Error(sumw2),; r.RooFit.Strategy(1),; r.RooFit.BatchMode(batchmode),; r.RooFit.Minimizer(minimizer),; r.RooFit.PrintLevel(printLevel); ); res1.Print(); pl = x.frame(); data.plotOn(pl); shp.plotOn(pl); pl.Draw(); c1.SaveAs(""fit.png""). ; fit(1,1,1,""Minuit"",2) # you can see second covariance matrix is completely wrong ; ```. This was reported in https://root-forum.cern.ch/t/sumw2error-gives-unexpected-results-with-unweighted-datasets-batchmode/47206",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9118:86,error,errors,86,https://root.cern,https://github.com/root-project/root/issues/9118,1,['error'],['errors']
Availability,"Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142531/console).; ### Errors:; - [2022-04-13T15:33:08.456Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(555,25): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Lex\PPMacroExpansion.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Lex\obj.clangLex.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\memory(3155): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\Arch\X86.cpp)' with regex '^In file included from .*$': Exception of type 'System.OutOfMemoryException' was thrown. [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/CanonicalType.h(281,3): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTContext.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-04-13T15:33:08.456Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\tuple(392,34): fatal error C1060: compiler is out of heap space (compiling source file C:\build\w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10391#issuecomment-1098198670:962,error,error,962,https://root.cern,https://github.com/root-project/root/pull/10391#issuecomment-1098198670,1,['error'],['error']
Availability,"Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/191891/console).; ### Errors:; - [2023-12-21T09:36:24.838Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/Sema/DeclSpec.h(1956,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_50c79a90db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Parse\ParseExpr.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2023-12-21T09:36:24.838Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/OpenMPClause.h(6988,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_db8aeb84db': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2023-12-21T09:36:24.838Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\include\clang/AST/Stmt.h(3590,1): fatal error C1088: Cannot flush compiler intermediate file: 'C:\Users\sftnight\AppData\Local\Temp\_CL_b338413cex': No space left on device (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm-project\clang\lib\AST\ExprClassification.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm-project\llvm\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2023-12-21T09:36:24.838Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring(2302,1): fatal error C1088: Cannot flush compiler intermediate fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14218#issuecomment-1865969388:918,error,error,918,https://root.cern,https://github.com/root-project/root/pull/14218#issuecomment-1865969388,1,['error'],['error']
Availability,Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5791-ROOT-fedora30-cxx14&date=2020-06-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85324/console).; ### Errors:; - [2020-06-05T06:53:52.349Z] FAILED: roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsReal.cxx.o ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4953:45: error: ‘setprecision’ is not a member of ‘std’ ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4992:25: error: ‘setprecision’ is not a member of ‘std’ ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4993:35: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4994:35: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:4998:35: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:5000:46: error: ‘setw’ is not a member of ‘std’; did you mean ‘set’? ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:5006:27: error: ‘setprecision’ is not a member of ‘std’ ; - [2020-06-05T06:53:52.930Z] /home/sftnight/build/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsReal.cxx:5018:31: error: ‘setprecision’ is not a member of ‘std’,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5791#issuecomment-639294767:1020,error,error,1020,https://root.cern,https://github.com/root-project/root/pull/5791#issuecomment-639294767,6,['error'],['error']
Availability,"Running tree/ntuple/v7/test/ntuple_extended sometimes fails (at least on MacOS 11) at tear down. The crash happens at:. ```; (lldb) bt; * thread #13, stop reason = EXC_BAD_ACCESS (code=1, address=0x0); * frame #0: 0x000000010095d80f libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSourceFile::UnzipClusterImpl(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorageFile.cxx:652:26; frame #1: 0x0000000100944934 libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSource::UnzipCluster(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorage.cxx:101:7; frame #2: 0x0000000100897a53 libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RClusterPool::ExecUnzipClusters(this=0x00000001479040b0) at RClusterPool.cxx:102:22; frame #3: 0x00000001008a9817 libROOTNTuple.6.23.so`decltype(__f=0x00000001479042d8, __a0=0x00000001479042e8)).*fp()) std::__1::__invoke<void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*, void>(void (ROOT::Experimental::Detail::RClusterPool::*&&)(), ROOT::Experimental::Detail::RClusterPool*&&) at type_traits:3486:1; frame #4: 0x00000001008a971e libROOTNTuple.6.23.so`void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*, 2ul>(__t=size=3, (null)=__tuple_indices<2> @ 0x0000700008c5df58)(), ROOT::Experimental::Detail::RClusterPool*>&, std::__1::__tuple_indices<2ul>) at thread:273:5; frame #5: 0x00000001008a8ed6 libROOTNTuple.6.23.so`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*> >(__vp=0x00000001479042d0) at thread:284:5; frame #6: 0x00007fff2032f950 libsystem_pthread.dylib`_pthread_start + 224; frame #7: 0x00007fff2032b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:91,down,down,91,https://root.cern,https://github.com/root-project/root/issues/7076,1,['down'],['down']
Availability,"Running. ```cpp; // repro.C; void repro() {; TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");; }; ```; as. ```; root -l -b -q repro.C; ```; yields:; ```; Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation; ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9316:174,Error,Error,174,https://root.cern,https://github.com/root-project/root/issues/9316,2,"['Error', 'error']","['Error', 'error']"
Availability,"S), ; r.RooFit.FillColor(93), r.RooFit.LineColor(93), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""RarePrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc+"",templateRarePrc""+trigCatPrc), ; r.RooFit.FillColor(95), r.RooFit.LineColor(95), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""CharmPrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc), ; r.RooFit.FillColor(94), r.RooFit.LineColor(94), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""comb""), r.RooFit.Components(""modelBkgTot""+trigCatS), ; r.RooFit.FillColor(92), r.RooFit.LineColor(92), r.RooFit.DrawOption(""F""));; modelTot.plotOn(frame, r.RooFit.Name(""sig""), r.RooFit.LineColor(r.kBlack), r.RooFit.Components(""modelSigTot""+trigCatS ), r.RooFit.LineStyle(2));. data.plotOn(frame);. modelTot.paramOn(frame, r.RooFit.Layout(0.65,0.85,0.95)); frame.getAttLine(""modelTot""+str(trigCat)+""_paramBox"").SetLineWidth(0);. ```. I get the regex error. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-543-f3142912b8db> in <module>; ----> 1 modelTot.plotOn(frame, r.RooFit.Name(""Piee""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateRarePrc""+trigCatPrc+"",templateCharmPrc""+trigCatPrc+"",modelPieeTot""+trigCatS), ; 2 r.RooFit.FillColor(93), r.RooFit.LineColor(93), r.RooFit.DrawOption(""F""));; 3 modelTot.plotOn(frame, r.RooFit.Name(""RarePrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc+"",templateRarePrc""+trigCatPrc), ; 4 r.RooFit.FillColor(95), r.RooFit.LineColor(95), r.RooFit.DrawOption(""F""));; 5 modelTot.plotOn(frame, r.RooFit.Name(""CharmPrc""), r.RooFit.Components(""modelBkgTot""+trigCatS+"",templateCharmPrc""+trigCatPrc), . TypeError: none of the 2 overloaded methods succeeded. Full details:; RooPlot* RooAbsPdf::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-777628272:2379,error,error,2379,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-777628272,1,['error'],['error']
Availability,"SBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 4. mkdir build_amd64 && cd build_amd64; 5. pip install pytest; 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON ..; 6. cmake --build . --config Release. ### Setup; 1. Operating system: Windows 10; 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2890,error,error,2890,https://root.cern,https://github.com/root-project/root/issues/9487,3,['error'],"['error', 'errorlevel']"
Availability,"SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x0000000107881888 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 rootcling_stage1 0x00000001078807fc llvm::sys::RunSignalHandlers() + 64; 2 rootcling_stage1 0x0000000107881ea4 SignalHandler(int) + 292; 3 libsystem_platform.dylib 0x0000000187a44184 _sigtramp + 56; 4 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 5 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 6 rootcling_stage1 0x00000001050b30e4 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:3835,error,error,3835,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProofConn::LowWrite(XPClientRequest *req, const void* reqData,; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was not declared in this scope; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:23: error: expected ‘;’ before ‘type’; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1006:17: error: ‘type’ was not declared in this scope; 01:46:28 len = sizeof(type);; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1062:1: warning: control reaches end of non-void function [-Wreturn-type]; 01:46:28 }; 01:46:28 ^; ```. which seem caused by an update in the xrootd version (now version 5). ROOT has [some known issues](https://sft.its.cern.ch/jira/browse/ROOT-10910) with xrootd5, although this failure mode is not the same as in those cases. [These](root-project/root#6226) are the changes that @oshadura backported to 6.22 to fix xrootd5 support there.; I don't know whether those changes m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:2398,error,error,2398,https://root.cern,https://github.com/root-project/root/issues/6779,1,['error'],['error']
Availability,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4406,error,error,4406,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['error'],['error']
Availability,"SVC\14.23.28105\include\xmemory(783,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\RewriteRope.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\obj.clangRewrite.vcxproj] ; - [2021-04-30T19:53:28.718Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list(1609,64): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Rewrite\TokenRewriter.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Rewrite\obj.clangRewrite.vcxproj] ; - [2021-04-30T19:53:28.718Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/ilist.h(133,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\LowerEmuTLS.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2021-04-30T19:53:42.538Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Stmt.h(2558,36): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseAST.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Parse\obj.clangParse.vcxproj] ; - [2021-04-30T19:53:42.538Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/TrailingObjects.h(199,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Parse\ParseOpenMP.cpp) [C:\build\workspace\root-pullrequest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354#issuecomment-830348016:1249,error,error,1249,https://root.cern,https://github.com/root-project/root/pull/7354#issuecomment-830348016,1,['error'],['error']
Availability,"SVC\14.23.28105\include\xutility(545,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\FrontendActions.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\Rewrite\obj.clangRewriteFrontend.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/STLExtras.h(899,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\LowerTypeTests.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(124,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\CommentSema.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\Local.cpp(2957,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2021-04-20T11:43:08.155Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits(229,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\CodeGen\BackendUtil.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\CodeGen\obj.clangCodeGen.vcxproj] . And 50 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7920#issuecomment-823208209:3335,error,error,3335,https://root.cern,https://github.com/root-project/root/pull/7920#issuecomment-823208209,3,['error'],['error']
Availability,"SX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1025:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1747:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/inplace_merge.h:26:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:51:41: error: no template named 'is_trivially_destructible'; {__incr(integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:55:45: error: no template named 'is_trivially_destructible'; {__set(__s, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:59:49: error: no template named 'is_trivially_destructible'; {__process(__p, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:12970,error,error,12970,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,SXSystem.h TUnixSystem.h /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/base/inc/LinkDef.h; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <ctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_types/_wctrans_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Develope,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:9756,error,error,9756,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15660:170,error,errors,170,https://root.cern,https://github.com/root-project/root/pull/15660,1,['error'],['errors']
Availability,Same as the backport for 6.18! Fixes the errors in the nightlies: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=21468. Coupled to https://github.com/root-project/roottest/pull/590,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6286:41,error,errors,41,https://root.cern,https://github.com/root-project/root/pull/6286,1,['error'],['errors']
Availability,Same errors observed in dummy 6.14-based PR: https://github.com/root-project/root/pull/4595; Concluding they are unrelated with the changes of this PR. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4592#issuecomment-547836839:5,error,errors,5,https://root.cern,https://github.com/root-project/root/pull/4592#issuecomment-547836839,1,['error'],['errors']
Availability,"Same operating system as @mkrzewic.; Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; CMake Error at interpreter/cling/CMakeLists.txt:196 (message):; NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred!; ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell; [...]; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred!; ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:; ```shell; [ 98%] Linking CXX executable ../../bin/hist2workspace; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; [ 98%] Built target hist2workspace; [100%] Built target RooFitHS3; [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so; [100%] Built target RooFitXRooFit; [100%] Built target onepcm; [100%] Generating lib/modules.idx; Abort trap (core dumped); --- lib/modules",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865#issuecomment-1779361849:188,error,error,188,https://root.cern,https://github.com/root-project/root/issues/13865#issuecomment-1779361849,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,Same test failure (`roottest-python-regression-regression`) as fedora 38 :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13761#issuecomment-1742877857:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/pull/13761#issuecomment-1742877857,1,['failure'],['failure']
Availability,"See also https://github.com/root-project/root/issues/12156. But interestingly while I don't get that particular error, there are indeed still *some* LLVM symbols exported:. ```sh; nm --dynamic /path/to/libCling.so | awk '{print $3;}' | c++filt | grep llvm; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14778#issuecomment-1956171735:112,error,error,112,https://root.cern,https://github.com/root-project/root/issues/14778#issuecomment-1956171735,1,['error'],['error']
Availability,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6; ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-783709373:38,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,38,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-783709373,1,['error'],['error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function']
Availability,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16250:374,error,error,374,https://root.cern,https://github.com/root-project/root/issues/16250,1,['error'],['error']
Availability,"See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5921-ROOT-performance-centos7-multicore-default&date=2020-06-24).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87835/console).; ### Errors:; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::GetSizeImpl(): error: undefined reference to 'Davix::DavPosix::stat(Davix::RequestParams const*, std::string const&, stat*, Davix::DavixError**)' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::GetSizeImpl(): error: undefined reference to 'Davix::DavixError::getErrMsg() const' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::OpenImpl(): error: undefined reference to 'Davix::DavPosix::open(Davix::RequestParams const*, std::string const&, int, Davix::DavixError**)' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::OpenImpl(): error: undefined reference to 'Davix::DavixError::getErrMsg() const' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::ReadAtImpl(void*, unsigned long, unsigned long): error: undefined reference to 'Davix::DavPosix::pread(Davix_fd*, void*, unsigned long, long, Davix::DavixError**)' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::ReadAtImpl(void*, unsigned long, unsigned long): error: undefined reference to 'Davix::DavixError::getErrMsg() const' ; - [2020-06-24T11:19:52.532Z] ../../../lib/libRDAVIX.a(RRawFileDavix.cxx.o):RRawFileDavix.cxx:function ROOT::Internal::RRawFileDavix::ReadVImpl(ROOT::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5921#issuecomment-648760074:1092,error,error,1092,https://root.cern,https://github.com/root-project/root/pull/5921#issuecomment-648760074,1,['error'],['error']
Availability,See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6298-mac1014-python3&date=2020-09-03).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/94663/console).; ### Errors:; - [2020-09-03T13:08:00.468Z] FAILED: core/imt/CMakeFiles/Imt.dir/src/TThreadExecutor.cxx.o ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:195:1: error: use of undeclared identifier 'TThreadExecutor'; did you mean '::ROOT::TThreadExecutor'? ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:195:18: error: cannot define or redeclare 'TThreadExecutor' here because namespace 'ROOT' does not enclose namespace 'TThreadExecutor' ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:197:4: error: use of undeclared identifier 'fTaskArenaW' ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:197:18: error: no member named 'Internal' in namespace '(anonymous namespace)::ROOT'; did you mean '::ROOT::Internal'? ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:197:53: error: use of undeclared identifier 'nThreads' ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:200:6: error: use of undeclared identifier 'TThreadExecutor'; did you mean '::ROOT::TThreadExecutor'? ; - [2020-09-03T13:08:00.468Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThreadExecutor.cxx:200:23: error: cannot define or redeclare 'ParallelFor' here because namespace 'ROOT' does not enclose namespace 'TThreadExecutor' ; - [2020-09-03T13:08:00.469Z] /build/jenkins/workspace/root-pullrequests-build/root/core/imt/src/TThre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298#issuecomment-686477445:1083,error,error,1083,https://root.cern,https://github.com/root-project/root/pull/6298#issuecomment-686477445,1,['error'],['error']
Availability,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8049:237,error,error,237,https://root.cern,https://github.com/root-project/root/pull/8049,7,"['avail', 'down', 'error']","['available', 'downloaded', 'error']"
Availability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8298/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' . And 22 more. ### Warnings:; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1144#issuecomment-334645417:979,error,error,979,https://root.cern,https://github.com/root-project/root/pull/1144#issuecomment-334645417,1,['error'],['error']
Availability,See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8299/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:9: error: unknown type name '__WCHAR_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:90:24: error: expected unqualified-id ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:51:9: error: unknown type name '__PTRDIFF_TYPE__' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/etc/cling/lib/clang/5.0.0/include/stddef.h:62:9: error: unknown type name '__SIZE_TYPE__' . And 10 more. ### Warnings:; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomment] ; - include/Rtypes.h:248:7: warning: multi-line comment [-Wcomme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1144#issuecomment-334645227:979,error,error,979,https://root.cern,https://github.com/root-project/root/pull/1144#issuecomment-334645227,1,['error'],['error']
Availability,"See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91520/console).; ### Errors:; - [2020-08-05T11:32:04.813Z] FAILED: math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:9: error: ‘void ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:11: error: ‘double ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;Vc_1::Vector&lt;double, Vc_1::VectorAbi::Sse&gt; &gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:124:9: error: ‘void ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::Gradient(const double*, double*) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marked ‘override’, but does not override ; - [2020-08-05T11:32:05.176Z] /home/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/inc/Fit/Chi2FCN.h:154:11: error: ‘double ROOT::Fit::Chi2FCN&lt;DerivFunType, ModelFunType&gt;::DoDerivative(const double*, unsigned int) const [with DerivFunType = ROOT::Math::IBaseFunctionMultiDimTempl&lt;double&gt;; ModelFunType = ROOT::Math::IParametricFunctionMultiDimTempl&lt;double&gt;]’ marke",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669141294:1107,error,error,1107,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669141294,1,['error'],['error']
Availability,"See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/99421/console).; ### Errors:; - [2020-10-19T18:43:43.091Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DCLING_VERSION=""ROOT_0.8~dev"" -DGTEST_HAS_RTTI=0 -DLLVM_BUILD_GLOBAL_ISEL -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/cling/lib/Interpreter -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/include -Iinterpreter/llvm/src/tools/cling/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/include -I/mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -w -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -Wno-nested-anon-types -Wno-covered-switch-default -Wno-unused-local-typedef -fno-rtti -O3 -fvisibility=default -fvisibility-inlines-hidden -UNDEBUG -fno-exceptions -fno-rtti -std=c++11 -MD -MT interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DefinitionShadower.cpp.o -MF interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DefinitionShadower.cpp.o.d -o interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DefinitionShadower.cpp.o -c /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp ; - [2020-10-19T18:43:43.091Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:53:51: error: ‘const class clang::FunctionDecl’ has no member named ‘isTemplateSpecialization’",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6571#issuecomment-712369455:2036,error,error,2036,https://root.cern,https://github.com/root-project/root/pull/6571#issuecomment-712369455,1,['error'],['error']
Availability,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7339:735,avail,available,735,https://root.cern,https://github.com/root-project/root/pull/7339,1,['avail'],['available']
Availability,"See for comparison the screenshot below. The upper plot was done with `TTree.Draw`:. ```python; >>> import ROOT; >>> f = ROOT.TFile('DYJetsToLL.root'); >>> t = f.Get('Events'); >>> t.Draw('GenPart_pdgId'); ```. The lower plot was done with `RDataFrame.Histo1D`:. ```python; >>> import ROOT; >>> c = ROOT.TCanvas(); >>> h = ROOT.RDataFrame('Events', 'DYJetsToLL.root').Histo1D('GenPart_pdgId'); >>> h.Draw(); ```. ![Screenshot from 2020-10-20 10-38-16](https://user-images.githubusercontent.com/6951222/96562487-1974b880-12c1-11eb-9bc5-1006c78031e5.png). I've used ROOT 6.22/02 and you can download the file here:. http://opendata.web.cern.ch/record/12353",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671:589,down,download,589,https://root.cern,https://github.com/root-project/root/issues/6671,1,['down'],['download']
Availability,"See https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2440492881. ```; // This produces errors; TH2Poly p1;; TH2Poly p2(p1);; ```; The stack trace is:; ```; * frame #0: 0x000000010515b3d4 libHist.so`TH2Poly::Copy(this=0x00000001000100a8, newobj=0x00000001000180a8) const at TH2Poly.cxx:235:49; frame #1: 0x000000010515add8 libHist.so`TH2Poly::TH2Poly(this=0x00000001000180a8, rhs=0x00000001000100a8) at TH2Poly.cxx:185:9; frame #2: 0x000000010515ae34 libHist.so`TH2Poly::TH2Poly(this=0x00000001000180a8, rhs=0x00000001000100a8) at TH2Poly.cxx:184:47; ```; with a missing `if not nullptr` at:; ```; 234 // need to use Clone to copy the contained bin list; -> 235 newth2p.fBins = dynamic_cast<TList *>(fBins->Clone());; ```. As a side note:. ```; // This works fine (initialized case); TH2Poly p1;; Double_t x[] = {0,0,1,1};; Double_t y[] = {0,1,1,0};; p1.AddBin(4, x, y);; TH2Poly p2(p1);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16771:94,error,errors,94,https://root.cern,https://github.com/root-project/root/issues/16771,1,['error'],['errors']
Availability,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12651:481,repair,repairs,481,https://root.cern,https://github.com/root-project/root/pull/12651,2,"['down', 'repair']","['down', 'repairs']"
Availability,"See https://github.com/root-project/root/pull/9913. This resolved the problem seen at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481; and fix #9899. The problem is the rules are applied to a data member nested inside an object nested inside; an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL,; since it is a new member compared to the layout on file, none of the objects; from the new; member down to the object on which the rules need to be run) are actually streamed and the; code gathering the information to run the rule got a bit lost ; it is likely (I am checking; as we speak) that in previous release the rule was not even attempted to be run ... which; might actually be the desired behavior in this specific case. The solution is to have GatherArtificialElements stop drilling through data members which; are not stored in the existing TTree",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9927:454,down,down,454,https://root.cern,https://github.com/root-project/root/pull/9927,1,['down'],['down']
Availability,See https://root-forum.cern.ch/t/open-a-file-to-read-data/52234/7. `rootls -t yourfile.root:*` will spit out overload errors if it encounters a branch of an unknown class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11675:118,error,errors,118,https://root.cern,https://github.com/root-project/root/issues/11675,1,['error'],['errors']
Availability,"See https://root-forum.cern.ch/t/open-gui-failed-on-latest-macos-13-3-1/54474. ```; root [0] new TBrowser; root.exe(29254,0x16d62f000) malloc: *** error for object 0x600002e1a980: pointer being freed was not allocated; root.exe(29254,0x16d62f000) malloc: *** set a breakpoint in malloc_error_break to debug; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12750:147,error,error,147,https://root.cern,https://github.com/root-project/root/issues/12750,1,['error'],['error']
Availability,"See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```; RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); ; RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);; ```; gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10440:77,error,errordef-and-gets-not-restored,77,https://root.cern,https://github.com/root-project/root/issues/10440,2,['error'],"['error', 'errordef-and-gets-not-restored']"
Availability,"See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected; This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3996:68,error,error-when-expected,68,https://root.cern,https://github.com/root-project/root/pull/3996,1,['error'],['error-when-expected']
Availability,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16412:109,failure,failures,109,https://root.cern,https://github.com/root-project/root/pull/16412,2,['failure'],['failures']
Availability,"See more details in the commit messages. This is a followup to https://github.com/root-project/root/pull/8878, and the first commit silences a harmless error message that appeared after https://github.com/root-project/root/commit/d5c3c5885726d11d14b59249e601e81ecfe8021d.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9795:152,error,error,152,https://root.cern,https://github.com/root-project/root/pull/9795,1,['error'],['error']
Availability,See the following 5 years old commit in Clang:. ```; https://github.com/llvm-mirror/clang/commit/; a78c5c34fbd20fde02261c3f3e21933cd58fcc04; ```. Clang forces '(' token after reference to dtor. Reflex uses an extra; parentheses around dtor reference. It force Clang 3.5 to diagnose and fail. A thread in cfe-dev (Clang) mainling-list was started:. ```; http://lists.cs.uiuc.edu/pipermail/cfe-dev/; 2014-October/039371.html; ```. The following fixes failure in CMSSW with Clang 3.5: https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc6_amd64_gcc481/CMSSW_7_3_CLANG_X_2014-10-01-0200/AnalysisDataFormats/TopObjects. Signed-off-by: David Abdurachmanov davidlt@cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/29:449,failure,failure,449,https://root.cern,https://github.com/root-project/root/pull/29,1,['failure'],['failure']
Availability,"See the related failures created on the CI: https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971 where we run just the TMVA test to increase the chance of collisions .... and indeed the `tutorial-tmva-TMVA_SOFIE_GNN_Application` fails on most platforms with:; ```; /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; #include ""encoder.hxx""; ^~~~~~~~~~~~~; ```; and `tutorial-tmva-TMVA_RNN_Classification-py` fails (on just alma9-clang) due to timeout. -------. This specific issue is resolved by https://github.com/root-project/root/pull/16711",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2408535597:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2408535597,2,"['error', 'failure']","['error', 'failures']"
Availability,"See:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/. The last successful build on that platform was in the morning of November 30, so any of the PRs merged on Monday seems to have broken the 32 bit build. The candidate PRs are in chronological order (newest to oldest):. * https://github.com/root-project/root/pull/14148; * https://github.com/root-project/root/pull/14144; * https://github.com/root-project/root/pull/14120; * https://github.com/root-project/root/pull/14129; * https://github.com/root-project/root/pull/14131; * https://github.com/root-project/root/pull/14135; * https://github.com/root-project/root/pull/14146; * https://github.com/root-project/root/pull/14115; * https://github.com/root-project/root/pull/14110; * https://github.com/root-project/root/pull/13565; * https://github.com/root-project/root/pull/14137. Any PR that got backported to 6.30 is probably not the offender, because the 6.30 nightlies don't have these failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14306:1032,failure,failures,1032,https://root.cern,https://github.com/root-project/root/issues/14306,1,['failure'],['failures']
Availability,Seeing the same issue with a binary download and Ubun22. A workaround is to edit by hand the cmake file and comment those lines. @krasznaa or @linev might know what the problem could be,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038#issuecomment-2231599351:36,down,download,36,https://root.cern,https://github.com/root-project/root/issues/16038#issuecomment-2231599351,1,['down'],['download']
Availability,Seems like the failing test was just a fluke. I also don't see that failure on my machine and I don't think it's related at all anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11113#issuecomment-1206860724:68,failure,failure,68,https://root.cern,https://github.com/root-project/root/pull/11113#issuecomment-1206860724,1,['failure'],['failure']
Availability,"Seems no :-(. I downloaded https://github.com/bellenot/root/tree/check-internet-connection but I didn't expect that:. it hangs after git; ~/sw/root-bld-test$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection; -- The C compiler identification is GNU 8.3.1; -- The CXX compiler identification is GNU 8.3.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.27.0""); ^C. I retired the same command on the (6.24.00) here it workes. I'm sorry, there is still something wrong in the build system. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867613908:16,down,downloaded,16,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867613908,1,['down'],['downloaded']
Availability,"Seems to be, buffer is not released correctly.; I guess, error should be fixed in cling repository first",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4897:57,error,error,57,https://root.cern,https://github.com/root-project/root/pull/4897,1,['error'],['error']
Availability,"Seems to be, compilation on mac is working - I see failure only in some roofit tests.; One could merge this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2584#issuecomment-418626222:51,failure,failure,51,https://root.cern,https://github.com/root-project/root/pull/2584#issuecomment-418626222,1,['failure'],['failure']
Availability,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16445:161,error,error,161,https://root.cern,https://github.com/root-project/root/pull/16445,1,['error'],['error']
Availability,Seg fault in RooMomentMorphND for ROOT 6.29,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12155:4,fault,fault,4,https://root.cern,https://github.com/root-project/root/issues/12155,1,['fault'],['fault']
Availability,Segmentation fault after quitting Cling in CUDA mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7433:13,fault,fault,13,https://root.cern,https://github.com/root-project/root/issues/7433,1,['fault'],['fault']
Availability,Segmentation fault in TGraph::Sort with large number of entries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13632:13,fault,fault,13,https://root.cern,https://github.com/root-project/root/issues/13632,1,['fault'],['fault']
Availability,Segmentation fault when building with the mold linker,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473:13,fault,fault,13,https://root.cern,https://github.com/root-project/root/issues/15473,1,['fault'],['fault']
Availability,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8810:221,error,errors,221,https://root.cern,https://github.com/root-project/root/pull/8810,3,['error'],"['error', 'errors']"
Availability,SetErrorDef was not implemented for the FCNGradAdapter used to wrap the user functions in the Minuit interface. This causes that the current set ErrorDef was not used when minimizing but the one set when constructed the function. This fixes issue #12338,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12339:145,Error,ErrorDef,145,https://root.cern,https://github.com/root-project/root/pull/12339,1,['Error'],['ErrorDef']
Availability,"SetRootSys is overwriting ROOTSYS every time:; ```; [yuka@yuka-arch normalroot]$ source bin/thisroot.sh; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /home/yuka/normalroot; [yuka@yuka-arch normalroot]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch normalroot]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot""; root [1] .q; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; ```. This is the right behavior as users can choose different ROOT binary in; cvmfs enviroment. However, as SetROOTSYS is reading the binary header; which stores the information of where the binary was built, ROOTSYS is; messed up when you relocate build directory (Without this patch):; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot"" // It should be ""/home/yuka/test""!; ```. ROOTSYS can be overwritten, but it should point to the actual binary; location. With this patch, ROOTSYS can point to the correct binary location:; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/test"" // Which is correct; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366:134,echo,echo,134,https://root.cern,https://github.com/root-project/root/pull/2366,5,['echo'],['echo']
Availability,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7910:86,error,errors,86,https://root.cern,https://github.com/root-project/root/pull/7910,2,['error'],"['error', 'errors']"
Availability,"Several improvements to the [`RooDataSet` constructor](https://root.cern.ch/doc/master/classRooDataSet.html#a6a2302f27e1b016a0351f6e0a0329fa2) that takes command arguments to import other data:. 1. Automatically create weight variable when importing multiple data slices (closes #11487); 2. Support importing also RooDataHists (also as slices for combined datasets), and filling the weight errors correctly to match the `weightSquared()`; 3. Create the weight variable on the fly if it was specified by name in `WeightVar()` but is not in the list of variables; 4. Have a default argument for `WeightVar(=""weight"")`, because that's usually the name anyway; 5. Fix `RooVectorDataStore::loadValues()` for loading values from another vector data store: so far it used `assignValueOnly` to copy the values over, but the values might have errors, like for example in the case of importing a RooDataHist. That's why the regular `RooAbsCollection::assign()` is used now. All of these changes result in several code simplifications in the cases where RooDataSets are imported from other data, and fixes the bugs that might have been because the `weightSqaured()` was usually not transferred correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12227:390,error,errors,390,https://root.cern,https://github.com/root-project/root/pull/12227,2,['error'],['errors']
Availability,Several new test failures on ppc64le with 6.22.06 due to:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6887:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/6887,1,['failure'],['failures']
Availability,"Several small issues came up in the forum, and this is a collection of documentation updates, a few safety checks added to roofit and more understandable warning/error messages. Further, the class RooRealProxy (kind of a pointer with extra functionality) has been replaced by a templated class, as it always requires casting when the pointed-to object is used. Since it is internal to RooFit, this should not affect users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4739:162,error,error,162,https://root.cern,https://github.com/root-project/root/pull/4739,1,['error'],['error']
Availability,"Should I have it build on either Travis or Jenkins? (I don't know where to add it to Jenkins). Even if the artifacts are not available, it would be nice to make sure it still builds if there are changes to Minuit2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369905773:125,avail,available,125,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369905773,1,['avail'],['available']
Availability,Should address the Gaudi failures reported in ROOT-10303.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4349:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/4349,1,['failure'],['failures']
Availability,Should address; ```; /tmp/workspace/src/tree/ntuple/v7/src/RField.cxx:43:10: fatal error: charconv: No such file or directory; #include <charconv>; ^~~~~~~~~~; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12196:83,error,error,83,https://root.cern,https://github.com/root-project/root/pull/12196,1,['error'],['error']
Availability,Should decrease the number of failures and retries when running the tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16273:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/16273,1,['failure'],['failures']
Availability,"Should fix errors such as those at https://bit.ly/2W6cZoc :. ```; /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/default/V/master/build/include/ROOT/RDF/RInterface.hxx:2363:25:; error: no viable conversion from; 'shared_ptr<ROOT::Detail::RDF::RCustomColumn<ROOT::VecOps::RVec<ROOT::VecOps::RVec<unsigned; long> > (*)(const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<int> &),; ROOT::Detail::RDF::CustomColExtraArgs::None>>' to 'const; shared_ptr<RDFDetail::RCustomColumnBase>'; newCols.AddColumn(newColumn, name);; ^~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5554:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/5554,2,['error'],"['error', 'errors']"
Availability,Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5234:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/5234,1,['failure'],['failures']
Availability,Should fix the failure of tutorial/tree/run_h1analysis.C on Win64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12243:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/pull/12243,1,['failure'],['failure']
Availability,Should fix the out-of-sync failures :crossed_fingers:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12834:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/12834,1,['failure'],['failures']
Availability,Should fix; ```; WARNING:discardable_shared_memory_manager.cc(197)] Less than 64MB of free space in temporary directory for shared memory files: 62; ```; and similar errors with headless chromium.; See https://stackoverflow.com/a/56941767. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466:166,error,errors,166,https://root.cern,https://github.com/root-project/root/pull/13466,1,['error'],['errors']
Availability,Should have ran. If you want to make sure just introduce an error in the test and see if it starts to fail.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9272#issuecomment-2058224144:60,error,error,60,https://root.cern,https://github.com/root-project/root/pull/9272#issuecomment-2058224144,1,['error'],['error']
Availability,Should repair but not close https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7389:7,repair,repair,7,https://root.cern,https://github.com/root-project/root/pull/7389,1,['repair'],['repair']
Availability,Should solve failures on fedora40 in #16729,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16731:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/16731,1,['failure'],['failures']
Availability,Should we proceed with this PR and then fix the failures as we will have a reproducer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443#issuecomment-618664455:48,failure,failures,48,https://root.cern,https://github.com/root-project/root/pull/5443#issuecomment-618664455,1,['failure'],['failures']
Availability,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-507959360:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-507959360,1,['failure'],['failure']
Availability,Shouldn't have rebased on current master...; ```; Processing /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/cling/other/runfileClose.C...; input_line_29:1:1: error: source file is not valid UTF-8; <D6><U+007F>; ^; input_line_29:1:2: error: expected unqualified-id; <D6><U+007F>; ^; ```; It does pass all tests when I run `ctest -V -R tree` (108 tests more or less).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332883841:173,error,error,173,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332883841,2,['error'],['error']
Availability,"Shouldn't we merge this (in addition to https://github.com/root-project/root/pull/7260/), for example for use on Windows and/or when TBB is not available?. Related, we should put (a summary of) the performance numbers somewhere in the git reporsitory. Maybe either in the release note or one of the commit. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-800493373:144,avail,available,144,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-800493373,1,['avail'],['available']
Availability,"Side note, it crashes with current ROOT master, but does not crash with current cling standalone master (debug mode). ```; for(i=0; i < 0;);; input_line_3:2:6: error: use of undeclared identifier 'i'; for(auto i=0; i < 0;); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367#issuecomment-2054139900:160,error,error,160,https://root.cern,https://github.com/root-project/root/issues/8367#issuecomment-2054139900,1,['error'],['error']
Availability,"Side note: I was able to reproduce the same race and deadlock on different computers using:. ```; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-875135587:161,Down,Download,161,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-875135587,1,['Down'],['Download']
Availability,Side note: calling make clean does not clean the directory in case the build failed. I get:. ```; rm -r rootdoc filter htmlfooter.html dataset* ../../bindings/pyroot/pythonizations/python/ROOT/pythonization/*.pyzdoc; rm: cannot remove 'dataset*': No such file or directory; Makefile:56: recipe for target 'clean' failed; make: *** [clean] Error 1; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8947#issuecomment-910383278:339,Error,Error,339,https://root.cern,https://github.com/root-project/root/issues/8947#issuecomment-910383278,1,['Error'],['Error']
Availability,Side note: thisroot.csh also seems to need some re-work: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10424#issuecomment-1150482456:93,error,error-in-thisroot-csh-during-installation,93,https://root.cern,https://github.com/root-project/root/pull/10424#issuecomment-1150482456,1,['error'],['error-in-thisroot-csh-during-installation']
Availability,Significantly speed up the tear down of hadd and its reduce memory use,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4525:32,down,down,32,https://root.cern,https://github.com/root-project/root/pull/4525,1,['down'],['down']
Availability,"Silence ""Can't read file attributes"" with protected system files on Windows.; This addresses the following topic on the Forum:; [TGFileDialog multiple ""Can't read file attributes"" errors on Windows](https://root-forum.cern.ch/t/tgfiledialog-multiple-cant-read-file-attributes-errors-on-windows/58342)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865:180,error,errors,180,https://root.cern,https://github.com/root-project/root/pull/14865,2,['error'],"['errors', 'errors-on-windows']"
Availability,"Similar (minus the warnings) for boost 1.82.0:; ```; root [0] gInterpreter->AddIncludePath(""-I/Users/axel/build/boost/boost_1_82_0""); root [1] #include <boost/program_options.hpp>; In file included from ROOT_prompt_1:1:; In file included from /Users/axel/build/boost/boost_1_82_0/boost/program_options.hpp:17:; In file included from /Users/axel/build/boost/boost_1_82_0/boost/program_options/parsers.hpp:295:; In file included from /Users/axel/build/boost/boost_1_82_0/boost/program_options/detail/parsers.hpp:9:; /Users/axel/build/boost/boost_1_82_0/boost/program_options/detail/convert.hpp:36:55: error: reference to unresolved using declaration; const std::codecvt<wchar_t, char, std::mbstate_t>& cvt);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/cuchar:49:1: note: using declaration annotated with 'using_if_exists' here; using ::mbstate_t _LIBCPP_USING_IF_EXISTS;; ^; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536455359:599,error,error,599,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536455359,1,['error'],['error']
Availability,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11179:113,error,error,113,https://root.cern,https://github.com/root-project/root/issues/11179,5,['error'],"['error', 'errors']"
Availability,"Simultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));; ; RooSimultaneous sim(""sim"", """", *cat);; sim.addPdf(g, ""a"");; sim.addPdf(g, ""b"");; sim.addPdf(g, ""c"");; ; sim.fitTo(*ds, RooFit::Save(true); , RooFit::BatchMode(true) // commenting this solves the issue; )->Print(""V"");; // _a_x parameter in results, cov matrix is ""Approximation only""; ; // works; //g.fitTo(*ds, RooFit::Save(true), RooFit::BatchMode(true))->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7; ROOT 6.26.04 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:2535,down,download,2535,https://root.cern,https://github.com/root-project/root/issues/10991,1,['down'],['download']
Availability,"Since @hahnjo is OK to close it, we close it. Please do not hesitate to re-open in case more information becomes available that suggests to revisit this decision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7977#issuecomment-1925269197:113,avail,available,113,https://root.cern,https://github.com/root-project/root/issues/7977#issuecomment-1925269197,1,['avail'],['available']
Availability,Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`.; This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11767:319,avail,available,319,https://root.cern,https://github.com/root-project/root/pull/11767,1,['avail'],['available']
Availability,"Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction; to multiply the yields in the RooHistFuncs with the inverse bin widths,; in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is; not optimal for the `BinnedLikelihood` code path. Here, the bin widths; need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by; propagating the information that we are building a binned likelihood; down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL; knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,; but actually the main motivation is not performance but RooFit AD; support. By removing the RooBinWidthFunctions from the computation graphs; of HistFactory likelihoods, we don't need to implement code generation; support for this class, which would be not trivial in the general; n-dimensional case. With the suggestion in this PR, all that work is; avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13024:548,down,down,548,https://root.cern,https://github.com/root-project/root/pull/13024,1,['down'],['down']
Availability,"Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:; ```; import ROOT; ws = ROOT.RooWorkspace(""ws""); # seg fault; ROOT.RooFit.ConditionalObservables(ws.set("""")); ```; Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge); Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10232:212,fault,fault,212,https://root.cern,https://github.com/root-project/root/issues/10232,1,['fault'],['fault']
Availability,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14174:574,avail,available,574,https://root.cern,https://github.com/root-project/root/pull/14174,4,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"Since adding `bits/utility.h` in commit e9a8c48e4f, a C++14 build with GCC 12 (and potentially also other compiler versions) failed with; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:38:; /opt/gcc/12.2.0/include/c++/12.2.0/functional:337:35: error: missing '#include <bits/utility.h>'; 'tuple_size' must be declared before it is used; = typename enable_if<(__i < tuple_size<_Tuple>::value),; ^; /opt/gcc/12.2.0/include/c++/12.2.0/bits/utility.h:49:12: note: declaration here is not visible; struct tuple_size;; ^; ```. Apparently, once the module is declared, it must also be enabled for C++14 and not restricted with `cplusplus17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12793:332,error,error,332,https://root.cern,https://github.com/root-project/root/pull/12793,1,['error'],['error']
Availability,"Since newer releases, TBrowser considerably slowed down when used through an X-forward. I tried on SL7, root6.20, gcc9.2, C++17 (LCG_97a) & SL7, root6.22, gcc4.8,C++11. These versions have considerably slowed down. All worked well until at least 6.08 (SL6,gcc4.9,c++1y,LCG_88). Minimum example (try from home):; ```; ssh -C -X lxplus.cern.ch; root -l; new TBrowser; ```; -> Slow !. Better:; ```; ssh -C -X lxplus.cern.ch; cd /cvmfs/sft.cern.ch/lcg/releases/LCG_80/ROOT/6.04.06/x86_64-cc7-gcc48-opt/bin; . thisroot.sh; root -l; new TBrowser; ```; -> good. This issue is probably related to the new --web option, or some anti-aliasing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6730:51,down,down,51,https://root.cern,https://github.com/root-project/root/issues/6730,2,['down'],['down']
Availability,"Since the LLVM upgrade, the following four tests:; ```; projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend; projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex; projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex; projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names; ```; fail with; ```; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: error: 'std::__is_same_uncvref<char [6], std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' has different definitions in different modules; first difference is defined here found 0 base classes; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: note: but in 'std.type_traits' found 1 base class; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12003:514,error,error,514,https://root.cern,https://github.com/root-project/root/issues/12003,1,['error'],['error']
Availability,"Since the beginning when 0 ranges were specified by Save method, ; half a bin was add to coordinate. But wrong number of bins was stored and ; therefore produced buffer was not able to use. Error was from very beginning - ; already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13949:190,Error,Error,190,https://root.cern,https://github.com/root-project/root/pull/13949,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"Since the differences to my [original repo](https://github.com/guitargeek/tmva-to-xgboost/blob/main/tmva2xgboost.cpp) are minimal, I think we don't lose much by closing this PR in order to clean up the list of open PRs a little bit. I don't think there is much of a usecase either: the TMVA xml format for BDTs is becoming increasingly rare, and in any case it can already be evaluated with ROOT. Also, I don't really see why ROOT needs yet another intermediate BDT representation. Is the existing TMVA BDT evaluator that reads the XML files not good enough? Before introducing new data classes and increasing the maintenance burden even more, why not bring the existing classes up to speed (although I think the usecase is not strong enough to actually to this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873#issuecomment-2043899538:614,mainten,maintenance,614,https://root.cern,https://github.com/root-project/root/pull/8873#issuecomment-2043899538,1,['mainten'],['maintenance']
Availability,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973061065:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973061065,1,['error'],['errors']
Availability,"Since the failing test (roottest-root-aclic-misc-runrelpath) is related to include path directive (and how they reach ACLiC), it is plausible that the failure is related. Could you verify whether or not it is?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352082562:151,failure,failure,151,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352082562,1,['failure'],['failure']
Availability,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12455:330,echo,echo,330,https://root.cern,https://github.com/root-project/root/issues/12455,1,['echo'],['echo']
Availability,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12456:188,Error,ErrorRecovery,188,https://root.cern,https://github.com/root-project/root/pull/12456,1,['Error'],['ErrorRecovery']
Availability,"Since there was no follow-up on the comments, no reply by the author on the ping, and now there are also merge conflicts, I'd suggest to close this PR. Thanks anyway @rtlprmft for your suggestion, and in case this becomes an issue for you again: feel free to open a GitHub issue or a new PR! Or reopen this one if you want. Cheers,; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6316#issuecomment-1883188180:76,ping,ping,76,https://root.cern,https://github.com/root-project/root/pull/6316#issuecomment-1883188180,1,['ping'],['ping']
Availability,"Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13889:20,avail,available,20,https://root.cern,https://github.com/root-project/root/pull/13889,2,['avail'],['available']
Availability,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8892:97,failure,failures,97,https://root.cern,https://github.com/root-project/root/issues/8892,2,"['Ping', 'failure']","['Ping', 'failures']"
Availability,"Since this is a very central part for fitting, you should see lots of test failures if you get it wrong.; Not, though, if you get it only slightly wrong, so keep thinking about tests. :-D. Good luck with your new project, there are lots of things to do! 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7126#issuecomment-773114579:75,failure,failures,75,https://root.cern,https://github.com/root-project/root/pull/7126#issuecomment-773114579,1,['failure'],['failures']
Availability,"Since we enabled warnings by default in rootcling, which pointed; out a bunch of warnings in the code base, we also set rootcling; into a mode in which it is unable to ever fail. The reason for this is this faulty if statement. If we enable warnings,; we set the errorIgnoreLevel to kWarning. But this if statement only records; any errors if the errorIgnoreLevel is NOT kWarning (which is between; kThrowOnWarning and kError). The new if statements only checks if the the printed message is an error; or higher (which would include any kind of fatal error). If the errorIgnoreLevel; is set higher, we already correctly filter this at the start of the method; where we return on filtered messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831:207,fault,faulty,207,https://root.cern,https://github.com/root-project/root/pull/831,7,"['error', 'fault']","['error', 'errorIgnoreLevel', 'errors', 'faulty']"
Availability,Single failure unrelated to Cloudfare update.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-382170125:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-382170125,1,['failure'],['failure']
Availability,"Skip all DLL in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And an even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/6156,2,['error'],['error']
Availability,"Skip all DLLs in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And a even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6163:122,error,error,122,https://root.cern,https://github.com/root-project/root/pull/6163,2,['error'],['error']
Availability,"SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11433:1276,error,error,1276,https://root.cern,https://github.com/root-project/root/pull/11433,2,['error'],['error']
Availability,Small fix for geometry state recovery in VMC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3882:29,recover,recovery,29,https://root.cern,https://github.com/root-project/root/pull/3882,1,['recover'],['recovery']
Availability,Small spelling error during explaining lhcbOpenData.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10371:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/10371,1,['error'],['error']
Availability,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python; import ROOT. def main():; ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601#issuecomment-2393259545:535,error,error,535,https://root.cern,https://github.com/root-project/root/issues/16601#issuecomment-2393259545,1,['error'],['error']
Availability,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5595:445,error,error,445,https://root.cern,https://github.com/root-project/root/pull/5595,2,['error'],['error']
Availability,"So @bluehood , about the cases you described, my comments:; This is the situation as I understand it:. - horrible template errors in instantiating a RVec: fixed and tested -> YES; - reading vector<bool> in RDataFrame:; - with jitting: fixed and tested -> YES; - in compiled code: not tested but works..? -> YES; - reading bool[n] branches: now impossible..? -> YES; - writing a bool[n] with RDataFrame: now impossible..? -> YES; - writing vector<bool> with RDataFrame:; - with jitting: not tested but works..? -> YES; - in compiled code: tested and works -> YES. I agree that increasing the test coverage is necessary for the cases ""not tested but works"" given that if something is not tested, it does not work :) (even if we not testing that is independent from this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2186#issuecomment-396541538:123,error,errors,123,https://root.cern,https://github.com/root-project/root/pull/2186#issuecomment-396541538,1,['error'],['errors']
Availability,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1923740442:312,error,errors,312,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1923740442,2,['error'],['errors']
Availability,"So I actually found that the problem can be fixed by reverting some changes we made to the xRooNodeIterator back in December, where we were trying to fix a cppcheck error about returning a temporary. The problem is in fact a one line fix in xRooNode.h, replacing:. ```; decltype(auto) operator*() const; ```. with. ```; const std::shared_ptr<xRooNode>& operator*() const; ```. This makes cppcheck unhappy again, but the problem is fixed. I've actually now asked about this cppcheck error on https://stackoverflow.com/questions/78349719 and waiting to see if anyone responds - so far one person suggests it could be a false positive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15269#issuecomment-2066123594:165,error,error,165,https://root.cern,https://github.com/root-project/root/issues/15269#issuecomment-2066123594,2,['error'],['error']
Availability,So I can reproduce the error in 32 bit mode. But the 64 bit mode fails as previously reported. Le's see how it goes after the LLVM upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1198009617:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1198009617,1,['error'],['error']
Availability,"So I cannot reproduce the error with the recipe you give. But looking at you log file, I see you set more environment variables. That is:; ```; set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; ```; Without those variables the build works just fine. This is maybe related to https://github.com/root-project/root/issues/9445; I'm now trying with the same variables to see if it fails the same",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321#issuecomment-2077012452:26,error,error,26,https://root.cern,https://github.com/root-project/root/issues/15321#issuecomment-2077012452,1,['error'],['error']
Availability,"So I deleted my freshly installed ROOT and pulled the newest version from the repository. When running. `cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src`. I got an error. `-- Looking for VDT; CMake Error at cmake/modules/FindVdt.cmake:48 (file):; file STRINGS file ""/opt/root/install/include/vdt/vdtMath.h"" cannot be read.; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1591 (find_package); CMakeLists.txt:327 (include). -- Could NOT find Vdt: Found unsuitable version ""0.3"", but required is at least ""0.4"" (found /opt/root/install/include); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; `. As I wrote, the directory */opt/root/install* does not exist. When running the same command for the second time, the error is gone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101#issuecomment-1609124224:200,error,error,200,https://root.cern,https://github.com/root-project/root/issues/13101#issuecomment-1609124224,3,"['Error', 'error']","['Error', 'error']"
Availability,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz; 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787148271:289,down,download,289,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787148271,1,['down'],['download']
Availability,So a) this needs some refinement :-) (see the compilation errors) and b) the functions you mention are defined in the source file. They do not need to show up in the Linkdef file anymore; these are leftovers from ROOT 5.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1510#issuecomment-357778946:58,error,errors,58,https://root.cern,https://github.com/root-project/root/pull/1510#issuecomment-357778946,1,['error'],['errors']
Availability,So far we only trigger an assertion in LLVM when we can't find the; modulemap file which is not very user-friendly. With this patch; we actually prints an error message in this situation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/527:155,error,error,155,https://root.cern,https://github.com/root-project/root/pull/527,1,['error'],['error']
Availability,"So far, the pdf normalization could not be done in RooBatchCompute,; because it requires the tracking of evaluation errors. This could not be implemented in the current batchcompure library,; because information could not flow back from the compute functions to; the calling object. This is now made possible by taking the `ExtraArgs`; array by reference, meaning it can also be used as an output parameter; by the compute function to return for example the number of evaluation; errors. This change greatly helps to speed up the BatchMode, expecially on the; GPU because the normalization can now be done on the device. To be able to also do the NaN-packing on the GPU device, the `RooNaNPacker` helper class was moved to `batchcompute`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12677:116,error,errors,116,https://root.cern,https://github.com/root-project/root/pull/12677,2,['error'],['errors']
Availability,"So far, the whole HistFactory package was not built if `xml=OFF`, even; if only one part of HistFactory uses TXML: the `ConfigParser` class and; it's executable wrapper `hist2workspace`. With this commit, we only refrain from building the ConfigParser and the; hist2workspace executable if `xml=OFF`, but still build the rest of; HistFactory. The reason for doing this now was the RooFitHS3 package: it depends on; HistFactory, but doesn't use the XML-specific classes. After this; commit, RooFitHS3 builds also with `xml=OFF`. The RooStats tutorials that depend on `hist2workspace` are now also; disabled if XML is not ON. This PR should fix the compiler errors reported on the forum:; https://root-forum.cern.ch/t/installing-root-error-on-ubuntu/49146",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10104:656,error,errors,656,https://root.cern,https://github.com/root-project/root/pull/10104,2,['error'],"['error-on-ubuntu', 'errors']"
Availability,"So far, we have been unable to come up with a reliable way to detect runtime_cxxmodules. The problem is that one can detect easily if ROOT was built with -Druntime_cxxmodules=On, however, the system can have a module which cannot load successfully (due to for example missing requirements). In that case, the implementation will switch back to non-modules. Short answer, yes we can provide such API, however, that would not be 100% reliable. A reliable API should work on per-library basis. It should check if we are in running in runtime_cxxmodules mode, if there is a prebuilt pcm file for this library and if it has fulfilled requirements. In essence that'd be loading of the module in dry-run mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-434252716:46,reliab,reliable,46,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-434252716,3,['reliab'],['reliable']
Availability,"So for Windows, on Jenkins, the error was `Out of diskspace` and in the new CI, the test failure is the same on both architectures: `gtest-core-metacling-test-TClingTest`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645#issuecomment-1985243411:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/14645#issuecomment-1985243411,2,"['error', 'failure']","['error', 'failure']"
Availability,"So here are the changes that I needed to make from the comments of the last pull request and some other changes:; 1) I've added the name for a enum constant because I realised when declaring kMyConstant = 42 that I didn't save the name.; 2) I've added some checks in the TCling to see if the TEnum and TEnumConstants are actually created, because when I run the test:; // MyEnumComment; enum EMyEnum {; kMyEnumConstant = 42 // enumConstantComment; };. int assertTEnum(); {. ```; if (!(TEnum*)gROOT->GetListOfEnums()->FindObject(""EMyEnum"")) {; Error (""TEnum"", ""Constructor of TEnum failure."");; return -1;; ```. }; It does return and Error. I tried that on the root[0] promp as well and the address of GetListOfEnum is not NULL(because the HashTable is created), but the address of FindObject is 0x0. ; Now I don't get the Errors of TEnum and TEnumConstant are not created..I wanted to check whether they are added to the fEnums and fGlobals, but Add() for TCollection is a void function. My best guess is that they are not added to the lists, maybe you can see why...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2:543,Error,Error,543,https://root.cern,https://github.com/root-project/root/pull/2,4,"['Error', 'failure']","['Error', 'Errors', 'failure']"
Availability,"So here's the main snippet:; ```cpp; root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(); Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available; Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available; Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available; Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available; Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available; (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0; root [1] auto options = c->GetWriteOptions();; root [2] options.SetCompression(0);; root [3] c->SetWriteOptions(options);; root [4] c->SetMaxEntries(200000);; root [5] c->Import().ThrowOnError();; ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`; - `output2.root` - nothing; - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`; - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:; ```bash; Apptainer> ls -al output*; -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root; -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root; -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root; -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root; ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12606#issuecomment-1499362551:250,avail,available,250,https://root.cern,https://github.com/root-project/root/issues/12606#issuecomment-1499362551,5,['avail'],['available']
Availability,"So indeed this other test does not work; ```python; import ROOT. ROOT.gInterpreter.Declare(r'''; struct A{; int mA{42};; A() {}; A(const A&) = delete;; template<typename T = int>; A(A &&) {}; };; int foo(A a = A{}) { return a.mA; }; '''). print(ROOT.foo()); ```; ```; input_line_36:18:45: error: call to deleted constructor of 'A'; new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));; ^~~~~~~~~~~~; input_line_35:5:5: note: 'A' has been explicitly marked deleted here; A(const A&) = delete;; ^; ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1917903939:289,error,error,289,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1917903939,1,['error'],['error']
Availability,"So it produces a ROOT file with any type of created object in it, then a user can download it? Is it a read-only file? What can users do with it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14614#issuecomment-1932205310:82,down,download,82,https://root.cern,https://github.com/root-project/root/pull/14614#issuecomment-1932205310,1,['down'],['download']
Availability,"So it wasn't what I initially thought, but it seems to work now on all platforms (except the spurious failure on Windows).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565#issuecomment-1826083108:102,failure,failure,102,https://root.cern,https://github.com/root-project/root/pull/13565#issuecomment-1826083108,1,['failure'],['failure']
Availability,"So now I can confirm that this breakage is introduced in https://reviews.llvm.org/D130058 . However, it seems that it's not a bug but a new diagnostic clang recently added. According to the description:; > [DR2338](https://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#2338) clarified that it was undefined behavior to set the value outside the range of the enumerations values for an enum without a fixed underlying type. We may want to fix this in our code as it's undefined behavior, but if not there's also an ongoing patch that downgrades this error to a warning: https://reviews.llvm.org/D131307",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128#issuecomment-1207349562:541,down,downgrades,541,https://root.cern,https://github.com/root-project/root/issues/11128#issuecomment-1207349562,2,"['down', 'error']","['downgrades', 'error']"
Availability,"So that's because `std::sqrt` doesn't have an overload for Vc types. The solution is the following:; ```c++; T SomeFunc() {; using std::sqrt;; return sqrt(fX);; }; ```; i.e. keep `sqrt` unqualified such that ADL (argument-dependent lookup, fixing Vc) can happen, but make `std::sqrt` available through the local (!) `using namespace std::` or better yet `using std::sqrt` if that builds everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822573883:284,avail,available,284,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822573883,1,['avail'],['available']
Availability,"So the current error handling is a bit messed up. What happens for my current test case is as follows:; -cppyy tries to instantiate the template from here: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L628; this call actually ""succeeds"" because the underlying instantiation call at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/LookupHelper.cpp#L1211-L1212 does not use the DefinitionRequired=true argument.; -As a result of this cppyy tries to call the function anyways at https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx#L632 which propagates through cling and eventually fails only because of the missing symbol, which is caught here:; https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L279-L280; (this is also the source of the ""IncrementalExecutor::executeFunction: symbol unresolved while linking"" output on stderr); -Finally cppyy catches the error only here, where the call to ```WrapperCall``` returns false: https://github.com/root-project/root/blob/180c8099bfb6ad753b8a698445351662f8c5ef1f/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L812-L814; But for functions which return a basic type or a pointer, the default value is actually just propagated through and the failure is never caught downstream. (ie for a pointer you get nullptr, for a signed integer or floating point type you get -1, and for an unsigned integer you get the max value because it wraps... To make matters worse, because the error is never caught in LookupHelper, the decl is never cleaned up, so if you try to lookup the function again, it will again spuriously succeed, but this time won't even emit the clang errors. In terms of solutions, it would ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1456059333:15,error,error,15,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1456059333,1,['error'],['error']
Availability,So the error is:; ```; CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919544338:7,error,error,7,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919544338,2,"['Error', 'error']","['Error', 'error']"
Availability,"So the problem happens at end Lumi so my guess is we had an exception and the system is trying to shut down and a task didn't run when it should have. So if I'm correct, then there would be a problem in CMSSW with not properly handling an exception. BUT it also means ROOT is now throwing an exception we can't handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814360927:103,down,down,103,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814360927,1,['down'],['down']
Availability,So there should only one real failure mac11.0/cxx17. What is special in this setup? Does it have python3 available or only python2?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336#issuecomment-870456745:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/pull/8336#issuecomment-870456745,2,"['avail', 'failure']","['available', 'failure']"
Availability,"So this change at least breaks when searching for nested namespaces, close it now...; ```; Processing /data/sftnight/workspace/root-pullrequests-build/root/tutorials/dataframe/df014_CSVDataSource.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-pullrequests-build/root/tutorials/dataframe/df014_CSVDataSource.C:30:20: error: no member named 'RDF' in namespace 'ROOT'; auto df = ROOT::RDF::MakeCsvDataFrame(fileName);; ~~~~~~^; CMake Error at /data/sftnight/workspace/root-pullrequests-build/build/RootTestDriver.cmake:227 (message):; error code: 1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1186049678:345,error,error,345,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1186049678,3,"['Error', 'error']","['Error', 'error']"
Availability,"So this fixes https://root-forum.cern.ch/t/f26-v6-10-00-patches-invalid-preprocessing-directive/26197 but if experiments rely on this line, then probably we are stuck on this side. We could at least try to make it less aggressive when searching (so, forbid some of the binary directories and CMake internal directories) to prevent these random configuration failures due to conflicting file names in the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/948#issuecomment-329091340:358,failure,failures,358,https://root.cern,https://github.com/root-project/root/pull/948#issuecomment-329091340,1,['failure'],['failures']
Availability,"So unfortunately, I have no way to check with the nightly (apart if I would change/redevelop a new program). The reason is that the workspace used in my example includes RooTwoSidedCBShape, which is unknown to root, so one needs to switch on first a tool that allows to access to RooTwoSidedCBShape. Such tools are not available with recent root versions.; So I just trust that it works but can't check. If so, maybe you may put as ""resolved"". With root 6.29.01, this gives :. [escalier@lxplus745 /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory] root -b -q ""Minimum.C+()"" |tee log_6.29.01; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 27 2023, 00:37:00 |; | From heads/master@v6-29-01-357-g4ef94f4 |; | With g++ (GCC) 11.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing Minimum.C+()...; Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/./Minimum_C.so. Survey Memory, beginning of program; res memory=481.965 Mbytes; vir memory=760.32 Mbytes; Warning in <TClass::Init>: no dictionary for class RooTwoSidedCBShape is available; Survey Memory, after open file; Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emula",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1406408841:319,avail,available,319,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1406408841,1,['avail'],['available']
Availability,"So we do have a real problem but where I am confused is ""if our failure case is due to unlocked locks in the child process"" why is it seen only at tear down? I.e. would the very first use of the lock resources be already held back. If using `_exit` is the workaround (solution?) then this means that no cleanup can be executed (even-though it might be needed). > However, I'm not sure if we need to close TFiles because the workers don't open them. Do we have complete control over what the child process executes (i.e. no user code whatsoever?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764813821:64,failure,failure,64,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764813821,2,"['down', 'failure']","['down', 'failure']"
Availability,"So, I cloned the ROOT repo in the folder `docgmake`. Then in that cloned folder I did `gh pr checkout 15160` to get this branch. Then `cd ..; mkdir docgmake-bin; cd docgmake-bin`. And in that bin folder I issued the command:. ```; cmake ../docgmake -Ddocu=ON -DDOCU_LOCATION=~/rootdoc -DDOCU_THREADS=8 -DDOCU_LOGFILE=/tmp/warnings.txt -DDOXYGEN_EXECUTABLE=/Users/couet/bin/doxygen -DDOCU_INPUT=""./mainpage.md;../../core""; ```. then `make -j8`. which gives me:. ```; ...; [100%] Built target modules_idx; [100%] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.23 seconds Cpu Time = 0.08 seconds; (TFile *) 0x7f77c78bd300; [100%] Built target hsimple; /bin/sh: -DROOT_COMMAND=\""ROOT_root_CMD-NOTFOUND\"": command not found; make[2]: *** [documentation/doxygen/CMakeFiles/Preparation] Error 127; make[1]: *** [documentation/doxygen/CMakeFiles/Preparation.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [100%] Built target PreparationPyz; make: *** [all] Error 2; ```; So it seems the `gmake` command was wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160#issuecomment-2074856358:817,Error,Error,817,https://root.cern,https://github.com/root-project/root/pull/15160#issuecomment-2074856358,3,['Error'],['Error']
Availability,"So, there were some developments: it seems that trying to catch an exception lead to no proper return for GetEntry.; Removing the try/except i have now a proper `-1` result on GetEntry and i do have this:; ```; ALIBUILD##[Monday 25.10.21 19:18] adrian@hal : ~/work/jalien-cache-manager (master) $; ./tfile_check.py parse broken_AO2D.root step 100000; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:0, badread=1, nerrors=1, basketnumber=0; DF_2913970966704988325/O2track::Entry(0) -> result: -1; ALIBUILD##[Monday 25.10.21 19:18] adrian@hal : ~/work/jalien-cache-manager (master) $; echo $?; 5; ```; The file unfortunately is quite big: https://cernbox.cern.ch/index.php/s/YM3ONVhEVa72KNX; and for reference the code that i use for testing is: https://github.com/adriansev/AO2Dproto/blob/0eff5a37fd0622767ee01b2b3da84b29e996a1ef/tfile_check.py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-951092615:351,Error,Error,351,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951092615,4,"['Error', 'echo']","['Error', 'echo']"
Availability,Solution: don't run PR builds while I reboot root.cern! I.e.: sorry! :-(. But shouldn't we wait until the PR builds are green? Simply restarting should help. Let me know!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3218#issuecomment-451901816:38,reboot,reboot,38,https://root.cern,https://github.com/root-project/root/pull/3218#issuecomment-451901816,1,['reboot'],['reboot']
Availability,Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7908:52,error,error,52,https://root.cern,https://github.com/root-project/root/pull/7908,1,['error'],['error']
Availability,Solves a bug in the TFITSIO code when reading a FITS binary table that; contained a column of type LOGICAL. The code in TFISTIO:LoadHDU only; had tests for column types of strings or numeric so it was failing with the error. “bad binary table datatype”,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1590:218,error,error,218,https://root.cern,https://github.com/root-project/root/pull/1590,1,['error'],['error']
Availability,Solving https://github.com/root-project/root/issues/9900 will remove the error and allow this PR to proceed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9883#issuecomment-1041012033:73,error,error,73,https://root.cern,https://github.com/root-project/root/pull/9883#issuecomment-1041012033,1,['error'],['error']
Availability,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11226:219,failure,failures,219,https://root.cern,https://github.com/root-project/root/pull/11226,1,['failure'],['failures']
Availability,Some RooAbsArg member functions were replaced a long time ago with drop-in alternatives that everyone uses since forever. We might as well deprecate these member functions now to slim down the interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16430:184,down,down,184,https://root.cern,https://github.com/root-project/root/pull/16430,1,['down'],['down']
Availability,"Some RooFit classes used the RooRealVar or RooAbsRealLValue types for; some of their parameters in the constructor, which is not as flexible as; RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were; encountered when investigating RooFit problems reported in the forum.; More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which; was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7325:181,down,down,181,https://root.cern,https://github.com/root-project/root/pull/7325,1,['down'],['down']
Availability,Some classes like TObjString do not inherit form TNamed and therefor do not have the; SetName method. This produces in the command line tools errors when such objects are; stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`.; https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9340:142,error,errors,142,https://root.cern,https://github.com/root-project/root/pull/9340,1,['error'],['errors']
Availability,Some files in the webgui tutorials should not be scanned by doxygen. They produce errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10508:82,error,errors,82,https://root.cern,https://github.com/root-project/root/pull/10508,1,['error'],['errors']
Availability,"Some headers and source files are needed from Math, and a header from Fit. I could copy them in as part of the build like I do now with the standalone dir? They have to be in the minuit directory, since they need to be available if ROOT is not there. Edit: That would be cleaner, going to try that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369568357:219,avail,available,219,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369568357,1,['avail'],['available']
Availability,"Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree; #include ""TTree.h""; #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/341:21,redundant,redundant,21,https://root.cern,https://github.com/root-project/root/pull/341,1,['redundant'],['redundant']
Availability,Some improvements to the tutorial which might help with the frequent CI failures (as seen for example at https://github.com/root-project/root/actions/runs/7648815978/job/20842218312),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14434:72,failure,failures,72,https://root.cern,https://github.com/root-project/root/pull/14434,1,['failure'],['failures']
Availability,"Some insight into when/where this actually causes a problem. Take for example a recent CMSSW release where we indeed end up with a bunch of stuff in the include path starting with ""/data/cmsbld/jenkins/..."". If I try to do anything with gSystem->CompileMacro then things are fine if /data/cmsbld doesn't exist on the machine where I'm running, but if I create that directory and set permissions to make it inaccessible then I get a permission denied error when compiling a macro. This also explains why I was having problems with this specifically in my singularity images, because in this case the build path was in /root/root_build, where /root still exists but is inaccessible by normal users in the final singularity image.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-967755729:450,error,error,450,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-967755729,1,['error'],['error']
Availability,"Some libraries are layered can depend on other libraries on a private paths. That is, libA can depend on libB which is neither on the LD_LIBRARY_PATH nor on a known system path. The posix linker injects ""variables"" such as @rpath which is expanded at link time to resolve the libraries on a relative path. Prior to this patch, cling's Dyld-based symbol resolution could not trace down such cases causing failures in symbol resolution when a symbol is only defined in libB (a private library). This patch implements the basic posix linker substitutions allowing cling's Dyld-based symbol resolution implementation to follow more closely the linker rules. ## Performance. |platform|test|master|PRv1|PRv2| mem master|mem PRv2|; |:--------|:---|:---------:|:-----------:|:-----------:|:-----------:|:-----------:|; |ubu20|roottest-python-pythonizations|6.5|6.55|6.65|342076|347168|; |ubu20|roottest-cling|112.8|114.53|181.26|411048|416036|; |ubu20|roottest-python|148.5|136.26|144.72|394292|397120|; |ubu20|roottest-root-hist|16.78|17.35|15.45|465156|235084|; |ubu20|roottest-root-math|28.28|27.89|27.40|424072|371256|; |ubu20|roottest-root-tree|462.84|510.59|465.79|796512|797992|; |ubu20|roottest-root-treeformula|117.53|129.16|114.44|261184|260168|; |ubu20|root-io-stdarray|66.90|67.89|65.71|263424|255120|; |ubu20|roottest-root-treeformula|117.55|129.10|; |osx 10.15|roottest-python-pythonizations|17.25|16.06|; |osx 10.15|roottest-cling|346.06|343.46|; |osx 10.15|roottest-root-hist|36.06|36.22|; |osx 10.15|roottest-root-math|49.78|52.42|; |osx 10.15|root-io-stdarray|119.32|118.73|. That PR should reduce the number of `stat` calls improving #7774. Kudos Alexander Penev (@alexander-penev).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969:380,down,down,380,https://root.cern,https://github.com/root-project/root/pull/6969,2,"['down', 'failure']","['down', 'failures']"
Availability,"Some more points gathered during a debug session:. - The problem appears only on ARM/Linux, not on ARM/Mac; - The streamer info output; ```; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; ```; does not seem to indicate a problem because the same list of streamer elements also contains the expected; ```; o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type; ```; - If the class `o2::tpc::CalArray<o2::tpc::PadFlags>` is added to the dictionaries (Linkdef), the stacktrace changes and the crash becomes reproducible. In this case, there is an error writing beyond vector boundaries.; - The next step is to try to reproduce the crash with a debug build of ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2315484053:595,error,error,595,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2315484053,1,['error'],['error']
Availability,Some of VC methods are marked as deprecated and causing compiler; warnings (or errors) even when methods are not used; Should solve already reported by @lmoneta here https://github.com/VcDevel/Vc/issues/253,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5833:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/5833,1,['error'],['errors']
Availability,"Some platforms have problems (rightfully so!) in finding symbols; from libCling.so, which is dlopened with RTLD_LOCAL. libCling should; me made available to RuntimeDyld, but priority should be given to; the main binary, i.e. the ""traditional"" symbol resolution. This is; achieved by injecting libCling as a symbol source into the; DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,; not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108:144,avail,available,144,https://root.cern,https://github.com/root-project/root/pull/6108,1,['avail'],['available']
Availability,Some tests are failing with `Error: Value cannot be null. (Parameter 'ContainerId')` not sure if it is my fault...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2401817859:29,Error,Error,29,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2401817859,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"Some tests are failing with modules such with redefinition errors; (for example `roottest-cling-parsing-scopeDict-build`). The reason for this is that we include all headers that form; the C++ module again to make sure the module is complete (some; rootcling invocations don't have all headers of the module as; arguments, most notably the Core module). The first inclusion; of these headers happens from the normal rootcling code. This patch changes this behavior that we only include the; *missing* headers that are necessary to make the C++ module; complete and not all headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1335:59,error,errors,59,https://root.cern,https://github.com/root-project/root/pull/1335,1,['error'],['errors']
Availability,Some tutorials had two `\author` lines. This generates the doxygen error:; ```; \endcond command within this file; ```; These double lines are replaced by the `\authors` single line.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10460:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/10460,1,['error'],['error']
Availability,"Some updates:. > Unfortunately I do not have access to such a system but if you can build with `-DLLVM_BUILD_TYPE=Debug` the function `isSharedLibrary` [here](https://github.com/root-project/root/blob/d75ee349cb75d743d41e99cca97d5ef230f9207e/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp#L248) should return `true` for `branchoverwrite`. > ; > If that is the case then there might be a problem with the Elf representation (or ACLiC is missing some compiler/linker flag). ```1: libFullPath = {static npos = 18446744073709551615, Data = 0x5555579a44b0 ""/build_root/roottest/root/dataframe/test_snapshot_manytasks"", Length = 59}; (gdb) p Error; $6 = {_M_value = 0, _M_cat = 0x7ffff7917180 <(anonymous namespace)::system_category_instance>}; (gdb) list; 260	 file_magic Magic;; 261	 const std::error_code Error = identify_magic(libFullPath, Magic);; 262	 if (exists); 263	 *exists = !Error;; 264	; 265	 return !Error &&; 266	#ifdef __APPLE__; 267	 (Magic == file_magic::macho_fixed_virtual_memory_shared_lib; 268	 || Magic == file_magic::macho_dynamically_linked_shared_lib; 269	 || Magic == file_magic::macho_dynamically_linked_shared_lib_stub; (gdb) p Magic; $7 = {V = llvm::file_magic::elf_shared_object}; ```. There is nothing wrong with the implementation per se. For some reason the system compiles the `test_snapshot_manytasks` executable with a file magic which corresponds to a shared object. Although, bash correctly recognizes the right kind:; ```file $ROOTSYS/lib/libCore.so; /build_root/lib/libCore.so: ELF 64-bit LSB shared object, x86-64, version 1 (GNU/Linux), dynamically linked, BuildID[sha1]=e29464343a374abe0b0e4149350d4a57f8383b3a, with debug_info, not stripped; [root@39b36d564292 dataframe]# file -i /build_root/roottest/root/dataframe/test_snapshot_manytasks; /build_root/roottest/root/dataframe/test_snapshot_manytasks: application/x-pie-executable; charset=binary```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-863174792:649,Error,Error,649,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-863174792,4,['Error'],['Error']
Availability,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10955:244,error,error,244,https://root.cern,https://github.com/root-project/root/pull/10955,1,['error'],['error']
Availability,"Sorry @bellenot that was my fault! I started the second-to last build before Rahul forked roottest. But for the last build he did it, and there were no Windows failures as far as I can tell.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766#issuecomment-815522475:28,fault,fault,28,https://root.cern,https://github.com/root-project/root/pull/7766#issuecomment-815522475,2,"['failure', 'fault']","['failures', 'fault']"
Availability,"Sorry @ferdymercury - let's do it! Can you ping me once you have resolved the conflicts, please, ideally outside GitHub (where I don't manage to survive with the notification volume...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1594752222:43,ping,ping,43,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1594752222,1,['ping'],['ping']
Availability,"Sorry @vgvassilev, I forgot to let `echo` escape the tabs :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/448:36,echo,echo,36,https://root.cern,https://github.com/root-project/root/pull/448,1,['echo'],['echo']
Availability,"Sorry Axel, what I meant is that if you take the first reproducer, the one linked in my first post, and in that code you replace `std::pair<int, MyClass>` with e.g. `std::array<MyClass, 2>` then the error vanishes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1118488300:199,error,error,199,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1118488300,1,['error'],['error']
Availability,"Sorry I first used yapf to format, then the remaining errors I fixed myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10862#issuecomment-1181238172:54,error,errors,54,https://root.cern,https://github.com/root-project/root/pull/10862#issuecomment-1181238172,1,['error'],['errors']
Availability,"Sorry I read the backtrace with brain on only now. As this happens too late, after libXrdCl.so was unloaded, can this be done say by a callback in the tear-down of xrootd-client or else in whatever TNetXNGFile's library is, through static destruction?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-890328845:156,down,down,156,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-890328845,1,['down'],['down']
Availability,"Sorry about that. I don't see how this change can lead to the errors you see, but anyway, how can I reproduce the error?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13793#issuecomment-1772186870:62,error,errors,62,https://root.cern,https://github.com/root-project/root/pull/13793#issuecomment-1772186870,2,['error'],"['error', 'errors']"
Availability,"Sorry for my late reply. Thank you very much for your answer. . I think using TArayD is an improvement than using double pointers, but I don't see any reason why not using a more standard std::vector. ; I understand also for the interface your preference for an API similar to the current TGraphAsymmError. Thank you for explaining the meaning of SetDimensionEY, I think the name is not super clear, I would maybe just call it SetEY. ; One comment on the passed array, I think the pointers should be passed as cont , since they will not be modified. . One other comment I have , I will not have a method to Set the error dimension. I think it will be better instead a AddError method that will increment by one the dimension and add all the point errors. This I think it will be more useful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558161625:615,error,error,615,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558161625,2,['error'],"['error', 'errors']"
Availability,"Sorry for not addressing this issue earlier. Although I don't remember the reasoning, I believe it was concluded that the CI should not be red on test errors. If this is to be changed all there is to it is changing [this line](https://github.com/root-project/root/blob/aae1cd064679f440ad80f39e4ee56bb0c1d9d396/.github/workflows/root-ci-config/build_root.py#LL252C22-L252C22):. ```diff. 251 if result != 0:; - 252 print_warning(""Some tests failed""); + 252 die(result, ""Some tests failed"", shell_log); ```. Would like @Axel-Naumann's input before closing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542341565:151,error,errors,151,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542341565,1,['error'],['errors']
Availability,"Sorry for the late reply!. I would like to understand why exactly the tests fail. We're dealing with summation errors like these all the time in RooFit. Imho, we need to understand as exactly as possible where they come from and then document that. If we cannot do that, then we should treat them as errors, until we understand the fundamental limits, e.g. from hardware summation implementations. I can well imagine that that is the root cause here, but I would like to see some hard confirmation of that. The reason I'm so insistent on this is that I've spent the past year trying to unravel subtle bugs involving multiple summations that may either fail because of implementation issues (like e.g. was the case for KahanSum) or because of fundamental limits in algorithms (Kahan summation also still has errors) or because of fundamental hardware limits or single vs double vs long double precision, etcetera. Trying to pin down exactly what is going on is a huge pain. Those are my 2 cents here, sorry for being a pain in the ass :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1505061910:111,error,errors,111,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1505061910,4,"['down', 'error']","['down', 'errors']"
Availability,"Sorry for the radio silence on this: other priorities took over and this wasn't a showstopper at the time. I have just verified the same failure with 66df8b8ee6b336197678950c4f9c83f2c479662a, and will apply the suggested patch to that and see where we get to.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377559624:137,failure,failure,137,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377559624,1,['failure'],['failure']
Availability,"Sorry! We should have not made the rapidyaml backend for RooFit JSON available in the release. It is not tested and only there for dev purposes. This PR will fix this:; https://github.com/root-project/root/pull/15247. I'll backport it to ROOT 6.32, 6.30 and 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15118#issuecomment-2061524144:69,avail,available,69,https://root.cern,https://github.com/root-project/root/issues/15118#issuecomment-2061524144,1,['avail'],['available']
Availability,"Sorry, I missed this before, please ping me in the issue description or add me as assignee next time to ensure I see it. Gentoo has `-fPIE` enabled by default in GCC, and I've had to make changes in ROOT already because of some tests failing due to that. If the patch fixes it for Arch, it should fix it for Gentoo. I can pick up the patch in 6.24.06, but I think this is important enough that a new patch release would be nice to make sure the fix hits as many people as possible. If there's a quick way to test this, let me know, I can test and report on the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-992271250:36,ping,ping,36,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-992271250,1,['ping'],['ping']
Availability,"Sorry, but I strongly disagree. `TH1F` implements `Fill(x, w)` via `AddBinContent(bin, w)`:; ```c++; void AddBinContent(Int_t bin, Double_t w) override; {; fArray[bin] += Float_t (w);; }; ```. If one wants to be warned about overflows, it could be changed to; ```c++; void AddBinContent(Int_t bin, Double_t w) override; {; float old = fArray[bin];; fArray[bin] += Float_t (w);; float inc = fArray[bin] - old;; if (inc != (float) w) { // could be done with a non-exact comparison with some tolerance; std::cerr << ""Warning: TH1F::Fill(...) failed to increment the bin due to limited floating point precision\n"";; }; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-2047035457:489,toler,tolerance,489,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-2047035457,1,['toler'],['tolerance']
Availability,"Sorry, it's my fault @HadrienG2 , I didn't have a fork of roottest, so the build on Windows failed. I fixed it, so it should build now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4931#issuecomment-582412105:15,fault,fault,15,https://root.cern,https://github.com/root-project/root/pull/4931#issuecomment-582412105,1,['fault'],['fault']
Availability,"Sorry, latest failures are probably me trying to make Jenkins rebase rather than checkout the merge head from GitHub. Please re-run if needed. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378#issuecomment-409211929:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2378#issuecomment-409211929,1,['failure'],['failures']
Availability,"Sorry, still no luck for me even after this change:; ```; [ 93%] Automatic MOC for target ROOTQt5WebDisplay; [ 93%] Built target ROOTQt5WebDisplay_autogen; [ 93%] Automatic MOC for target RootQt5WebObjs; [ 93%] Built target RootQt5WebObjs_autogen; [ 93%] Building CXX object gui/qt5webdisplay/CMakeFiles/RootQt5WebObjs.dir/RootQt5WebObjs_autogen/mocs_compilation.cpp.o; In file included from /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/mocs_compilation.cpp:2:0:; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebpage.cpp:13:2: error: #error ""This file was generated using the moc from 4.8.7. It""; #error ""This file was generated using the moc from 4.8.7. It""; ^~~~~; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebpage.cpp:14:2: error: #error ""cannot be used with the include files from this version of Qt.""; #error ""cannot be used with the include files from this version of Qt.""; ^~~~~; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebpage.cpp:15:2: error: #error ""(The moc has changed too much.)""; #error ""(The moc has changed too much.)""; ^~~~~; In file included from /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/mocs_compilation.cpp:3:0:; /home/amadio/build/gcc7.3/gui/qt5webdisplay/RootQt5WebObjs_autogen/EWIEGA46WW/moc_rootwebview.cpp:13:2: error: #error ""This file was generated using the moc from 4.8.7. It""; #error ""This file was generated using the moc from 4.8.7. It""; ^~~~~; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-367680662:590,error,error,590,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-367680662,12,['error'],['error']
Availability,"Sorry, there is too much noise in the CI results. What is the actual error with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16505#issuecomment-2373194056:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/16505#issuecomment-2373194056,1,['error'],['error']
Availability,"Sorry, this is not true. The man pages include rootcling, hadd, talk about makefiles, root5, pq2 caches and many other things. This is not minimal maintenance. As a matter of fact, it is already outdated and this since a long while. ; Here I am talking about improving documentation concentrating efforts on a single source of information, the total amount of work needed is the same but differently organised...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487#issuecomment-357188999:147,mainten,maintenance,147,https://root.cern,https://github.com/root-project/root/pull/1487#issuecomment-357188999,1,['mainten'],['maintenance']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec ; - [2022-09-01T16:38:07.874Z] 780/2403 Test #489: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-09-01T16:38:09.776Z] 785/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.68 sec ; - [2022-09-01T16:38:10.805Z] 786/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.40 sec ; - [2022-09-01T16:38:11.099Z] 789/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec ; - [2022-09-01T16:38:11.401Z] 790/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec ; - [2022-09-01T16:38:11.709Z] 793/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.52 sec ; - [2022-09-01T16:38:11.709Z] 794/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.64 sec ; - [2022-09-01T16:38:12.006Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec ; - [2022-09-01T16:38:23.320Z] 969/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1234536478:1332,Error,Error,1332,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1234536478,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.73 sec ; - [2022-08-24T14:46:54.099Z] 785/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.80 sec ; - [2022-08-24T14:46:55.672Z] 789/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.61 sec ; - [2022-08-24T14:46:55.672Z] 790/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.64 sec ; - [2022-08-24T14:46:56.302Z] 791/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.59 sec ; - [2022-08-24T14:46:56.302Z] 792/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.65 sec ; - [2022-08-24T14:46:56.302Z] 793/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-24T14:46:56.903Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.61 sec ; - [2022-08-24T14:47:07.739Z] 969/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 2 more. ### Warnings:; - [2022,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1225844891:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1225844891,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.73 sec ; - [2022-08-31T06:55:29.689Z] 780/2403 Test #490: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-31T06:55:31.768Z] 786/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.87 sec ; - [2022-08-31T06:55:32.067Z] 788/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.49 sec ; - [2022-08-31T06:55:32.678Z] 789/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.71 sec ; - [2022-08-31T06:55:32.678Z] 790/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.61 sec ; - [2022-08-31T06:55:33.268Z] 793/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.67 sec ; - [2022-08-31T06:55:33.549Z] 794/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.66 sec ; - [2022-08-31T06:55:33.549Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec . And 12 more. ### Failing tests:; -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232546837:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232546837,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.74 sec ; - [2022-07-15T14:55:07.781Z] 779/2390 Test #488: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.68 sec ; - [2022-07-15T14:55:09.045Z] 783/2390 Test #495: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.60 sec ; - [2022-07-15T14:55:09.045Z] 784/2390 Test #492: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.34 sec ; - [2022-07-15T14:55:09.724Z] 786/2390 Test #496: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-07-15T14:55:09.724Z] 787/2390 Test #497: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-07-15T14:55:10.007Z] 790/2390 Test #499: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.35 sec ; - [2022-07-15T14:55:10.007Z] 791/2390 Test #498: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 11 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df014_CSVDataSource](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149975/testReport/projectroot/runtutorials/tutorial_dataframe_df014_CSVDataSource/); - [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1185637144:1788,Error,Error,1788,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1185637144,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.82 sec ; - [2022-09-02T04:57:50.736Z] 787/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.72 sec ; - [2022-09-02T04:57:51.290Z] 789/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-09-02T04:57:51.290Z] 790/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.63 sec ; - [2022-09-02T04:57:51.551Z] 791/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec ; - [2022-09-02T04:57:51.816Z] 793/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-09-02T04:57:52.108Z] 794/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.63 sec ; - [2022-09-02T04:57:52.108Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-09-02T04:58:04.140Z] 968/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.48 sec . And 2 more. ### Failing tests:; - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1235072331:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1235072331,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.85 sec ; - [2022-09-02T15:20:20.327Z] 779/2403 Test #489: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.47 sec ; - [2022-09-02T15:20:22.340Z] 785/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.90 sec ; - [2022-09-02T15:20:23.264Z] 788/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.53 sec ; - [2022-09-02T15:20:23.264Z] 791/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.71 sec ; - [2022-09-02T15:20:23.556Z] 792/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.55 sec ; - [2022-09-02T15:20:23.823Z] 793/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.42 sec ; - [2022-09-02T15:20:23.823Z] 794/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-09-02T15:20:23.823Z] 795/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.49 sec ; - [2022-09-02T15:20:36.166Z] 968/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1235640137:1332,Error,Error,1332,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1235640137,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.87 sec ; - [2022-08-31T13:14:06.058Z] 786/2403 Test #493: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.90 sec ; - [2022-08-31T13:14:06.663Z] 787/2403 Test #497: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.58 sec ; - [2022-08-31T13:14:07.214Z] 790/2403 Test #500: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-08-31T13:14:07.483Z] 792/2403 Test #502: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.41 sec ; - [2022-08-31T13:14:07.483Z] 793/2403 Test #501: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 0.46 sec ; - [2022-08-31T13:14:07.773Z] 795/2403 Test #503: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.47 sec ; - [2022-08-31T13:14:08.070Z] 796/2403 Test #504: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.52 sec ; - [2022-08-31T13:14:19.579Z] 969/2403 Test #673: tutorial-graphs-timeSeriesFromCSV_TDF .............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.45 sec . And 2 more. ### Failing tests:; - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232937826:1560,Error,Error,1560,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232937826,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - [2022-09-02T04:20:55.637Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-09-02T04:21:05.200Z] 598/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.07 sec ; - [2022-09-02T04:21:16.472Z] 602/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.07 sec ; - [2022-09-02T04:21:19.349Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - [2022-09-02T04:21:20.724Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.04 sec ; - [2022-09-02T04:21:21.654Z] 607/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-09-02T04:21:22.590Z] 608/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.98 sec ; - [2022-09-02T04:21:23.526Z] 609/2346 Test #486: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 0.97 sec ; - [2022-09-02T04:22:10.593Z] 776/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1235066161:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1235066161,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.04 sec ; - [2022-07-15T15:26:24.132Z] 587/2331 Test #464: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.53 sec ; - [2022-07-15T15:26:24.702Z] 588/2331 Test #465: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-07-15T15:26:28.247Z] 591/2331 Test #468: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.38 sec ; - [2022-07-15T15:26:43.588Z] 595/2331 Test #472: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.04 sec ; - [2022-07-15T15:26:46.555Z] 598/2331 Test #475: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.11 sec ; - [2022-07-15T15:26:47.489Z] 599/2331 Test #476: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - [2022-07-15T15:26:48.870Z] 600/2331 Test #477: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-07-15T15:26:49.700Z] 603/2331 Test #478: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.98 sec ; - [2022-07-15T15:26:50.266Z] 604/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969#issuecomment-1185681094:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10969#issuecomment-1185681094,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec ; - [2022-08-31T07:19:58.988Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.54 sec ; - [2022-08-31T07:19:59.565Z] 595/2346 Test #472: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 0.57 sec ; - [2022-08-31T07:20:06.139Z] 599/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.26 sec ; - [2022-08-31T07:20:17.073Z] 602/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.94 sec ; - [2022-08-31T07:20:23.139Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - [2022-08-31T07:20:24.076Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.13 sec ; - [2022-08-31T07:20:25.208Z] 608/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.13 sec ; - [2022-08-31T07:20:25.776Z] 609/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-31T07:20:26.344Z] 611/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232585531:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232585531,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.10 sec ; - [2022-08-24T15:12:42.551Z] 593/2345 Test #470: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-24T15:12:50.514Z] 597/2345 Test #474: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 2.35 sec ; - [2022-08-24T15:13:04.204Z] 601/2345 Test #478: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.13 sec ; - [2022-08-24T15:13:07.742Z] 604/2345 Test #481: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-24T15:13:08.677Z] 605/2345 Test #482: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec ; - [2022-08-24T15:13:09.612Z] 606/2345 Test #483: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec ; - [2022-08-24T15:13:10.987Z] 607/2345 Test #484: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.02 sec ; - [2022-08-24T15:13:11.814Z] 609/2345 Test #485: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - [2022-08-24T15:14:00.425Z] 775/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1225908029:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1225908029,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec ; - [2022-08-31T14:24:42.631Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.56 sec ; - [2022-08-31T14:24:51.988Z] 598/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.09 sec ; - [2022-08-31T14:25:05.267Z] 603/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.33 sec ; - [2022-08-31T14:25:08.104Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.05 sec ; - [2022-08-31T14:25:09.493Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.14 sec ; - [2022-08-31T14:25:10.428Z] 607/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.12 sec ; - [2022-08-31T14:25:11.364Z] 608/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-31T14:25:12.739Z] 609/2346 Test #486: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.08 sec ; - [2022-08-31T14:26:02.990Z] 776/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1233050022:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1233050022,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.19 sec ; - [2022-09-01T17:02:33.120Z] 594/2346 Test #471: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 0.57 sec ; - [2022-09-01T17:02:42.341Z] 598/2346 Test #475: tutorial-dataframe-df018_customActions ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.46 sec ; - [2022-09-01T17:02:55.971Z] 602/2346 Test #479: tutorial-dataframe-df022_useKahan .................................................................***Failed Error regular expression found in output. Regex=[: error:] 3.32 sec ; - [2022-09-01T17:02:58.726Z] 605/2346 Test #482: tutorial-dataframe-df025_RNode ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.10 sec ; - [2022-09-01T17:02:59.663Z] 606/2346 Test #483: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.10 sec ; - [2022-09-01T17:03:00.596Z] 607/2346 Test #484: tutorial-dataframe-df028_SQliteIPLocation .........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - [2022-09-01T17:03:01.531Z] 608/2346 Test #485: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec ; - [2022-09-01T17:03:02.906Z] 609/2346 Test #486: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.05 sec ; - [2022-09-01T17:03:52.681Z] 776/2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1234585564:1319,Error,Error,1319,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1234585564,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.97 sec ; - [2020-06-10T22:20:31.348Z] 644/1992 Test #338: tutorial-dataframe-df015_LazyDataSource ...........................................................***Failed Error regular expression found in output. Regex=[: error:] 1.89 sec ; - [2020-06-10T22:20:37.348Z] 652/1992 Test #344: tutorial-dataframe-df021_createTGraph .............................................................***Failed Error regular expression found in output. Regex=[: error:] 1.76 sec ; - [2020-06-10T22:20:39.777Z] 656/1992 Test #349: tutorial-dataframe-df027_SQliteDependencyOverVersion ..............................................***Failed Error regular expression found in output. Regex=[: error:] 1.51 sec ; - [2020-06-10T22:20:40.053Z] 657/1992 Test #351: tutorial-dataframe-df029_SQlitePlatformDistribution ...............................................***Failed Error regular expression found in output. Regex=[: error:] 1.16 sec ; - [2020-06-10T22:20:40.981Z] 660/1992 Test #352: tutorial-dataframe-df030_SQliteVersionsOfROOT .....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.30 sec ; - [2020-06-10T22:20:42.149Z] 665/1992 Test #355: tutorial-dataframe-df102_NanoAODDimuonAnalysis ....................................................***Failed Error regular expression found in output. Regex=[: error:] 1.39 sec . And 3 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86347/testReport/projectroot.tree.dataframe/test/gtest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-642302168:2154,Error,Error,2154,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-642302168,1,['Error'],['Error']
Availability,Source ........................................................***Failed Error regular expression found in output. Regex=[: error:] 2.75 sec ; - [2022-02-15T16:45:02.047Z] 738/2249 Test #446: tutorial-dataframe-df017_vecOpsHEP ................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.73 sec ; - [2022-02-15T16:45:02.877Z] 740/2249 Test #448: tutorial-dataframe-df019_Cache ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.25 sec ; - [2022-02-15T16:45:03.457Z] 744/2249 Test #443: tutorial-dataframe-df014_CSVDataSource ............................................................***Failed Error regular expression found in output. Regex=[: error:] 3.74 sec ; - [2022-02-15T16:45:04.268Z] 748/2249 Test #459: tutorial-dataframe-df031_Stats ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.32 sec ; - [2022-02-15T16:45:04.792Z] 750/2249 Test #445: tutorial-dataframe-df016_vecOps ...................................................................***Failed Error regular expression found in output. Regex=[: error:] 4.70 sec . And 25 more. ### Failing tests:; - [projectroot.runtutorials.tutorial_dataframe_df005_fillAnyObject](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137516/testReport/projectroot/runtutorials/tutorial_dataframe_df005_fillAnyObject/); - [projectroot.runtutorials.tutorial_dataframe_df000_simple](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137516/testReport/projectroot/runtutorials/tutorial_dataframe_df000_simple/); - [projectroot.runtutorials.tutorial_dataframe_df013_InspectAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/137516/testReport/projectroot/runtutorials/tutorial_dataframe_df013_InspectAnalysis/); - [projectroot.ru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895#issuecomment-1040550626:2246,Error,Error,2246,https://root.cern,https://github.com/root-project/root/pull/9895#issuecomment-1040550626,1,['Error'],['Error']
Availability,"Speaking of `std::pair`, it might not be related but I just now spotted an error message which wasn't present with 6.20 when calling `GetStreamerInfo()` on two of our classes:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<vector<Belle2::TOPPDFCollection::Gaussian>,512> >::second from type: array<vector<Belle2::TOPPDFCollection::Gaussian>,512> to type: vector<Belle2::TOPPDFCollection::Gaussian>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert pair<int,array<float,512> >::second from type: array<float,512> to type: array<float,512>, skip element; ```; where the members in the class are `std::map<int, array<...>>` (Gaussian is just a struct of 3 floats). Now this could be something different but it does strike me as odd because it also happens for `std::pair`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960#issuecomment-833273551:75,error,error,75,https://root.cern,https://github.com/root-project/root/issues/7960#issuecomment-833273551,1,['error'],['error']
Availability,"Speaking with my Gentoo hat here, but for a distro, I think there's mostly no problem (I didn't have to make any changes to the package for ROOT). However, other software will likely see failures if they try to parse the version for whatever reason. But semantic versioning is much more than the format of the version number itself, so I'm wondering if ROOT will now really control which kinds of changes will make it to patch releases such that they don't change any interface in a way that code compiled for ROOT 6.30.00 still works without recompilation with 6.30.XX.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068#issuecomment-1830057296:187,failure,failures,187,https://root.cern,https://github.com/root-project/root/issues/14068#issuecomment-1830057296,1,['failure'],['failures']
Availability,"Sporadic test failures are caused by the randomness of the test input.; (For some inputs the training does not converge). This patch ""fixes""; this by removing the randomness from the input to the tests. One source of randomness still remains, the dataloader shuffles the; batches internally, relying on a source of randomness that is not; reachable from the outside. However, the variability in test output is _significantly_ reduced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2251,1,['failure'],['failures']
Availability,"Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. ; Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:; ```cpp; RResult<void> validRes = FallibleVoidFn();; if (!validRes) { ; validRes.Throw(); ; }; ```. After:; ```cpp; FallibleVoidFn().ThrowOnError(); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5975:166,error,error,166,https://root.cern,https://github.com/root-project/root/pull/5975,3,['error'],['error']
Availability,Spurious error message when reading a `char` from a `TTreeReader<signed char>`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11837:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/11837,1,['error'],['error']
Availability,Start 1172: tutorial-roofit-rf304_uncorrprod-py; 17:06:40 1253/2373 Test #1159: tutorial-roofit-rf204a_extendedLikelihood-py ...................................................... Passed 10.42 sec; 17:06:40 Start 1173: tutorial-roofit-rf305_condcorrprod-py; 17:06:40 1254/2373 Test #1161: tutorial-roofit-rf205_compplot-py .................................................................***Failed Error regular expression found in output. Regex=[Error in] 10.70 sec; 17:06:40 Start 1174: tutorial-roofit-rf306_condpereventerrors-py; 17:06:40 1255/2373 Test #1165: tutorial-roofit-rf209_anaconv-py ..................................................................***Failed Error regular expression found in output. Regex=[Error in] 9.83 sec; 17:06:40 Start 1175: tutorial-roofit-rf307_fullpereventerrors-py; 17:06:40 1256/2373 Test #1164: tutorial-roofit-rf208_convolution-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 10.34 sec; 17:06:40 Start 1176: tutorial-roofit-rf308_normintegration2d-py; 17:06:41 1257/2373 Test #1148: tutorial-roofit-rf104_classfactory-py .............................................................***Failed Error regular expression found in output. Regex=[Error in] 21.69 sec; 17:06:42 Start 1177: tutorial-roofit-rf309_ndimplot-py; 17:06:44 1258/2373 Test #1166: tutorial-roofit-rf210_angularconv-py ..............................................................***Failed Error regular expression found in output. Regex=[Error in] 9.76 sec; 17:06:44 Start 1178: tutorial-roofit-rf310_sliceplot-py; 17:06:49 1259/2373 Test #1168: tutorial-roofit-rf212_plottingInRanges_blinding-py ................................................***Failed Error regular expression found in output. Regex=[Error in] 11.97 sec; 17:06:49 Start 1179: tutorial-roofit-rf311_rangeplot-py; 17:06:49 1260/2373 Test #1170: tutorial-roofit-rf302_utilfuncs-py ....................................................,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12536#issuecomment-1482508642:1348,Error,Error,1348,https://root.cern,https://github.com/root-project/root/pull/12536#issuecomment-1482508642,1,['Error'],['Error']
Availability,"Starting with the git clone --branch v6-22-00-patches https://github.com/root-project/root.git root_src branch, I identified the changes described above. However, on the RPi4 build I ran into the atomic problems. I used a simple fix to get around them. I used the standard cmake -DCMAKE_INSTALL_PREFIX=../install -DPYTHON_EXECUTABLE=/usr/bin/python3 ../root_src and when I ran into an unresolved issue, like this one:; TFile.cxx:(.text+0xb5ec): undefined reference to `__atomic_fetch_add_8'; collect2: error: ld returned 1 exit status; make[2]: *** [io/io/CMakeFiles/RIO.dir/build.make:585: lib/libRIO.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:23297: io/io/CMakeFiles/RIO.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; I went and added this library to the end of the line in the corresponding link.txt file:; /usr/lib/arm-linux-gnueabihf/libatomic.so.1; for these link.txt files under the build directory:; vi io/io/CMakeFiles/RIO.dir/link.txt; vi net/net/CMakeFiles/Net.dir/link.txt; vi tree/tree/CMakeFiles/Tree.dir/link.txt; vi net/netx/CMakeFiles/Netx.dir/link.txt; vi net/netxng/CMakeFiles/NetxNG.dir/link.txt; vi proof/proof/CMakeFiles/Proof.dir/link.txt; After each edit, I kept running cmake --build . -- install -j4 and eventually the build completed successfully.; Furthermore, I use ROOT with a jupyter notebook server I run on the RPi4 with systemd, so in place of; source /home/pi/root/install/bin/thisroot.sh (which I do use in the .bashrc for New Terminal), I added ; and EnvironmentFile variable EnvironmentFile=/home/pi/root/thisroot.conf; which contained:; JUPYTER_CONFIG_DIR=/home/pi/root/install/etc/notebook; MANPATH=/home/pi/root/install/man:/usr/local/man:/usr/local/share/man:/usr/share/man; SHLIB_PATH=/home/pi/root/install/lib; DYLD_LIBRARY_PATH=/home/pi/root/install/lib; CMAKE_PREFIX_PATH=/home/pi/root/install; PYTHONPATH=/home/pi/root/install/lib; LIBPATH=/home/pi/root/install/lib; JUPYTER_PATH=/home/pi/root/install/etc/notebook; ROOTSYS=/home/pi/root/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-718133063:502,error,error,502,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-718133063,4,"['Error', 'error']","['Error', 'error']"
Availability,"Status update:; With the latest modifications for multithreading (latest doxygen master build from today is needed, where some bugs were fixed), and EXCLUDING the tutorials in the make-input.sh, I managed to reduce the build time down to 42 minutes with 8 threads.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1055977012:230,down,down,230,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1055977012,1,['down'],['down']
